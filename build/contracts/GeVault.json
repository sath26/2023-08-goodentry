{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_treasury",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "roeRouter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_uniswapPool",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "poolId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "weth",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_baseTokenIsToken0",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "ticker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "ModifyTick",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "ticker",
          "type": "address"
        }
      ],
      "name": "PushTick",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tickIndex",
          "type": "uint256"
        }
      ],
      "name": "Rebalance",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isEnabled",
          "type": "bool"
        }
      ],
      "name": "SetEnabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "baseFeeX4",
          "type": "uint256"
        }
      ],
      "name": "SetFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "treasury",
          "type": "address"
        }
      ],
      "name": "SetTreasury",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tvlCap",
          "type": "uint256"
        }
      ],
      "name": "SetTvlCap",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "ticker",
          "type": "address"
        }
      ],
      "name": "ShiftTick",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "WETH",
      "outputs": [
        {
          "internalType": "contract IWETH",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseFeeX4",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseTokenIsToken0",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getActiveTickIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "activeTickIndex",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "increaseToken0",
          "type": "bool"
        }
      ],
      "name": "getAdjustedBaseFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "adjustedBaseFeeX4",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getReserves",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount0",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount1",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTVL",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "valueX8",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getTickBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTickLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "len",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestAnswer",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "priceX8",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lendingPool",
      "outputs": [
        {
          "internalType": "contract ILendingPool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "modifyTick",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nearbyRanges",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oracle",
      "outputs": [
        {
          "internalType": "contract IPriceOracle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolMatchesOracle",
      "outputs": [
        {
          "internalType": "bool",
          "name": "matches",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tr",
          "type": "address"
        }
      ],
      "name": "pushTick",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rebalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newBaseFeeX4",
          "type": "uint256"
        }
      ],
      "name": "setBaseFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_isEnabled",
          "type": "bool"
        }
      ],
      "name": "setEnabled",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newTreasury",
          "type": "address"
        }
      ],
      "name": "setTreasury",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newTvlCap",
          "type": "uint256"
        }
      ],
      "name": "setTvlCap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tr",
          "type": "address"
        }
      ],
      "name": "shiftTick",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tickIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ticks",
      "outputs": [
        {
          "internalType": "contract TokenisableRange",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token0",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token1",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "treasury",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tvlCap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniswapPool",
      "outputs": [
        {
          "internalType": "contract IUniswapV3Pool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/GeVault.sol",
    "10": "contracts/lib/LiquidityAmounts.sol",
    "11": "contracts/lib/TickMath.sol",
    "12": "contracts/openzeppelin-solidity/contracts/access/Ownable.sol",
    "17": "contracts/openzeppelin-solidity/contracts/proxy/beacon/BeaconProxy.sol",
    "18": "contracts/openzeppelin-solidity/contracts/proxy/beacon/IBeacon.sol",
    "19": "contracts/openzeppelin-solidity/contracts/security/ReentrancyGuard.sol",
    "20": "contracts/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
    "21": "contracts/openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
    "22": "contracts/openzeppelin-solidity/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "23": "contracts/openzeppelin-solidity/contracts/token/ERC20/utils/SafeERC20.sol",
    "27": "contracts/openzeppelin-solidity/contracts/utils/Address.sol",
    "28": "contracts/openzeppelin-solidity/contracts/utils/Context.sol",
    "3": "contracts/RangeManager.sol",
    "35": "interfaces/IAaveLendingPoolV2.sol",
    "36": "interfaces/IAaveOracle.sol",
    "39": "interfaces/ILendingPoolAddressesProvider.sol",
    "4": "contracts/RoeRouter.sol",
    "40": "interfaces/INonfungiblePositionManager.sol",
    "44": "interfaces/IPriceOracle.sol",
    "49": "interfaces/IUniswapV3Factory.sol",
    "5": "contracts/TokenisableRange.sol",
    "50": "interfaces/IUniswapV3Pool.sol",
    "52": "interfaces/IWETH.sol",
    "8": "contracts/lib/FixedPoint96.sol",
    "9": "contracts/lib/FullMath.sol"
  },
  "ast": {
    "absolutePath": "contracts/GeVault.sol",
    "exportedSymbols": {
      "Address": [
        12527
      ],
      "AggregatorV3Interface": [
        11293
      ],
      "BeaconProxy": [
        11375
      ],
      "Context": [
        12129
      ],
      "DataTypes": [
        12566
      ],
      "ECDSA": [
        11782
      ],
      "ERC1967Upgrade": [
        14079
      ],
      "ERC20": [
        7764
      ],
      "FixedPoint96": [
        14364
      ],
      "FullMath": [
        14540
      ],
      "GeVault": [
        1849
      ],
      "IAaveOracle": [
        11808
      ],
      "IBeacon": [
        14141
      ],
      "IERC165": [
        14786
      ],
      "IERC20": [
        12207
      ],
      "IERC20Metadata": [
        12232
      ],
      "IERC721": [
        14774
      ],
      "IERC721Enumerable": [
        14631
      ],
      "IERC721Metadata": [
        14658
      ],
      "IERC721Permit": [
        14182
      ],
      "ILendingPool": [
        8439
      ],
      "ILendingPoolAddressesProvider": [
        10617
      ],
      "INonfungiblePositionManager": [
        12007
      ],
      "IPeripheryImmutableState": [
        14198
      ],
      "IPeripheryPayments": [
        14224
      ],
      "IPoolInitializer": [
        14243
      ],
      "IPriceOracle": [
        10634
      ],
      "ISwapRouter": [
        12107
      ],
      "IUniswapV2Factory": [
        10697
      ],
      "IUniswapV2Pair": [
        10939
      ],
      "IUniswapV2Router01": [
        11247
      ],
      "IUniswapV3Factory": [
        13730
      ],
      "IUniswapV3Pool": [
        8477
      ],
      "IUniswapV3SwapCallback": [
        14354
      ],
      "IWETH": [
        8533
      ],
      "LiquidityAmounts": [
        12906
      ],
      "Ownable": [
        7178
      ],
      "PoolAddress": [
        14340
      ],
      "Proxy": [
        14131
      ],
      "RangeManager": [
        6873
      ],
      "ReentrancyGuard": [
        7218
      ],
      "RoeRouter": [
        7073
      ],
      "SafeERC20": [
        7988
      ],
      "StorageSlot": [
        14600
      ],
      "Strings": [
        13647
      ],
      "TickMath": [
        13444
      ],
      "TokenisableRange": [
        10428
      ]
    },
    "id": 1850,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:0"
      },
      {
        "absolutePath": "contracts/openzeppelin-solidity/contracts/access/Ownable.sol",
        "file": "./openzeppelin-solidity/contracts/access/Ownable.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1850,
        "sourceUnit": 7179,
        "src": "64:62:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "./openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1850,
        "sourceUnit": 7765,
        "src": "127:65:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-solidity/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "./openzeppelin-solidity/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1850,
        "sourceUnit": 7989,
        "src": "193:75:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-solidity/contracts/security/ReentrancyGuard.sol",
        "file": "./openzeppelin-solidity/contracts/security/ReentrancyGuard.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1850,
        "sourceUnit": 7219,
        "src": "269:72:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IAaveLendingPoolV2.sol",
        "file": "../interfaces/IAaveLendingPoolV2.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1850,
        "sourceUnit": 8440,
        "src": "342:46:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IUniswapV3Pool.sol",
        "file": "../interfaces/IUniswapV3Pool.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1850,
        "sourceUnit": 8478,
        "src": "389:42:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IWETH.sol",
        "file": "../interfaces/IWETH.sol",
        "id": 8,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1850,
        "sourceUnit": 8534,
        "src": "432:33:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/RangeManager.sol",
        "file": "./RangeManager.sol",
        "id": 9,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1850,
        "sourceUnit": 6874,
        "src": "466:28:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/RoeRouter.sol",
        "file": "./RoeRouter.sol",
        "id": 10,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1850,
        "sourceUnit": 7074,
        "src": "495:25:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 12,
              "name": "ERC20",
              "nameLocations": [
                "994:5:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7764,
              "src": "994:5:0"
            },
            "id": 13,
            "nodeType": "InheritanceSpecifier",
            "src": "994:5:0"
          },
          {
            "baseName": {
              "id": 14,
              "name": "Ownable",
              "nameLocations": [
                "1001:7:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7178,
              "src": "1001:7:0"
            },
            "id": 15,
            "nodeType": "InheritanceSpecifier",
            "src": "1001:7:0"
          },
          {
            "baseName": {
              "id": 16,
              "name": "ReentrancyGuard",
              "nameLocations": [
                "1010:15:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7218,
              "src": "1010:15:0"
            },
            "id": 17,
            "nodeType": "InheritanceSpecifier",
            "src": "1010:15:0"
          }
        ],
        "canonicalName": "GeVault",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 11,
          "nodeType": "StructuredDocumentation",
          "src": "523:450:0",
          "text": "GeVault is a reblancing vault that holds TokenisableRanges tickers\nFunctionalities:\n- Hold a list of tickers for a single pair, evenly spaced\n- Hold balances of those tickers, deposited in the ROE LP\n- Deposit one underlying asset split evenly into 2 or more consecutive ticks above/below the current price\n- Withdraw one underlying asset, taken out evenly from 2 or more consecutive ticks\n- Calculate the current balance of assets\nDesign:"
        },
        "fullyImplemented": true,
        "id": 1849,
        "linearizedBaseContracts": [
          1849,
          7218,
          7178,
          7764,
          12232,
          12207,
          12129
        ],
        "name": "GeVault",
        "nameLocation": "983:7:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 21,
            "libraryName": {
              "id": 18,
              "name": "SafeERC20",
              "nameLocations": [
                "1036:9:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7988,
              "src": "1036:9:0"
            },
            "nodeType": "UsingForDirective",
            "src": "1030:26:0",
            "typeName": {
              "id": 20,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 19,
                "name": "ERC20",
                "nameLocations": [
                  "1050:5:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 7764,
                "src": "1050:5:0"
              },
              "referencedDeclaration": 7764,
              "src": "1050:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$7764",
                "typeString": "contract ERC20"
              }
            }
          },
          {
            "anonymous": false,
            "eventSelector": "dcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7",
            "id": 31,
            "name": "Deposit",
            "nameLocation": "1068:7:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1092:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 31,
                  "src": "1076:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1076:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1116:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 31,
                  "src": "1100:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1100:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1128:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 31,
                  "src": "1123:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1123:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "1141:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 31,
                  "src": "1136:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1136:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1075:76:0"
            },
            "src": "1062:90:0"
          },
          {
            "anonymous": false,
            "eventSelector": "f341246adaac6f497bc2a656f546ab9e182111d630394f0c57c710a59a2cb567",
            "id": 41,
            "name": "Withdraw",
            "nameLocation": "1161:8:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1186:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 41,
                  "src": "1170:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1170:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1210:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 41,
                  "src": "1194:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1194:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1222:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 41,
                  "src": "1217:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1217:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "1235:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 41,
                  "src": "1230:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1230:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1169:76:0"
            },
            "src": "1155:91:0"
          },
          {
            "anonymous": false,
            "eventSelector": "f3fe65aefc0c6a58d6e37d115ed356186c3088909bc0642d064dbb0d8f0361ee",
            "id": 45,
            "name": "PushTick",
            "nameLocation": "1255:8:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "ticker",
                  "nameLocation": "1280:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 45,
                  "src": "1264:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1264:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1263:24:0"
            },
            "src": "1249:39:0"
          },
          {
            "anonymous": false,
            "eventSelector": "379724eb42b8009eb7cb6f3d25740ce23af62531dbcaa953861505b29dc14816",
            "id": 49,
            "name": "ShiftTick",
            "nameLocation": "1297:9:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 48,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "ticker",
                  "nameLocation": "1323:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 49,
                  "src": "1307:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1307:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1306:24:0"
            },
            "src": "1291:40:0"
          },
          {
            "anonymous": false,
            "eventSelector": "c702ec00c014203b7e89baac1d444204c2626e064afc77ba77a612e15ab3bce0",
            "id": 55,
            "name": "ModifyTick",
            "nameLocation": "1340:10:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 54,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "ticker",
                  "nameLocation": "1367:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "1351:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1351:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "1380:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "1375:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1375:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1350:36:0"
            },
            "src": "1334:53:0"
          },
          {
            "anonymous": false,
            "eventSelector": "811d4760f1a92875eb76dbd3dc2359544b2f6a000ba5b78784c0b105b3469bd0",
            "id": 59,
            "name": "Rebalance",
            "nameLocation": "1396:9:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tickIndex",
                  "nameLocation": "1411:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 59,
                  "src": "1406:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1406:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1405:16:0"
            },
            "src": "1390:32:0"
          },
          {
            "anonymous": false,
            "eventSelector": "c95792a0e34c24eac32c3d3aad40fa02ac9ea2cb3a39b334f7b7f08579b5cd7d",
            "id": 63,
            "name": "SetEnabled",
            "nameLocation": "1431:10:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "isEnabled",
                  "nameLocation": "1447:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 63,
                  "src": "1442:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1442:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1441:16:0"
            },
            "src": "1425:33:0"
          },
          {
            "anonymous": false,
            "eventSelector": "cb7ef3e545f5cdb893f5c568ba710fe08f336375a2d9fd66e161033f8fc09ef3",
            "id": 67,
            "name": "SetTreasury",
            "nameLocation": "1467:11:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "treasury",
                  "nameLocation": "1487:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 67,
                  "src": "1479:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1479:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1478:18:0"
            },
            "src": "1461:36:0"
          },
          {
            "anonymous": false,
            "eventSelector": "00172ddfc5ae88d08b3de01a5a187667c37a5a53989e8c175055cb6c993792a7",
            "id": 71,
            "name": "SetFee",
            "nameLocation": "1506:6:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "baseFeeX4",
                  "nameLocation": "1518:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 71,
                  "src": "1513:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1513:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1512:16:0"
            },
            "src": "1500:29:0"
          },
          {
            "anonymous": false,
            "eventSelector": "9b83075767c93f683dc38f28b4e8fd725867522b5bbead77b8c397ab04fe21f1",
            "id": 75,
            "name": "SetTvlCap",
            "nameLocation": "1538:9:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 74,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tvlCap",
                  "nameLocation": "1553:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "1548:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 72,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1548:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1547:13:0"
            },
            "src": "1532:29:0"
          },
          {
            "constant": false,
            "id": 78,
            "mutability": "mutable",
            "name": "rangeManager",
            "nameLocation": "1578:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 1849,
            "src": "1565:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_RangeManager_$6873",
              "typeString": "contract RangeManager"
            },
            "typeName": {
              "id": 77,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 76,
                "name": "RangeManager",
                "nameLocations": [
                  "1565:12:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 6873,
                "src": "1565:12:0"
              },
              "referencedDeclaration": 6873,
              "src": "1565:12:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RangeManager_$6873",
                "typeString": "contract RangeManager"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 79,
              "nodeType": "StructuredDocumentation",
              "src": "1595:59:0",
              "text": "@notice Ticks properly ordered in ascending price order"
            },
            "functionSelector": "534cb30d",
            "id": 83,
            "mutability": "mutable",
            "name": "ticks",
            "nameLocation": "1683:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 1849,
            "src": "1657:31:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$10428_$dyn_storage",
              "typeString": "contract TokenisableRange[]"
            },
            "typeName": {
              "baseType": {
                "id": 81,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 80,
                  "name": "TokenisableRange",
                  "nameLocations": [
                    "1657:16:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10428,
                  "src": "1657:16:0"
                },
                "referencedDeclaration": 10428,
                "src": "1657:16:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                  "typeString": "contract TokenisableRange"
                }
              },
              "id": 82,
              "nodeType": "ArrayTypeName",
              "src": "1657:18:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$10428_$dyn_storage_ptr",
                "typeString": "contract TokenisableRange[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 84,
              "nodeType": "StructuredDocumentation",
              "src": "1695:81:0",
              "text": "@notice Tracks the beginning of active ticks: the next 4 ticks are the active"
            },
            "functionSelector": "cf94b206",
            "id": 86,
            "mutability": "mutable",
            "name": "tickIndex",
            "nameLocation": "1791:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 1849,
            "src": "1779:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 85,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1779:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 87,
              "nodeType": "StructuredDocumentation",
              "src": "1805:23:0",
              "text": "@notice Pair tokens"
            },
            "functionSelector": "0dfe1681",
            "id": 90,
            "mutability": "mutable",
            "name": "token0",
            "nameLocation": "1844:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 1849,
            "src": "1831:19:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$7764",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 89,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 88,
                "name": "ERC20",
                "nameLocations": [
                  "1831:5:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 7764,
                "src": "1831:5:0"
              },
              "referencedDeclaration": 7764,
              "src": "1831:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$7764",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d21220a7",
            "id": 93,
            "mutability": "mutable",
            "name": "token1",
            "nameLocation": "1867:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 1849,
            "src": "1854:19:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$7764",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 92,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 91,
                "name": "ERC20",
                "nameLocations": [
                  "1854:5:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 7764,
                "src": "1854:5:0"
              },
              "referencedDeclaration": 7764,
              "src": "1854:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$7764",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6aa633b6",
            "id": 96,
            "mutability": "mutable",
            "name": "isEnabled",
            "nameLocation": "1889:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 1849,
            "src": "1877:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 94,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1877:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "74727565",
              "id": 95,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1901:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "true"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 97,
              "nodeType": "StructuredDocumentation",
              "src": "1909:26:0",
              "text": "@notice Pool base fee "
            },
            "functionSelector": "18fc392b",
            "id": 100,
            "mutability": "mutable",
            "name": "baseFeeX4",
            "nameLocation": "1950:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 1849,
            "src": "1938:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 98,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1938:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3230",
              "id": 99,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1962:2:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_20_by_1",
                "typeString": "int_const 20"
              },
              "value": "20"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 101,
              "nodeType": "StructuredDocumentation",
              "src": "1968:41:0",
              "text": "@notice Max vault TVL with 8 decimals"
            },
            "functionSelector": "3f23fa1a",
            "id": 104,
            "mutability": "mutable",
            "name": "tvlCap",
            "nameLocation": "2024:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 1849,
            "src": "2012:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 102,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "2012:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31653132",
              "id": 103,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2033:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000_by_1",
                "typeString": "int_const 1000000000000"
              },
              "value": "1e12"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 105,
              "nodeType": "StructuredDocumentation",
              "src": "2044:82:0",
              "text": "CONSTANTS \n immutable keyword removed for coverage testing bug in brownie"
            },
            "functionSelector": "61d027b3",
            "id": 107,
            "mutability": "mutable",
            "name": "treasury",
            "nameLocation": "2144:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 1849,
            "src": "2129:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 106,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2129:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "bdd3d825",
            "id": 110,
            "mutability": "mutable",
            "name": "uniswapPool",
            "nameLocation": "2178:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 1849,
            "src": "2156:33:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IUniswapV3Pool_$8477",
              "typeString": "contract IUniswapV3Pool"
            },
            "typeName": {
              "id": 109,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 108,
                "name": "IUniswapV3Pool",
                "nameLocations": [
                  "2156:14:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 8477,
                "src": "2156:14:0"
              },
              "referencedDeclaration": 8477,
              "src": "2156:14:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IUniswapV3Pool_$8477",
                "typeString": "contract IUniswapV3Pool"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a59a9973",
            "id": 113,
            "mutability": "mutable",
            "name": "lendingPool",
            "nameLocation": "2213:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 1849,
            "src": "2193:31:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ILendingPool_$8439",
              "typeString": "contract ILendingPool"
            },
            "typeName": {
              "id": 112,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 111,
                "name": "ILendingPool",
                "nameLocations": [
                  "2193:12:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 8439,
                "src": "2193:12:0"
              },
              "referencedDeclaration": 8439,
              "src": "2193:12:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ILendingPool_$8439",
                "typeString": "contract ILendingPool"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7dc0d1d0",
            "id": 116,
            "mutability": "mutable",
            "name": "oracle",
            "nameLocation": "2248:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 1849,
            "src": "2228:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IPriceOracle_$10634",
              "typeString": "contract IPriceOracle"
            },
            "typeName": {
              "id": 115,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 114,
                "name": "IPriceOracle",
                "nameLocations": [
                  "2228:12:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 10634,
                "src": "2228:12:0"
              },
              "referencedDeclaration": 10634,
              "src": "2228:12:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPriceOracle_$10634",
                "typeString": "contract IPriceOracle"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "8fccd12e",
            "id": 119,
            "mutability": "constant",
            "name": "nearbyRanges",
            "nameLocation": "2279:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 1849,
            "src": "2258:37:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 117,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "2258:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32",
              "id": 118,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2294:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ad5c4648",
            "id": 122,
            "mutability": "mutable",
            "name": "WETH",
            "nameLocation": "2312:4:0",
            "nodeType": "VariableDeclaration",
            "scope": 1849,
            "src": "2299:17:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IWETH_$8533",
              "typeString": "contract IWETH"
            },
            "typeName": {
              "id": 121,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 120,
                "name": "IWETH",
                "nameLocations": [
                  "2299:5:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 8533,
                "src": "2299:5:0"
              },
              "referencedDeclaration": 8533,
              "src": "2299:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IWETH_$8533",
                "typeString": "contract IWETH"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ff71f0df",
            "id": 124,
            "mutability": "mutable",
            "name": "baseTokenIsToken0",
            "nameLocation": "2332:17:0",
            "nodeType": "VariableDeclaration",
            "scope": 1849,
            "src": "2320:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 123,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "2320:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 242,
              "nodeType": "Block",
              "src": "2591:657:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 148,
                          "name": "_treasury",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 126,
                          "src": "2605:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "307830",
                              "id": 151,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2626:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 150,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2618:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 149,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2618:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2618:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2605:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4745563a20496e76616c6964205472656173757279",
                        "id": 154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2632:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_86525b9f0c8e3d8f9176ddea91062fd847268979962db9d263c5f8d6c8caa93f",
                          "typeString": "literal_string \"GEV: Invalid Treasury\""
                        },
                        "value": "GEV: Invalid Treasury"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_86525b9f0c8e3d8f9176ddea91062fd847268979962db9d263c5f8d6c8caa93f",
                          "typeString": "literal_string \"GEV: Invalid Treasury\""
                        }
                      ],
                      "id": 147,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2597:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2597:59:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 156,
                  "nodeType": "ExpressionStatement",
                  "src": "2597:59:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 158,
                          "name": "_uniswapPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 130,
                          "src": "2670:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "307830",
                              "id": 161,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2694:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 160,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2686:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 159,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2686:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2686:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2670:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4745563a20496e76616c696420506f6f6c",
                        "id": 164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2700:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8c27b17dd256a480dd0ad45d0f197f4bc342472f101165004545863ca319757b",
                          "typeString": "literal_string \"GEV: Invalid Pool\""
                        },
                        "value": "GEV: Invalid Pool"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8c27b17dd256a480dd0ad45d0f197f4bc342472f101165004545863ca319757b",
                          "typeString": "literal_string \"GEV: Invalid Pool\""
                        }
                      ],
                      "id": 157,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2662:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2662:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 166,
                  "nodeType": "ExpressionStatement",
                  "src": "2662:58:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 168,
                          "name": "weth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 138,
                          "src": "2734:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "307830",
                              "id": 171,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2750:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 170,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2742:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 169,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2742:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2742:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2734:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4745563a20496e76616c69642057455448",
                        "id": 174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2756:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_61cb12ce2961bd1dd63d97495f2fbd7d6a31756375e4c359e5587fe33504384c",
                          "typeString": "literal_string \"GEV: Invalid WETH\""
                        },
                        "value": "GEV: Invalid WETH"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_61cb12ce2961bd1dd63d97495f2fbd7d6a31756375e4c359e5587fe33504384c",
                          "typeString": "literal_string \"GEV: Invalid WETH\""
                        }
                      ],
                      "id": 167,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2726:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2726:50:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 176,
                  "nodeType": "ExpressionStatement",
                  "src": "2726:50:0"
                },
                {
                  "assignments": [
                    178,
                    180,
                    182,
                    null,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 178,
                      "mutability": "mutable",
                      "name": "lpap",
                      "nameLocation": "2792:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 242,
                      "src": "2784:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 177,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2784:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 180,
                      "mutability": "mutable",
                      "name": "_token0",
                      "nameLocation": "2806:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 242,
                      "src": "2798:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 179,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2798:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 182,
                      "mutability": "mutable",
                      "name": "_token1",
                      "nameLocation": "2823:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 242,
                      "src": "2815:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 181,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2815:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 189,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 187,
                        "name": "poolId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 132,
                        "src": "2864:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 184,
                            "name": "roeRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 128,
                            "src": "2847:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 183,
                          "name": "RoeRouter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7073,
                          "src": "2837:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_RoeRouter_$7073_$",
                            "typeString": "type(contract RoeRouter)"
                          }
                        },
                        "id": 185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2837:20:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RoeRouter_$7073",
                          "typeString": "contract RoeRouter"
                        }
                      },
                      "id": 186,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2858:5:0",
                      "memberName": "pools",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6902,
                      "src": "2837:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$_t_address_$_t_address_$_t_address_$_t_bool_$",
                        "typeString": "function (uint256) view external returns (address,address,address,address,bool)"
                      }
                    },
                    "id": 188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2837:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_address_$_t_address_$_t_bool_$",
                      "typeString": "tuple(address,address,address,address,bool)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2783:88:0"
                },
                {
                  "expression": {
                    "id": 194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 190,
                      "name": "token0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 90,
                      "src": "2877:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$7764",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 192,
                          "name": "_token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 180,
                          "src": "2892:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 191,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7764,
                        "src": "2886:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$7764_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2886:14:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$7764",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "2877:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$7764",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 195,
                  "nodeType": "ExpressionStatement",
                  "src": "2877:23:0"
                },
                {
                  "expression": {
                    "id": 200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 196,
                      "name": "token1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 93,
                      "src": "2906:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$7764",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 198,
                          "name": "_token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 182,
                          "src": "2921:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 197,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7764,
                        "src": "2915:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$7764_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2915:14:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$7764",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "2906:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$7764",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 201,
                  "nodeType": "ExpressionStatement",
                  "src": "2906:23:0"
                },
                {
                  "expression": {
                    "id": 210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 202,
                      "name": "lendingPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 113,
                      "src": "2940:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILendingPool_$8439",
                        "typeString": "contract ILendingPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 205,
                                  "name": "lpap",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 178,
                                  "src": "2997:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 204,
                                "name": "ILendingPoolAddressesProvider",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10617,
                                "src": "2967:29:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILendingPoolAddressesProvider_$10617_$",
                                  "typeString": "type(contract ILendingPoolAddressesProvider)"
                                }
                              },
                              "id": 206,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2967:35:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$10617",
                                "typeString": "contract ILendingPoolAddressesProvider"
                              }
                            },
                            "id": 207,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3003:14:0",
                            "memberName": "getLendingPool",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10551,
                            "src": "2967:50:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2967:52:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 203,
                        "name": "ILendingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8439,
                        "src": "2954:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ILendingPool_$8439_$",
                          "typeString": "type(contract ILendingPool)"
                        }
                      },
                      "id": 209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2954:66:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILendingPool_$8439",
                        "typeString": "contract ILendingPool"
                      }
                    },
                    "src": "2940:80:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILendingPool_$8439",
                      "typeString": "contract ILendingPool"
                    }
                  },
                  "id": 211,
                  "nodeType": "ExpressionStatement",
                  "src": "2940:80:0"
                },
                {
                  "expression": {
                    "id": 220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 212,
                      "name": "oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116,
                      "src": "3026:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPriceOracle_$10634",
                        "typeString": "contract IPriceOracle"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 215,
                                  "name": "lpap",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 178,
                                  "src": "3078:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 214,
                                "name": "ILendingPoolAddressesProvider",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10617,
                                "src": "3048:29:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILendingPoolAddressesProvider_$10617_$",
                                  "typeString": "type(contract ILendingPoolAddressesProvider)"
                                }
                              },
                              "id": 216,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3048:35:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$10617",
                                "typeString": "contract ILendingPoolAddressesProvider"
                              }
                            },
                            "id": 217,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3084:14:0",
                            "memberName": "getPriceOracle",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10601,
                            "src": "3048:50:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 218,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3048:52:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 213,
                        "name": "IPriceOracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10634,
                        "src": "3035:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IPriceOracle_$10634_$",
                          "typeString": "type(contract IPriceOracle)"
                        }
                      },
                      "id": 219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3035:66:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPriceOracle_$10634",
                        "typeString": "contract IPriceOracle"
                      }
                    },
                    "src": "3026:75:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPriceOracle_$10634",
                      "typeString": "contract IPriceOracle"
                    }
                  },
                  "id": 221,
                  "nodeType": "ExpressionStatement",
                  "src": "3026:75:0"
                },
                {
                  "expression": {
                    "id": 224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 222,
                      "name": "treasury",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 107,
                      "src": "3107:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 223,
                      "name": "_treasury",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 126,
                      "src": "3118:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3107:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 225,
                  "nodeType": "ExpressionStatement",
                  "src": "3107:20:0"
                },
                {
                  "expression": {
                    "id": 230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 226,
                      "name": "uniswapPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 110,
                      "src": "3133:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV3Pool_$8477",
                        "typeString": "contract IUniswapV3Pool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 228,
                          "name": "_uniswapPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 130,
                          "src": "3162:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 227,
                        "name": "IUniswapV3Pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8477,
                        "src": "3147:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$8477_$",
                          "typeString": "type(contract IUniswapV3Pool)"
                        }
                      },
                      "id": 229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3147:28:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV3Pool_$8477",
                        "typeString": "contract IUniswapV3Pool"
                      }
                    },
                    "src": "3133:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV3Pool_$8477",
                      "typeString": "contract IUniswapV3Pool"
                    }
                  },
                  "id": 231,
                  "nodeType": "ExpressionStatement",
                  "src": "3133:42:0"
                },
                {
                  "expression": {
                    "id": 236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 232,
                      "name": "WETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 122,
                      "src": "3181:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IWETH_$8533",
                        "typeString": "contract IWETH"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 234,
                          "name": "weth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 138,
                          "src": "3194:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 233,
                        "name": "IWETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8533,
                        "src": "3188:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IWETH_$8533_$",
                          "typeString": "type(contract IWETH)"
                        }
                      },
                      "id": 235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3188:11:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IWETH_$8533",
                        "typeString": "contract IWETH"
                      }
                    },
                    "src": "3181:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IWETH_$8533",
                      "typeString": "contract IWETH"
                    }
                  },
                  "id": 237,
                  "nodeType": "ExpressionStatement",
                  "src": "3181:18:0"
                },
                {
                  "expression": {
                    "id": 240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 238,
                      "name": "baseTokenIsToken0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 124,
                      "src": "3205:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 239,
                      "name": "_baseTokenIsToken0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 140,
                      "src": "3225:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3205:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 241,
                  "nodeType": "ExpressionStatement",
                  "src": "3205:38:0"
                }
              ]
            },
            "id": 243,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 143,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 134,
                    "src": "2575:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 144,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 136,
                    "src": "2581:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 145,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 142,
                  "name": "ERC20",
                  "nameLocations": [
                    "2569:5:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7764,
                  "src": "2569:5:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2569:19:0"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 126,
                  "mutability": "mutable",
                  "name": "_treasury",
                  "nameLocation": "2382:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 243,
                  "src": "2374:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 125,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2374:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 128,
                  "mutability": "mutable",
                  "name": "roeRouter",
                  "nameLocation": "2406:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 243,
                  "src": "2398:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 127,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2398:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 130,
                  "mutability": "mutable",
                  "name": "_uniswapPool",
                  "nameLocation": "2430:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 243,
                  "src": "2422:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 129,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2422:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 132,
                  "mutability": "mutable",
                  "name": "poolId",
                  "nameLocation": "2454:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 243,
                  "src": "2449:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 131,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2449:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 134,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "2481:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 243,
                  "src": "2467:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 133,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2467:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 136,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "2506:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 243,
                  "src": "2492:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 135,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2492:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 138,
                  "mutability": "mutable",
                  "name": "weth",
                  "nameLocation": "2526:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 243,
                  "src": "2518:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 137,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2518:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 140,
                  "mutability": "mutable",
                  "name": "_baseTokenIsToken0",
                  "nameLocation": "2541:18:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 243,
                  "src": "2536:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 139,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2536:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2368:195:0"
            },
            "returnParameters": {
              "id": 146,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2591:0:0"
            },
            "scope": 1849,
            "src": "2357:891:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 259,
              "nodeType": "Block",
              "src": "3400:68:0",
              "statements": [
                {
                  "expression": {
                    "id": 253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 251,
                      "name": "isEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 96,
                      "src": "3407:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 252,
                      "name": "_isEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 246,
                      "src": "3419:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3407:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 254,
                  "nodeType": "ExpressionStatement",
                  "src": "3407:22:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 256,
                        "name": "_isEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 246,
                        "src": "3452:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 255,
                      "name": "SetEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "3441:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3441:22:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 258,
                  "nodeType": "EmitStatement",
                  "src": "3436:27:0"
                }
              ]
            },
            "documentation": {
              "id": 244,
              "nodeType": "StructuredDocumentation",
              "src": "3280:63:0",
              "text": "@notice Set pool status\n @param _isEnabled Pool status"
            },
            "functionSelector": "328d8f72",
            "id": 260,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 249,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 248,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3390:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7120,
                  "src": "3390:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3390:9:0"
              }
            ],
            "name": "setEnabled",
            "nameLocation": "3355:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 247,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 246,
                  "mutability": "mutable",
                  "name": "_isEnabled",
                  "nameLocation": "3371:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 260,
                  "src": "3366:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 245,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3366:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3365:17:0"
            },
            "returnParameters": {
              "id": 250,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3400:0:0"
            },
            "scope": 1849,
            "src": "3346:122:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 276,
              "nodeType": "Block",
              "src": "3605:70:0",
              "statements": [
                {
                  "expression": {
                    "id": 270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 268,
                      "name": "treasury",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 107,
                      "src": "3612:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 269,
                      "name": "newTreasury",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 263,
                      "src": "3623:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3612:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 271,
                  "nodeType": "ExpressionStatement",
                  "src": "3612:22:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 273,
                        "name": "newTreasury",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 263,
                        "src": "3658:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 272,
                      "name": "SetTreasury",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "3646:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3646:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 275,
                  "nodeType": "EmitStatement",
                  "src": "3641:29:0"
                }
              ]
            },
            "documentation": {
              "id": 261,
              "nodeType": "StructuredDocumentation",
              "src": "3474:69:0",
              "text": "@notice Set treasury address\n @param newTreasury New address"
            },
            "functionSelector": "f0f44260",
            "id": 277,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 266,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 265,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3595:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7120,
                  "src": "3595:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3595:9:0"
              }
            ],
            "name": "setTreasury",
            "nameLocation": "3555:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 263,
                  "mutability": "mutable",
                  "name": "newTreasury",
                  "nameLocation": "3575:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 277,
                  "src": "3567:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 262,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3567:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3566:21:0"
            },
            "returnParameters": {
              "id": 267,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3605:0:0"
            },
            "scope": 1849,
            "src": "3546:129:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 375,
              "nodeType": "Block",
              "src": "3799:580:0",
              "statements": [
                {
                  "assignments": [
                    287
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 287,
                      "mutability": "mutable",
                      "name": "t",
                      "nameLocation": "3822:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 375,
                      "src": "3805:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                        "typeString": "contract TokenisableRange"
                      },
                      "typeName": {
                        "id": 286,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 285,
                          "name": "TokenisableRange",
                          "nameLocations": [
                            "3805:16:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 10428,
                          "src": "3805:16:0"
                        },
                        "referencedDeclaration": 10428,
                        "src": "3805:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                          "typeString": "contract TokenisableRange"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 291,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 289,
                        "name": "tr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 280,
                        "src": "3843:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 288,
                      "name": "TokenisableRange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10428,
                      "src": "3826:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_TokenisableRange_$10428_$",
                        "typeString": "type(contract TokenisableRange)"
                      }
                    },
                    "id": 290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3826:20:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                      "typeString": "contract TokenisableRange"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3805:41:0"
                },
                {
                  "assignments": [
                    294,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 294,
                      "mutability": "mutable",
                      "name": "t0",
                      "nameLocation": "3859:2:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 375,
                      "src": "3853:8:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$7764",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 293,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 292,
                          "name": "ERC20",
                          "nameLocations": [
                            "3853:5:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 7764,
                          "src": "3853:5:0"
                        },
                        "referencedDeclaration": 7764,
                        "src": "3853:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$7764",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 298,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 295,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 287,
                        "src": "3866:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                          "typeString": "contract TokenisableRange"
                        }
                      },
                      "id": 296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3868:6:0",
                      "memberName": "TOKEN0",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8608,
                      "src": "3866:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ERC20_$7764_$_t_uint8_$",
                        "typeString": "function () view external returns (contract ERC20,uint8)"
                      }
                    },
                    "id": 297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3866:10:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_contract$_ERC20_$7764_$_t_uint8_$",
                      "typeString": "tuple(contract ERC20,uint8)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3852:24:0"
                },
                {
                  "assignments": [
                    301,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 301,
                      "mutability": "mutable",
                      "name": "t1",
                      "nameLocation": "3889:2:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 375,
                      "src": "3883:8:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$7764",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 300,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 299,
                          "name": "ERC20",
                          "nameLocations": [
                            "3883:5:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 7764,
                          "src": "3883:5:0"
                        },
                        "referencedDeclaration": 7764,
                        "src": "3883:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$7764",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 305,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 302,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 287,
                        "src": "3896:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                          "typeString": "contract TokenisableRange"
                        }
                      },
                      "id": 303,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3898:6:0",
                      "memberName": "TOKEN1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8611,
                      "src": "3896:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ERC20_$7764_$_t_uint8_$",
                        "typeString": "function () view external returns (contract ERC20,uint8)"
                      }
                    },
                    "id": 304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3896:10:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_contract$_ERC20_$7764_$_t_uint8_$",
                      "typeString": "tuple(contract ERC20,uint8)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3882:24:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_contract$_ERC20_$7764",
                            "typeString": "contract ERC20"
                          },
                          "id": 309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 307,
                            "name": "t0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 294,
                            "src": "3920:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$7764",
                              "typeString": "contract ERC20"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 308,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 90,
                            "src": "3926:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$7764",
                              "typeString": "contract ERC20"
                            }
                          },
                          "src": "3920:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_contract$_ERC20_$7764",
                            "typeString": "contract ERC20"
                          },
                          "id": 312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 310,
                            "name": "t1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 301,
                            "src": "3936:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$7764",
                              "typeString": "contract ERC20"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 311,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 93,
                            "src": "3942:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$7764",
                              "typeString": "contract ERC20"
                            }
                          },
                          "src": "3936:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3920:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4745563a20496e76616c6964205452",
                        "id": 314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3950:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_721a26da23fcaf2b0b3efff369cf2337d1dba3fc87baed3949055b03e688608f",
                          "typeString": "literal_string \"GEV: Invalid TR\""
                        },
                        "value": "GEV: Invalid TR"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_721a26da23fcaf2b0b3efff369cf2337d1dba3fc87baed3949055b03e688608f",
                          "typeString": "literal_string \"GEV: Invalid TR\""
                        }
                      ],
                      "id": 306,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3912:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3912:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 316,
                  "nodeType": "ExpressionStatement",
                  "src": "3912:56:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 317,
                        "name": "ticks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83,
                        "src": "3978:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$10428_$dyn_storage",
                          "typeString": "contract TokenisableRange[] storage ref"
                        }
                      },
                      "id": 318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3984:6:0",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3978:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 319,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3994:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3978:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 369,
                    "nodeType": "Block",
                    "src": "4021:331:0",
                    "statements": [
                      {
                        "condition": {
                          "id": 327,
                          "name": "baseTokenIsToken0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 124,
                          "src": "4078:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                },
                                "id": 356,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 345,
                                      "name": "t",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 287,
                                      "src": "4222:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                                        "typeString": "contract TokenisableRange"
                                      }
                                    },
                                    "id": 346,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4224:9:0",
                                    "memberName": "upperTick",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 8591,
                                    "src": "4222:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_int24_$",
                                      "typeString": "function () view external returns (int24)"
                                    }
                                  },
                                  "id": 347,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4222:13:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int24",
                                    "typeString": "int24"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "baseExpression": {
                                        "id": 348,
                                        "name": "ticks",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 83,
                                        "src": "4238:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$10428_$dyn_storage",
                                          "typeString": "contract TokenisableRange[] storage ref"
                                        }
                                      },
                                      "id": 353,
                                      "indexExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 352,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "id": 349,
                                            "name": "ticks",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 83,
                                            "src": "4244:5:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$10428_$dyn_storage",
                                              "typeString": "contract TokenisableRange[] storage ref"
                                            }
                                          },
                                          "id": 350,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "4250:6:0",
                                          "memberName": "length",
                                          "nodeType": "MemberAccess",
                                          "src": "4244:12:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "hexValue": "31",
                                          "id": 351,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "4257:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "src": "4244:14:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4238:21:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                                        "typeString": "contract TokenisableRange"
                                      }
                                    },
                                    "id": 354,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4260:9:0",
                                    "memberName": "lowerTick",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 8589,
                                    "src": "4238:31:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_int24_$",
                                      "typeString": "function () view external returns (int24)"
                                    }
                                  },
                                  "id": 355,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4238:33:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int24",
                                    "typeString": "int24"
                                  }
                                },
                                "src": "4222:49:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "4745563a2050757368205469636b204f7665726c6170",
                                "id": 357,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4273:24:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_e75cab7a9e26d1ac41487a40101edd58a22f87fbac15a21ce63494f470a3a9e4",
                                  "typeString": "literal_string \"GEV: Push Tick Overlap\""
                                },
                                "value": "GEV: Push Tick Overlap"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_e75cab7a9e26d1ac41487a40101edd58a22f87fbac15a21ce63494f470a3a9e4",
                                  "typeString": "literal_string \"GEV: Push Tick Overlap\""
                                }
                              ],
                              "id": 344,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "4213:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 358,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4213:85:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 359,
                          "nodeType": "ExpressionStatement",
                          "src": "4213:85:0"
                        },
                        "id": 360,
                        "nodeType": "IfStatement",
                        "src": "4074:224:0",
                        "trueBody": {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                },
                                "id": 340,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 329,
                                      "name": "t",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 287,
                                      "src": "4115:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                                        "typeString": "contract TokenisableRange"
                                      }
                                    },
                                    "id": 330,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4117:9:0",
                                    "memberName": "lowerTick",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 8589,
                                    "src": "4115:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_int24_$",
                                      "typeString": "function () view external returns (int24)"
                                    }
                                  },
                                  "id": 331,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4115:13:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int24",
                                    "typeString": "int24"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "baseExpression": {
                                        "id": 332,
                                        "name": "ticks",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 83,
                                        "src": "4131:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$10428_$dyn_storage",
                                          "typeString": "contract TokenisableRange[] storage ref"
                                        }
                                      },
                                      "id": 337,
                                      "indexExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 336,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "id": 333,
                                            "name": "ticks",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 83,
                                            "src": "4137:5:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$10428_$dyn_storage",
                                              "typeString": "contract TokenisableRange[] storage ref"
                                            }
                                          },
                                          "id": 334,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "4143:6:0",
                                          "memberName": "length",
                                          "nodeType": "MemberAccess",
                                          "src": "4137:12:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "hexValue": "31",
                                          "id": 335,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "4150:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "src": "4137:14:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4131:21:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                                        "typeString": "contract TokenisableRange"
                                      }
                                    },
                                    "id": 338,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4153:9:0",
                                    "memberName": "upperTick",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 8591,
                                    "src": "4131:31:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_int24_$",
                                      "typeString": "function () view external returns (int24)"
                                    }
                                  },
                                  "id": 339,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4131:33:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int24",
                                    "typeString": "int24"
                                  }
                                },
                                "src": "4115:49:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "4745563a2050757368205469636b204f7665726c6170",
                                "id": 341,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4166:24:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_e75cab7a9e26d1ac41487a40101edd58a22f87fbac15a21ce63494f470a3a9e4",
                                  "typeString": "literal_string \"GEV: Push Tick Overlap\""
                                },
                                "value": "GEV: Push Tick Overlap"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_e75cab7a9e26d1ac41487a40101edd58a22f87fbac15a21ce63494f470a3a9e4",
                                  "typeString": "literal_string \"GEV: Push Tick Overlap\""
                                }
                              ],
                              "id": 328,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "4106:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 342,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4106:85:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 343,
                          "nodeType": "ExpressionStatement",
                          "src": "4106:85:0"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 365,
                                  "name": "tr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 280,
                                  "src": "4341:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 364,
                                "name": "TokenisableRange",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10428,
                                "src": "4324:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_TokenisableRange_$10428_$",
                                  "typeString": "type(contract TokenisableRange)"
                                }
                              },
                              "id": 366,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4324:20:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                                "typeString": "contract TokenisableRange"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                                "typeString": "contract TokenisableRange"
                              }
                            ],
                            "expression": {
                              "id": 361,
                              "name": "ticks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 83,
                              "src": "4313:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$10428_$dyn_storage",
                                "typeString": "contract TokenisableRange[] storage ref"
                              }
                            },
                            "id": 363,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4319:4:0",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "4313:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_TokenisableRange_$10428_$dyn_storage_ptr_$_t_contract$_TokenisableRange_$10428_$returns$__$attached_to$_t_array$_t_contract$_TokenisableRange_$10428_$dyn_storage_ptr_$",
                              "typeString": "function (contract TokenisableRange[] storage pointer,contract TokenisableRange)"
                            }
                          },
                          "id": 367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4313:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 368,
                        "nodeType": "ExpressionStatement",
                        "src": "4313:32:0"
                      }
                    ]
                  },
                  "id": 370,
                  "nodeType": "IfStatement",
                  "src": "3974:378:0",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 324,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 287,
                          "src": "4008:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                            "typeString": "contract TokenisableRange"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                            "typeString": "contract TokenisableRange"
                          }
                        ],
                        "expression": {
                          "id": 321,
                          "name": "ticks",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83,
                          "src": "3997:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$10428_$dyn_storage",
                            "typeString": "contract TokenisableRange[] storage ref"
                          }
                        },
                        "id": 323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4003:4:0",
                        "memberName": "push",
                        "nodeType": "MemberAccess",
                        "src": "3997:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_TokenisableRange_$10428_$dyn_storage_ptr_$_t_contract$_TokenisableRange_$10428_$returns$__$attached_to$_t_array$_t_contract$_TokenisableRange_$10428_$dyn_storage_ptr_$",
                          "typeString": "function (contract TokenisableRange[] storage pointer,contract TokenisableRange)"
                        }
                      },
                      "id": 325,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3997:13:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 326,
                    "nodeType": "ExpressionStatement",
                    "src": "3997:13:0"
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 372,
                        "name": "tr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 280,
                        "src": "4371:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 371,
                      "name": "PushTick",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "4362:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4362:12:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 374,
                  "nodeType": "EmitStatement",
                  "src": "4357:17:0"
                }
              ]
            },
            "documentation": {
              "id": 278,
              "nodeType": "StructuredDocumentation",
              "src": "3680:69:0",
              "text": "@notice Add a new ticker to the list\n @param tr Tick address"
            },
            "functionSelector": "6193aaeb",
            "id": 376,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 283,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 282,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3789:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7120,
                  "src": "3789:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3789:9:0"
              }
            ],
            "name": "pushTick",
            "nameLocation": "3761:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 281,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 280,
                  "mutability": "mutable",
                  "name": "tr",
                  "nameLocation": "3778:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 376,
                  "src": "3770:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 279,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3770:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3769:12:0"
            },
            "returnParameters": {
              "id": 284,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3799:0:0"
            },
            "scope": 1849,
            "src": "3752:627:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 516,
              "nodeType": "Block",
              "src": "4506:847:0",
              "statements": [
                {
                  "assignments": [
                    386
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 386,
                      "mutability": "mutable",
                      "name": "t",
                      "nameLocation": "4529:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 516,
                      "src": "4512:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                        "typeString": "contract TokenisableRange"
                      },
                      "typeName": {
                        "id": 385,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 384,
                          "name": "TokenisableRange",
                          "nameLocations": [
                            "4512:16:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 10428,
                          "src": "4512:16:0"
                        },
                        "referencedDeclaration": 10428,
                        "src": "4512:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                          "typeString": "contract TokenisableRange"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 390,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 388,
                        "name": "tr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 379,
                        "src": "4550:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 387,
                      "name": "TokenisableRange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10428,
                      "src": "4533:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_TokenisableRange_$10428_$",
                        "typeString": "type(contract TokenisableRange)"
                      }
                    },
                    "id": 389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4533:20:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                      "typeString": "contract TokenisableRange"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4512:41:0"
                },
                {
                  "assignments": [
                    393,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 393,
                      "mutability": "mutable",
                      "name": "t0",
                      "nameLocation": "4566:2:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 516,
                      "src": "4560:8:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$7764",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 392,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 391,
                          "name": "ERC20",
                          "nameLocations": [
                            "4560:5:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 7764,
                          "src": "4560:5:0"
                        },
                        "referencedDeclaration": 7764,
                        "src": "4560:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$7764",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 397,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 394,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 386,
                        "src": "4573:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                          "typeString": "contract TokenisableRange"
                        }
                      },
                      "id": 395,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4575:6:0",
                      "memberName": "TOKEN0",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8608,
                      "src": "4573:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ERC20_$7764_$_t_uint8_$",
                        "typeString": "function () view external returns (contract ERC20,uint8)"
                      }
                    },
                    "id": 396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4573:10:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_contract$_ERC20_$7764_$_t_uint8_$",
                      "typeString": "tuple(contract ERC20,uint8)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4559:24:0"
                },
                {
                  "assignments": [
                    400,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 400,
                      "mutability": "mutable",
                      "name": "t1",
                      "nameLocation": "4596:2:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 516,
                      "src": "4590:8:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$7764",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 399,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 398,
                          "name": "ERC20",
                          "nameLocations": [
                            "4590:5:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 7764,
                          "src": "4590:5:0"
                        },
                        "referencedDeclaration": 7764,
                        "src": "4590:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$7764",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 404,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 401,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 386,
                        "src": "4603:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                          "typeString": "contract TokenisableRange"
                        }
                      },
                      "id": 402,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4605:6:0",
                      "memberName": "TOKEN1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8611,
                      "src": "4603:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ERC20_$7764_$_t_uint8_$",
                        "typeString": "function () view external returns (contract ERC20,uint8)"
                      }
                    },
                    "id": 403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4603:10:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_contract$_ERC20_$7764_$_t_uint8_$",
                      "typeString": "tuple(contract ERC20,uint8)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4589:24:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_contract$_ERC20_$7764",
                            "typeString": "contract ERC20"
                          },
                          "id": 408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 406,
                            "name": "t0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 393,
                            "src": "4627:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$7764",
                              "typeString": "contract ERC20"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 407,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 90,
                            "src": "4633:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$7764",
                              "typeString": "contract ERC20"
                            }
                          },
                          "src": "4627:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_contract$_ERC20_$7764",
                            "typeString": "contract ERC20"
                          },
                          "id": 411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 409,
                            "name": "t1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 400,
                            "src": "4643:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$7764",
                              "typeString": "contract ERC20"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 410,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 93,
                            "src": "4649:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$7764",
                              "typeString": "contract ERC20"
                            }
                          },
                          "src": "4643:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4627:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4745563a20496e76616c6964205452",
                        "id": 413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4657:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_721a26da23fcaf2b0b3efff369cf2337d1dba3fc87baed3949055b03e688608f",
                          "typeString": "literal_string \"GEV: Invalid TR\""
                        },
                        "value": "GEV: Invalid TR"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_721a26da23fcaf2b0b3efff369cf2337d1dba3fc87baed3949055b03e688608f",
                          "typeString": "literal_string \"GEV: Invalid TR\""
                        }
                      ],
                      "id": 405,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4619:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4619:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 415,
                  "nodeType": "ExpressionStatement",
                  "src": "4619:56:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 416,
                        "name": "ticks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83,
                        "src": "4685:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$10428_$dyn_storage",
                          "typeString": "contract TokenisableRange[] storage ref"
                        }
                      },
                      "id": 417,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4691:6:0",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4685:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 418,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4701:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4685:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 510,
                    "nodeType": "Block",
                    "src": "4728:597:0",
                    "statements": [
                      {
                        "condition": {
                          "id": 427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "4785:18:0",
                          "subExpression": {
                            "id": 426,
                            "name": "baseTokenIsToken0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 124,
                            "src": "4786:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                },
                                "id": 450,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 442,
                                      "name": "t",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 386,
                                      "src": "4918:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                                        "typeString": "contract TokenisableRange"
                                      }
                                    },
                                    "id": 443,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4920:9:0",
                                    "memberName": "upperTick",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 8591,
                                    "src": "4918:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_int24_$",
                                      "typeString": "function () view external returns (int24)"
                                    }
                                  },
                                  "id": 444,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4918:13:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int24",
                                    "typeString": "int24"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "baseExpression": {
                                        "id": 445,
                                        "name": "ticks",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 83,
                                        "src": "4934:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$10428_$dyn_storage",
                                          "typeString": "contract TokenisableRange[] storage ref"
                                        }
                                      },
                                      "id": 447,
                                      "indexExpression": {
                                        "hexValue": "30",
                                        "id": 446,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "4940:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4934:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                                        "typeString": "contract TokenisableRange"
                                      }
                                    },
                                    "id": 448,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4943:9:0",
                                    "memberName": "lowerTick",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 8589,
                                    "src": "4934:18:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_int24_$",
                                      "typeString": "function () view external returns (int24)"
                                    }
                                  },
                                  "id": 449,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4934:20:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int24",
                                    "typeString": "int24"
                                  }
                                },
                                "src": "4918:36:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "4745563a205368696674205469636b204f7665726c6170",
                                "id": 451,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4956:25:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_8d21f0e338d9df72b1df4ff3a1b9fc7824e37bba293577795f70c54b0705f55b",
                                  "typeString": "literal_string \"GEV: Shift Tick Overlap\""
                                },
                                "value": "GEV: Shift Tick Overlap"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_8d21f0e338d9df72b1df4ff3a1b9fc7824e37bba293577795f70c54b0705f55b",
                                  "typeString": "literal_string \"GEV: Shift Tick Overlap\""
                                }
                              ],
                              "id": 441,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "4909:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 452,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4909:73:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 453,
                          "nodeType": "ExpressionStatement",
                          "src": "4909:73:0"
                        },
                        "id": 454,
                        "nodeType": "IfStatement",
                        "src": "4781:201:0",
                        "trueBody": {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                },
                                "id": 437,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 429,
                                      "name": "t",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 386,
                                      "src": "4823:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                                        "typeString": "contract TokenisableRange"
                                      }
                                    },
                                    "id": 430,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4825:9:0",
                                    "memberName": "lowerTick",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 8589,
                                    "src": "4823:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_int24_$",
                                      "typeString": "function () view external returns (int24)"
                                    }
                                  },
                                  "id": 431,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4823:13:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int24",
                                    "typeString": "int24"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "baseExpression": {
                                        "id": 432,
                                        "name": "ticks",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 83,
                                        "src": "4839:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$10428_$dyn_storage",
                                          "typeString": "contract TokenisableRange[] storage ref"
                                        }
                                      },
                                      "id": 434,
                                      "indexExpression": {
                                        "hexValue": "30",
                                        "id": 433,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "4845:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4839:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                                        "typeString": "contract TokenisableRange"
                                      }
                                    },
                                    "id": 435,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4848:9:0",
                                    "memberName": "upperTick",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 8591,
                                    "src": "4839:18:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_int24_$",
                                      "typeString": "function () view external returns (int24)"
                                    }
                                  },
                                  "id": 436,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4839:20:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int24",
                                    "typeString": "int24"
                                  }
                                },
                                "src": "4823:36:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "4745563a205368696674205469636b204f7665726c6170",
                                "id": 438,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4861:25:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_8d21f0e338d9df72b1df4ff3a1b9fc7824e37bba293577795f70c54b0705f55b",
                                  "typeString": "literal_string \"GEV: Shift Tick Overlap\""
                                },
                                "value": "GEV: Shift Tick Overlap"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_8d21f0e338d9df72b1df4ff3a1b9fc7824e37bba293577795f70c54b0705f55b",
                                  "typeString": "literal_string \"GEV: Shift Tick Overlap\""
                                }
                              ],
                              "id": 428,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "4814:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 439,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4814:73:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 440,
                          "nodeType": "ExpressionStatement",
                          "src": "4814:73:0"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 458,
                                "name": "ticks",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 83,
                                "src": "5050:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$10428_$dyn_storage",
                                  "typeString": "contract TokenisableRange[] storage ref"
                                }
                              },
                              "id": 463,
                              "indexExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 462,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 459,
                                    "name": "ticks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 83,
                                    "src": "5056:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$10428_$dyn_storage",
                                      "typeString": "contract TokenisableRange[] storage ref"
                                    }
                                  },
                                  "id": 460,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5062:6:0",
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "5056:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 461,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5069:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "5056:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5050:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                                "typeString": "contract TokenisableRange"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                                "typeString": "contract TokenisableRange"
                              }
                            ],
                            "expression": {
                              "id": 455,
                              "name": "ticks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 83,
                              "src": "5039:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$10428_$dyn_storage",
                                "typeString": "contract TokenisableRange[] storage ref"
                              }
                            },
                            "id": 457,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5045:4:0",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "5039:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_TokenisableRange_$10428_$dyn_storage_ptr_$_t_contract$_TokenisableRange_$10428_$returns$__$attached_to$_t_array$_t_contract$_TokenisableRange_$10428_$dyn_storage_ptr_$",
                              "typeString": "function (contract TokenisableRange[] storage pointer,contract TokenisableRange)"
                            }
                          },
                          "id": 464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5039:33:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 465,
                        "nodeType": "ExpressionStatement",
                        "src": "5039:33:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 466,
                              "name": "ticks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 83,
                              "src": "5112:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$10428_$dyn_storage",
                                "typeString": "contract TokenisableRange[] storage ref"
                              }
                            },
                            "id": 467,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5118:6:0",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "5112:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 468,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5127:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "5112:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 503,
                        "nodeType": "IfStatement",
                        "src": "5108:154:0",
                        "trueBody": {
                          "id": 502,
                          "nodeType": "Block",
                          "src": "5129:133:0",
                          "statements": [
                            {
                              "body": {
                                "expression": {
                                  "id": 499,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "baseExpression": {
                                      "id": 483,
                                      "name": "ticks",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 83,
                                      "src": "5194:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$10428_$dyn_storage",
                                        "typeString": "contract TokenisableRange[] storage ref"
                                      }
                                    },
                                    "id": 490,
                                    "indexExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 489,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 487,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "id": 484,
                                            "name": "ticks",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 83,
                                            "src": "5200:5:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$10428_$dyn_storage",
                                              "typeString": "contract TokenisableRange[] storage ref"
                                            }
                                          },
                                          "id": 485,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "5206:6:0",
                                          "memberName": "length",
                                          "nodeType": "MemberAccess",
                                          "src": "5200:12:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "hexValue": "32",
                                          "id": 486,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "5215:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_2_by_1",
                                            "typeString": "int_const 2"
                                          },
                                          "value": "2"
                                        },
                                        "src": "5200:16:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 488,
                                        "name": "k",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 471,
                                        "src": "5219:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "5200:20:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "nodeType": "IndexAccess",
                                    "src": "5194:27:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                                      "typeString": "contract TokenisableRange"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "baseExpression": {
                                      "id": 491,
                                      "name": "ticks",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 83,
                                      "src": "5224:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$10428_$dyn_storage",
                                        "typeString": "contract TokenisableRange[] storage ref"
                                      }
                                    },
                                    "id": 498,
                                    "indexExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 497,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 495,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "id": 492,
                                            "name": "ticks",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 83,
                                            "src": "5230:5:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$10428_$dyn_storage",
                                              "typeString": "contract TokenisableRange[] storage ref"
                                            }
                                          },
                                          "id": 493,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "5236:6:0",
                                          "memberName": "length",
                                          "nodeType": "MemberAccess",
                                          "src": "5230:12:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "hexValue": "33",
                                          "id": 494,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "5245:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_3_by_1",
                                            "typeString": "int_const 3"
                                          },
                                          "value": "3"
                                        },
                                        "src": "5230:16:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 496,
                                        "name": "k",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 471,
                                        "src": "5249:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "5230:20:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5224:27:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                                      "typeString": "contract TokenisableRange"
                                    }
                                  },
                                  "src": "5194:57:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                                    "typeString": "contract TokenisableRange"
                                  }
                                },
                                "id": 500,
                                "nodeType": "ExpressionStatement",
                                "src": "5194:57:0"
                              },
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 479,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 474,
                                  "name": "k",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 471,
                                  "src": "5156:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 478,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 475,
                                      "name": "ticks",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 83,
                                      "src": "5160:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$10428_$dyn_storage",
                                        "typeString": "contract TokenisableRange[] storage ref"
                                      }
                                    },
                                    "id": 476,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "5166:6:0",
                                    "memberName": "length",
                                    "nodeType": "MemberAccess",
                                    "src": "5160:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "hexValue": "32",
                                    "id": 477,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5175:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "src": "5160:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5156:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 501,
                              "initializationExpression": {
                                "assignments": [
                                  471
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 471,
                                    "mutability": "mutable",
                                    "name": "k",
                                    "nameLocation": "5149:1:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 501,
                                    "src": "5144:6:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "typeName": {
                                      "id": 470,
                                      "name": "uint",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5144:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 473,
                                "initialValue": {
                                  "hexValue": "30",
                                  "id": 472,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5153:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "nodeType": "VariableDeclarationStatement",
                                "src": "5144:10:0"
                              },
                              "loopExpression": {
                                "expression": {
                                  "id": 481,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "++",
                                  "prefix": false,
                                  "src": "5178:3:0",
                                  "subExpression": {
                                    "id": 480,
                                    "name": "k",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 471,
                                    "src": "5178:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 482,
                                "nodeType": "ExpressionStatement",
                                "src": "5178:3:0"
                              },
                              "nodeType": "ForStatement",
                              "src": "5139:112:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 508,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 504,
                              "name": "ticks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 83,
                              "src": "5306:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$10428_$dyn_storage",
                                "typeString": "contract TokenisableRange[] storage ref"
                              }
                            },
                            "id": 506,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 505,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5312:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5306:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                              "typeString": "contract TokenisableRange"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 507,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 386,
                            "src": "5317:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                              "typeString": "contract TokenisableRange"
                            }
                          },
                          "src": "5306:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                            "typeString": "contract TokenisableRange"
                          }
                        },
                        "id": 509,
                        "nodeType": "ExpressionStatement",
                        "src": "5306:12:0"
                      }
                    ]
                  },
                  "id": 511,
                  "nodeType": "IfStatement",
                  "src": "4681:644:0",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 423,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 386,
                          "src": "4715:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                            "typeString": "contract TokenisableRange"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                            "typeString": "contract TokenisableRange"
                          }
                        ],
                        "expression": {
                          "id": 420,
                          "name": "ticks",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83,
                          "src": "4704:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$10428_$dyn_storage",
                            "typeString": "contract TokenisableRange[] storage ref"
                          }
                        },
                        "id": 422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4710:4:0",
                        "memberName": "push",
                        "nodeType": "MemberAccess",
                        "src": "4704:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_TokenisableRange_$10428_$dyn_storage_ptr_$_t_contract$_TokenisableRange_$10428_$returns$__$attached_to$_t_array$_t_contract$_TokenisableRange_$10428_$dyn_storage_ptr_$",
                          "typeString": "function (contract TokenisableRange[] storage pointer,contract TokenisableRange)"
                        }
                      },
                      "id": 424,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4704:13:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 425,
                    "nodeType": "ExpressionStatement",
                    "src": "4704:13:0"
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 513,
                        "name": "tr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 379,
                        "src": "5345:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 512,
                      "name": "ShiftTick",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "5335:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5335:13:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 515,
                  "nodeType": "EmitStatement",
                  "src": "5330:18:0"
                }
              ]
            },
            "documentation": {
              "id": 377,
              "nodeType": "StructuredDocumentation",
              "src": "4386:69:0",
              "text": "@notice Add a new ticker to the list\n @param tr Tick address"
            },
            "functionSelector": "a2716e5e",
            "id": 517,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 382,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 381,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "4496:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7120,
                  "src": "4496:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4496:9:0"
              }
            ],
            "name": "shiftTick",
            "nameLocation": "4467:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 380,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 379,
                  "mutability": "mutable",
                  "name": "tr",
                  "nameLocation": "4485:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 517,
                  "src": "4477:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 378,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4477:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4476:12:0"
            },
            "returnParameters": {
              "id": 383,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4506:0:0"
            },
            "scope": 1849,
            "src": "4458:895:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 569,
              "nodeType": "Block",
              "src": "5514:238:0",
              "statements": [
                {
                  "assignments": [
                    529,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 529,
                      "mutability": "mutable",
                      "name": "t0",
                      "nameLocation": "5527:2:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 569,
                      "src": "5521:8:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$7764",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 528,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 527,
                          "name": "ERC20",
                          "nameLocations": [
                            "5521:5:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 7764,
                          "src": "5521:5:0"
                        },
                        "referencedDeclaration": 7764,
                        "src": "5521:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$7764",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 535,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 531,
                            "name": "tr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 520,
                            "src": "5551:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 530,
                          "name": "TokenisableRange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10428,
                          "src": "5534:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_TokenisableRange_$10428_$",
                            "typeString": "type(contract TokenisableRange)"
                          }
                        },
                        "id": 532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5534:20:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                          "typeString": "contract TokenisableRange"
                        }
                      },
                      "id": 533,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5555:6:0",
                      "memberName": "TOKEN0",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8608,
                      "src": "5534:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ERC20_$7764_$_t_uint8_$",
                        "typeString": "function () view external returns (contract ERC20,uint8)"
                      }
                    },
                    "id": 534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5534:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_contract$_ERC20_$7764_$_t_uint8_$",
                      "typeString": "tuple(contract ERC20,uint8)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5520:43:0"
                },
                {
                  "assignments": [
                    538,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 538,
                      "mutability": "mutable",
                      "name": "t1",
                      "nameLocation": "5576:2:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 569,
                      "src": "5570:8:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$7764",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 537,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 536,
                          "name": "ERC20",
                          "nameLocations": [
                            "5570:5:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 7764,
                          "src": "5570:5:0"
                        },
                        "referencedDeclaration": 7764,
                        "src": "5570:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$7764",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 544,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 540,
                            "name": "tr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 520,
                            "src": "5600:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 539,
                          "name": "TokenisableRange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10428,
                          "src": "5583:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_TokenisableRange_$10428_$",
                            "typeString": "type(contract TokenisableRange)"
                          }
                        },
                        "id": 541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5583:20:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                          "typeString": "contract TokenisableRange"
                        }
                      },
                      "id": 542,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5604:6:0",
                      "memberName": "TOKEN1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8611,
                      "src": "5583:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ERC20_$7764_$_t_uint8_$",
                        "typeString": "function () view external returns (contract ERC20,uint8)"
                      }
                    },
                    "id": 543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5583:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_contract$_ERC20_$7764_$_t_uint8_$",
                      "typeString": "tuple(contract ERC20,uint8)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5569:43:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_contract$_ERC20_$7764",
                            "typeString": "contract ERC20"
                          },
                          "id": 548,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 546,
                            "name": "t0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 529,
                            "src": "5626:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$7764",
                              "typeString": "contract ERC20"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 547,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 90,
                            "src": "5632:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$7764",
                              "typeString": "contract ERC20"
                            }
                          },
                          "src": "5626:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_contract$_ERC20_$7764",
                            "typeString": "contract ERC20"
                          },
                          "id": 551,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 549,
                            "name": "t1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 538,
                            "src": "5642:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$7764",
                              "typeString": "contract ERC20"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 550,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 93,
                            "src": "5648:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$7764",
                              "typeString": "contract ERC20"
                            }
                          },
                          "src": "5642:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5626:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4745563a20496e76616c6964205452",
                        "id": 553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5656:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_721a26da23fcaf2b0b3efff369cf2337d1dba3fc87baed3949055b03e688608f",
                          "typeString": "literal_string \"GEV: Invalid TR\""
                        },
                        "value": "GEV: Invalid TR"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_721a26da23fcaf2b0b3efff369cf2337d1dba3fc87baed3949055b03e688608f",
                          "typeString": "literal_string \"GEV: Invalid TR\""
                        }
                      ],
                      "id": 545,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5618:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5618:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 555,
                  "nodeType": "ExpressionStatement",
                  "src": "5618:56:0"
                },
                {
                  "expression": {
                    "id": 562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 556,
                        "name": "ticks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83,
                        "src": "5680:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$10428_$dyn_storage",
                          "typeString": "contract TokenisableRange[] storage ref"
                        }
                      },
                      "id": 558,
                      "indexExpression": {
                        "id": 557,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 522,
                        "src": "5686:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5680:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                        "typeString": "contract TokenisableRange"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 560,
                          "name": "tr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 520,
                          "src": "5712:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 559,
                        "name": "TokenisableRange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10428,
                        "src": "5695:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TokenisableRange_$10428_$",
                          "typeString": "type(contract TokenisableRange)"
                        }
                      },
                      "id": 561,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5695:20:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                        "typeString": "contract TokenisableRange"
                      }
                    },
                    "src": "5680:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                      "typeString": "contract TokenisableRange"
                    }
                  },
                  "id": 563,
                  "nodeType": "ExpressionStatement",
                  "src": "5680:35:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 565,
                        "name": "tr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 520,
                        "src": "5737:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 566,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 522,
                        "src": "5741:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 564,
                      "name": "ModifyTick",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "5726:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5726:21:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 568,
                  "nodeType": "EmitStatement",
                  "src": "5721:26:0"
                }
              ]
            },
            "documentation": {
              "id": 518,
              "nodeType": "StructuredDocumentation",
              "src": "5358:92:0",
              "text": "@notice Modify ticker\n @param tr New tick address\n @param index Tick to modify"
            },
            "functionSelector": "1e5d5c07",
            "id": 570,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 525,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 524,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "5504:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7120,
                  "src": "5504:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "5504:9:0"
              }
            ],
            "name": "modifyTick",
            "nameLocation": "5462:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 523,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 520,
                  "mutability": "mutable",
                  "name": "tr",
                  "nameLocation": "5481:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 570,
                  "src": "5473:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 519,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5473:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 522,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "5490:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 570,
                  "src": "5485:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 521,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5485:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5472:24:0"
            },
            "returnParameters": {
              "id": 526,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5514:0:0"
            },
            "scope": 1849,
            "src": "5453:299:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 581,
              "nodeType": "Block",
              "src": "5877:29:0",
              "statements": [
                {
                  "expression": {
                    "id": 579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 576,
                      "name": "len",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 574,
                      "src": "5883:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 577,
                        "name": "ticks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83,
                        "src": "5889:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$10428_$dyn_storage",
                          "typeString": "contract TokenisableRange[] storage ref"
                        }
                      },
                      "id": 578,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5895:6:0",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5889:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5883:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 580,
                  "nodeType": "ExpressionStatement",
                  "src": "5883:18:0"
                }
              ]
            },
            "documentation": {
              "id": 571,
              "nodeType": "StructuredDocumentation",
              "src": "5758:62:0",
              "text": "@notice Ticks length getter\n @return len Ticks length"
            },
            "functionSelector": "a2260dd6",
            "id": 582,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTickLength",
            "nameLocation": "5832:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 572,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5845:2:0"
            },
            "returnParameters": {
              "id": 575,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 574,
                  "mutability": "mutable",
                  "name": "len",
                  "nameLocation": "5873:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 582,
                  "src": "5868:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 573,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5868:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5867:10:0"
            },
            "scope": 1849,
            "src": "5823:83:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 605,
              "nodeType": "Block",
              "src": "6044:122:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 591,
                          "name": "newBaseFeeX4",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 585,
                          "src": "6056:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "316534",
                          "id": 592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6071:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000_by_1",
                            "typeString": "int_const 10000"
                          },
                          "value": "1e4"
                        },
                        "src": "6056:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4745563a20496e76616c6964204261736520466565",
                        "id": 594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6076:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f1337c3c1643df06ed277a659c5dadb86a46616e356810e36e75c585c41c6082",
                          "typeString": "literal_string \"GEV: Invalid Base Fee\""
                        },
                        "value": "GEV: Invalid Base Fee"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f1337c3c1643df06ed277a659c5dadb86a46616e356810e36e75c585c41c6082",
                          "typeString": "literal_string \"GEV: Invalid Base Fee\""
                        }
                      ],
                      "id": 590,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6048:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6048:52:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 596,
                  "nodeType": "ExpressionStatement",
                  "src": "6048:52:0"
                },
                {
                  "expression": {
                    "id": 599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 597,
                      "name": "baseFeeX4",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100,
                      "src": "6106:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 598,
                      "name": "newBaseFeeX4",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 585,
                      "src": "6118:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6106:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 600,
                  "nodeType": "ExpressionStatement",
                  "src": "6106:24:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 602,
                        "name": "newBaseFeeX4",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 585,
                        "src": "6148:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 601,
                      "name": "SetFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "6141:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6141:20:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 604,
                  "nodeType": "EmitStatement",
                  "src": "6136:25:0"
                }
              ]
            },
            "documentation": {
              "id": 583,
              "nodeType": "StructuredDocumentation",
              "src": "5912:73:0",
              "text": "@notice Set the base fee\n @param newBaseFeeX4 New base fee in E4"
            },
            "functionSelector": "46860698",
            "id": 606,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 588,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 587,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "6034:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7120,
                  "src": "6034:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "6034:9:0"
              }
            ],
            "name": "setBaseFee",
            "nameLocation": "5997:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 586,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 585,
                  "mutability": "mutable",
                  "name": "newBaseFeeX4",
                  "nameLocation": "6013:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 606,
                  "src": "6008:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 584,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6008:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6007:19:0"
            },
            "returnParameters": {
              "id": 589,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6044:0:0"
            },
            "scope": 1849,
            "src": "5988:178:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 622,
              "nodeType": "Block",
              "src": "6289:60:0",
              "statements": [
                {
                  "expression": {
                    "id": 616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 614,
                      "name": "tvlCap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 104,
                      "src": "6295:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 615,
                      "name": "newTvlCap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 609,
                      "src": "6304:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6295:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 617,
                  "nodeType": "ExpressionStatement",
                  "src": "6295:18:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 619,
                        "name": "newTvlCap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 609,
                        "src": "6334:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 618,
                      "name": "SetTvlCap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75,
                      "src": "6324:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6324:20:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 621,
                  "nodeType": "EmitStatement",
                  "src": "6319:25:0"
                }
              ]
            },
            "documentation": {
              "id": 607,
              "nodeType": "StructuredDocumentation",
              "src": "6172:62:0",
              "text": "@notice Set the TVL cap\n @param newTvlCap New TVL cap"
            },
            "functionSelector": "dd0290e2",
            "id": 623,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 612,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 611,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "6279:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7120,
                  "src": "6279:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "6279:9:0"
              }
            ],
            "name": "setTvlCap",
            "nameLocation": "6246:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 610,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 609,
                  "mutability": "mutable",
                  "name": "newTvlCap",
                  "nameLocation": "6261:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 623,
                  "src": "6256:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 608,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6256:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6255:16:0"
            },
            "returnParameters": {
              "id": 613,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6289:0:0"
            },
            "scope": 1849,
            "src": "6237:112:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 641,
              "nodeType": "Block",
              "src": "6499:121:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 628,
                          "name": "poolMatchesOracle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1443,
                          "src": "6513:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6513:19:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4745563a204f7261636c65204572726f72",
                        "id": 630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6534:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b6bafe513a21f748342ce4376bb8a680293a3c5141deed2893d80a452fa7884d",
                          "typeString": "literal_string \"GEV: Oracle Error\""
                        },
                        "value": "GEV: Oracle Error"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b6bafe513a21f748342ce4376bb8a680293a3c5141deed2893d80a452fa7884d",
                          "typeString": "literal_string \"GEV: Oracle Error\""
                        }
                      ],
                      "id": 627,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6505:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6505:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 632,
                  "nodeType": "ExpressionStatement",
                  "src": "6505:49:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 633,
                      "name": "removeFromAllTicks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1132,
                      "src": "6560:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6560:20:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 635,
                  "nodeType": "ExpressionStatement",
                  "src": "6560:20:0"
                },
                {
                  "condition": {
                    "id": 636,
                    "name": "isEnabled",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 96,
                    "src": "6590:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 640,
                  "nodeType": "IfStatement",
                  "src": "6586:29:0",
                  "trueBody": {
                    "expression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 637,
                        "name": "deployAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1343,
                        "src": "6601:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                          "typeString": "function ()"
                        }
                      },
                      "id": 638,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6601:14:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 639,
                    "nodeType": "ExpressionStatement",
                    "src": "6601:14:0"
                  }
                }
              ]
            },
            "documentation": {
              "id": 624,
              "nodeType": "StructuredDocumentation",
              "src": "6394:74:0",
              "text": "@notice Rebalance tickers\n @dev Provide the list of tickers from "
            },
            "functionSelector": "7d7c2a1c",
            "id": 642,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rebalance",
            "nameLocation": "6480:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 625,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6489:2:0"
            },
            "returnParameters": {
              "id": 626,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6499:0:0"
            },
            "scope": 1849,
            "src": "6471:149:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 803,
              "nodeType": "Block",
              "src": "7074:1023:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 655,
                          "name": "poolMatchesOracle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1443,
                          "src": "7088:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7088:19:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4745563a204f7261636c65204572726f72",
                        "id": 657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7109:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b6bafe513a21f748342ce4376bb8a680293a3c5141deed2893d80a452fa7884d",
                          "typeString": "literal_string \"GEV: Oracle Error\""
                        },
                        "value": "GEV: Oracle Error"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b6bafe513a21f748342ce4376bb8a680293a3c5141deed2893d80a452fa7884d",
                          "typeString": "literal_string \"GEV: Oracle Error\""
                        }
                      ],
                      "id": 654,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7080:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7080:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 659,
                  "nodeType": "ExpressionStatement",
                  "src": "7080:49:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 660,
                      "name": "liquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 645,
                      "src": "7139:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 661,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7152:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7139:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 670,
                  "nodeType": "IfStatement",
                  "src": "7135:53:0",
                  "trueBody": {
                    "expression": {
                      "id": 668,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 663,
                        "name": "liquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 645,
                        "src": "7155:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 665,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "7177:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 666,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7181:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "7177:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 664,
                          "name": "balanceOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7317,
                          "src": "7167:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7167:21:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "7155:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 669,
                    "nodeType": "ExpressionStatement",
                    "src": "7155:33:0"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 677,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 672,
                          "name": "liquidity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 645,
                          "src": "7202:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 674,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7225:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 675,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7229:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7225:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 673,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7317,
                            "src": "7215:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 676,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7215:21:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7202:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4745563a20496e73756666696369656e742042616c616e6365",
                        "id": 678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7238:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c6eec2bd9552be6a059b1808c03537b6c2d4fafafd65d234d083f14d22e0ca34",
                          "typeString": "literal_string \"GEV: Insufficient Balance\""
                        },
                        "value": "GEV: Insufficient Balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c6eec2bd9552be6a059b1808c03537b6c2d4fafafd65d234d083f14d22e0ca34",
                          "typeString": "literal_string \"GEV: Insufficient Balance\""
                        }
                      ],
                      "id": 671,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7194:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7194:72:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 680,
                  "nodeType": "ExpressionStatement",
                  "src": "7194:72:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 682,
                          "name": "liquidity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 645,
                          "src": "7280:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 683,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7292:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7280:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4745563a205769746864726177205a65726f",
                        "id": 685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7295:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_812d7977742ddb1949ae249b689faf26cf04d50ee2885a07de08d39d9e85f23b",
                          "typeString": "literal_string \"GEV: Withdraw Zero\""
                        },
                        "value": "GEV: Withdraw Zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_812d7977742ddb1949ae249b689faf26cf04d50ee2885a07de08d39d9e85f23b",
                          "typeString": "literal_string \"GEV: Withdraw Zero\""
                        }
                      ],
                      "id": 681,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7272:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7272:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 687,
                  "nodeType": "ExpressionStatement",
                  "src": "7272:44:0"
                },
                {
                  "assignments": [
                    689
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 689,
                      "mutability": "mutable",
                      "name": "vaultValueX8",
                      "nameLocation": "7332:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 803,
                      "src": "7327:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 688,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7327:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 692,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 690,
                      "name": "getTVL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1522,
                      "src": "7347:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7347:8:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7327:28:0"
                },
                {
                  "assignments": [
                    694
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 694,
                      "mutability": "mutable",
                      "name": "valueX8",
                      "nameLocation": "7366:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 803,
                      "src": "7361:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 693,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7361:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 701,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 697,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 695,
                        "name": "vaultValueX8",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 689,
                        "src": "7376:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "id": 696,
                        "name": "liquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 645,
                        "src": "7391:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "7376:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 698,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7303,
                        "src": "7403:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 699,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7403:13:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7376:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7361:55:0"
                },
                {
                  "expression": {
                    "id": 717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 702,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 652,
                      "src": "7422:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 716,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 711,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 703,
                          "name": "valueX8",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 694,
                          "src": "7431:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 710,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 704,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7441:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 706,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 647,
                                    "src": "7451:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 705,
                                  "name": "ERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7764,
                                  "src": "7445:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ERC20_$7764_$",
                                    "typeString": "type(contract ERC20)"
                                  }
                                },
                                "id": 707,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7445:12:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$7764",
                                  "typeString": "contract ERC20"
                                }
                              },
                              "id": 708,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7458:8:0",
                              "memberName": "decimals",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7293,
                              "src": "7445:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                "typeString": "function () view external returns (uint8)"
                              }
                            },
                            "id": 709,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7445:23:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "7441:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7431:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "arguments": [
                          {
                            "id": 714,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 647,
                            "src": "7492:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 712,
                            "name": "oracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 116,
                            "src": "7471:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPriceOracle_$10634",
                              "typeString": "contract IPriceOracle"
                            }
                          },
                          "id": 713,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7478:13:0",
                          "memberName": "getAssetPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10626,
                          "src": "7471:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 715,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7471:27:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "7431:67:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7422:76:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 718,
                  "nodeType": "ExpressionStatement",
                  "src": "7422:76:0"
                },
                {
                  "assignments": [
                    720
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 720,
                      "mutability": "mutable",
                      "name": "fee",
                      "nameLocation": "7509:3:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 803,
                      "src": "7504:8:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 719,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7504:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 733,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 730,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 721,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 652,
                        "src": "7515:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 728,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 723,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 647,
                              "src": "7543:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "id": 726,
                                  "name": "token1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 93,
                                  "src": "7560:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$7764",
                                    "typeString": "contract ERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC20_$7764",
                                    "typeString": "contract ERC20"
                                  }
                                ],
                                "id": 725,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7552:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 724,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7552:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 727,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7552:15:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "7543:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 722,
                          "name": "getAdjustedBaseFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1826,
                          "src": "7524:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$",
                            "typeString": "function (bool) view returns (uint256)"
                          }
                        },
                        "id": 729,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7524:44:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "7515:53:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "316534",
                      "id": 731,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7571:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000_by_1",
                        "typeString": "int_const 10000"
                      },
                      "value": "1e4"
                    },
                    "src": "7515:59:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7504:70:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 735,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7591:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7595:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7591:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 737,
                        "name": "liquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 645,
                        "src": "7603:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 734,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7696,
                      "src": "7585:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7585:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 739,
                  "nodeType": "ExpressionStatement",
                  "src": "7585:28:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 740,
                      "name": "removeFromAllTicks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1132,
                      "src": "7619:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7619:20:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 742,
                  "nodeType": "ExpressionStatement",
                  "src": "7619:20:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 747,
                        "name": "treasury",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 107,
                        "src": "7671:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 748,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 720,
                        "src": "7681:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 744,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 647,
                            "src": "7651:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 743,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7764,
                          "src": "7645:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$7764_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 745,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7645:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$7764",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 746,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7658:12:0",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7795,
                      "src": "7645:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$12207_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$12207_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7645:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 750,
                  "nodeType": "ExpressionStatement",
                  "src": "7645:40:0"
                },
                {
                  "assignments": [
                    752
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 752,
                      "mutability": "mutable",
                      "name": "bal",
                      "nameLocation": "7696:3:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 803,
                      "src": "7691:8:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 751,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7691:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 756,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 753,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 652,
                      "src": "7702:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 754,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 720,
                      "src": "7711:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7702:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7691:23:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 757,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 647,
                      "src": "7725:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 760,
                          "name": "WETH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 122,
                          "src": "7742:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IWETH_$8533",
                            "typeString": "contract IWETH"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IWETH_$8533",
                            "typeString": "contract IWETH"
                          }
                        ],
                        "id": 759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7734:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 758,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7734:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 761,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7734:13:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7725:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 788,
                    "nodeType": "Block",
                    "src": "7832:57:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 783,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7866:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 784,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7870:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7866:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 785,
                              "name": "bal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 752,
                              "src": "7878:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 780,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 647,
                                  "src": "7846:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 779,
                                "name": "ERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7764,
                                "src": "7840:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC20_$7764_$",
                                  "typeString": "type(contract ERC20)"
                                }
                              },
                              "id": 781,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7840:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$7764",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 782,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7853:12:0",
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7795,
                            "src": "7840:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$12207_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$12207_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 786,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7840:42:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 787,
                        "nodeType": "ExpressionStatement",
                        "src": "7840:42:0"
                      }
                    ]
                  },
                  "id": 789,
                  "nodeType": "IfStatement",
                  "src": "7721:168:0",
                  "trueBody": {
                    "id": 778,
                    "nodeType": "Block",
                    "src": "7748:74:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 766,
                              "name": "bal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 752,
                              "src": "7770:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 763,
                              "name": "WETH",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 122,
                              "src": "7756:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IWETH_$8533",
                                "typeString": "contract IWETH"
                              }
                            },
                            "id": 765,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7761:8:0",
                            "memberName": "withdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8503,
                            "src": "7756:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7756:18:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 768,
                        "nodeType": "ExpressionStatement",
                        "src": "7756:18:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 775,
                              "name": "bal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 752,
                              "src": "7811:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 771,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "7790:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 772,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7794:6:0",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "7790:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 770,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7782:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 769,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7782:8:0",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 773,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7782:19:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 774,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7802:8:0",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "7782:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7782:33:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 777,
                        "nodeType": "ExpressionStatement",
                        "src": "7782:33:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 790,
                    "name": "isEnabled",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 96,
                    "src": "8010:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 794,
                  "nodeType": "IfStatement",
                  "src": "8006:29:0",
                  "trueBody": {
                    "expression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 791,
                        "name": "deployAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1343,
                        "src": "8021:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                          "typeString": "function ()"
                        }
                      },
                      "id": 792,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8021:14:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 793,
                    "nodeType": "ExpressionStatement",
                    "src": "8021:14:0"
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 796,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8055:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8059:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8055:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 798,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 647,
                        "src": "8067:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 799,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 652,
                        "src": "8074:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 800,
                        "name": "liquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 645,
                        "src": "8082:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 795,
                      "name": "Withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "8046:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8046:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 802,
                  "nodeType": "EmitStatement",
                  "src": "8041:51:0"
                }
              ]
            },
            "documentation": {
              "id": 643,
              "nodeType": "StructuredDocumentation",
              "src": "6627:353:0",
              "text": "@notice Withdraw assets from the ticker\n @param liquidity Amount of GEV tokens to redeem; if 0, redeem all\n @param token Address of the token redeemed for\n @return amount Total token returned\n @dev For simplicity+efficieny, withdrawal is like a rebalancing, but a subset of the tokens are sent back to the user before redeploying"
            },
            "functionSelector": "00f714ce",
            "id": 804,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 650,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 649,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "7039:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7217,
                  "src": "7039:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "7039:12:0"
              }
            ],
            "name": "withdraw",
            "nameLocation": "6992:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 648,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 645,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "7006:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 804,
                  "src": "7001:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 644,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7001:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 647,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "7025:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 804,
                  "src": "7017:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 646,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7017:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7000:31:0"
            },
            "returnParameters": {
              "id": 653,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 652,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7066:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 804,
                  "src": "7061:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 651,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7061:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7060:13:0"
            },
            "scope": 1849,
            "src": "6983:1114:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1009,
              "nodeType": "Block",
              "src": "8353:1371:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 817,
                        "name": "isEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96,
                        "src": "8367:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4745563a20506f6f6c2044697361626c6564",
                        "id": 818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8378:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f8f2af3af85bcaef5efb8ffd72627aedc91b4c195d32cc69fd0d92cfdad1e2a",
                          "typeString": "literal_string \"GEV: Pool Disabled\""
                        },
                        "value": "GEV: Pool Disabled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f8f2af3af85bcaef5efb8ffd72627aedc91b4c195d32cc69fd0d92cfdad1e2a",
                          "typeString": "literal_string \"GEV: Pool Disabled\""
                        }
                      ],
                      "id": 816,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8359:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8359:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 820,
                  "nodeType": "ExpressionStatement",
                  "src": "8359:40:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 822,
                          "name": "poolMatchesOracle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1443,
                          "src": "8413:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8413:19:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4745563a204f7261636c65204572726f72",
                        "id": 824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8434:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b6bafe513a21f748342ce4376bb8a680293a3c5141deed2893d80a452fa7884d",
                          "typeString": "literal_string \"GEV: Oracle Error\""
                        },
                        "value": "GEV: Oracle Error"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b6bafe513a21f748342ce4376bb8a680293a3c5141deed2893d80a452fa7884d",
                          "typeString": "literal_string \"GEV: Oracle Error\""
                        }
                      ],
                      "id": 821,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8405:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8405:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 826,
                  "nodeType": "ExpressionStatement",
                  "src": "8405:49:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 828,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 807,
                            "src": "8468:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 831,
                                "name": "token0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 90,
                                "src": "8485:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$7764",
                                  "typeString": "contract ERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20_$7764",
                                  "typeString": "contract ERC20"
                                }
                              ],
                              "id": 830,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8477:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 829,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8477:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 832,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8477:15:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8468:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 834,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 807,
                            "src": "8496:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 837,
                                "name": "token1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 93,
                                "src": "8513:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$7764",
                                  "typeString": "contract ERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20_$7764",
                                  "typeString": "contract ERC20"
                                }
                              ],
                              "id": 836,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8505:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 835,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8505:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 838,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8505:15:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8496:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "8468:52:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4745563a20496e76616c696420546f6b656e",
                        "id": 841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8522:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1a81e91a00a25f8076b8f959bea0aa98d12c009760932f669cd33fe857643782",
                          "typeString": "literal_string \"GEV: Invalid Token\""
                        },
                        "value": "GEV: Invalid Token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1a81e91a00a25f8076b8f959bea0aa98d12c009760932f669cd33fe857643782",
                          "typeString": "literal_string \"GEV: Invalid Token\""
                        }
                      ],
                      "id": 827,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8460:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8460:83:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 843,
                  "nodeType": "ExpressionStatement",
                  "src": "8460:83:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 852,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 847,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 845,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 809,
                            "src": "8557:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 846,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8566:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "8557:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 851,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 848,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "8571:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 849,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8575:5:0",
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "8571:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 850,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8583:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "8571:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "8557:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4745563a204465706f736974205a65726f",
                        "id": 853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8586:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d21174ffc38ed6305e59d3d795c6c9b4570484648724d1d46578a739cbf62030",
                          "typeString": "literal_string \"GEV: Deposit Zero\""
                        },
                        "value": "GEV: Deposit Zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d21174ffc38ed6305e59d3d795c6c9b4570484648724d1d46578a739cbf62030",
                          "typeString": "literal_string \"GEV: Deposit Zero\""
                        }
                      ],
                      "id": 844,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8549:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8549:57:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 855,
                  "nodeType": "ExpressionStatement",
                  "src": "8549:57:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 856,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "8663:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 857,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8667:5:0",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "8663:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 858,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8675:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8663:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 897,
                    "nodeType": "Block",
                    "src": "8886:80:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 888,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "8925:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 889,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8929:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "8925:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 892,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "8945:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_GeVault_$1849",
                                    "typeString": "contract GeVault"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_GeVault_$1849",
                                    "typeString": "contract GeVault"
                                  }
                                ],
                                "id": 891,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8937:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 890,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8937:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 893,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8937:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 894,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 809,
                              "src": "8952:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 885,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 807,
                                  "src": "8901:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 884,
                                "name": "ERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7764,
                                "src": "8895:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC20_$7764_$",
                                  "typeString": "type(contract ERC20)"
                                }
                              },
                              "id": 886,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8895:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$7764",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 887,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8908:16:0",
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7821,
                            "src": "8895:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$12207_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$12207_$",
                              "typeString": "function (contract IERC20,address,address,uint256)"
                            }
                          },
                          "id": 895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8895:64:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 896,
                        "nodeType": "ExpressionStatement",
                        "src": "8895:64:0"
                      }
                    ]
                  },
                  "id": 898,
                  "nodeType": "IfStatement",
                  "src": "8659:307:0",
                  "trueBody": {
                    "id": 883,
                    "nodeType": "Block",
                    "src": "8677:199:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 866,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 861,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 807,
                                "src": "8693:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 864,
                                    "name": "WETH",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 122,
                                    "src": "8710:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IWETH_$8533",
                                      "typeString": "contract IWETH"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IWETH_$8533",
                                      "typeString": "contract IWETH"
                                    }
                                  ],
                                  "id": 863,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "8702:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 862,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8702:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 865,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8702:13:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "8693:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4745563a20496e76616c69642057657468",
                              "id": 867,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8717:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_19eaf930604be9a796136555c067df137eaee6449973bb1eaad8189761bbc8f3",
                                "typeString": "literal_string \"GEV: Invalid Weth\""
                              },
                              "value": "GEV: Invalid Weth"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_19eaf930604be9a796136555c067df137eaee6449973bb1eaad8189761bbc8f3",
                                "typeString": "literal_string \"GEV: Invalid Weth\""
                              }
                            ],
                            "id": 860,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8685:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 868,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8685:52:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 869,
                        "nodeType": "ExpressionStatement",
                        "src": "8685:52:0"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 870,
                                "name": "WETH",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 122,
                                "src": "8811:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IWETH_$8533",
                                  "typeString": "contract IWETH"
                                }
                              },
                              "id": 872,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8816:7:0",
                              "memberName": "deposit",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8482,
                              "src": "8811:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 875,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "expression": {
                                  "id": 873,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "8831:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 874,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8835:5:0",
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "8831:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "8811:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 876,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8811:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 877,
                        "nodeType": "ExpressionStatement",
                        "src": "8811:32:0"
                      },
                      {
                        "expression": {
                          "id": 881,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 878,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 809,
                            "src": "8851:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 879,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "8860:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 880,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8864:5:0",
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "8860:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8851:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 882,
                        "nodeType": "ExpressionStatement",
                        "src": "8851:18:0"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    900
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 900,
                      "mutability": "mutable",
                      "name": "fee",
                      "nameLocation": "9017:3:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1009,
                      "src": "9012:8:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 899,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9012:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 913,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 910,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 901,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 809,
                        "src": "9023:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 908,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 903,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 807,
                              "src": "9051:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "id": 906,
                                  "name": "token0",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 90,
                                  "src": "9068:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$7764",
                                    "typeString": "contract ERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC20_$7764",
                                    "typeString": "contract ERC20"
                                  }
                                ],
                                "id": 905,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9060:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 904,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9060:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 907,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9060:15:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "9051:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 902,
                          "name": "getAdjustedBaseFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1826,
                          "src": "9032:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$",
                            "typeString": "function (bool) view returns (uint256)"
                          }
                        },
                        "id": 909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9032:44:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "9023:53:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "316534",
                      "id": 911,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9079:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000_by_1",
                        "typeString": "int_const 10000"
                      },
                      "value": "1e4"
                    },
                    "src": "9023:59:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9012:70:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 918,
                        "name": "treasury",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 107,
                        "src": "9114:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 919,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 900,
                        "src": "9124:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 915,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 807,
                            "src": "9094:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 914,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7764,
                          "src": "9088:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$7764_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 916,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9088:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$7764",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 917,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9101:12:0",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7795,
                      "src": "9088:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$12207_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$12207_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9088:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 921,
                  "nodeType": "ExpressionStatement",
                  "src": "9088:40:0"
                },
                {
                  "assignments": [
                    923
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 923,
                      "mutability": "mutable",
                      "name": "valueX8",
                      "nameLocation": "9139:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1009,
                      "src": "9134:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 922,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9134:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 941,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 932,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 926,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 807,
                            "src": "9170:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 924,
                            "name": "oracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 116,
                            "src": "9149:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPriceOracle_$10634",
                              "typeString": "contract IPriceOracle"
                            }
                          },
                          "id": 925,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9156:13:0",
                          "memberName": "getAssetPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10626,
                          "src": "9149:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9149:27:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 930,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 928,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 809,
                              "src": "9180:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 929,
                              "name": "fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 900,
                              "src": "9189:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9180:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 931,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "9179:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "9149:44:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 939,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9196:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "id": 935,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 807,
                                "src": "9206:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 934,
                              "name": "ERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7764,
                              "src": "9200:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC20_$7764_$",
                                "typeString": "type(contract ERC20)"
                              }
                            },
                            "id": 936,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9200:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$7764",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 937,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9213:8:0",
                          "memberName": "decimals",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7293,
                          "src": "9200:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                            "typeString": "function () view external returns (uint8)"
                          }
                        },
                        "id": 938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9200:23:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "src": "9196:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9149:74:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9134:89:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 943,
                          "name": "tvlCap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 104,
                          "src": "9237:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 947,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 944,
                            "name": "valueX8",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 923,
                            "src": "9246:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 945,
                              "name": "getTVL",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1522,
                              "src": "9256:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 946,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9256:8:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9246:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9237:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4745563a204d6178204361702052656163686564",
                        "id": 949,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9266:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e540ac51ab8a8cba26f441fcd3099896acb16736a42961eb54759bdaa9f166b9",
                          "typeString": "literal_string \"GEV: Max Cap Reached\""
                        },
                        "value": "GEV: Max Cap Reached"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e540ac51ab8a8cba26f441fcd3099896acb16736a42961eb54759bdaa9f166b9",
                          "typeString": "literal_string \"GEV: Max Cap Reached\""
                        }
                      ],
                      "id": 942,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9229:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9229:60:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 951,
                  "nodeType": "ExpressionStatement",
                  "src": "9229:60:0"
                },
                {
                  "assignments": [
                    953
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 953,
                      "mutability": "mutable",
                      "name": "vaultValueX8",
                      "nameLocation": "9301:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1009,
                      "src": "9296:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 952,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9296:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 956,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 954,
                      "name": "getTVL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1522,
                      "src": "9316:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9316:8:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9296:28:0"
                },
                {
                  "assignments": [
                    958
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 958,
                      "mutability": "mutable",
                      "name": "tSupply",
                      "nameLocation": "9335:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1009,
                      "src": "9330:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 957,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9330:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 961,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 959,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7303,
                      "src": "9345:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9345:13:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9330:28:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 964,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 962,
                        "name": "tSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 958,
                        "src": "9412:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 963,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9423:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "9412:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 967,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 965,
                        "name": "vaultValueX8",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 953,
                        "src": "9428:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 966,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9444:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "9428:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "9412:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 983,
                    "nodeType": "Block",
                    "src": "9490:59:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 981,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 975,
                            "name": "liquidity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 814,
                            "src": "9498:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 980,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 978,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 976,
                                "name": "tSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 958,
                                "src": "9510:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 977,
                                "name": "valueX8",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 923,
                                "src": "9520:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9510:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 979,
                              "name": "vaultValueX8",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 953,
                              "src": "9530:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9510:32:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9498:44:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 982,
                        "nodeType": "ExpressionStatement",
                        "src": "9498:44:0"
                      }
                    ]
                  },
                  "id": 984,
                  "nodeType": "IfStatement",
                  "src": "9408:141:0",
                  "trueBody": {
                    "expression": {
                      "id": 973,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 969,
                        "name": "liquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 814,
                        "src": "9453:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 970,
                          "name": "valueX8",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 923,
                          "src": "9465:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31653130",
                          "id": 971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9475:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000_by_1",
                            "typeString": "int_const 10000000000"
                          },
                          "value": "1e10"
                        },
                        "src": "9465:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "9453:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 974,
                    "nodeType": "ExpressionStatement",
                    "src": "9453:26:0"
                  }
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 985,
                      "name": "rebalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 642,
                      "src": "9559:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9559:11:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 987,
                  "nodeType": "ExpressionStatement",
                  "src": "9559:11:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 991,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 989,
                          "name": "liquidity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 814,
                          "src": "9584:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 990,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9596:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "9584:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4745563a204e6f204c6971756964697479204164646564",
                        "id": 992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9599:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_770e3615f919fd004e9152bf03265d9212bb760fa4d9c105e78b83c2576ea217",
                          "typeString": "literal_string \"GEV: No Liquidity Added\""
                        },
                        "value": "GEV: No Liquidity Added"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_770e3615f919fd004e9152bf03265d9212bb760fa4d9c105e78b83c2576ea217",
                          "typeString": "literal_string \"GEV: No Liquidity Added\""
                        }
                      ],
                      "id": 988,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9576:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9576:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 994,
                  "nodeType": "ExpressionStatement",
                  "src": "9576:49:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 996,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9637:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9641:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9637:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 998,
                        "name": "liquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 814,
                        "src": "9649:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 995,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7624,
                      "src": "9631:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9631:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1000,
                  "nodeType": "ExpressionStatement",
                  "src": "9631:28:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1002,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9682:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9686:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9682:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1004,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 807,
                        "src": "9694:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1005,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 809,
                        "src": "9701:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1006,
                        "name": "liquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 814,
                        "src": "9709:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1001,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "9674:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 1007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9674:45:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1008,
                  "nodeType": "EmitStatement",
                  "src": "9669:50:0"
                }
              ]
            },
            "documentation": {
              "id": 805,
              "nodeType": "StructuredDocumentation",
              "src": "8102:147:0",
              "text": "@notice deposit tokens in the pool, convert to WETH if necessary\n @param token Token address\n @param amount Amount of token deposited"
            },
            "functionSelector": "47e7ef24",
            "id": 1010,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 812,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 811,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "8312:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7217,
                  "src": "8312:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "8312:12:0"
              }
            ],
            "name": "deposit",
            "nameLocation": "8261:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 810,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 807,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "8277:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1010,
                  "src": "8269:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 806,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8269:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 809,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8289:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1010,
                  "src": "8284:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 808,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8284:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8268:28:0"
            },
            "returnParameters": {
              "id": 815,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 814,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "8339:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1010,
                  "src": "8334:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 813,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8334:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8333:16:0"
            },
            "scope": 1849,
            "src": "8252:1472:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1040,
              "nodeType": "Block",
              "src": "9899:143:0",
              "statements": [
                {
                  "assignments": [
                    1017
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1017,
                      "mutability": "mutable",
                      "name": "supply",
                      "nameLocation": "9910:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1040,
                      "src": "9905:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1016,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9905:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1020,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1018,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7303,
                      "src": "9919:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 1019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9919:13:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9905:27:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1021,
                      "name": "supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1017,
                      "src": "9942:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1022,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9952:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9942:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1026,
                  "nodeType": "IfStatement",
                  "src": "9938:25:0",
                  "trueBody": {
                    "expression": {
                      "hexValue": "30",
                      "id": 1024,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9962:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "functionReturnParameters": 1015,
                    "id": 1025,
                    "nodeType": "Return",
                    "src": "9955:8:0"
                  }
                },
                {
                  "assignments": [
                    1028
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1028,
                      "mutability": "mutable",
                      "name": "vaultValue",
                      "nameLocation": "9974:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1040,
                      "src": "9969:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1027,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9969:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1031,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1029,
                      "name": "getTVL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1522,
                      "src": "9987:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 1030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9987:8:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9969:26:0"
                },
                {
                  "expression": {
                    "id": 1038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1032,
                      "name": "priceX8",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1014,
                      "src": "10001:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1037,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1033,
                          "name": "vaultValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1028,
                          "src": "10011:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 1034,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10024:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "10011:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "id": 1036,
                        "name": "supply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1017,
                        "src": "10031:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "10011:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10001:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1039,
                  "nodeType": "ExpressionStatement",
                  "src": "10001:36:0"
                }
              ]
            },
            "documentation": {
              "id": 1011,
              "nodeType": "StructuredDocumentation",
              "src": "9733:99:0",
              "text": "@notice Get value of 1e18 GEV tokens\n @return priceX8 price of 1e18 tokens with 8 decimals"
            },
            "functionSelector": "50d25bcd",
            "id": 1041,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "latestAnswer",
            "nameLocation": "9844:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1012,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9856:2:0"
            },
            "returnParameters": {
              "id": 1015,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1014,
                  "mutability": "mutable",
                  "name": "priceX8",
                  "nameLocation": "9890:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1041,
                  "src": "9882:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1013,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9882:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9881:17:0"
            },
            "scope": 1849,
            "src": "9835:207:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1109,
              "nodeType": "Block",
              "src": "10164:326:0",
              "statements": [
                {
                  "body": {
                    "id": 1107,
                    "nodeType": "Block",
                    "src": "10209:277:0",
                    "statements": [
                      {
                        "assignments": [
                          1062
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1062,
                            "mutability": "mutable",
                            "name": "t",
                            "nameLocation": "10234:1:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1107,
                            "src": "10217:18:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                              "typeString": "contract TokenisableRange"
                            },
                            "typeName": {
                              "id": 1061,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1060,
                                "name": "TokenisableRange",
                                "nameLocations": [
                                  "10217:16:0"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 10428,
                                "src": "10217:16:0"
                              },
                              "referencedDeclaration": 10428,
                              "src": "10217:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                                "typeString": "contract TokenisableRange"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1066,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1063,
                            "name": "ticks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 83,
                            "src": "10238:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$10428_$dyn_storage",
                              "typeString": "contract TokenisableRange[] storage ref"
                            }
                          },
                          "id": 1065,
                          "indexExpression": {
                            "id": 1064,
                            "name": "k",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1050,
                            "src": "10244:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10238:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                            "typeString": "contract TokenisableRange"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10217:29:0"
                      },
                      {
                        "assignments": [
                          1068
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1068,
                            "mutability": "mutable",
                            "name": "aTick",
                            "nameLocation": "10262:5:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1107,
                            "src": "10254:13:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1067,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10254:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1077,
                        "initialValue": {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1073,
                                    "name": "t",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1062,
                                    "src": "10305:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                                      "typeString": "contract TokenisableRange"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                                      "typeString": "contract TokenisableRange"
                                    }
                                  ],
                                  "id": 1072,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "10297:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1071,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10297:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1074,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10297:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 1069,
                                "name": "lendingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 113,
                                "src": "10270:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ILendingPool_$8439",
                                  "typeString": "contract ILendingPool"
                                }
                              },
                              "id": 1070,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10282:14:0",
                              "memberName": "getReserveData",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8329,
                              "src": "10270:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_struct$_ReserveData_$12555_memory_ptr_$",
                                "typeString": "function (address) view external returns (struct DataTypes.ReserveData memory)"
                              }
                            },
                            "id": 1075,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10270:38:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ReserveData_$12555_memory_ptr",
                              "typeString": "struct DataTypes.ReserveData memory"
                            }
                          },
                          "id": 1076,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10309:13:0",
                          "memberName": "aTokenAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12546,
                          "src": "10270:52:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10254:68:0"
                      },
                      {
                        "assignments": [
                          1079
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1079,
                            "mutability": "mutable",
                            "name": "bal",
                            "nameLocation": "10335:3:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1107,
                            "src": "10330:8:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1078,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "10330:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1089,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1086,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "10372:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_GeVault_$1849",
                                    "typeString": "contract GeVault"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_GeVault_$1849",
                                    "typeString": "contract GeVault"
                                  }
                                ],
                                "id": 1085,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10364:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1084,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10364:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1087,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10364:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1081,
                                  "name": "aTick",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1068,
                                  "src": "10347:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1080,
                                "name": "ERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7764,
                                "src": "10341:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC20_$7764_$",
                                  "typeString": "type(contract ERC20)"
                                }
                              },
                              "id": 1082,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10341:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$7764",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 1083,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10354:9:0",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7317,
                            "src": "10341:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1088,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10341:37:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10330:48:0"
                      },
                      {
                        "assignments": [
                          1091,
                          1093
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1091,
                            "mutability": "mutable",
                            "name": "amt0",
                            "nameLocation": "10392:4:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1107,
                            "src": "10387:9:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1090,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "10387:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1093,
                            "mutability": "mutable",
                            "name": "amt1",
                            "nameLocation": "10403:4:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1107,
                            "src": "10398:9:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1092,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "10398:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1098,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1096,
                              "name": "bal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1079,
                              "src": "10429:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1094,
                              "name": "t",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1062,
                              "src": "10411:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                                "typeString": "contract TokenisableRange"
                              }
                            },
                            "id": 1095,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10413:15:0",
                            "memberName": "getTokenAmounts",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10427,
                            "src": "10411:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256,uint256)"
                            }
                          },
                          "id": 1097,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10411:22:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10386:47:0"
                      },
                      {
                        "expression": {
                          "id": 1101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1099,
                            "name": "amount0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1045,
                            "src": "10441:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 1100,
                            "name": "amt0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1091,
                            "src": "10452:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10441:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1102,
                        "nodeType": "ExpressionStatement",
                        "src": "10441:15:0"
                      },
                      {
                        "expression": {
                          "id": 1105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1103,
                            "name": "amount1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1047,
                            "src": "10464:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 1104,
                            "name": "amt1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1093,
                            "src": "10475:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10464:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1106,
                        "nodeType": "ExpressionStatement",
                        "src": "10464:15:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1053,
                      "name": "k",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1050,
                      "src": "10187:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1054,
                        "name": "ticks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83,
                        "src": "10191:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$10428_$dyn_storage",
                          "typeString": "contract TokenisableRange[] storage ref"
                        }
                      },
                      "id": 1055,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10197:6:0",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "10191:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10187:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1108,
                  "initializationExpression": {
                    "assignments": [
                      1050
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1050,
                        "mutability": "mutable",
                        "name": "k",
                        "nameLocation": "10180:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1108,
                        "src": "10175:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1049,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "10175:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1052,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1051,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10184:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "10175:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1058,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "10205:3:0",
                      "subExpression": {
                        "id": 1057,
                        "name": "k",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1050,
                        "src": "10205:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1059,
                    "nodeType": "ExpressionStatement",
                    "src": "10205:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "10170:316:0"
                }
              ]
            },
            "documentation": {
              "id": 1042,
              "nodeType": "StructuredDocumentation",
              "src": "10051:39:0",
              "text": "@notice Get vault underlying assets"
            },
            "functionSelector": "0902f1ac",
            "id": 1110,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getReserves",
            "nameLocation": "10102:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1043,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10113:2:0"
            },
            "returnParameters": {
              "id": 1048,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1045,
                  "mutability": "mutable",
                  "name": "amount0",
                  "nameLocation": "10142:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1110,
                  "src": "10137:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1044,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "10137:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1047,
                  "mutability": "mutable",
                  "name": "amount1",
                  "nameLocation": "10156:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1110,
                  "src": "10151:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1046,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "10151:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10136:28:0"
            },
            "scope": 1849,
            "src": "10093:397:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1131,
              "nodeType": "Block",
              "src": "10625:85:0",
              "statements": [
                {
                  "body": {
                    "id": 1129,
                    "nodeType": "Block",
                    "src": "10670:32:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1126,
                              "name": "k",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1115,
                              "src": "10693:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1125,
                            "name": "removeFromTick",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1211,
                            "src": "10678:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10678:17:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1128,
                        "nodeType": "ExpressionStatement",
                        "src": "10678:17:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1118,
                      "name": "k",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1115,
                      "src": "10648:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1119,
                        "name": "ticks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83,
                        "src": "10652:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$10428_$dyn_storage",
                          "typeString": "contract TokenisableRange[] storage ref"
                        }
                      },
                      "id": 1120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10658:6:0",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "10652:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10648:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1130,
                  "initializationExpression": {
                    "assignments": [
                      1115
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1115,
                        "mutability": "mutable",
                        "name": "k",
                        "nameLocation": "10641:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1130,
                        "src": "10636:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1114,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "10636:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1117,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10645:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "10636:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1123,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "10666:3:0",
                      "subExpression": {
                        "id": 1122,
                        "name": "k",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1115,
                        "src": "10666:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1124,
                    "nodeType": "ExpressionStatement",
                    "src": "10666:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "10631:71:0"
                }
              ]
            },
            "documentation": {
              "id": 1111,
              "nodeType": "StructuredDocumentation",
              "src": "10528:55:0",
              "text": "@notice Remove assets from all the underlying ticks"
            },
            "id": 1132,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeFromAllTicks",
            "nameLocation": "10595:18:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1112,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10613:2:0"
            },
            "returnParameters": {
              "id": 1113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10625:0:0"
            },
            "scope": 1849,
            "src": "10586:124:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1210,
              "nodeType": "Block",
              "src": "10795:505:0",
              "statements": [
                {
                  "assignments": [
                    1140
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1140,
                      "mutability": "mutable",
                      "name": "tr",
                      "nameLocation": "10818:2:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1210,
                      "src": "10801:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                        "typeString": "contract TokenisableRange"
                      },
                      "typeName": {
                        "id": 1139,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1138,
                          "name": "TokenisableRange",
                          "nameLocations": [
                            "10801:16:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 10428,
                          "src": "10801:16:0"
                        },
                        "referencedDeclaration": 10428,
                        "src": "10801:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                          "typeString": "contract TokenisableRange"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1144,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1141,
                      "name": "ticks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83,
                      "src": "10823:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$10428_$dyn_storage",
                        "typeString": "contract TokenisableRange[] storage ref"
                      }
                    },
                    "id": 1143,
                    "indexExpression": {
                      "id": 1142,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1135,
                      "src": "10829:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10823:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                      "typeString": "contract TokenisableRange"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10801:34:0"
                },
                {
                  "assignments": [
                    1146
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1146,
                      "mutability": "mutable",
                      "name": "aTokenAddress",
                      "nameLocation": "10849:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1210,
                      "src": "10841:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1145,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10841:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1155,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 1151,
                              "name": "tr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1140,
                              "src": "10900:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                                "typeString": "contract TokenisableRange"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                                "typeString": "contract TokenisableRange"
                              }
                            ],
                            "id": 1150,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10892:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1149,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10892:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10892:11:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 1147,
                          "name": "lendingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 113,
                          "src": "10865:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ILendingPool_$8439",
                            "typeString": "contract ILendingPool"
                          }
                        },
                        "id": 1148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10877:14:0",
                        "memberName": "getReserveData",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8329,
                        "src": "10865:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_struct$_ReserveData_$12555_memory_ptr_$",
                          "typeString": "function (address) view external returns (struct DataTypes.ReserveData memory)"
                        }
                      },
                      "id": 1153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10865:39:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ReserveData_$12555_memory_ptr",
                        "typeString": "struct DataTypes.ReserveData memory"
                      }
                    },
                    "id": 1154,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "10905:13:0",
                    "memberName": "aTokenAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 12546,
                    "src": "10865:53:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10841:77:0"
                },
                {
                  "assignments": [
                    1157
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1157,
                      "mutability": "mutable",
                      "name": "aBal",
                      "nameLocation": "10929:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1210,
                      "src": "10924:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1156,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "10924:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1167,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1164,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "10975:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GeVault_$1849",
                              "typeString": "contract GeVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GeVault_$1849",
                              "typeString": "contract GeVault"
                            }
                          ],
                          "id": 1163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10967:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1162,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10967:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10967:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1159,
                            "name": "aTokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1146,
                            "src": "10942:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1158,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7764,
                          "src": "10936:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$7764_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 1160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10936:20:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$7764",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10957:9:0",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7317,
                      "src": "10936:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10936:45:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10924:57:0"
                },
                {
                  "assignments": [
                    1169
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1169,
                      "mutability": "mutable",
                      "name": "sBal",
                      "nameLocation": "10992:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1210,
                      "src": "10987:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1168,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "10987:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1174,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1172,
                        "name": "aTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1146,
                        "src": "11012:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1170,
                        "name": "tr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1140,
                        "src": "10999:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                          "typeString": "contract TokenisableRange"
                        }
                      },
                      "id": 1171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11002:9:0",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7317,
                      "src": "10999:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10999:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10987:39:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1175,
                      "name": "aBal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1157,
                      "src": "11153:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 1176,
                      "name": "sBal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1169,
                      "src": "11160:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11153:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1182,
                  "nodeType": "IfStatement",
                  "src": "11149:28:0",
                  "trueBody": {
                    "expression": {
                      "id": 1180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 1178,
                        "name": "aBal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1157,
                        "src": "11166:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 1179,
                        "name": "sBal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1169,
                        "src": "11173:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "11166:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1181,
                    "nodeType": "ExpressionStatement",
                    "src": "11166:11:0"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1183,
                      "name": "aBal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1157,
                      "src": "11187:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11194:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "11187:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1209,
                  "nodeType": "IfStatement",
                  "src": "11183:113:0",
                  "trueBody": {
                    "id": 1208,
                    "nodeType": "Block",
                    "src": "11196:100:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1191,
                                  "name": "tr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1140,
                                  "src": "11233:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                                    "typeString": "contract TokenisableRange"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                                    "typeString": "contract TokenisableRange"
                                  }
                                ],
                                "id": 1190,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "11225:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1189,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "11225:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1192,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11225:11:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1193,
                              "name": "aBal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1157,
                              "src": "11238:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1196,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "11252:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_GeVault_$1849",
                                    "typeString": "contract GeVault"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_GeVault_$1849",
                                    "typeString": "contract GeVault"
                                  }
                                ],
                                "id": 1195,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "11244:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1194,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "11244:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1197,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11244:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1186,
                              "name": "lendingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 113,
                              "src": "11204:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ILendingPool_$8439",
                                "typeString": "contract ILendingPool"
                              }
                            },
                            "id": 1188,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11216:8:0",
                            "memberName": "withdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8154,
                            "src": "11204:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256,address) external returns (uint256)"
                            }
                          },
                          "id": 1198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11204:54:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1199,
                        "nodeType": "ExpressionStatement",
                        "src": "11204:54:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1203,
                              "name": "aBal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1157,
                              "src": "11278:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 1204,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11284:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "hexValue": "30",
                              "id": 1205,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11287:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 1200,
                              "name": "tr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1140,
                              "src": "11266:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                                "typeString": "contract TokenisableRange"
                              }
                            },
                            "id": 1202,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11269:8:0",
                            "memberName": "withdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10119,
                            "src": "11266:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                              "typeString": "function (uint256,uint256,uint256) external returns (uint256,uint256)"
                            }
                          },
                          "id": 1206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11266:23:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256)"
                          }
                        },
                        "id": 1207,
                        "nodeType": "ExpressionStatement",
                        "src": "11266:23:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1133,
              "nodeType": "StructuredDocumentation",
              "src": "10719:28:0",
              "text": "@notice Remove from tick"
            },
            "id": 1211,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeFromTick",
            "nameLocation": "10759:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1135,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "10779:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1211,
                  "src": "10774:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1134,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "10774:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10773:12:0"
            },
            "returnParameters": {
              "id": 1137,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10795:0:0"
            },
            "scope": 1849,
            "src": "10750:550:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1342,
              "nodeType": "Block",
              "src": "11357:939:0",
              "statements": [
                {
                  "assignments": [
                    1216
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1216,
                      "mutability": "mutable",
                      "name": "newTickIndex",
                      "nameLocation": "11369:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1342,
                      "src": "11364:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1215,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11364:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1219,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1217,
                      "name": "getActiveTickIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1722,
                      "src": "11384:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 1218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11384:20:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11364:40:0"
                },
                {
                  "assignments": [
                    1221
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1221,
                      "mutability": "mutable",
                      "name": "availToken0",
                      "nameLocation": "11415:11:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1342,
                      "src": "11410:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1220,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11410:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1229,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1226,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "11454:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GeVault_$1849",
                              "typeString": "contract GeVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GeVault_$1849",
                              "typeString": "contract GeVault"
                            }
                          ],
                          "id": 1225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11446:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1224,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11446:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11446:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1222,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90,
                        "src": "11429:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$7764",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11436:9:0",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7317,
                      "src": "11429:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11429:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11410:50:0"
                },
                {
                  "assignments": [
                    1231
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1231,
                      "mutability": "mutable",
                      "name": "availToken1",
                      "nameLocation": "11471:11:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1342,
                      "src": "11466:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1230,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11466:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1239,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1236,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "11510:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GeVault_$1849",
                              "typeString": "contract GeVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GeVault_$1849",
                              "typeString": "contract GeVault"
                            }
                          ],
                          "id": 1235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11502:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1234,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11502:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11502:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1232,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 93,
                        "src": "11485:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$7764",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11492:9:0",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7317,
                      "src": "11485:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11485:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11466:50:0"
                },
                {
                  "assignments": [
                    1241,
                    1243
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1241,
                      "mutability": "mutable",
                      "name": "amount0ft",
                      "nameLocation": "11570:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1342,
                      "src": "11565:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1240,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11565:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1243,
                      "mutability": "mutable",
                      "name": "amount1ft",
                      "nameLocation": "11586:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1342,
                      "src": "11581:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1242,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11581:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1250,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31653138",
                        "id": 1248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11648:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 1244,
                          "name": "ticks",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83,
                          "src": "11599:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$10428_$dyn_storage",
                            "typeString": "contract TokenisableRange[] storage ref"
                          }
                        },
                        "id": 1246,
                        "indexExpression": {
                          "id": 1245,
                          "name": "newTickIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1216,
                          "src": "11605:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11599:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                          "typeString": "contract TokenisableRange"
                        }
                      },
                      "id": 1247,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11619:28:0",
                      "memberName": "getTokenAmountsExcludingFees",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10388,
                      "src": "11599:48:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (uint256,uint256)"
                      }
                    },
                    "id": 1249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11599:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11564:89:0"
                },
                {
                  "assignments": [
                    1252
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1252,
                      "mutability": "mutable",
                      "name": "tick0Index",
                      "nameLocation": "11664:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1342,
                      "src": "11659:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1251,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11659:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1254,
                  "initialValue": {
                    "id": 1253,
                    "name": "newTickIndex",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1216,
                    "src": "11677:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11659:30:0"
                },
                {
                  "assignments": [
                    1256
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1256,
                      "mutability": "mutable",
                      "name": "tick1Index",
                      "nameLocation": "11700:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1342,
                      "src": "11695:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1255,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11695:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1260,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1257,
                      "name": "newTickIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1216,
                      "src": "11713:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "32",
                      "id": 1258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11728:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "11713:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11695:34:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1261,
                      "name": "amount1ft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1243,
                      "src": "11739:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11751:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "11739:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1275,
                  "nodeType": "IfStatement",
                  "src": "11735:95:0",
                  "trueBody": {
                    "id": 1274,
                    "nodeType": "Block",
                    "src": "11753:77:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 1268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1264,
                            "name": "tick0Index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1252,
                            "src": "11761:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1267,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1265,
                              "name": "newTickIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1216,
                              "src": "11774:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "32",
                              "id": 1266,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11789:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "src": "11774:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11761:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1269,
                        "nodeType": "ExpressionStatement",
                        "src": "11761:29:0"
                      },
                      {
                        "expression": {
                          "id": 1272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1270,
                            "name": "tick1Index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1256,
                            "src": "11798:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1271,
                            "name": "newTickIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1216,
                            "src": "11811:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11798:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1273,
                        "nodeType": "ExpressionStatement",
                        "src": "11798:25:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1276,
                      "name": "availToken0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1221,
                      "src": "11888:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1277,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11902:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "11888:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1302,
                  "nodeType": "IfStatement",
                  "src": "11884:153:0",
                  "trueBody": {
                    "id": 1301,
                    "nodeType": "Block",
                    "src": "11904:133:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 1280,
                                "name": "ticks",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 83,
                                "src": "11928:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$10428_$dyn_storage",
                                  "typeString": "contract TokenisableRange[] storage ref"
                                }
                              },
                              "id": 1282,
                              "indexExpression": {
                                "id": 1281,
                                "name": "tick0Index",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1252,
                                "src": "11934:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11928:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                                "typeString": "contract TokenisableRange"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1285,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1283,
                                "name": "availToken0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1221,
                                "src": "11947:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "32",
                                "id": 1284,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11961:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "src": "11947:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 1286,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11964:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                                "typeString": "contract TokenisableRange"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1279,
                            "name": "depositAndStash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1610,
                            "src": "11912:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_TokenisableRange_$10428_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (contract TokenisableRange,uint256,uint256) returns (uint256)"
                            }
                          },
                          "id": 1287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11912:54:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1288,
                        "nodeType": "ExpressionStatement",
                        "src": "11912:54:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 1290,
                                "name": "ticks",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 83,
                                "src": "11990:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$10428_$dyn_storage",
                                  "typeString": "contract TokenisableRange[] storage ref"
                                }
                              },
                              "id": 1294,
                              "indexExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1293,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1291,
                                  "name": "tick0Index",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1252,
                                  "src": "11996:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 1292,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12007:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "11996:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11990:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                                "typeString": "contract TokenisableRange"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1297,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1295,
                                "name": "availToken0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1221,
                                "src": "12011:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "32",
                                "id": 1296,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12025:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "src": "12011:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 1298,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12028:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                                "typeString": "contract TokenisableRange"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1289,
                            "name": "depositAndStash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1610,
                            "src": "11974:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_TokenisableRange_$10428_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (contract TokenisableRange,uint256,uint256) returns (uint256)"
                            }
                          },
                          "id": 1299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11974:56:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1300,
                        "nodeType": "ExpressionStatement",
                        "src": "11974:56:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1303,
                      "name": "availToken1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1231,
                      "src": "12046:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12060:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "12046:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1329,
                  "nodeType": "IfStatement",
                  "src": "12042:153:0",
                  "trueBody": {
                    "id": 1328,
                    "nodeType": "Block",
                    "src": "12062:133:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 1307,
                                "name": "ticks",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 83,
                                "src": "12086:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$10428_$dyn_storage",
                                  "typeString": "contract TokenisableRange[] storage ref"
                                }
                              },
                              "id": 1309,
                              "indexExpression": {
                                "id": 1308,
                                "name": "tick1Index",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1256,
                                "src": "12092:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12086:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                                "typeString": "contract TokenisableRange"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 1310,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12105:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1313,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1311,
                                "name": "availToken1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1231,
                                "src": "12108:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "32",
                                "id": 1312,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12122:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "src": "12108:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                                "typeString": "contract TokenisableRange"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1306,
                            "name": "depositAndStash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1610,
                            "src": "12070:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_TokenisableRange_$10428_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (contract TokenisableRange,uint256,uint256) returns (uint256)"
                            }
                          },
                          "id": 1314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12070:54:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1315,
                        "nodeType": "ExpressionStatement",
                        "src": "12070:54:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 1317,
                                "name": "ticks",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 83,
                                "src": "12148:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$10428_$dyn_storage",
                                  "typeString": "contract TokenisableRange[] storage ref"
                                }
                              },
                              "id": 1321,
                              "indexExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1320,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1318,
                                  "name": "tick1Index",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1256,
                                  "src": "12154:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 1319,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12165:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "12154:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12148:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                                "typeString": "contract TokenisableRange"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 1322,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12169:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1325,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1323,
                                "name": "availToken1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1231,
                                "src": "12172:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "32",
                                "id": 1324,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12186:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "src": "12172:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                                "typeString": "contract TokenisableRange"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1316,
                            "name": "depositAndStash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1610,
                            "src": "12132:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_TokenisableRange_$10428_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (contract TokenisableRange,uint256,uint256) returns (uint256)"
                            }
                          },
                          "id": 1326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12132:56:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1327,
                        "nodeType": "ExpressionStatement",
                        "src": "12132:56:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1330,
                      "name": "newTickIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1216,
                      "src": "12209:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 1331,
                      "name": "tickIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86,
                      "src": "12225:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12209:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1337,
                  "nodeType": "IfStatement",
                  "src": "12205:55:0",
                  "trueBody": {
                    "expression": {
                      "id": 1335,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 1333,
                        "name": "tickIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
                        "src": "12236:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 1334,
                        "name": "newTickIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1216,
                        "src": "12248:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "12236:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1336,
                    "nodeType": "ExpressionStatement",
                    "src": "12236:24:0"
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1339,
                        "name": "tickIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
                        "src": "12281:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1338,
                      "name": "Rebalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59,
                      "src": "12271:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12271:20:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1341,
                  "nodeType": "EmitStatement",
                  "src": "12266:25:0"
                }
              ]
            },
            "documentation": {
              "id": 1212,
              "nodeType": "StructuredDocumentation",
              "src": "11309:12:0",
              "text": "@notice "
            },
            "id": 1343,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deployAssets",
            "nameLocation": "11333:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1213,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11345:2:0"
            },
            "returnParameters": {
              "id": 1214,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11357:0:0"
            },
            "scope": 1849,
            "src": "11324:972:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1442,
              "nodeType": "Block",
              "src": "12427:562:0",
              "statements": [
                {
                  "assignments": [
                    1350,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1350,
                      "mutability": "mutable",
                      "name": "sqrtPriceX96",
                      "nameLocation": "12442:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1442,
                      "src": "12434:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint160",
                        "typeString": "uint160"
                      },
                      "typeName": {
                        "id": 1349,
                        "name": "uint160",
                        "nodeType": "ElementaryTypeName",
                        "src": "12434:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null,
                    null,
                    null,
                    null
                  ],
                  "id": 1354,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1351,
                        "name": "uniswapPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110,
                        "src": "12464:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Pool_$8477",
                          "typeString": "contract IUniswapV3Pool"
                        }
                      },
                      "id": 1352,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12476:5:0",
                      "memberName": "slot0",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8459,
                      "src": "12464:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
                        "typeString": "function () view external returns (uint160,int24,uint16,uint16,uint16,uint8,bool)"
                      }
                    },
                    "id": 1353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12464:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
                      "typeString": "tuple(uint160,int24,uint16,uint16,uint16,uint8,bool)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12433:50:0"
                },
                {
                  "assignments": [
                    1356
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1356,
                      "mutability": "mutable",
                      "name": "decimals0",
                      "nameLocation": "12499:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1442,
                      "src": "12494:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1355,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12494:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1360,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1357,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90,
                        "src": "12511:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$7764",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1358,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12518:8:0",
                      "memberName": "decimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7293,
                      "src": "12511:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                        "typeString": "function () view external returns (uint8)"
                      }
                    },
                    "id": 1359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12511:17:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12494:34:0"
                },
                {
                  "assignments": [
                    1362
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1362,
                      "mutability": "mutable",
                      "name": "decimals1",
                      "nameLocation": "12539:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1442,
                      "src": "12534:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1361,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12534:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1366,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1363,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 93,
                        "src": "12551:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$7764",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1364,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12558:8:0",
                      "memberName": "decimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7293,
                      "src": "12551:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                        "typeString": "function () view external returns (uint8)"
                      }
                    },
                    "id": 1365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12551:17:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12534:34:0"
                },
                {
                  "assignments": [
                    1368
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1368,
                      "mutability": "mutable",
                      "name": "priceX8",
                      "nameLocation": "12579:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1442,
                      "src": "12574:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1367,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12574:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1372,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130",
                      "id": 1369,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12589:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "id": 1370,
                      "name": "decimals0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1356,
                      "src": "12593:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12589:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12574:28:0"
                },
                {
                  "expression": {
                    "id": 1392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1373,
                      "name": "priceX8",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1368,
                      "src": "12674:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1391,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1385,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1374,
                            "name": "priceX8",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1368,
                            "src": "12684:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1384,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint160",
                                    "typeString": "uint160"
                                  },
                                  "id": 1381,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1377,
                                    "name": "sqrtPriceX96",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1350,
                                    "src": "12699:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint160",
                                      "typeString": "uint160"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_rational_4096_by_1",
                                      "typeString": "int_const 4096"
                                    },
                                    "id": 1380,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "32",
                                      "id": 1378,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "12714:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_2_by_1",
                                        "typeString": "int_const 2"
                                      },
                                      "value": "2"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "**",
                                    "rightExpression": {
                                      "hexValue": "3132",
                                      "id": 1379,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "12719:2:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_12_by_1",
                                        "typeString": "int_const 12"
                                      },
                                      "value": "12"
                                    },
                                    "src": "12714:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_4096_by_1",
                                      "typeString": "int_const 4096"
                                    }
                                  },
                                  "src": "12699:22:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint160",
                                    "typeString": "uint160"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint160",
                                    "typeString": "uint160"
                                  }
                                ],
                                "id": 1376,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "12694:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 1375,
                                  "name": "uint",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "12694:4:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1382,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12694:28:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "32",
                              "id": 1383,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12726:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "src": "12694:33:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12684:43:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "316538",
                          "id": 1386,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12730:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000_by_1",
                            "typeString": "int_const 100000000"
                          },
                          "value": "1e8"
                        },
                        "src": "12684:49:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_rational_374144419156711147060143317175368453031918731001856_by_1",
                          "typeString": "int_const 3741...(43 digits omitted)...1856"
                        },
                        "id": 1390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "32",
                          "id": 1388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12736:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "hexValue": "313638",
                          "id": 1389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12739:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_168_by_1",
                            "typeString": "int_const 168"
                          },
                          "value": "168"
                        },
                        "src": "12736:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_374144419156711147060143317175368453031918731001856_by_1",
                          "typeString": "int_const 3741...(43 digits omitted)...1856"
                        }
                      },
                      "src": "12684:58:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12674:68:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1393,
                  "nodeType": "ExpressionStatement",
                  "src": "12674:68:0"
                },
                {
                  "expression": {
                    "id": 1400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1394,
                      "name": "priceX8",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1368,
                      "src": "12748:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1395,
                        "name": "priceX8",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1368,
                        "src": "12758:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 1396,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12768:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "id": 1397,
                          "name": "decimals1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1362,
                          "src": "12772:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12768:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "12758:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12748:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1401,
                  "nodeType": "ExpressionStatement",
                  "src": "12748:33:0"
                },
                {
                  "assignments": [
                    1403
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1403,
                      "mutability": "mutable",
                      "name": "oraclePrice",
                      "nameLocation": "12792:11:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1442,
                      "src": "12787:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1402,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12787:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1421,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1412,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "316538",
                        "id": 1404,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12806:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000_by_1",
                          "typeString": "int_const 100000000"
                        },
                        "value": "1e8"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1409,
                                "name": "token0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 90,
                                "src": "12841:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$7764",
                                  "typeString": "contract ERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20_$7764",
                                  "typeString": "contract ERC20"
                                }
                              ],
                              "id": 1408,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12833:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1407,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "12833:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1410,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12833:15:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1405,
                            "name": "oracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 116,
                            "src": "12812:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPriceOracle_$10634",
                              "typeString": "contract IPriceOracle"
                            }
                          },
                          "id": 1406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12819:13:0",
                          "memberName": "getAssetPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10626,
                          "src": "12812:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 1411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12812:37:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "12806:43:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 1417,
                              "name": "token1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 93,
                              "src": "12881:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$7764",
                                "typeString": "contract ERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC20_$7764",
                                "typeString": "contract ERC20"
                              }
                            ],
                            "id": 1416,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12873:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1415,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12873:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1418,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12873:15:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 1413,
                          "name": "oracle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 116,
                          "src": "12852:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPriceOracle_$10634",
                            "typeString": "contract IPriceOracle"
                          }
                        },
                        "id": 1414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12859:13:0",
                        "memberName": "getAssetPrice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10626,
                        "src": "12852:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 1419,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12852:37:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12806:83:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12787:102:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1428,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1422,
                        "name": "oraclePrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1403,
                        "src": "12899:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1423,
                            "name": "priceX8",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1368,
                            "src": "12913:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "313031",
                            "id": 1424,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12923:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_101_by_1",
                              "typeString": "int_const 101"
                            },
                            "value": "101"
                          },
                          "src": "12913:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "313030",
                          "id": 1426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12929:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "12913:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "12899:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1435,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1429,
                        "name": "oraclePrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1403,
                        "src": "12936:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1430,
                            "name": "priceX8",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1368,
                            "src": "12950:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "3939",
                            "id": 1431,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12960:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_99_by_1",
                              "typeString": "int_const 99"
                            },
                            "value": "99"
                          },
                          "src": "12950:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "313030",
                          "id": 1433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12965:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "12950:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "12936:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "12899:69:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1441,
                  "nodeType": "IfStatement",
                  "src": "12895:89:0",
                  "trueBody": {
                    "expression": {
                      "id": 1439,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 1437,
                        "name": "matches",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1347,
                        "src": "12970:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "hexValue": "74727565",
                        "id": 1438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12980:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "src": "12970:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 1440,
                    "nodeType": "ExpressionStatement",
                    "src": "12970:14:0"
                  }
                }
              ]
            },
            "documentation": {
              "id": 1344,
              "nodeType": "StructuredDocumentation",
              "src": "12305:56:0",
              "text": "@notice Checks that the pool price isn't manipulated"
            },
            "functionSelector": "d5edb9d6",
            "id": 1443,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "poolMatchesOracle",
            "nameLocation": "12373:17:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1345,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12390:2:0"
            },
            "returnParameters": {
              "id": 1348,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1347,
                  "mutability": "mutable",
                  "name": "matches",
                  "nameLocation": "12419:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1443,
                  "src": "12414:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1346,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12414:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12413:14:0"
            },
            "scope": 1849,
            "src": "12364:625:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1478,
              "nodeType": "Block",
              "src": "13287:136:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 1459,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "13329:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GeVault_$1849",
                                "typeString": "contract GeVault"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_GeVault_$1849",
                                "typeString": "contract GeVault"
                              }
                            ],
                            "id": 1458,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13321:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1457,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13321:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13321:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1461,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1448,
                          "src": "13336:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 1454,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1446,
                              "src": "13304:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1453,
                            "name": "ERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7764,
                            "src": "13298:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC20_$7764_$",
                              "typeString": "type(contract ERC20)"
                            }
                          },
                          "id": 1455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13298:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$7764",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 1456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13311:9:0",
                        "memberName": "allowance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7356,
                        "src": "13298:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address,address) view external returns (uint256)"
                        }
                      },
                      "id": 1462,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13298:46:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 1463,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1450,
                      "src": "13347:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13298:55:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1477,
                  "nodeType": "IfStatement",
                  "src": "13293:125:0",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 1469,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1448,
                          "src": "13391:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 1472,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "13405:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 1471,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "13405:7:0",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                }
                              ],
                              "id": 1470,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "13400:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 1473,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13400:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_uint256",
                              "typeString": "type(uint256)"
                            }
                          },
                          "id": 1474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "13414:3:0",
                          "memberName": "max",
                          "nodeType": "MemberAccess",
                          "src": "13400:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 1466,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1446,
                              "src": "13362:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1465,
                            "name": "ERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7764,
                            "src": "13356:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC20_$7764_$",
                              "typeString": "type(contract ERC20)"
                            }
                          },
                          "id": 1467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13356:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$7764",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 1468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13369:21:0",
                        "memberName": "safeIncreaseAllowance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7901,
                        "src": "13356:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$12207_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$12207_$",
                          "typeString": "function (contract IERC20,address,uint256)"
                        }
                      },
                      "id": 1475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13356:62:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1476,
                    "nodeType": "ExpressionStatement",
                    "src": "13356:62:0"
                  }
                }
              ]
            },
            "documentation": {
              "id": 1444,
              "nodeType": "StructuredDocumentation",
              "src": "12994:212:0",
              "text": "@notice Helper that checks current allowance and approves if necessary\n @param token Target token\n @param spender Spender\n @param amount Amount below which we need to approve the token spending"
            },
            "id": 1479,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkSetApprove",
            "nameLocation": "13218:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1451,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1446,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "13242:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1479,
                  "src": "13234:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1445,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13234:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1448,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "13257:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1479,
                  "src": "13249:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1447,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13249:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1450,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "13271:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1479,
                  "src": "13266:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1449,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "13266:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13233:45:0"
            },
            "returnParameters": {
              "id": 1452,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13287:0:0"
            },
            "scope": 1849,
            "src": "13209:214:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1521,
              "nodeType": "Block",
              "src": "13599:172:0",
              "statements": [
                {
                  "body": {
                    "id": 1519,
                    "nodeType": "Block",
                    "src": "13639:128:0",
                    "statements": [
                      {
                        "assignments": [
                          1498
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1498,
                            "mutability": "mutable",
                            "name": "t",
                            "nameLocation": "13664:1:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1519,
                            "src": "13647:18:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                              "typeString": "contract TokenisableRange"
                            },
                            "typeName": {
                              "id": 1497,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1496,
                                "name": "TokenisableRange",
                                "nameLocations": [
                                  "13647:16:0"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 10428,
                                "src": "13647:16:0"
                              },
                              "referencedDeclaration": 10428,
                              "src": "13647:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                                "typeString": "contract TokenisableRange"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1502,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1499,
                            "name": "ticks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 83,
                            "src": "13668:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$10428_$dyn_storage",
                              "typeString": "contract TokenisableRange[] storage ref"
                            }
                          },
                          "id": 1501,
                          "indexExpression": {
                            "id": 1500,
                            "name": "k",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1486,
                            "src": "13674:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13668:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                            "typeString": "contract TokenisableRange"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13647:29:0"
                      },
                      {
                        "assignments": [
                          1504
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1504,
                            "mutability": "mutable",
                            "name": "bal",
                            "nameLocation": "13689:3:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1519,
                            "src": "13684:8:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1503,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "13684:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1508,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1506,
                              "name": "k",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1486,
                              "src": "13710:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1505,
                            "name": "getTickBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1649,
                            "src": "13695:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 1507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13695:17:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13684:28:0"
                      },
                      {
                        "expression": {
                          "id": 1517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1509,
                            "name": "valueX8",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1483,
                            "src": "13720:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1516,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1514,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1510,
                                "name": "bal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1504,
                                "src": "13731:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 1511,
                                    "name": "t",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1498,
                                    "src": "13737:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                                      "typeString": "contract TokenisableRange"
                                    }
                                  },
                                  "id": 1512,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "13739:12:0",
                                  "memberName": "latestAnswer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 10320,
                                  "src": "13737:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view external returns (uint256)"
                                  }
                                },
                                "id": 1513,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13737:16:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "13731:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "31653138",
                              "id": 1515,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13756:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "value": "1e18"
                            },
                            "src": "13731:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13720:40:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1518,
                        "nodeType": "ExpressionStatement",
                        "src": "13720:40:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1489,
                      "name": "k",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1486,
                      "src": "13619:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1490,
                        "name": "ticks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83,
                        "src": "13621:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$10428_$dyn_storage",
                          "typeString": "contract TokenisableRange[] storage ref"
                        }
                      },
                      "id": 1491,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13627:6:0",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "13621:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13619:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1520,
                  "initializationExpression": {
                    "assignments": [
                      1486
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1486,
                        "mutability": "mutable",
                        "name": "k",
                        "nameLocation": "13614:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1520,
                        "src": "13609:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1485,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "13609:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1488,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13616:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "13609:8:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1494,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "13635:3:0",
                      "subExpression": {
                        "id": 1493,
                        "name": "k",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1486,
                        "src": "13635:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1495,
                    "nodeType": "ExpressionStatement",
                    "src": "13635:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "13605:162:0"
                }
              ]
            },
            "documentation": {
              "id": 1480,
              "nodeType": "StructuredDocumentation",
              "src": "13432:112:0",
              "text": "@notice Calculate the vault total ticks value\n @return valueX8 Total value of the vault with 8 decimals"
            },
            "functionSelector": "97b3fcaa",
            "id": 1522,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTVL",
            "nameLocation": "13556:6:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1481,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13562:2:0"
            },
            "returnParameters": {
              "id": 1484,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1483,
                  "mutability": "mutable",
                  "name": "valueX8",
                  "nameLocation": "13591:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1522,
                  "src": "13586:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1482,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "13586:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13585:14:0"
            },
            "scope": 1849,
            "src": "13547:224:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1609,
              "nodeType": "Block",
              "src": "14047:364:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1538,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 90,
                            "src": "14077:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$7764",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$7764",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 1537,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14069:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1536,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14069:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14069:15:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1542,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1526,
                            "src": "14094:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                              "typeString": "contract TokenisableRange"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                              "typeString": "contract TokenisableRange"
                            }
                          ],
                          "id": 1541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14086:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1540,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14086:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14086:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1544,
                        "name": "amount0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1528,
                        "src": "14098:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1535,
                      "name": "checkSetApprove",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1479,
                      "src": "14053:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14053:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1546,
                  "nodeType": "ExpressionStatement",
                  "src": "14053:53:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1550,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 93,
                            "src": "14136:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$7764",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$7764",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 1549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14128:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1548,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14128:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14128:15:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1554,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1526,
                            "src": "14153:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                              "typeString": "contract TokenisableRange"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                              "typeString": "contract TokenisableRange"
                            }
                          ],
                          "id": 1553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14145:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1552,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14145:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14145:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1556,
                        "name": "amount1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1530,
                        "src": "14157:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1547,
                      "name": "checkSetApprove",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1479,
                      "src": "14112:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14112:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1558,
                  "nodeType": "ExpressionStatement",
                  "src": "14112:53:0"
                },
                {
                  "expression": {
                    "id": 1565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1559,
                      "name": "liquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1533,
                      "src": "14171:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1562,
                          "name": "amount0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1528,
                          "src": "14193:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1563,
                          "name": "amount1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1530,
                          "src": "14202:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 1560,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1526,
                          "src": "14183:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                            "typeString": "contract TokenisableRange"
                          }
                        },
                        "id": 1561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14185:7:0",
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9941,
                        "src": "14183:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) external returns (uint256)"
                        }
                      },
                      "id": 1564,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14183:27:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14171:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1566,
                  "nodeType": "ExpressionStatement",
                  "src": "14171:39:0"
                },
                {
                  "assignments": [
                    1568
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1568,
                      "mutability": "mutable",
                      "name": "bal",
                      "nameLocation": "14226:3:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1609,
                      "src": "14221:8:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1567,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "14221:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1576,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1573,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "14252:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GeVault_$1849",
                              "typeString": "contract GeVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GeVault_$1849",
                              "typeString": "contract GeVault"
                            }
                          ],
                          "id": 1572,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14244:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1571,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14244:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14244:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1569,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1526,
                        "src": "14232:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                          "typeString": "contract TokenisableRange"
                        }
                      },
                      "id": 1570,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14234:9:0",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7317,
                      "src": "14232:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14232:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14221:37:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1577,
                      "name": "bal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1568,
                      "src": "14268:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1578,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14274:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "14268:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1608,
                  "nodeType": "IfStatement",
                  "src": "14264:143:0",
                  "trueBody": {
                    "id": 1607,
                    "nodeType": "Block",
                    "src": "14276:131:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1583,
                                  "name": "t",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1526,
                                  "src": "14308:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                                    "typeString": "contract TokenisableRange"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                                    "typeString": "contract TokenisableRange"
                                  }
                                ],
                                "id": 1582,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "14300:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1581,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "14300:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1584,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14300:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1587,
                                  "name": "lendingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 113,
                                  "src": "14320:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ILendingPool_$8439",
                                    "typeString": "contract ILendingPool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ILendingPool_$8439",
                                    "typeString": "contract ILendingPool"
                                  }
                                ],
                                "id": 1586,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "14312:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1585,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "14312:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1588,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14312:20:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1589,
                              "name": "bal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1568,
                              "src": "14334:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1580,
                            "name": "checkSetApprove",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1479,
                            "src": "14284:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1590,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14284:54:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1591,
                        "nodeType": "ExpressionStatement",
                        "src": "14284:54:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1597,
                                  "name": "t",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1526,
                                  "src": "14374:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                                    "typeString": "contract TokenisableRange"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                                    "typeString": "contract TokenisableRange"
                                  }
                                ],
                                "id": 1596,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "14366:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1595,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "14366:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1598,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14366:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1599,
                              "name": "bal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1568,
                              "src": "14378:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1602,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "14391:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_GeVault_$1849",
                                    "typeString": "contract GeVault"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_GeVault_$1849",
                                    "typeString": "contract GeVault"
                                  }
                                ],
                                "id": 1601,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "14383:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1600,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "14383:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1603,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14383:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 1604,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14398:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 1592,
                              "name": "lendingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 113,
                              "src": "14346:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ILendingPool_$8439",
                                "typeString": "contract ILendingPool"
                              }
                            },
                            "id": 1594,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14358:7:0",
                            "memberName": "deposit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8142,
                            "src": "14346:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint16_$returns$__$",
                              "typeString": "function (address,uint256,address,uint16) external"
                            }
                          },
                          "id": 1605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14346:54:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1606,
                        "nodeType": "ExpressionStatement",
                        "src": "14346:54:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1523,
              "nodeType": "StructuredDocumentation",
              "src": "13780:158:0",
              "text": "@notice Deposit assets in a ticker, and the ticker in lending pool\n @param t Tik address\n @return liquidity The amount of ticker liquidity added"
            },
            "id": 1610,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositAndStash",
            "nameLocation": "13950:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1531,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1526,
                  "mutability": "mutable",
                  "name": "t",
                  "nameLocation": "13983:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1610,
                  "src": "13966:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                    "typeString": "contract TokenisableRange"
                  },
                  "typeName": {
                    "id": 1525,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1524,
                      "name": "TokenisableRange",
                      "nameLocations": [
                        "13966:16:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10428,
                      "src": "13966:16:0"
                    },
                    "referencedDeclaration": 10428,
                    "src": "13966:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                      "typeString": "contract TokenisableRange"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1528,
                  "mutability": "mutable",
                  "name": "amount0",
                  "nameLocation": "13991:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1610,
                  "src": "13986:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1527,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "13986:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1530,
                  "mutability": "mutable",
                  "name": "amount1",
                  "nameLocation": "14005:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1610,
                  "src": "14000:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1529,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "14000:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13965:48:0"
            },
            "returnParameters": {
              "id": 1534,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1533,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "14037:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1610,
                  "src": "14032:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1532,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "14032:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14031:16:0"
            },
            "scope": 1849,
            "src": "13941:470:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1648,
              "nodeType": "Block",
              "src": "14614:189:0",
              "statements": [
                {
                  "assignments": [
                    1620
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1620,
                      "mutability": "mutable",
                      "name": "t",
                      "nameLocation": "14637:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1648,
                      "src": "14620:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                        "typeString": "contract TokenisableRange"
                      },
                      "typeName": {
                        "id": 1619,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1618,
                          "name": "TokenisableRange",
                          "nameLocations": [
                            "14620:16:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 10428,
                          "src": "14620:16:0"
                        },
                        "referencedDeclaration": 10428,
                        "src": "14620:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                          "typeString": "contract TokenisableRange"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1624,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1621,
                      "name": "ticks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83,
                      "src": "14641:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$10428_$dyn_storage",
                        "typeString": "contract TokenisableRange[] storage ref"
                      }
                    },
                    "id": 1623,
                    "indexExpression": {
                      "id": 1622,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1613,
                      "src": "14647:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "14641:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                      "typeString": "contract TokenisableRange"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14620:33:0"
                },
                {
                  "assignments": [
                    1626
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1626,
                      "mutability": "mutable",
                      "name": "aTokenAddress",
                      "nameLocation": "14667:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1648,
                      "src": "14659:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1625,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "14659:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1635,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 1631,
                              "name": "t",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1620,
                              "src": "14718:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                                "typeString": "contract TokenisableRange"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                                "typeString": "contract TokenisableRange"
                              }
                            ],
                            "id": 1630,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "14710:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1629,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "14710:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14710:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 1627,
                          "name": "lendingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 113,
                          "src": "14683:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ILendingPool_$8439",
                            "typeString": "contract ILendingPool"
                          }
                        },
                        "id": 1628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14695:14:0",
                        "memberName": "getReserveData",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8329,
                        "src": "14683:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_struct$_ReserveData_$12555_memory_ptr_$",
                          "typeString": "function (address) view external returns (struct DataTypes.ReserveData memory)"
                        }
                      },
                      "id": 1633,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14683:38:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ReserveData_$12555_memory_ptr",
                        "typeString": "struct DataTypes.ReserveData memory"
                      }
                    },
                    "id": 1634,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "14722:13:0",
                    "memberName": "aTokenAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 12546,
                    "src": "14683:52:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14659:76:0"
                },
                {
                  "expression": {
                    "id": 1646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1636,
                      "name": "liquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1616,
                      "src": "14741:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 1643,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "14792:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GeVault_$1849",
                                "typeString": "contract GeVault"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_GeVault_$1849",
                                "typeString": "contract GeVault"
                              }
                            ],
                            "id": 1642,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "14784:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1641,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "14784:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14784:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 1638,
                              "name": "aTokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1626,
                              "src": "14759:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1637,
                            "name": "ERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7764,
                            "src": "14753:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC20_$7764_$",
                              "typeString": "type(contract ERC20)"
                            }
                          },
                          "id": 1639,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14753:20:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$7764",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 1640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14774:9:0",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7317,
                        "src": "14753:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 1645,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14753:45:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14741:57:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1647,
                  "nodeType": "ExpressionStatement",
                  "src": "14741:57:0"
                }
              ]
            },
            "documentation": {
              "id": 1611,
              "nodeType": "StructuredDocumentation",
              "src": "14420:118:0",
              "text": "@notice Get balance of tick deposited in GE\n @param index Tick index\n @return liquidity Amount of Ticker"
            },
            "functionSelector": "a003908c",
            "id": 1649,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTickBalance",
            "nameLocation": "14550:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1614,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1613,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "14570:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1649,
                  "src": "14565:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1612,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "14565:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14564:12:0"
            },
            "returnParameters": {
              "id": 1617,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1616,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "14603:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1649,
                  "src": "14598:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1615,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "14598:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14597:16:0"
            },
            "scope": 1849,
            "src": "14541:262:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1721,
              "nodeType": "Block",
              "src": "14923:494:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1655,
                        "name": "ticks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83,
                        "src": "14933:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$10428_$dyn_storage",
                          "typeString": "contract TokenisableRange[] storage ref"
                        }
                      },
                      "id": 1656,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14939:6:0",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "14933:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "hexValue": "35",
                      "id": 1657,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14949:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5_by_1",
                        "typeString": "int_const 5"
                      },
                      "value": "5"
                    },
                    "src": "14933:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1720,
                  "nodeType": "IfStatement",
                  "src": "14929:484:0",
                  "trueBody": {
                    "id": 1719,
                    "nodeType": "Block",
                    "src": "14951:462:0",
                    "statements": [
                      {
                        "body": {
                          "id": 1717,
                          "nodeType": "Block",
                          "src": "15123:284:0",
                          "statements": [
                            {
                              "assignments": [
                                1673,
                                1675
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1673,
                                  "mutability": "mutable",
                                  "name": "amt0",
                                  "nameLocation": "15139:4:0",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1717,
                                  "src": "15134:9:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1672,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "15134:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                },
                                {
                                  "constant": false,
                                  "id": 1675,
                                  "mutability": "mutable",
                                  "name": "amt1",
                                  "nameLocation": "15150:4:0",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1717,
                                  "src": "15145:9:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1674,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "15145:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1684,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "hexValue": "31653138",
                                    "id": 1682,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "15212:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                      "typeString": "int_const 1000000000000000000"
                                    },
                                    "value": "1e18"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                      "typeString": "int_const 1000000000000000000"
                                    }
                                  ],
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1676,
                                      "name": "ticks",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 83,
                                      "src": "15158:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$10428_$dyn_storage",
                                        "typeString": "contract TokenisableRange[] storage ref"
                                      }
                                    },
                                    "id": 1680,
                                    "indexExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1679,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1677,
                                        "name": "activeTickIndex",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1653,
                                        "src": "15164:15:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "+",
                                      "rightExpression": {
                                        "hexValue": "31",
                                        "id": 1678,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "15180:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "src": "15164:17:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "15158:24:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                                      "typeString": "contract TokenisableRange"
                                    }
                                  },
                                  "id": 1681,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "15183:28:0",
                                  "memberName": "getTokenAmountsExcludingFees",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 10388,
                                  "src": "15158:53:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                                    "typeString": "function (uint256) view external returns (uint256,uint256)"
                                  }
                                },
                                "id": 1683,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15158:59:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                                  "typeString": "tuple(uint256,uint256)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "15133:84:0"
                            },
                            {
                              "assignments": [
                                1686,
                                1688
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1686,
                                  "mutability": "mutable",
                                  "name": "amt0n",
                                  "nameLocation": "15233:5:0",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1717,
                                  "src": "15228:10:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1685,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "15228:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                },
                                {
                                  "constant": false,
                                  "id": 1688,
                                  "mutability": "mutable",
                                  "name": "amt1n",
                                  "nameLocation": "15245:5:0",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1717,
                                  "src": "15240:10:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1687,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "15240:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1697,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "hexValue": "31653138",
                                    "id": 1695,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "15308:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                      "typeString": "int_const 1000000000000000000"
                                    },
                                    "value": "1e18"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                      "typeString": "int_const 1000000000000000000"
                                    }
                                  ],
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1689,
                                      "name": "ticks",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 83,
                                      "src": "15254:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$10428_$dyn_storage",
                                        "typeString": "contract TokenisableRange[] storage ref"
                                      }
                                    },
                                    "id": 1693,
                                    "indexExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1692,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1690,
                                        "name": "activeTickIndex",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1653,
                                        "src": "15260:15:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "+",
                                      "rightExpression": {
                                        "hexValue": "32",
                                        "id": 1691,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "15276:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_2_by_1",
                                          "typeString": "int_const 2"
                                        },
                                        "value": "2"
                                      },
                                      "src": "15260:17:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "15254:24:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TokenisableRange_$10428",
                                      "typeString": "contract TokenisableRange"
                                    }
                                  },
                                  "id": 1694,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "15279:28:0",
                                  "memberName": "getTokenAmountsExcludingFees",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 10388,
                                  "src": "15254:53:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                                    "typeString": "function (uint256) view external returns (uint256,uint256)"
                                  }
                                },
                                "id": 1696,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15254:59:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                                  "typeString": "tuple(uint256,uint256)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "15227:86:0"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 1714,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "id": 1704,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1700,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1698,
                                          "name": "amt0",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1673,
                                          "src": "15329:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "hexValue": "30",
                                          "id": 1699,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "15337:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        },
                                        "src": "15329:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "&&",
                                      "rightExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1703,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1701,
                                          "name": "amt0n",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1686,
                                          "src": "15342:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": ">",
                                        "rightExpression": {
                                          "hexValue": "30",
                                          "id": 1702,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "15350:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        },
                                        "src": "15342:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "src": "15329:22:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    }
                                  ],
                                  "id": 1705,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "15328:24:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "id": 1712,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1708,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1706,
                                          "name": "amt1",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1675,
                                          "src": "15357:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "hexValue": "30",
                                          "id": 1707,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "15365:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        },
                                        "src": "15357:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "&&",
                                      "rightExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1711,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1709,
                                          "name": "amt1n",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1688,
                                          "src": "15370:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": ">",
                                        "rightExpression": {
                                          "hexValue": "30",
                                          "id": 1710,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "15378:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        },
                                        "src": "15370:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "src": "15357:22:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    }
                                  ],
                                  "id": 1713,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "15356:24:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "15328:52:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1716,
                              "nodeType": "IfStatement",
                              "src": "15323:75:0",
                              "trueBody": {
                                "id": 1715,
                                "nodeType": "Break",
                                "src": "15393:5:0"
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1668,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1663,
                            "name": "activeTickIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1653,
                            "src": "15069:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1667,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1664,
                                "name": "ticks",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 83,
                                "src": "15087:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$10428_$dyn_storage",
                                  "typeString": "contract TokenisableRange[] storage ref"
                                }
                              },
                              "id": 1665,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "15093:6:0",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "15087:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "33",
                              "id": 1666,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15102:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              },
                              "value": "3"
                            },
                            "src": "15087:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15069:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1718,
                        "initializationExpression": {
                          "expression": {
                            "id": 1661,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1659,
                              "name": "activeTickIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1653,
                              "src": "15048:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "30",
                              "id": 1660,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15066:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "15048:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1662,
                          "nodeType": "ExpressionStatement",
                          "src": "15048:19:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 1670,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "15105:17:0",
                            "subExpression": {
                              "id": 1669,
                              "name": "activeTickIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1653,
                              "src": "15105:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1671,
                          "nodeType": "ExpressionStatement",
                          "src": "15105:17:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "15043:364:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1650,
              "nodeType": "StructuredDocumentation",
              "src": "14812:35:0",
              "text": "@notice Return first valid tick"
            },
            "functionSelector": "d09a323c",
            "id": 1722,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getActiveTickIndex",
            "nameLocation": "14859:18:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1651,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14877:2:0"
            },
            "returnParameters": {
              "id": 1654,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1653,
                  "mutability": "mutable",
                  "name": "activeTickIndex",
                  "nameLocation": "14906:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1722,
                  "src": "14901:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1652,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "14901:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14900:22:0"
            },
            "scope": 1849,
            "src": "14850:567:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1825,
              "nodeType": "Block",
              "src": "15763:578:0",
              "statements": [
                {
                  "assignments": [
                    1731,
                    1733
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1731,
                      "mutability": "mutable",
                      "name": "res0",
                      "nameLocation": "15775:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1825,
                      "src": "15770:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1730,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "15770:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1733,
                      "mutability": "mutable",
                      "name": "res1",
                      "nameLocation": "15786:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1825,
                      "src": "15781:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1732,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "15781:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1736,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1734,
                      "name": "getReserves",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1110,
                      "src": "15794:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function () view returns (uint256,uint256)"
                      }
                    },
                    "id": 1735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15794:13:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15769:38:0"
                },
                {
                  "assignments": [
                    1738
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1738,
                      "mutability": "mutable",
                      "name": "value0",
                      "nameLocation": "15818:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1825,
                      "src": "15813:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1737,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "15813:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1754,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1747,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1739,
                        "name": "res0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1731,
                        "src": "15827:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1744,
                                "name": "token0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 90,
                                "src": "15863:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$7764",
                                  "typeString": "contract ERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20_$7764",
                                  "typeString": "contract ERC20"
                                }
                              ],
                              "id": 1743,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "15855:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1742,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "15855:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1745,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15855:15:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1740,
                            "name": "oracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 116,
                            "src": "15834:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPriceOracle_$10634",
                              "typeString": "contract IPriceOracle"
                            }
                          },
                          "id": 1741,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15841:13:0",
                          "memberName": "getAssetPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10626,
                          "src": "15834:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 1746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15834:37:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "15827:44:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1752,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 1748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15874:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 1749,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 90,
                            "src": "15878:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$7764",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 1750,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15885:8:0",
                          "memberName": "decimals",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7293,
                          "src": "15878:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                            "typeString": "function () view external returns (uint8)"
                          }
                        },
                        "id": 1751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15878:17:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "src": "15874:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15827:68:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15813:82:0"
                },
                {
                  "assignments": [
                    1756
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1756,
                      "mutability": "mutable",
                      "name": "value1",
                      "nameLocation": "15906:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1825,
                      "src": "15901:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1755,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "15901:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1772,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1765,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1757,
                        "name": "res1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1733,
                        "src": "15915:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1762,
                                "name": "token1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 93,
                                "src": "15951:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$7764",
                                  "typeString": "contract ERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20_$7764",
                                  "typeString": "contract ERC20"
                                }
                              ],
                              "id": 1761,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "15943:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1760,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "15943:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1763,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15943:15:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1758,
                            "name": "oracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 116,
                            "src": "15922:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPriceOracle_$10634",
                              "typeString": "contract IPriceOracle"
                            }
                          },
                          "id": 1759,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15929:13:0",
                          "memberName": "getAssetPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10626,
                          "src": "15922:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 1764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15922:37:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "15915:44:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1770,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 1766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15962:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 1767,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 93,
                            "src": "15966:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$7764",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 1768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15973:8:0",
                          "memberName": "decimals",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7293,
                          "src": "15966:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                            "typeString": "function () view external returns (uint8)"
                          }
                        },
                        "id": 1769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15966:17:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "src": "15962:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15915:68:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15901:82:0"
                },
                {
                  "condition": {
                    "id": 1773,
                    "name": "increaseToken0",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1725,
                    "src": "15994:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "id": 1794,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 1785,
                        "name": "adjustedBaseFeeX4",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1728,
                        "src": "16086:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1786,
                            "name": "baseFeeX4",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100,
                            "src": "16106:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 1787,
                            "name": "value1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1756,
                            "src": "16118:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16106:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1791,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1789,
                                "name": "value0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1738,
                                "src": "16128:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 1790,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "16137:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "16128:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 1792,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "16127:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "16106:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "16086:53:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1795,
                    "nodeType": "ExpressionStatement",
                    "src": "16086:53:0"
                  },
                  "id": 1796,
                  "nodeType": "IfStatement",
                  "src": "15990:149:0",
                  "trueBody": {
                    "expression": {
                      "id": 1783,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 1774,
                        "name": "adjustedBaseFeeX4",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1728,
                        "src": "16016:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1775,
                            "name": "baseFeeX4",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100,
                            "src": "16036:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 1776,
                            "name": "value0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1738,
                            "src": "16048:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16036:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1780,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1778,
                                "name": "value1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1756,
                                "src": "16058:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 1779,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "16067:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "16058:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 1781,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "16057:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "16036:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "16016:53:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1784,
                    "nodeType": "ExpressionStatement",
                    "src": "16016:53:0"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1797,
                      "name": "adjustedBaseFeeX4",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1728,
                      "src": "16182:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1800,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1798,
                        "name": "baseFeeX4",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100,
                        "src": "16202:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "32",
                        "id": 1799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16214:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "16202:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16182:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1808,
                  "nodeType": "IfStatement",
                  "src": "16178:72:0",
                  "trueBody": {
                    "expression": {
                      "id": 1806,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 1802,
                        "name": "adjustedBaseFeeX4",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1728,
                        "src": "16217:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1803,
                          "name": "baseFeeX4",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100,
                          "src": "16237:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 1804,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16249:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "16237:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "16217:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1807,
                    "nodeType": "ExpressionStatement",
                    "src": "16217:33:0"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1809,
                      "name": "adjustedBaseFeeX4",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1728,
                      "src": "16260:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1814,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1812,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1810,
                          "name": "baseFeeX4",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100,
                          "src": "16280:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "33",
                          "id": 1811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16292:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "src": "16280:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "32",
                        "id": 1813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16296:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "16280:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16260:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1824,
                  "nodeType": "IfStatement",
                  "src": "16256:80:0",
                  "trueBody": {
                    "expression": {
                      "id": 1822,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 1816,
                        "name": "adjustedBaseFeeX4",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1728,
                        "src": "16299:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1817,
                            "name": "baseFeeX4",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100,
                            "src": "16319:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "33",
                            "id": 1818,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16331:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "src": "16319:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 1820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16335:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "16319:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "16299:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1823,
                    "nodeType": "ExpressionStatement",
                    "src": "16299:37:0"
                  }
                }
              ]
            },
            "documentation": {
              "id": 1723,
              "nodeType": "StructuredDocumentation",
              "src": "15422:244:0",
              "text": "@notice Get deposit fee\n @param increaseToken0 Whether (token0 added || token1 removed) or not\n @dev Simple linear model: from baseFeeX4 / 2 to baseFeeX4 * 2\n @dev Call before withdrawing from ticks or reserves will both be 0"
            },
            "functionSelector": "a8d2e314",
            "id": 1826,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAdjustedBaseFee",
            "nameLocation": "15678:18:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1725,
                  "mutability": "mutable",
                  "name": "increaseToken0",
                  "nameLocation": "15702:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1826,
                  "src": "15697:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1724,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "15697:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15696:21:0"
            },
            "returnParameters": {
              "id": 1729,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1728,
                  "mutability": "mutable",
                  "name": "adjustedBaseFeeX4",
                  "nameLocation": "15744:17:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1826,
                  "src": "15739:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1727,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "15739:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15738:24:0"
            },
            "scope": 1849,
            "src": "15669:672:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1847,
              "nodeType": "Block",
              "src": "16438:76:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1830,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "16447:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1831,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16451:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "16447:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 1834,
                          "name": "WETH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 122,
                          "src": "16469:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IWETH_$8533",
                            "typeString": "contract IWETH"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IWETH_$8533",
                            "typeString": "contract IWETH"
                          }
                        ],
                        "id": 1833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "16461:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1832,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "16461:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1835,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16461:13:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "16447:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1846,
                  "nodeType": "IfStatement",
                  "src": "16444:65:0",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 1840,
                              "name": "WETH",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 122,
                              "src": "16492:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IWETH_$8533",
                                "typeString": "contract IWETH"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IWETH_$8533",
                                "typeString": "contract IWETH"
                              }
                            ],
                            "id": 1839,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "16484:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1838,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "16484:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1841,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16484:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 1842,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "16499:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1843,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "16503:5:0",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "16499:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1837,
                        "name": "deposit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1010,
                        "src": "16476:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (address,uint256) returns (uint256)"
                        }
                      },
                      "id": 1844,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16476:33:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1845,
                    "nodeType": "ExpressionStatement",
                    "src": "16476:33:0"
                  }
                }
              ]
            },
            "documentation": {
              "id": 1827,
              "nodeType": "StructuredDocumentation",
              "src": "16346:62:0",
              "text": "@notice fallback: deposit unless it's WETH being unwrapped"
            },
            "id": 1848,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1828,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16418:2:0"
            },
            "returnParameters": {
              "id": 1829,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16438:0:0"
            },
            "scope": 1849,
            "src": "16411:103:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1850,
        "src": "974:15545:0",
        "usedErrors": []
      }
    ],
    "src": "39:16482:0"
  },
  "bytecode": "",
  "bytecodeSha1": "4b7243fbb1563fc106f4a4ec40d5c1c8e46f6adb",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.19+commit.7dd6d404"
  },
  "contractName": "GeVault",
  "coverageMap": {
    "branches": {
      "0": {
        "GeVault.<receive>": {
          "153": [
            16447,
            16474,
            false
          ]
        },
        "GeVault.checkSetApprove": {
          "206": [
            13298,
            13353,
            false
          ]
        },
        "GeVault.deployAssets": {
          "199": [
            11739,
            11752,
            false
          ],
          "200": [
            11888,
            11903,
            false
          ],
          "201": [
            12046,
            12061,
            false
          ],
          "202": [
            12209,
            12234,
            false
          ]
        },
        "GeVault.deposit": {
          "154": [
            8367,
            8376,
            true
          ],
          "155": [
            8413,
            8432,
            true
          ],
          "156": [
            8468,
            8492,
            true
          ],
          "157": [
            8496,
            8520,
            true
          ],
          "158": [
            8557,
            8567,
            true
          ],
          "159": [
            8571,
            8584,
            true
          ],
          "160": [
            8663,
            8676,
            false
          ],
          "161": [
            8693,
            8715,
            true
          ],
          "162": [
            9237,
            9264,
            true
          ],
          "163": [
            9412,
            9424,
            true
          ],
          "164": [
            9428,
            9445,
            false
          ],
          "165": [
            9584,
            9597,
            true
          ]
        },
        "GeVault.depositAndStash": {
          "205": [
            14268,
            14275,
            false
          ]
        },
        "GeVault.getActiveTickIndex": {
          "193": [
            15329,
            15338,
            false
          ],
          "194": [
            15342,
            15351,
            true
          ],
          "195": [
            15357,
            15366,
            false
          ],
          "196": [
            15370,
            15379,
            false
          ]
        },
        "GeVault.getAdjustedBaseFee": {
          "190": [
            15994,
            16008,
            false
          ],
          "191": [
            16182,
            16215,
            false
          ],
          "192": [
            16260,
            16297,
            false
          ]
        },
        "GeVault.latestAnswer": {
          "175": [
            9942,
            9953,
            false
          ]
        },
        "GeVault.modifyTick": {
          "172": [
            5626,
            5638,
            false
          ],
          "173": [
            5642,
            5654,
            true
          ]
        },
        "GeVault.poolMatchesOracle": {
          "197": [
            12899,
            12932,
            false
          ],
          "198": [
            12936,
            12968,
            false
          ]
        },
        "GeVault.pushTick": {
          "176": [
            3920,
            3932,
            false
          ],
          "177": [
            3936,
            3948,
            true
          ],
          "178": [
            3978,
            3995,
            false
          ],
          "179": [
            4078,
            4095,
            false
          ],
          "180": [
            4115,
            4164,
            true
          ],
          "181": [
            4222,
            4271,
            true
          ]
        },
        "GeVault.rebalance": {
          "182": [
            6513,
            6532,
            true
          ],
          "183": [
            6590,
            6599,
            false
          ]
        },
        "GeVault.removeFromTick": {
          "203": [
            11153,
            11164,
            false
          ],
          "204": [
            11187,
            11195,
            false
          ]
        },
        "GeVault.setBaseFee": {
          "174": [
            6056,
            6074,
            true
          ]
        },
        "GeVault.shiftTick": {
          "184": [
            4627,
            4639,
            false
          ],
          "185": [
            4643,
            4655,
            true
          ],
          "186": [
            4685,
            4702,
            false
          ],
          "187": [
            4786,
            4803,
            false
          ],
          "188": [
            4823,
            4859,
            true
          ],
          "189": [
            4918,
            4954,
            true
          ]
        },
        "GeVault.withdraw": {
          "166": [
            7088,
            7107,
            true
          ],
          "167": [
            7139,
            7153,
            false
          ],
          "168": [
            7202,
            7236,
            true
          ],
          "169": [
            7280,
            7293,
            true
          ],
          "170": [
            7725,
            7747,
            false
          ],
          "171": [
            8010,
            8019,
            false
          ]
        }
      },
      "10": {},
      "11": {},
      "12": {
        "Ownable.transferOwnership": {
          "220": [
            2006,
            2028,
            true
          ]
        }
      },
      "17": {},
      "18": {},
      "19": {},
      "20": {
        "ERC20._approve": {
          "215": [
            10150,
            10169,
            true
          ],
          "216": [
            10228,
            10249,
            true
          ]
        },
        "ERC20._burn": {
          "213": [
            9103,
            9124,
            true
          ],
          "214": [
            9294,
            9318,
            true
          ]
        },
        "ERC20._mint": {
          "212": [
            8394,
            8415,
            true
          ]
        },
        "ERC20._transfer": {
          "217": [
            7457,
            7477,
            true
          ],
          "218": [
            7537,
            7560,
            true
          ],
          "219": [
            7728,
            7751,
            true
          ]
        },
        "ERC20.decreaseAllowance": {
          "211": [
            6631,
            6666,
            true
          ]
        },
        "ERC20.transferFrom": {
          "210": [
            5101,
            5127,
            true
          ]
        }
      },
      "21": {},
      "22": {},
      "23": {
        "SafeERC20._callOptionalReturn": {
          "221": [
            3735,
            3756,
            false
          ],
          "222": [
            3819,
            3849,
            true
          ]
        }
      },
      "27": {
        "Address.functionCallWithValue": {
          "207": [
            5130,
            5160,
            true
          ]
        },
        "Address.verifyCallResult": {
          "208": [
            7720,
            7727,
            false
          ],
          "209": [
            7861,
            7882,
            false
          ]
        }
      },
      "28": {},
      "3": {},
      "35": {},
      "36": {},
      "39": {},
      "4": {},
      "40": {},
      "44": {},
      "49": {},
      "5": {},
      "50": {},
      "52": {},
      "8": {},
      "9": {}
    },
    "statements": {
      "0": {
        "GeVault.<receive>": {
          "0": [
            16476,
            16509
          ]
        },
        "GeVault.checkSetApprove": {
          "145": [
            13356,
            13418
          ]
        },
        "GeVault.deployAssets": {
          "114": [
            11761,
            11790
          ],
          "115": [
            11798,
            11823
          ],
          "116": [
            11912,
            11966
          ],
          "117": [
            11974,
            12030
          ],
          "118": [
            12070,
            12124
          ],
          "119": [
            12132,
            12188
          ],
          "120": [
            12236,
            12260
          ],
          "121": [
            12266,
            12291
          ]
        },
        "GeVault.deposit": {
          "7": [
            8359,
            8399
          ],
          "8": [
            8405,
            8454
          ],
          "9": [
            8460,
            8543
          ],
          "10": [
            8549,
            8606
          ],
          "11": [
            8685,
            8737
          ],
          "12": [
            8811,
            8843
          ],
          "13": [
            8851,
            8869
          ],
          "14": [
            8895,
            8959
          ],
          "15": [
            9088,
            9128
          ],
          "16": [
            9229,
            9289
          ],
          "17": [
            9453,
            9479
          ],
          "18": [
            9498,
            9542
          ],
          "19": [
            9559,
            9570
          ],
          "20": [
            9576,
            9625
          ],
          "21": [
            9631,
            9659
          ],
          "22": [
            9669,
            9719
          ]
        },
        "GeVault.depositAndStash": {
          "139": [
            14053,
            14106
          ],
          "140": [
            14112,
            14165
          ],
          "141": [
            14171,
            14210
          ],
          "142": [
            14284,
            14338
          ],
          "143": [
            14346,
            14400
          ]
        },
        "GeVault.getActiveTickIndex": {
          "89": [
            15048,
            15067
          ],
          "90": [
            15393,
            15398
          ],
          "91": [
            15105,
            15122
          ]
        },
        "GeVault.getAdjustedBaseFee": {
          "84": [
            16016,
            16069
          ],
          "85": [
            16086,
            16139
          ],
          "86": [
            16217,
            16250
          ],
          "87": [
            16299,
            16336
          ]
        },
        "GeVault.getReserves": {
          "37": [
            10441,
            10456
          ],
          "38": [
            10464,
            10479
          ],
          "39": [
            10205,
            10208
          ]
        },
        "GeVault.getTVL": {
          "69": [
            13720,
            13760
          ],
          "70": [
            13635,
            13638
          ]
        },
        "GeVault.getTickBalance": {
          "71": [
            14741,
            14798
          ]
        },
        "GeVault.getTickLength": {
          "5": [
            5883,
            5901
          ]
        },
        "GeVault.latestAnswer": {
          "56": [
            9955,
            9963
          ],
          "57": [
            10001,
            10037
          ]
        },
        "GeVault.modifyTick": {
          "43": [
            5618,
            5674
          ],
          "44": [
            5680,
            5715
          ],
          "45": [
            5721,
            5747
          ]
        },
        "GeVault.poolMatchesOracle": {
          "92": [
            12674,
            12742
          ],
          "93": [
            12748,
            12781
          ],
          "94": [
            12970,
            12984
          ]
        },
        "GeVault.pushTick": {
          "58": [
            3912,
            3968
          ],
          "59": [
            3997,
            4010
          ],
          "60": [
            4106,
            4191
          ],
          "61": [
            4213,
            4298
          ],
          "62": [
            4313,
            4345
          ],
          "63": [
            4357,
            4374
          ]
        },
        "GeVault.rebalance": {
          "65": [
            6505,
            6554
          ],
          "66": [
            6560,
            6580
          ],
          "67": [
            6601,
            6615
          ]
        },
        "GeVault.removeFromAllTicks": {
          "112": [
            10678,
            10695
          ],
          "113": [
            10666,
            10669
          ]
        },
        "GeVault.removeFromTick": {
          "136": [
            11166,
            11177
          ],
          "137": [
            11204,
            11258
          ],
          "138": [
            11266,
            11289
          ]
        },
        "GeVault.setBaseFee": {
          "53": [
            6048,
            6100
          ],
          "54": [
            6106,
            6130
          ],
          "55": [
            6136,
            6161
          ]
        },
        "GeVault.setEnabled": {
          "50": [
            3407,
            3429
          ],
          "51": [
            3436,
            3463
          ]
        },
        "GeVault.setTreasury": {
          "97": [
            3612,
            3634
          ],
          "98": [
            3641,
            3670
          ]
        },
        "GeVault.setTvlCap": {
          "95": [
            6295,
            6313
          ],
          "96": [
            6319,
            6344
          ]
        },
        "GeVault.shiftTick": {
          "72": [
            4619,
            4675
          ],
          "73": [
            4704,
            4717
          ],
          "74": [
            4814,
            4887
          ],
          "75": [
            4909,
            4982
          ],
          "76": [
            5039,
            5072
          ],
          "77": [
            5194,
            5251
          ],
          "78": [
            5178,
            5181
          ],
          "79": [
            5306,
            5318
          ],
          "80": [
            5330,
            5348
          ]
        },
        "GeVault.withdraw": {
          "23": [
            7080,
            7129
          ],
          "24": [
            7155,
            7188
          ],
          "25": [
            7194,
            7266
          ],
          "26": [
            7272,
            7316
          ],
          "27": [
            7422,
            7498
          ],
          "28": [
            7585,
            7613
          ],
          "29": [
            7619,
            7639
          ],
          "30": [
            7645,
            7685
          ],
          "31": [
            7756,
            7774
          ],
          "32": [
            7782,
            7815
          ],
          "33": [
            7840,
            7882
          ],
          "34": [
            8021,
            8035
          ],
          "35": [
            8041,
            8092
          ]
        }
      },
      "10": {},
      "11": {},
      "12": {
        "Ownable._transferOwnership": {
          "133": [
            2378,
            2395
          ],
          "134": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "4": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "64": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "99": [
            1998,
            2071
          ],
          "100": [
            2081,
            2109
          ]
        }
      },
      "17": {},
      "18": {},
      "19": {},
      "20": {
        "ERC20._approve": {
          "122": [
            10142,
            10210
          ],
          "123": [
            10220,
            10288
          ],
          "124": [
            10299,
            10335
          ],
          "125": [
            10345,
            10382
          ]
        },
        "ERC20._burn": {
          "107": [
            9095,
            9162
          ],
          "108": [
            9286,
            9357
          ],
          "109": [
            9391,
            9435
          ],
          "110": [
            9455,
            9477
          ],
          "111": [
            9488,
            9530
          ]
        },
        "ERC20._mint": {
          "103": [
            8386,
            8451
          ],
          "104": [
            8522,
            8544
          ],
          "105": [
            8554,
            8582
          ],
          "106": [
            8592,
            8634
          ]
        },
        "ERC20._transfer": {
          "126": [
            7449,
            7519
          ],
          "127": [
            7529,
            7600
          ],
          "128": [
            7720,
            7794
          ],
          "129": [
            7828,
            7870
          ],
          "130": [
            7890,
            7920
          ],
          "131": [
            7931,
            7971
          ],
          "132": [
            7982,
            8028
          ]
        },
        "ERC20.allowance": {
          "6": [
            4059,
            4093
          ]
        },
        "ERC20.approve": {
          "40": [
            4337,
            4376
          ],
          "42": [
            4386,
            4397
          ]
        },
        "ERC20.balanceOf": {
          "3": [
            3486,
            3511
          ]
        },
        "ERC20.decimals": {
          "2": [
            3153,
            3162
          ]
        },
        "ERC20.decreaseAllowance": {
          "81": [
            6623,
            6708
          ],
          "82": [
            6742,
            6809
          ],
          "83": [
            6830,
            6841
          ]
        },
        "ERC20.increaseAllowance": {
          "52": [
            5848,
            5928
          ]
        },
        "ERC20.name": {
          "36": [
            2220,
            2232
          ]
        },
        "ERC20.symbol": {
          "68": [
            2433,
            2447
          ]
        },
        "ERC20.totalSupply": {
          "1": [
            3309,
            3328
          ]
        },
        "ERC20.transfer": {
          "88": [
            3823,
            3865
          ]
        },
        "ERC20.transferFrom": {
          "46": [
            5093,
            5172
          ],
          "47": [
            5206,
            5263
          ],
          "48": [
            5284,
            5320
          ],
          "49": [
            5331,
            5342
          ]
        }
      },
      "21": {},
      "22": {},
      "23": {
        "SafeERC20._callOptionalReturn": {
          "135": [
            3811,
            3896
          ]
        },
        "SafeERC20.safeIncreaseAllowance": {
          "150": [
            2228,
            2325
          ]
        },
        "SafeERC20.safeTransfer": {
          "102": [
            813,
            899
          ]
        },
        "SafeERC20.safeTransferFrom": {
          "101": [
            1050,
            1146
          ]
        }
      },
      "27": {
        "Address.functionCall": {
          "144": [
            4003,
            4062
          ]
        },
        "Address.functionCallWithValue": {
          "146": [
            5122,
            5203
          ],
          "148": [
            5213,
            5273
          ],
          "149": [
            5367,
            5425
          ]
        },
        "Address.isContract": {
          "147": [
            1443,
            1473
          ]
        },
        "Address.verifyCallResult": {
          "151": [
            7743,
            7760
          ],
          "152": [
            8187,
            8207
          ]
        }
      },
      "28": {
        "Context._msgSender": {
          "41": [
            712,
            729
          ]
        }
      },
      "3": {},
      "35": {},
      "36": {},
      "39": {},
      "4": {},
      "40": {},
      "44": {},
      "49": {},
      "5": {},
      "50": {},
      "52": {},
      "8": {},
      "9": {}
    }
  },
  "dependencies": [
    "Address",
    "BeaconProxy",
    "Context",
    "ERC20",
    "FixedPoint96",
    "FullMath",
    "IAaveOracle",
    "IBeacon",
    "IERC20",
    "IERC20Metadata",
    "ILendingPool",
    "ILendingPoolAddressesProvider",
    "INonfungiblePositionManager",
    "IPriceOracle",
    "IUniswapV3Factory",
    "IUniswapV3Pool",
    "IWETH",
    "LiquidityAmounts",
    "Ownable",
    "RangeManager",
    "ReentrancyGuard",
    "RoeRouter",
    "SafeERC20",
    "TickMath",
    "TokenisableRange"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "974:15545:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16469:4;;-1:-1:-1;;;;;16469:4:0;16447:10;:27;16444:65;;16492:4;;16476:33;;-1:-1:-1;;;;;16492:4:0;16499:9;16476:7;:33::i;:::-;;16444:65;974:15545;;;;;6983:1114;;;;;;;;;;-1:-1:-1;6983:1114:0;;;;;:::i;:::-;;:::i;:::-;;;616:25:54;;;604:2;589:18;6983:1114:0;;;;;;;;2141:98:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;10093:397:0:-;;;;;;;;;;;;;:::i;:::-;;;;1482:25:54;;;1538:2;1523:18;;1516:34;;;;1455:18;10093:397:0;1308:248:54;4238:166:20;;;;;;;;;;-1:-1:-1;4238:166:20;;;;;:::i;:::-;;:::i;:::-;;;2046:14:54;;2039:22;2021:41;;2009:2;1994:18;4238:166:20;1881:187:54;1831:19:0;;;;;;;;;;-1:-1:-1;1831:19:0;;;;-1:-1:-1;;;;;1831:19:0;;;;;;-1:-1:-1;;;;;2251:32:54;;;2233:51;;2221:2;2206:18;1831:19:0;2073:217:54;3229:106:20;;;;;;;;;;-1:-1:-1;3316:12:20;;3229:106;;1938:26:0;;;;;;;;;;;;;;;;5453:299;;;;;;;;;;-1:-1:-1;5453:299:0;;;;;:::i;:::-;;:::i;4871:478:20:-;;;;;;;;;;-1:-1:-1;4871:478:20;;;;;:::i;:::-;;:::i;3078:91::-;;;;;;;;;;-1:-1:-1;3078:91:20;;3160:2;2898:36:54;;2886:2;2871:18;3078:91:20;2756:184:54;3346:122:0;;;;;;;;;;-1:-1:-1;3346:122:0;;;;;:::i;:::-;;:::i;5744:212:20:-;;;;;;;;;;-1:-1:-1;5744:212:20;;;;;:::i;:::-;;:::i;2012:25:0:-;;;;;;;;;;;;;;;;5988:178;;;;;;;;;;-1:-1:-1;5988:178:0;;;;;:::i;:::-;;:::i;8252:1472::-;;;;;;:::i;:::-;;:::i;9835:207::-;;;;;;;;;;;;;:::i;1657:31::-;;;;;;;;;;-1:-1:-1;1657:31:0;;;;;:::i;:::-;;:::i;3752:627::-;;;;;;;;;;-1:-1:-1;3752:627:0;;;;;:::i;:::-;;:::i;2129:23::-;;;;;;;;;;-1:-1:-1;2129:23:0;;;;-1:-1:-1;;;;;2129:23:0;;;1877:28;;;;;;;;;;-1:-1:-1;1877:28:0;;;;-1:-1:-1;;;1877:28:0;;;;;;3393:125:20;;;;;;;;;;-1:-1:-1;3393:125:20;;;;;:::i;:::-;-1:-1:-1;;;;;3493:18:20;3467:7;3493:18;;;;;;;;;;;;3393:125;1668:101:12;;;;;;;;;;;;;:::i;6471:149:0:-;;;;;;;;;;;;;:::i;2228:26::-;;;;;;;;;;-1:-1:-1;2228:26:0;;;;-1:-1:-1;;;;;2228:26:0;;;1036:85:12;;;;;;;;;;-1:-1:-1;1108:6:12;;-1:-1:-1;;;;;1108:6:12;1036:85;;2258:37:0;;;;;;;;;;;;2294:1;2258:37;;2352:102:20;;;;;;;;;;;;;:::i;13547:224:0:-;;;;;;;;;;;;;:::i;14541:262::-;;;;;;;;;;-1:-1:-1;14541:262:0;;;;;:::i;:::-;;:::i;5823:83::-;;;;;;;;;;-1:-1:-1;5889:5:0;:12;5823:83;;4458:895;;;;;;;;;;-1:-1:-1;4458:895:0;;;;;:::i;:::-;;:::i;6443:405:20:-;;;;;;;;;;-1:-1:-1;6443:405:20;;;;;:::i;:::-;;:::i;2193:31:0:-;;;;;;;;;;-1:-1:-1;2193:31:0;;;;-1:-1:-1;;;;;2193:31:0;;;15669:672;;;;;;;;;;-1:-1:-1;15669:672:0;;;;;:::i;:::-;;:::i;3721:172:20:-;;;;;;;;;;-1:-1:-1;3721:172:20;;;;;:::i;:::-;;:::i;2299:17:0:-;;;;;;;;;;-1:-1:-1;2299:17:0;;;;-1:-1:-1;;;;;2299:17:0;;;2156:33;;;;;;;;;;-1:-1:-1;2156:33:0;;;;-1:-1:-1;;;;;2156:33:0;;;1779:21;;;;;;;;;;;;;;;;14850:567;;;;;;;;;;;;;:::i;1854:19::-;;;;;;;;;;-1:-1:-1;1854:19:0;;;;-1:-1:-1;;;;;1854:19:0;;;12364:625;;;;;;;;;;;;;:::i;6237:112::-;;;;;;;;;;-1:-1:-1;6237:112:0;;;;;:::i;:::-;;:::i;3951:149:20:-;;;;;;;;;;-1:-1:-1;3951:149:20;;;;;:::i;:::-;-1:-1:-1;;;;;4066:18:20;;;4040:7;4066:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3951:149;3546:129:0;;;;;;;;;;-1:-1:-1;3546:129:0;;;;;:::i;:::-;;:::i;1918:198:12:-;;;;;;;;;;-1:-1:-1;1918:198:12;;;;;:::i;:::-;;:::i;2320:29:0:-;;;;;;;;;;-1:-1:-1;2320:29:0;;;;-1:-1:-1;;;2320:29:0;;;;;;8252:1472;8334:14;1744:1:19;2325:7;;:19;2317:63;;;;-1:-1:-1;;;2317:63:19;;5700:2:54;2317:63:19;;;5682:21:54;5739:2;5719:18;;;5712:30;5778:33;5758:18;;;5751:61;5829:18;;2317:63:19;;;;;;;;;1744:1;2455:7;:18;8367:9:0::1;::::0;-1:-1:-1;;;8367:9:0;::::1;;;8359:40;;;::::0;-1:-1:-1;;;8359:40:0;;6060:2:54;8359:40:0::1;::::0;::::1;6042:21:54::0;6099:2;6079:18;;;6072:30;-1:-1:-1;;;6118:18:54;;;6111:48;6176:18;;8359:40:0::1;5858:342:54::0;8359:40:0::1;8413:19;:17;:19::i;:::-;8405:49;;;;-1:-1:-1::0;;;8405:49:0::1;;;;;;;:::i;:::-;8485:6;::::0;-1:-1:-1;;;;;8468:24:0;;::::1;8485:6:::0;::::1;8468:24;::::0;:52:::1;;-1:-1:-1::0;8513:6:0::1;::::0;-1:-1:-1;;;;;8496:24:0;;::::1;8513:6:::0;::::1;8496:24;8468:52;8460:83;;;::::0;-1:-1:-1;;;8460:83:0;;6753:2:54;8460:83:0::1;::::0;::::1;6735:21:54::0;6792:2;6772:18;;;6765:30;-1:-1:-1;;;6811:18:54;;;6804:48;6869:18;;8460:83:0::1;6551:342:54::0;8460:83:0::1;8566:1;8557:6;:10;:27;;;;8583:1;8571:9;:13;8557:27;8549:57;;;::::0;-1:-1:-1;;;8549:57:0;;7100:2:54;8549:57:0::1;::::0;::::1;7082:21:54::0;7139:2;7119:18;;;7112:30;-1:-1:-1;;;7158:18:54;;;7151:47;7215:18;;8549:57:0::1;6898:341:54::0;8549:57:0::1;8663:9;:13:::0;8659:307:::1;;8710:4;::::0;-1:-1:-1;;;;;8693:22:0;;::::1;8710:4:::0;::::1;8693:22;8685:52;;;::::0;-1:-1:-1;;;8685:52:0;;7446:2:54;8685:52:0::1;::::0;::::1;7428:21:54::0;7485:2;7465:18;;;7458:30;-1:-1:-1;;;7504:18:54;;;7497:47;7561:18;;8685:52:0::1;7244:341:54::0;8685:52:0::1;8811:4;;;;;;;;;-1:-1:-1::0;;;;;8811:4:0::1;-1:-1:-1::0;;;;;8811:12:0::1;;8831:9;8811:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;8860:9;8851:18;;8659:307;;;8895:64;-1:-1:-1::0;;;;;8895:29:0;::::1;8925:10;8945:4;8952:6:::0;8895:29:::1;:64::i;:::-;9068:6;::::0;9012:8:::1;::::0;9079:3:::1;::::0;9032:44:::1;::::0;-1:-1:-1;;;;;9051:24:0;;::::1;9068:6:::0;::::1;9051:24;9032:18;:44::i;:::-;9023:53;::::0;:6;:53:::1;:::i;:::-;:59;;;;:::i;:::-;9114:8;::::0;9012:70;;-1:-1:-1;9088:40:0::1;::::0;-1:-1:-1;;;;;9088:25:0;;::::1;::::0;9114:8:::1;9012:70:::0;9088:25:::1;:40::i;:::-;9134:12;9206:5;-1:-1:-1::0;;;;;9200:21:0::1;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9196:27;::::0;:2:::1;:27;:::i;:::-;9180:12;9189:3:::0;9180:6;:12:::1;:::i;:::-;9149:6;::::0;:27:::1;::::0;-1:-1:-1;;;9149:27:0;;-1:-1:-1;;;;;2251:32:54;;;9149:27:0::1;::::0;::::1;2233:51:54::0;9149:6:0;;::::1;::::0;:20:::1;::::0;2206:18:54;;9149:27:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;;;;:::i;:::-;:74;;;;:::i;:::-;9134:89;;9256:8;:6;:8::i;:::-;9246:18;::::0;:7;:18:::1;:::i;:::-;9237:6;;:27;9229:60;;;::::0;-1:-1:-1;;;9229:60:0;;10563:2:54;9229:60:0::1;::::0;::::1;10545:21:54::0;10602:2;10582:18;;;10575:30;-1:-1:-1;;;10621:18:54;;;10614:50;10681:18;;9229:60:0::1;10361:344:54::0;9229:60:0::1;9296:17;9316:8;:6;:8::i;:::-;9296:28;;9330:12;9345:13;3316:12:20::0;;;3229:106;9345:13:0::1;9330:28:::0;-1:-1:-1;9412:12:0;;;:33:::1;;-1:-1:-1::0;9428:17:0;;9412:33:::1;9408:141;;;9465:14;:7:::0;9475:4:::1;9465:14;:::i;:::-;9453:26;;9408:141;;;9530:12:::0;9510:17:::1;9520:7:::0;9510;:17:::1;:::i;:::-;:32;;;;:::i;:::-;9498:44;;9408:141;9559:11;:9;:11::i;:::-;9596:1;9584:9;:13;9576:49;;;::::0;-1:-1:-1;;;9576:49:0;;10912:2:54;9576:49:0::1;::::0;::::1;10894:21:54::0;10951:2;10931:18;;;10924:30;10990:25;10970:18;;;10963:53;11033:18;;9576:49:0::1;10710:347:54::0;9576:49:0::1;9631:28;9637:10;9649:9;9631:5;:28::i;:::-;9674:45;::::0;;1482:25:54;;;1538:2;1523:18;;1516:34;;;-1:-1:-1;;;;;9674:45:0;::::1;::::0;9682:10:::1;::::0;9674:45:::1;::::0;1455:18:54;9674:45:0::1;;;;;;;;-1:-1:-1::0;;1701:1:19;2628:7;:22;-1:-1:-1;8252:1472:0;;;-1:-1:-1;;;8252:1472:0:o;6983:1114::-;7061:11;1744:1:19;2325:7;;:19;2317:63;;;;-1:-1:-1;;;2317:63:19;;5700:2:54;2317:63:19;;;5682:21:54;5739:2;5719:18;;;5712:30;5778:33;5758:18;;;5751:61;5829:18;;2317:63:19;5498:355:54;2317:63:19;1744:1;2455:7;:18;7088:19:0::1;:17;:19::i;:::-;7080:49;;;;-1:-1:-1::0;;;7080:49:0::1;;;;;;;:::i;:::-;7139:9;7152:1;7139:14:::0;7135:53:::1;;7177:10;3467:7:20::0;3493:18;;;;;;;;;;;7155:33:0::1;;7135:53;7225:10;3467:7:20::0;3493:18;;;;;;;;;;;7202:9:0::1;:34;;7194:72;;;::::0;-1:-1:-1;;;7194:72:0;;11264:2:54;7194:72:0::1;::::0;::::1;11246:21:54::0;11303:2;11283:18;;;11276:30;11342:27;11322:18;;;11315:55;11387:18;;7194:72:0::1;11062:349:54::0;7194:72:0::1;7292:1;7280:9;:13;7272:44;;;::::0;-1:-1:-1;;;7272:44:0;;11618:2:54;7272:44:0::1;::::0;::::1;11600:21:54::0;11657:2;11637:18;;;11630:30;-1:-1:-1;;;11676:18:54;;;11669:48;11734:18;;7272:44:0::1;11416:342:54::0;7272:44:0::1;7327:17;7347:8;:6;:8::i;:::-;7327:28;;7361:12;7403:13;3316:12:20::0;;;3229:106;7403:13:0::1;7376:24;7391:9:::0;7376:12;:24:::1;:::i;:::-;:40;;;;:::i;:::-;7471:6;::::0;:27:::1;::::0;-1:-1:-1;;;7471:27:0;;-1:-1:-1;;;;;2251:32:54;;;7471:27:0::1;::::0;::::1;2233:51:54::0;7361:55:0;;-1:-1:-1;7471:6:0;::::1;::::0;:20:::1;::::0;2206:18:54;;7471:27:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7451:5;-1:-1:-1::0;;;;;7445:21:0::1;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7441:27;::::0;:2:::1;:27;:::i;:::-;7431:37;::::0;:7;:37:::1;:::i;:::-;:67;;;;:::i;:::-;7560:6;::::0;7422:76;;-1:-1:-1;7504:8:0::1;::::0;7571:3:::1;::::0;7524:44:::1;::::0;-1:-1:-1;;;;;7543:24:0;;::::1;7560:6:::0;::::1;7543:24;7524:18;:44::i;:::-;7515:53;::::0;:6;:53:::1;:::i;:::-;:59;;;;:::i;:::-;7504:70;;7585:28;7591:10;7603:9;7585:5;:28::i;:::-;7619:20;:18;:20::i;:::-;7671:8;::::0;7645:40:::1;::::0;-1:-1:-1;;;;;7645:25:0;;::::1;::::0;7671:8:::1;7681:3:::0;7645:25:::1;:40::i;:::-;7691:8;7702:12;7711:3:::0;7702:6;:12:::1;:::i;:::-;7742:4;::::0;7691:23;;-1:-1:-1;;;;;;7742:4:0;;::::1;7725:22:::0;;::::1;::::0;7721:168:::1;;7756:4;::::0;:18:::1;::::0;-1:-1:-1;;;7756:18:0;;::::1;::::0;::::1;616:25:54::0;;;-1:-1:-1;;;;;7756:4:0;;::::1;::::0;:13:::1;::::0;589:18:54;;7756::0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;7782:33:0::1;::::0;7790:10:::1;::::0;-1:-1:-1;7782:33:0;::::1;;;::::0;-1:-1:-1;7811:3:0;;7782:33:::1;::::0;;;7811:3;7790:10;7782:33;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;7721:168;;;7840:42;-1:-1:-1::0;;;;;7840:25:0;::::1;7866:10;7878:3:::0;7840:25:::1;:42::i;:::-;8010:9;::::0;-1:-1:-1;;;8010:9:0;::::1;;;8006:29;;;8021:14;:12;:14::i;:::-;8046:46;::::0;;1482:25:54;;;1538:2;1523:18;;1516:34;;;-1:-1:-1;;;;;8046:46:0;::::1;::::0;8055:10:::1;::::0;8046:46:::1;::::0;1455:18:54;8046:46:0::1;1308:248:54::0;2141:98:20;2195:13;2227:5;2220:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2141:98;:::o;10093:397:0:-;10137:12;10151;10175:6;10170:316;10191:5;:12;10187:16;;10170:316;;;10217:18;10238:5;10244:1;10238:8;;;;;;;;:::i;:::-;;;;;;;;;;10270:11;;:38;;-1:-1:-1;;;10270:38:0;;-1:-1:-1;;;;;10238:8:0;;;10270:38;;;2233:51:54;;;10238:8:0;-1:-1:-1;10270:11:0;;;:26;;2206:18:54;;10270:38:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:52;;;10341:37;;-1:-1:-1;;;10341:37:0;;10372:4;10341:37;;;2233:51:54;10270:52:0;;-1:-1:-1;10330:8:0;;-1:-1:-1;;;;;10341:22:0;;;;;2206:18:54;;10341:37:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10330:48;;10387:9;10398;10411:1;-1:-1:-1;;;;;10411:17:0;;10429:3;10411:22;;;;;;;;;;;;;616:25:54;;604:2;589:18;;470:177;10411:22:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10386:47;;-1:-1:-1;10386:47:0;-1:-1:-1;10441:15:0;10386:47;10441:15;;:::i;:::-;;-1:-1:-1;10464:15:0;10475:4;10464:15;;:::i;:::-;;;10209:277;;;;;10205:3;;;;;:::i;:::-;;;;10170:316;;;;10093:397;;:::o;4238:166:20:-;4321:4;4337:39;719:10:28;4360:7:20;4369:6;4337:8;:39::i;:::-;-1:-1:-1;4393:4:20;4238:166;;;;;:::o;5453:299:0:-;1108:6:12;;-1:-1:-1;;;;;1108:6:12;719:10:28;1248:23:12;1240:68;;;;-1:-1:-1;;;1240:68:12;;;;;;;:::i;:::-;5521:8:0::1;5551:2;-1:-1:-1::0;;;;;5534:27:0::1;;:29;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5520:43;;;5570:8;5600:2;-1:-1:-1::0;;;;;5583:27:0::1;;:29;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;5632:6:0::1;::::0;5569:43;;-1:-1:-1;;;;;;5626:12:0;;::::1;5632:6:::0;::::1;5626:12;:28:::0;::::1;;;-1:-1:-1::0;5648:6:0::1;::::0;-1:-1:-1;;;;;5642:12:0;;::::1;5648:6:::0;::::1;5642:12;5626:28;5618:56;;;;-1:-1:-1::0;;;5618:56:0::1;;;;;;;:::i;:::-;5712:2;5680:5;5686;5680:12;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;::::1;:35:::0;;-1:-1:-1;;;;;;5680:35:0::1;-1:-1:-1::0;;;;;5680:35:0;;::::1;;::::0;;5726:21:::1;::::0;616:25:54;;;5726:21:0;;::::1;::::0;::::1;::::0;589:18:54;5726:21:0::1;;;;;;;5514:238;;5453:299:::0;;:::o;4871:478:20:-;-1:-1:-1;;;;;5050:19:20;;5007:4;5050:19;;;:11;:19;;;;;;;;719:10:28;5050:33:20;;;;;;;;5101:26;;;;5093:79;;;;-1:-1:-1;;;5093:79:20;;16658:2:54;5093:79:20;;;16640:21:54;16697:2;16677:18;;;16670:30;16736:34;16716:18;;;16709:62;-1:-1:-1;;;16787:18:54;;;16780:38;16835:19;;5093:79:20;16456:404:54;5093:79:20;5206:57;5215:6;719:10:28;5256:6:20;5237:16;:25;5206:8;:57::i;:::-;5284:36;5294:6;5302:9;5313:6;5284:9;:36::i;:::-;5338:4;5331:11;;;4871:478;;;;;;:::o;3346:122:0:-;1108:6:12;;-1:-1:-1;;;;;1108:6:12;719:10:28;1248:23:12;1240:68;;;;-1:-1:-1;;;1240:68:12;;;;;;;:::i;:::-;3407:9:0::1;:22:::0;;;::::1;;-1:-1:-1::0;;;3407:22:0::1;-1:-1:-1::0;;;;3407:22:0;;::::1;;::::0;;3441::::1;::::0;::::1;::::0;::::1;::::0;3419:10;2046:14:54;2039:22;2021:41;;2009:2;1994:18;;1881:187;3441:22:0::1;;;;;;;;3346:122:::0;:::o;5744:212:20:-;719:10:28;5832:4:20;5880:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5880:34:20;;;;;;;;;;5832:4;;5848:80;;5871:7;;5880:47;;5917:10;;5880:47;:::i;:::-;5848:8;:80::i;5988:178:0:-;1108:6:12;;-1:-1:-1;;;;;1108:6:12;719:10:28;1248:23:12;1240:68;;;;-1:-1:-1;;;1240:68:12;;;;;;;:::i;:::-;6071:3:0::1;6056:12;:18;6048:52;;;::::0;-1:-1:-1;;;6048:52:0;;17067:2:54;6048:52:0::1;::::0;::::1;17049:21:54::0;17106:2;17086:18;;;17079:30;-1:-1:-1;;;17125:18:54;;;17118:51;17186:18;;6048:52:0::1;16865:345:54::0;6048:52:0::1;6106:9;:24:::0;;;6141:20:::1;::::0;616:25:54;;;6141:20:0::1;::::0;604:2:54;589:18;6141:20:0::1;470:177:54::0;9835:207:0;9882:15;9905:11;9919:13;3316:12:20;;;3229:106;9919:13:0;9905:27;;9942:6;9952:1;9942:11;9938:25;;9962:1;9955:8;;;9835:207;:::o;9938:25::-;9969:15;9987:8;:6;:8::i;:::-;9969:26;-1:-1:-1;10031:6:0;10011:17;9969:26;10024:4;10011:17;:::i;:::-;:26;;;;:::i;:::-;10001:36;;9899:143;;9835:207;:::o;1657:31::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1657:31:0;;-1:-1:-1;1657:31:0;:::o;3752:627::-;1108:6:12;;-1:-1:-1;;;;;1108:6:12;719:10:28;1248:23:12;1240:68;;;;-1:-1:-1;;;1240:68:12;;;;;;;:::i;:::-;3805:18:0::1;3843:2;3805:41;;3853:8;3866:1;-1:-1:-1::0;;;;;3866:8:0::1;;:10;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3852:24;;;3883:8;3896:1;-1:-1:-1::0;;;;;3896:8:0::1;;:10;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;3926:6:0::1;::::0;3882:24;;-1:-1:-1;;;;;;3920:12:0;;::::1;3926:6:::0;::::1;3920:12;:28:::0;::::1;;;-1:-1:-1::0;3942:6:0::1;::::0;-1:-1:-1;;;;;3936:12:0;;::::1;3942:6:::0;::::1;3936:12;3920:28;3912:56;;;;-1:-1:-1::0;;;3912:56:0::1;;;;;;;:::i;:::-;3978:5;:12:::0;3994:1:::1;3978:17:::0;3974:378:::1;;3997:5;:13:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;3997:13:0;;;;;::::1;::::0;;-1:-1:-1;;;;;;3997:13:0::1;-1:-1:-1::0;;;;;3997:13:0;::::1;;::::0;;3974:378:::1;;;4078:17;::::0;-1:-1:-1;;;4078:17:0;::::1;;;4074:224;;;4131:5;4137:12:::0;;:14:::1;::::0;4150:1:::1;::::0;4137:14:::1;:::i;:::-;4131:21;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;::::1;::::0;:33:::1;::::0;;-1:-1:-1;;;4131:33:0;;;;-1:-1:-1;;;;;4131:21:0;;::::1;::::0;:31:::1;::::0;:33:::1;::::0;;::::1;::::0;;;;;;:21;:33:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4115:49;;:1;-1:-1:-1::0;;;;;4115:11:0::1;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:49;;;4106:85;;;::::0;-1:-1:-1;;;4106:85:0;;17795:2:54;4106:85:0::1;::::0;::::1;17777:21:54::0;17834:2;17814:18;;;17807:30;-1:-1:-1;;;17853:18:54;;;17846:52;17915:18;;4106:85:0::1;17593:346:54::0;4106:85:0::1;4074:224;;;4238:5;4244:12:::0;;:14:::1;::::0;4257:1:::1;::::0;4244:14:::1;:::i;:::-;4238:21;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;::::1;::::0;:33:::1;::::0;;-1:-1:-1;;;4238:33:0;;;;-1:-1:-1;;;;;4238:21:0;;::::1;::::0;:31:::1;::::0;:33:::1;::::0;;::::1;::::0;;;;;;:21;:33:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4222:49;;:1;-1:-1:-1::0;;;;;4222:11:0::1;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:49;;;4213:85;;;::::0;-1:-1:-1;;;4213:85:0;;17795:2:54;4213:85:0::1;::::0;::::1;17777:21:54::0;17834:2;17814:18;;;17807:30;-1:-1:-1;;;17853:18:54;;;17846:52;17915:18;;4213:85:0::1;17593:346:54::0;4213:85:0::1;4313:5;:32:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;4313:32:0;;;;;::::1;::::0;;-1:-1:-1;;;;;;4313:32:0::1;-1:-1:-1::0;;;;;4313:32:0;::::1;;::::0;;3974:378:::1;4362:12;::::0;-1:-1:-1;;;;;4362:12:0;::::1;::::0;::::1;::::0;;;::::1;3799:580;;;3752:627:::0;:::o;1668:101:12:-;1108:6;;-1:-1:-1;;;;;1108:6:12;719:10:28;1248:23:12;1240:68;;;;-1:-1:-1;;;1240:68:12;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;6471:149:0:-;6513:19;:17;:19::i;:::-;6505:49;;;;-1:-1:-1;;;6505:49:0;;;;;;;:::i;:::-;6560:20;:18;:20::i;:::-;6590:9;;-1:-1:-1;;;6590:9:0;;;;6586:29;;;6601:14;:12;:14::i;2352:102:20:-;2408:13;2440:7;2433:14;;;;;:::i;13547:224:0:-;13586:12;;13605:162;13621:5;:12;13619:14;;13605:162;;;13647:18;13668:5;13674:1;13668:8;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;13668:8:0;;-1:-1:-1;13695:17:0;13710:1;13695:14;:17::i;:::-;13684:28;;13756:4;13737:1;-1:-1:-1;;;;;13737:14:0;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13731:22;;:3;:22;:::i;:::-;:29;;;;:::i;:::-;13720:40;;;;:::i;:::-;;;13639:128;;13635:3;;;;;:::i;:::-;;;;13605:162;;;;13547:224;:::o;14541:262::-;14598:14;14620:18;14641:5;14647;14641:12;;;;;;;;:::i;:::-;;;;;;;;;;14683:11;;:38;;-1:-1:-1;;;14683:38:0;;-1:-1:-1;;;;;14641:12:0;;;14683:38;;;2233:51:54;;;14641:12:0;-1:-1:-1;14683:11:0;;;:26;;2206:18:54;;14683:38:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:52;;;14753:45;;-1:-1:-1;;;14753:45:0;;14792:4;14753:45;;;2233:51:54;14683:52:0;;-1:-1:-1;;;;;;14753:30:0;;;;;2206:18:54;;14753:45:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14741:57;14541:262;-1:-1:-1;;;;14541:262:0:o;4458:895::-;1108:6:12;;-1:-1:-1;;;;;1108:6:12;719:10:28;1248:23:12;1240:68;;;;-1:-1:-1;;;1240:68:12;;;;;;;:::i;:::-;4512:18:0::1;4550:2;4512:41;;4560:8;4573:1;-1:-1:-1::0;;;;;4573:8:0::1;;:10;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4559:24;;;4590:8;4603:1;-1:-1:-1::0;;;;;4603:8:0::1;;:10;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;4633:6:0::1;::::0;4589:24;;-1:-1:-1;;;;;;4627:12:0;;::::1;4633:6:::0;::::1;4627:12;:28:::0;::::1;;;-1:-1:-1::0;4649:6:0::1;::::0;-1:-1:-1;;;;;4643:12:0;;::::1;4649:6:::0;::::1;4643:12;4627:28;4619:56;;;;-1:-1:-1::0;;;4619:56:0::1;;;;;;;:::i;:::-;4685:5;:12:::0;4701:1:::1;4685:17:::0;4681:644:::1;;4704:5;:13:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;4704:13:0;;;;;::::1;::::0;;-1:-1:-1;;;;;;4704:13:0::1;-1:-1:-1::0;;;;;4704:13:0;::::1;;::::0;;4681:644:::1;;;4786:17;::::0;-1:-1:-1;;;4786:17:0;::::1;;;4781:201;;4839:5;4845:1;4839:8;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;::::1;::::0;:20:::1;::::0;;-1:-1:-1;;;4839:20:0;;;;-1:-1:-1;;;;;4839:8:0;;::::1;::::0;:18:::1;::::0;:20:::1;::::0;;::::1;::::0;;;;;;:8;:20:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4823:36;;:1;-1:-1:-1::0;;;;;4823:11:0::1;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:36;;;4814:73;;;::::0;-1:-1:-1;;;4814:73:0;;18146:2:54;4814:73:0::1;::::0;::::1;18128:21:54::0;18185:2;18165:18;;;18158:30;-1:-1:-1;;;18204:18:54;;;18197:53;18267:18;;4814:73:0::1;17944:347:54::0;4814:73:0::1;4781:201;;;4934:5;4940:1;4934:8;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;::::1;::::0;:20:::1;::::0;;-1:-1:-1;;;4934:20:0;;;;-1:-1:-1;;;;;4934:8:0;;::::1;::::0;:18:::1;::::0;:20:::1;::::0;;::::1;::::0;;;;;;:8;:20:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4918:36;;:1;-1:-1:-1::0;;;;;4918:11:0::1;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:36;;;4909:73;;;::::0;-1:-1:-1;;;4909:73:0;;18146:2:54;4909:73:0::1;::::0;::::1;18128:21:54::0;18185:2;18165:18;;;18158:30;-1:-1:-1;;;18204:18:54;;;18197:53;18267:18;;4909:73:0::1;17944:347:54::0;4909:73:0::1;5039:5;5056:12:::0;;5039:5;;5056:14:::1;::::0;5069:1:::1;::::0;5056:14:::1;:::i;:::-;5050:21;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;::::1;::::0;5039:33;;5050:21;5039:33;::::1;::::0;;;;;;;;;::::1;::::0;;-1:-1:-1;;;;;;5039:33:0::1;-1:-1:-1::0;;;;;5050:21:0;;::::1;5039:33:::0;;;::::1;::::0;;5112:5:::1;:12:::0;5127:1:::1;-1:-1:-1::0;5108:154:0::1;;;5144:6;5139:112;5160:5;:12:::0;:16:::1;::::0;5175:1:::1;::::0;5160:16:::1;:::i;:::-;5156:1;:20;5139:112;;;5224:5;5230:12:::0;;5249:1;;5230:16:::1;::::0;5245:1:::1;::::0;5230:16:::1;:::i;:::-;:20;;;;:::i;:::-;5224:27;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;5194:5:::1;5200:12:::0;;-1:-1:-1;;;;;5224:27:0;;::::1;::::0;5219:1;;5200:16:::1;::::0;5215:1:::1;::::0;5200:16:::1;:::i;:::-;:20;;;;:::i;:::-;5194:27;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;:57:::0;;-1:-1:-1;;;;;;5194:57:0::1;-1:-1:-1::0;;;;;5194:57:0;;;::::1;::::0;;;::::1;::::0;;5178:3;::::1;::::0;::::1;:::i;:::-;;;;5139:112;;;;5108:154;5317:1;5306:5;5312:1;5306:8;;;;;;;;:::i;:::-;;;;;;;;;:12;;;;;-1:-1:-1::0;;;;;5306:12:0::1;;;;;-1:-1:-1::0;;;;;5306:12:0::1;;;;;;4681:644;5335:13;::::0;-1:-1:-1;;;;;5335:13:0;::::1;::::0;::::1;::::0;;;::::1;4506:847;;;4458:895:::0;:::o;6443:405:20:-;719:10:28;6536:4:20;6579:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6579:34:20;;;;;;;;;;6631:35;;;;6623:85;;;;-1:-1:-1;;;6623:85:20;;18498:2:54;6623:85:20;;;18480:21:54;18537:2;18517:18;;;18510:30;18576:34;18556:18;;;18549:62;-1:-1:-1;;;18627:18:54;;;18620:35;18672:19;;6623:85:20;18296:401:54;6623:85:20;6742:67;719:10:28;6765:7:20;6793:15;6774:16;:34;6742:8;:67::i;:::-;-1:-1:-1;6837:4:20;;6443:405;-1:-1:-1;;;6443:405:20:o;15669:672:0:-;15739:22;15770:9;15781;15794:13;:11;:13::i;:::-;15769:38;;;;15813:11;15878:6;;;;;;;;;-1:-1:-1;;;;;15878:6:0;-1:-1:-1;;;;;15878:15:0;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15874:21;;:2;:21;:::i;:::-;15834:6;;15863;;15834:37;;-1:-1:-1;;;15834:37:0;;-1:-1:-1;;;;;15863:6:0;;;15834:37;;;2233:51:54;15834:6:0;;;:20;;2206:18:54;;15834:37:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15827:44;;:4;:44;:::i;:::-;:68;;;;:::i;:::-;15813:82;;15901:11;15966:6;;;;;;;;;-1:-1:-1;;;;;15966:6:0;-1:-1:-1;;;;;15966:15:0;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15962:21;;:2;:21;:::i;:::-;15922:6;;15951;;15922:37;;-1:-1:-1;;;15922:37:0;;-1:-1:-1;;;;;15951:6:0;;;15922:37;;;2233:51:54;15922:6:0;;;:20;;2206:18:54;;15922:37:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15915:44;;:4;:44;:::i;:::-;:68;;;;:::i;:::-;15901:82;;15994:14;15990:149;;;16058:10;:6;16067:1;16058:10;:::i;:::-;16048:6;16036:9;;:18;;;;:::i;:::-;:33;;;;:::i;:::-;16016:53;;15990:149;;;16128:10;:6;16137:1;16128:10;:::i;:::-;16118:6;16106:9;;:18;;;;:::i;:::-;:33;;;;:::i;:::-;16086:53;;15990:149;16214:1;16202:9;;:13;;;;:::i;:::-;16182:17;:33;16178:72;;;16249:1;16237:9;;:13;;;;:::i;:::-;16217:33;;16178:72;16296:1;16280:9;;16292:1;16280:13;;;;:::i;:::-;:17;;;;:::i;:::-;16260;:37;16256:80;;;16335:1;16319:9;;16331:1;16319:13;;;;:::i;:::-;:17;;;;:::i;:::-;16299:37;;16256:80;15763:578;;;;15669:672;;;:::o;3721:172:20:-;3807:4;3823:42;719:10:28;3847:9:20;3858:6;3823:9;:42::i;14850:567:0:-;14933:5;:12;14901:20;;14949:1;-1:-1:-1;14929:484:0;;-1:-1:-1;15066:1:0;15043:364;15087:5;:12;:16;;15102:1;;15087:16;:::i;:::-;15069:15;:34;15043:364;;;15134:9;;15158:5;15164:17;:15;15180:1;15164:17;:::i;:::-;15158:24;;;;;;;;:::i;:::-;;;;;;;;;;;:59;;-1:-1:-1;;;15158:59:0;;15212:4;15158:59;;;616:25:54;-1:-1:-1;;;;;15158:24:0;;;;:53;;589:18:54;;15158:59:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15133:84;;-1:-1:-1;15133:84:0;-1:-1:-1;15228:10:0;;15254:5;15260:17;:15;15276:1;15260:17;:::i;:::-;15254:24;;;;;;;;:::i;:::-;;;;;;;;;;;:59;;-1:-1:-1;;;15254:59:0;;15308:4;15254:59;;;616:25:54;-1:-1:-1;;;;;15254:24:0;;;;:53;;589:18:54;;15254:59:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15227:86;;;;15329:4;15337:1;15329:9;:22;;;;;15350:1;15342:5;:9;15329:22;15328:52;;;-1:-1:-1;15357:9:0;;:22;;;;;15378:1;15370:5;:9;15357:22;15323:75;;;15393:5;;;;14850:567;:::o;15323:75::-;15123:284;;;;15105:17;;;;;:::i;:::-;;;;15043:364;;;14850:567;:::o;12364:625::-;12414:12;12434:20;12464:11;;;;;;;;;-1:-1:-1;;;;;12464:11:0;-1:-1:-1;;;;;12464:17:0;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12433:50;;;;;;;;12494:14;12511:6;;;;;;;;;-1:-1:-1;;;;;12511:6:0;-1:-1:-1;;;;;12511:15:0;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12494:34;;;;12534:14;12551:6;;;;;;;;;-1:-1:-1;;;;;12551:6:0;-1:-1:-1;;;;;12551:15:0;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12534:34;;;-1:-1:-1;12574:12:0;12589:13;12593:9;12589:2;:13;:::i;:::-;12574:28;-1:-1:-1;;;;12726:1:0;12699:22;12714:7;12699:12;:22;:::i;:::-;-1:-1:-1;;;;;12694:28:0;:33;;;;:::i;:::-;12684:43;;:7;:43;:::i;:::-;:49;;12730:3;12684:49;:::i;:::-;:58;;;;:::i;:::-;12674:68;-1:-1:-1;12768:13:0;12772:9;12768:2;:13;:::i;:::-;12758:23;;:7;:23;:::i;:::-;12852:6;;12881;;12852:37;;-1:-1:-1;;;12852:37:0;;-1:-1:-1;;;;;12881:6:0;;;12852:37;;;2233:51:54;12748:33:0;;-1:-1:-1;12787:16:0;;12852:6;;;:20;;2206:18:54;;12852:37:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12812:6;;12841;;12812:37;;-1:-1:-1;;;12812:37:0;;-1:-1:-1;;;;;12841:6:0;;;12812:37;;;2233:51:54;12812:6:0;;;:20;;2206:18:54;;12812:37:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12806:43;;:3;:43;:::i;:::-;:83;;;;:::i;:::-;12787:102;-1:-1:-1;12929:3:0;12913:13;:7;12923:3;12913:13;:::i;:::-;:19;;;;:::i;:::-;12899:11;:33;:69;;;;-1:-1:-1;12965:3:0;12950:12;:7;12960:2;12950:12;:::i;:::-;:18;;;;:::i;:::-;12936:11;:32;12899:69;12895:89;;;12980:4;12970:14;;12895:89;12427:562;;;;;12364:625;:::o;6237:112::-;1108:6:12;;-1:-1:-1;;;;;1108:6:12;719:10:28;1248:23:12;1240:68;;;;-1:-1:-1;;;1240:68:12;;;;;;;:::i;:::-;6295:6:0::1;:18:::0;;;6324:20:::1;::::0;616:25:54;;;6324:20:0::1;::::0;604:2:54;589:18;6324:20:0::1;470:177:54::0;3546:129:0;1108:6:12;;-1:-1:-1;;;;;1108:6:12;719:10:28;1248:23:12;1240:68;;;;-1:-1:-1;;;1240:68:12;;;;;;;:::i;:::-;3612:8:0::1;:22:::0;;-1:-1:-1;;;;;;3612:22:0::1;-1:-1:-1::0;;;;;3612:22:0;::::1;::::0;;::::1;::::0;;;3646:24:::1;::::0;2233:51:54;;;3646:24:0::1;::::0;2221:2:54;2206:18;3646:24:0::1;2073:217:54::0;1918:198:12;1108:6;;-1:-1:-1;;;;;1108:6:12;719:10:28;1248:23:12;1240:68;;;;-1:-1:-1;;;1240:68:12;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:12;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:12;;20421:2:54;1998:73:12::1;::::0;::::1;20403:21:54::0;20460:2;20440:18;;;20433:30;20499:34;20479:18;;;20472:62;-1:-1:-1;;;20550:18:54;;;20543:36;20596:19;;1998:73:12::1;20219:402:54::0;1998:73:12::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;912:241:23:-;1077:68;;-1:-1:-1;;;;;20884:15:54;;;1077:68:23;;;20866:34:54;20936:15;;20916:18;;;20909:43;20968:18;;;20961:34;;;1050:96:23;;1070:5;;-1:-1:-1;;;1100:27:23;20801:18:54;;1077:68:23;;;;-1:-1:-1;;1077:68:23;;;;;;;;;;;;;;-1:-1:-1;;;;;1077:68:23;-1:-1:-1;;;;;;1077:68:23;;;;;;;;;;1050:19;:96::i;:::-;912:241;;;;:::o;701:205::-;840:58;;-1:-1:-1;;;;;21198:32:54;;840:58:23;;;21180:51:54;21247:18;;;21240:34;;;813:86:23;;833:5;;-1:-1:-1;;;863:23:23;21153:18:54;;840:58:23;21006:274:54;813:86:23;701:205;;;:::o;8311:389:20:-;-1:-1:-1;;;;;8394:21:20;;8386:65;;;;-1:-1:-1;;;8386:65:20;;21487:2:54;8386:65:20;;;21469:21:54;21526:2;21506:18;;;21499:30;21565:33;21545:18;;;21538:61;21616:18;;8386:65:20;21285:355:54;8386:65:20;8538:6;8522:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8554:18:20;;:9;:18;;;;;;;;;;:28;;8576:6;;8554:9;:28;;8576:6;;8554:28;:::i;:::-;;;;-1:-1:-1;;8597:37:20;;616:25:54;;;-1:-1:-1;;;;;8597:37:20;;;8614:1;;8597:37;;604:2:54;589:18;8597:37:20;;;;;;;8311:389;;:::o;9020:576::-;-1:-1:-1;;;;;9103:21:20;;9095:67;;;;-1:-1:-1;;;9095:67:20;;21847:2:54;9095:67:20;;;21829:21:54;21886:2;21866:18;;;21859:30;21925:34;21905:18;;;21898:62;-1:-1:-1;;;21976:18:54;;;21969:31;22017:19;;9095:67:20;21645:397:54;9095:67:20;-1:-1:-1;;;;;9258:18:20;;9233:22;9258:18;;;;;;;;;;;9294:24;;;;9286:71;;;;-1:-1:-1;;;9286:71:20;;22249:2:54;9286:71:20;;;22231:21:54;22288:2;22268:18;;;22261:30;22327:34;22307:18;;;22300:62;-1:-1:-1;;;22378:18:54;;;22371:32;22420:19;;9286:71:20;22047:398:54;9286:71:20;-1:-1:-1;;;;;9391:18:20;;:9;:18;;;;;;;;;;9412:23;;;9391:44;;9455:12;:22;;9429:6;;9391:9;9455:22;;9429:6;;9455:22;:::i;:::-;;;;-1:-1:-1;;9493:37:20;;616:25:54;;;9519:1:20;;-1:-1:-1;;;;;9493:37:20;;;;;604:2:54;589:18;9493:37:20;;;;;;;701:205:23;;;:::o;10586:124:0:-;10636:6;10631:71;10652:5;:12;10648:16;;10631:71;;;10678:17;10693:1;10678:14;:17::i;:::-;10666:3;;;;:::i;:::-;;;;10631:71;;11324:972;11364:17;11384:20;:18;:20::i;:::-;11429:6;;:31;;-1:-1:-1;;;11429:31:0;;11454:4;11429:31;;;2233:51:54;11364:40:0;;-1:-1:-1;11410:16:0;;-1:-1:-1;;;;;11429:6:0;;;;:16;;2206:18:54;;11429:31:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11485:6;;:31;;-1:-1:-1;;;11485:31:0;;11510:4;11485:31;;;2233:51:54;11410:50:0;;-1:-1:-1;11466:16:0;;-1:-1:-1;;;;;11485:6:0;;;;:16;;2206:18:54;;11485:31:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11466:50;;11565:14;11581;11599:5;11605:12;11599:19;;;;;;;;:::i;:::-;;;;;;;;;;;:54;;-1:-1:-1;;;11599:54:0;;11648:4;11599:54;;;616:25:54;-1:-1:-1;;;;;11599:19:0;;;;:48;;589:18:54;;11599:54:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11564:89;;-1:-1:-1;11564:89:0;-1:-1:-1;11677:12:0;11659:15;11713:16;11677:12;11728:1;11713:16;:::i;:::-;11695:34;-1:-1:-1;11739:13:0;;11735:95;;11774:16;:12;11789:1;11774:16;:::i;:::-;11761:29;;11811:12;11798:25;;11735:95;11888:15;;11884:153;;11912:54;11928:5;11934:10;11928:17;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;11928:17:0;11947:15;11961:1;11947:11;:15;:::i;:::-;11964:1;11912:15;:54::i;:::-;-1:-1:-1;11974:56:0;11990:5;11996:12;:10;12007:1;11996:12;:::i;:::-;11990:19;;;;;;;;:::i;11974:56::-;;11884:153;12046:15;;12042:153;;12070:54;12086:5;12092:10;12086:17;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;12086:17:0;;12108:15;12122:1;12108:11;:15;:::i;:::-;12070;:54::i;:::-;-1:-1:-1;12132:56:0;12148:5;12154:12;:10;12165:1;12154:12;:::i;:::-;12148:19;;;;;;;;:::i;12132:56::-;;12042:153;12225:9;;12209:12;:25;12205:55;;12236:9;:24;;;12205:55;12271:20;12281:9;;12271:20;;;;616:25:54;;604:2;589:18;;470:177;12271:20:0;;;;;;;;11357:939;;;;;;;11324:972::o;10019:370:20:-;-1:-1:-1;;;;;10150:19:20;;10142:68;;;;-1:-1:-1;;;10142:68:20;;22652:2:54;10142:68:20;;;22634:21:54;22691:2;22671:18;;;22664:30;22730:34;22710:18;;;22703:62;-1:-1:-1;;;22781:18:54;;;22774:34;22825:19;;10142:68:20;22450:400:54;10142:68:20;-1:-1:-1;;;;;10228:21:20;;10220:68;;;;-1:-1:-1;;;10220:68:20;;23057:2:54;10220:68:20;;;23039:21:54;23096:2;23076:18;;;23069:30;23135:34;23115:18;;;23108:62;-1:-1:-1;;;23186:18:54;;;23179:32;23228:19;;10220:68:20;22855:398:54;10220:68:20;-1:-1:-1;;;;;10299:18:20;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10350:32;;616:25:54;;;10350:32:20;;589:18:54;10350:32:20;;;;;;;10019:370;;;:::o;7322:713::-;-1:-1:-1;;;;;7457:20:20;;7449:70;;;;-1:-1:-1;;;7449:70:20;;23460:2:54;7449:70:20;;;23442:21:54;23499:2;23479:18;;;23472:30;23538:34;23518:18;;;23511:62;-1:-1:-1;;;23589:18:54;;;23582:35;23634:19;;7449:70:20;23258:401:54;7449:70:20;-1:-1:-1;;;;;7537:23:20;;7529:71;;;;-1:-1:-1;;;7529:71:20;;23866:2:54;7529:71:20;;;23848:21:54;23905:2;23885:18;;;23878:30;23944:34;23924:18;;;23917:62;-1:-1:-1;;;23995:18:54;;;23988:33;24038:19;;7529:71:20;23664:399:54;7529:71:20;-1:-1:-1;;;;;7693:17:20;;7669:21;7693:17;;;;;;;;;;;7728:23;;;;7720:74;;;;-1:-1:-1;;;7720:74:20;;24270:2:54;7720:74:20;;;24252:21:54;24309:2;24289:18;;;24282:30;24348:34;24328:18;;;24321:62;-1:-1:-1;;;24399:18:54;;;24392:36;24445:19;;7720:74:20;24068:402:54;7720:74:20;-1:-1:-1;;;;;7828:17:20;;;:9;:17;;;;;;;;;;;7848:22;;;7828:42;;7890:20;;;;;;;;:30;;7864:6;;7828:9;7890:30;;7864:6;;7890:30;:::i;:::-;;;;;;;;7953:9;-1:-1:-1;;;;;7936:35:20;7945:6;-1:-1:-1;;;;;7936:35:20;;7964:6;7936:35;;;;616:25:54;;604:2;589:18;;470:177;7936:35:20;;;;;;;;7982:46;701:205:23;2270:187:12;2362:6;;;-1:-1:-1;;;;;2378:17:12;;;-1:-1:-1;;;;;;2378:17:12;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;3207:706:23:-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;-1:-1:-1;;;;;3652:27:23;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:23;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;-1:-1:-1;;;3811:85:23;;24927:2:54;3811:85:23;;;24909:21:54;24966:2;24946:18;;;24939:30;25005:34;24985:18;;;24978:62;-1:-1:-1;;;25056:18:54;;;25049:40;25106:19;;3811:85:23;24725:406:54;10750:550:0;10801:19;10823:5;10829;10823:12;;;;;;;;:::i;:::-;;;;;;;;;;10865:11;;:39;;-1:-1:-1;;;10865:39:0;;-1:-1:-1;;;;;10823:12:0;;;10865:39;;;2233:51:54;;;10823:12:0;-1:-1:-1;10865:11:0;;;:26;;2206:18:54;;10865:39:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:53;;;10936:45;;-1:-1:-1;;;10936:45:0;;10975:4;10936:45;;;2233:51:54;10865:53:0;;-1:-1:-1;10924:9:0;;-1:-1:-1;;;;;10936:30:0;;;;;2206:18:54;;10936:45:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10999:27;;-1:-1:-1;;;10999:27:0;;-1:-1:-1;;;;;2251:32:54;;;10999:27:0;;;2233:51:54;10924:57:0;;-1:-1:-1;10987:9:0;;10999:12;;;;;2206:18:54;;10999:27:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10987:39;;11160:4;11153;:11;11149:28;;;11173:4;11166:11;;11149:28;11187:8;;11183:113;;11204:11;;:54;;-1:-1:-1;;;11204:54:0;;-1:-1:-1;;;;;25394:15:54;;;11204:54:0;;;25376:34:54;25426:18;;;25419:34;;;11252:4:0;25469:18:54;;;25462:43;11204:11:0;;;;:20;;25311:18:54;;11204:54:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11266:23:0;;-1:-1:-1;;;11266:23:0;;;;;25734:25:54;;;11284:1:0;25775:18:54;;;25768:34;;;25818:18;;;25811:34;-1:-1:-1;;;;;11266:11:0;;;;;25707:18:54;;11266:23:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;11183:113;10795:505;;;;10750:550;:::o;13941:470::-;14077:6;;14032:14;;14053:53;;-1:-1:-1;;;;;14077:6:0;14094:1;14098:7;14053:15;:53::i;:::-;14136:6;;14112:53;;-1:-1:-1;;;;;14136:6:0;14153:1;14157:7;14112:15;:53::i;:::-;14183:27;;-1:-1:-1;;;14183:27:0;;;;;1482:25:54;;;1523:18;;;1516:34;;;-1:-1:-1;;;;;14183:9:0;;;;;1455:18:54;;14183:27:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14232:26;;-1:-1:-1;;;14232:26:0;;14252:4;14232:26;;;2233:51:54;14171:39:0;;-1:-1:-1;14221:8:0;;-1:-1:-1;;;;;14232:11:0;;;;;2206:18:54;;14232:26:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14221:37;-1:-1:-1;14268:7:0;;14264:143;;14320:11;;14284:54;;14308:1;;-1:-1:-1;;;;;14320:11:0;14334:3;14284:15;:54::i;:::-;14346:11;;:54;;-1:-1:-1;;;14346:54:0;;-1:-1:-1;;;;;26150:15:54;;;14346:54:0;;;26132:34:54;26182:18;;;26175:34;;;14391:4:0;26225:18:54;;;26218:43;14346:11:0;26277:18:54;;;26270:47;14346:11:0;;;;:19;;26066::54;;14346:54:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14264:143;14047:364;13941:470;;;;;:::o;3846:223:27:-;3979:12;4010:52;4032:6;4040:4;4046:1;4049:12;4010:21;:52::i;13209:214:0:-;13298:46;;-1:-1:-1;;;13298:46:0;;13329:4;13298:46;;;26540:34:54;-1:-1:-1;;;;;26610:15:54;;;26590:18;;;26583:43;13347:6:0;;13298:22;;;;;;26475:18:54;;13298:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:55;13293:125;;;13356:62;-1:-1:-1;;;;;13356:34:0;;13391:7;-1:-1:-1;;13356:34:0;:62::i;4933:499:27:-;5098:12;5155:5;5130:21;:30;;5122:81;;;;-1:-1:-1;;;5122:81:27;;26839:2:54;5122:81:27;;;26821:21:54;26878:2;26858:18;;;26851:30;26917:34;26897:18;;;26890:62;-1:-1:-1;;;26968:18:54;;;26961:36;27014:19;;5122:81:27;26637:402:54;5122:81:27;-1:-1:-1;;;;;1450:19:27;;;5213:60;;;;-1:-1:-1;;;5213:60:27;;27246:2:54;5213:60:27;;;27228:21:54;27285:2;27265:18;;;27258:30;27324:31;27304:18;;;27297:59;27373:18;;5213:60:27;27044:353:54;5213:60:27;5285:12;5299:23;5326:6;-1:-1:-1;;;;;5326:11:27;5345:5;5352:4;5326:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5284:73;;;;5374:51;5391:7;5400:10;5412:12;5374:16;:51::i;:::-;5367:58;4933:499;-1:-1:-1;;;;;;;4933:499:27:o;2022:310:23:-;2171:39;;-1:-1:-1;;;2171:39:23;;2195:4;2171:39;;;26540:34:54;-1:-1:-1;;;;;26610:15:54;;;26590:18;;;26583:43;2148:20:23;;2213:5;;2171:15;;;;;26475:18:54;;2171:39:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:47;;;;:::i;:::-;2255:69;;-1:-1:-1;;;;;21198:32:54;;2255:69:23;;;21180:51:54;21247:18;;;21240:34;;;2148:70:23;;-1:-1:-1;2228:97:23;;2248:5;;-1:-1:-1;;;2278:22:23;21153:18:54;;2255:69:23;21006:274:54;7546:692:27;7692:12;7720:7;7716:516;;;-1:-1:-1;7750:10:27;7743:17;;7716:516;7861:17;;:21;7857:365;;8055:10;8049:17;8115:15;8102:10;8098:2;8094:19;8087:44;7857:365;8194:12;8187:20;;-1:-1:-1;;;8187:20:27;;;;;;;;:::i;14:131:54:-;-1:-1:-1;;;;;89:31:54;;79:42;;69:70;;135:1;132;125:12;150:315;218:6;226;279:2;267:9;258:7;254:23;250:32;247:52;;;295:1;292;285:12;247:52;331:9;318:23;308:33;;391:2;380:9;376:18;363:32;404:31;429:5;404:31;:::i;:::-;454:5;444:15;;;150:315;;;;;:::o;652:250::-;737:1;747:113;761:6;758:1;755:13;747:113;;;837:11;;;831:18;818:11;;;811:39;783:2;776:10;747:113;;;-1:-1:-1;;894:1:54;876:16;;869:27;652:250::o;907:396::-;1056:2;1045:9;1038:21;1019:4;1088:6;1082:13;1131:6;1126:2;1115:9;1111:18;1104:34;1147:79;1219:6;1214:2;1203:9;1199:18;1194:2;1186:6;1182:15;1147:79;:::i;:::-;1287:2;1266:15;-1:-1:-1;;1262:29:54;1247:45;;;;1294:2;1243:54;;907:396;-1:-1:-1;;907:396:54:o;1561:315::-;1629:6;1637;1690:2;1678:9;1669:7;1665:23;1661:32;1658:52;;;1706:1;1703;1696:12;1658:52;1745:9;1732:23;1764:31;1789:5;1764:31;:::i;:::-;1814:5;1866:2;1851:18;;;;1838:32;;-1:-1:-1;;;1561:315:54:o;2295:456::-;2372:6;2380;2388;2441:2;2429:9;2420:7;2416:23;2412:32;2409:52;;;2457:1;2454;2447:12;2409:52;2496:9;2483:23;2515:31;2540:5;2515:31;:::i;:::-;2565:5;-1:-1:-1;2622:2:54;2607:18;;2594:32;2635:33;2594:32;2635:33;:::i;:::-;2295:456;;2687:7;;-1:-1:-1;;;2741:2:54;2726:18;;;;2713:32;;2295:456::o;2945:118::-;3031:5;3024:13;3017:21;3010:5;3007:32;2997:60;;3053:1;3050;3043:12;3068:241;3124:6;3177:2;3165:9;3156:7;3152:23;3148:32;3145:52;;;3193:1;3190;3183:12;3145:52;3232:9;3219:23;3251:28;3273:5;3251:28;:::i;3314:180::-;3373:6;3426:2;3414:9;3405:7;3401:23;3397:32;3394:52;;;3442:1;3439;3432:12;3394:52;-1:-1:-1;3465:23:54;;3314:180;-1:-1:-1;3314:180:54:o;3733:247::-;3792:6;3845:2;3833:9;3824:7;3820:23;3816:32;3813:52;;;3861:1;3858;3851:12;3813:52;3900:9;3887:23;3919:31;3944:5;3919:31;:::i;5105:388::-;5173:6;5181;5234:2;5222:9;5213:7;5209:23;5205:32;5202:52;;;5250:1;5247;5240:12;5202:52;5289:9;5276:23;5308:31;5333:5;5308:31;:::i;:::-;5358:5;-1:-1:-1;5415:2:54;5400:18;;5387:32;5428:33;5387:32;5428:33;:::i;6205:341::-;6407:2;6389:21;;;6446:2;6426:18;;;6419:30;-1:-1:-1;;;6480:2:54;6465:18;;6458:47;6537:2;6522:18;;6205:341::o;7590:127::-;7651:10;7646:3;7642:20;7639:1;7632:31;7682:4;7679:1;7672:15;7706:4;7703:1;7696:15;7722:168;7795:9;;;7826;;7843:15;;;7837:22;;7823:37;7813:71;;7864:18;;:::i;7895:127::-;7956:10;7951:3;7947:20;7944:1;7937:31;7987:4;7984:1;7977:15;8011:4;8008:1;8001:15;8027:120;8067:1;8093;8083:35;;8098:18;;:::i;:::-;-1:-1:-1;8132:9:54;;8027:120::o;8152:160::-;8229:13;;8282:4;8271:16;;8261:27;;8251:55;;8302:1;8299;8292:12;8251:55;8152:160;;;:::o;8317:204::-;8385:6;8438:2;8426:9;8417:7;8413:23;8409:32;8406:52;;;8454:1;8451;8444:12;8406:52;8477:38;8505:9;8477:38;:::i;8526:422::-;8615:1;8658:5;8615:1;8672:270;8693:7;8683:8;8680:21;8672:270;;;8752:4;8748:1;8744:6;8740:17;8734:4;8731:27;8728:53;;;8761:18;;:::i;:::-;8811:7;8801:8;8797:22;8794:55;;;8831:16;;;;8794:55;8910:22;;;;8870:15;;;;8672:270;;;8676:3;8526:422;;;;;:::o;8953:806::-;9002:5;9032:8;9022:80;;-1:-1:-1;9073:1:54;9087:5;;9022:80;9121:4;9111:76;;-1:-1:-1;9158:1:54;9172:5;;9111:76;9203:4;9221:1;9216:59;;;;9289:1;9284:130;;;;9196:218;;9216:59;9246:1;9237:10;;9260:5;;;9284:130;9321:3;9311:8;9308:17;9305:43;;;9328:18;;:::i;:::-;-1:-1:-1;;9384:1:54;9370:16;;9399:5;;9196:218;;9498:2;9488:8;9485:16;9479:3;9473:4;9470:13;9466:36;9460:2;9450:8;9447:16;9442:2;9436:4;9433:12;9429:35;9426:77;9423:159;;;-1:-1:-1;9535:19:54;;;9567:5;;9423:159;9614:34;9639:8;9633:4;9614:34;:::i;:::-;9684:6;9680:1;9676:6;9672:19;9663:7;9660:32;9657:58;;;9695:18;;:::i;:::-;9733:20;;8953:806;-1:-1:-1;;;8953:806:54:o;9764:140::-;9822:5;9851:47;9892:4;9882:8;9878:19;9872:4;9851:47;:::i;9909:128::-;9976:9;;;9997:11;;;9994:37;;;10011:18;;:::i;10042:184::-;10112:6;10165:2;10153:9;10144:7;10140:23;10136:32;10133:52;;;10181:1;10178;10171:12;10133:52;-1:-1:-1;10204:16:54;;10042:184;-1:-1:-1;10042:184:54:o;10231:125::-;10296:9;;;10317:10;;;10314:36;;;10330:18;;:::i;11763:380::-;11842:1;11838:12;;;;11885;;;11906:61;;11960:4;11952:6;11948:17;11938:27;;11906:61;12013:2;12005:6;12002:14;11982:18;11979:38;11976:161;;12059:10;12054:3;12050:20;12047:1;12040:31;12094:4;12091:1;12084:15;12122:4;12119:1;12112:15;11976:161;;11763:380;;;:::o;12148:127::-;12209:10;12204:3;12200:20;12197:1;12190:31;12240:4;12237:1;12230:15;12264:4;12261:1;12254:15;12280:344;12347:2;12341:9;12389:3;12377:16;;12423:18;12408:34;;12444:22;;;12405:62;12402:185;;;12509:10;12504:3;12500:20;12497:1;12490:31;12544:4;12541:1;12534:15;12572:4;12569:1;12562:15;12402:185;12603:2;12596:22;12280:344;:::o;12629:523::-;12710:5;12758:4;12746:9;12741:3;12737:19;12733:30;12730:50;;;12776:1;12773;12766:12;12730:50;12809:2;12803:9;12851:4;12843:6;12839:17;12922:6;12910:10;12907:22;12886:18;12874:10;12871:34;12868:62;12865:185;;;12972:10;12967:3;12963:20;12960:1;12953:31;13007:4;13004:1;12997:15;13035:4;13032:1;13025:15;12865:185;13066:2;13059:22;13129:16;;13114:32;;-1:-1:-1;13099:6:54;12629:523;-1:-1:-1;12629:523:54:o;13157:192::-;13236:13;;13289:34;13278:46;;13268:57;;13258:85;;13339:1;13336;13329:12;13354:169;13432:13;;13485:12;13474:24;;13464:35;;13454:63;;13513:1;13510;13503:12;13528:138;13607:13;;13629:31;13607:13;13629:31;:::i;13671:1334::-;13771:6;13824:3;13812:9;13803:7;13799:23;13795:33;13792:53;;;13841:1;13838;13831:12;13792:53;13867:17;;:::i;:::-;13907:72;13971:7;13960:9;13907:72;:::i;:::-;13900:5;13893:87;14012:49;14057:2;14046:9;14042:18;14012:49;:::i;:::-;14007:2;14000:5;13996:14;13989:73;14094:49;14139:2;14128:9;14124:18;14094:49;:::i;:::-;14089:2;14082:5;14078:14;14071:73;14176:49;14221:2;14210:9;14206:18;14176:49;:::i;:::-;14171:2;14164:5;14160:14;14153:73;14259:50;14304:3;14293:9;14289:19;14259:50;:::i;:::-;14253:3;14246:5;14242:15;14235:75;14343:50;14388:3;14377:9;14373:19;14343:50;:::i;:::-;14337:3;14330:5;14326:15;14319:75;14427:49;14471:3;14460:9;14456:19;14427:49;:::i;:::-;14421:3;14414:5;14410:15;14403:74;14510:50;14555:3;14544:9;14540:19;14510:50;:::i;:::-;14504:3;14497:5;14493:15;14486:75;14580:3;14615:49;14660:2;14649:9;14645:18;14615:49;:::i;:::-;14599:14;;;14592:73;14684:3;14719:49;14749:18;;;14719:49;:::i;:::-;14703:14;;;14696:73;14788:3;14823:49;14853:18;;;14823:49;:::i;:::-;14807:14;;;14800:73;14892:3;14927:47;14955:18;;;14927:47;:::i;:::-;14911:14;;;14904:71;14915:5;13671:1334;-1:-1:-1;;;13671:1334:54:o;15010:245::-;15089:6;15097;15150:2;15138:9;15129:7;15125:23;15121:32;15118:52;;;15166:1;15163;15156:12;15118:52;-1:-1:-1;;15189:16:54;;15245:2;15230:18;;;15224:25;15189:16;;15224:25;;-1:-1:-1;15010:245:54:o;15260:135::-;15299:3;15320:17;;;15317:43;;15340:18;;:::i;:::-;-1:-1:-1;15387:1:54;15376:13;;15260:135::o;15400:356::-;15602:2;15584:21;;;15621:18;;;15614:30;15680:34;15675:2;15660:18;;15653:62;15747:2;15732:18;;15400:356::o;15761:346::-;15852:6;15860;15913:2;15901:9;15892:7;15888:23;15884:32;15881:52;;;15929:1;15926;15919:12;15881:52;15961:9;15955:16;15980:31;16005:5;15980:31;:::i;:::-;16030:5;-1:-1:-1;16054:47:54;16097:2;16082:18;;16054:47;:::i;:::-;16044:57;;15761:346;;;;;:::o;16112:339::-;16314:2;16296:21;;;16353:2;16333:18;;;16326:30;-1:-1:-1;;;16387:2:54;16372:18;;16365:45;16442:2;16427:18;;16112:339::o;17215:164::-;17292:13;;17345:1;17334:20;;;17324:31;;17314:59;;17369:1;17366;17359:12;17384:204;17452:6;17505:2;17493:9;17484:7;17480:23;17476:32;17473:52;;;17521:1;17518;17511:12;17473:52;17544:38;17572:9;17544:38;:::i;18910:163::-;18988:13;;19041:6;19030:18;;19020:29;;19010:57;;19063:1;19060;19053:12;19078:794;19192:6;19200;19208;19216;19224;19232;19240;19293:3;19281:9;19272:7;19268:23;19264:33;19261:53;;;19310:1;19307;19300:12;19261:53;19342:9;19336:16;19361:31;19386:5;19361:31;:::i;:::-;19411:5;-1:-1:-1;19435:47:54;19478:2;19463:18;;19435:47;:::i;:::-;19425:57;;19501:48;19545:2;19534:9;19530:18;19501:48;:::i;:::-;19491:58;;19568:48;19612:2;19601:9;19597:18;19568:48;:::i;:::-;19558:58;;19635:49;19679:3;19668:9;19664:19;19635:49;:::i;:::-;19625:59;;19703:48;19746:3;19735:9;19731:19;19703:48;:::i;:::-;19693:58;;19796:3;19785:9;19781:19;19775:26;19810:30;19832:7;19810:30;:::i;:::-;19859:7;19849:17;;;19078:794;;;;;;;;;;:::o;19877:131::-;19937:5;19966:36;19993:8;19987:4;19966:36;:::i;20013:201::-;20053:1;-1:-1:-1;;;;;20118:10:54;;;;20137:37;;20154:18;;:::i;:::-;20192:10;;20188:20;;;;;20013:201;-1:-1:-1;;20013:201:54:o;24475:245::-;24542:6;24595:2;24583:9;24574:7;24570:23;24566:32;24563:52;;;24611:1;24608;24601:12;24563:52;24643:9;24637:16;24662:28;24684:5;24662:28;:::i;27402:287::-;27531:3;27569:6;27563:13;27585:66;27644:6;27639:3;27632:4;27624:6;27620:17;27585:66;:::i;:::-;27667:16;;;;;27402:287;-1:-1:-1;;27402:287:54:o",
  "language": "Solidity",
  "natspec": {
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      }
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "baseFeeX4()": {
        "notice": "Pool base fee "
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "deposit(address,uint256)": {
        "notice": "deposit tokens in the pool, convert to WETH if necessary",
        "params": {
          "amount": "Amount of token deposited",
          "token": "Token address"
        }
      },
      "getActiveTickIndex()": {
        "notice": "Return first valid tick"
      },
      "getAdjustedBaseFee(bool)": {
        "details": "Simple linear model: from baseFeeX4 / 2 to baseFeeX4 * 2Call before withdrawing from ticks or reserves will both be 0",
        "notice": "Get deposit fee",
        "params": {
          "increaseToken0": "Whether (token0 added || token1 removed) or not"
        }
      },
      "getReserves()": {
        "notice": "Get vault underlying assets"
      },
      "getTVL()": {
        "notice": "Calculate the vault total ticks value",
        "returns": {
          "valueX8": "Total value of the vault with 8 decimals"
        }
      },
      "getTickBalance(uint256)": {
        "notice": "Get balance of tick deposited in GE",
        "params": {
          "index": "Tick index"
        },
        "returns": {
          "liquidity": "Amount of Ticker"
        }
      },
      "getTickLength()": {
        "notice": "Ticks length getter",
        "returns": {
          "len": "Ticks length"
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "latestAnswer()": {
        "notice": "Get value of 1e18 GEV tokens",
        "returns": {
          "priceX8": "price of 1e18 tokens with 8 decimals"
        }
      },
      "modifyTick(address,uint256)": {
        "notice": "Modify ticker",
        "params": {
          "index": "Tick to modify",
          "tr": "New tick address"
        }
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "poolMatchesOracle()": {
        "notice": "Checks that the pool price isn't manipulated"
      },
      "pushTick(address)": {
        "notice": "Add a new ticker to the list",
        "params": {
          "tr": "Tick address"
        }
      },
      "rebalance()": {
        "details": "Provide the list of tickers from ",
        "notice": "Rebalance tickers"
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setBaseFee(uint256)": {
        "notice": "Set the base fee",
        "params": {
          "newBaseFeeX4": "New base fee in E4"
        }
      },
      "setEnabled(bool)": {
        "notice": "Set pool status",
        "params": {
          "_isEnabled": "Pool status"
        }
      },
      "setTreasury(address)": {
        "notice": "Set treasury address",
        "params": {
          "newTreasury": "New address"
        }
      },
      "setTvlCap(uint256)": {
        "notice": "Set the TVL cap",
        "params": {
          "newTvlCap": "New TVL cap"
        }
      },
      "shiftTick(address)": {
        "notice": "Add a new ticker to the list",
        "params": {
          "tr": "Tick address"
        }
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "tickIndex()": {
        "notice": "Tracks the beginning of active ticks: the next 4 ticks are the active"
      },
      "ticks(uint256)": {
        "notice": "Ticks properly ordered in ascending price order"
      },
      "token0()": {
        "notice": "Pair tokens"
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "treasury()": {
        "notice": "CONSTANTS  immutable keyword removed for coverage testing bug in brownie"
      },
      "tvlCap()": {
        "notice": "Max vault TVL with 8 decimals"
      },
      "withdraw(uint256,address)": {
        "details": "For simplicity+efficieny, withdrawal is like a rebalancing, but a subset of the tokens are sent back to the user before redeploying",
        "notice": "Withdraw assets from the ticker",
        "params": {
          "liquidity": "Amount of GEV tokens to redeem; if 0, redeem all",
          "token": "Address of the token redeemed for"
        },
        "returns": {
          "amount": "Total token returned"
        }
      }
    },
    "notice": "GeVault is a reblancing vault that holds TokenisableRanges tickers Functionalities: - Hold a list of tickers for a single pair, evenly spaced - Hold balances of those tickers, deposited in the ROE LP - Deposit one underlying asset split evenly into 2 or more consecutive ticks above/below the current price - Withdraw one underlying asset, taken out evenly from 2 or more consecutive ticks - Calculate the current balance of assets Design:",
    "version": 1
  },
  "offset": [
    974,
    16519
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x280 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7DC0D1D0 GT PUSH2 0x14F JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xD5EDB9D6 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xD5EDB9D6 EQ PUSH2 0x780 JUMPI DUP1 PUSH4 0xDD0290E2 EQ PUSH2 0x795 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x7B5 JUMPI DUP1 PUSH4 0xF0F44260 EQ PUSH2 0x7FB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x81B JUMPI DUP1 PUSH4 0xFF71F0DF EQ PUSH2 0x83B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x6D5 JUMPI DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0x6F5 JUMPI DUP1 PUSH4 0xBDD3D825 EQ PUSH2 0x715 JUMPI DUP1 PUSH4 0xCF94B206 EQ PUSH2 0x735 JUMPI DUP1 PUSH4 0xD09A323C EQ PUSH2 0x74B JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x760 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA003908C GT PUSH2 0x113 JUMPI DUP1 PUSH4 0xA003908C EQ PUSH2 0x620 JUMPI DUP1 PUSH4 0xA2260DD6 EQ PUSH2 0x640 JUMPI DUP1 PUSH4 0xA2716E5E EQ PUSH2 0x655 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x675 JUMPI DUP1 PUSH4 0xA59A9973 EQ PUSH2 0x695 JUMPI DUP1 PUSH4 0xA8D2E314 EQ PUSH2 0x6B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7DC0D1D0 EQ PUSH2 0x5A3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5C3 JUMPI DUP1 PUSH4 0x8FCCD12E EQ PUSH2 0x5E1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x5F6 JUMPI DUP1 PUSH4 0x97B3FCAA EQ PUSH2 0x60B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x6193AAEB GT PUSH2 0x1AC JUMPI DUP1 PUSH4 0x6193AAEB EQ PUSH2 0x4E2 JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x502 JUMPI DUP1 PUSH4 0x6AA633B6 EQ PUSH2 0x522 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x543 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x579 JUMPI DUP1 PUSH4 0x7D7C2A1C EQ PUSH2 0x58E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x444 JUMPI DUP1 PUSH4 0x3F23FA1A EQ PUSH2 0x464 JUMPI DUP1 PUSH4 0x46860698 EQ PUSH2 0x47A JUMPI DUP1 PUSH4 0x47E7EF24 EQ PUSH2 0x49A JUMPI DUP1 PUSH4 0x50D25BCD EQ PUSH2 0x4AD JUMPI DUP1 PUSH4 0x534CB30D EQ PUSH2 0x4C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x245 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0x18FC392B EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0x1E5D5C07 EQ PUSH2 0x3C8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x3E8 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x408 JUMPI DUP1 PUSH4 0x328D8F72 EQ PUSH2 0x424 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xF714CE EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x365 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x2B1 JUMPI PUSH1 0x12 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2AF JUMPI PUSH1 0x12 SLOAD PUSH2 0x2AD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLVALUE PUSH2 0x85C JUMP JUMPDEST POP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D6 PUSH2 0x2D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x3FCE JUMP JUMPDEST PUSH2 0xD7A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FE PUSH2 0x115F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x4022 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x317 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x320 PUSH2 0x11F1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x2E0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x341 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x355 PUSH2 0x350 CALLDATASIZE PUSH1 0x4 PUSH2 0x4055 JUMP JUMPDEST PUSH2 0x13B2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2E0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x371 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH2 0x385 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2E0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x2D6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D6 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AF PUSH2 0x3E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x4055 JUMP JUMPDEST PUSH2 0x13C9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x355 PUSH2 0x403 CALLDATASIZE PUSH1 0x4 PUSH2 0x4081 JUMP JUMPDEST PUSH2 0x157B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x414 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2E0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x430 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AF PUSH2 0x43F CALLDATASIZE PUSH1 0x4 PUSH2 0x40D0 JUMP JUMPDEST PUSH2 0x1625 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x450 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x355 PUSH2 0x45F CALLDATASIZE PUSH1 0x4 PUSH2 0x4055 JUMP JUMPDEST PUSH2 0x16A7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D6 PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AF PUSH2 0x495 CALLDATASIZE PUSH1 0x4 PUSH2 0x40ED JUMP JUMPDEST PUSH2 0x16E3 JUMP JUMPDEST PUSH2 0x2D6 PUSH2 0x4A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x4055 JUMP JUMPDEST PUSH2 0x85C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D6 PUSH2 0x178A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x385 PUSH2 0x4DD CALLDATASIZE PUSH1 0x4 PUSH2 0x40ED JUMP JUMPDEST PUSH2 0x17D8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AF PUSH2 0x4FD CALLDATASIZE PUSH1 0x4 PUSH2 0x4106 JUMP JUMPDEST PUSH2 0x1802 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xE SLOAD PUSH2 0x385 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0x355 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D6 PUSH2 0x55E CALLDATASIZE PUSH1 0x4 PUSH2 0x4106 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x585 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AF PUSH2 0x1CBB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AF PUSH2 0x1CF1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x11 SLOAD PUSH2 0x385 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x385 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D6 PUSH1 0x2 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x602 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FE PUSH2 0x1D37 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x617 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D6 PUSH2 0x1D46 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D6 PUSH2 0x63B CALLDATASIZE PUSH1 0x4 PUSH2 0x40ED JUMP JUMPDEST PUSH2 0x1E2E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x64C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH2 0x2D6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x661 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AF PUSH2 0x670 CALLDATASIZE PUSH1 0x4 PUSH2 0x4106 JUMP JUMPDEST PUSH2 0x1F38 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x681 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x355 PUSH2 0x690 CALLDATASIZE PUSH1 0x4 PUSH2 0x4055 JUMP JUMPDEST PUSH2 0x2500 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x10 SLOAD PUSH2 0x385 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D6 PUSH2 0x6D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x40D0 JUMP JUMPDEST PUSH2 0x2599 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x355 PUSH2 0x6F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x4055 JUMP JUMPDEST PUSH2 0x2885 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x701 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x12 SLOAD PUSH2 0x385 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x721 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xF SLOAD PUSH2 0x385 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x741 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D6 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x757 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D6 PUSH2 0x2892 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x76C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0x385 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x78C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x355 PUSH2 0x2A44 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AF PUSH2 0x7B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x40ED JUMP JUMPDEST PUSH2 0x2D7C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D6 PUSH2 0x7D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x4123 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x807 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AF PUSH2 0x816 CALLDATASIZE PUSH1 0x4 PUSH2 0x4106 JUMP JUMPDEST PUSH2 0x2DDB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x827 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AF PUSH2 0x836 CALLDATASIZE PUSH1 0x4 PUSH2 0x4106 JUMP JUMPDEST PUSH2 0x2E53 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x847 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x12 SLOAD PUSH2 0x355 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x8B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 SSTORE PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x908 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x11D1558E88141BDBDB08111A5CD8589B1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8AC JUMP JUMPDEST PUSH2 0x910 PUSH2 0x2A44 JUMP JUMPDEST PUSH2 0x92C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AC SWAP1 PUSH2 0x4151 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ DUP1 PUSH2 0x955 JUMPI POP PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ JUMPDEST PUSH2 0x996 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x23A2AB1D1024B73B30B634B2102A37B5B2B7 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8AC JUMP JUMPDEST PUSH1 0x0 DUP3 GT DUP1 PUSH2 0x9A5 JUMPI POP PUSH1 0x0 CALLVALUE GT JUMPDEST PUSH2 0x9E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x4745563A204465706F736974205A65726F PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8AC JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0xAAD JUMPI PUSH1 0x12 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ PUSH2 0xA3C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x8E8AAC744092DCECC2D8D2C840AECAE8D PUSH1 0x7B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8AC JUMP JUMPDEST PUSH1 0x12 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD0E30DB0 CALLVALUE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAA0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP CALLVALUE SWAP2 POP PUSH2 0xAC2 JUMP JUMPDEST PUSH2 0xAC2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND CALLER ADDRESS DUP6 PUSH2 0x2EEE JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0xAE3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 AND EQ PUSH2 0x2599 JUMP JUMPDEST PUSH2 0xAED SWAP1 DUP6 PUSH2 0x4192 JUMP JUMPDEST PUSH2 0xAF7 SWAP2 SWAP1 PUSH2 0x41BF JUMP JUMPDEST PUSH1 0xE SLOAD SWAP1 SWAP2 POP PUSH2 0xB14 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 AND DUP4 PUSH2 0x2F5F JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB54 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB78 SWAP2 SWAP1 PUSH2 0x41E9 JUMP JUMPDEST PUSH2 0xB83 SWAP1 PUSH1 0xA PUSH2 0x42E8 JUMP JUMPDEST PUSH2 0xB8D DUP4 DUP7 PUSH2 0x42F7 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB3596F07 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xB3596F07 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBD7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBFB SWAP2 SWAP1 PUSH2 0x430A JUMP JUMPDEST PUSH2 0xC05 SWAP2 SWAP1 PUSH2 0x4192 JUMP JUMPDEST PUSH2 0xC0F SWAP2 SWAP1 PUSH2 0x41BF JUMP JUMPDEST SWAP1 POP PUSH2 0xC19 PUSH2 0x1D46 JUMP JUMPDEST PUSH2 0xC23 SWAP1 DUP3 PUSH2 0x4323 JUMP JUMPDEST PUSH1 0xD SLOAD GT PUSH2 0xC6A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x11D1558E8813585E0810D85C0814995858DA1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8AC JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC74 PUSH2 0x1D46 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC81 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO DUP1 PUSH2 0xC8E JUMPI POP DUP2 ISZERO JUMPDEST ISZERO PUSH2 0xCA9 JUMPI PUSH2 0xCA2 DUP4 PUSH5 0x2540BE400 PUSH2 0x4192 JUMP JUMPDEST SWAP5 POP PUSH2 0xCC1 JUMP JUMPDEST DUP2 PUSH2 0xCB4 DUP5 DUP4 PUSH2 0x4192 JUMP JUMPDEST PUSH2 0xCBE SWAP2 SWAP1 PUSH2 0x41BF JUMP JUMPDEST SWAP5 POP JUMPDEST PUSH2 0xCC9 PUSH2 0x1CF1 JUMP JUMPDEST PUSH1 0x0 DUP6 GT PUSH2 0xD19 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4745563A204E6F204C6971756964697479204164646564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8AC JUMP JUMPDEST PUSH2 0xD23 CALLER DUP7 PUSH2 0x2F94 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP2 CALLER SWAP2 PUSH32 0xDCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH1 0x1 PUSH1 0x6 SSTORE POP SWAP1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0xDCE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8AC JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SSTORE PUSH2 0xDDB PUSH2 0x2A44 JUMP JUMPDEST PUSH2 0xDF7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AC SWAP1 PUSH2 0x4151 JUMP JUMPDEST DUP3 PUSH1 0x0 SUB PUSH2 0xE12 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP3 POP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 GT ISZERO PUSH2 0xE71 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4745563A20496E73756666696369656E742042616C616E636500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8AC JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0xEB6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x4745563A205769746864726177205A65726F PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8AC JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEC0 PUSH2 0x1D46 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xECD PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xED7 DUP7 DUP5 PUSH2 0x4192 JUMP JUMPDEST PUSH2 0xEE1 SWAP2 SWAP1 PUSH2 0x41BF JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB3596F07 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP3 SWAP4 POP SWAP2 AND SWAP1 PUSH4 0xB3596F07 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF2D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF51 SWAP2 SWAP1 PUSH2 0x430A JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF8F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFB3 SWAP2 SWAP1 PUSH2 0x41E9 JUMP JUMPDEST PUSH2 0xFBE SWAP1 PUSH1 0xA PUSH2 0x42E8 JUMP JUMPDEST PUSH2 0xFC8 SWAP1 DUP4 PUSH2 0x4192 JUMP JUMPDEST PUSH2 0xFD2 SWAP2 SWAP1 PUSH2 0x41BF JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 SWAP4 POP PUSH1 0x0 SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0xFF6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND SWAP2 AND EQ PUSH2 0x2599 JUMP JUMPDEST PUSH2 0x1000 SWAP1 DUP7 PUSH2 0x4192 JUMP JUMPDEST PUSH2 0x100A SWAP2 SWAP1 PUSH2 0x41BF JUMP JUMPDEST SWAP1 POP PUSH2 0x1016 CALLER DUP8 PUSH2 0x3073 JUMP JUMPDEST PUSH2 0x101E PUSH2 0x31C1 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH2 0x1038 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 AND DUP4 PUSH2 0x2F5F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1044 DUP3 DUP7 PUSH2 0x42F7 JUMP JUMPDEST PUSH1 0x12 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP8 AND SUB PUSH2 0x10EE JUMPI PUSH1 0x12 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x2E1A7D4D SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10B7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD CALLER SWAP3 POP DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 POP DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x10E8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x1102 JUMP JUMPDEST PUSH2 0x1102 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND CALLER DUP4 PUSH2 0x2F5F JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x111C JUMPI PUSH2 0x111C PUSH2 0x31E9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP2 CALLER SWAP2 PUSH32 0xF341246ADAAC6F497BC2A656F546AB9E182111D630394F0C57C710A59A2CB567 SWAP2 ADD PUSH2 0xD62 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x116E SWAP1 PUSH2 0x4336 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x119A SWAP1 PUSH2 0x4336 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x11E7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x11BC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x11E7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x11CA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x13AD JUMPI PUSH1 0x0 PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1216 JUMPI PUSH2 0x1216 PUSH2 0x4370 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD PUSH4 0x35EA6A75 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE SWAP5 POP SWAP2 AND SWAP1 PUSH4 0x35EA6A75 SWAP1 PUSH1 0x24 ADD PUSH2 0x180 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x126F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1293 SWAP2 SWAP1 PUSH2 0x444E JUMP JUMPDEST PUSH1 0xE0 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12E1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1305 SWAP2 SWAP1 PUSH2 0x430A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3B4E06E6 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1338 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1354 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1378 SWAP2 SWAP1 PUSH2 0x453B JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x1387 DUP3 DUP10 PUSH2 0x4323 JUMP JUMPDEST SWAP8 POP PUSH2 0x1393 DUP2 DUP9 PUSH2 0x4323 JUMP JUMPDEST SWAP7 POP POP POP POP POP POP DUP1 DUP1 PUSH2 0x13A5 SWAP1 PUSH2 0x455F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x11F7 JUMP JUMPDEST POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13BF CALLER DUP5 DUP5 PUSH2 0x34B4 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x13F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AC SWAP1 PUSH2 0x4578 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x443EC74D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1432 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1456 SWAP2 SWAP1 PUSH2 0x45AD JUMP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5EE04D78 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1498 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14BC SWAP2 SWAP1 PUSH2 0x45AD JUMP JUMPDEST POP PUSH1 0xA SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0x14EA JUMPI POP PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ JUMPDEST PUSH2 0x1506 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AC SWAP1 PUSH2 0x45E2 JUMP JUMPDEST DUP4 PUSH1 0x8 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x151A JUMPI PUSH2 0x151A PUSH2 0x4370 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE SWAP2 DUP7 AND SWAP2 PUSH32 0xC702EC00C014203B7E89BAAC1D444204C2626E064AFC77BA77A612E15AB3BCE0 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x1600 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8AC JUMP JUMPDEST PUSH2 0x160D DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x34B4 JUMP JUMPDEST PUSH2 0x1618 DUP6 DUP6 DUP6 PUSH2 0x35D8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x164F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AC SWAP1 PUSH2 0x4578 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD DUP3 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xC95792A0E34C24EAC32C3D3AAD40FA02AC9EA2CB3A39B334F7B7F08579B5CD7D SWAP1 PUSH2 0x169C SWAP1 DUP4 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x13BF SWAP2 DUP6 SWAP1 PUSH2 0x16DE SWAP1 DUP7 SWAP1 PUSH2 0x4323 JUMP JUMPDEST PUSH2 0x34B4 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x170D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AC SWAP1 PUSH2 0x4578 JUMP JUMPDEST PUSH2 0x2710 DUP2 LT PUSH2 0x1756 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4745563A20496E76616C6964204261736520466565 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8AC JUMP JUMPDEST PUSH1 0xC DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH31 0x172DDFC5AE88D08B3DE01A5A187667C37A5A53989E8C175055CB6C993792A7 SWAP1 PUSH1 0x20 ADD PUSH2 0x169C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1796 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0x17A8 JUMPI PUSH1 0x0 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17B2 PUSH2 0x1D46 JUMP JUMPDEST SWAP1 POP DUP2 PUSH2 0x17C7 DUP3 PUSH8 0xDE0B6B3A7640000 PUSH2 0x4192 JUMP JUMPDEST PUSH2 0x17D1 SWAP2 SWAP1 PUSH2 0x41BF JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x8 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x17E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x182C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AC SWAP1 PUSH2 0x4578 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x443EC74D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1870 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1894 SWAP2 SWAP1 PUSH2 0x45AD JUMP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5EE04D78 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18D6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18FA SWAP2 SWAP1 PUSH2 0x45AD JUMP JUMPDEST POP PUSH1 0xA SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0x1928 JUMPI POP PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ JUMPDEST PUSH2 0x1944 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AC SWAP1 PUSH2 0x45E2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SUB PUSH2 0x199E JUMPI PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 SSTORE PUSH2 0x1C81 JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1AF5 JUMPI PUSH1 0x8 DUP1 SLOAD PUSH2 0x19C0 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x42F7 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x19D0 JUMPI PUSH2 0x19D0 PUSH2 0x4370 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xE4FBA45 PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 PUSH4 0x727DD228 SWAP3 PUSH1 0x4 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A1E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A42 SWAP2 SWAP1 PUSH2 0x461D JUMP JUMPDEST PUSH1 0x2 SIGNEXTEND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9B1344AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A83 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AA7 SWAP2 SWAP1 PUSH2 0x461D JUMP JUMPDEST PUSH1 0x2 SIGNEXTEND SGT PUSH2 0x1AF0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x4745563A2050757368205469636B204F7665726C617 PUSH1 0x54 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8AC JUMP JUMPDEST PUSH2 0x1C35 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH2 0x1B05 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x42F7 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1B15 JUMPI PUSH2 0x1B15 PUSH2 0x4370 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x26C4D12B PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 PUSH4 0x9B1344AC SWAP3 PUSH1 0x4 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B63 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B87 SWAP2 SWAP1 PUSH2 0x461D JUMP JUMPDEST PUSH1 0x2 SIGNEXTEND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x727DD228 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1BC8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1BEC SWAP2 SWAP1 PUSH2 0x461D JUMP JUMPDEST PUSH1 0x2 SIGNEXTEND SLT PUSH2 0x1C35 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x4745563A2050757368205469636B204F7665726C617 PUSH1 0x54 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8AC JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xF3FE65AEFC0C6A58D6E37D115ED356186C3088909BC0642D064DBB0D8F0361EE SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1CE5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AC SWAP1 PUSH2 0x4578 JUMP JUMPDEST PUSH2 0x1CEF PUSH1 0x0 PUSH2 0x37A6 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1CF9 PUSH2 0x2A44 JUMP JUMPDEST PUSH2 0x1D15 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AC SWAP1 PUSH2 0x4151 JUMP JUMPDEST PUSH2 0x1D1D PUSH2 0x31C1 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1CEF JUMPI PUSH2 0x1CEF PUSH2 0x31E9 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x116E SWAP1 PUSH2 0x4336 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x1E2A JUMPI PUSH1 0x0 PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1D69 JUMPI PUSH2 0x1D69 PUSH2 0x4370 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH2 0x1D88 DUP4 PUSH2 0x1E2E JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x50D25BCD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1DD1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DF5 SWAP2 SWAP1 PUSH2 0x430A JUMP JUMPDEST PUSH2 0x1DFF SWAP1 DUP4 PUSH2 0x4192 JUMP JUMPDEST PUSH2 0x1E09 SWAP2 SWAP1 PUSH2 0x41BF JUMP JUMPDEST PUSH2 0x1E13 SWAP1 DUP6 PUSH2 0x4323 JUMP JUMPDEST SWAP4 POP POP POP DUP1 DUP1 PUSH2 0x1E22 SWAP1 PUSH2 0x455F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1D4A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1E44 JUMPI PUSH2 0x1E44 PUSH2 0x4370 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD PUSH4 0x35EA6A75 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE SWAP5 POP SWAP2 AND SWAP1 PUSH4 0x35EA6A75 SWAP1 PUSH1 0x24 ADD PUSH2 0x180 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E9D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1EC1 SWAP2 SWAP1 PUSH2 0x444E JUMP JUMPDEST PUSH1 0xE0 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F0C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F30 SWAP2 SWAP1 PUSH2 0x430A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1F62 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AC SWAP1 PUSH2 0x4578 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x443EC74D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1FA6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FCA SWAP2 SWAP1 PUSH2 0x45AD JUMP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5EE04D78 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x200C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2030 SWAP2 SWAP1 PUSH2 0x45AD JUMP JUMPDEST POP PUSH1 0xA SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0x205E JUMPI POP PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ JUMPDEST PUSH2 0x207A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AC SWAP1 PUSH2 0x45E2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SUB PUSH2 0x20D4 JUMPI PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 SSTORE PUSH2 0x24C6 JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x221F JUMPI PUSH1 0x8 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x20F9 JUMPI PUSH2 0x20F9 PUSH2 0x4370 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xE4FBA45 PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 PUSH4 0x727DD228 SWAP3 PUSH1 0x4 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2147 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x216B SWAP2 SWAP1 PUSH2 0x461D JUMP JUMPDEST PUSH1 0x2 SIGNEXTEND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9B1344AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x21AC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x21D0 SWAP2 SWAP1 PUSH2 0x461D JUMP JUMPDEST PUSH1 0x2 SIGNEXTEND SGT PUSH2 0x221A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x4745563A205368696674205469636B204F7665726C617 PUSH1 0x4C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8AC JUMP JUMPDEST PUSH2 0x2354 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x2233 JUMPI PUSH2 0x2233 PUSH2 0x4370 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x26C4D12B PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 PUSH4 0x9B1344AC SWAP3 PUSH1 0x4 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2281 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x22A5 SWAP2 SWAP1 PUSH2 0x461D JUMP JUMPDEST PUSH1 0x2 SIGNEXTEND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x727DD228 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x22E6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x230A SWAP2 SWAP1 PUSH2 0x461D JUMP JUMPDEST PUSH1 0x2 SIGNEXTEND SLT PUSH2 0x2354 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x4745563A205368696674205469636B204F7665726C617 PUSH1 0x4C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8AC JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD DUP2 SWAP1 PUSH2 0x2366 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x42F7 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2376 JUMPI PUSH2 0x2376 PUSH2 0x4370 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP4 SLOAD PUSH1 0x1 DUP2 ADD DUP6 SSTORE SWAP4 DUP4 MSTORE SWAP2 KECCAK256 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x8 SLOAD PUSH1 0x2 LT ISZERO PUSH2 0x2482 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x23CE SWAP1 PUSH1 0x2 SWAP1 PUSH2 0x42F7 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x2480 JUMPI PUSH1 0x8 DUP1 SLOAD DUP3 SWAP1 PUSH2 0x23E7 SWAP1 PUSH1 0x3 SWAP1 PUSH2 0x42F7 JUMP JUMPDEST PUSH2 0x23F1 SWAP2 SWAP1 PUSH2 0x42F7 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2401 JUMPI PUSH2 0x2401 PUSH2 0x4370 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 PUSH2 0x242B SWAP1 PUSH1 0x2 SWAP1 PUSH2 0x42F7 JUMP JUMPDEST PUSH2 0x2435 SWAP2 SWAP1 PUSH2 0x42F7 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2445 JUMPI PUSH2 0x2445 PUSH2 0x4370 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0x2478 DUP2 PUSH2 0x455F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x23BF JUMP JUMPDEST POP JUMPDEST DUP3 PUSH1 0x8 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x2497 JUMPI PUSH2 0x2497 PUSH2 0x4370 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0x379724EB42B8009EB7CB6F3D25740CE23AF62531DBCAA953861505B29DC14816 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x2582 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8AC JUMP JUMPDEST PUSH2 0x258F CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x34B4 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x25A6 PUSH2 0x11F1 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x25FF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2623 SWAP2 SWAP1 PUSH2 0x41E9 JUMP JUMPDEST PUSH2 0x262E SWAP1 PUSH1 0xA PUSH2 0x42E8 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0xB3596F07 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND SWAP1 PUSH4 0xB3596F07 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x267A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x269E SWAP2 SWAP1 PUSH2 0x430A JUMP JUMPDEST PUSH2 0x26A8 SWAP1 DUP6 PUSH2 0x4192 JUMP JUMPDEST PUSH2 0x26B2 SWAP2 SWAP1 PUSH2 0x41BF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2709 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x272D SWAP2 SWAP1 PUSH2 0x41E9 JUMP JUMPDEST PUSH2 0x2738 SWAP1 PUSH1 0xA PUSH2 0x42E8 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0xB3596F07 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND SWAP1 PUSH4 0xB3596F07 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2784 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x27A8 SWAP2 SWAP1 PUSH2 0x430A JUMP JUMPDEST PUSH2 0x27B2 SWAP1 DUP6 PUSH2 0x4192 JUMP JUMPDEST PUSH2 0x27BC SWAP2 SWAP1 PUSH2 0x41BF JUMP JUMPDEST SWAP1 POP DUP6 ISZERO PUSH2 0x27EE JUMPI PUSH2 0x27CF DUP2 PUSH1 0x1 PUSH2 0x4323 JUMP JUMPDEST DUP3 PUSH1 0xC SLOAD PUSH2 0x27DD SWAP2 SWAP1 PUSH2 0x4192 JUMP JUMPDEST PUSH2 0x27E7 SWAP2 SWAP1 PUSH2 0x41BF JUMP JUMPDEST SWAP5 POP PUSH2 0x2814 JUMP JUMPDEST PUSH2 0x27F9 DUP3 PUSH1 0x1 PUSH2 0x4323 JUMP JUMPDEST DUP2 PUSH1 0xC SLOAD PUSH2 0x2807 SWAP2 SWAP1 PUSH2 0x4192 JUMP JUMPDEST PUSH2 0x2811 SWAP2 SWAP1 PUSH2 0x41BF JUMP JUMPDEST SWAP5 POP JUMPDEST PUSH1 0x2 PUSH1 0xC SLOAD PUSH2 0x2823 SWAP2 SWAP1 PUSH2 0x41BF JUMP JUMPDEST DUP6 LT ISZERO PUSH2 0x283C JUMPI PUSH1 0x2 PUSH1 0xC SLOAD PUSH2 0x2839 SWAP2 SWAP1 PUSH2 0x41BF JUMP JUMPDEST SWAP5 POP JUMPDEST PUSH1 0x2 PUSH1 0xC SLOAD PUSH1 0x3 PUSH2 0x284D SWAP2 SWAP1 PUSH2 0x4192 JUMP JUMPDEST PUSH2 0x2857 SWAP2 SWAP1 PUSH2 0x41BF JUMP JUMPDEST DUP6 GT ISZERO PUSH2 0x287C JUMPI PUSH1 0x2 PUSH1 0xC SLOAD PUSH1 0x3 PUSH2 0x286F SWAP2 SWAP1 PUSH2 0x4192 JUMP JUMPDEST PUSH2 0x2879 SWAP2 SWAP1 PUSH2 0x41BF JUMP JUMPDEST SWAP5 POP JUMPDEST POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13BF CALLER DUP5 DUP5 PUSH2 0x35D8 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x5 GT PUSH2 0x2A41 JUMPI POP PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x28B2 SWAP1 PUSH1 0x3 SWAP1 PUSH2 0x42F7 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x2A41 JUMPI PUSH1 0x0 DUP1 PUSH1 0x8 PUSH2 0x28C9 DUP5 PUSH1 0x1 PUSH2 0x4323 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x28D9 JUMPI PUSH2 0x28D9 PUSH2 0x4370 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0xD1F7E92B PUSH1 0xE0 SHL DUP2 MSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xD1F7E92B SWAP1 PUSH1 0x24 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2931 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2955 SWAP2 SWAP1 PUSH2 0x453B JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x8 PUSH2 0x296A DUP7 PUSH1 0x2 PUSH2 0x4323 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x297A JUMPI PUSH2 0x297A PUSH2 0x4370 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0xD1F7E92B PUSH1 0xE0 SHL DUP2 MSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xD1F7E92B SWAP1 PUSH1 0x24 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x29D2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x29F6 SWAP2 SWAP1 PUSH2 0x453B JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP4 PUSH1 0x0 EQ DUP1 ISZERO PUSH2 0x2A0A JUMPI POP PUSH1 0x0 DUP3 GT JUMPDEST DUP1 PUSH2 0x2A1E JUMPI POP DUP3 ISZERO DUP1 ISZERO PUSH2 0x2A1E JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x2A2A JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x2A39 SWAP1 PUSH2 0x455F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x28A3 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xF PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xE0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A9A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2ABE SWAP2 SWAP1 PUSH2 0x464A JUMP JUMPDEST POP POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2B1B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2B3F SWAP2 SWAP1 PUSH2 0x41E9 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH1 0x0 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2B99 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2BBD SWAP2 SWAP1 PUSH2 0x41E9 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH1 0x0 PUSH2 0x2BCF DUP4 PUSH1 0xA PUSH2 0x46D6 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0xA8 SHL PUSH1 0x2 PUSH2 0x2BE4 PUSH2 0x1000 DUP8 PUSH2 0x46E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2BF7 SWAP2 SWAP1 PUSH2 0x42E8 JUMP JUMPDEST PUSH2 0x2C01 SWAP1 DUP4 PUSH2 0x4192 JUMP JUMPDEST PUSH2 0x2C0F SWAP1 PUSH4 0x5F5E100 PUSH2 0x4192 JUMP JUMPDEST PUSH2 0x2C19 SWAP2 SWAP1 PUSH2 0x41BF JUMP JUMPDEST SWAP1 POP PUSH2 0x2C26 DUP3 PUSH1 0xA PUSH2 0x46D6 JUMP JUMPDEST PUSH2 0x2C30 SWAP1 DUP3 PUSH2 0x41BF JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0xB3596F07 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 SWAP2 AND SWAP1 PUSH4 0xB3596F07 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2C82 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2CA6 SWAP2 SWAP1 PUSH2 0x430A JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0xB3596F07 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND SWAP1 PUSH4 0xB3596F07 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2CF2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2D16 SWAP2 SWAP1 PUSH2 0x430A JUMP JUMPDEST PUSH2 0x2D24 SWAP1 PUSH4 0x5F5E100 PUSH2 0x4192 JUMP JUMPDEST PUSH2 0x2D2E SWAP2 SWAP1 PUSH2 0x41BF JUMP JUMPDEST SWAP1 POP PUSH1 0x64 PUSH2 0x2D3D DUP4 PUSH1 0x65 PUSH2 0x4192 JUMP JUMPDEST PUSH2 0x2D47 SWAP2 SWAP1 PUSH2 0x41BF JUMP JUMPDEST DUP2 LT DUP1 ISZERO PUSH2 0x2D6A JUMPI POP PUSH1 0x64 PUSH2 0x2D5D DUP4 PUSH1 0x63 PUSH2 0x4192 JUMP JUMPDEST PUSH2 0x2D67 SWAP2 SWAP1 PUSH2 0x41BF JUMP JUMPDEST DUP2 GT JUMPDEST ISZERO PUSH2 0x2D74 JUMPI PUSH1 0x1 SWAP6 POP JUMPDEST POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2DA6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AC SWAP1 PUSH2 0x4578 JUMP JUMPDEST PUSH1 0xD DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x9B83075767C93F683DC38F28B4E8FD725867522B5BBEAD77B8C397AB04FE21F1 SWAP1 PUSH1 0x20 ADD PUSH2 0x169C JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2E05 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AC SWAP1 PUSH2 0x4578 JUMP JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xCB7EF3E545F5CDB893F5C568BA710FE08F336375A2D9FD66E161033F8FC09EF3 SWAP1 PUSH1 0x20 ADD PUSH2 0x169C JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2E7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AC SWAP1 PUSH2 0x4578 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2EE2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8AC JUMP JUMPDEST PUSH2 0x2EEB DUP2 PUSH2 0x37A6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x2F59 SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x37F8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x2F8F SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD PUSH2 0x2F22 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2FEA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8AC JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2FFC SWAP2 SWAP1 PUSH2 0x4323 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x3029 SWAP1 DUP5 SWAP1 PUSH2 0x4323 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x30D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x3147 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x3176 SWAP1 DUP5 SWAP1 PUSH2 0x42F7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x2EEB JUMPI PUSH2 0x31D7 DUP2 PUSH2 0x38CA JUMP JUMPDEST DUP1 PUSH2 0x31E1 DUP2 PUSH2 0x455F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x31C4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31F3 PUSH2 0x2892 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3241 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3265 SWAP2 SWAP1 PUSH2 0x430A JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x32B3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x32D7 SWAP2 SWAP1 PUSH2 0x430A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x8 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x32EF JUMPI PUSH2 0x32EF PUSH2 0x4370 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0xD1F7E92B PUSH1 0xE0 SHL DUP2 MSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xD1F7E92B SWAP1 PUSH1 0x24 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3347 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x336B SWAP2 SWAP1 PUSH2 0x453B JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP5 PUSH1 0x0 PUSH2 0x337E DUP3 PUSH1 0x2 PUSH2 0x4323 JUMP JUMPDEST SWAP1 POP DUP3 ISZERO PUSH2 0x3397 JUMPI PUSH2 0x3391 DUP8 PUSH1 0x2 PUSH2 0x4323 JUMP JUMPDEST SWAP2 POP DUP7 SWAP1 POP JUMPDEST DUP6 ISZERO PUSH2 0x33FD JUMPI PUSH2 0x33DA PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x33B3 JUMPI PUSH2 0x33B3 PUSH2 0x4370 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x33D3 PUSH1 0x2 DUP10 PUSH2 0x41BF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B52 JUMP JUMPDEST POP PUSH2 0x33FB PUSH1 0x8 PUSH2 0x33EB DUP5 PUSH1 0x1 PUSH2 0x4323 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x33B3 JUMPI PUSH2 0x33B3 PUSH2 0x4370 JUMP JUMPDEST POP JUMPDEST DUP5 ISZERO PUSH2 0x3461 JUMPI PUSH2 0x343E PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3419 JUMPI PUSH2 0x3419 PUSH2 0x4370 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x3439 PUSH1 0x2 DUP10 PUSH2 0x41BF JUMP JUMPDEST PUSH2 0x3B52 JUMP JUMPDEST POP PUSH2 0x345F PUSH1 0x8 PUSH2 0x344F DUP4 PUSH1 0x1 PUSH2 0x4323 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x3419 JUMPI PUSH2 0x3419 PUSH2 0x4370 JUMP JUMPDEST POP JUMPDEST PUSH1 0x9 SLOAD DUP8 EQ PUSH2 0x3470 JUMPI PUSH1 0x9 DUP8 SWAP1 SSTORE JUMPDEST PUSH32 0x811D4760F1A92875EB76DBD3DC2359544B2F6A000BA5B78784C0B105B3469BD0 PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH2 0x34A3 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3516 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3577 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x363C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x369E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x3716 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x374D SWAP1 DUP5 SWAP1 PUSH2 0x4323 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x3799 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x2F59 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x384D DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3CFF SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x2F8F JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x386B SWAP2 SWAP1 PUSH2 0x4708 JUMP JUMPDEST PUSH2 0x2F8F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8AC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x38DF JUMPI PUSH2 0x38DF PUSH2 0x4370 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD PUSH4 0x35EA6A75 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE SWAP5 POP SWAP2 AND SWAP1 PUSH4 0x35EA6A75 SWAP1 PUSH1 0x24 ADD PUSH2 0x180 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3938 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x395C SWAP2 SWAP1 PUSH2 0x444E JUMP JUMPDEST PUSH1 0xE0 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x39AA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x39CE SWAP2 SWAP1 PUSH2 0x430A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 DUP6 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3A1A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3A3E SWAP2 SWAP1 PUSH2 0x430A JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3A4C JUMPI DUP1 SWAP2 POP JUMPDEST DUP2 ISZERO PUSH2 0x3B4B JUMPI PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1A4CA37B PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE ADDRESS PUSH1 0x44 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x69328DEC SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3AAB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3ACF SWAP2 SWAP1 PUSH2 0x430A JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0xA41FE49F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xA41FE49F SWAP1 PUSH1 0x64 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3B24 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3B48 SWAP2 SWAP1 PUSH2 0x453B JUMP JUMPDEST POP POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 PUSH2 0x3B6C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP6 PUSH2 0x3D0E JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x3B83 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP5 PUSH2 0x3D0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1C57762B PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xE2BBB158 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3BD1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3BF5 SWAP2 SWAP1 PUSH2 0x430A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3C3F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3C63 SWAP2 SWAP1 PUSH2 0x430A JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x3CF7 JUMPI PUSH1 0x10 SLOAD PUSH2 0x3C83 SWAP1 DUP7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0x3D0E JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD PUSH4 0xE8EDA9DF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE ADDRESS PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x0 PUSH1 0x64 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xE8EDA9DF SWAP1 PUSH1 0x84 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3CDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3CF2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1F30 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x3D9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP3 SWAP2 SWAP1 DUP6 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3D5D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3D81 SWAP2 SWAP1 PUSH2 0x430A JUMP JUMPDEST LT ISZERO PUSH2 0x2F8F JUMPI PUSH2 0x2F8F PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP4 PUSH1 0x0 NOT PUSH2 0x3ECE JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x3DFE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x3E55 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8AC JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x3E71 SWAP2 SWAP1 PUSH2 0x4725 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3EAE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3EB3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x3EC3 DUP3 DUP3 DUP7 PUSH2 0x3F80 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 DUP4 SWAP2 DUP7 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3F1F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3F43 SWAP2 SWAP1 PUSH2 0x430A JUMP JUMPDEST PUSH2 0x3F4D SWAP2 SWAP1 PUSH2 0x4323 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH2 0x2F59 SWAP1 DUP6 SWAP1 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD PUSH2 0x2F22 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x3F8F JUMPI POP DUP2 PUSH2 0x161E JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x3F9F JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AC SWAP2 SWAP1 PUSH2 0x4022 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2EEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3FE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x3FF3 DUP2 PUSH2 0x3FB9 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4019 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4001 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x4041 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x3FFE JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4068 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x4073 DUP2 PUSH2 0x3FB9 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4096 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x40A1 DUP2 PUSH2 0x3FB9 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x40B1 DUP2 PUSH2 0x3FB9 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2EEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x40E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x161E DUP2 PUSH2 0x40C2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x40FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4118 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x161E DUP2 PUSH2 0x3FB9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x4141 DUP2 PUSH2 0x3FB9 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x3FF3 DUP2 PUSH2 0x3FB9 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x23A2AB1D1027B930B1B6329022B93937B9 PUSH1 0x79 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x13C3 JUMPI PUSH2 0x13C3 PUSH2 0x417C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x41CE JUMPI PUSH2 0x41CE PUSH2 0x41A9 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x41E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x41FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x161E DUP3 PUSH2 0x41D3 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x423F JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x4225 JUMPI PUSH2 0x4225 PUSH2 0x417C JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x4232 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x4209 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x4256 JUMPI POP PUSH1 0x1 PUSH2 0x13C3 JUMP JUMPDEST DUP2 PUSH2 0x4263 JUMPI POP PUSH1 0x0 PUSH2 0x13C3 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x4279 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x4283 JUMPI PUSH2 0x429F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x13C3 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x4294 JUMPI PUSH2 0x4294 PUSH2 0x417C JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x13C3 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x42C2 JUMPI POP DUP2 DUP2 EXP PUSH2 0x13C3 JUMP JUMPDEST PUSH2 0x42CC DUP4 DUP4 PUSH2 0x4204 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x42E0 JUMPI PUSH2 0x42E0 PUSH2 0x417C JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x161E PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x4247 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x13C3 JUMPI PUSH2 0x13C3 PUSH2 0x417C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x431C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x13C3 JUMPI PUSH2 0x13C3 PUSH2 0x417C JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x434A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x436A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x180 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x43B8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x43D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x4401 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 MLOAD DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x41E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH5 0xFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x41E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x41E4 DUP2 PUSH2 0x3FB9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x180 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4461 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4469 PUSH2 0x4386 JUMP JUMPDEST PUSH2 0x4473 DUP5 DUP5 PUSH2 0x43BE JUMP JUMPDEST DUP2 MSTORE PUSH2 0x4481 PUSH1 0x20 DUP5 ADD PUSH2 0x440E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x4492 PUSH1 0x40 DUP5 ADD PUSH2 0x440E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x44A3 PUSH1 0x60 DUP5 ADD PUSH2 0x440E JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x44B4 PUSH1 0x80 DUP5 ADD PUSH2 0x440E JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x44C5 PUSH1 0xA0 DUP5 ADD PUSH2 0x440E JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x44D6 PUSH1 0xC0 DUP5 ADD PUSH2 0x442E JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x44E7 PUSH1 0xE0 DUP5 ADD PUSH2 0x4443 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 PUSH2 0x44FA DUP2 DUP6 ADD PUSH2 0x4443 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x120 PUSH2 0x450C DUP5 DUP3 ADD PUSH2 0x4443 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x140 PUSH2 0x451E DUP5 DUP3 ADD PUSH2 0x4443 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x160 PUSH2 0x4530 DUP5 DUP3 ADD PUSH2 0x41D3 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x454E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x4571 JUMPI PUSH2 0x4571 PUSH2 0x417C JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x45C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH2 0x45CB DUP2 PUSH2 0x3FB9 JUMP JUMPDEST SWAP2 POP PUSH2 0x45D9 PUSH1 0x20 DUP5 ADD PUSH2 0x41D3 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x23A2AB1D1024B73B30B634B2102A29 PUSH1 0x89 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x2 DUP2 SWAP1 SIGNEXTEND DUP2 EQ PUSH2 0x41E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x462F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x161E DUP3 PUSH2 0x460B JUMP JUMPDEST DUP1 MLOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x41E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x4665 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 MLOAD PUSH2 0x4670 DUP2 PUSH2 0x3FB9 JUMP JUMPDEST SWAP7 POP PUSH2 0x467E PUSH1 0x20 DUP10 ADD PUSH2 0x460B JUMP JUMPDEST SWAP6 POP PUSH2 0x468C PUSH1 0x40 DUP10 ADD PUSH2 0x4638 JUMP JUMPDEST SWAP5 POP PUSH2 0x469A PUSH1 0x60 DUP10 ADD PUSH2 0x4638 JUMP JUMPDEST SWAP4 POP PUSH2 0x46A8 PUSH1 0x80 DUP10 ADD PUSH2 0x4638 JUMP JUMPDEST SWAP3 POP PUSH2 0x46B6 PUSH1 0xA0 DUP10 ADD PUSH2 0x41D3 JUMP JUMPDEST SWAP2 POP PUSH1 0xC0 DUP9 ADD MLOAD PUSH2 0x46C6 DUP2 PUSH2 0x40C2 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x161E DUP4 DUP4 PUSH2 0x4247 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND DUP1 PUSH2 0x46FC JUMPI PUSH2 0x46FC PUSH2 0x41A9 JUMP JUMPDEST SWAP3 AND SWAP2 SWAP1 SWAP2 DIV SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x471A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x161E DUP2 PUSH2 0x40C2 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x4737 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x3FFE JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SDIV PUSH24 0x710005D36E082FB4019C694B9B92100A993C03FBCB81DCD8 0xC2 SWAP12 0xBC 0x4D PUSH12 0x6364736F6C63430008130033 ",
  "pcMap": {
    "0": {
      "offset": [
        974,
        16519
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "LT",
      "path": "0"
    },
    "9": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x280"
    },
    "12": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "SHR",
      "path": "0"
    },
    "19": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "20": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x7DC0D1D0"
    },
    "25": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "GT",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14F"
    },
    "29": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "30": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "31": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "36": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "GT",
      "path": "0"
    },
    "37": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC1"
    },
    "40": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "41": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "42": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xD5EDB9D6"
    },
    "47": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "GT",
      "path": "0"
    },
    "48": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7A"
    },
    "51": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "52": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "53": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xD5EDB9D6"
    },
    "58": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "EQ",
      "path": "0"
    },
    "59": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x780"
    },
    "62": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "63": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "64": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDD0290E2"
    },
    "69": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "EQ",
      "path": "0"
    },
    "70": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x795"
    },
    "73": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "74": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "75": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDD62ED3E"
    },
    "80": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "EQ",
      "path": "0"
    },
    "81": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7B5"
    },
    "84": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "85": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "86": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF0F44260"
    },
    "91": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "EQ",
      "path": "0"
    },
    "92": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7FB"
    },
    "95": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "96": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "97": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF2FDE38B"
    },
    "102": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "EQ",
      "path": "0"
    },
    "103": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x81B"
    },
    "106": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "107": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "108": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFF71F0DF"
    },
    "113": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "EQ",
      "path": "0"
    },
    "114": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x83B"
    },
    "117": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "118": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "120": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "121": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "REVERT",
      "path": "0"
    },
    "122": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "123": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "124": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "129": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "EQ",
      "path": "0"
    },
    "130": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6D5"
    },
    "133": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "134": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "135": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xAD5C4648"
    },
    "140": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "EQ",
      "path": "0"
    },
    "141": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6F5"
    },
    "144": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "145": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "146": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xBDD3D825"
    },
    "151": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "EQ",
      "path": "0"
    },
    "152": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x715"
    },
    "155": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "156": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "157": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xCF94B206"
    },
    "162": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "EQ",
      "path": "0"
    },
    "163": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x735"
    },
    "166": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "167": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "168": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xD09A323C"
    },
    "173": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "EQ",
      "path": "0"
    },
    "174": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x74B"
    },
    "177": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "178": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "179": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xD21220A7"
    },
    "184": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "EQ",
      "path": "0"
    },
    "185": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x760"
    },
    "188": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "189": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "191": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "192": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "REVERT",
      "path": "0"
    },
    "193": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "194": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "195": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA003908C"
    },
    "200": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "GT",
      "path": "0"
    },
    "201": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x113"
    },
    "204": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "205": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "206": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA003908C"
    },
    "211": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "EQ",
      "path": "0"
    },
    "212": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x620"
    },
    "215": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "216": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "217": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA2260DD6"
    },
    "222": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "EQ",
      "path": "0"
    },
    "223": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x640"
    },
    "226": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "227": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "228": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA2716E5E"
    },
    "233": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "EQ",
      "path": "0"
    },
    "234": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x655"
    },
    "237": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "238": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "239": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA457C2D7"
    },
    "244": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "EQ",
      "path": "0"
    },
    "245": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x675"
    },
    "248": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "249": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "250": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA59A9973"
    },
    "255": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "EQ",
      "path": "0"
    },
    "256": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x695"
    },
    "259": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "260": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "261": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA8D2E314"
    },
    "266": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "EQ",
      "path": "0"
    },
    "267": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6B5"
    },
    "270": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "271": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "273": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "274": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "REVERT",
      "path": "0"
    },
    "275": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "276": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "277": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x7DC0D1D0"
    },
    "282": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "EQ",
      "path": "0"
    },
    "283": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5A3"
    },
    "286": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "287": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "288": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8DA5CB5B"
    },
    "293": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "EQ",
      "path": "0"
    },
    "294": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5C3"
    },
    "297": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "298": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "299": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8FCCD12E"
    },
    "304": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "EQ",
      "path": "0"
    },
    "305": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5E1"
    },
    "308": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "309": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "310": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95D89B41"
    },
    "315": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "EQ",
      "path": "0"
    },
    "316": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5F6"
    },
    "319": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "320": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "321": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x97B3FCAA"
    },
    "326": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "EQ",
      "path": "0"
    },
    "327": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x60B"
    },
    "330": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "331": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "333": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "334": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "REVERT",
      "path": "0"
    },
    "335": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "336": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "337": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x39509351"
    },
    "342": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "GT",
      "path": "0"
    },
    "343": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F3"
    },
    "346": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "347": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "348": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6193AAEB"
    },
    "353": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "GT",
      "path": "0"
    },
    "354": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AC"
    },
    "357": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "358": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "359": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6193AAEB"
    },
    "364": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "EQ",
      "path": "0"
    },
    "365": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4E2"
    },
    "368": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "369": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "370": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x61D027B3"
    },
    "375": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "EQ",
      "path": "0"
    },
    "376": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x502"
    },
    "379": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "380": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "381": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6AA633B6"
    },
    "386": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "EQ",
      "path": "0"
    },
    "387": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x522"
    },
    "390": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "391": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "392": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "397": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "EQ",
      "path": "0"
    },
    "398": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x543"
    },
    "401": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "402": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "403": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x715018A6"
    },
    "408": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "EQ",
      "path": "0"
    },
    "409": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x579"
    },
    "412": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "413": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "414": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x7D7C2A1C"
    },
    "419": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "EQ",
      "path": "0"
    },
    "420": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x58E"
    },
    "423": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "424": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "426": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "427": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "REVERT",
      "path": "0"
    },
    "428": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "429": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "430": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x39509351"
    },
    "435": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "EQ",
      "path": "0"
    },
    "436": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x444"
    },
    "439": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "440": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "441": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x3F23FA1A"
    },
    "446": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "EQ",
      "path": "0"
    },
    "447": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x464"
    },
    "450": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "451": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "452": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x46860698"
    },
    "457": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "EQ",
      "path": "0"
    },
    "458": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x47A"
    },
    "461": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "462": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "463": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x47E7EF24"
    },
    "468": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "EQ",
      "path": "0"
    },
    "469": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x49A"
    },
    "472": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "473": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "474": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x50D25BCD"
    },
    "479": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "EQ",
      "path": "0"
    },
    "480": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4AD"
    },
    "483": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "484": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "485": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x534CB30D"
    },
    "490": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "EQ",
      "path": "0"
    },
    "491": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4C2"
    },
    "494": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "495": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "497": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "498": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "REVERT",
      "path": "0"
    },
    "499": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "500": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "501": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x18160DDD"
    },
    "506": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "GT",
      "path": "0"
    },
    "507": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x245"
    },
    "510": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "511": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "512": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x18160DDD"
    },
    "517": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "EQ",
      "path": "0"
    },
    "518": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x39D"
    },
    "521": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "522": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "523": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x18FC392B"
    },
    "528": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "EQ",
      "path": "0"
    },
    "529": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B2"
    },
    "532": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "533": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "534": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1E5D5C07"
    },
    "539": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "EQ",
      "path": "0"
    },
    "540": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C8"
    },
    "543": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "544": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "545": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x23B872DD"
    },
    "550": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "EQ",
      "path": "0"
    },
    "551": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E8"
    },
    "554": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "555": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "556": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x313CE567"
    },
    "561": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "EQ",
      "path": "0"
    },
    "562": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x408"
    },
    "565": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "566": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "567": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x328D8F72"
    },
    "572": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "EQ",
      "path": "0"
    },
    "573": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x424"
    },
    "576": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "577": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "579": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "580": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "REVERT",
      "path": "0"
    },
    "581": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "582": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "583": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xF714CE"
    },
    "587": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "EQ",
      "path": "0"
    },
    "588": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B6"
    },
    "591": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "592": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "593": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6FDDE03"
    },
    "598": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "EQ",
      "path": "0"
    },
    "599": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E9"
    },
    "602": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "603": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "604": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x902F1AC"
    },
    "609": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "EQ",
      "path": "0"
    },
    "610": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x30B"
    },
    "613": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "614": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "615": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95EA7B3"
    },
    "620": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "EQ",
      "path": "0"
    },
    "621": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x335"
    },
    "624": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "625": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "626": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDFE1681"
    },
    "631": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "EQ",
      "path": "0"
    },
    "632": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x365"
    },
    "635": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "636": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "638": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "639": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "REVERT",
      "path": "0"
    },
    "640": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "641": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "642": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B1"
    },
    "645": {
      "fn": null,
      "offset": [
        974,
        16519
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "646": {
      "fn": "GeVault.<receive>",
      "offset": [
        16469,
        16473
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x12"
    },
    "648": {
      "fn": "GeVault.<receive>",
      "offset": [
        16469,
        16473
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "649": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "651": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "653": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "655": {
      "op": "SHL"
    },
    "656": {
      "op": "SUB"
    },
    "657": {
      "fn": "GeVault.<receive>",
      "offset": [
        16469,
        16473
      ],
      "op": "AND",
      "path": "0"
    },
    "658": {
      "fn": "GeVault.<receive>",
      "offset": [
        16447,
        16457
      ],
      "op": "CALLER",
      "path": "0"
    },
    "659": {
      "branch": 153,
      "fn": "GeVault.<receive>",
      "offset": [
        16447,
        16474
      ],
      "op": "EQ",
      "path": "0"
    },
    "660": {
      "fn": "GeVault.<receive>",
      "offset": [
        16444,
        16509
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AF"
    },
    "663": {
      "branch": 153,
      "fn": "GeVault.<receive>",
      "offset": [
        16444,
        16509
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "664": {
      "fn": "GeVault.<receive>",
      "offset": [
        16492,
        16496
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x12"
    },
    "666": {
      "fn": "GeVault.<receive>",
      "offset": [
        16492,
        16496
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "667": {
      "fn": "GeVault.<receive>",
      "offset": [
        16476,
        16509
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AD"
    },
    "670": {
      "fn": "GeVault.<receive>",
      "offset": [
        16476,
        16509
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "671": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "673": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "675": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "677": {
      "op": "SHL"
    },
    "678": {
      "op": "SUB"
    },
    "679": {
      "fn": "GeVault.<receive>",
      "offset": [
        16492,
        16496
      ],
      "op": "AND",
      "path": "0"
    },
    "680": {
      "fn": "GeVault.<receive>",
      "offset": [
        16499,
        16508
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "681": {
      "fn": "GeVault.<receive>",
      "offset": [
        16476,
        16483
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x85C"
    },
    "684": {
      "fn": "GeVault.<receive>",
      "jump": "i",
      "offset": [
        16476,
        16509
      ],
      "op": "JUMP",
      "path": "0"
    },
    "685": {
      "fn": "GeVault.<receive>",
      "offset": [
        16476,
        16509
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "686": {
      "fn": "GeVault.<receive>",
      "offset": [
        16476,
        16509
      ],
      "op": "POP",
      "path": "0"
    },
    "687": {
      "fn": "GeVault.<receive>",
      "offset": [
        16444,
        16509
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "688": {
      "offset": [
        974,
        16519
      ],
      "op": "STOP",
      "path": "0"
    },
    "689": {
      "fn": "GeVault.<receive>",
      "offset": [
        974,
        16519
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "690": {
      "fn": "GeVault.<receive>",
      "offset": [
        974,
        16519
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "692": {
      "fn": "GeVault.<receive>",
      "offset": [
        974,
        16519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "693": {
      "first_revert": true,
      "fn": "GeVault.<receive>",
      "offset": [
        974,
        16519
      ],
      "op": "REVERT",
      "path": "0"
    },
    "694": {
      "fn": "GeVault.withdraw",
      "offset": [
        6983,
        8097
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "695": {
      "fn": "GeVault.withdraw",
      "offset": [
        6983,
        8097
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "696": {
      "fn": "GeVault.withdraw",
      "offset": [
        6983,
        8097
      ],
      "op": "DUP1",
      "path": "0"
    },
    "697": {
      "fn": "GeVault.withdraw",
      "offset": [
        6983,
        8097
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "698": {
      "fn": "GeVault.withdraw",
      "offset": [
        6983,
        8097
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C2"
    },
    "701": {
      "fn": "GeVault.withdraw",
      "offset": [
        6983,
        8097
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "702": {
      "fn": "GeVault.withdraw",
      "offset": [
        6983,
        8097
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "704": {
      "fn": "GeVault.withdraw",
      "offset": [
        6983,
        8097
      ],
      "op": "DUP1",
      "path": "0"
    },
    "705": {
      "fn": "GeVault.withdraw",
      "offset": [
        6983,
        8097
      ],
      "op": "REVERT",
      "path": "0"
    },
    "706": {
      "fn": "GeVault.withdraw",
      "offset": [
        6983,
        8097
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "707": {
      "op": "POP"
    },
    "708": {
      "fn": "GeVault.withdraw",
      "offset": [
        6983,
        8097
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D6"
    },
    "711": {
      "fn": "GeVault.withdraw",
      "offset": [
        6983,
        8097
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D1"
    },
    "714": {
      "fn": "GeVault.withdraw",
      "offset": [
        6983,
        8097
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "715": {
      "fn": "GeVault.withdraw",
      "offset": [
        6983,
        8097
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "717": {
      "fn": "GeVault.withdraw",
      "offset": [
        6983,
        8097
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FCE"
    },
    "720": {
      "fn": "GeVault.withdraw",
      "jump": "i",
      "offset": [
        6983,
        8097
      ],
      "op": "JUMP",
      "path": "0"
    },
    "721": {
      "fn": "GeVault.withdraw",
      "offset": [
        6983,
        8097
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "722": {
      "fn": "GeVault.withdraw",
      "offset": [
        6983,
        8097
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD7A"
    },
    "725": {
      "fn": "GeVault.withdraw",
      "jump": "i",
      "offset": [
        6983,
        8097
      ],
      "op": "JUMP",
      "path": "0"
    },
    "726": {
      "fn": "GeVault.withdraw",
      "offset": [
        6983,
        8097
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "727": {
      "fn": "GeVault.withdraw",
      "offset": [
        6983,
        8097
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "729": {
      "fn": "GeVault.withdraw",
      "offset": [
        6983,
        8097
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "730": {
      "op": "SWAP1"
    },
    "731": {
      "op": "DUP2"
    },
    "732": {
      "op": "MSTORE"
    },
    "733": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "735": {
      "op": "ADD"
    },
    "736": {
      "fn": "GeVault.withdraw",
      "offset": [
        6983,
        8097
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "737": {
      "fn": "GeVault.withdraw",
      "offset": [
        6983,
        8097
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "739": {
      "fn": "GeVault.withdraw",
      "offset": [
        6983,
        8097
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "740": {
      "fn": "GeVault.withdraw",
      "offset": [
        6983,
        8097
      ],
      "op": "DUP1",
      "path": "0"
    },
    "741": {
      "fn": "GeVault.withdraw",
      "offset": [
        6983,
        8097
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "742": {
      "fn": "GeVault.withdraw",
      "offset": [
        6983,
        8097
      ],
      "op": "SUB",
      "path": "0"
    },
    "743": {
      "fn": "GeVault.withdraw",
      "offset": [
        6983,
        8097
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "744": {
      "fn": "GeVault.withdraw",
      "offset": [
        6983,
        8097
      ],
      "op": "RETURN",
      "path": "0"
    },
    "745": {
      "fn": "ERC20.name",
      "offset": [
        2141,
        2239
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "746": {
      "fn": "ERC20.name",
      "offset": [
        2141,
        2239
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "747": {
      "fn": "ERC20.name",
      "offset": [
        2141,
        2239
      ],
      "op": "DUP1",
      "path": "20"
    },
    "748": {
      "fn": "ERC20.name",
      "offset": [
        2141,
        2239
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "749": {
      "fn": "ERC20.name",
      "offset": [
        2141,
        2239
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2F5"
    },
    "752": {
      "fn": "ERC20.name",
      "offset": [
        2141,
        2239
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "753": {
      "fn": "ERC20.name",
      "offset": [
        2141,
        2239
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "755": {
      "fn": "ERC20.name",
      "offset": [
        2141,
        2239
      ],
      "op": "DUP1",
      "path": "20"
    },
    "756": {
      "fn": "ERC20.name",
      "offset": [
        2141,
        2239
      ],
      "op": "REVERT",
      "path": "20"
    },
    "757": {
      "fn": "ERC20.name",
      "offset": [
        2141,
        2239
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "758": {
      "fn": "ERC20.name",
      "offset": [
        2141,
        2239
      ],
      "op": "POP",
      "path": "20"
    },
    "759": {
      "fn": "ERC20.name",
      "offset": [
        2141,
        2239
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2FE"
    },
    "762": {
      "fn": "ERC20.name",
      "offset": [
        2141,
        2239
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x115F"
    },
    "765": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2141,
        2239
      ],
      "op": "JUMP",
      "path": "20"
    },
    "766": {
      "fn": "ERC20.name",
      "offset": [
        2141,
        2239
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "767": {
      "fn": "ERC20.name",
      "offset": [
        2141,
        2239
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "769": {
      "fn": "ERC20.name",
      "offset": [
        2141,
        2239
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "770": {
      "fn": "ERC20.name",
      "offset": [
        2141,
        2239
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2E0"
    },
    "773": {
      "fn": "ERC20.name",
      "offset": [
        2141,
        2239
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "774": {
      "fn": "ERC20.name",
      "offset": [
        2141,
        2239
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "775": {
      "fn": "ERC20.name",
      "offset": [
        2141,
        2239
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4022"
    },
    "778": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2141,
        2239
      ],
      "op": "JUMP",
      "path": "20"
    },
    "779": {
      "fn": "GeVault.getReserves",
      "offset": [
        10093,
        10490
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "780": {
      "fn": "GeVault.getReserves",
      "offset": [
        10093,
        10490
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "781": {
      "fn": "GeVault.getReserves",
      "offset": [
        10093,
        10490
      ],
      "op": "DUP1",
      "path": "0"
    },
    "782": {
      "fn": "GeVault.getReserves",
      "offset": [
        10093,
        10490
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "783": {
      "fn": "GeVault.getReserves",
      "offset": [
        10093,
        10490
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x317"
    },
    "786": {
      "fn": "GeVault.getReserves",
      "offset": [
        10093,
        10490
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "787": {
      "fn": "GeVault.getReserves",
      "offset": [
        10093,
        10490
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "789": {
      "fn": "GeVault.getReserves",
      "offset": [
        10093,
        10490
      ],
      "op": "DUP1",
      "path": "0"
    },
    "790": {
      "fn": "GeVault.getReserves",
      "offset": [
        10093,
        10490
      ],
      "op": "REVERT",
      "path": "0"
    },
    "791": {
      "fn": "GeVault.getReserves",
      "offset": [
        10093,
        10490
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "792": {
      "fn": "GeVault.getReserves",
      "offset": [
        10093,
        10490
      ],
      "op": "POP",
      "path": "0"
    },
    "793": {
      "fn": "GeVault.getReserves",
      "offset": [
        10093,
        10490
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x320"
    },
    "796": {
      "fn": "GeVault.getReserves",
      "offset": [
        10093,
        10490
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11F1"
    },
    "799": {
      "fn": "GeVault.getReserves",
      "jump": "i",
      "offset": [
        10093,
        10490
      ],
      "op": "JUMP",
      "path": "0"
    },
    "800": {
      "fn": "GeVault.getReserves",
      "offset": [
        10093,
        10490
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "801": {
      "fn": "GeVault.getReserves",
      "offset": [
        10093,
        10490
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "803": {
      "fn": "GeVault.getReserves",
      "offset": [
        10093,
        10490
      ],
      "op": "DUP1",
      "path": "0"
    },
    "804": {
      "fn": "GeVault.getReserves",
      "offset": [
        10093,
        10490
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "805": {
      "op": "SWAP3"
    },
    "806": {
      "op": "DUP4"
    },
    "807": {
      "op": "MSTORE"
    },
    "808": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "810": {
      "op": "DUP4"
    },
    "811": {
      "op": "ADD"
    },
    "812": {
      "op": "SWAP2"
    },
    "813": {
      "op": "SWAP1"
    },
    "814": {
      "op": "SWAP2"
    },
    "815": {
      "op": "MSTORE"
    },
    "816": {
      "op": "ADD"
    },
    "817": {
      "fn": "GeVault.getReserves",
      "offset": [
        10093,
        10490
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E0"
    },
    "820": {
      "op": "JUMP"
    },
    "821": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "822": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "823": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "DUP1",
      "path": "20"
    },
    "824": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "825": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x341"
    },
    "828": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "829": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "831": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "DUP1",
      "path": "20"
    },
    "832": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "REVERT",
      "path": "20"
    },
    "833": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "834": {
      "op": "POP"
    },
    "835": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x355"
    },
    "838": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x350"
    },
    "841": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "842": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "844": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4055"
    },
    "847": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4238,
        4404
      ],
      "op": "JUMP",
      "path": "20"
    },
    "848": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "849": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x13B2"
    },
    "852": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4238,
        4404
      ],
      "op": "JUMP",
      "path": "20"
    },
    "853": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "854": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "856": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "857": {
      "op": "SWAP1"
    },
    "858": {
      "op": "ISZERO"
    },
    "859": {
      "op": "ISZERO"
    },
    "860": {
      "op": "DUP2"
    },
    "861": {
      "op": "MSTORE"
    },
    "862": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "864": {
      "op": "ADD"
    },
    "865": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2E0"
    },
    "868": {
      "op": "JUMP"
    },
    "869": {
      "offset": [
        1831,
        1850
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "870": {
      "fn": "ERC20.approve",
      "offset": [
        1831,
        1850
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "871": {
      "fn": "ERC20.approve",
      "offset": [
        1831,
        1850
      ],
      "op": "DUP1",
      "path": "0"
    },
    "872": {
      "fn": "ERC20.approve",
      "offset": [
        1831,
        1850
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "873": {
      "fn": "ERC20.approve",
      "offset": [
        1831,
        1850
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x371"
    },
    "876": {
      "fn": "ERC20.approve",
      "offset": [
        1831,
        1850
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "877": {
      "fn": "ERC20.approve",
      "offset": [
        1831,
        1850
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "879": {
      "fn": "ERC20.approve",
      "offset": [
        1831,
        1850
      ],
      "op": "DUP1",
      "path": "0"
    },
    "880": {
      "fn": "ERC20.approve",
      "offset": [
        1831,
        1850
      ],
      "op": "REVERT",
      "path": "0"
    },
    "881": {
      "fn": "ERC20.approve",
      "offset": [
        1831,
        1850
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "882": {
      "op": "POP"
    },
    "883": {
      "offset": [
        1831,
        1850
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "885": {
      "fn": "ERC20.approve",
      "offset": [
        1831,
        1850
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "886": {
      "fn": "ERC20.approve",
      "offset": [
        1831,
        1850
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x385"
    },
    "889": {
      "fn": "ERC20.approve",
      "offset": [
        1831,
        1850
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "890": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "894": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "896": {
      "op": "SHL"
    },
    "897": {
      "op": "SUB"
    },
    "898": {
      "offset": [
        1831,
        1850
      ],
      "op": "AND",
      "path": "0"
    },
    "899": {
      "fn": "ERC20.approve",
      "offset": [
        1831,
        1850
      ],
      "op": "DUP2",
      "path": "0"
    },
    "900": {
      "fn": "ERC20.approve",
      "offset": [
        1831,
        1850
      ],
      "op": "JUMP",
      "path": "0"
    },
    "901": {
      "fn": "ERC20.approve",
      "offset": [
        1831,
        1850
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "902": {
      "fn": "ERC20.approve",
      "offset": [
        1831,
        1850
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "904": {
      "fn": "ERC20.approve",
      "offset": [
        1831,
        1850
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "905": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "907": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "909": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "911": {
      "op": "SHL"
    },
    "912": {
      "op": "SUB"
    },
    "913": {
      "op": "SWAP1"
    },
    "914": {
      "op": "SWAP2"
    },
    "915": {
      "op": "AND"
    },
    "916": {
      "op": "DUP2"
    },
    "917": {
      "op": "MSTORE"
    },
    "918": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "920": {
      "op": "ADD"
    },
    "921": {
      "offset": [
        1831,
        1850
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E0"
    },
    "924": {
      "op": "JUMP"
    },
    "925": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3229,
        3335
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "926": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3229,
        3335
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "927": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3229,
        3335
      ],
      "op": "DUP1",
      "path": "20"
    },
    "928": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3229,
        3335
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "929": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3229,
        3335
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3A9"
    },
    "932": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3229,
        3335
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "933": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3229,
        3335
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "935": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3229,
        3335
      ],
      "op": "DUP1",
      "path": "20"
    },
    "936": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3229,
        3335
      ],
      "op": "REVERT",
      "path": "20"
    },
    "937": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3229,
        3335
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "938": {
      "op": "POP"
    },
    "939": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3316,
        3328
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 1,
      "value": "0x2"
    },
    "941": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3316,
        3328
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "942": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3229,
        3335
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2D6"
    },
    "945": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3229,
        3335
      ],
      "op": "JUMP",
      "path": "20"
    },
    "946": {
      "offset": [
        1938,
        1964
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "947": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1938,
        1964
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "948": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1938,
        1964
      ],
      "op": "DUP1",
      "path": "0"
    },
    "949": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1938,
        1964
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "950": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1938,
        1964
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3BE"
    },
    "953": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1938,
        1964
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "954": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1938,
        1964
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "956": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1938,
        1964
      ],
      "op": "DUP1",
      "path": "0"
    },
    "957": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1938,
        1964
      ],
      "op": "REVERT",
      "path": "0"
    },
    "958": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1938,
        1964
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "959": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1938,
        1964
      ],
      "op": "POP",
      "path": "0"
    },
    "960": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1938,
        1964
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D6"
    },
    "963": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1938,
        1964
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "965": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1938,
        1964
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "966": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1938,
        1964
      ],
      "op": "DUP2",
      "path": "0"
    },
    "967": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1938,
        1964
      ],
      "op": "JUMP",
      "path": "0"
    },
    "968": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5453,
        5752
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "969": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5453,
        5752
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "970": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5453,
        5752
      ],
      "op": "DUP1",
      "path": "0"
    },
    "971": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5453,
        5752
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "972": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5453,
        5752
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3D4"
    },
    "975": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5453,
        5752
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "976": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5453,
        5752
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "978": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5453,
        5752
      ],
      "op": "DUP1",
      "path": "0"
    },
    "979": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5453,
        5752
      ],
      "op": "REVERT",
      "path": "0"
    },
    "980": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5453,
        5752
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "981": {
      "op": "POP"
    },
    "982": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5453,
        5752
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AF"
    },
    "985": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5453,
        5752
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E3"
    },
    "988": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5453,
        5752
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "989": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5453,
        5752
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "991": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5453,
        5752
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4055"
    },
    "994": {
      "fn": "GeVault.modifyTick",
      "jump": "i",
      "offset": [
        5453,
        5752
      ],
      "op": "JUMP",
      "path": "0"
    },
    "995": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5453,
        5752
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "996": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5453,
        5752
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13C9"
    },
    "999": {
      "fn": "GeVault.modifyTick",
      "jump": "i",
      "offset": [
        5453,
        5752
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1000": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4871,
        5349
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1001": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4871,
        5349
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1002": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4871,
        5349
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1003": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4871,
        5349
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1004": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4871,
        5349
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3F4"
    },
    "1007": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4871,
        5349
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1008": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4871,
        5349
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1010": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4871,
        5349
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1011": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4871,
        5349
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1012": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4871,
        5349
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1013": {
      "op": "POP"
    },
    "1014": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4871,
        5349
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x355"
    },
    "1017": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4871,
        5349
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x403"
    },
    "1020": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4871,
        5349
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1021": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4871,
        5349
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1023": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4871,
        5349
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4081"
    },
    "1026": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4871,
        5349
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1027": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4871,
        5349
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1028": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4871,
        5349
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x157B"
    },
    "1031": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4871,
        5349
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1032": {
      "fn": "ERC20.decimals",
      "offset": [
        3078,
        3169
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1033": {
      "fn": "ERC20.decimals",
      "offset": [
        3078,
        3169
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1034": {
      "fn": "ERC20.decimals",
      "offset": [
        3078,
        3169
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1035": {
      "fn": "ERC20.decimals",
      "offset": [
        3078,
        3169
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1036": {
      "fn": "ERC20.decimals",
      "offset": [
        3078,
        3169
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x414"
    },
    "1039": {
      "fn": "ERC20.decimals",
      "offset": [
        3078,
        3169
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1040": {
      "fn": "ERC20.decimals",
      "offset": [
        3078,
        3169
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1042": {
      "fn": "ERC20.decimals",
      "offset": [
        3078,
        3169
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1043": {
      "fn": "ERC20.decimals",
      "offset": [
        3078,
        3169
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1044": {
      "fn": "ERC20.decimals",
      "offset": [
        3078,
        3169
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1045": {
      "op": "POP"
    },
    "1046": {
      "fn": "ERC20.decimals",
      "offset": [
        3078,
        3169
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1048": {
      "fn": "ERC20.decimals",
      "offset": [
        3078,
        3169
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1049": {
      "fn": "ERC20.decimals",
      "offset": [
        3160,
        3162
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 2,
      "value": "0x12"
    },
    "1051": {
      "op": "DUP2"
    },
    "1052": {
      "op": "MSTORE"
    },
    "1053": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1055": {
      "op": "ADD"
    },
    "1056": {
      "fn": "ERC20.decimals",
      "offset": [
        3078,
        3169
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2E0"
    },
    "1059": {
      "op": "JUMP"
    },
    "1060": {
      "fn": "GeVault.setEnabled",
      "offset": [
        3346,
        3468
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1061": {
      "fn": "GeVault.setEnabled",
      "offset": [
        3346,
        3468
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1062": {
      "fn": "GeVault.setEnabled",
      "offset": [
        3346,
        3468
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1063": {
      "fn": "GeVault.setEnabled",
      "offset": [
        3346,
        3468
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1064": {
      "fn": "GeVault.setEnabled",
      "offset": [
        3346,
        3468
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x430"
    },
    "1067": {
      "fn": "GeVault.setEnabled",
      "offset": [
        3346,
        3468
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1068": {
      "fn": "GeVault.setEnabled",
      "offset": [
        3346,
        3468
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1070": {
      "fn": "GeVault.setEnabled",
      "offset": [
        3346,
        3468
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1071": {
      "fn": "GeVault.setEnabled",
      "offset": [
        3346,
        3468
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1072": {
      "fn": "GeVault.setEnabled",
      "offset": [
        3346,
        3468
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1073": {
      "op": "POP"
    },
    "1074": {
      "fn": "GeVault.setEnabled",
      "offset": [
        3346,
        3468
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AF"
    },
    "1077": {
      "fn": "GeVault.setEnabled",
      "offset": [
        3346,
        3468
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x43F"
    },
    "1080": {
      "fn": "GeVault.setEnabled",
      "offset": [
        3346,
        3468
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1081": {
      "fn": "GeVault.setEnabled",
      "offset": [
        3346,
        3468
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1083": {
      "fn": "GeVault.setEnabled",
      "offset": [
        3346,
        3468
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x40D0"
    },
    "1086": {
      "fn": "GeVault.setEnabled",
      "jump": "i",
      "offset": [
        3346,
        3468
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1087": {
      "fn": "GeVault.setEnabled",
      "offset": [
        3346,
        3468
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1088": {
      "fn": "GeVault.setEnabled",
      "offset": [
        3346,
        3468
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1625"
    },
    "1091": {
      "fn": "GeVault.setEnabled",
      "jump": "i",
      "offset": [
        3346,
        3468
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1092": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5744,
        5956
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1093": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5744,
        5956
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1094": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5744,
        5956
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1095": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5744,
        5956
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1096": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5744,
        5956
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x450"
    },
    "1099": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5744,
        5956
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1100": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5744,
        5956
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1102": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5744,
        5956
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1103": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5744,
        5956
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1104": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5744,
        5956
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1105": {
      "op": "POP"
    },
    "1106": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5744,
        5956
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x355"
    },
    "1109": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5744,
        5956
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x45F"
    },
    "1112": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5744,
        5956
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1113": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5744,
        5956
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1115": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5744,
        5956
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4055"
    },
    "1118": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5744,
        5956
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1119": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5744,
        5956
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1120": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5744,
        5956
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x16A7"
    },
    "1123": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5744,
        5956
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1124": {
      "offset": [
        2012,
        2037
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1125": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        2012,
        2037
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1126": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        2012,
        2037
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1127": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        2012,
        2037
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1128": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        2012,
        2037
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x470"
    },
    "1131": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        2012,
        2037
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1132": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        2012,
        2037
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1134": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        2012,
        2037
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1135": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        2012,
        2037
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1136": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        2012,
        2037
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1137": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        2012,
        2037
      ],
      "op": "POP",
      "path": "0"
    },
    "1138": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        2012,
        2037
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D6"
    },
    "1141": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        2012,
        2037
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xD"
    },
    "1143": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        2012,
        2037
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1144": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        2012,
        2037
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1145": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        2012,
        2037
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1146": {
      "fn": "GeVault.setBaseFee",
      "offset": [
        5988,
        6166
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1147": {
      "fn": "GeVault.setBaseFee",
      "offset": [
        5988,
        6166
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1148": {
      "fn": "GeVault.setBaseFee",
      "offset": [
        5988,
        6166
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1149": {
      "fn": "GeVault.setBaseFee",
      "offset": [
        5988,
        6166
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1150": {
      "fn": "GeVault.setBaseFee",
      "offset": [
        5988,
        6166
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x486"
    },
    "1153": {
      "fn": "GeVault.setBaseFee",
      "offset": [
        5988,
        6166
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1154": {
      "fn": "GeVault.setBaseFee",
      "offset": [
        5988,
        6166
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1156": {
      "fn": "GeVault.setBaseFee",
      "offset": [
        5988,
        6166
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1157": {
      "fn": "GeVault.setBaseFee",
      "offset": [
        5988,
        6166
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1158": {
      "fn": "GeVault.setBaseFee",
      "offset": [
        5988,
        6166
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1159": {
      "op": "POP"
    },
    "1160": {
      "fn": "GeVault.setBaseFee",
      "offset": [
        5988,
        6166
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AF"
    },
    "1163": {
      "fn": "GeVault.setBaseFee",
      "offset": [
        5988,
        6166
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x495"
    },
    "1166": {
      "fn": "GeVault.setBaseFee",
      "offset": [
        5988,
        6166
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1167": {
      "fn": "GeVault.setBaseFee",
      "offset": [
        5988,
        6166
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1169": {
      "fn": "GeVault.setBaseFee",
      "offset": [
        5988,
        6166
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x40ED"
    },
    "1172": {
      "fn": "GeVault.setBaseFee",
      "jump": "i",
      "offset": [
        5988,
        6166
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1173": {
      "fn": "GeVault.setBaseFee",
      "offset": [
        5988,
        6166
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1174": {
      "fn": "GeVault.setBaseFee",
      "offset": [
        5988,
        6166
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16E3"
    },
    "1177": {
      "fn": "GeVault.setBaseFee",
      "jump": "i",
      "offset": [
        5988,
        6166
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1178": {
      "fn": "GeVault.deposit",
      "offset": [
        8252,
        9724
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1179": {
      "fn": "GeVault.deposit",
      "offset": [
        8252,
        9724
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D6"
    },
    "1182": {
      "fn": "GeVault.deposit",
      "offset": [
        8252,
        9724
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4A8"
    },
    "1185": {
      "fn": "GeVault.deposit",
      "offset": [
        8252,
        9724
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1186": {
      "fn": "GeVault.deposit",
      "offset": [
        8252,
        9724
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1188": {
      "fn": "GeVault.deposit",
      "offset": [
        8252,
        9724
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4055"
    },
    "1191": {
      "fn": "GeVault.deposit",
      "jump": "i",
      "offset": [
        8252,
        9724
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1192": {
      "fn": "GeVault.deposit",
      "offset": [
        8252,
        9724
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1193": {
      "fn": "GeVault.deposit",
      "offset": [
        8252,
        9724
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x85C"
    },
    "1196": {
      "fn": "GeVault.deposit",
      "jump": "i",
      "offset": [
        8252,
        9724
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1197": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        9835,
        10042
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1198": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        9835,
        10042
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1199": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        9835,
        10042
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1200": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        9835,
        10042
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1201": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        9835,
        10042
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4B9"
    },
    "1204": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        9835,
        10042
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1205": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        9835,
        10042
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1207": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        9835,
        10042
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1208": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        9835,
        10042
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1209": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        9835,
        10042
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1210": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        9835,
        10042
      ],
      "op": "POP",
      "path": "0"
    },
    "1211": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        9835,
        10042
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D6"
    },
    "1214": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        9835,
        10042
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x178A"
    },
    "1217": {
      "fn": "GeVault.latestAnswer",
      "jump": "i",
      "offset": [
        9835,
        10042
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1218": {
      "offset": [
        1657,
        1688
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1219": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        1657,
        1688
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1220": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        1657,
        1688
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1221": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        1657,
        1688
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1222": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        1657,
        1688
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4CE"
    },
    "1225": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        1657,
        1688
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1226": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        1657,
        1688
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1228": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        1657,
        1688
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1229": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        1657,
        1688
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1230": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        1657,
        1688
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1231": {
      "op": "POP"
    },
    "1232": {
      "offset": [
        1657,
        1688
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x385"
    },
    "1235": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        1657,
        1688
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4DD"
    },
    "1238": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        1657,
        1688
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1239": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        1657,
        1688
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1241": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        1657,
        1688
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x40ED"
    },
    "1244": {
      "fn": "GeVault.latestAnswer",
      "jump": "i",
      "offset": [
        1657,
        1688
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1245": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        1657,
        1688
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1246": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        1657,
        1688
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17D8"
    },
    "1249": {
      "fn": "GeVault.latestAnswer",
      "jump": "i",
      "offset": [
        1657,
        1688
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1250": {
      "fn": "GeVault.pushTick",
      "offset": [
        3752,
        4379
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1251": {
      "fn": "GeVault.pushTick",
      "offset": [
        3752,
        4379
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1252": {
      "fn": "GeVault.pushTick",
      "offset": [
        3752,
        4379
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1253": {
      "fn": "GeVault.pushTick",
      "offset": [
        3752,
        4379
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1254": {
      "fn": "GeVault.pushTick",
      "offset": [
        3752,
        4379
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4EE"
    },
    "1257": {
      "fn": "GeVault.pushTick",
      "offset": [
        3752,
        4379
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1258": {
      "fn": "GeVault.pushTick",
      "offset": [
        3752,
        4379
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1260": {
      "fn": "GeVault.pushTick",
      "offset": [
        3752,
        4379
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1261": {
      "fn": "GeVault.pushTick",
      "offset": [
        3752,
        4379
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1262": {
      "fn": "GeVault.pushTick",
      "offset": [
        3752,
        4379
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1263": {
      "op": "POP"
    },
    "1264": {
      "fn": "GeVault.pushTick",
      "offset": [
        3752,
        4379
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AF"
    },
    "1267": {
      "fn": "GeVault.pushTick",
      "offset": [
        3752,
        4379
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4FD"
    },
    "1270": {
      "fn": "GeVault.pushTick",
      "offset": [
        3752,
        4379
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1271": {
      "fn": "GeVault.pushTick",
      "offset": [
        3752,
        4379
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1273": {
      "fn": "GeVault.pushTick",
      "offset": [
        3752,
        4379
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4106"
    },
    "1276": {
      "fn": "GeVault.pushTick",
      "jump": "i",
      "offset": [
        3752,
        4379
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1277": {
      "fn": "GeVault.pushTick",
      "offset": [
        3752,
        4379
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1278": {
      "fn": "GeVault.pushTick",
      "offset": [
        3752,
        4379
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1802"
    },
    "1281": {
      "fn": "GeVault.pushTick",
      "jump": "i",
      "offset": [
        3752,
        4379
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1282": {
      "offset": [
        2129,
        2152
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1283": {
      "fn": "GeVault.pushTick",
      "offset": [
        2129,
        2152
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1284": {
      "fn": "GeVault.pushTick",
      "offset": [
        2129,
        2152
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1285": {
      "fn": "GeVault.pushTick",
      "offset": [
        2129,
        2152
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1286": {
      "fn": "GeVault.pushTick",
      "offset": [
        2129,
        2152
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x50E"
    },
    "1289": {
      "fn": "GeVault.pushTick",
      "offset": [
        2129,
        2152
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1290": {
      "fn": "GeVault.pushTick",
      "offset": [
        2129,
        2152
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1292": {
      "fn": "GeVault.pushTick",
      "offset": [
        2129,
        2152
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1293": {
      "fn": "GeVault.pushTick",
      "offset": [
        2129,
        2152
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1294": {
      "fn": "GeVault.pushTick",
      "offset": [
        2129,
        2152
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1295": {
      "op": "POP"
    },
    "1296": {
      "offset": [
        2129,
        2152
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE"
    },
    "1298": {
      "fn": "GeVault.pushTick",
      "offset": [
        2129,
        2152
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1299": {
      "fn": "GeVault.pushTick",
      "offset": [
        2129,
        2152
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x385"
    },
    "1302": {
      "fn": "GeVault.pushTick",
      "offset": [
        2129,
        2152
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1307": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1309": {
      "op": "SHL"
    },
    "1310": {
      "op": "SUB"
    },
    "1311": {
      "offset": [
        2129,
        2152
      ],
      "op": "AND",
      "path": "0"
    },
    "1312": {
      "fn": "GeVault.pushTick",
      "offset": [
        2129,
        2152
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1313": {
      "fn": "GeVault.pushTick",
      "offset": [
        2129,
        2152
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1314": {
      "offset": [
        1877,
        1905
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1315": {
      "fn": "GeVault.pushTick",
      "offset": [
        1877,
        1905
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1316": {
      "fn": "GeVault.pushTick",
      "offset": [
        1877,
        1905
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1317": {
      "fn": "GeVault.pushTick",
      "offset": [
        1877,
        1905
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1318": {
      "fn": "GeVault.pushTick",
      "offset": [
        1877,
        1905
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x52E"
    },
    "1321": {
      "fn": "GeVault.pushTick",
      "offset": [
        1877,
        1905
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1322": {
      "fn": "GeVault.pushTick",
      "offset": [
        1877,
        1905
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1324": {
      "fn": "GeVault.pushTick",
      "offset": [
        1877,
        1905
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1325": {
      "fn": "GeVault.pushTick",
      "offset": [
        1877,
        1905
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1326": {
      "fn": "GeVault.pushTick",
      "offset": [
        1877,
        1905
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1327": {
      "op": "POP"
    },
    "1328": {
      "offset": [
        1877,
        1905
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "1330": {
      "fn": "GeVault.pushTick",
      "offset": [
        1877,
        1905
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1331": {
      "fn": "GeVault.pushTick",
      "offset": [
        1877,
        1905
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x355"
    },
    "1334": {
      "fn": "GeVault.pushTick",
      "offset": [
        1877,
        1905
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1337": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1339": {
      "op": "SHL"
    },
    "1340": {
      "offset": [
        1877,
        1905
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1341": {
      "fn": "GeVault.pushTick",
      "offset": [
        1877,
        1905
      ],
      "op": "DIV",
      "path": "0"
    },
    "1342": {
      "fn": "GeVault.pushTick",
      "offset": [
        1877,
        1905
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1344": {
      "fn": "GeVault.pushTick",
      "offset": [
        1877,
        1905
      ],
      "op": "AND",
      "path": "0"
    },
    "1345": {
      "fn": "GeVault.pushTick",
      "offset": [
        1877,
        1905
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1346": {
      "fn": "GeVault.pushTick",
      "offset": [
        1877,
        1905
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1347": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3393,
        3518
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1348": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3393,
        3518
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1349": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3393,
        3518
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1350": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3393,
        3518
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1351": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3393,
        3518
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x54F"
    },
    "1354": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3393,
        3518
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1355": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3393,
        3518
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1357": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3393,
        3518
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1358": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3393,
        3518
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1359": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3393,
        3518
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1360": {
      "op": "POP"
    },
    "1361": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3393,
        3518
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2D6"
    },
    "1364": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3393,
        3518
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x55E"
    },
    "1367": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3393,
        3518
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1368": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3393,
        3518
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1370": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3393,
        3518
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4106"
    },
    "1373": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3393,
        3518
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1374": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3393,
        3518
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1379": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1381": {
      "op": "SHL"
    },
    "1382": {
      "op": "SUB"
    },
    "1383": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "AND",
      "path": "20",
      "statement": 3
    },
    "1384": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3467,
        3474
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1386": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1387": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1388": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1389": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1391": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1392": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1393": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1394": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1396": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1397": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "1398": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1399": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1400": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3393,
        3518
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1401": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1402": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1403": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1404": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1405": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x585"
    },
    "1408": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1409": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1411": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1412": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1413": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1414": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "POP",
      "path": "12"
    },
    "1415": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2AF"
    },
    "1418": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1CBB"
    },
    "1421": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1422": {
      "fn": "GeVault.rebalance",
      "offset": [
        6471,
        6620
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1423": {
      "fn": "GeVault.rebalance",
      "offset": [
        6471,
        6620
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1424": {
      "fn": "GeVault.rebalance",
      "offset": [
        6471,
        6620
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1425": {
      "fn": "GeVault.rebalance",
      "offset": [
        6471,
        6620
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1426": {
      "fn": "GeVault.rebalance",
      "offset": [
        6471,
        6620
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x59A"
    },
    "1429": {
      "fn": "GeVault.rebalance",
      "offset": [
        6471,
        6620
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1430": {
      "fn": "GeVault.rebalance",
      "offset": [
        6471,
        6620
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1432": {
      "fn": "GeVault.rebalance",
      "offset": [
        6471,
        6620
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1433": {
      "fn": "GeVault.rebalance",
      "offset": [
        6471,
        6620
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1434": {
      "fn": "GeVault.rebalance",
      "offset": [
        6471,
        6620
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1435": {
      "fn": "GeVault.rebalance",
      "offset": [
        6471,
        6620
      ],
      "op": "POP",
      "path": "0"
    },
    "1436": {
      "fn": "GeVault.rebalance",
      "offset": [
        6471,
        6620
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AF"
    },
    "1439": {
      "fn": "GeVault.rebalance",
      "offset": [
        6471,
        6620
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CF1"
    },
    "1442": {
      "fn": "GeVault.rebalance",
      "jump": "i",
      "offset": [
        6471,
        6620
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1443": {
      "offset": [
        2228,
        2254
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1444": {
      "fn": "GeVault.rebalance",
      "offset": [
        2228,
        2254
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1445": {
      "fn": "GeVault.rebalance",
      "offset": [
        2228,
        2254
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1446": {
      "fn": "GeVault.rebalance",
      "offset": [
        2228,
        2254
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1447": {
      "fn": "GeVault.rebalance",
      "offset": [
        2228,
        2254
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5AF"
    },
    "1450": {
      "fn": "GeVault.rebalance",
      "offset": [
        2228,
        2254
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1451": {
      "fn": "GeVault.rebalance",
      "offset": [
        2228,
        2254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1453": {
      "fn": "GeVault.rebalance",
      "offset": [
        2228,
        2254
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1454": {
      "fn": "GeVault.rebalance",
      "offset": [
        2228,
        2254
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1455": {
      "fn": "GeVault.rebalance",
      "offset": [
        2228,
        2254
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1456": {
      "op": "POP"
    },
    "1457": {
      "offset": [
        2228,
        2254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x11"
    },
    "1459": {
      "fn": "GeVault.rebalance",
      "offset": [
        2228,
        2254
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1460": {
      "fn": "GeVault.rebalance",
      "offset": [
        2228,
        2254
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x385"
    },
    "1463": {
      "fn": "GeVault.rebalance",
      "offset": [
        2228,
        2254
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1468": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1470": {
      "op": "SHL"
    },
    "1471": {
      "op": "SUB"
    },
    "1472": {
      "offset": [
        2228,
        2254
      ],
      "op": "AND",
      "path": "0"
    },
    "1473": {
      "fn": "GeVault.rebalance",
      "offset": [
        2228,
        2254
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1474": {
      "fn": "GeVault.rebalance",
      "offset": [
        2228,
        2254
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1475": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1476": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1477": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1478": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1479": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x5CF"
    },
    "1482": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1483": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1485": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1486": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1487": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1488": {
      "op": "POP"
    },
    "1489": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 4,
      "value": "0x5"
    },
    "1491": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1492": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1496": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1498": {
      "op": "SHL"
    },
    "1499": {
      "op": "SUB"
    },
    "1500": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "12"
    },
    "1501": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x385"
    },
    "1504": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1505": {
      "offset": [
        2258,
        2295
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1506": {
      "fn": "Ownable.owner",
      "offset": [
        2258,
        2295
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1507": {
      "fn": "Ownable.owner",
      "offset": [
        2258,
        2295
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1508": {
      "fn": "Ownable.owner",
      "offset": [
        2258,
        2295
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1509": {
      "fn": "Ownable.owner",
      "offset": [
        2258,
        2295
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5ED"
    },
    "1512": {
      "fn": "Ownable.owner",
      "offset": [
        2258,
        2295
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1513": {
      "fn": "Ownable.owner",
      "offset": [
        2258,
        2295
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1515": {
      "fn": "Ownable.owner",
      "offset": [
        2258,
        2295
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1516": {
      "fn": "Ownable.owner",
      "offset": [
        2258,
        2295
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1517": {
      "fn": "Ownable.owner",
      "offset": [
        2258,
        2295
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1518": {
      "fn": "Ownable.owner",
      "offset": [
        2258,
        2295
      ],
      "op": "POP",
      "path": "0"
    },
    "1519": {
      "fn": "Ownable.owner",
      "offset": [
        2258,
        2295
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D6"
    },
    "1522": {
      "offset": [
        2294,
        2295
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1524": {
      "offset": [
        2258,
        2295
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1525": {
      "fn": "Ownable.owner",
      "offset": [
        2258,
        2295
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1526": {
      "fn": "ERC20.symbol",
      "offset": [
        2352,
        2454
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1527": {
      "fn": "ERC20.symbol",
      "offset": [
        2352,
        2454
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1528": {
      "fn": "ERC20.symbol",
      "offset": [
        2352,
        2454
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1529": {
      "fn": "ERC20.symbol",
      "offset": [
        2352,
        2454
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1530": {
      "fn": "ERC20.symbol",
      "offset": [
        2352,
        2454
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x602"
    },
    "1533": {
      "fn": "ERC20.symbol",
      "offset": [
        2352,
        2454
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1534": {
      "fn": "ERC20.symbol",
      "offset": [
        2352,
        2454
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1536": {
      "fn": "ERC20.symbol",
      "offset": [
        2352,
        2454
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1537": {
      "fn": "ERC20.symbol",
      "offset": [
        2352,
        2454
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1538": {
      "fn": "ERC20.symbol",
      "offset": [
        2352,
        2454
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1539": {
      "fn": "ERC20.symbol",
      "offset": [
        2352,
        2454
      ],
      "op": "POP",
      "path": "20"
    },
    "1540": {
      "fn": "ERC20.symbol",
      "offset": [
        2352,
        2454
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2FE"
    },
    "1543": {
      "fn": "ERC20.symbol",
      "offset": [
        2352,
        2454
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1D37"
    },
    "1546": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2352,
        2454
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1547": {
      "fn": "GeVault.getTVL",
      "offset": [
        13547,
        13771
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1548": {
      "fn": "GeVault.getTVL",
      "offset": [
        13547,
        13771
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1549": {
      "fn": "GeVault.getTVL",
      "offset": [
        13547,
        13771
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1550": {
      "fn": "GeVault.getTVL",
      "offset": [
        13547,
        13771
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1551": {
      "fn": "GeVault.getTVL",
      "offset": [
        13547,
        13771
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x617"
    },
    "1554": {
      "fn": "GeVault.getTVL",
      "offset": [
        13547,
        13771
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1555": {
      "fn": "GeVault.getTVL",
      "offset": [
        13547,
        13771
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1557": {
      "fn": "GeVault.getTVL",
      "offset": [
        13547,
        13771
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1558": {
      "fn": "GeVault.getTVL",
      "offset": [
        13547,
        13771
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1559": {
      "fn": "GeVault.getTVL",
      "offset": [
        13547,
        13771
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1560": {
      "fn": "GeVault.getTVL",
      "offset": [
        13547,
        13771
      ],
      "op": "POP",
      "path": "0"
    },
    "1561": {
      "fn": "GeVault.getTVL",
      "offset": [
        13547,
        13771
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D6"
    },
    "1564": {
      "fn": "GeVault.getTVL",
      "offset": [
        13547,
        13771
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D46"
    },
    "1567": {
      "fn": "GeVault.getTVL",
      "jump": "i",
      "offset": [
        13547,
        13771
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1568": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14541,
        14803
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1569": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14541,
        14803
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1570": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14541,
        14803
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1571": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14541,
        14803
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1572": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14541,
        14803
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x62C"
    },
    "1575": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14541,
        14803
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1576": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14541,
        14803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1578": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14541,
        14803
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1579": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14541,
        14803
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1580": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14541,
        14803
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1581": {
      "op": "POP"
    },
    "1582": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14541,
        14803
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D6"
    },
    "1585": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14541,
        14803
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x63B"
    },
    "1588": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14541,
        14803
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1589": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14541,
        14803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1591": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14541,
        14803
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x40ED"
    },
    "1594": {
      "fn": "GeVault.getTickBalance",
      "jump": "i",
      "offset": [
        14541,
        14803
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1595": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14541,
        14803
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1596": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14541,
        14803
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E2E"
    },
    "1599": {
      "fn": "GeVault.getTickBalance",
      "jump": "i",
      "offset": [
        14541,
        14803
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1600": {
      "fn": "GeVault.getTickLength",
      "offset": [
        5823,
        5906
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1601": {
      "fn": "GeVault.getTickLength",
      "offset": [
        5823,
        5906
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1602": {
      "fn": "GeVault.getTickLength",
      "offset": [
        5823,
        5906
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1603": {
      "fn": "GeVault.getTickLength",
      "offset": [
        5823,
        5906
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1604": {
      "fn": "GeVault.getTickLength",
      "offset": [
        5823,
        5906
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x64C"
    },
    "1607": {
      "fn": "GeVault.getTickLength",
      "offset": [
        5823,
        5906
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1608": {
      "fn": "GeVault.getTickLength",
      "offset": [
        5823,
        5906
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1610": {
      "fn": "GeVault.getTickLength",
      "offset": [
        5823,
        5906
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1611": {
      "fn": "GeVault.getTickLength",
      "offset": [
        5823,
        5906
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1612": {
      "fn": "GeVault.getTickLength",
      "offset": [
        5823,
        5906
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1613": {
      "op": "POP"
    },
    "1614": {
      "fn": "GeVault.getTickLength",
      "offset": [
        5889,
        5894
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 5,
      "value": "0x8"
    },
    "1616": {
      "fn": "GeVault.getTickLength",
      "offset": [
        5889,
        5901
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1617": {
      "fn": "GeVault.getTickLength",
      "offset": [
        5823,
        5906
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D6"
    },
    "1620": {
      "fn": "GeVault.getTickLength",
      "offset": [
        5823,
        5906
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1621": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4458,
        5353
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1622": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4458,
        5353
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1623": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4458,
        5353
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1624": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4458,
        5353
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1625": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4458,
        5353
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x661"
    },
    "1628": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4458,
        5353
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1629": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4458,
        5353
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1631": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4458,
        5353
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1632": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4458,
        5353
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1633": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4458,
        5353
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1634": {
      "op": "POP"
    },
    "1635": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4458,
        5353
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AF"
    },
    "1638": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4458,
        5353
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x670"
    },
    "1641": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4458,
        5353
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1642": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4458,
        5353
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1644": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4458,
        5353
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4106"
    },
    "1647": {
      "fn": "GeVault.shiftTick",
      "jump": "i",
      "offset": [
        4458,
        5353
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1648": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4458,
        5353
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1649": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4458,
        5353
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F38"
    },
    "1652": {
      "fn": "GeVault.shiftTick",
      "jump": "i",
      "offset": [
        4458,
        5353
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1653": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6443,
        6848
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1654": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6443,
        6848
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1655": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6443,
        6848
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1656": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6443,
        6848
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1657": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6443,
        6848
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x681"
    },
    "1660": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6443,
        6848
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1661": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6443,
        6848
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1663": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6443,
        6848
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1664": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6443,
        6848
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1665": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6443,
        6848
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1666": {
      "op": "POP"
    },
    "1667": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6443,
        6848
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x355"
    },
    "1670": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6443,
        6848
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x690"
    },
    "1673": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6443,
        6848
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1674": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6443,
        6848
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1676": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6443,
        6848
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4055"
    },
    "1679": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6443,
        6848
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1680": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6443,
        6848
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1681": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6443,
        6848
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2500"
    },
    "1684": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6443,
        6848
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1685": {
      "offset": [
        2193,
        2224
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1686": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        2193,
        2224
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1687": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        2193,
        2224
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1688": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        2193,
        2224
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1689": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        2193,
        2224
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6A1"
    },
    "1692": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        2193,
        2224
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1693": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        2193,
        2224
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1695": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        2193,
        2224
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1696": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        2193,
        2224
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1697": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        2193,
        2224
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1698": {
      "op": "POP"
    },
    "1699": {
      "offset": [
        2193,
        2224
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x10"
    },
    "1701": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        2193,
        2224
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1702": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        2193,
        2224
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x385"
    },
    "1705": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        2193,
        2224
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1710": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1712": {
      "op": "SHL"
    },
    "1713": {
      "op": "SUB"
    },
    "1714": {
      "offset": [
        2193,
        2224
      ],
      "op": "AND",
      "path": "0"
    },
    "1715": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        2193,
        2224
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1716": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        2193,
        2224
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1717": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15669,
        16341
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1718": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15669,
        16341
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1719": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15669,
        16341
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1720": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15669,
        16341
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1721": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15669,
        16341
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6C1"
    },
    "1724": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15669,
        16341
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1725": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15669,
        16341
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1727": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15669,
        16341
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1728": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15669,
        16341
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1729": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15669,
        16341
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1730": {
      "op": "POP"
    },
    "1731": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15669,
        16341
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D6"
    },
    "1734": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15669,
        16341
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6D0"
    },
    "1737": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15669,
        16341
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1738": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15669,
        16341
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1740": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15669,
        16341
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x40D0"
    },
    "1743": {
      "fn": "GeVault.getAdjustedBaseFee",
      "jump": "i",
      "offset": [
        15669,
        16341
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1744": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15669,
        16341
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1745": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15669,
        16341
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2599"
    },
    "1748": {
      "fn": "GeVault.getAdjustedBaseFee",
      "jump": "i",
      "offset": [
        15669,
        16341
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1749": {
      "fn": "ERC20.transfer",
      "offset": [
        3721,
        3893
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1750": {
      "fn": "ERC20.transfer",
      "offset": [
        3721,
        3893
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1751": {
      "fn": "ERC20.transfer",
      "offset": [
        3721,
        3893
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1752": {
      "fn": "ERC20.transfer",
      "offset": [
        3721,
        3893
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1753": {
      "fn": "ERC20.transfer",
      "offset": [
        3721,
        3893
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x6E1"
    },
    "1756": {
      "fn": "ERC20.transfer",
      "offset": [
        3721,
        3893
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1757": {
      "fn": "ERC20.transfer",
      "offset": [
        3721,
        3893
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1759": {
      "fn": "ERC20.transfer",
      "offset": [
        3721,
        3893
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1760": {
      "fn": "ERC20.transfer",
      "offset": [
        3721,
        3893
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1761": {
      "fn": "ERC20.transfer",
      "offset": [
        3721,
        3893
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1762": {
      "op": "POP"
    },
    "1763": {
      "fn": "ERC20.transfer",
      "offset": [
        3721,
        3893
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x355"
    },
    "1766": {
      "fn": "ERC20.transfer",
      "offset": [
        3721,
        3893
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x6F0"
    },
    "1769": {
      "fn": "ERC20.transfer",
      "offset": [
        3721,
        3893
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1770": {
      "fn": "ERC20.transfer",
      "offset": [
        3721,
        3893
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1772": {
      "fn": "ERC20.transfer",
      "offset": [
        3721,
        3893
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4055"
    },
    "1775": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3721,
        3893
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1776": {
      "fn": "ERC20.transfer",
      "offset": [
        3721,
        3893
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1777": {
      "fn": "ERC20.transfer",
      "offset": [
        3721,
        3893
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2885"
    },
    "1780": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3721,
        3893
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1781": {
      "offset": [
        2299,
        2316
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1782": {
      "fn": "ERC20.transfer",
      "offset": [
        2299,
        2316
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1783": {
      "fn": "ERC20.transfer",
      "offset": [
        2299,
        2316
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1784": {
      "fn": "ERC20.transfer",
      "offset": [
        2299,
        2316
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1785": {
      "fn": "ERC20.transfer",
      "offset": [
        2299,
        2316
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x701"
    },
    "1788": {
      "fn": "ERC20.transfer",
      "offset": [
        2299,
        2316
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1789": {
      "fn": "ERC20.transfer",
      "offset": [
        2299,
        2316
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1791": {
      "fn": "ERC20.transfer",
      "offset": [
        2299,
        2316
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1792": {
      "fn": "ERC20.transfer",
      "offset": [
        2299,
        2316
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1793": {
      "fn": "ERC20.transfer",
      "offset": [
        2299,
        2316
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1794": {
      "op": "POP"
    },
    "1795": {
      "offset": [
        2299,
        2316
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x12"
    },
    "1797": {
      "fn": "ERC20.transfer",
      "offset": [
        2299,
        2316
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1798": {
      "fn": "ERC20.transfer",
      "offset": [
        2299,
        2316
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x385"
    },
    "1801": {
      "fn": "ERC20.transfer",
      "offset": [
        2299,
        2316
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1806": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1808": {
      "op": "SHL"
    },
    "1809": {
      "op": "SUB"
    },
    "1810": {
      "offset": [
        2299,
        2316
      ],
      "op": "AND",
      "path": "0"
    },
    "1811": {
      "fn": "ERC20.transfer",
      "offset": [
        2299,
        2316
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1812": {
      "fn": "ERC20.transfer",
      "offset": [
        2299,
        2316
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1813": {
      "offset": [
        2156,
        2189
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1814": {
      "fn": "ERC20.transfer",
      "offset": [
        2156,
        2189
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1815": {
      "fn": "ERC20.transfer",
      "offset": [
        2156,
        2189
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1816": {
      "fn": "ERC20.transfer",
      "offset": [
        2156,
        2189
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1817": {
      "fn": "ERC20.transfer",
      "offset": [
        2156,
        2189
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x721"
    },
    "1820": {
      "fn": "ERC20.transfer",
      "offset": [
        2156,
        2189
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1821": {
      "fn": "ERC20.transfer",
      "offset": [
        2156,
        2189
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1823": {
      "fn": "ERC20.transfer",
      "offset": [
        2156,
        2189
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1824": {
      "fn": "ERC20.transfer",
      "offset": [
        2156,
        2189
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1825": {
      "fn": "ERC20.transfer",
      "offset": [
        2156,
        2189
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1826": {
      "op": "POP"
    },
    "1827": {
      "offset": [
        2156,
        2189
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "1829": {
      "fn": "ERC20.transfer",
      "offset": [
        2156,
        2189
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1830": {
      "fn": "ERC20.transfer",
      "offset": [
        2156,
        2189
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x385"
    },
    "1833": {
      "fn": "ERC20.transfer",
      "offset": [
        2156,
        2189
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1834": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1836": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1838": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1840": {
      "op": "SHL"
    },
    "1841": {
      "op": "SUB"
    },
    "1842": {
      "offset": [
        2156,
        2189
      ],
      "op": "AND",
      "path": "0"
    },
    "1843": {
      "fn": "ERC20.transfer",
      "offset": [
        2156,
        2189
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1844": {
      "fn": "ERC20.transfer",
      "offset": [
        2156,
        2189
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1845": {
      "offset": [
        1779,
        1800
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1846": {
      "fn": "ERC20.transfer",
      "offset": [
        1779,
        1800
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1847": {
      "fn": "ERC20.transfer",
      "offset": [
        1779,
        1800
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1848": {
      "fn": "ERC20.transfer",
      "offset": [
        1779,
        1800
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1849": {
      "fn": "ERC20.transfer",
      "offset": [
        1779,
        1800
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x741"
    },
    "1852": {
      "fn": "ERC20.transfer",
      "offset": [
        1779,
        1800
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1853": {
      "fn": "ERC20.transfer",
      "offset": [
        1779,
        1800
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1855": {
      "fn": "ERC20.transfer",
      "offset": [
        1779,
        1800
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1856": {
      "fn": "ERC20.transfer",
      "offset": [
        1779,
        1800
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1857": {
      "fn": "ERC20.transfer",
      "offset": [
        1779,
        1800
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1858": {
      "fn": "ERC20.transfer",
      "offset": [
        1779,
        1800
      ],
      "op": "POP",
      "path": "0"
    },
    "1859": {
      "fn": "ERC20.transfer",
      "offset": [
        1779,
        1800
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D6"
    },
    "1862": {
      "fn": "ERC20.transfer",
      "offset": [
        1779,
        1800
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "1864": {
      "fn": "ERC20.transfer",
      "offset": [
        1779,
        1800
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1865": {
      "fn": "ERC20.transfer",
      "offset": [
        1779,
        1800
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1866": {
      "fn": "ERC20.transfer",
      "offset": [
        1779,
        1800
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1867": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        14850,
        15417
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1868": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        14850,
        15417
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1869": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        14850,
        15417
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1870": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        14850,
        15417
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1871": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        14850,
        15417
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x757"
    },
    "1874": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        14850,
        15417
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1875": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        14850,
        15417
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1877": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        14850,
        15417
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1878": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        14850,
        15417
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1879": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        14850,
        15417
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1880": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        14850,
        15417
      ],
      "op": "POP",
      "path": "0"
    },
    "1881": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        14850,
        15417
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D6"
    },
    "1884": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        14850,
        15417
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2892"
    },
    "1887": {
      "fn": "GeVault.getActiveTickIndex",
      "jump": "i",
      "offset": [
        14850,
        15417
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1888": {
      "offset": [
        1854,
        1873
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1889": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        1854,
        1873
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1890": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        1854,
        1873
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1891": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        1854,
        1873
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1892": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        1854,
        1873
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x76C"
    },
    "1895": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        1854,
        1873
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1896": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        1854,
        1873
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1898": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        1854,
        1873
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1899": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        1854,
        1873
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1900": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        1854,
        1873
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1901": {
      "op": "POP"
    },
    "1902": {
      "offset": [
        1854,
        1873
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "1904": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        1854,
        1873
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1905": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        1854,
        1873
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x385"
    },
    "1908": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        1854,
        1873
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1909": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1911": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1913": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1915": {
      "op": "SHL"
    },
    "1916": {
      "op": "SUB"
    },
    "1917": {
      "offset": [
        1854,
        1873
      ],
      "op": "AND",
      "path": "0"
    },
    "1918": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        1854,
        1873
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1919": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        1854,
        1873
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1920": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12364,
        12989
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1921": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12364,
        12989
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1922": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12364,
        12989
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1923": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12364,
        12989
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1924": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12364,
        12989
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x78C"
    },
    "1927": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12364,
        12989
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1928": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12364,
        12989
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1930": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12364,
        12989
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1931": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12364,
        12989
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1932": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12364,
        12989
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1933": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12364,
        12989
      ],
      "op": "POP",
      "path": "0"
    },
    "1934": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12364,
        12989
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x355"
    },
    "1937": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12364,
        12989
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A44"
    },
    "1940": {
      "fn": "GeVault.poolMatchesOracle",
      "jump": "i",
      "offset": [
        12364,
        12989
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1941": {
      "fn": "GeVault.setTvlCap",
      "offset": [
        6237,
        6349
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1942": {
      "fn": "GeVault.setTvlCap",
      "offset": [
        6237,
        6349
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1943": {
      "fn": "GeVault.setTvlCap",
      "offset": [
        6237,
        6349
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1944": {
      "fn": "GeVault.setTvlCap",
      "offset": [
        6237,
        6349
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1945": {
      "fn": "GeVault.setTvlCap",
      "offset": [
        6237,
        6349
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7A1"
    },
    "1948": {
      "fn": "GeVault.setTvlCap",
      "offset": [
        6237,
        6349
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1949": {
      "fn": "GeVault.setTvlCap",
      "offset": [
        6237,
        6349
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1951": {
      "fn": "GeVault.setTvlCap",
      "offset": [
        6237,
        6349
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1952": {
      "fn": "GeVault.setTvlCap",
      "offset": [
        6237,
        6349
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1953": {
      "fn": "GeVault.setTvlCap",
      "offset": [
        6237,
        6349
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1954": {
      "op": "POP"
    },
    "1955": {
      "fn": "GeVault.setTvlCap",
      "offset": [
        6237,
        6349
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AF"
    },
    "1958": {
      "fn": "GeVault.setTvlCap",
      "offset": [
        6237,
        6349
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7B0"
    },
    "1961": {
      "fn": "GeVault.setTvlCap",
      "offset": [
        6237,
        6349
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1962": {
      "fn": "GeVault.setTvlCap",
      "offset": [
        6237,
        6349
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1964": {
      "fn": "GeVault.setTvlCap",
      "offset": [
        6237,
        6349
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x40ED"
    },
    "1967": {
      "fn": "GeVault.setTvlCap",
      "jump": "i",
      "offset": [
        6237,
        6349
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1968": {
      "fn": "GeVault.setTvlCap",
      "offset": [
        6237,
        6349
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1969": {
      "fn": "GeVault.setTvlCap",
      "offset": [
        6237,
        6349
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D7C"
    },
    "1972": {
      "fn": "GeVault.setTvlCap",
      "jump": "i",
      "offset": [
        6237,
        6349
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1973": {
      "fn": "ERC20.allowance",
      "offset": [
        3951,
        4100
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1974": {
      "fn": "ERC20.allowance",
      "offset": [
        3951,
        4100
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1975": {
      "fn": "ERC20.allowance",
      "offset": [
        3951,
        4100
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1976": {
      "fn": "ERC20.allowance",
      "offset": [
        3951,
        4100
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1977": {
      "fn": "ERC20.allowance",
      "offset": [
        3951,
        4100
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x7C1"
    },
    "1980": {
      "fn": "ERC20.allowance",
      "offset": [
        3951,
        4100
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1981": {
      "fn": "ERC20.allowance",
      "offset": [
        3951,
        4100
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1983": {
      "fn": "ERC20.allowance",
      "offset": [
        3951,
        4100
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1984": {
      "fn": "ERC20.allowance",
      "offset": [
        3951,
        4100
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1985": {
      "fn": "ERC20.allowance",
      "offset": [
        3951,
        4100
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1986": {
      "op": "POP"
    },
    "1987": {
      "fn": "ERC20.allowance",
      "offset": [
        3951,
        4100
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2D6"
    },
    "1990": {
      "fn": "ERC20.allowance",
      "offset": [
        3951,
        4100
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x7D0"
    },
    "1993": {
      "fn": "ERC20.allowance",
      "offset": [
        3951,
        4100
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1994": {
      "fn": "ERC20.allowance",
      "offset": [
        3951,
        4100
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1996": {
      "fn": "ERC20.allowance",
      "offset": [
        3951,
        4100
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4123"
    },
    "1999": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        3951,
        4100
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2000": {
      "fn": "ERC20.allowance",
      "offset": [
        3951,
        4100
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2003": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2005": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2007": {
      "op": "SHL"
    },
    "2008": {
      "op": "SUB"
    },
    "2009": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4084
      ],
      "op": "SWAP2",
      "path": "20",
      "statement": 6
    },
    "2010": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4084
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2011": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4084
      ],
      "op": "AND",
      "path": "20"
    },
    "2012": {
      "fn": "ERC20.allowance",
      "offset": [
        4040,
        4047
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2014": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4084
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2015": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4084
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2016": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4084
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2017": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4077
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "2019": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4084
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2021": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4084
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2022": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4084
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2023": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4084
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2024": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4084
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2026": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4084
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2027": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4084
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2028": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4084
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "2029": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4093
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "2030": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4093
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2031": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4093
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "2032": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4093
      ],
      "op": "AND",
      "path": "20"
    },
    "2033": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4093
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2034": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4093
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2035": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4093
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2036": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4093
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2037": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4093
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2038": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4093
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2039": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4093
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "2040": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4093
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2041": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4093
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2042": {
      "fn": "ERC20.allowance",
      "offset": [
        3951,
        4100
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2043": {
      "fn": "GeVault.setTreasury",
      "offset": [
        3546,
        3675
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2044": {
      "fn": "GeVault.setTreasury",
      "offset": [
        3546,
        3675
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2045": {
      "fn": "GeVault.setTreasury",
      "offset": [
        3546,
        3675
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2046": {
      "fn": "GeVault.setTreasury",
      "offset": [
        3546,
        3675
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2047": {
      "fn": "GeVault.setTreasury",
      "offset": [
        3546,
        3675
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x807"
    },
    "2050": {
      "fn": "GeVault.setTreasury",
      "offset": [
        3546,
        3675
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2051": {
      "fn": "GeVault.setTreasury",
      "offset": [
        3546,
        3675
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2053": {
      "fn": "GeVault.setTreasury",
      "offset": [
        3546,
        3675
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2054": {
      "fn": "GeVault.setTreasury",
      "offset": [
        3546,
        3675
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2055": {
      "fn": "GeVault.setTreasury",
      "offset": [
        3546,
        3675
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2056": {
      "op": "POP"
    },
    "2057": {
      "fn": "GeVault.setTreasury",
      "offset": [
        3546,
        3675
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AF"
    },
    "2060": {
      "fn": "GeVault.setTreasury",
      "offset": [
        3546,
        3675
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x816"
    },
    "2063": {
      "fn": "GeVault.setTreasury",
      "offset": [
        3546,
        3675
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "2064": {
      "fn": "GeVault.setTreasury",
      "offset": [
        3546,
        3675
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2066": {
      "fn": "GeVault.setTreasury",
      "offset": [
        3546,
        3675
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4106"
    },
    "2069": {
      "fn": "GeVault.setTreasury",
      "jump": "i",
      "offset": [
        3546,
        3675
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2070": {
      "fn": "GeVault.setTreasury",
      "offset": [
        3546,
        3675
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2071": {
      "fn": "GeVault.setTreasury",
      "offset": [
        3546,
        3675
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DDB"
    },
    "2074": {
      "fn": "GeVault.setTreasury",
      "jump": "i",
      "offset": [
        3546,
        3675
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2075": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2076": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "2077": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2078": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "2079": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x827"
    },
    "2082": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2083": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2085": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2086": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "REVERT",
      "path": "12"
    },
    "2087": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2088": {
      "op": "POP"
    },
    "2089": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2AF"
    },
    "2092": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x836"
    },
    "2095": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "2096": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2098": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4106"
    },
    "2101": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2102": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2103": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2E53"
    },
    "2106": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2107": {
      "offset": [
        2320,
        2349
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2108": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2320,
        2349
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2109": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2320,
        2349
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2110": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2320,
        2349
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2111": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2320,
        2349
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x847"
    },
    "2114": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2320,
        2349
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2115": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2320,
        2349
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2117": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2320,
        2349
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2118": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2320,
        2349
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2119": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2320,
        2349
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2120": {
      "op": "POP"
    },
    "2121": {
      "offset": [
        2320,
        2349
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x12"
    },
    "2123": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2320,
        2349
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2124": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2320,
        2349
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x355"
    },
    "2127": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2320,
        2349
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2128": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2130": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2132": {
      "op": "SHL"
    },
    "2133": {
      "offset": [
        2320,
        2349
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2134": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2320,
        2349
      ],
      "op": "DIV",
      "path": "0"
    },
    "2135": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2320,
        2349
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2137": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2320,
        2349
      ],
      "op": "AND",
      "path": "0"
    },
    "2138": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2320,
        2349
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2139": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2320,
        2349
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2140": {
      "fn": "GeVault.deposit",
      "offset": [
        8252,
        9724
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2141": {
      "fn": "GeVault.deposit",
      "offset": [
        8334,
        8348
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2143": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x2"
    },
    "2145": {
      "offset": [
        2325,
        2332
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x6"
    },
    "2147": {
      "fn": "GeVault.deposit",
      "offset": [
        2325,
        2332
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2148": {
      "offset": [
        2325,
        2344
      ],
      "op": "SUB",
      "path": "19"
    },
    "2149": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8B5"
    },
    "2152": {
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2153": {
      "fn": "GeVault.deposit",
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2155": {
      "fn": "GeVault.deposit",
      "offset": [
        2317,
        2380
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2156": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2160": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2162": {
      "op": "SHL"
    },
    "2163": {
      "offset": [
        2317,
        2380
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2164": {
      "fn": "GeVault.deposit",
      "offset": [
        2317,
        2380
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2165": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2167": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "2169": {
      "fn": "GeVault.deposit",
      "offset": [
        2317,
        2380
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2170": {
      "fn": "GeVault.deposit",
      "offset": [
        2317,
        2380
      ],
      "op": "ADD",
      "path": "19"
    },
    "2171": {
      "op": "MSTORE"
    },
    "2172": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2174": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2176": {
      "op": "DUP3"
    },
    "2177": {
      "op": "ADD"
    },
    "2178": {
      "op": "MSTORE"
    },
    "2179": {
      "op": "PUSH32",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "2212": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2214": {
      "op": "DUP3"
    },
    "2215": {
      "op": "ADD"
    },
    "2216": {
      "op": "MSTORE"
    },
    "2217": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2219": {
      "op": "ADD"
    },
    "2220": {
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2221": {
      "fn": "GeVault.deposit",
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2223": {
      "fn": "GeVault.deposit",
      "offset": [
        2317,
        2380
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2224": {
      "fn": "GeVault.deposit",
      "offset": [
        2317,
        2380
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2225": {
      "fn": "GeVault.deposit",
      "offset": [
        2317,
        2380
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2226": {
      "fn": "GeVault.deposit",
      "offset": [
        2317,
        2380
      ],
      "op": "SUB",
      "path": "19"
    },
    "2227": {
      "fn": "GeVault.deposit",
      "offset": [
        2317,
        2380
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2228": {
      "fn": "GeVault.deposit",
      "offset": [
        2317,
        2380
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "19"
    },
    "2229": {
      "fn": "GeVault.deposit",
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2230": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x2"
    },
    "2232": {
      "offset": [
        2455,
        2462
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x6"
    },
    "2234": {
      "offset": [
        2455,
        2473
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "2235": {
      "fn": "GeVault.deposit",
      "offset": [
        8367,
        8376
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 7,
      "value": "0xB"
    },
    "2237": {
      "fn": "GeVault.deposit",
      "offset": [
        8367,
        8376
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2240": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2242": {
      "op": "SHL"
    },
    "2243": {
      "fn": "GeVault.deposit",
      "offset": [
        8367,
        8376
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2244": {
      "fn": "GeVault.deposit",
      "offset": [
        8367,
        8376
      ],
      "op": "DIV",
      "path": "0"
    },
    "2245": {
      "fn": "GeVault.deposit",
      "offset": [
        8367,
        8376
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2247": {
      "branch": 154,
      "fn": "GeVault.deposit",
      "offset": [
        8367,
        8376
      ],
      "op": "AND",
      "path": "0"
    },
    "2248": {
      "fn": "GeVault.deposit",
      "offset": [
        8359,
        8399
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x908"
    },
    "2251": {
      "branch": 154,
      "fn": "GeVault.deposit",
      "offset": [
        8359,
        8399
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2252": {
      "fn": "GeVault.deposit",
      "offset": [
        8359,
        8399
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2254": {
      "fn": "GeVault.deposit",
      "offset": [
        8359,
        8399
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2255": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2259": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2261": {
      "op": "SHL"
    },
    "2262": {
      "fn": "GeVault.deposit",
      "offset": [
        8359,
        8399
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2263": {
      "fn": "GeVault.deposit",
      "offset": [
        8359,
        8399
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2264": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2266": {
      "fn": "GeVault.deposit",
      "offset": [
        8359,
        8399
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2268": {
      "fn": "GeVault.deposit",
      "offset": [
        8359,
        8399
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2269": {
      "fn": "GeVault.deposit",
      "offset": [
        8359,
        8399
      ],
      "op": "ADD",
      "path": "0"
    },
    "2270": {
      "op": "MSTORE"
    },
    "2271": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "2273": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2275": {
      "op": "DUP3"
    },
    "2276": {
      "op": "ADD"
    },
    "2277": {
      "op": "MSTORE"
    },
    "2278": {
      "op": "PUSH18",
      "value": "0x11D1558E88141BDBDB08111A5CD8589B1959"
    },
    "2297": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "2299": {
      "op": "SHL"
    },
    "2300": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2302": {
      "op": "DUP3"
    },
    "2303": {
      "op": "ADD"
    },
    "2304": {
      "op": "MSTORE"
    },
    "2305": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2307": {
      "op": "ADD"
    },
    "2308": {
      "fn": "GeVault.deposit",
      "offset": [
        8359,
        8399
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8AC"
    },
    "2311": {
      "op": "JUMP"
    },
    "2312": {
      "fn": "GeVault.deposit",
      "offset": [
        8359,
        8399
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2313": {
      "fn": "GeVault.deposit",
      "offset": [
        8413,
        8432
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 8,
      "value": "0x910"
    },
    "2316": {
      "fn": "GeVault.deposit",
      "offset": [
        8413,
        8430
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A44"
    },
    "2319": {
      "fn": "GeVault.deposit",
      "jump": "i",
      "offset": [
        8413,
        8432
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2320": {
      "branch": 155,
      "fn": "GeVault.deposit",
      "offset": [
        8413,
        8432
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2321": {
      "fn": "GeVault.deposit",
      "offset": [
        8405,
        8454
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x92C"
    },
    "2324": {
      "branch": 155,
      "fn": "GeVault.deposit",
      "offset": [
        8405,
        8454
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2325": {
      "fn": "GeVault.deposit",
      "offset": [
        8405,
        8454
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2327": {
      "fn": "GeVault.deposit",
      "offset": [
        8405,
        8454
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2328": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2332": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2334": {
      "op": "SHL"
    },
    "2335": {
      "fn": "GeVault.deposit",
      "offset": [
        8405,
        8454
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2336": {
      "fn": "GeVault.deposit",
      "offset": [
        8405,
        8454
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2337": {
      "fn": "GeVault.deposit",
      "offset": [
        8405,
        8454
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2339": {
      "fn": "GeVault.deposit",
      "offset": [
        8405,
        8454
      ],
      "op": "ADD",
      "path": "0"
    },
    "2340": {
      "fn": "GeVault.deposit",
      "offset": [
        8405,
        8454
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8AC"
    },
    "2343": {
      "fn": "GeVault.deposit",
      "offset": [
        8405,
        8454
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2344": {
      "fn": "GeVault.deposit",
      "offset": [
        8405,
        8454
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4151"
    },
    "2347": {
      "fn": "GeVault.deposit",
      "jump": "i",
      "offset": [
        8405,
        8454
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2348": {
      "fn": "GeVault.deposit",
      "offset": [
        8405,
        8454
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2349": {
      "fn": "GeVault.deposit",
      "offset": [
        8485,
        8491
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 9,
      "value": "0xA"
    },
    "2351": {
      "fn": "GeVault.deposit",
      "offset": [
        8485,
        8491
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2356": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2358": {
      "op": "SHL"
    },
    "2359": {
      "op": "SUB"
    },
    "2360": {
      "fn": "GeVault.deposit",
      "offset": [
        8468,
        8492
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2361": {
      "fn": "GeVault.deposit",
      "offset": [
        8468,
        8492
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2362": {
      "fn": "GeVault.deposit",
      "offset": [
        8468,
        8492
      ],
      "op": "AND",
      "path": "0"
    },
    "2363": {
      "fn": "GeVault.deposit",
      "offset": [
        8485,
        8491
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2364": {
      "fn": "GeVault.deposit",
      "offset": [
        8485,
        8491
      ],
      "op": "AND",
      "path": "0"
    },
    "2365": {
      "fn": "GeVault.deposit",
      "offset": [
        8468,
        8492
      ],
      "op": "EQ",
      "path": "0"
    },
    "2366": {
      "branch": 156,
      "fn": "GeVault.deposit",
      "offset": [
        8468,
        8492
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2367": {
      "fn": "GeVault.deposit",
      "offset": [
        8468,
        8520
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x955"
    },
    "2370": {
      "branch": 156,
      "fn": "GeVault.deposit",
      "offset": [
        8468,
        8520
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2371": {
      "op": "POP"
    },
    "2372": {
      "fn": "GeVault.deposit",
      "offset": [
        8513,
        8519
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "2374": {
      "fn": "GeVault.deposit",
      "offset": [
        8513,
        8519
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2379": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2381": {
      "op": "SHL"
    },
    "2382": {
      "op": "SUB"
    },
    "2383": {
      "fn": "GeVault.deposit",
      "offset": [
        8496,
        8520
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2384": {
      "fn": "GeVault.deposit",
      "offset": [
        8496,
        8520
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2385": {
      "fn": "GeVault.deposit",
      "offset": [
        8496,
        8520
      ],
      "op": "AND",
      "path": "0"
    },
    "2386": {
      "fn": "GeVault.deposit",
      "offset": [
        8513,
        8519
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2387": {
      "fn": "GeVault.deposit",
      "offset": [
        8513,
        8519
      ],
      "op": "AND",
      "path": "0"
    },
    "2388": {
      "branch": 157,
      "fn": "GeVault.deposit",
      "offset": [
        8496,
        8520
      ],
      "op": "EQ",
      "path": "0"
    },
    "2389": {
      "fn": "GeVault.deposit",
      "offset": [
        8468,
        8520
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2390": {
      "fn": "GeVault.deposit",
      "offset": [
        8460,
        8543
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x996"
    },
    "2393": {
      "branch": 157,
      "fn": "GeVault.deposit",
      "offset": [
        8460,
        8543
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2394": {
      "fn": "GeVault.deposit",
      "offset": [
        8460,
        8543
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2396": {
      "fn": "GeVault.deposit",
      "offset": [
        8460,
        8543
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2397": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2401": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2403": {
      "op": "SHL"
    },
    "2404": {
      "fn": "GeVault.deposit",
      "offset": [
        8460,
        8543
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2405": {
      "fn": "GeVault.deposit",
      "offset": [
        8460,
        8543
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2406": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2408": {
      "fn": "GeVault.deposit",
      "offset": [
        8460,
        8543
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2410": {
      "fn": "GeVault.deposit",
      "offset": [
        8460,
        8543
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2411": {
      "fn": "GeVault.deposit",
      "offset": [
        8460,
        8543
      ],
      "op": "ADD",
      "path": "0"
    },
    "2412": {
      "op": "MSTORE"
    },
    "2413": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "2415": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2417": {
      "op": "DUP3"
    },
    "2418": {
      "op": "ADD"
    },
    "2419": {
      "op": "MSTORE"
    },
    "2420": {
      "op": "PUSH18",
      "value": "0x23A2AB1D1024B73B30B634B2102A37B5B2B7"
    },
    "2439": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "2441": {
      "op": "SHL"
    },
    "2442": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2444": {
      "op": "DUP3"
    },
    "2445": {
      "op": "ADD"
    },
    "2446": {
      "op": "MSTORE"
    },
    "2447": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2449": {
      "op": "ADD"
    },
    "2450": {
      "fn": "GeVault.deposit",
      "offset": [
        8460,
        8543
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8AC"
    },
    "2453": {
      "op": "JUMP"
    },
    "2454": {
      "fn": "GeVault.deposit",
      "offset": [
        8460,
        8543
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2455": {
      "fn": "GeVault.deposit",
      "offset": [
        8566,
        8567
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 10,
      "value": "0x0"
    },
    "2457": {
      "fn": "GeVault.deposit",
      "offset": [
        8557,
        8563
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2458": {
      "branch": 158,
      "fn": "GeVault.deposit",
      "offset": [
        8557,
        8567
      ],
      "op": "GT",
      "path": "0"
    },
    "2459": {
      "fn": "GeVault.deposit",
      "offset": [
        8557,
        8584
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2460": {
      "fn": "GeVault.deposit",
      "offset": [
        8557,
        8584
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9A5"
    },
    "2463": {
      "branch": 158,
      "fn": "GeVault.deposit",
      "offset": [
        8557,
        8584
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2464": {
      "fn": "GeVault.deposit",
      "offset": [
        8557,
        8584
      ],
      "op": "POP",
      "path": "0"
    },
    "2465": {
      "fn": "GeVault.deposit",
      "offset": [
        8583,
        8584
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2467": {
      "fn": "GeVault.deposit",
      "offset": [
        8571,
        8580
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2468": {
      "branch": 159,
      "fn": "GeVault.deposit",
      "offset": [
        8571,
        8584
      ],
      "op": "GT",
      "path": "0"
    },
    "2469": {
      "fn": "GeVault.deposit",
      "offset": [
        8557,
        8584
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2470": {
      "fn": "GeVault.deposit",
      "offset": [
        8549,
        8606
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9E5"
    },
    "2473": {
      "branch": 159,
      "fn": "GeVault.deposit",
      "offset": [
        8549,
        8606
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2474": {
      "fn": "GeVault.deposit",
      "offset": [
        8549,
        8606
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2476": {
      "fn": "GeVault.deposit",
      "offset": [
        8549,
        8606
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2477": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2481": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2483": {
      "op": "SHL"
    },
    "2484": {
      "fn": "GeVault.deposit",
      "offset": [
        8549,
        8606
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2485": {
      "fn": "GeVault.deposit",
      "offset": [
        8549,
        8606
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2486": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2488": {
      "fn": "GeVault.deposit",
      "offset": [
        8549,
        8606
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2490": {
      "fn": "GeVault.deposit",
      "offset": [
        8549,
        8606
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2491": {
      "fn": "GeVault.deposit",
      "offset": [
        8549,
        8606
      ],
      "op": "ADD",
      "path": "0"
    },
    "2492": {
      "op": "MSTORE"
    },
    "2493": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2495": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2497": {
      "op": "DUP3"
    },
    "2498": {
      "op": "ADD"
    },
    "2499": {
      "op": "MSTORE"
    },
    "2500": {
      "op": "PUSH17",
      "value": "0x4745563A204465706F736974205A65726F"
    },
    "2518": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "2520": {
      "op": "SHL"
    },
    "2521": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2523": {
      "op": "DUP3"
    },
    "2524": {
      "op": "ADD"
    },
    "2525": {
      "op": "MSTORE"
    },
    "2526": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2528": {
      "op": "ADD"
    },
    "2529": {
      "fn": "GeVault.deposit",
      "offset": [
        8549,
        8606
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8AC"
    },
    "2532": {
      "op": "JUMP"
    },
    "2533": {
      "fn": "GeVault.deposit",
      "offset": [
        8549,
        8606
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2534": {
      "fn": "GeVault.deposit",
      "offset": [
        8663,
        8672
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2535": {
      "branch": 160,
      "fn": "GeVault.deposit",
      "offset": [
        8663,
        8676
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2536": {
      "fn": "GeVault.deposit",
      "offset": [
        8659,
        8966
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAAD"
    },
    "2539": {
      "branch": 160,
      "fn": "GeVault.deposit",
      "offset": [
        8659,
        8966
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2540": {
      "fn": "GeVault.deposit",
      "offset": [
        8710,
        8714
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 11,
      "value": "0x12"
    },
    "2542": {
      "fn": "GeVault.deposit",
      "offset": [
        8710,
        8714
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2547": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2549": {
      "op": "SHL"
    },
    "2550": {
      "op": "SUB"
    },
    "2551": {
      "fn": "GeVault.deposit",
      "offset": [
        8693,
        8715
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2552": {
      "fn": "GeVault.deposit",
      "offset": [
        8693,
        8715
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2553": {
      "fn": "GeVault.deposit",
      "offset": [
        8693,
        8715
      ],
      "op": "AND",
      "path": "0"
    },
    "2554": {
      "fn": "GeVault.deposit",
      "offset": [
        8710,
        8714
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2555": {
      "fn": "GeVault.deposit",
      "offset": [
        8710,
        8714
      ],
      "op": "AND",
      "path": "0"
    },
    "2556": {
      "branch": 161,
      "fn": "GeVault.deposit",
      "offset": [
        8693,
        8715
      ],
      "op": "EQ",
      "path": "0"
    },
    "2557": {
      "fn": "GeVault.deposit",
      "offset": [
        8685,
        8737
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA3C"
    },
    "2560": {
      "branch": 161,
      "fn": "GeVault.deposit",
      "offset": [
        8685,
        8737
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2561": {
      "fn": "GeVault.deposit",
      "offset": [
        8685,
        8737
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2563": {
      "fn": "GeVault.deposit",
      "offset": [
        8685,
        8737
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2564": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2568": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2570": {
      "op": "SHL"
    },
    "2571": {
      "fn": "GeVault.deposit",
      "offset": [
        8685,
        8737
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2572": {
      "fn": "GeVault.deposit",
      "offset": [
        8685,
        8737
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2573": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2575": {
      "fn": "GeVault.deposit",
      "offset": [
        8685,
        8737
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2577": {
      "fn": "GeVault.deposit",
      "offset": [
        8685,
        8737
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2578": {
      "fn": "GeVault.deposit",
      "offset": [
        8685,
        8737
      ],
      "op": "ADD",
      "path": "0"
    },
    "2579": {
      "op": "MSTORE"
    },
    "2580": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2582": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2584": {
      "op": "DUP3"
    },
    "2585": {
      "op": "ADD"
    },
    "2586": {
      "op": "MSTORE"
    },
    "2587": {
      "op": "PUSH17",
      "value": "0x8E8AAC744092DCECC2D8D2C840AECAE8D"
    },
    "2605": {
      "op": "PUSH1",
      "value": "0x7B"
    },
    "2607": {
      "op": "SHL"
    },
    "2608": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2610": {
      "op": "DUP3"
    },
    "2611": {
      "op": "ADD"
    },
    "2612": {
      "op": "MSTORE"
    },
    "2613": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2615": {
      "op": "ADD"
    },
    "2616": {
      "fn": "GeVault.deposit",
      "offset": [
        8685,
        8737
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8AC"
    },
    "2619": {
      "op": "JUMP"
    },
    "2620": {
      "fn": "GeVault.deposit",
      "offset": [
        8685,
        8737
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2621": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8815
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 12,
      "value": "0x12"
    },
    "2623": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8815
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2625": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8815
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2626": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8815
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2627": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8815
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2628": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8815
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2631": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8815
      ],
      "op": "EXP",
      "path": "0"
    },
    "2632": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8815
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2633": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8815
      ],
      "op": "DIV",
      "path": "0"
    },
    "2634": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2638": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2640": {
      "op": "SHL"
    },
    "2641": {
      "op": "SUB"
    },
    "2642": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8815
      ],
      "op": "AND",
      "path": "0"
    },
    "2643": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2647": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2649": {
      "op": "SHL"
    },
    "2650": {
      "op": "SUB"
    },
    "2651": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8823
      ],
      "op": "AND",
      "path": "0"
    },
    "2652": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8823
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xD0E30DB0"
    },
    "2657": {
      "fn": "GeVault.deposit",
      "offset": [
        8831,
        8840
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2658": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8843
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2660": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8843
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2661": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8843
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2662": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8843
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "2667": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8843
      ],
      "op": "AND",
      "path": "0"
    },
    "2668": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8843
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "2670": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8843
      ],
      "op": "SHL",
      "path": "0"
    },
    "2671": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8843
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2672": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8843
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2673": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8843
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2675": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8843
      ],
      "op": "ADD",
      "path": "0"
    },
    "2676": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8843
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2678": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8843
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2680": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8843
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2681": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8843
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2682": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8843
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2683": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8843
      ],
      "op": "SUB",
      "path": "0"
    },
    "2684": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8843
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2685": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8843
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2686": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8843
      ],
      "op": "DUP9",
      "path": "0"
    },
    "2687": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8843
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2688": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8843
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "2689": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8843
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2690": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8843
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2691": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8843
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2692": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8843
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA8C"
    },
    "2695": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8843
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2696": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8843
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2698": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8843
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2699": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8843
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2700": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8843
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2701": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8843
      ],
      "op": "POP",
      "path": "0"
    },
    "2702": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8843
      ],
      "op": "GAS",
      "path": "0"
    },
    "2703": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8843
      ],
      "op": "CALL",
      "path": "0"
    },
    "2704": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8843
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2705": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8843
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2706": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8843
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2707": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8843
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAA0"
    },
    "2710": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8843
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2711": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8843
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2712": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8843
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2714": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8843
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2715": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8843
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "2716": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8843
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2717": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8843
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2719": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8843
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2720": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8843
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2721": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8843
      ],
      "op": "POP",
      "path": "0"
    },
    "2722": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8843
      ],
      "op": "POP",
      "path": "0"
    },
    "2723": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8843
      ],
      "op": "POP",
      "path": "0"
    },
    "2724": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8843
      ],
      "op": "POP",
      "path": "0"
    },
    "2725": {
      "fn": "GeVault.deposit",
      "offset": [
        8811,
        8843
      ],
      "op": "POP",
      "path": "0"
    },
    "2726": {
      "fn": "GeVault.deposit",
      "offset": [
        8860,
        8869
      ],
      "op": "CALLVALUE",
      "path": "0",
      "statement": 13
    },
    "2727": {
      "fn": "GeVault.deposit",
      "offset": [
        8851,
        8869
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2728": {
      "fn": "GeVault.deposit",
      "offset": [
        8851,
        8869
      ],
      "op": "POP",
      "path": "0"
    },
    "2729": {
      "fn": "GeVault.deposit",
      "offset": [
        8659,
        8966
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAC2"
    },
    "2732": {
      "fn": "GeVault.deposit",
      "offset": [
        8659,
        8966
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2733": {
      "fn": "GeVault.deposit",
      "offset": [
        8659,
        8966
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2734": {
      "fn": "GeVault.deposit",
      "offset": [
        8895,
        8959
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 14,
      "value": "0xAC2"
    },
    "2737": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2741": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2743": {
      "op": "SHL"
    },
    "2744": {
      "op": "SUB"
    },
    "2745": {
      "fn": "GeVault.deposit",
      "offset": [
        8895,
        8924
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2746": {
      "fn": "GeVault.deposit",
      "offset": [
        8895,
        8924
      ],
      "op": "AND",
      "path": "0"
    },
    "2747": {
      "fn": "GeVault.deposit",
      "offset": [
        8925,
        8935
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2748": {
      "fn": "GeVault.deposit",
      "offset": [
        8945,
        8949
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "2749": {
      "fn": "GeVault.deposit",
      "offset": [
        8952,
        8958
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2750": {
      "fn": "GeVault.deposit",
      "offset": [
        8895,
        8924
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EEE"
    },
    "2753": {
      "fn": "GeVault.deposit",
      "jump": "i",
      "offset": [
        8895,
        8959
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2754": {
      "fn": "GeVault.deposit",
      "offset": [
        8895,
        8959
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2755": {
      "fn": "GeVault.deposit",
      "offset": [
        9068,
        9074
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "2757": {
      "fn": "GeVault.deposit",
      "offset": [
        9068,
        9074
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2758": {
      "fn": "GeVault.deposit",
      "offset": [
        9012,
        9020
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2760": {
      "fn": "GeVault.deposit",
      "offset": [
        9012,
        9020
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2761": {
      "fn": "GeVault.deposit",
      "offset": [
        9079,
        9082
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2710"
    },
    "2764": {
      "fn": "GeVault.deposit",
      "offset": [
        9079,
        9082
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2765": {
      "fn": "GeVault.deposit",
      "offset": [
        9032,
        9076
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAE3"
    },
    "2768": {
      "fn": "GeVault.deposit",
      "offset": [
        9032,
        9076
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2769": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2771": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2773": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2775": {
      "op": "SHL"
    },
    "2776": {
      "op": "SUB"
    },
    "2777": {
      "fn": "GeVault.deposit",
      "offset": [
        9051,
        9075
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2778": {
      "fn": "GeVault.deposit",
      "offset": [
        9051,
        9075
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2779": {
      "fn": "GeVault.deposit",
      "offset": [
        9051,
        9075
      ],
      "op": "AND",
      "path": "0"
    },
    "2780": {
      "fn": "GeVault.deposit",
      "offset": [
        9068,
        9074
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2781": {
      "fn": "GeVault.deposit",
      "offset": [
        9068,
        9074
      ],
      "op": "AND",
      "path": "0"
    },
    "2782": {
      "fn": "GeVault.deposit",
      "offset": [
        9051,
        9075
      ],
      "op": "EQ",
      "path": "0"
    },
    "2783": {
      "fn": "GeVault.deposit",
      "offset": [
        9032,
        9050
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2599"
    },
    "2786": {
      "fn": "GeVault.deposit",
      "jump": "i",
      "offset": [
        9032,
        9076
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2787": {
      "fn": "GeVault.deposit",
      "offset": [
        9032,
        9076
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2788": {
      "fn": "GeVault.deposit",
      "offset": [
        9023,
        9076
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAED"
    },
    "2791": {
      "fn": "GeVault.deposit",
      "offset": [
        9023,
        9076
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2792": {
      "fn": "GeVault.deposit",
      "offset": [
        9023,
        9029
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2793": {
      "fn": "GeVault.deposit",
      "offset": [
        9023,
        9076
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4192"
    },
    "2796": {
      "fn": "GeVault.deposit",
      "jump": "i",
      "offset": [
        9023,
        9076
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2797": {
      "fn": "GeVault.deposit",
      "offset": [
        9023,
        9076
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2798": {
      "fn": "GeVault.deposit",
      "offset": [
        9023,
        9082
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAF7"
    },
    "2801": {
      "fn": "GeVault.deposit",
      "offset": [
        9023,
        9082
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2802": {
      "fn": "GeVault.deposit",
      "offset": [
        9023,
        9082
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2803": {
      "fn": "GeVault.deposit",
      "offset": [
        9023,
        9082
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41BF"
    },
    "2806": {
      "fn": "GeVault.deposit",
      "jump": "i",
      "offset": [
        9023,
        9082
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2807": {
      "fn": "GeVault.deposit",
      "offset": [
        9023,
        9082
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2808": {
      "fn": "GeVault.deposit",
      "offset": [
        9114,
        9122
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 15,
      "value": "0xE"
    },
    "2810": {
      "fn": "GeVault.deposit",
      "offset": [
        9114,
        9122
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2811": {
      "fn": "GeVault.deposit",
      "offset": [
        9012,
        9082
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2812": {
      "fn": "GeVault.deposit",
      "offset": [
        9012,
        9082
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2813": {
      "op": "POP"
    },
    "2814": {
      "fn": "GeVault.deposit",
      "offset": [
        9088,
        9128
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB14"
    },
    "2817": {
      "fn": "GeVault.deposit",
      "offset": [
        9088,
        9128
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2818": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2820": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2822": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2824": {
      "op": "SHL"
    },
    "2825": {
      "op": "SUB"
    },
    "2826": {
      "fn": "GeVault.deposit",
      "offset": [
        9088,
        9113
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2827": {
      "fn": "GeVault.deposit",
      "offset": [
        9088,
        9113
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2828": {
      "fn": "GeVault.deposit",
      "offset": [
        9088,
        9113
      ],
      "op": "AND",
      "path": "0"
    },
    "2829": {
      "fn": "GeVault.deposit",
      "offset": [
        9088,
        9113
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2830": {
      "fn": "GeVault.deposit",
      "offset": [
        9114,
        9122
      ],
      "op": "AND",
      "path": "0"
    },
    "2831": {
      "fn": "GeVault.deposit",
      "offset": [
        9012,
        9082
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2832": {
      "fn": "GeVault.deposit",
      "offset": [
        9088,
        9113
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F5F"
    },
    "2835": {
      "fn": "GeVault.deposit",
      "jump": "i",
      "offset": [
        9088,
        9128
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2836": {
      "fn": "GeVault.deposit",
      "offset": [
        9088,
        9128
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2837": {
      "fn": "GeVault.deposit",
      "offset": [
        9134,
        9146
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2839": {
      "fn": "GeVault.deposit",
      "offset": [
        9206,
        9211
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2840": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2842": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2844": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2846": {
      "op": "SHL"
    },
    "2847": {
      "op": "SUB"
    },
    "2848": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9221
      ],
      "op": "AND",
      "path": "0"
    },
    "2849": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9221
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x313CE567"
    },
    "2854": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9223
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2856": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9223
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2857": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9223
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2858": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9223
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "2863": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9223
      ],
      "op": "AND",
      "path": "0"
    },
    "2864": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9223
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "2866": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9223
      ],
      "op": "SHL",
      "path": "0"
    },
    "2867": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9223
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2868": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9223
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2869": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9223
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2871": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9223
      ],
      "op": "ADD",
      "path": "0"
    },
    "2872": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9223
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2874": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9223
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2876": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9223
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2877": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9223
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2878": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9223
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2879": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9223
      ],
      "op": "SUB",
      "path": "0"
    },
    "2880": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9223
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2881": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9223
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2882": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9223
      ],
      "op": "GAS",
      "path": "0"
    },
    "2883": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9223
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "2884": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9223
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2885": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9223
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2886": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9223
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2887": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9223
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB54"
    },
    "2890": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9223
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2891": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9223
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2892": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9223
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2894": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9223
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2895": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9223
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "2896": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9223
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2897": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9223
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2899": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9223
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2900": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9223
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2901": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9223
      ],
      "op": "POP",
      "path": "0"
    },
    "2902": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9223
      ],
      "op": "POP",
      "path": "0"
    },
    "2903": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9223
      ],
      "op": "POP",
      "path": "0"
    },
    "2904": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9223
      ],
      "op": "POP",
      "path": "0"
    },
    "2905": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9223
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2907": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9223
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2908": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9223
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2909": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9223
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2911": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9223
      ],
      "op": "NOT",
      "path": "0"
    },
    "2912": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9223
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2914": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9223
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2915": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9223
      ],
      "op": "ADD",
      "path": "0"
    },
    "2916": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9223
      ],
      "op": "AND",
      "path": "0"
    },
    "2917": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9223
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2918": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9223
      ],
      "op": "ADD",
      "path": "0"
    },
    "2919": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9223
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2920": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9223
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2922": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9223
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2923": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9223
      ],
      "op": "POP",
      "path": "0"
    },
    "2924": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9223
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2925": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9223
      ],
      "op": "ADD",
      "path": "0"
    },
    "2926": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9223
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2927": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9223
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB78"
    },
    "2930": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9223
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2931": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9223
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2932": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9223
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41E9"
    },
    "2935": {
      "fn": "GeVault.deposit",
      "jump": "i",
      "offset": [
        9200,
        9223
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2936": {
      "fn": "GeVault.deposit",
      "offset": [
        9200,
        9223
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2937": {
      "fn": "GeVault.deposit",
      "offset": [
        9196,
        9223
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB83"
    },
    "2940": {
      "fn": "GeVault.deposit",
      "offset": [
        9196,
        9223
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2941": {
      "fn": "GeVault.deposit",
      "offset": [
        9196,
        9198
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "2943": {
      "fn": "GeVault.deposit",
      "offset": [
        9196,
        9223
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x42E8"
    },
    "2946": {
      "fn": "GeVault.deposit",
      "jump": "i",
      "offset": [
        9196,
        9223
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2947": {
      "fn": "GeVault.deposit",
      "offset": [
        9196,
        9223
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2948": {
      "fn": "GeVault.deposit",
      "offset": [
        9180,
        9192
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB8D"
    },
    "2951": {
      "fn": "GeVault.deposit",
      "offset": [
        9189,
        9192
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2952": {
      "fn": "GeVault.deposit",
      "offset": [
        9180,
        9186
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2953": {
      "fn": "GeVault.deposit",
      "offset": [
        9180,
        9192
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x42F7"
    },
    "2956": {
      "fn": "GeVault.deposit",
      "jump": "i",
      "offset": [
        9180,
        9192
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2957": {
      "fn": "GeVault.deposit",
      "offset": [
        9180,
        9192
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2958": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9155
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x11"
    },
    "2960": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9155
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2961": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9176
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2963": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9176
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2964": {
      "op": "PUSH4",
      "value": "0xB3596F07"
    },
    "2969": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2971": {
      "op": "SHL"
    },
    "2972": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9176
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2973": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9176
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2974": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2976": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2978": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2980": {
      "op": "SHL"
    },
    "2981": {
      "op": "SUB"
    },
    "2982": {
      "op": "DUP10"
    },
    "2983": {
      "op": "DUP2"
    },
    "2984": {
      "op": "AND"
    },
    "2985": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9176
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2987": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9176
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2988": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9176
      ],
      "op": "ADD",
      "path": "0"
    },
    "2989": {
      "op": "MSTORE"
    },
    "2990": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9155
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2991": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9155
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2992": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9155
      ],
      "op": "AND",
      "path": "0"
    },
    "2993": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9155
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2994": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9169
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xB3596F07"
    },
    "2999": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9169
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3000": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3002": {
      "op": "ADD"
    },
    "3003": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9176
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3005": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9176
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3007": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9176
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3008": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9176
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3009": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9176
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3010": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9176
      ],
      "op": "SUB",
      "path": "0"
    },
    "3011": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9176
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3012": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9176
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3013": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9176
      ],
      "op": "GAS",
      "path": "0"
    },
    "3014": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9176
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "3015": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9176
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3016": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9176
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3017": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9176
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3018": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9176
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBD7"
    },
    "3021": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9176
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3022": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9176
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3023": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9176
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3025": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9176
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3026": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9176
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "3027": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9176
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3028": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9176
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3030": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9176
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3031": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9176
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3032": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9176
      ],
      "op": "POP",
      "path": "0"
    },
    "3033": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9176
      ],
      "op": "POP",
      "path": "0"
    },
    "3034": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9176
      ],
      "op": "POP",
      "path": "0"
    },
    "3035": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9176
      ],
      "op": "POP",
      "path": "0"
    },
    "3036": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9176
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3038": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9176
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3039": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9176
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3040": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9176
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3042": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9176
      ],
      "op": "NOT",
      "path": "0"
    },
    "3043": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9176
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3045": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9176
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3046": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9176
      ],
      "op": "ADD",
      "path": "0"
    },
    "3047": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9176
      ],
      "op": "AND",
      "path": "0"
    },
    "3048": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9176
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3049": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9176
      ],
      "op": "ADD",
      "path": "0"
    },
    "3050": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9176
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3051": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9176
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3053": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9176
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3054": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9176
      ],
      "op": "POP",
      "path": "0"
    },
    "3055": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9176
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3056": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9176
      ],
      "op": "ADD",
      "path": "0"
    },
    "3057": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9176
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3058": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9176
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBFB"
    },
    "3061": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9176
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3062": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9176
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3063": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9176
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x430A"
    },
    "3066": {
      "fn": "GeVault.deposit",
      "jump": "i",
      "offset": [
        9149,
        9176
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3067": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9176
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3068": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9193
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC05"
    },
    "3071": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9193
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3072": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9193
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3073": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9193
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4192"
    },
    "3076": {
      "fn": "GeVault.deposit",
      "jump": "i",
      "offset": [
        9149,
        9193
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3077": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9193
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3078": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9223
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC0F"
    },
    "3081": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9223
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3082": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9223
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3083": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9223
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41BF"
    },
    "3086": {
      "fn": "GeVault.deposit",
      "jump": "i",
      "offset": [
        9149,
        9223
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3087": {
      "fn": "GeVault.deposit",
      "offset": [
        9149,
        9223
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3088": {
      "fn": "GeVault.deposit",
      "offset": [
        9134,
        9223
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3089": {
      "fn": "GeVault.deposit",
      "offset": [
        9134,
        9223
      ],
      "op": "POP",
      "path": "0"
    },
    "3090": {
      "fn": "GeVault.deposit",
      "offset": [
        9256,
        9264
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 16,
      "value": "0xC19"
    },
    "3093": {
      "fn": "GeVault.deposit",
      "offset": [
        9256,
        9262
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D46"
    },
    "3096": {
      "fn": "GeVault.deposit",
      "jump": "i",
      "offset": [
        9256,
        9264
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3097": {
      "fn": "GeVault.deposit",
      "offset": [
        9256,
        9264
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3098": {
      "fn": "GeVault.deposit",
      "offset": [
        9246,
        9264
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC23"
    },
    "3101": {
      "fn": "GeVault.deposit",
      "offset": [
        9246,
        9264
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3102": {
      "fn": "GeVault.deposit",
      "offset": [
        9246,
        9253
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3103": {
      "fn": "GeVault.deposit",
      "offset": [
        9246,
        9264
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4323"
    },
    "3106": {
      "fn": "GeVault.deposit",
      "jump": "i",
      "offset": [
        9246,
        9264
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3107": {
      "fn": "GeVault.deposit",
      "offset": [
        9246,
        9264
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3108": {
      "fn": "GeVault.deposit",
      "offset": [
        9237,
        9243
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xD"
    },
    "3110": {
      "fn": "GeVault.deposit",
      "offset": [
        9237,
        9243
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3111": {
      "branch": 162,
      "fn": "GeVault.deposit",
      "offset": [
        9237,
        9264
      ],
      "op": "GT",
      "path": "0"
    },
    "3112": {
      "fn": "GeVault.deposit",
      "offset": [
        9229,
        9289
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC6A"
    },
    "3115": {
      "branch": 162,
      "fn": "GeVault.deposit",
      "offset": [
        9229,
        9289
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3116": {
      "fn": "GeVault.deposit",
      "offset": [
        9229,
        9289
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3118": {
      "fn": "GeVault.deposit",
      "offset": [
        9229,
        9289
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3119": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3123": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3125": {
      "op": "SHL"
    },
    "3126": {
      "fn": "GeVault.deposit",
      "offset": [
        9229,
        9289
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3127": {
      "fn": "GeVault.deposit",
      "offset": [
        9229,
        9289
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3128": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3130": {
      "fn": "GeVault.deposit",
      "offset": [
        9229,
        9289
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3132": {
      "fn": "GeVault.deposit",
      "offset": [
        9229,
        9289
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3133": {
      "fn": "GeVault.deposit",
      "offset": [
        9229,
        9289
      ],
      "op": "ADD",
      "path": "0"
    },
    "3134": {
      "op": "MSTORE"
    },
    "3135": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "3137": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3139": {
      "op": "DUP3"
    },
    "3140": {
      "op": "ADD"
    },
    "3141": {
      "op": "MSTORE"
    },
    "3142": {
      "op": "PUSH20",
      "value": "0x11D1558E8813585E0810D85C0814995858DA1959"
    },
    "3163": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "3165": {
      "op": "SHL"
    },
    "3166": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3168": {
      "op": "DUP3"
    },
    "3169": {
      "op": "ADD"
    },
    "3170": {
      "op": "MSTORE"
    },
    "3171": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3173": {
      "op": "ADD"
    },
    "3174": {
      "fn": "GeVault.deposit",
      "offset": [
        9229,
        9289
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8AC"
    },
    "3177": {
      "op": "JUMP"
    },
    "3178": {
      "fn": "GeVault.deposit",
      "offset": [
        9229,
        9289
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3179": {
      "fn": "GeVault.deposit",
      "offset": [
        9296,
        9313
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3181": {
      "fn": "GeVault.deposit",
      "offset": [
        9316,
        9324
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC74"
    },
    "3184": {
      "fn": "GeVault.deposit",
      "offset": [
        9316,
        9322
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D46"
    },
    "3187": {
      "fn": "GeVault.deposit",
      "jump": "i",
      "offset": [
        9316,
        9324
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3188": {
      "fn": "GeVault.deposit",
      "offset": [
        9316,
        9324
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3189": {
      "fn": "GeVault.deposit",
      "offset": [
        9296,
        9324
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3190": {
      "fn": "GeVault.deposit",
      "offset": [
        9296,
        9324
      ],
      "op": "POP",
      "path": "0"
    },
    "3191": {
      "fn": "GeVault.deposit",
      "offset": [
        9330,
        9342
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3193": {
      "fn": "GeVault.deposit",
      "offset": [
        9345,
        9358
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC81"
    },
    "3196": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3316,
        3328
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "3198": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3316,
        3328
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "3199": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3316,
        3328
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3200": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3229,
        3335
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3201": {
      "fn": "GeVault.deposit",
      "offset": [
        9345,
        9358
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3202": {
      "fn": "GeVault.deposit",
      "offset": [
        9330,
        9358
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3203": {
      "op": "POP"
    },
    "3204": {
      "fn": "GeVault.deposit",
      "offset": [
        9412,
        9424
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3205": {
      "fn": "GeVault.deposit",
      "offset": [
        9412,
        9424
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3206": {
      "branch": 163,
      "fn": "GeVault.deposit",
      "offset": [
        9412,
        9424
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3207": {
      "fn": "GeVault.deposit",
      "offset": [
        9412,
        9445
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC8E"
    },
    "3210": {
      "branch": 163,
      "fn": "GeVault.deposit",
      "offset": [
        9412,
        9445
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3211": {
      "op": "POP"
    },
    "3212": {
      "fn": "GeVault.deposit",
      "offset": [
        9428,
        9445
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3213": {
      "branch": 164,
      "fn": "GeVault.deposit",
      "offset": [
        9428,
        9445
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3214": {
      "fn": "GeVault.deposit",
      "offset": [
        9412,
        9445
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3215": {
      "fn": "GeVault.deposit",
      "offset": [
        9408,
        9549
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3216": {
      "fn": "GeVault.deposit",
      "offset": [
        9408,
        9549
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCA9"
    },
    "3219": {
      "branch": 164,
      "fn": "GeVault.deposit",
      "offset": [
        9408,
        9549
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3220": {
      "fn": "GeVault.deposit",
      "offset": [
        9465,
        9479
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 17,
      "value": "0xCA2"
    },
    "3223": {
      "fn": "GeVault.deposit",
      "offset": [
        9465,
        9472
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3224": {
      "fn": "GeVault.deposit",
      "offset": [
        9475,
        9479
      ],
      "op": "PUSH5",
      "path": "0",
      "value": "0x2540BE400"
    },
    "3230": {
      "fn": "GeVault.deposit",
      "offset": [
        9465,
        9479
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4192"
    },
    "3233": {
      "fn": "GeVault.deposit",
      "jump": "i",
      "offset": [
        9465,
        9479
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3234": {
      "fn": "GeVault.deposit",
      "offset": [
        9465,
        9479
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3235": {
      "fn": "GeVault.deposit",
      "offset": [
        9453,
        9479
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "3236": {
      "fn": "GeVault.deposit",
      "offset": [
        9453,
        9479
      ],
      "op": "POP",
      "path": "0"
    },
    "3237": {
      "fn": "GeVault.deposit",
      "offset": [
        9408,
        9549
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC1"
    },
    "3240": {
      "fn": "GeVault.deposit",
      "offset": [
        9408,
        9549
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3241": {
      "fn": "GeVault.deposit",
      "offset": [
        9408,
        9549
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3242": {
      "fn": "GeVault.deposit",
      "offset": [
        9530,
        9542
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 18
    },
    "3243": {
      "fn": "GeVault.deposit",
      "offset": [
        9510,
        9527
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCB4"
    },
    "3246": {
      "fn": "GeVault.deposit",
      "offset": [
        9520,
        9527
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3247": {
      "fn": "GeVault.deposit",
      "offset": [
        9510,
        9517
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3248": {
      "fn": "GeVault.deposit",
      "offset": [
        9510,
        9527
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4192"
    },
    "3251": {
      "fn": "GeVault.deposit",
      "jump": "i",
      "offset": [
        9510,
        9527
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3252": {
      "fn": "GeVault.deposit",
      "offset": [
        9510,
        9527
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3253": {
      "fn": "GeVault.deposit",
      "offset": [
        9510,
        9542
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCBE"
    },
    "3256": {
      "fn": "GeVault.deposit",
      "offset": [
        9510,
        9542
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3257": {
      "fn": "GeVault.deposit",
      "offset": [
        9510,
        9542
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3258": {
      "fn": "GeVault.deposit",
      "offset": [
        9510,
        9542
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41BF"
    },
    "3261": {
      "fn": "GeVault.deposit",
      "jump": "i",
      "offset": [
        9510,
        9542
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3262": {
      "fn": "GeVault.deposit",
      "offset": [
        9510,
        9542
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3263": {
      "fn": "GeVault.deposit",
      "offset": [
        9498,
        9542
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "3264": {
      "fn": "GeVault.deposit",
      "offset": [
        9498,
        9542
      ],
      "op": "POP",
      "path": "0"
    },
    "3265": {
      "fn": "GeVault.deposit",
      "offset": [
        9408,
        9549
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3266": {
      "fn": "GeVault.deposit",
      "offset": [
        9559,
        9570
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 19,
      "value": "0xCC9"
    },
    "3269": {
      "fn": "GeVault.deposit",
      "offset": [
        9559,
        9568
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CF1"
    },
    "3272": {
      "fn": "GeVault.deposit",
      "jump": "i",
      "offset": [
        9559,
        9570
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3273": {
      "fn": "GeVault.deposit",
      "offset": [
        9559,
        9570
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3274": {
      "fn": "GeVault.deposit",
      "offset": [
        9596,
        9597
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 20,
      "value": "0x0"
    },
    "3276": {
      "fn": "GeVault.deposit",
      "offset": [
        9584,
        9593
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3277": {
      "branch": 165,
      "fn": "GeVault.deposit",
      "offset": [
        9584,
        9597
      ],
      "op": "GT",
      "path": "0"
    },
    "3278": {
      "fn": "GeVault.deposit",
      "offset": [
        9576,
        9625
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD19"
    },
    "3281": {
      "branch": 165,
      "fn": "GeVault.deposit",
      "offset": [
        9576,
        9625
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3282": {
      "fn": "GeVault.deposit",
      "offset": [
        9576,
        9625
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3284": {
      "fn": "GeVault.deposit",
      "offset": [
        9576,
        9625
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3285": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3289": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3291": {
      "op": "SHL"
    },
    "3292": {
      "fn": "GeVault.deposit",
      "offset": [
        9576,
        9625
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3293": {
      "fn": "GeVault.deposit",
      "offset": [
        9576,
        9625
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3294": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3296": {
      "fn": "GeVault.deposit",
      "offset": [
        9576,
        9625
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3298": {
      "fn": "GeVault.deposit",
      "offset": [
        9576,
        9625
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3299": {
      "fn": "GeVault.deposit",
      "offset": [
        9576,
        9625
      ],
      "op": "ADD",
      "path": "0"
    },
    "3300": {
      "op": "MSTORE"
    },
    "3301": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "3303": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3305": {
      "op": "DUP3"
    },
    "3306": {
      "op": "ADD"
    },
    "3307": {
      "op": "MSTORE"
    },
    "3308": {
      "op": "PUSH32",
      "value": "0x4745563A204E6F204C6971756964697479204164646564000000000000000000"
    },
    "3341": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3343": {
      "op": "DUP3"
    },
    "3344": {
      "op": "ADD"
    },
    "3345": {
      "op": "MSTORE"
    },
    "3346": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3348": {
      "op": "ADD"
    },
    "3349": {
      "fn": "GeVault.deposit",
      "offset": [
        9576,
        9625
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8AC"
    },
    "3352": {
      "op": "JUMP"
    },
    "3353": {
      "fn": "GeVault.deposit",
      "offset": [
        9576,
        9625
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3354": {
      "fn": "GeVault.deposit",
      "offset": [
        9631,
        9659
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 21,
      "value": "0xD23"
    },
    "3357": {
      "fn": "GeVault.deposit",
      "offset": [
        9637,
        9647
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3358": {
      "fn": "GeVault.deposit",
      "offset": [
        9649,
        9658
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3359": {
      "fn": "GeVault.deposit",
      "offset": [
        9631,
        9636
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F94"
    },
    "3362": {
      "fn": "GeVault.deposit",
      "jump": "i",
      "offset": [
        9631,
        9659
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3363": {
      "fn": "GeVault.deposit",
      "offset": [
        9631,
        9659
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3364": {
      "fn": "GeVault.deposit",
      "offset": [
        9674,
        9719
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 22,
      "value": "0x40"
    },
    "3366": {
      "fn": "GeVault.deposit",
      "offset": [
        9674,
        9719
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3367": {
      "fn": "GeVault.deposit",
      "offset": [
        9674,
        9719
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3368": {
      "op": "DUP8"
    },
    "3369": {
      "op": "DUP2"
    },
    "3370": {
      "op": "MSTORE"
    },
    "3371": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3373": {
      "op": "DUP2"
    },
    "3374": {
      "op": "ADD"
    },
    "3375": {
      "op": "DUP8"
    },
    "3376": {
      "op": "SWAP1"
    },
    "3377": {
      "op": "MSTORE"
    },
    "3378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3380": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3382": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3384": {
      "op": "SHL"
    },
    "3385": {
      "op": "SUB"
    },
    "3386": {
      "fn": "GeVault.deposit",
      "offset": [
        9674,
        9719
      ],
      "op": "DUP10",
      "path": "0"
    },
    "3387": {
      "fn": "GeVault.deposit",
      "offset": [
        9674,
        9719
      ],
      "op": "AND",
      "path": "0"
    },
    "3388": {
      "fn": "GeVault.deposit",
      "offset": [
        9674,
        9719
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3389": {
      "fn": "GeVault.deposit",
      "offset": [
        9682,
        9692
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3390": {
      "fn": "GeVault.deposit",
      "offset": [
        9682,
        9692
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3391": {
      "fn": "GeVault.deposit",
      "offset": [
        9674,
        9719
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7"
    },
    "3424": {
      "fn": "GeVault.deposit",
      "offset": [
        9674,
        9719
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3425": {
      "op": "ADD"
    },
    "3426": {
      "fn": "GeVault.deposit",
      "offset": [
        9674,
        9719
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3427": {
      "fn": "GeVault.deposit",
      "offset": [
        9674,
        9719
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3429": {
      "fn": "GeVault.deposit",
      "offset": [
        9674,
        9719
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3430": {
      "fn": "GeVault.deposit",
      "offset": [
        9674,
        9719
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3431": {
      "fn": "GeVault.deposit",
      "offset": [
        9674,
        9719
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3432": {
      "fn": "GeVault.deposit",
      "offset": [
        9674,
        9719
      ],
      "op": "SUB",
      "path": "0"
    },
    "3433": {
      "fn": "GeVault.deposit",
      "offset": [
        9674,
        9719
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3434": {
      "fn": "GeVault.deposit",
      "offset": [
        9674,
        9719
      ],
      "op": "LOG3",
      "path": "0"
    },
    "3435": {
      "op": "POP"
    },
    "3436": {
      "op": "POP"
    },
    "3437": {
      "offset": [
        1701,
        1702
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "3439": {
      "offset": [
        2628,
        2635
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x6"
    },
    "3441": {
      "offset": [
        2628,
        2650
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "3442": {
      "op": "POP"
    },
    "3443": {
      "fn": "GeVault.deposit",
      "offset": [
        8252,
        9724
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3444": {
      "fn": "GeVault.deposit",
      "offset": [
        8252,
        9724
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3445": {
      "fn": "GeVault.deposit",
      "offset": [
        8252,
        9724
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3446": {
      "op": "POP"
    },
    "3447": {
      "op": "POP"
    },
    "3448": {
      "op": "POP"
    },
    "3449": {
      "fn": "GeVault.deposit",
      "jump": "o",
      "offset": [
        8252,
        9724
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3450": {
      "fn": "GeVault.withdraw",
      "offset": [
        6983,
        8097
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3451": {
      "fn": "GeVault.withdraw",
      "offset": [
        7061,
        7072
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3453": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x2"
    },
    "3455": {
      "offset": [
        2325,
        2332
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x6"
    },
    "3457": {
      "fn": "GeVault.withdraw",
      "offset": [
        2325,
        2332
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3458": {
      "offset": [
        2325,
        2344
      ],
      "op": "SUB",
      "path": "19"
    },
    "3459": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xDCE"
    },
    "3462": {
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3463": {
      "fn": "GeVault.withdraw",
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3465": {
      "fn": "GeVault.withdraw",
      "offset": [
        2317,
        2380
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3466": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3470": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3472": {
      "op": "SHL"
    },
    "3473": {
      "offset": [
        2317,
        2380
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3474": {
      "fn": "GeVault.withdraw",
      "offset": [
        2317,
        2380
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3475": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3477": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "3479": {
      "fn": "GeVault.withdraw",
      "offset": [
        2317,
        2380
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3480": {
      "fn": "GeVault.withdraw",
      "offset": [
        2317,
        2380
      ],
      "op": "ADD",
      "path": "19"
    },
    "3481": {
      "op": "MSTORE"
    },
    "3482": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3484": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3486": {
      "op": "DUP3"
    },
    "3487": {
      "op": "ADD"
    },
    "3488": {
      "op": "MSTORE"
    },
    "3489": {
      "op": "PUSH32",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "3522": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3524": {
      "op": "DUP3"
    },
    "3525": {
      "op": "ADD"
    },
    "3526": {
      "op": "MSTORE"
    },
    "3527": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3529": {
      "op": "ADD"
    },
    "3530": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8AC"
    },
    "3533": {
      "op": "JUMP"
    },
    "3534": {
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3535": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x2"
    },
    "3537": {
      "offset": [
        2455,
        2462
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x6"
    },
    "3539": {
      "offset": [
        2455,
        2473
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "3540": {
      "fn": "GeVault.withdraw",
      "offset": [
        7088,
        7107
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 23,
      "value": "0xDDB"
    },
    "3543": {
      "fn": "GeVault.withdraw",
      "offset": [
        7088,
        7105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A44"
    },
    "3546": {
      "fn": "GeVault.withdraw",
      "jump": "i",
      "offset": [
        7088,
        7107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3547": {
      "branch": 166,
      "fn": "GeVault.withdraw",
      "offset": [
        7088,
        7107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3548": {
      "fn": "GeVault.withdraw",
      "offset": [
        7080,
        7129
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDF7"
    },
    "3551": {
      "branch": 166,
      "fn": "GeVault.withdraw",
      "offset": [
        7080,
        7129
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3552": {
      "fn": "GeVault.withdraw",
      "offset": [
        7080,
        7129
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3554": {
      "fn": "GeVault.withdraw",
      "offset": [
        7080,
        7129
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3555": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3559": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3561": {
      "op": "SHL"
    },
    "3562": {
      "fn": "GeVault.withdraw",
      "offset": [
        7080,
        7129
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3563": {
      "fn": "GeVault.withdraw",
      "offset": [
        7080,
        7129
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3564": {
      "fn": "GeVault.withdraw",
      "offset": [
        7080,
        7129
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3566": {
      "fn": "GeVault.withdraw",
      "offset": [
        7080,
        7129
      ],
      "op": "ADD",
      "path": "0"
    },
    "3567": {
      "fn": "GeVault.withdraw",
      "offset": [
        7080,
        7129
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8AC"
    },
    "3570": {
      "fn": "GeVault.withdraw",
      "offset": [
        7080,
        7129
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3571": {
      "fn": "GeVault.withdraw",
      "offset": [
        7080,
        7129
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4151"
    },
    "3574": {
      "fn": "GeVault.withdraw",
      "jump": "i",
      "offset": [
        7080,
        7129
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3575": {
      "fn": "GeVault.withdraw",
      "offset": [
        7080,
        7129
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3576": {
      "fn": "GeVault.withdraw",
      "offset": [
        7139,
        7148
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3577": {
      "fn": "GeVault.withdraw",
      "offset": [
        7152,
        7153
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3579": {
      "branch": 167,
      "fn": "GeVault.withdraw",
      "offset": [
        7139,
        7153
      ],
      "op": "SUB",
      "path": "0"
    },
    "3580": {
      "fn": "GeVault.withdraw",
      "offset": [
        7135,
        7188
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE12"
    },
    "3583": {
      "branch": 167,
      "fn": "GeVault.withdraw",
      "offset": [
        7135,
        7188
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3584": {
      "fn": "GeVault.withdraw",
      "offset": [
        7177,
        7187
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 24
    },
    "3585": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3467,
        3474
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3587": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3588": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3589": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3590": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3592": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3593": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3594": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3595": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3597": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3598": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "3599": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "3600": {
      "fn": "GeVault.withdraw",
      "offset": [
        7155,
        7188
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3601": {
      "fn": "GeVault.withdraw",
      "offset": [
        7155,
        7188
      ],
      "op": "POP",
      "path": "0"
    },
    "3602": {
      "fn": "GeVault.withdraw",
      "offset": [
        7135,
        7188
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3603": {
      "fn": "GeVault.withdraw",
      "offset": [
        7225,
        7235
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 25
    },
    "3604": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3467,
        3474
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3606": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3607": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3608": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3609": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3611": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3612": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3613": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3614": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3616": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3617": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "3618": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "3619": {
      "fn": "GeVault.withdraw",
      "offset": [
        7202,
        7211
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3620": {
      "fn": "GeVault.withdraw",
      "offset": [
        7202,
        7236
      ],
      "op": "GT",
      "path": "0"
    },
    "3621": {
      "branch": 168,
      "fn": "GeVault.withdraw",
      "offset": [
        7202,
        7236
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3622": {
      "fn": "GeVault.withdraw",
      "offset": [
        7194,
        7266
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE71"
    },
    "3625": {
      "branch": 168,
      "fn": "GeVault.withdraw",
      "offset": [
        7194,
        7266
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3626": {
      "fn": "GeVault.withdraw",
      "offset": [
        7194,
        7266
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3628": {
      "fn": "GeVault.withdraw",
      "offset": [
        7194,
        7266
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3629": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3633": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3635": {
      "op": "SHL"
    },
    "3636": {
      "fn": "GeVault.withdraw",
      "offset": [
        7194,
        7266
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3637": {
      "fn": "GeVault.withdraw",
      "offset": [
        7194,
        7266
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3638": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3640": {
      "fn": "GeVault.withdraw",
      "offset": [
        7194,
        7266
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3642": {
      "fn": "GeVault.withdraw",
      "offset": [
        7194,
        7266
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3643": {
      "fn": "GeVault.withdraw",
      "offset": [
        7194,
        7266
      ],
      "op": "ADD",
      "path": "0"
    },
    "3644": {
      "op": "MSTORE"
    },
    "3645": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "3647": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3649": {
      "op": "DUP3"
    },
    "3650": {
      "op": "ADD"
    },
    "3651": {
      "op": "MSTORE"
    },
    "3652": {
      "op": "PUSH32",
      "value": "0x4745563A20496E73756666696369656E742042616C616E636500000000000000"
    },
    "3685": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3687": {
      "op": "DUP3"
    },
    "3688": {
      "op": "ADD"
    },
    "3689": {
      "op": "MSTORE"
    },
    "3690": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3692": {
      "op": "ADD"
    },
    "3693": {
      "fn": "GeVault.withdraw",
      "offset": [
        7194,
        7266
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8AC"
    },
    "3696": {
      "op": "JUMP"
    },
    "3697": {
      "fn": "GeVault.withdraw",
      "offset": [
        7194,
        7266
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3698": {
      "fn": "GeVault.withdraw",
      "offset": [
        7292,
        7293
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 26,
      "value": "0x0"
    },
    "3700": {
      "fn": "GeVault.withdraw",
      "offset": [
        7280,
        7289
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3701": {
      "branch": 169,
      "fn": "GeVault.withdraw",
      "offset": [
        7280,
        7293
      ],
      "op": "GT",
      "path": "0"
    },
    "3702": {
      "fn": "GeVault.withdraw",
      "offset": [
        7272,
        7316
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEB6"
    },
    "3705": {
      "branch": 169,
      "fn": "GeVault.withdraw",
      "offset": [
        7272,
        7316
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3706": {
      "fn": "GeVault.withdraw",
      "offset": [
        7272,
        7316
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3708": {
      "fn": "GeVault.withdraw",
      "offset": [
        7272,
        7316
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3709": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3713": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3715": {
      "op": "SHL"
    },
    "3716": {
      "fn": "GeVault.withdraw",
      "offset": [
        7272,
        7316
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3717": {
      "fn": "GeVault.withdraw",
      "offset": [
        7272,
        7316
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3718": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3720": {
      "fn": "GeVault.withdraw",
      "offset": [
        7272,
        7316
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3722": {
      "fn": "GeVault.withdraw",
      "offset": [
        7272,
        7316
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3723": {
      "fn": "GeVault.withdraw",
      "offset": [
        7272,
        7316
      ],
      "op": "ADD",
      "path": "0"
    },
    "3724": {
      "op": "MSTORE"
    },
    "3725": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "3727": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3729": {
      "op": "DUP3"
    },
    "3730": {
      "op": "ADD"
    },
    "3731": {
      "op": "MSTORE"
    },
    "3732": {
      "op": "PUSH18",
      "value": "0x4745563A205769746864726177205A65726F"
    },
    "3751": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "3753": {
      "op": "SHL"
    },
    "3754": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3756": {
      "op": "DUP3"
    },
    "3757": {
      "op": "ADD"
    },
    "3758": {
      "op": "MSTORE"
    },
    "3759": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3761": {
      "op": "ADD"
    },
    "3762": {
      "fn": "GeVault.withdraw",
      "offset": [
        7272,
        7316
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8AC"
    },
    "3765": {
      "op": "JUMP"
    },
    "3766": {
      "fn": "GeVault.withdraw",
      "offset": [
        7272,
        7316
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3767": {
      "fn": "GeVault.withdraw",
      "offset": [
        7327,
        7344
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3769": {
      "fn": "GeVault.withdraw",
      "offset": [
        7347,
        7355
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEC0"
    },
    "3772": {
      "fn": "GeVault.withdraw",
      "offset": [
        7347,
        7353
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D46"
    },
    "3775": {
      "fn": "GeVault.withdraw",
      "jump": "i",
      "offset": [
        7347,
        7355
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3776": {
      "fn": "GeVault.withdraw",
      "offset": [
        7347,
        7355
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3777": {
      "fn": "GeVault.withdraw",
      "offset": [
        7327,
        7355
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3778": {
      "fn": "GeVault.withdraw",
      "offset": [
        7327,
        7355
      ],
      "op": "POP",
      "path": "0"
    },
    "3779": {
      "fn": "GeVault.withdraw",
      "offset": [
        7361,
        7373
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3781": {
      "fn": "GeVault.withdraw",
      "offset": [
        7403,
        7416
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xECD"
    },
    "3784": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3316,
        3328
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "3786": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3316,
        3328
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "3787": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3316,
        3328
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3788": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3229,
        3335
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3789": {
      "fn": "GeVault.withdraw",
      "offset": [
        7403,
        7416
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3790": {
      "fn": "GeVault.withdraw",
      "offset": [
        7376,
        7400
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xED7"
    },
    "3793": {
      "fn": "GeVault.withdraw",
      "offset": [
        7391,
        7400
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3794": {
      "fn": "GeVault.withdraw",
      "offset": [
        7376,
        7388
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3795": {
      "fn": "GeVault.withdraw",
      "offset": [
        7376,
        7400
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4192"
    },
    "3798": {
      "fn": "GeVault.withdraw",
      "jump": "i",
      "offset": [
        7376,
        7400
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3799": {
      "fn": "GeVault.withdraw",
      "offset": [
        7376,
        7400
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3800": {
      "fn": "GeVault.withdraw",
      "offset": [
        7376,
        7416
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEE1"
    },
    "3803": {
      "fn": "GeVault.withdraw",
      "offset": [
        7376,
        7416
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3804": {
      "fn": "GeVault.withdraw",
      "offset": [
        7376,
        7416
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3805": {
      "fn": "GeVault.withdraw",
      "offset": [
        7376,
        7416
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41BF"
    },
    "3808": {
      "fn": "GeVault.withdraw",
      "jump": "i",
      "offset": [
        7376,
        7416
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3809": {
      "fn": "GeVault.withdraw",
      "offset": [
        7376,
        7416
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3810": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7477
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 27,
      "value": "0x11"
    },
    "3812": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7477
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3813": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7498
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3815": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7498
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3816": {
      "op": "PUSH4",
      "value": "0xB3596F07"
    },
    "3821": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3823": {
      "op": "SHL"
    },
    "3824": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7498
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3825": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7498
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3826": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3830": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3832": {
      "op": "SHL"
    },
    "3833": {
      "op": "SUB"
    },
    "3834": {
      "op": "DUP8"
    },
    "3835": {
      "op": "DUP2"
    },
    "3836": {
      "op": "AND"
    },
    "3837": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7498
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3839": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7498
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3840": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7498
      ],
      "op": "ADD",
      "path": "0"
    },
    "3841": {
      "op": "MSTORE"
    },
    "3842": {
      "fn": "GeVault.withdraw",
      "offset": [
        7361,
        7416
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3843": {
      "fn": "GeVault.withdraw",
      "offset": [
        7361,
        7416
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3844": {
      "op": "POP"
    },
    "3845": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7477
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3846": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7477
      ],
      "op": "AND",
      "path": "0"
    },
    "3847": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7477
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3848": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7491
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xB3596F07"
    },
    "3853": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7491
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3854": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3856": {
      "op": "ADD"
    },
    "3857": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7498
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3859": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7498
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3861": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7498
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3862": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7498
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3863": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7498
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3864": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7498
      ],
      "op": "SUB",
      "path": "0"
    },
    "3865": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7498
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3866": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7498
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3867": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7498
      ],
      "op": "GAS",
      "path": "0"
    },
    "3868": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7498
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "3869": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7498
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3870": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7498
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3871": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7498
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3872": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7498
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF2D"
    },
    "3875": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7498
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3876": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7498
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3877": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7498
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3879": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7498
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3880": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7498
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "3881": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7498
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3882": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7498
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3884": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7498
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3885": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7498
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3886": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7498
      ],
      "op": "POP",
      "path": "0"
    },
    "3887": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7498
      ],
      "op": "POP",
      "path": "0"
    },
    "3888": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7498
      ],
      "op": "POP",
      "path": "0"
    },
    "3889": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7498
      ],
      "op": "POP",
      "path": "0"
    },
    "3890": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7498
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3892": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7498
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3893": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7498
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3894": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7498
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3896": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7498
      ],
      "op": "NOT",
      "path": "0"
    },
    "3897": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7498
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3899": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7498
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3900": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7498
      ],
      "op": "ADD",
      "path": "0"
    },
    "3901": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7498
      ],
      "op": "AND",
      "path": "0"
    },
    "3902": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7498
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3903": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7498
      ],
      "op": "ADD",
      "path": "0"
    },
    "3904": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7498
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3905": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7498
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3907": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7498
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3908": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7498
      ],
      "op": "POP",
      "path": "0"
    },
    "3909": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7498
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3910": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7498
      ],
      "op": "ADD",
      "path": "0"
    },
    "3911": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7498
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3912": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7498
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF51"
    },
    "3915": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7498
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3916": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7498
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3917": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7498
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x430A"
    },
    "3920": {
      "fn": "GeVault.withdraw",
      "jump": "i",
      "offset": [
        7471,
        7498
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3921": {
      "fn": "GeVault.withdraw",
      "offset": [
        7471,
        7498
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3922": {
      "fn": "GeVault.withdraw",
      "offset": [
        7451,
        7456
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3927": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3929": {
      "op": "SHL"
    },
    "3930": {
      "op": "SUB"
    },
    "3931": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7466
      ],
      "op": "AND",
      "path": "0"
    },
    "3932": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7466
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x313CE567"
    },
    "3937": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7468
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3939": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7468
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3940": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7468
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3941": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7468
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "3946": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7468
      ],
      "op": "AND",
      "path": "0"
    },
    "3947": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7468
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "3949": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7468
      ],
      "op": "SHL",
      "path": "0"
    },
    "3950": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7468
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3951": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7468
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3952": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7468
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3954": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7468
      ],
      "op": "ADD",
      "path": "0"
    },
    "3955": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7468
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3957": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7468
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3959": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7468
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3960": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7468
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3961": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7468
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3962": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7468
      ],
      "op": "SUB",
      "path": "0"
    },
    "3963": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7468
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3964": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7468
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3965": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7468
      ],
      "op": "GAS",
      "path": "0"
    },
    "3966": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7468
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "3967": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7468
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3968": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7468
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3969": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7468
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3970": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7468
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF8F"
    },
    "3973": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7468
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3974": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7468
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3975": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7468
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3977": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7468
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3978": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7468
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "3979": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7468
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3980": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7468
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3982": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7468
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3983": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7468
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3984": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7468
      ],
      "op": "POP",
      "path": "0"
    },
    "3985": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7468
      ],
      "op": "POP",
      "path": "0"
    },
    "3986": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7468
      ],
      "op": "POP",
      "path": "0"
    },
    "3987": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7468
      ],
      "op": "POP",
      "path": "0"
    },
    "3988": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7468
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3990": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7468
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3991": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7468
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3992": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7468
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3994": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7468
      ],
      "op": "NOT",
      "path": "0"
    },
    "3995": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7468
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3997": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7468
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3998": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7468
      ],
      "op": "ADD",
      "path": "0"
    },
    "3999": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7468
      ],
      "op": "AND",
      "path": "0"
    },
    "4000": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7468
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4001": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7468
      ],
      "op": "ADD",
      "path": "0"
    },
    "4002": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7468
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4003": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7468
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4005": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7468
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4006": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7468
      ],
      "op": "POP",
      "path": "0"
    },
    "4007": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7468
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4008": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7468
      ],
      "op": "ADD",
      "path": "0"
    },
    "4009": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7468
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4010": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7468
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFB3"
    },
    "4013": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7468
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4014": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7468
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4015": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7468
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41E9"
    },
    "4018": {
      "fn": "GeVault.withdraw",
      "jump": "i",
      "offset": [
        7445,
        7468
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4019": {
      "fn": "GeVault.withdraw",
      "offset": [
        7445,
        7468
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4020": {
      "fn": "GeVault.withdraw",
      "offset": [
        7441,
        7468
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFBE"
    },
    "4023": {
      "fn": "GeVault.withdraw",
      "offset": [
        7441,
        7468
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4024": {
      "fn": "GeVault.withdraw",
      "offset": [
        7441,
        7443
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "4026": {
      "fn": "GeVault.withdraw",
      "offset": [
        7441,
        7468
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x42E8"
    },
    "4029": {
      "fn": "GeVault.withdraw",
      "jump": "i",
      "offset": [
        7441,
        7468
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4030": {
      "fn": "GeVault.withdraw",
      "offset": [
        7441,
        7468
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4031": {
      "fn": "GeVault.withdraw",
      "offset": [
        7431,
        7468
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFC8"
    },
    "4034": {
      "fn": "GeVault.withdraw",
      "offset": [
        7431,
        7468
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4035": {
      "fn": "GeVault.withdraw",
      "offset": [
        7431,
        7438
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4036": {
      "fn": "GeVault.withdraw",
      "offset": [
        7431,
        7468
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4192"
    },
    "4039": {
      "fn": "GeVault.withdraw",
      "jump": "i",
      "offset": [
        7431,
        7468
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4040": {
      "fn": "GeVault.withdraw",
      "offset": [
        7431,
        7468
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4041": {
      "fn": "GeVault.withdraw",
      "offset": [
        7431,
        7498
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFD2"
    },
    "4044": {
      "fn": "GeVault.withdraw",
      "offset": [
        7431,
        7498
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4045": {
      "fn": "GeVault.withdraw",
      "offset": [
        7431,
        7498
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4046": {
      "fn": "GeVault.withdraw",
      "offset": [
        7431,
        7498
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41BF"
    },
    "4049": {
      "fn": "GeVault.withdraw",
      "jump": "i",
      "offset": [
        7431,
        7498
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4050": {
      "fn": "GeVault.withdraw",
      "offset": [
        7431,
        7498
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4051": {
      "fn": "GeVault.withdraw",
      "offset": [
        7560,
        7566
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "4053": {
      "fn": "GeVault.withdraw",
      "offset": [
        7560,
        7566
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4054": {
      "fn": "GeVault.withdraw",
      "offset": [
        7422,
        7498
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4055": {
      "fn": "GeVault.withdraw",
      "offset": [
        7422,
        7498
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "4056": {
      "op": "POP"
    },
    "4057": {
      "fn": "GeVault.withdraw",
      "offset": [
        7504,
        7512
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4059": {
      "fn": "GeVault.withdraw",
      "offset": [
        7504,
        7512
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4060": {
      "fn": "GeVault.withdraw",
      "offset": [
        7571,
        7574
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2710"
    },
    "4063": {
      "fn": "GeVault.withdraw",
      "offset": [
        7571,
        7574
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4064": {
      "fn": "GeVault.withdraw",
      "offset": [
        7524,
        7568
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFF6"
    },
    "4067": {
      "fn": "GeVault.withdraw",
      "offset": [
        7524,
        7568
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4068": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4070": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4072": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4074": {
      "op": "SHL"
    },
    "4075": {
      "op": "SUB"
    },
    "4076": {
      "fn": "GeVault.withdraw",
      "offset": [
        7543,
        7567
      ],
      "op": "DUP9",
      "path": "0"
    },
    "4077": {
      "fn": "GeVault.withdraw",
      "offset": [
        7543,
        7567
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4078": {
      "fn": "GeVault.withdraw",
      "offset": [
        7543,
        7567
      ],
      "op": "AND",
      "path": "0"
    },
    "4079": {
      "fn": "GeVault.withdraw",
      "offset": [
        7560,
        7566
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4080": {
      "fn": "GeVault.withdraw",
      "offset": [
        7560,
        7566
      ],
      "op": "AND",
      "path": "0"
    },
    "4081": {
      "fn": "GeVault.withdraw",
      "offset": [
        7543,
        7567
      ],
      "op": "EQ",
      "path": "0"
    },
    "4082": {
      "fn": "GeVault.withdraw",
      "offset": [
        7524,
        7542
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2599"
    },
    "4085": {
      "fn": "GeVault.withdraw",
      "jump": "i",
      "offset": [
        7524,
        7568
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4086": {
      "fn": "GeVault.withdraw",
      "offset": [
        7524,
        7568
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4087": {
      "fn": "GeVault.withdraw",
      "offset": [
        7515,
        7568
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1000"
    },
    "4090": {
      "fn": "GeVault.withdraw",
      "offset": [
        7515,
        7568
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4091": {
      "fn": "GeVault.withdraw",
      "offset": [
        7515,
        7521
      ],
      "op": "DUP7",
      "path": "0"
    },
    "4092": {
      "fn": "GeVault.withdraw",
      "offset": [
        7515,
        7568
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4192"
    },
    "4095": {
      "fn": "GeVault.withdraw",
      "jump": "i",
      "offset": [
        7515,
        7568
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4096": {
      "fn": "GeVault.withdraw",
      "offset": [
        7515,
        7568
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4097": {
      "fn": "GeVault.withdraw",
      "offset": [
        7515,
        7574
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100A"
    },
    "4100": {
      "fn": "GeVault.withdraw",
      "offset": [
        7515,
        7574
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4101": {
      "fn": "GeVault.withdraw",
      "offset": [
        7515,
        7574
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4102": {
      "fn": "GeVault.withdraw",
      "offset": [
        7515,
        7574
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41BF"
    },
    "4105": {
      "fn": "GeVault.withdraw",
      "jump": "i",
      "offset": [
        7515,
        7574
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4106": {
      "fn": "GeVault.withdraw",
      "offset": [
        7515,
        7574
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4107": {
      "fn": "GeVault.withdraw",
      "offset": [
        7504,
        7574
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4108": {
      "fn": "GeVault.withdraw",
      "offset": [
        7504,
        7574
      ],
      "op": "POP",
      "path": "0"
    },
    "4109": {
      "fn": "GeVault.withdraw",
      "offset": [
        7585,
        7613
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 28,
      "value": "0x1016"
    },
    "4112": {
      "fn": "GeVault.withdraw",
      "offset": [
        7591,
        7601
      ],
      "op": "CALLER",
      "path": "0"
    },
    "4113": {
      "fn": "GeVault.withdraw",
      "offset": [
        7603,
        7612
      ],
      "op": "DUP8",
      "path": "0"
    },
    "4114": {
      "fn": "GeVault.withdraw",
      "offset": [
        7585,
        7590
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3073"
    },
    "4117": {
      "fn": "GeVault.withdraw",
      "jump": "i",
      "offset": [
        7585,
        7613
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4118": {
      "fn": "GeVault.withdraw",
      "offset": [
        7585,
        7613
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4119": {
      "fn": "GeVault.withdraw",
      "offset": [
        7619,
        7639
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 29,
      "value": "0x101E"
    },
    "4122": {
      "fn": "GeVault.withdraw",
      "offset": [
        7619,
        7637
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31C1"
    },
    "4125": {
      "fn": "GeVault.withdraw",
      "jump": "i",
      "offset": [
        7619,
        7639
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4126": {
      "fn": "GeVault.withdraw",
      "offset": [
        7619,
        7639
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4127": {
      "fn": "GeVault.withdraw",
      "offset": [
        7671,
        7679
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 30,
      "value": "0xE"
    },
    "4129": {
      "fn": "GeVault.withdraw",
      "offset": [
        7671,
        7679
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4130": {
      "fn": "GeVault.withdraw",
      "offset": [
        7645,
        7685
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1038"
    },
    "4133": {
      "fn": "GeVault.withdraw",
      "offset": [
        7645,
        7685
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4138": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4140": {
      "op": "SHL"
    },
    "4141": {
      "op": "SUB"
    },
    "4142": {
      "fn": "GeVault.withdraw",
      "offset": [
        7645,
        7670
      ],
      "op": "DUP8",
      "path": "0"
    },
    "4143": {
      "fn": "GeVault.withdraw",
      "offset": [
        7645,
        7670
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4144": {
      "fn": "GeVault.withdraw",
      "offset": [
        7645,
        7670
      ],
      "op": "AND",
      "path": "0"
    },
    "4145": {
      "fn": "GeVault.withdraw",
      "offset": [
        7645,
        7670
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4146": {
      "fn": "GeVault.withdraw",
      "offset": [
        7671,
        7679
      ],
      "op": "AND",
      "path": "0"
    },
    "4147": {
      "fn": "GeVault.withdraw",
      "offset": [
        7681,
        7684
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4148": {
      "fn": "GeVault.withdraw",
      "offset": [
        7645,
        7670
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F5F"
    },
    "4151": {
      "fn": "GeVault.withdraw",
      "jump": "i",
      "offset": [
        7645,
        7685
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4152": {
      "fn": "GeVault.withdraw",
      "offset": [
        7645,
        7685
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4153": {
      "fn": "GeVault.withdraw",
      "offset": [
        7691,
        7699
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4155": {
      "fn": "GeVault.withdraw",
      "offset": [
        7702,
        7714
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1044"
    },
    "4158": {
      "fn": "GeVault.withdraw",
      "offset": [
        7711,
        7714
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4159": {
      "fn": "GeVault.withdraw",
      "offset": [
        7702,
        7708
      ],
      "op": "DUP7",
      "path": "0"
    },
    "4160": {
      "fn": "GeVault.withdraw",
      "offset": [
        7702,
        7714
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x42F7"
    },
    "4163": {
      "fn": "GeVault.withdraw",
      "jump": "i",
      "offset": [
        7702,
        7714
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4164": {
      "fn": "GeVault.withdraw",
      "offset": [
        7702,
        7714
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4165": {
      "fn": "GeVault.withdraw",
      "offset": [
        7742,
        7746
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x12"
    },
    "4167": {
      "fn": "GeVault.withdraw",
      "offset": [
        7742,
        7746
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4168": {
      "fn": "GeVault.withdraw",
      "offset": [
        7691,
        7714
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4169": {
      "fn": "GeVault.withdraw",
      "offset": [
        7691,
        7714
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4170": {
      "op": "POP"
    },
    "4171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4173": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4175": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4177": {
      "op": "SHL"
    },
    "4178": {
      "op": "SUB"
    },
    "4179": {
      "fn": "GeVault.withdraw",
      "offset": [
        7742,
        7746
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4180": {
      "fn": "GeVault.withdraw",
      "offset": [
        7742,
        7746
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4181": {
      "fn": "GeVault.withdraw",
      "offset": [
        7742,
        7746
      ],
      "op": "AND",
      "path": "0"
    },
    "4182": {
      "fn": "GeVault.withdraw",
      "offset": [
        7725,
        7747
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4183": {
      "fn": "GeVault.withdraw",
      "offset": [
        7725,
        7747
      ],
      "op": "DUP8",
      "path": "0"
    },
    "4184": {
      "fn": "GeVault.withdraw",
      "offset": [
        7725,
        7747
      ],
      "op": "AND",
      "path": "0"
    },
    "4185": {
      "branch": 170,
      "fn": "GeVault.withdraw",
      "offset": [
        7725,
        7747
      ],
      "op": "SUB",
      "path": "0"
    },
    "4186": {
      "fn": "GeVault.withdraw",
      "offset": [
        7721,
        7889
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10EE"
    },
    "4189": {
      "branch": 170,
      "fn": "GeVault.withdraw",
      "offset": [
        7721,
        7889
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4190": {
      "fn": "GeVault.withdraw",
      "offset": [
        7756,
        7760
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 31,
      "value": "0x12"
    },
    "4192": {
      "fn": "GeVault.withdraw",
      "offset": [
        7756,
        7760
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4193": {
      "fn": "GeVault.withdraw",
      "offset": [
        7756,
        7774
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4195": {
      "fn": "GeVault.withdraw",
      "offset": [
        7756,
        7774
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4196": {
      "op": "PUSH4",
      "value": "0x2E1A7D4D"
    },
    "4201": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4203": {
      "op": "SHL"
    },
    "4204": {
      "fn": "GeVault.withdraw",
      "offset": [
        7756,
        7774
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4205": {
      "fn": "GeVault.withdraw",
      "offset": [
        7756,
        7774
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4206": {
      "fn": "GeVault.withdraw",
      "offset": [
        7756,
        7774
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4208": {
      "fn": "GeVault.withdraw",
      "offset": [
        7756,
        7774
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4209": {
      "fn": "GeVault.withdraw",
      "offset": [
        7756,
        7774
      ],
      "op": "ADD",
      "path": "0"
    },
    "4210": {
      "op": "DUP4"
    },
    "4211": {
      "op": "SWAP1"
    },
    "4212": {
      "op": "MSTORE"
    },
    "4213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4215": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4217": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4219": {
      "op": "SHL"
    },
    "4220": {
      "op": "SUB"
    },
    "4221": {
      "fn": "GeVault.withdraw",
      "offset": [
        7756,
        7760
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4222": {
      "fn": "GeVault.withdraw",
      "offset": [
        7756,
        7760
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4223": {
      "fn": "GeVault.withdraw",
      "offset": [
        7756,
        7760
      ],
      "op": "AND",
      "path": "0"
    },
    "4224": {
      "fn": "GeVault.withdraw",
      "offset": [
        7756,
        7760
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4225": {
      "fn": "GeVault.withdraw",
      "offset": [
        7756,
        7769
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x2E1A7D4D"
    },
    "4230": {
      "fn": "GeVault.withdraw",
      "offset": [
        7756,
        7769
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4231": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4233": {
      "op": "ADD"
    },
    "4234": {
      "fn": "GeVault.withdraw",
      "offset": [
        7756,
        7774
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4236": {
      "fn": "GeVault.withdraw",
      "offset": [
        7756,
        7774
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4238": {
      "fn": "GeVault.withdraw",
      "offset": [
        7756,
        7774
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4239": {
      "fn": "GeVault.withdraw",
      "offset": [
        7756,
        7774
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4240": {
      "fn": "GeVault.withdraw",
      "offset": [
        7756,
        7774
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4241": {
      "fn": "GeVault.withdraw",
      "offset": [
        7756,
        7774
      ],
      "op": "SUB",
      "path": "0"
    },
    "4242": {
      "fn": "GeVault.withdraw",
      "offset": [
        7756,
        7774
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4243": {
      "fn": "GeVault.withdraw",
      "offset": [
        7756,
        7774
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4245": {
      "fn": "GeVault.withdraw",
      "offset": [
        7756,
        7774
      ],
      "op": "DUP8",
      "path": "0"
    },
    "4246": {
      "fn": "GeVault.withdraw",
      "offset": [
        7756,
        7774
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4247": {
      "fn": "GeVault.withdraw",
      "offset": [
        7756,
        7774
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "4248": {
      "fn": "GeVault.withdraw",
      "offset": [
        7756,
        7774
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4249": {
      "fn": "GeVault.withdraw",
      "offset": [
        7756,
        7774
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4250": {
      "fn": "GeVault.withdraw",
      "offset": [
        7756,
        7774
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4251": {
      "fn": "GeVault.withdraw",
      "offset": [
        7756,
        7774
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10A3"
    },
    "4254": {
      "fn": "GeVault.withdraw",
      "offset": [
        7756,
        7774
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4255": {
      "fn": "GeVault.withdraw",
      "offset": [
        7756,
        7774
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4257": {
      "fn": "GeVault.withdraw",
      "offset": [
        7756,
        7774
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4258": {
      "fn": "GeVault.withdraw",
      "offset": [
        7756,
        7774
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4259": {
      "fn": "GeVault.withdraw",
      "offset": [
        7756,
        7774
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4260": {
      "fn": "GeVault.withdraw",
      "offset": [
        7756,
        7774
      ],
      "op": "POP",
      "path": "0"
    },
    "4261": {
      "fn": "GeVault.withdraw",
      "offset": [
        7756,
        7774
      ],
      "op": "GAS",
      "path": "0"
    },
    "4262": {
      "fn": "GeVault.withdraw",
      "offset": [
        7756,
        7774
      ],
      "op": "CALL",
      "path": "0"
    },
    "4263": {
      "fn": "GeVault.withdraw",
      "offset": [
        7756,
        7774
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4264": {
      "fn": "GeVault.withdraw",
      "offset": [
        7756,
        7774
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4265": {
      "fn": "GeVault.withdraw",
      "offset": [
        7756,
        7774
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4266": {
      "fn": "GeVault.withdraw",
      "offset": [
        7756,
        7774
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10B7"
    },
    "4269": {
      "fn": "GeVault.withdraw",
      "offset": [
        7756,
        7774
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4270": {
      "fn": "GeVault.withdraw",
      "offset": [
        7756,
        7774
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4271": {
      "fn": "GeVault.withdraw",
      "offset": [
        7756,
        7774
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4273": {
      "fn": "GeVault.withdraw",
      "offset": [
        7756,
        7774
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4274": {
      "fn": "GeVault.withdraw",
      "offset": [
        7756,
        7774
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "4275": {
      "fn": "GeVault.withdraw",
      "offset": [
        7756,
        7774
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4276": {
      "fn": "GeVault.withdraw",
      "offset": [
        7756,
        7774
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4278": {
      "fn": "GeVault.withdraw",
      "offset": [
        7756,
        7774
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4279": {
      "fn": "GeVault.withdraw",
      "offset": [
        7756,
        7774
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4280": {
      "op": "POP"
    },
    "4281": {
      "op": "POP"
    },
    "4282": {
      "fn": "GeVault.withdraw",
      "offset": [
        7782,
        7815
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 32,
      "value": "0x40"
    },
    "4284": {
      "fn": "GeVault.withdraw",
      "offset": [
        7782,
        7815
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4285": {
      "fn": "GeVault.withdraw",
      "offset": [
        7790,
        7800
      ],
      "op": "CALLER",
      "path": "0"
    },
    "4286": {
      "fn": "GeVault.withdraw",
      "offset": [
        7790,
        7800
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4287": {
      "op": "POP"
    },
    "4288": {
      "fn": "GeVault.withdraw",
      "offset": [
        7782,
        7815
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4289": {
      "fn": "GeVault.withdraw",
      "offset": [
        7782,
        7815
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4290": {
      "fn": "GeVault.withdraw",
      "offset": [
        7782,
        7815
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8FC"
    },
    "4293": {
      "fn": "GeVault.withdraw",
      "offset": [
        7782,
        7815
      ],
      "op": "MUL",
      "path": "0"
    },
    "4294": {
      "fn": "GeVault.withdraw",
      "offset": [
        7782,
        7815
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4295": {
      "op": "POP"
    },
    "4296": {
      "fn": "GeVault.withdraw",
      "offset": [
        7811,
        7814
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4297": {
      "fn": "GeVault.withdraw",
      "offset": [
        7811,
        7814
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4298": {
      "fn": "GeVault.withdraw",
      "offset": [
        7782,
        7815
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4300": {
      "fn": "GeVault.withdraw",
      "offset": [
        7782,
        7815
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4301": {
      "fn": "GeVault.withdraw",
      "offset": [
        7782,
        7815
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4302": {
      "fn": "GeVault.withdraw",
      "offset": [
        7782,
        7815
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4303": {
      "fn": "GeVault.withdraw",
      "offset": [
        7811,
        7814
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4304": {
      "fn": "GeVault.withdraw",
      "offset": [
        7790,
        7800
      ],
      "op": "DUP9",
      "path": "0"
    },
    "4305": {
      "fn": "GeVault.withdraw",
      "offset": [
        7782,
        7815
      ],
      "op": "DUP9",
      "path": "0"
    },
    "4306": {
      "fn": "GeVault.withdraw",
      "offset": [
        7782,
        7815
      ],
      "op": "CALL",
      "path": "0"
    },
    "4307": {
      "fn": "GeVault.withdraw",
      "offset": [
        7782,
        7815
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "4308": {
      "fn": "GeVault.withdraw",
      "offset": [
        7782,
        7815
      ],
      "op": "POP",
      "path": "0"
    },
    "4309": {
      "fn": "GeVault.withdraw",
      "offset": [
        7782,
        7815
      ],
      "op": "POP",
      "path": "0"
    },
    "4310": {
      "fn": "GeVault.withdraw",
      "offset": [
        7782,
        7815
      ],
      "op": "POP",
      "path": "0"
    },
    "4311": {
      "fn": "GeVault.withdraw",
      "offset": [
        7782,
        7815
      ],
      "op": "POP",
      "path": "0"
    },
    "4312": {
      "fn": "GeVault.withdraw",
      "offset": [
        7782,
        7815
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4313": {
      "fn": "GeVault.withdraw",
      "offset": [
        7782,
        7815
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4314": {
      "fn": "GeVault.withdraw",
      "offset": [
        7782,
        7815
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4315": {
      "fn": "GeVault.withdraw",
      "offset": [
        7782,
        7815
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10E8"
    },
    "4318": {
      "fn": "GeVault.withdraw",
      "offset": [
        7782,
        7815
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4319": {
      "fn": "GeVault.withdraw",
      "offset": [
        7782,
        7815
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4320": {
      "fn": "GeVault.withdraw",
      "offset": [
        7782,
        7815
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4322": {
      "fn": "GeVault.withdraw",
      "offset": [
        7782,
        7815
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4323": {
      "fn": "GeVault.withdraw",
      "offset": [
        7782,
        7815
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "4324": {
      "fn": "GeVault.withdraw",
      "offset": [
        7782,
        7815
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4325": {
      "fn": "GeVault.withdraw",
      "offset": [
        7782,
        7815
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4327": {
      "fn": "GeVault.withdraw",
      "offset": [
        7782,
        7815
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4328": {
      "fn": "GeVault.withdraw",
      "offset": [
        7782,
        7815
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4329": {
      "fn": "GeVault.withdraw",
      "offset": [
        7782,
        7815
      ],
      "op": "POP",
      "path": "0"
    },
    "4330": {
      "fn": "GeVault.withdraw",
      "offset": [
        7721,
        7889
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1102"
    },
    "4333": {
      "fn": "GeVault.withdraw",
      "offset": [
        7721,
        7889
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4334": {
      "fn": "GeVault.withdraw",
      "offset": [
        7721,
        7889
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4335": {
      "fn": "GeVault.withdraw",
      "offset": [
        7840,
        7882
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 33,
      "value": "0x1102"
    },
    "4338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4342": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4344": {
      "op": "SHL"
    },
    "4345": {
      "op": "SUB"
    },
    "4346": {
      "fn": "GeVault.withdraw",
      "offset": [
        7840,
        7865
      ],
      "op": "DUP8",
      "path": "0"
    },
    "4347": {
      "fn": "GeVault.withdraw",
      "offset": [
        7840,
        7865
      ],
      "op": "AND",
      "path": "0"
    },
    "4348": {
      "fn": "GeVault.withdraw",
      "offset": [
        7866,
        7876
      ],
      "op": "CALLER",
      "path": "0"
    },
    "4349": {
      "fn": "GeVault.withdraw",
      "offset": [
        7878,
        7881
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4350": {
      "fn": "GeVault.withdraw",
      "offset": [
        7840,
        7865
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F5F"
    },
    "4353": {
      "fn": "GeVault.withdraw",
      "jump": "i",
      "offset": [
        7840,
        7882
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4354": {
      "fn": "GeVault.withdraw",
      "offset": [
        7840,
        7882
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4355": {
      "fn": "GeVault.withdraw",
      "offset": [
        8010,
        8019
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "4357": {
      "fn": "GeVault.withdraw",
      "offset": [
        8010,
        8019
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4360": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4362": {
      "op": "SHL"
    },
    "4363": {
      "fn": "GeVault.withdraw",
      "offset": [
        8010,
        8019
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4364": {
      "fn": "GeVault.withdraw",
      "offset": [
        8010,
        8019
      ],
      "op": "DIV",
      "path": "0"
    },
    "4365": {
      "fn": "GeVault.withdraw",
      "offset": [
        8010,
        8019
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "4367": {
      "branch": 171,
      "fn": "GeVault.withdraw",
      "offset": [
        8010,
        8019
      ],
      "op": "AND",
      "path": "0"
    },
    "4368": {
      "fn": "GeVault.withdraw",
      "offset": [
        8006,
        8035
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4369": {
      "fn": "GeVault.withdraw",
      "offset": [
        8006,
        8035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x111C"
    },
    "4372": {
      "branch": 171,
      "fn": "GeVault.withdraw",
      "offset": [
        8006,
        8035
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4373": {
      "fn": "GeVault.withdraw",
      "offset": [
        8021,
        8035
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 34,
      "value": "0x111C"
    },
    "4376": {
      "fn": "GeVault.withdraw",
      "offset": [
        8021,
        8033
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31E9"
    },
    "4379": {
      "fn": "GeVault.withdraw",
      "jump": "i",
      "offset": [
        8021,
        8035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4380": {
      "fn": "GeVault.withdraw",
      "offset": [
        8021,
        8035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4381": {
      "fn": "GeVault.withdraw",
      "offset": [
        8046,
        8092
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 35,
      "value": "0x40"
    },
    "4383": {
      "fn": "GeVault.withdraw",
      "offset": [
        8046,
        8092
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4384": {
      "fn": "GeVault.withdraw",
      "offset": [
        8046,
        8092
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4385": {
      "op": "DUP7"
    },
    "4386": {
      "op": "DUP2"
    },
    "4387": {
      "op": "MSTORE"
    },
    "4388": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4390": {
      "op": "DUP2"
    },
    "4391": {
      "op": "ADD"
    },
    "4392": {
      "op": "DUP10"
    },
    "4393": {
      "op": "SWAP1"
    },
    "4394": {
      "op": "MSTORE"
    },
    "4395": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4397": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4399": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4401": {
      "op": "SHL"
    },
    "4402": {
      "op": "SUB"
    },
    "4403": {
      "fn": "GeVault.withdraw",
      "offset": [
        8046,
        8092
      ],
      "op": "DUP9",
      "path": "0"
    },
    "4404": {
      "fn": "GeVault.withdraw",
      "offset": [
        8046,
        8092
      ],
      "op": "AND",
      "path": "0"
    },
    "4405": {
      "fn": "GeVault.withdraw",
      "offset": [
        8046,
        8092
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4406": {
      "fn": "GeVault.withdraw",
      "offset": [
        8055,
        8065
      ],
      "op": "CALLER",
      "path": "0"
    },
    "4407": {
      "fn": "GeVault.withdraw",
      "offset": [
        8055,
        8065
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4408": {
      "fn": "GeVault.withdraw",
      "offset": [
        8046,
        8092
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xF341246ADAAC6F497BC2A656F546AB9E182111D630394F0C57C710A59A2CB567"
    },
    "4441": {
      "fn": "GeVault.withdraw",
      "offset": [
        8046,
        8092
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4442": {
      "op": "ADD"
    },
    "4443": {
      "fn": "GeVault.withdraw",
      "offset": [
        8046,
        8092
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD62"
    },
    "4446": {
      "op": "JUMP"
    },
    "4447": {
      "fn": "ERC20.name",
      "offset": [
        2141,
        2239
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4448": {
      "fn": "ERC20.name",
      "offset": [
        2195,
        2208
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x60"
    },
    "4450": {
      "fn": "ERC20.name",
      "offset": [
        2227,
        2232
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 36,
      "value": "0x3"
    },
    "4452": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4453": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4454": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x116E"
    },
    "4457": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4458": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4336"
    },
    "4461": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2220,
        2232
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4462": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4463": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4464": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1F"
    },
    "4466": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "ADD",
      "path": "20"
    },
    "4467": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4469": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4470": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4471": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DIV",
      "path": "20"
    },
    "4472": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "MUL",
      "path": "20"
    },
    "4473": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4475": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "ADD",
      "path": "20"
    },
    "4476": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4478": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4479": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4480": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4481": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "ADD",
      "path": "20"
    },
    "4482": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4484": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4485": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4486": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "4487": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4488": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4489": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4490": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4491": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4492": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4494": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "ADD",
      "path": "20"
    },
    "4495": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4496": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4497": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4498": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x119A"
    },
    "4501": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4502": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4336"
    },
    "4505": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2220,
        2232
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4506": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4507": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4508": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4509": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x11E7"
    },
    "4512": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4513": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4514": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1F"
    },
    "4516": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "LT",
      "path": "20"
    },
    "4517": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x11BC"
    },
    "4520": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4521": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "4524": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4525": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4526": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4527": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DIV",
      "path": "20"
    },
    "4528": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "MUL",
      "path": "20"
    },
    "4529": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4530": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4531": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4532": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4534": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "ADD",
      "path": "20"
    },
    "4535": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4536": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x11E7"
    },
    "4539": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4540": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4541": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4542": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "ADD",
      "path": "20"
    },
    "4543": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4544": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4545": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4547": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4548": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4550": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4552": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "4553": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4554": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4555": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4556": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4557": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4558": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4559": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4560": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "4562": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "ADD",
      "path": "20"
    },
    "4563": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4564": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4566": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "ADD",
      "path": "20"
    },
    "4567": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4568": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4569": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "GT",
      "path": "20"
    },
    "4570": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x11CA"
    },
    "4573": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4574": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4575": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4576": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SUB",
      "path": "20"
    },
    "4577": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1F"
    },
    "4579": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "AND",
      "path": "20"
    },
    "4580": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4581": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "ADD",
      "path": "20"
    },
    "4582": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4583": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4584": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "POP",
      "path": "20"
    },
    "4585": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "POP",
      "path": "20"
    },
    "4586": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "POP",
      "path": "20"
    },
    "4587": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "POP",
      "path": "20"
    },
    "4588": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "POP",
      "path": "20"
    },
    "4589": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4590": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "POP",
      "path": "20"
    },
    "4591": {
      "fn": "ERC20.name",
      "offset": [
        2141,
        2239
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4592": {
      "fn": "ERC20.name",
      "jump": "o",
      "offset": [
        2141,
        2239
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4593": {
      "fn": "GeVault.getReserves",
      "offset": [
        10093,
        10490
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4594": {
      "fn": "GeVault.getReserves",
      "offset": [
        10137,
        10149
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4596": {
      "fn": "GeVault.getReserves",
      "offset": [
        10151,
        10163
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4597": {
      "fn": "GeVault.getReserves",
      "offset": [
        10175,
        10181
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4599": {
      "fn": "GeVault.getReserves",
      "offset": [
        10170,
        10486
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4600": {
      "fn": "GeVault.getReserves",
      "offset": [
        10191,
        10196
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "4602": {
      "fn": "GeVault.getReserves",
      "offset": [
        10191,
        10203
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4603": {
      "fn": "GeVault.getReserves",
      "offset": [
        10187,
        10203
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4604": {
      "fn": "GeVault.getReserves",
      "offset": [
        10187,
        10203
      ],
      "op": "LT",
      "path": "0"
    },
    "4605": {
      "fn": "GeVault.getReserves",
      "offset": [
        10170,
        10486
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4606": {
      "fn": "GeVault.getReserves",
      "offset": [
        10170,
        10486
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13AD"
    },
    "4609": {
      "fn": "GeVault.getReserves",
      "offset": [
        10170,
        10486
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4610": {
      "fn": "GeVault.getReserves",
      "offset": [
        10217,
        10235
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4612": {
      "fn": "GeVault.getReserves",
      "offset": [
        10238,
        10243
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "4614": {
      "fn": "GeVault.getReserves",
      "offset": [
        10244,
        10245
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4615": {
      "fn": "GeVault.getReserves",
      "offset": [
        10238,
        10246
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4616": {
      "fn": "GeVault.getReserves",
      "offset": [
        10238,
        10246
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4617": {
      "fn": "GeVault.getReserves",
      "offset": [
        10238,
        10246
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4618": {
      "fn": "GeVault.getReserves",
      "offset": [
        10238,
        10246
      ],
      "op": "LT",
      "path": "0"
    },
    "4619": {
      "fn": "GeVault.getReserves",
      "offset": [
        10238,
        10246
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1216"
    },
    "4622": {
      "fn": "GeVault.getReserves",
      "offset": [
        10238,
        10246
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4623": {
      "fn": "GeVault.getReserves",
      "offset": [
        10238,
        10246
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1216"
    },
    "4626": {
      "fn": "GeVault.getReserves",
      "offset": [
        10238,
        10246
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4370"
    },
    "4629": {
      "fn": "GeVault.getReserves",
      "jump": "i",
      "offset": [
        10238,
        10246
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4630": {
      "fn": "GeVault.getReserves",
      "offset": [
        10238,
        10246
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4631": {
      "fn": "GeVault.getReserves",
      "offset": [
        10238,
        10246
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4633": {
      "fn": "GeVault.getReserves",
      "offset": [
        10238,
        10246
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4634": {
      "fn": "GeVault.getReserves",
      "offset": [
        10238,
        10246
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4635": {
      "fn": "GeVault.getReserves",
      "offset": [
        10238,
        10246
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4636": {
      "fn": "GeVault.getReserves",
      "offset": [
        10238,
        10246
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4638": {
      "fn": "GeVault.getReserves",
      "offset": [
        10238,
        10246
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4639": {
      "fn": "GeVault.getReserves",
      "offset": [
        10238,
        10246
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4640": {
      "fn": "GeVault.getReserves",
      "offset": [
        10238,
        10246
      ],
      "op": "ADD",
      "path": "0"
    },
    "4641": {
      "fn": "GeVault.getReserves",
      "offset": [
        10238,
        10246
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4642": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10281
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x10"
    },
    "4644": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10281
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4645": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4647": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4648": {
      "op": "PUSH4",
      "value": "0x35EA6A75"
    },
    "4653": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4655": {
      "op": "SHL"
    },
    "4656": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4657": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4658": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4660": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4662": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4664": {
      "op": "SHL"
    },
    "4665": {
      "op": "SUB"
    },
    "4666": {
      "fn": "GeVault.getReserves",
      "offset": [
        10238,
        10246
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4667": {
      "fn": "GeVault.getReserves",
      "offset": [
        10238,
        10246
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4668": {
      "fn": "GeVault.getReserves",
      "offset": [
        10238,
        10246
      ],
      "op": "AND",
      "path": "0"
    },
    "4669": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4671": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10308
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4672": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4673": {
      "op": "DUP2"
    },
    "4674": {
      "op": "SWAP1"
    },
    "4675": {
      "op": "MSTORE"
    },
    "4676": {
      "fn": "GeVault.getReserves",
      "offset": [
        10238,
        10246
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "4677": {
      "op": "POP"
    },
    "4678": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10281
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4679": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10281
      ],
      "op": "AND",
      "path": "0"
    },
    "4680": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10281
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4681": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10296
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x35EA6A75"
    },
    "4686": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10296
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4687": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4689": {
      "op": "ADD"
    },
    "4690": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "4693": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4695": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4696": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10308
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4697": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10308
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4698": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10308
      ],
      "op": "SUB",
      "path": "0"
    },
    "4699": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4700": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10308
      ],
      "op": "DUP7",
      "path": "0"
    },
    "4701": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10308
      ],
      "op": "GAS",
      "path": "0"
    },
    "4702": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10308
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "4703": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10308
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4704": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10308
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4705": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10308
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4706": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x126F"
    },
    "4709": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4710": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10308
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4711": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4713": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10308
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4714": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10308
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "4715": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10308
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4716": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4718": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10308
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4719": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4720": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10308
      ],
      "op": "POP",
      "path": "0"
    },
    "4721": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10308
      ],
      "op": "POP",
      "path": "0"
    },
    "4722": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10308
      ],
      "op": "POP",
      "path": "0"
    },
    "4723": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10308
      ],
      "op": "POP",
      "path": "0"
    },
    "4724": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4726": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4727": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10308
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4728": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "4730": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10308
      ],
      "op": "NOT",
      "path": "0"
    },
    "4731": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "4733": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10308
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4734": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4735": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10308
      ],
      "op": "AND",
      "path": "0"
    },
    "4736": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10308
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4737": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4738": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10308
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4739": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4741": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4742": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10308
      ],
      "op": "POP",
      "path": "0"
    },
    "4743": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4744": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4745": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4746": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1293"
    },
    "4749": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10308
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4750": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4751": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x444E"
    },
    "4754": {
      "fn": "GeVault.getReserves",
      "jump": "i",
      "offset": [
        10270,
        10308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4755": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4756": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10322
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "4758": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10322
      ],
      "op": "ADD",
      "path": "0"
    },
    "4759": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10322
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4760": {
      "fn": "GeVault.getReserves",
      "offset": [
        10341,
        10378
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4762": {
      "fn": "GeVault.getReserves",
      "offset": [
        10341,
        10378
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4763": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "4768": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4770": {
      "op": "SHL"
    },
    "4771": {
      "fn": "GeVault.getReserves",
      "offset": [
        10341,
        10378
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4772": {
      "fn": "GeVault.getReserves",
      "offset": [
        10341,
        10378
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4773": {
      "fn": "GeVault.getReserves",
      "offset": [
        10372,
        10376
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "4774": {
      "fn": "GeVault.getReserves",
      "offset": [
        10341,
        10378
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4776": {
      "fn": "GeVault.getReserves",
      "offset": [
        10341,
        10378
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4777": {
      "fn": "GeVault.getReserves",
      "offset": [
        10341,
        10378
      ],
      "op": "ADD",
      "path": "0"
    },
    "4778": {
      "op": "MSTORE"
    },
    "4779": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10322
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4780": {
      "fn": "GeVault.getReserves",
      "offset": [
        10270,
        10322
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4781": {
      "op": "POP"
    },
    "4782": {
      "fn": "GeVault.getReserves",
      "offset": [
        10330,
        10338
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4784": {
      "fn": "GeVault.getReserves",
      "offset": [
        10330,
        10338
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4785": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4787": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4789": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4791": {
      "op": "SHL"
    },
    "4792": {
      "op": "SUB"
    },
    "4793": {
      "fn": "GeVault.getReserves",
      "offset": [
        10341,
        10363
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4794": {
      "fn": "GeVault.getReserves",
      "offset": [
        10341,
        10363
      ],
      "op": "AND",
      "path": "0"
    },
    "4795": {
      "fn": "GeVault.getReserves",
      "offset": [
        10341,
        10363
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4796": {
      "fn": "GeVault.getReserves",
      "offset": [
        10341,
        10363
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "4801": {
      "fn": "GeVault.getReserves",
      "offset": [
        10341,
        10363
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4802": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4804": {
      "op": "ADD"
    },
    "4805": {
      "fn": "GeVault.getReserves",
      "offset": [
        10341,
        10378
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4807": {
      "fn": "GeVault.getReserves",
      "offset": [
        10341,
        10378
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4809": {
      "fn": "GeVault.getReserves",
      "offset": [
        10341,
        10378
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4810": {
      "fn": "GeVault.getReserves",
      "offset": [
        10341,
        10378
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4811": {
      "fn": "GeVault.getReserves",
      "offset": [
        10341,
        10378
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4812": {
      "fn": "GeVault.getReserves",
      "offset": [
        10341,
        10378
      ],
      "op": "SUB",
      "path": "0"
    },
    "4813": {
      "fn": "GeVault.getReserves",
      "offset": [
        10341,
        10378
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4814": {
      "fn": "GeVault.getReserves",
      "offset": [
        10341,
        10378
      ],
      "op": "DUP7",
      "path": "0"
    },
    "4815": {
      "fn": "GeVault.getReserves",
      "offset": [
        10341,
        10378
      ],
      "op": "GAS",
      "path": "0"
    },
    "4816": {
      "fn": "GeVault.getReserves",
      "offset": [
        10341,
        10378
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "4817": {
      "fn": "GeVault.getReserves",
      "offset": [
        10341,
        10378
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4818": {
      "fn": "GeVault.getReserves",
      "offset": [
        10341,
        10378
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4819": {
      "fn": "GeVault.getReserves",
      "offset": [
        10341,
        10378
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4820": {
      "fn": "GeVault.getReserves",
      "offset": [
        10341,
        10378
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12E1"
    },
    "4823": {
      "fn": "GeVault.getReserves",
      "offset": [
        10341,
        10378
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4824": {
      "fn": "GeVault.getReserves",
      "offset": [
        10341,
        10378
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4825": {
      "fn": "GeVault.getReserves",
      "offset": [
        10341,
        10378
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4827": {
      "fn": "GeVault.getReserves",
      "offset": [
        10341,
        10378
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4828": {
      "fn": "GeVault.getReserves",
      "offset": [
        10341,
        10378
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "4829": {
      "fn": "GeVault.getReserves",
      "offset": [
        10341,
        10378
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4830": {
      "fn": "GeVault.getReserves",
      "offset": [
        10341,
        10378
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4832": {
      "fn": "GeVault.getReserves",
      "offset": [
        10341,
        10378
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4833": {
      "fn": "GeVault.getReserves",
      "offset": [
        10341,
        10378
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4834": {
      "fn": "GeVault.getReserves",
      "offset": [
        10341,
        10378
      ],
      "op": "POP",
      "path": "0"
    },
    "4835": {
      "fn": "GeVault.getReserves",
      "offset": [
        10341,
        10378
      ],
      "op": "POP",
      "path": "0"
    },
    "4836": {
      "fn": "GeVault.getReserves",
      "offset": [
        10341,
        10378
      ],
      "op": "POP",
      "path": "0"
    },
    "4837": {
      "fn": "GeVault.getReserves",
      "offset": [
        10341,
        10378
      ],
      "op": "POP",
      "path": "0"
    },
    "4838": {
      "fn": "GeVault.getReserves",
      "offset": [
        10341,
        10378
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4840": {
      "fn": "GeVault.getReserves",
      "offset": [
        10341,
        10378
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4841": {
      "fn": "GeVault.getReserves",
      "offset": [
        10341,
        10378
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4842": {
      "fn": "GeVault.getReserves",
      "offset": [
        10341,
        10378
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "4844": {
      "fn": "GeVault.getReserves",
      "offset": [
        10341,
        10378
      ],
      "op": "NOT",
      "path": "0"
    },
    "4845": {
      "fn": "GeVault.getReserves",
      "offset": [
        10341,
        10378
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "4847": {
      "fn": "GeVault.getReserves",
      "offset": [
        10341,
        10378
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4848": {
      "fn": "GeVault.getReserves",
      "offset": [
        10341,
        10378
      ],
      "op": "ADD",
      "path": "0"
    },
    "4849": {
      "fn": "GeVault.getReserves",
      "offset": [
        10341,
        10378
      ],
      "op": "AND",
      "path": "0"
    },
    "4850": {
      "fn": "GeVault.getReserves",
      "offset": [
        10341,
        10378
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4851": {
      "fn": "GeVault.getReserves",
      "offset": [
        10341,
        10378
      ],
      "op": "ADD",
      "path": "0"
    },
    "4852": {
      "fn": "GeVault.getReserves",
      "offset": [
        10341,
        10378
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4853": {
      "fn": "GeVault.getReserves",
      "offset": [
        10341,
        10378
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4855": {
      "fn": "GeVault.getReserves",
      "offset": [
        10341,
        10378
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4856": {
      "fn": "GeVault.getReserves",
      "offset": [
        10341,
        10378
      ],
      "op": "POP",
      "path": "0"
    },
    "4857": {
      "fn": "GeVault.getReserves",
      "offset": [
        10341,
        10378
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4858": {
      "fn": "GeVault.getReserves",
      "offset": [
        10341,
        10378
      ],
      "op": "ADD",
      "path": "0"
    },
    "4859": {
      "fn": "GeVault.getReserves",
      "offset": [
        10341,
        10378
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4860": {
      "fn": "GeVault.getReserves",
      "offset": [
        10341,
        10378
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1305"
    },
    "4863": {
      "fn": "GeVault.getReserves",
      "offset": [
        10341,
        10378
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4864": {
      "fn": "GeVault.getReserves",
      "offset": [
        10341,
        10378
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4865": {
      "fn": "GeVault.getReserves",
      "offset": [
        10341,
        10378
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x430A"
    },
    "4868": {
      "fn": "GeVault.getReserves",
      "jump": "i",
      "offset": [
        10341,
        10378
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4869": {
      "fn": "GeVault.getReserves",
      "offset": [
        10341,
        10378
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4870": {
      "fn": "GeVault.getReserves",
      "offset": [
        10330,
        10378
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4871": {
      "fn": "GeVault.getReserves",
      "offset": [
        10330,
        10378
      ],
      "op": "POP",
      "path": "0"
    },
    "4872": {
      "fn": "GeVault.getReserves",
      "offset": [
        10387,
        10396
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4874": {
      "fn": "GeVault.getReserves",
      "offset": [
        10398,
        10407
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4875": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10412
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4876": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4880": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4882": {
      "op": "SHL"
    },
    "4883": {
      "op": "SUB"
    },
    "4884": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10428
      ],
      "op": "AND",
      "path": "0"
    },
    "4885": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10428
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x3B4E06E6"
    },
    "4890": {
      "fn": "GeVault.getReserves",
      "offset": [
        10429,
        10432
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4891": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4893": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4894": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4895": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "4900": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "AND",
      "path": "0"
    },
    "4901": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "4903": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "SHL",
      "path": "0"
    },
    "4904": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4905": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4906": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4908": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "ADD",
      "path": "0"
    },
    "4909": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1338"
    },
    "4912": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4913": {
      "op": "DUP2"
    },
    "4914": {
      "op": "MSTORE"
    },
    "4915": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4917": {
      "op": "ADD"
    },
    "4918": {
      "op": "SWAP1"
    },
    "4919": {
      "op": "JUMP"
    },
    "4920": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4921": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4923": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4924": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4925": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4926": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4927": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "SUB",
      "path": "0"
    },
    "4928": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4929": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "DUP7",
      "path": "0"
    },
    "4930": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "GAS",
      "path": "0"
    },
    "4931": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "4932": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4933": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4934": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4935": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1354"
    },
    "4938": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4939": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4940": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4942": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4943": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "4944": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4945": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4947": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4948": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4949": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "POP",
      "path": "0"
    },
    "4950": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "POP",
      "path": "0"
    },
    "4951": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "POP",
      "path": "0"
    },
    "4952": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "POP",
      "path": "0"
    },
    "4953": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4955": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4956": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4957": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "4959": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "NOT",
      "path": "0"
    },
    "4960": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "4962": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4963": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "ADD",
      "path": "0"
    },
    "4964": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "AND",
      "path": "0"
    },
    "4965": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4966": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "ADD",
      "path": "0"
    },
    "4967": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4968": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4970": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4971": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "POP",
      "path": "0"
    },
    "4972": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4973": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "ADD",
      "path": "0"
    },
    "4974": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4975": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1378"
    },
    "4978": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4979": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4980": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x453B"
    },
    "4983": {
      "fn": "GeVault.getReserves",
      "jump": "i",
      "offset": [
        10411,
        10433
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4984": {
      "fn": "GeVault.getReserves",
      "offset": [
        10411,
        10433
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4985": {
      "fn": "GeVault.getReserves",
      "offset": [
        10386,
        10433
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4986": {
      "fn": "GeVault.getReserves",
      "offset": [
        10386,
        10433
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4987": {
      "op": "POP"
    },
    "4988": {
      "fn": "GeVault.getReserves",
      "offset": [
        10386,
        10433
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4989": {
      "op": "POP"
    },
    "4990": {
      "fn": "GeVault.getReserves",
      "offset": [
        10441,
        10456
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 37,
      "value": "0x1387"
    },
    "4993": {
      "fn": "GeVault.getReserves",
      "offset": [
        10386,
        10433
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4994": {
      "fn": "GeVault.getReserves",
      "offset": [
        10441,
        10456
      ],
      "op": "DUP10",
      "path": "0"
    },
    "4995": {
      "fn": "GeVault.getReserves",
      "offset": [
        10441,
        10456
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4323"
    },
    "4998": {
      "fn": "GeVault.getReserves",
      "jump": "i",
      "offset": [
        10441,
        10456
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4999": {
      "fn": "GeVault.getReserves",
      "offset": [
        10441,
        10456
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5000": {
      "fn": "GeVault.getReserves",
      "offset": [
        10441,
        10456
      ],
      "op": "SWAP8",
      "path": "0"
    },
    "5001": {
      "op": "POP"
    },
    "5002": {
      "fn": "GeVault.getReserves",
      "offset": [
        10464,
        10479
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 38,
      "value": "0x1393"
    },
    "5005": {
      "fn": "GeVault.getReserves",
      "offset": [
        10475,
        10479
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5006": {
      "fn": "GeVault.getReserves",
      "offset": [
        10464,
        10479
      ],
      "op": "DUP9",
      "path": "0"
    },
    "5007": {
      "fn": "GeVault.getReserves",
      "offset": [
        10464,
        10479
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4323"
    },
    "5010": {
      "fn": "GeVault.getReserves",
      "jump": "i",
      "offset": [
        10464,
        10479
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5011": {
      "fn": "GeVault.getReserves",
      "offset": [
        10464,
        10479
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5012": {
      "fn": "GeVault.getReserves",
      "offset": [
        10464,
        10479
      ],
      "op": "SWAP7",
      "path": "0"
    },
    "5013": {
      "fn": "GeVault.getReserves",
      "offset": [
        10464,
        10479
      ],
      "op": "POP",
      "path": "0"
    },
    "5014": {
      "fn": "GeVault.getReserves",
      "offset": [
        10209,
        10486
      ],
      "op": "POP",
      "path": "0"
    },
    "5015": {
      "fn": "GeVault.getReserves",
      "offset": [
        10209,
        10486
      ],
      "op": "POP",
      "path": "0"
    },
    "5016": {
      "fn": "GeVault.getReserves",
      "offset": [
        10209,
        10486
      ],
      "op": "POP",
      "path": "0"
    },
    "5017": {
      "fn": "GeVault.getReserves",
      "offset": [
        10209,
        10486
      ],
      "op": "POP",
      "path": "0"
    },
    "5018": {
      "fn": "GeVault.getReserves",
      "offset": [
        10209,
        10486
      ],
      "op": "POP",
      "path": "0"
    },
    "5019": {
      "fn": "GeVault.getReserves",
      "offset": [
        10205,
        10208
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 39
    },
    "5020": {
      "fn": "GeVault.getReserves",
      "offset": [
        10205,
        10208
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5021": {
      "fn": "GeVault.getReserves",
      "offset": [
        10205,
        10208
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13A5"
    },
    "5024": {
      "fn": "GeVault.getReserves",
      "offset": [
        10205,
        10208
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5025": {
      "fn": "GeVault.getReserves",
      "offset": [
        10205,
        10208
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x455F"
    },
    "5028": {
      "fn": "GeVault.getReserves",
      "jump": "i",
      "offset": [
        10205,
        10208
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5029": {
      "fn": "GeVault.getReserves",
      "offset": [
        10205,
        10208
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5030": {
      "fn": "GeVault.getReserves",
      "offset": [
        10205,
        10208
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5031": {
      "fn": "GeVault.getReserves",
      "offset": [
        10205,
        10208
      ],
      "op": "POP",
      "path": "0"
    },
    "5032": {
      "fn": "GeVault.getReserves",
      "offset": [
        10205,
        10208
      ],
      "op": "POP",
      "path": "0"
    },
    "5033": {
      "fn": "GeVault.getReserves",
      "offset": [
        10170,
        10486
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11F7"
    },
    "5036": {
      "fn": "GeVault.getReserves",
      "offset": [
        10170,
        10486
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5037": {
      "fn": "GeVault.getReserves",
      "offset": [
        10170,
        10486
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5038": {
      "fn": "GeVault.getReserves",
      "offset": [
        10170,
        10486
      ],
      "op": "POP",
      "path": "0"
    },
    "5039": {
      "fn": "GeVault.getReserves",
      "offset": [
        10093,
        10490
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5040": {
      "fn": "GeVault.getReserves",
      "offset": [
        10093,
        10490
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5041": {
      "fn": "GeVault.getReserves",
      "jump": "o",
      "offset": [
        10093,
        10490
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5042": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5043": {
      "fn": "ERC20.approve",
      "offset": [
        4321,
        4325
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "5045": {
      "fn": "ERC20.approve",
      "offset": [
        4337,
        4376
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 40,
      "value": "0x13BF"
    },
    "5048": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "28",
      "statement": 41
    },
    "5049": {
      "fn": "ERC20.approve",
      "offset": [
        4360,
        4367
      ],
      "op": "DUP5",
      "path": "20"
    },
    "5050": {
      "fn": "ERC20.approve",
      "offset": [
        4369,
        4375
      ],
      "op": "DUP5",
      "path": "20"
    },
    "5051": {
      "fn": "ERC20.approve",
      "offset": [
        4337,
        4345
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x34B4"
    },
    "5054": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4337,
        4376
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5055": {
      "fn": "ERC20.approve",
      "offset": [
        4337,
        4376
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5056": {
      "op": "POP"
    },
    "5057": {
      "fn": "ERC20.approve",
      "offset": [
        4393,
        4397
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 42,
      "value": "0x1"
    },
    "5059": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5060": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "5061": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5062": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "POP",
      "path": "20"
    },
    "5063": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "POP",
      "path": "20"
    },
    "5064": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        4238,
        4404
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5065": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5453,
        5752
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5066": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x5"
    },
    "5068": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5069": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5071": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5073": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5075": {
      "op": "SHL"
    },
    "5076": {
      "op": "SUB"
    },
    "5077": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "12"
    },
    "5078": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "28"
    },
    "5079": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "12"
    },
    "5080": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x13F3"
    },
    "5083": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5084": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5086": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5087": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5091": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5093": {
      "op": "SHL"
    },
    "5094": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5095": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5096": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "5098": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "12"
    },
    "5099": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x8AC"
    },
    "5102": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5103": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4578"
    },
    "5106": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5107": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5108": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5521,
        5529
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5110": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5551,
        5553
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5111": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5113": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5115": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5117": {
      "op": "SHL"
    },
    "5118": {
      "op": "SUB"
    },
    "5119": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5561
      ],
      "op": "AND",
      "path": "0"
    },
    "5120": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5561
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x443EC74D"
    },
    "5125": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5563
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5127": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5563
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5128": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5563
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5129": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5563
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "5134": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5563
      ],
      "op": "AND",
      "path": "0"
    },
    "5135": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5563
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "5137": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5563
      ],
      "op": "SHL",
      "path": "0"
    },
    "5138": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5563
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5139": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5563
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5140": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5563
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5142": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5563
      ],
      "op": "ADD",
      "path": "0"
    },
    "5143": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5563
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5145": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5563
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5146": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5563
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5147": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5563
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5148": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5563
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5149": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5563
      ],
      "op": "SUB",
      "path": "0"
    },
    "5150": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5563
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5151": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5563
      ],
      "op": "DUP7",
      "path": "0"
    },
    "5152": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5563
      ],
      "op": "GAS",
      "path": "0"
    },
    "5153": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5563
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "5154": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5563
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5155": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5563
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5156": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5563
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5157": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5563
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1432"
    },
    "5160": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5563
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5161": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5563
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5162": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5563
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5164": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5563
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5165": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5563
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "5166": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5563
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5167": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5563
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5169": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5563
      ],
      "op": "REVERT",
      "path": "0"
    },
    "5170": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5563
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5171": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5563
      ],
      "op": "POP",
      "path": "0"
    },
    "5172": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5563
      ],
      "op": "POP",
      "path": "0"
    },
    "5173": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5563
      ],
      "op": "POP",
      "path": "0"
    },
    "5174": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5563
      ],
      "op": "POP",
      "path": "0"
    },
    "5175": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5563
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5177": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5563
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5178": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5563
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5179": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5563
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "5181": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5563
      ],
      "op": "NOT",
      "path": "0"
    },
    "5182": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5563
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "5184": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5563
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5185": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5563
      ],
      "op": "ADD",
      "path": "0"
    },
    "5186": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5563
      ],
      "op": "AND",
      "path": "0"
    },
    "5187": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5563
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5188": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5563
      ],
      "op": "ADD",
      "path": "0"
    },
    "5189": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5563
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5190": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5563
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5192": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5563
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5193": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5563
      ],
      "op": "POP",
      "path": "0"
    },
    "5194": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5563
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5195": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5563
      ],
      "op": "ADD",
      "path": "0"
    },
    "5196": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5563
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5197": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5563
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1456"
    },
    "5200": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5563
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5201": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5563
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5202": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5563
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x45AD"
    },
    "5205": {
      "fn": "GeVault.modifyTick",
      "jump": "i",
      "offset": [
        5534,
        5563
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5206": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5534,
        5563
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5207": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5520,
        5563
      ],
      "op": "POP",
      "path": "0"
    },
    "5208": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5520,
        5563
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5209": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5520,
        5563
      ],
      "op": "POP",
      "path": "0"
    },
    "5210": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5570,
        5578
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5212": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5600,
        5602
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5215": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5217": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5219": {
      "op": "SHL"
    },
    "5220": {
      "op": "SUB"
    },
    "5221": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5610
      ],
      "op": "AND",
      "path": "0"
    },
    "5222": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5610
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5EE04D78"
    },
    "5227": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5612
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5229": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5612
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5230": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5612
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5231": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5612
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "5236": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5612
      ],
      "op": "AND",
      "path": "0"
    },
    "5237": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5612
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "5239": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5612
      ],
      "op": "SHL",
      "path": "0"
    },
    "5240": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5612
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5241": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5612
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5242": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5612
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5244": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5612
      ],
      "op": "ADD",
      "path": "0"
    },
    "5245": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5612
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5247": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5612
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5248": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5612
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5249": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5612
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5250": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5612
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5251": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5612
      ],
      "op": "SUB",
      "path": "0"
    },
    "5252": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5612
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5253": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5612
      ],
      "op": "DUP7",
      "path": "0"
    },
    "5254": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5612
      ],
      "op": "GAS",
      "path": "0"
    },
    "5255": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5612
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "5256": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5612
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5257": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5612
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5258": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5612
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5259": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5612
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1498"
    },
    "5262": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5612
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5263": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5612
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5264": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5612
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5266": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5612
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5267": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5612
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "5268": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5612
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5269": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5612
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5271": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5612
      ],
      "op": "REVERT",
      "path": "0"
    },
    "5272": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5612
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5273": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5612
      ],
      "op": "POP",
      "path": "0"
    },
    "5274": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5612
      ],
      "op": "POP",
      "path": "0"
    },
    "5275": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5612
      ],
      "op": "POP",
      "path": "0"
    },
    "5276": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5612
      ],
      "op": "POP",
      "path": "0"
    },
    "5277": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5612
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5279": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5612
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5280": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5612
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5281": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5612
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "5283": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5612
      ],
      "op": "NOT",
      "path": "0"
    },
    "5284": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5612
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "5286": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5612
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5287": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5612
      ],
      "op": "ADD",
      "path": "0"
    },
    "5288": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5612
      ],
      "op": "AND",
      "path": "0"
    },
    "5289": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5612
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5290": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5612
      ],
      "op": "ADD",
      "path": "0"
    },
    "5291": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5612
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5292": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5612
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5294": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5612
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5295": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5612
      ],
      "op": "POP",
      "path": "0"
    },
    "5296": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5612
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5297": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5612
      ],
      "op": "ADD",
      "path": "0"
    },
    "5298": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5612
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5299": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5612
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14BC"
    },
    "5302": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5612
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5303": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5612
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5304": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5612
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x45AD"
    },
    "5307": {
      "fn": "GeVault.modifyTick",
      "jump": "i",
      "offset": [
        5583,
        5612
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5308": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5583,
        5612
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5309": {
      "op": "POP"
    },
    "5310": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5632,
        5638
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 43,
      "value": "0xA"
    },
    "5312": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5632,
        5638
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5313": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5569,
        5612
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5314": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5569,
        5612
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5315": {
      "op": "POP"
    },
    "5316": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5320": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5322": {
      "op": "SHL"
    },
    "5323": {
      "op": "SUB"
    },
    "5324": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5626,
        5638
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5325": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5626,
        5638
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5326": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5626,
        5638
      ],
      "op": "AND",
      "path": "0"
    },
    "5327": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5632,
        5638
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5328": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5632,
        5638
      ],
      "op": "AND",
      "path": "0"
    },
    "5329": {
      "branch": 172,
      "fn": "GeVault.modifyTick",
      "offset": [
        5626,
        5638
      ],
      "op": "EQ",
      "path": "0"
    },
    "5330": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5626,
        5654
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5331": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5626,
        5654
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5332": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5626,
        5654
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14EA"
    },
    "5335": {
      "branch": 172,
      "fn": "GeVault.modifyTick",
      "offset": [
        5626,
        5654
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5336": {
      "op": "POP"
    },
    "5337": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5648,
        5654
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "5339": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5648,
        5654
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5342": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5344": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5346": {
      "op": "SHL"
    },
    "5347": {
      "op": "SUB"
    },
    "5348": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5642,
        5654
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5349": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5642,
        5654
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5350": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5642,
        5654
      ],
      "op": "AND",
      "path": "0"
    },
    "5351": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5648,
        5654
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5352": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5648,
        5654
      ],
      "op": "AND",
      "path": "0"
    },
    "5353": {
      "branch": 173,
      "fn": "GeVault.modifyTick",
      "offset": [
        5642,
        5654
      ],
      "op": "EQ",
      "path": "0"
    },
    "5354": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5626,
        5654
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5355": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5618,
        5674
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1506"
    },
    "5358": {
      "branch": 173,
      "fn": "GeVault.modifyTick",
      "offset": [
        5618,
        5674
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5359": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5618,
        5674
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5361": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5618,
        5674
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5362": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5366": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5368": {
      "op": "SHL"
    },
    "5369": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5618,
        5674
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5370": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5618,
        5674
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5371": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5618,
        5674
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5373": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5618,
        5674
      ],
      "op": "ADD",
      "path": "0"
    },
    "5374": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5618,
        5674
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8AC"
    },
    "5377": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5618,
        5674
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5378": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5618,
        5674
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x45E2"
    },
    "5381": {
      "fn": "GeVault.modifyTick",
      "jump": "i",
      "offset": [
        5618,
        5674
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5382": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5618,
        5674
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5383": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5712,
        5714
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 44
    },
    "5384": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5680,
        5685
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "5386": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5686,
        5691
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5387": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5680,
        5692
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5388": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5680,
        5692
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5389": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5680,
        5692
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5390": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5680,
        5692
      ],
      "op": "LT",
      "path": "0"
    },
    "5391": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5680,
        5692
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x151A"
    },
    "5394": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5680,
        5692
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5395": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5680,
        5692
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x151A"
    },
    "5398": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5680,
        5692
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4370"
    },
    "5401": {
      "fn": "GeVault.modifyTick",
      "jump": "i",
      "offset": [
        5680,
        5692
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5402": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5680,
        5692
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5403": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5680,
        5692
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5405": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5680,
        5692
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5406": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5680,
        5692
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5407": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5680,
        5692
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5408": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5680,
        5692
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5410": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5680,
        5692
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5411": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5680,
        5692
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5412": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5680,
        5692
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5413": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5680,
        5692
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5414": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5680,
        5692
      ],
      "op": "ADD",
      "path": "0"
    },
    "5415": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5680,
        5715
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5416": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5680,
        5715
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5417": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5421": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5423": {
      "op": "SHL"
    },
    "5424": {
      "op": "SUB"
    },
    "5425": {
      "op": "NOT"
    },
    "5426": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5680,
        5715
      ],
      "op": "AND",
      "path": "0"
    },
    "5427": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5429": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5431": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5433": {
      "op": "SHL"
    },
    "5434": {
      "op": "SUB"
    },
    "5435": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5680,
        5715
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "5436": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5680,
        5715
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5437": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5680,
        5715
      ],
      "op": "AND",
      "path": "0"
    },
    "5438": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5680,
        5715
      ],
      "op": "OR",
      "path": "0"
    },
    "5439": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5680,
        5715
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5440": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5680,
        5715
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5441": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5726,
        5747
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 45,
      "value": "0x40"
    },
    "5443": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5726,
        5747
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5444": {
      "op": "DUP6"
    },
    "5445": {
      "op": "DUP2"
    },
    "5446": {
      "op": "MSTORE"
    },
    "5447": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5726,
        5747
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5448": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5726,
        5747
      ],
      "op": "DUP7",
      "path": "0"
    },
    "5449": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5726,
        5747
      ],
      "op": "AND",
      "path": "0"
    },
    "5450": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5726,
        5747
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5451": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5726,
        5747
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xC702EC00C014203B7E89BAAC1D444204C2626E064AFC77BA77A612E15AB3BCE0"
    },
    "5484": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5726,
        5747
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5485": {
      "op": "ADD"
    },
    "5486": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5726,
        5747
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5488": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5726,
        5747
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5489": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5726,
        5747
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5490": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5726,
        5747
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5491": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5726,
        5747
      ],
      "op": "SUB",
      "path": "0"
    },
    "5492": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5726,
        5747
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5493": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5726,
        5747
      ],
      "op": "LOG2",
      "path": "0"
    },
    "5494": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5514,
        5752
      ],
      "op": "POP",
      "path": "0"
    },
    "5495": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5514,
        5752
      ],
      "op": "POP",
      "path": "0"
    },
    "5496": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5453,
        5752
      ],
      "op": "POP",
      "path": "0"
    },
    "5497": {
      "fn": "GeVault.modifyTick",
      "offset": [
        5453,
        5752
      ],
      "op": "POP",
      "path": "0"
    },
    "5498": {
      "fn": "GeVault.modifyTick",
      "jump": "o",
      "offset": [
        5453,
        5752
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5499": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4871,
        5349
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5500": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5502": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5504": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5506": {
      "op": "SHL"
    },
    "5507": {
      "op": "SUB"
    },
    "5508": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5069
      ],
      "op": "DUP4",
      "path": "20"
    },
    "5509": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5069
      ],
      "op": "AND",
      "path": "20"
    },
    "5510": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5007,
        5011
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "5512": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5069
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5513": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5069
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5514": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5069
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5515": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5061
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "5517": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5069
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "5519": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5069
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5520": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5069
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5521": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5069
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5522": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5069
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5524": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5069
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5525": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5069
      ],
      "op": "DUP4",
      "path": "20"
    },
    "5526": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5069
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "5527": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "28"
    },
    "5528": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5083
      ],
      "op": "DUP5",
      "path": "20"
    },
    "5529": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5083
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5530": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5083
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5531": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5083
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5532": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5083
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5533": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5083
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5534": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5083
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "5535": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5083
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5536": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5101,
        5127
      ],
      "op": "DUP3",
      "path": "20",
      "statement": 46
    },
    "5537": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5101,
        5127
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5538": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5101,
        5127
      ],
      "op": "LT",
      "path": "20"
    },
    "5539": {
      "branch": 210,
      "fn": "ERC20.transferFrom",
      "offset": [
        5101,
        5127
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "5540": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5093,
        5172
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1600"
    },
    "5543": {
      "branch": 210,
      "fn": "ERC20.transferFrom",
      "offset": [
        5093,
        5172
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "5544": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5093,
        5172
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5546": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5093,
        5172
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5547": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5551": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5553": {
      "op": "SHL"
    },
    "5554": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5093,
        5172
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5555": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5093,
        5172
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5556": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5558": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5093,
        5172
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "5560": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5093,
        5172
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5561": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5093,
        5172
      ],
      "op": "ADD",
      "path": "20"
    },
    "5562": {
      "op": "MSTORE"
    },
    "5563": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "5565": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5567": {
      "op": "DUP3"
    },
    "5568": {
      "op": "ADD"
    },
    "5569": {
      "op": "MSTORE"
    },
    "5570": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732061"
    },
    "5603": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5605": {
      "op": "DUP3"
    },
    "5606": {
      "op": "ADD"
    },
    "5607": {
      "op": "MSTORE"
    },
    "5608": {
      "op": "PUSH8",
      "value": "0x6C6C6F77616E6365"
    },
    "5617": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5619": {
      "op": "SHL"
    },
    "5620": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5622": {
      "op": "DUP3"
    },
    "5623": {
      "op": "ADD"
    },
    "5624": {
      "op": "MSTORE"
    },
    "5625": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5627": {
      "op": "ADD"
    },
    "5628": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5093,
        5172
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x8AC"
    },
    "5631": {
      "op": "JUMP"
    },
    "5632": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5093,
        5172
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5633": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5206,
        5263
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 47,
      "value": "0x160D"
    },
    "5636": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5215,
        5221
      ],
      "op": "DUP6",
      "path": "20"
    },
    "5637": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "28"
    },
    "5638": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5256,
        5262
      ],
      "op": "DUP6",
      "path": "20"
    },
    "5639": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5237,
        5253
      ],
      "op": "DUP5",
      "path": "20"
    },
    "5640": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5237,
        5262
      ],
      "op": "SUB",
      "path": "20"
    },
    "5641": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5206,
        5214
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x34B4"
    },
    "5644": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5206,
        5263
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5645": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5206,
        5263
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5646": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5284,
        5320
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 48,
      "value": "0x1618"
    },
    "5649": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5294,
        5300
      ],
      "op": "DUP6",
      "path": "20"
    },
    "5650": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5302,
        5311
      ],
      "op": "DUP6",
      "path": "20"
    },
    "5651": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5313,
        5319
      ],
      "op": "DUP6",
      "path": "20"
    },
    "5652": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5284,
        5293
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x35D8"
    },
    "5655": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5284,
        5320
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5656": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5284,
        5320
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5657": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5338,
        5342
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 49,
      "value": "0x1"
    },
    "5659": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5331,
        5342
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5660": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5331,
        5342
      ],
      "op": "POP",
      "path": "20"
    },
    "5661": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5331,
        5342
      ],
      "op": "POP",
      "path": "20"
    },
    "5662": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4871,
        5349
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5663": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4871,
        5349
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "5664": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4871,
        5349
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "5665": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4871,
        5349
      ],
      "op": "POP",
      "path": "20"
    },
    "5666": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4871,
        5349
      ],
      "op": "POP",
      "path": "20"
    },
    "5667": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4871,
        5349
      ],
      "op": "POP",
      "path": "20"
    },
    "5668": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        4871,
        5349
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5669": {
      "fn": "GeVault.setEnabled",
      "offset": [
        3346,
        3468
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5670": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x5"
    },
    "5672": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5673": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5677": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5679": {
      "op": "SHL"
    },
    "5680": {
      "op": "SUB"
    },
    "5681": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "12"
    },
    "5682": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "28"
    },
    "5683": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "12"
    },
    "5684": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x164F"
    },
    "5687": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5688": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5690": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5691": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5695": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5697": {
      "op": "SHL"
    },
    "5698": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5699": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5700": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "5702": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "12"
    },
    "5703": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x8AC"
    },
    "5706": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5707": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4578"
    },
    "5710": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5711": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5712": {
      "fn": "GeVault.setEnabled",
      "offset": [
        3407,
        3416
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 50,
      "value": "0xB"
    },
    "5714": {
      "fn": "GeVault.setEnabled",
      "offset": [
        3407,
        3429
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5715": {
      "fn": "GeVault.setEnabled",
      "offset": [
        3407,
        3429
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5716": {
      "fn": "GeVault.setEnabled",
      "offset": [
        3407,
        3429
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5717": {
      "fn": "GeVault.setEnabled",
      "offset": [
        3407,
        3429
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5718": {
      "fn": "GeVault.setEnabled",
      "offset": [
        3407,
        3429
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5721": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5723": {
      "op": "SHL"
    },
    "5724": {
      "fn": "GeVault.setEnabled",
      "offset": [
        3407,
        3429
      ],
      "op": "MUL",
      "path": "0"
    },
    "5725": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5727": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5729": {
      "op": "SHL"
    },
    "5730": {
      "op": "NOT"
    },
    "5731": {
      "fn": "GeVault.setEnabled",
      "offset": [
        3407,
        3429
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5732": {
      "fn": "GeVault.setEnabled",
      "offset": [
        3407,
        3429
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5733": {
      "fn": "GeVault.setEnabled",
      "offset": [
        3407,
        3429
      ],
      "op": "AND",
      "path": "0"
    },
    "5734": {
      "fn": "GeVault.setEnabled",
      "offset": [
        3407,
        3429
      ],
      "op": "OR",
      "path": "0"
    },
    "5735": {
      "fn": "GeVault.setEnabled",
      "offset": [
        3407,
        3429
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5736": {
      "fn": "GeVault.setEnabled",
      "offset": [
        3407,
        3429
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5737": {
      "fn": "GeVault.setEnabled",
      "offset": [
        3441,
        3463
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 51,
      "value": "0x40"
    },
    "5739": {
      "fn": "GeVault.setEnabled",
      "offset": [
        3441,
        3463
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5740": {
      "fn": "GeVault.setEnabled",
      "offset": [
        3441,
        3463
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xC95792A0E34C24EAC32C3D3AAD40FA02AC9EA2CB3A39B334F7B7F08579B5CD7D"
    },
    "5773": {
      "fn": "GeVault.setEnabled",
      "offset": [
        3441,
        3463
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5774": {
      "fn": "GeVault.setEnabled",
      "offset": [
        3441,
        3463
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x169C"
    },
    "5777": {
      "fn": "GeVault.setEnabled",
      "offset": [
        3441,
        3463
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5778": {
      "fn": "GeVault.setEnabled",
      "offset": [
        3419,
        3429
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5779": {
      "op": "ISZERO"
    },
    "5780": {
      "op": "ISZERO"
    },
    "5781": {
      "op": "DUP2"
    },
    "5782": {
      "op": "MSTORE"
    },
    "5783": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5785": {
      "op": "ADD"
    },
    "5786": {
      "op": "SWAP1"
    },
    "5787": {
      "op": "JUMP"
    },
    "5788": {
      "fn": "GeVault.setEnabled",
      "offset": [
        3441,
        3463
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5789": {
      "fn": "GeVault.setEnabled",
      "offset": [
        3441,
        3463
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5791": {
      "fn": "GeVault.setEnabled",
      "offset": [
        3441,
        3463
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5792": {
      "fn": "GeVault.setEnabled",
      "offset": [
        3441,
        3463
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5793": {
      "fn": "GeVault.setEnabled",
      "offset": [
        3441,
        3463
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5794": {
      "fn": "GeVault.setEnabled",
      "offset": [
        3441,
        3463
      ],
      "op": "SUB",
      "path": "0"
    },
    "5795": {
      "fn": "GeVault.setEnabled",
      "offset": [
        3441,
        3463
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5796": {
      "fn": "GeVault.setEnabled",
      "offset": [
        3441,
        3463
      ],
      "op": "LOG1",
      "path": "0"
    },
    "5797": {
      "fn": "GeVault.setEnabled",
      "offset": [
        3346,
        3468
      ],
      "op": "POP",
      "path": "0"
    },
    "5798": {
      "fn": "GeVault.setEnabled",
      "jump": "o",
      "offset": [
        3346,
        3468
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5799": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5744,
        5956
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5800": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "28"
    },
    "5801": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5832,
        5836
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "5803": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5905
      ],
      "op": "DUP2",
      "path": "20",
      "statement": 52
    },
    "5804": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5905
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5805": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5905
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5806": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5891
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "5808": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5905
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "5810": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5905
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5811": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5905
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5812": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5905
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5813": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5905
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5815": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5905
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5816": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5905
      ],
      "op": "DUP4",
      "path": "20"
    },
    "5817": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5905
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "5818": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5820": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5822": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5824": {
      "op": "SHL"
    },
    "5825": {
      "op": "SUB"
    },
    "5826": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5914
      ],
      "op": "DUP8",
      "path": "20"
    },
    "5827": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5914
      ],
      "op": "AND",
      "path": "20"
    },
    "5828": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5914
      ],
      "op": "DUP5",
      "path": "20"
    },
    "5829": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5914
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5830": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5914
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5831": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5914
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5832": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5914
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5833": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5914
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5834": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5914
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "5835": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5914
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5836": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5832,
        5836
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5837": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5832,
        5836
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5838": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        5928
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x13BF"
    },
    "5841": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        5928
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5842": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5871,
        5878
      ],
      "op": "DUP6",
      "path": "20"
    },
    "5843": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5871,
        5878
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5844": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5927
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x16DE"
    },
    "5847": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5927
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5848": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5917,
        5927
      ],
      "op": "DUP7",
      "path": "20"
    },
    "5849": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5917,
        5927
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5850": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5927
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4323"
    },
    "5853": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5880,
        5927
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5854": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5927
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5855": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        5856
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x34B4"
    },
    "5858": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5848,
        5928
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5859": {
      "fn": "GeVault.setBaseFee",
      "offset": [
        5988,
        6166
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5860": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x5"
    },
    "5862": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5863": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5865": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5867": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5869": {
      "op": "SHL"
    },
    "5870": {
      "op": "SUB"
    },
    "5871": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "12"
    },
    "5872": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "28"
    },
    "5873": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "12"
    },
    "5874": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x170D"
    },
    "5877": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5878": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5880": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5881": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5885": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5887": {
      "op": "SHL"
    },
    "5888": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5889": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5890": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "5892": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "12"
    },
    "5893": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x8AC"
    },
    "5896": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5897": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4578"
    },
    "5900": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5901": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5902": {
      "fn": "GeVault.setBaseFee",
      "offset": [
        6071,
        6074
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 53,
      "value": "0x2710"
    },
    "5905": {
      "fn": "GeVault.setBaseFee",
      "offset": [
        6056,
        6068
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5906": {
      "branch": 174,
      "fn": "GeVault.setBaseFee",
      "offset": [
        6056,
        6074
      ],
      "op": "LT",
      "path": "0"
    },
    "5907": {
      "fn": "GeVault.setBaseFee",
      "offset": [
        6048,
        6100
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1756"
    },
    "5910": {
      "branch": 174,
      "fn": "GeVault.setBaseFee",
      "offset": [
        6048,
        6100
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5911": {
      "fn": "GeVault.setBaseFee",
      "offset": [
        6048,
        6100
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5913": {
      "fn": "GeVault.setBaseFee",
      "offset": [
        6048,
        6100
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5914": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5918": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5920": {
      "op": "SHL"
    },
    "5921": {
      "fn": "GeVault.setBaseFee",
      "offset": [
        6048,
        6100
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5922": {
      "fn": "GeVault.setBaseFee",
      "offset": [
        6048,
        6100
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5923": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5925": {
      "fn": "GeVault.setBaseFee",
      "offset": [
        6048,
        6100
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5927": {
      "fn": "GeVault.setBaseFee",
      "offset": [
        6048,
        6100
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5928": {
      "fn": "GeVault.setBaseFee",
      "offset": [
        6048,
        6100
      ],
      "op": "ADD",
      "path": "0"
    },
    "5929": {
      "op": "MSTORE"
    },
    "5930": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "5932": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5934": {
      "op": "DUP3"
    },
    "5935": {
      "op": "ADD"
    },
    "5936": {
      "op": "MSTORE"
    },
    "5937": {
      "op": "PUSH21",
      "value": "0x4745563A20496E76616C6964204261736520466565"
    },
    "5959": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "5961": {
      "op": "SHL"
    },
    "5962": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5964": {
      "op": "DUP3"
    },
    "5965": {
      "op": "ADD"
    },
    "5966": {
      "op": "MSTORE"
    },
    "5967": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5969": {
      "op": "ADD"
    },
    "5970": {
      "fn": "GeVault.setBaseFee",
      "offset": [
        6048,
        6100
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8AC"
    },
    "5973": {
      "op": "JUMP"
    },
    "5974": {
      "fn": "GeVault.setBaseFee",
      "offset": [
        6048,
        6100
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5975": {
      "fn": "GeVault.setBaseFee",
      "offset": [
        6106,
        6115
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 54,
      "value": "0xC"
    },
    "5977": {
      "fn": "GeVault.setBaseFee",
      "offset": [
        6106,
        6130
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5978": {
      "fn": "GeVault.setBaseFee",
      "offset": [
        6106,
        6130
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5979": {
      "fn": "GeVault.setBaseFee",
      "offset": [
        6106,
        6130
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5980": {
      "fn": "GeVault.setBaseFee",
      "offset": [
        6141,
        6161
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 55,
      "value": "0x40"
    },
    "5982": {
      "fn": "GeVault.setBaseFee",
      "offset": [
        6141,
        6161
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5983": {
      "op": "DUP2"
    },
    "5984": {
      "op": "DUP2"
    },
    "5985": {
      "op": "MSTORE"
    },
    "5986": {
      "fn": "GeVault.setBaseFee",
      "offset": [
        6141,
        6161
      ],
      "op": "PUSH31",
      "path": "0",
      "value": "0x172DDFC5AE88D08B3DE01A5A187667C37A5A53989E8C175055CB6C993792A7"
    },
    "6018": {
      "fn": "GeVault.setBaseFee",
      "offset": [
        6141,
        6161
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6019": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6021": {
      "op": "ADD"
    },
    "6022": {
      "fn": "GeVault.setBaseFee",
      "offset": [
        6141,
        6161
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x169C"
    },
    "6025": {
      "op": "JUMP"
    },
    "6026": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        9835,
        10042
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6027": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        9882,
        9897
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6029": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        9905,
        9916
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6030": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        9919,
        9932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1796"
    },
    "6033": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3316,
        3328
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "6035": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3316,
        3328
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6036": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3316,
        3328
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6037": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3229,
        3335
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6038": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        9919,
        9932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6039": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        9905,
        9932
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6040": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        9905,
        9932
      ],
      "op": "POP",
      "path": "0"
    },
    "6041": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        9942,
        9948
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6042": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        9952,
        9953
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6044": {
      "branch": 175,
      "fn": "GeVault.latestAnswer",
      "offset": [
        9942,
        9953
      ],
      "op": "SUB",
      "path": "0"
    },
    "6045": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        9938,
        9963
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17A8"
    },
    "6048": {
      "branch": 175,
      "fn": "GeVault.latestAnswer",
      "offset": [
        9938,
        9963
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6049": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        9962,
        9963
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 56,
      "value": "0x0"
    },
    "6051": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        9955,
        9963
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6052": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        9955,
        9963
      ],
      "op": "POP",
      "path": "0"
    },
    "6053": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        9955,
        9963
      ],
      "op": "POP",
      "path": "0"
    },
    "6054": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        9835,
        10042
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6055": {
      "fn": "GeVault.latestAnswer",
      "jump": "o",
      "offset": [
        9835,
        10042
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6056": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        9938,
        9963
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6057": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        9969,
        9984
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6059": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        9987,
        9995
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17B2"
    },
    "6062": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        9987,
        9993
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D46"
    },
    "6065": {
      "fn": "GeVault.latestAnswer",
      "jump": "i",
      "offset": [
        9987,
        9995
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6066": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        9987,
        9995
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6067": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        9969,
        9995
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6068": {
      "op": "POP"
    },
    "6069": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        10031,
        10037
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 57
    },
    "6070": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        10011,
        10028
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17C7"
    },
    "6073": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        9969,
        9995
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6074": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        10024,
        10028
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0xDE0B6B3A7640000"
    },
    "6083": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        10011,
        10028
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4192"
    },
    "6086": {
      "fn": "GeVault.latestAnswer",
      "jump": "i",
      "offset": [
        10011,
        10028
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6087": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        10011,
        10028
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6088": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        10011,
        10037
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17D1"
    },
    "6091": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        10011,
        10037
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6092": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        10011,
        10037
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6093": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        10011,
        10037
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41BF"
    },
    "6096": {
      "fn": "GeVault.latestAnswer",
      "jump": "i",
      "offset": [
        10011,
        10037
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6097": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        10011,
        10037
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6098": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        10001,
        10037
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6099": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        10001,
        10037
      ],
      "op": "POP",
      "path": "0"
    },
    "6100": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        9899,
        10042
      ],
      "op": "POP",
      "path": "0"
    },
    "6101": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        9899,
        10042
      ],
      "op": "POP",
      "path": "0"
    },
    "6102": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        9835,
        10042
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6103": {
      "fn": "GeVault.latestAnswer",
      "jump": "o",
      "offset": [
        9835,
        10042
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6104": {
      "offset": [
        1657,
        1688
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6105": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        1657,
        1688
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "6107": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        1657,
        1688
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6108": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        1657,
        1688
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6109": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        1657,
        1688
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6110": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        1657,
        1688
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6111": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        1657,
        1688
      ],
      "op": "LT",
      "path": "0"
    },
    "6112": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        1657,
        1688
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17E8"
    },
    "6115": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        1657,
        1688
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6116": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        1657,
        1688
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6118": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        1657,
        1688
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6119": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        1657,
        1688
      ],
      "op": "REVERT",
      "path": "0"
    },
    "6120": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        1657,
        1688
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6121": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        1657,
        1688
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6123": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        1657,
        1688
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6124": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        1657,
        1688
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6125": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        1657,
        1688
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6126": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        1657,
        1688
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6128": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        1657,
        1688
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6129": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        1657,
        1688
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6130": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        1657,
        1688
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "6131": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        1657,
        1688
      ],
      "op": "ADD",
      "path": "0"
    },
    "6132": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        1657,
        1688
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6137": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6139": {
      "op": "SHL"
    },
    "6140": {
      "op": "SUB"
    },
    "6141": {
      "offset": [
        1657,
        1688
      ],
      "op": "AND",
      "path": "0"
    },
    "6142": {
      "fn": "GeVault.latestAnswer",
      "offset": [
        1657,
        1688
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6143": {
      "op": "POP"
    },
    "6144": {
      "offset": [
        1657,
        1688
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6145": {
      "fn": "GeVault.latestAnswer",
      "jump": "o",
      "offset": [
        1657,
        1688
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6146": {
      "fn": "GeVault.pushTick",
      "offset": [
        3752,
        4379
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6147": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x5"
    },
    "6149": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6150": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6152": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6154": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6156": {
      "op": "SHL"
    },
    "6157": {
      "op": "SUB"
    },
    "6158": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "12"
    },
    "6159": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "28"
    },
    "6160": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "12"
    },
    "6161": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x182C"
    },
    "6164": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "6165": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "6167": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "6168": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6172": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6174": {
      "op": "SHL"
    },
    "6175": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6176": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6177": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "6179": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "12"
    },
    "6180": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x8AC"
    },
    "6183": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6184": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4578"
    },
    "6187": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "12"
    },
    "6188": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6189": {
      "fn": "GeVault.pushTick",
      "offset": [
        3805,
        3823
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6191": {
      "fn": "GeVault.pushTick",
      "offset": [
        3843,
        3845
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6192": {
      "fn": "GeVault.pushTick",
      "offset": [
        3805,
        3846
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6193": {
      "fn": "GeVault.pushTick",
      "offset": [
        3805,
        3846
      ],
      "op": "POP",
      "path": "0"
    },
    "6194": {
      "fn": "GeVault.pushTick",
      "offset": [
        3853,
        3861
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6196": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3867
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6201": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6203": {
      "op": "SHL"
    },
    "6204": {
      "op": "SUB"
    },
    "6205": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3874
      ],
      "op": "AND",
      "path": "0"
    },
    "6206": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3874
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x443EC74D"
    },
    "6211": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3876
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6213": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3876
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6214": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3876
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6215": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3876
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "6220": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3876
      ],
      "op": "AND",
      "path": "0"
    },
    "6221": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3876
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "6223": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3876
      ],
      "op": "SHL",
      "path": "0"
    },
    "6224": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3876
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6225": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3876
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6226": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3876
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6228": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3876
      ],
      "op": "ADD",
      "path": "0"
    },
    "6229": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3876
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6231": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3876
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6232": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3876
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6233": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3876
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6234": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3876
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6235": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3876
      ],
      "op": "SUB",
      "path": "0"
    },
    "6236": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3876
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6237": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3876
      ],
      "op": "DUP7",
      "path": "0"
    },
    "6238": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3876
      ],
      "op": "GAS",
      "path": "0"
    },
    "6239": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3876
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "6240": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3876
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6241": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3876
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6242": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3876
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6243": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3876
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1870"
    },
    "6246": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3876
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6247": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3876
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6248": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3876
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6250": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3876
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6251": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3876
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "6252": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3876
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6253": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3876
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6255": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3876
      ],
      "op": "REVERT",
      "path": "0"
    },
    "6256": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3876
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6257": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3876
      ],
      "op": "POP",
      "path": "0"
    },
    "6258": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3876
      ],
      "op": "POP",
      "path": "0"
    },
    "6259": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3876
      ],
      "op": "POP",
      "path": "0"
    },
    "6260": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3876
      ],
      "op": "POP",
      "path": "0"
    },
    "6261": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3876
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6263": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3876
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6264": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3876
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6265": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3876
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "6267": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3876
      ],
      "op": "NOT",
      "path": "0"
    },
    "6268": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3876
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "6270": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3876
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6271": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3876
      ],
      "op": "ADD",
      "path": "0"
    },
    "6272": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3876
      ],
      "op": "AND",
      "path": "0"
    },
    "6273": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3876
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6274": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3876
      ],
      "op": "ADD",
      "path": "0"
    },
    "6275": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3876
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6276": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3876
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6278": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3876
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6279": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3876
      ],
      "op": "POP",
      "path": "0"
    },
    "6280": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3876
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6281": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3876
      ],
      "op": "ADD",
      "path": "0"
    },
    "6282": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3876
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6283": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3876
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1894"
    },
    "6286": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3876
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6287": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3876
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6288": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3876
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x45AD"
    },
    "6291": {
      "fn": "GeVault.pushTick",
      "jump": "i",
      "offset": [
        3866,
        3876
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6292": {
      "fn": "GeVault.pushTick",
      "offset": [
        3866,
        3876
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6293": {
      "fn": "GeVault.pushTick",
      "offset": [
        3852,
        3876
      ],
      "op": "POP",
      "path": "0"
    },
    "6294": {
      "fn": "GeVault.pushTick",
      "offset": [
        3852,
        3876
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6295": {
      "fn": "GeVault.pushTick",
      "offset": [
        3852,
        3876
      ],
      "op": "POP",
      "path": "0"
    },
    "6296": {
      "fn": "GeVault.pushTick",
      "offset": [
        3883,
        3891
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6298": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3897
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6303": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6305": {
      "op": "SHL"
    },
    "6306": {
      "op": "SUB"
    },
    "6307": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3904
      ],
      "op": "AND",
      "path": "0"
    },
    "6308": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3904
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5EE04D78"
    },
    "6313": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3906
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6315": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3906
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6316": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3906
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6317": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3906
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "6322": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3906
      ],
      "op": "AND",
      "path": "0"
    },
    "6323": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3906
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "6325": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3906
      ],
      "op": "SHL",
      "path": "0"
    },
    "6326": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3906
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6327": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3906
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6328": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3906
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6330": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3906
      ],
      "op": "ADD",
      "path": "0"
    },
    "6331": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3906
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6333": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3906
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6334": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3906
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6335": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3906
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6336": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3906
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6337": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3906
      ],
      "op": "SUB",
      "path": "0"
    },
    "6338": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3906
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6339": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3906
      ],
      "op": "DUP7",
      "path": "0"
    },
    "6340": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3906
      ],
      "op": "GAS",
      "path": "0"
    },
    "6341": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3906
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "6342": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3906
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6343": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3906
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6344": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3906
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6345": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3906
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18D6"
    },
    "6348": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3906
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6349": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3906
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6350": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3906
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6352": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3906
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6353": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3906
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "6354": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3906
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6355": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3906
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6357": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3906
      ],
      "op": "REVERT",
      "path": "0"
    },
    "6358": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3906
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6359": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3906
      ],
      "op": "POP",
      "path": "0"
    },
    "6360": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3906
      ],
      "op": "POP",
      "path": "0"
    },
    "6361": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3906
      ],
      "op": "POP",
      "path": "0"
    },
    "6362": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3906
      ],
      "op": "POP",
      "path": "0"
    },
    "6363": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3906
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6365": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3906
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6366": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3906
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6367": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3906
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "6369": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3906
      ],
      "op": "NOT",
      "path": "0"
    },
    "6370": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3906
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "6372": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3906
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6373": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3906
      ],
      "op": "ADD",
      "path": "0"
    },
    "6374": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3906
      ],
      "op": "AND",
      "path": "0"
    },
    "6375": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3906
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6376": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3906
      ],
      "op": "ADD",
      "path": "0"
    },
    "6377": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3906
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6378": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3906
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6380": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3906
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6381": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3906
      ],
      "op": "POP",
      "path": "0"
    },
    "6382": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3906
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6383": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3906
      ],
      "op": "ADD",
      "path": "0"
    },
    "6384": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3906
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6385": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3906
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18FA"
    },
    "6388": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3906
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6389": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3906
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6390": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3906
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x45AD"
    },
    "6393": {
      "fn": "GeVault.pushTick",
      "jump": "i",
      "offset": [
        3896,
        3906
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6394": {
      "fn": "GeVault.pushTick",
      "offset": [
        3896,
        3906
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6395": {
      "op": "POP"
    },
    "6396": {
      "fn": "GeVault.pushTick",
      "offset": [
        3926,
        3932
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 58,
      "value": "0xA"
    },
    "6398": {
      "fn": "GeVault.pushTick",
      "offset": [
        3926,
        3932
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6399": {
      "fn": "GeVault.pushTick",
      "offset": [
        3882,
        3906
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6400": {
      "fn": "GeVault.pushTick",
      "offset": [
        3882,
        3906
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6401": {
      "op": "POP"
    },
    "6402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6406": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6408": {
      "op": "SHL"
    },
    "6409": {
      "op": "SUB"
    },
    "6410": {
      "fn": "GeVault.pushTick",
      "offset": [
        3920,
        3932
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6411": {
      "fn": "GeVault.pushTick",
      "offset": [
        3920,
        3932
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6412": {
      "fn": "GeVault.pushTick",
      "offset": [
        3920,
        3932
      ],
      "op": "AND",
      "path": "0"
    },
    "6413": {
      "fn": "GeVault.pushTick",
      "offset": [
        3926,
        3932
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6414": {
      "fn": "GeVault.pushTick",
      "offset": [
        3926,
        3932
      ],
      "op": "AND",
      "path": "0"
    },
    "6415": {
      "branch": 176,
      "fn": "GeVault.pushTick",
      "offset": [
        3920,
        3932
      ],
      "op": "EQ",
      "path": "0"
    },
    "6416": {
      "fn": "GeVault.pushTick",
      "offset": [
        3920,
        3948
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6417": {
      "fn": "GeVault.pushTick",
      "offset": [
        3920,
        3948
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6418": {
      "fn": "GeVault.pushTick",
      "offset": [
        3920,
        3948
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1928"
    },
    "6421": {
      "branch": 176,
      "fn": "GeVault.pushTick",
      "offset": [
        3920,
        3948
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6422": {
      "op": "POP"
    },
    "6423": {
      "fn": "GeVault.pushTick",
      "offset": [
        3942,
        3948
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "6425": {
      "fn": "GeVault.pushTick",
      "offset": [
        3942,
        3948
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6430": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6432": {
      "op": "SHL"
    },
    "6433": {
      "op": "SUB"
    },
    "6434": {
      "fn": "GeVault.pushTick",
      "offset": [
        3936,
        3948
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6435": {
      "fn": "GeVault.pushTick",
      "offset": [
        3936,
        3948
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6436": {
      "fn": "GeVault.pushTick",
      "offset": [
        3936,
        3948
      ],
      "op": "AND",
      "path": "0"
    },
    "6437": {
      "fn": "GeVault.pushTick",
      "offset": [
        3942,
        3948
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6438": {
      "fn": "GeVault.pushTick",
      "offset": [
        3942,
        3948
      ],
      "op": "AND",
      "path": "0"
    },
    "6439": {
      "branch": 177,
      "fn": "GeVault.pushTick",
      "offset": [
        3936,
        3948
      ],
      "op": "EQ",
      "path": "0"
    },
    "6440": {
      "fn": "GeVault.pushTick",
      "offset": [
        3920,
        3948
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6441": {
      "fn": "GeVault.pushTick",
      "offset": [
        3912,
        3968
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1944"
    },
    "6444": {
      "branch": 177,
      "fn": "GeVault.pushTick",
      "offset": [
        3912,
        3968
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6445": {
      "fn": "GeVault.pushTick",
      "offset": [
        3912,
        3968
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6447": {
      "fn": "GeVault.pushTick",
      "offset": [
        3912,
        3968
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6448": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6452": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6454": {
      "op": "SHL"
    },
    "6455": {
      "fn": "GeVault.pushTick",
      "offset": [
        3912,
        3968
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6456": {
      "fn": "GeVault.pushTick",
      "offset": [
        3912,
        3968
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6457": {
      "fn": "GeVault.pushTick",
      "offset": [
        3912,
        3968
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6459": {
      "fn": "GeVault.pushTick",
      "offset": [
        3912,
        3968
      ],
      "op": "ADD",
      "path": "0"
    },
    "6460": {
      "fn": "GeVault.pushTick",
      "offset": [
        3912,
        3968
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8AC"
    },
    "6463": {
      "fn": "GeVault.pushTick",
      "offset": [
        3912,
        3968
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6464": {
      "fn": "GeVault.pushTick",
      "offset": [
        3912,
        3968
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x45E2"
    },
    "6467": {
      "fn": "GeVault.pushTick",
      "jump": "i",
      "offset": [
        3912,
        3968
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6468": {
      "fn": "GeVault.pushTick",
      "offset": [
        3912,
        3968
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6469": {
      "fn": "GeVault.pushTick",
      "offset": [
        3978,
        3983
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "6471": {
      "fn": "GeVault.pushTick",
      "offset": [
        3978,
        3990
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6472": {
      "fn": "GeVault.pushTick",
      "offset": [
        3994,
        3995
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6474": {
      "branch": 178,
      "fn": "GeVault.pushTick",
      "offset": [
        3978,
        3995
      ],
      "op": "SUB",
      "path": "0"
    },
    "6475": {
      "fn": "GeVault.pushTick",
      "offset": [
        3974,
        4352
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x199E"
    },
    "6478": {
      "branch": 178,
      "fn": "GeVault.pushTick",
      "offset": [
        3974,
        4352
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6479": {
      "fn": "GeVault.pushTick",
      "offset": [
        3997,
        4002
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 59,
      "value": "0x8"
    },
    "6481": {
      "fn": "GeVault.pushTick",
      "offset": [
        3997,
        4010
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6482": {
      "fn": "GeVault.pushTick",
      "offset": [
        3997,
        4010
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6483": {
      "fn": "GeVault.pushTick",
      "offset": [
        3997,
        4010
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "6485": {
      "fn": "GeVault.pushTick",
      "offset": [
        3997,
        4010
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6486": {
      "fn": "GeVault.pushTick",
      "offset": [
        3997,
        4010
      ],
      "op": "ADD",
      "path": "0"
    },
    "6487": {
      "fn": "GeVault.pushTick",
      "offset": [
        3997,
        4010
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6488": {
      "fn": "GeVault.pushTick",
      "offset": [
        3997,
        4010
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "6489": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6491": {
      "fn": "GeVault.pushTick",
      "offset": [
        3997,
        4010
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6492": {
      "fn": "GeVault.pushTick",
      "offset": [
        3997,
        4010
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6493": {
      "fn": "GeVault.pushTick",
      "offset": [
        3997,
        4010
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6494": {
      "fn": "GeVault.pushTick",
      "offset": [
        3997,
        4010
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6495": {
      "fn": "GeVault.pushTick",
      "offset": [
        3997,
        4010
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3"
    },
    "6528": {
      "fn": "GeVault.pushTick",
      "offset": [
        3997,
        4010
      ],
      "op": "ADD",
      "path": "0"
    },
    "6529": {
      "fn": "GeVault.pushTick",
      "offset": [
        3997,
        4010
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6530": {
      "fn": "GeVault.pushTick",
      "offset": [
        3997,
        4010
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6535": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6537": {
      "op": "SHL"
    },
    "6538": {
      "op": "SUB"
    },
    "6539": {
      "op": "NOT"
    },
    "6540": {
      "fn": "GeVault.pushTick",
      "offset": [
        3997,
        4010
      ],
      "op": "AND",
      "path": "0"
    },
    "6541": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6545": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6547": {
      "op": "SHL"
    },
    "6548": {
      "op": "SUB"
    },
    "6549": {
      "fn": "GeVault.pushTick",
      "offset": [
        3997,
        4010
      ],
      "op": "DUP6",
      "path": "0"
    },
    "6550": {
      "fn": "GeVault.pushTick",
      "offset": [
        3997,
        4010
      ],
      "op": "AND",
      "path": "0"
    },
    "6551": {
      "fn": "GeVault.pushTick",
      "offset": [
        3997,
        4010
      ],
      "op": "OR",
      "path": "0"
    },
    "6552": {
      "fn": "GeVault.pushTick",
      "offset": [
        3997,
        4010
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6553": {
      "fn": "GeVault.pushTick",
      "offset": [
        3997,
        4010
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "6554": {
      "fn": "GeVault.pushTick",
      "offset": [
        3974,
        4352
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C81"
    },
    "6557": {
      "fn": "GeVault.pushTick",
      "offset": [
        3974,
        4352
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6558": {
      "fn": "GeVault.pushTick",
      "offset": [
        3974,
        4352
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6559": {
      "fn": "GeVault.pushTick",
      "offset": [
        4078,
        4095
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x12"
    },
    "6561": {
      "fn": "GeVault.pushTick",
      "offset": [
        4078,
        4095
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6562": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6564": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6566": {
      "op": "SHL"
    },
    "6567": {
      "fn": "GeVault.pushTick",
      "offset": [
        4078,
        4095
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6568": {
      "fn": "GeVault.pushTick",
      "offset": [
        4078,
        4095
      ],
      "op": "DIV",
      "path": "0"
    },
    "6569": {
      "fn": "GeVault.pushTick",
      "offset": [
        4078,
        4095
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "6571": {
      "branch": 179,
      "fn": "GeVault.pushTick",
      "offset": [
        4078,
        4095
      ],
      "op": "AND",
      "path": "0"
    },
    "6572": {
      "fn": "GeVault.pushTick",
      "offset": [
        4074,
        4298
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6573": {
      "fn": "GeVault.pushTick",
      "offset": [
        4074,
        4298
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AF5"
    },
    "6576": {
      "branch": 179,
      "fn": "GeVault.pushTick",
      "offset": [
        4074,
        4298
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6577": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4136
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 60,
      "value": "0x8"
    },
    "6579": {
      "fn": "GeVault.pushTick",
      "offset": [
        4137,
        4149
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6580": {
      "fn": "GeVault.pushTick",
      "offset": [
        4137,
        4149
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6581": {
      "fn": "GeVault.pushTick",
      "offset": [
        4137,
        4151
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19C0"
    },
    "6584": {
      "fn": "GeVault.pushTick",
      "offset": [
        4137,
        4151
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6585": {
      "fn": "GeVault.pushTick",
      "offset": [
        4150,
        4151
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "6587": {
      "fn": "GeVault.pushTick",
      "offset": [
        4150,
        4151
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6588": {
      "fn": "GeVault.pushTick",
      "offset": [
        4137,
        4151
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x42F7"
    },
    "6591": {
      "fn": "GeVault.pushTick",
      "jump": "i",
      "offset": [
        4137,
        4151
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6592": {
      "fn": "GeVault.pushTick",
      "offset": [
        4137,
        4151
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6593": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4152
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6594": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4152
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6595": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4152
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6596": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4152
      ],
      "op": "LT",
      "path": "0"
    },
    "6597": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4152
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19D0"
    },
    "6600": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4152
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6601": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4152
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19D0"
    },
    "6604": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4152
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4370"
    },
    "6607": {
      "fn": "GeVault.pushTick",
      "jump": "i",
      "offset": [
        4131,
        4152
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6608": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4152
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6609": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4152
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6611": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4152
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6612": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4152
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6613": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4152
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6614": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4152
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6616": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4152
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6617": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4152
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6618": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4152
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6619": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4152
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "6620": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4152
      ],
      "op": "ADD",
      "path": "0"
    },
    "6621": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4152
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6622": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6624": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4164
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6625": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4164
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6626": {
      "op": "PUSH4",
      "value": "0xE4FBA45"
    },
    "6631": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "6633": {
      "op": "SHL"
    },
    "6634": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4164
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6635": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4164
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6636": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4164
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6637": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4164
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6642": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6644": {
      "op": "SHL"
    },
    "6645": {
      "op": "SUB"
    },
    "6646": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4152
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6647": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4152
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6648": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4152
      ],
      "op": "AND",
      "path": "0"
    },
    "6649": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4152
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6650": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4162
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x727DD228"
    },
    "6655": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4162
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6656": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6658": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4164
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6659": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4164
      ],
      "op": "DUP5",
      "path": "0"
    },
    "6660": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4164
      ],
      "op": "ADD",
      "path": "0"
    },
    "6661": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4164
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "6662": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4164
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6663": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4164
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6664": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4164
      ],
      "op": "SUB",
      "path": "0"
    },
    "6665": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4164
      ],
      "op": "ADD",
      "path": "0"
    },
    "6666": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4164
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6667": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4152
      ],
      "op": "DUP7",
      "path": "0"
    },
    "6668": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4164
      ],
      "op": "GAS",
      "path": "0"
    },
    "6669": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4164
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "6670": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4164
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6671": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4164
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6672": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4164
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6673": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4164
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A1E"
    },
    "6676": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4164
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6677": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4164
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6678": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6680": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4164
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6681": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4164
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "6682": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4164
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6683": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6685": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4164
      ],
      "op": "REVERT",
      "path": "0"
    },
    "6686": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4164
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6687": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4164
      ],
      "op": "POP",
      "path": "0"
    },
    "6688": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4164
      ],
      "op": "POP",
      "path": "0"
    },
    "6689": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4164
      ],
      "op": "POP",
      "path": "0"
    },
    "6690": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4164
      ],
      "op": "POP",
      "path": "0"
    },
    "6691": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6693": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4164
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6694": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4164
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6695": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "6697": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4164
      ],
      "op": "NOT",
      "path": "0"
    },
    "6698": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "6700": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4164
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6701": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4164
      ],
      "op": "ADD",
      "path": "0"
    },
    "6702": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4164
      ],
      "op": "AND",
      "path": "0"
    },
    "6703": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4164
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6704": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4164
      ],
      "op": "ADD",
      "path": "0"
    },
    "6705": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4164
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6706": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6708": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4164
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6709": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4164
      ],
      "op": "POP",
      "path": "0"
    },
    "6710": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4164
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6711": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4164
      ],
      "op": "ADD",
      "path": "0"
    },
    "6712": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4164
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6713": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4164
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A42"
    },
    "6716": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4164
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6717": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4164
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6718": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4164
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x461D"
    },
    "6721": {
      "fn": "GeVault.pushTick",
      "jump": "i",
      "offset": [
        4131,
        4164
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6722": {
      "fn": "GeVault.pushTick",
      "offset": [
        4131,
        4164
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6723": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "6725": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4164
      ],
      "op": "SIGNEXTEND",
      "path": "0"
    },
    "6726": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4116
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6727": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6729": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6731": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6733": {
      "op": "SHL"
    },
    "6734": {
      "op": "SUB"
    },
    "6735": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4126
      ],
      "op": "AND",
      "path": "0"
    },
    "6736": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4126
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x9B1344AC"
    },
    "6741": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4128
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6743": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4128
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6744": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4128
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6745": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4128
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "6750": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4128
      ],
      "op": "AND",
      "path": "0"
    },
    "6751": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4128
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "6753": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4128
      ],
      "op": "SHL",
      "path": "0"
    },
    "6754": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4128
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6755": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4128
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6756": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4128
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6758": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4128
      ],
      "op": "ADD",
      "path": "0"
    },
    "6759": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4128
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6761": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4128
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6763": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4128
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6764": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4128
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6765": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4128
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6766": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4128
      ],
      "op": "SUB",
      "path": "0"
    },
    "6767": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4128
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6768": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4128
      ],
      "op": "DUP7",
      "path": "0"
    },
    "6769": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4128
      ],
      "op": "GAS",
      "path": "0"
    },
    "6770": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4128
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "6771": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4128
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6772": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4128
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6773": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4128
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6774": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4128
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A83"
    },
    "6777": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4128
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6778": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4128
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6779": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4128
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6781": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4128
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6782": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4128
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "6783": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4128
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6784": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4128
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6786": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4128
      ],
      "op": "REVERT",
      "path": "0"
    },
    "6787": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4128
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6788": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4128
      ],
      "op": "POP",
      "path": "0"
    },
    "6789": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4128
      ],
      "op": "POP",
      "path": "0"
    },
    "6790": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4128
      ],
      "op": "POP",
      "path": "0"
    },
    "6791": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4128
      ],
      "op": "POP",
      "path": "0"
    },
    "6792": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4128
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6794": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4128
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6795": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4128
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6796": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4128
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "6798": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4128
      ],
      "op": "NOT",
      "path": "0"
    },
    "6799": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4128
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "6801": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4128
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6802": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4128
      ],
      "op": "ADD",
      "path": "0"
    },
    "6803": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4128
      ],
      "op": "AND",
      "path": "0"
    },
    "6804": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4128
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6805": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4128
      ],
      "op": "ADD",
      "path": "0"
    },
    "6806": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4128
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6807": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4128
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6809": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4128
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6810": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4128
      ],
      "op": "POP",
      "path": "0"
    },
    "6811": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4128
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6812": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4128
      ],
      "op": "ADD",
      "path": "0"
    },
    "6813": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4128
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6814": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4128
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AA7"
    },
    "6817": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4128
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6818": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4128
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6819": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4128
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x461D"
    },
    "6822": {
      "fn": "GeVault.pushTick",
      "jump": "i",
      "offset": [
        4115,
        4128
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6823": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4128
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6824": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "6826": {
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4164
      ],
      "op": "SIGNEXTEND",
      "path": "0"
    },
    "6827": {
      "branch": 180,
      "fn": "GeVault.pushTick",
      "offset": [
        4115,
        4164
      ],
      "op": "SGT",
      "path": "0"
    },
    "6828": {
      "fn": "GeVault.pushTick",
      "offset": [
        4106,
        4191
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AF0"
    },
    "6831": {
      "branch": 180,
      "fn": "GeVault.pushTick",
      "offset": [
        4106,
        4191
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6832": {
      "fn": "GeVault.pushTick",
      "offset": [
        4106,
        4191
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6834": {
      "fn": "GeVault.pushTick",
      "offset": [
        4106,
        4191
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6835": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6839": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6841": {
      "op": "SHL"
    },
    "6842": {
      "fn": "GeVault.pushTick",
      "offset": [
        4106,
        4191
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6843": {
      "fn": "GeVault.pushTick",
      "offset": [
        4106,
        4191
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6844": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6846": {
      "fn": "GeVault.pushTick",
      "offset": [
        4106,
        4191
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6848": {
      "fn": "GeVault.pushTick",
      "offset": [
        4106,
        4191
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6849": {
      "fn": "GeVault.pushTick",
      "offset": [
        4106,
        4191
      ],
      "op": "ADD",
      "path": "0"
    },
    "6850": {
      "op": "MSTORE"
    },
    "6851": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "6853": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6855": {
      "op": "DUP3"
    },
    "6856": {
      "op": "ADD"
    },
    "6857": {
      "op": "MSTORE"
    },
    "6858": {
      "op": "PUSH22",
      "value": "0x4745563A2050757368205469636B204F7665726C617"
    },
    "6881": {
      "op": "PUSH1",
      "value": "0x54"
    },
    "6883": {
      "op": "SHL"
    },
    "6884": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6886": {
      "op": "DUP3"
    },
    "6887": {
      "op": "ADD"
    },
    "6888": {
      "op": "MSTORE"
    },
    "6889": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6891": {
      "op": "ADD"
    },
    "6892": {
      "fn": "GeVault.pushTick",
      "offset": [
        4106,
        4191
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8AC"
    },
    "6895": {
      "op": "JUMP"
    },
    "6896": {
      "fn": "GeVault.pushTick",
      "offset": [
        4106,
        4191
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6897": {
      "fn": "GeVault.pushTick",
      "offset": [
        4074,
        4298
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C35"
    },
    "6900": {
      "fn": "GeVault.pushTick",
      "offset": [
        4074,
        4298
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6901": {
      "fn": "GeVault.pushTick",
      "offset": [
        4074,
        4298
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6902": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4243
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 61,
      "value": "0x8"
    },
    "6904": {
      "fn": "GeVault.pushTick",
      "offset": [
        4244,
        4256
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6905": {
      "fn": "GeVault.pushTick",
      "offset": [
        4244,
        4256
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6906": {
      "fn": "GeVault.pushTick",
      "offset": [
        4244,
        4258
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B05"
    },
    "6909": {
      "fn": "GeVault.pushTick",
      "offset": [
        4244,
        4258
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6910": {
      "fn": "GeVault.pushTick",
      "offset": [
        4257,
        4258
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "6912": {
      "fn": "GeVault.pushTick",
      "offset": [
        4257,
        4258
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6913": {
      "fn": "GeVault.pushTick",
      "offset": [
        4244,
        4258
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x42F7"
    },
    "6916": {
      "fn": "GeVault.pushTick",
      "jump": "i",
      "offset": [
        4244,
        4258
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6917": {
      "fn": "GeVault.pushTick",
      "offset": [
        4244,
        4258
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6918": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4259
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6919": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4259
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6920": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4259
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6921": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4259
      ],
      "op": "LT",
      "path": "0"
    },
    "6922": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4259
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B15"
    },
    "6925": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4259
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6926": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4259
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B15"
    },
    "6929": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4259
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4370"
    },
    "6932": {
      "fn": "GeVault.pushTick",
      "jump": "i",
      "offset": [
        4238,
        4259
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6933": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4259
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6934": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4259
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6936": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4259
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6937": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4259
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6938": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4259
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6939": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4259
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6941": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4259
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6942": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4259
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6943": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4259
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6944": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4259
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "6945": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4259
      ],
      "op": "ADD",
      "path": "0"
    },
    "6946": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4259
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6947": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4271
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6949": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4271
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6950": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4271
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6951": {
      "op": "PUSH4",
      "value": "0x26C4D12B"
    },
    "6956": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "6958": {
      "op": "SHL"
    },
    "6959": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4271
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6960": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4271
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6961": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4271
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6962": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4271
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6963": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6965": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6967": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6969": {
      "op": "SHL"
    },
    "6970": {
      "op": "SUB"
    },
    "6971": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4259
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6972": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4259
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6973": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4259
      ],
      "op": "AND",
      "path": "0"
    },
    "6974": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4259
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6975": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4269
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x9B1344AC"
    },
    "6980": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4269
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6981": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4271
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6983": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4271
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6984": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4271
      ],
      "op": "DUP5",
      "path": "0"
    },
    "6985": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4271
      ],
      "op": "ADD",
      "path": "0"
    },
    "6986": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4271
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "6987": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4271
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6988": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4271
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6989": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4271
      ],
      "op": "SUB",
      "path": "0"
    },
    "6990": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4271
      ],
      "op": "ADD",
      "path": "0"
    },
    "6991": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4271
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6992": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4259
      ],
      "op": "DUP7",
      "path": "0"
    },
    "6993": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4271
      ],
      "op": "GAS",
      "path": "0"
    },
    "6994": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4271
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "6995": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4271
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6996": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4271
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6997": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4271
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6998": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4271
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B63"
    },
    "7001": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4271
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7002": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4271
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "7003": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4271
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7005": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4271
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7006": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4271
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "7007": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4271
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "7008": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4271
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7010": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4271
      ],
      "op": "REVERT",
      "path": "0"
    },
    "7011": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4271
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7012": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4271
      ],
      "op": "POP",
      "path": "0"
    },
    "7013": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4271
      ],
      "op": "POP",
      "path": "0"
    },
    "7014": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4271
      ],
      "op": "POP",
      "path": "0"
    },
    "7015": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4271
      ],
      "op": "POP",
      "path": "0"
    },
    "7016": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4271
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7018": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4271
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7019": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4271
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "7020": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4271
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "7022": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4271
      ],
      "op": "NOT",
      "path": "0"
    },
    "7023": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4271
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "7025": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4271
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7026": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4271
      ],
      "op": "ADD",
      "path": "0"
    },
    "7027": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4271
      ],
      "op": "AND",
      "path": "0"
    },
    "7028": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4271
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7029": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4271
      ],
      "op": "ADD",
      "path": "0"
    },
    "7030": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4271
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7031": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4271
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7033": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4271
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7034": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4271
      ],
      "op": "POP",
      "path": "0"
    },
    "7035": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4271
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7036": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4271
      ],
      "op": "ADD",
      "path": "0"
    },
    "7037": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4271
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7038": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4271
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B87"
    },
    "7041": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4271
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7042": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4271
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7043": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4271
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x461D"
    },
    "7046": {
      "fn": "GeVault.pushTick",
      "jump": "i",
      "offset": [
        4238,
        4271
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7047": {
      "fn": "GeVault.pushTick",
      "offset": [
        4238,
        4271
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7048": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4271
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "7050": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4271
      ],
      "op": "SIGNEXTEND",
      "path": "0"
    },
    "7051": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4223
      ],
      "op": "DUP4",
      "path": "0"
    },
    "7052": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7054": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7056": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7058": {
      "op": "SHL"
    },
    "7059": {
      "op": "SUB"
    },
    "7060": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4233
      ],
      "op": "AND",
      "path": "0"
    },
    "7061": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4233
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x727DD228"
    },
    "7066": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4235
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7068": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4235
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7069": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4235
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7070": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4235
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "7075": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4235
      ],
      "op": "AND",
      "path": "0"
    },
    "7076": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4235
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "7078": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4235
      ],
      "op": "SHL",
      "path": "0"
    },
    "7079": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4235
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7080": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4235
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7081": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4235
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7083": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4235
      ],
      "op": "ADD",
      "path": "0"
    },
    "7084": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4235
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7086": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4235
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7088": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4235
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7089": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4235
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7090": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4235
      ],
      "op": "DUP4",
      "path": "0"
    },
    "7091": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4235
      ],
      "op": "SUB",
      "path": "0"
    },
    "7092": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4235
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7093": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4235
      ],
      "op": "DUP7",
      "path": "0"
    },
    "7094": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4235
      ],
      "op": "GAS",
      "path": "0"
    },
    "7095": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4235
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "7096": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4235
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7097": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4235
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7098": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4235
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7099": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4235
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BC8"
    },
    "7102": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4235
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7103": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4235
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "7104": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4235
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7106": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4235
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7107": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4235
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "7108": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4235
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "7109": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4235
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7111": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4235
      ],
      "op": "REVERT",
      "path": "0"
    },
    "7112": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4235
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7113": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4235
      ],
      "op": "POP",
      "path": "0"
    },
    "7114": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4235
      ],
      "op": "POP",
      "path": "0"
    },
    "7115": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4235
      ],
      "op": "POP",
      "path": "0"
    },
    "7116": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4235
      ],
      "op": "POP",
      "path": "0"
    },
    "7117": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4235
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7119": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4235
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7120": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4235
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "7121": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4235
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "7123": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4235
      ],
      "op": "NOT",
      "path": "0"
    },
    "7124": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4235
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "7126": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4235
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7127": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4235
      ],
      "op": "ADD",
      "path": "0"
    },
    "7128": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4235
      ],
      "op": "AND",
      "path": "0"
    },
    "7129": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4235
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7130": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4235
      ],
      "op": "ADD",
      "path": "0"
    },
    "7131": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4235
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7132": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4235
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7134": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4235
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7135": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4235
      ],
      "op": "POP",
      "path": "0"
    },
    "7136": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4235
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7137": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4235
      ],
      "op": "ADD",
      "path": "0"
    },
    "7138": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4235
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7139": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4235
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BEC"
    },
    "7142": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4235
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7143": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4235
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7144": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4235
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x461D"
    },
    "7147": {
      "fn": "GeVault.pushTick",
      "jump": "i",
      "offset": [
        4222,
        4235
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7148": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4235
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7149": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4271
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "7151": {
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4271
      ],
      "op": "SIGNEXTEND",
      "path": "0"
    },
    "7152": {
      "branch": 181,
      "fn": "GeVault.pushTick",
      "offset": [
        4222,
        4271
      ],
      "op": "SLT",
      "path": "0"
    },
    "7153": {
      "fn": "GeVault.pushTick",
      "offset": [
        4213,
        4298
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C35"
    },
    "7156": {
      "branch": 181,
      "fn": "GeVault.pushTick",
      "offset": [
        4213,
        4298
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7157": {
      "fn": "GeVault.pushTick",
      "offset": [
        4213,
        4298
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7159": {
      "fn": "GeVault.pushTick",
      "offset": [
        4213,
        4298
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7160": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7164": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7166": {
      "op": "SHL"
    },
    "7167": {
      "fn": "GeVault.pushTick",
      "offset": [
        4213,
        4298
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7168": {
      "fn": "GeVault.pushTick",
      "offset": [
        4213,
        4298
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7169": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7171": {
      "fn": "GeVault.pushTick",
      "offset": [
        4213,
        4298
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7173": {
      "fn": "GeVault.pushTick",
      "offset": [
        4213,
        4298
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7174": {
      "fn": "GeVault.pushTick",
      "offset": [
        4213,
        4298
      ],
      "op": "ADD",
      "path": "0"
    },
    "7175": {
      "op": "MSTORE"
    },
    "7176": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "7178": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7180": {
      "op": "DUP3"
    },
    "7181": {
      "op": "ADD"
    },
    "7182": {
      "op": "MSTORE"
    },
    "7183": {
      "op": "PUSH22",
      "value": "0x4745563A2050757368205469636B204F7665726C617"
    },
    "7206": {
      "op": "PUSH1",
      "value": "0x54"
    },
    "7208": {
      "op": "SHL"
    },
    "7209": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7211": {
      "op": "DUP3"
    },
    "7212": {
      "op": "ADD"
    },
    "7213": {
      "op": "MSTORE"
    },
    "7214": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7216": {
      "op": "ADD"
    },
    "7217": {
      "fn": "GeVault.pushTick",
      "offset": [
        4213,
        4298
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8AC"
    },
    "7220": {
      "op": "JUMP"
    },
    "7221": {
      "fn": "GeVault.pushTick",
      "offset": [
        4213,
        4298
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7222": {
      "fn": "GeVault.pushTick",
      "offset": [
        4313,
        4318
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 62,
      "value": "0x8"
    },
    "7224": {
      "fn": "GeVault.pushTick",
      "offset": [
        4313,
        4345
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7225": {
      "fn": "GeVault.pushTick",
      "offset": [
        4313,
        4345
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7226": {
      "fn": "GeVault.pushTick",
      "offset": [
        4313,
        4345
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "7228": {
      "fn": "GeVault.pushTick",
      "offset": [
        4313,
        4345
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7229": {
      "fn": "GeVault.pushTick",
      "offset": [
        4313,
        4345
      ],
      "op": "ADD",
      "path": "0"
    },
    "7230": {
      "fn": "GeVault.pushTick",
      "offset": [
        4313,
        4345
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7231": {
      "fn": "GeVault.pushTick",
      "offset": [
        4313,
        4345
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "7232": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7234": {
      "fn": "GeVault.pushTick",
      "offset": [
        4313,
        4345
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7235": {
      "fn": "GeVault.pushTick",
      "offset": [
        4313,
        4345
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7236": {
      "fn": "GeVault.pushTick",
      "offset": [
        4313,
        4345
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7237": {
      "fn": "GeVault.pushTick",
      "offset": [
        4313,
        4345
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7238": {
      "fn": "GeVault.pushTick",
      "offset": [
        4313,
        4345
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3"
    },
    "7271": {
      "fn": "GeVault.pushTick",
      "offset": [
        4313,
        4345
      ],
      "op": "ADD",
      "path": "0"
    },
    "7272": {
      "fn": "GeVault.pushTick",
      "offset": [
        4313,
        4345
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7273": {
      "fn": "GeVault.pushTick",
      "offset": [
        4313,
        4345
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7274": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7278": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7280": {
      "op": "SHL"
    },
    "7281": {
      "op": "SUB"
    },
    "7282": {
      "op": "NOT"
    },
    "7283": {
      "fn": "GeVault.pushTick",
      "offset": [
        4313,
        4345
      ],
      "op": "AND",
      "path": "0"
    },
    "7284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7288": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7290": {
      "op": "SHL"
    },
    "7291": {
      "op": "SUB"
    },
    "7292": {
      "fn": "GeVault.pushTick",
      "offset": [
        4313,
        4345
      ],
      "op": "DUP7",
      "path": "0"
    },
    "7293": {
      "fn": "GeVault.pushTick",
      "offset": [
        4313,
        4345
      ],
      "op": "AND",
      "path": "0"
    },
    "7294": {
      "fn": "GeVault.pushTick",
      "offset": [
        4313,
        4345
      ],
      "op": "OR",
      "path": "0"
    },
    "7295": {
      "fn": "GeVault.pushTick",
      "offset": [
        4313,
        4345
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7296": {
      "fn": "GeVault.pushTick",
      "offset": [
        4313,
        4345
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "7297": {
      "fn": "GeVault.pushTick",
      "offset": [
        3974,
        4352
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7298": {
      "fn": "GeVault.pushTick",
      "offset": [
        4362,
        4374
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 63,
      "value": "0x40"
    },
    "7300": {
      "fn": "GeVault.pushTick",
      "offset": [
        4362,
        4374
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7305": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7307": {
      "op": "SHL"
    },
    "7308": {
      "op": "SUB"
    },
    "7309": {
      "fn": "GeVault.pushTick",
      "offset": [
        4362,
        4374
      ],
      "op": "DUP6",
      "path": "0"
    },
    "7310": {
      "fn": "GeVault.pushTick",
      "offset": [
        4362,
        4374
      ],
      "op": "AND",
      "path": "0"
    },
    "7311": {
      "fn": "GeVault.pushTick",
      "offset": [
        4362,
        4374
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7312": {
      "fn": "GeVault.pushTick",
      "offset": [
        4362,
        4374
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xF3FE65AEFC0C6A58D6E37D115ED356186C3088909BC0642D064DBB0D8F0361EE"
    },
    "7345": {
      "fn": "GeVault.pushTick",
      "offset": [
        4362,
        4374
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7346": {
      "fn": "GeVault.pushTick",
      "offset": [
        4362,
        4374
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7348": {
      "fn": "GeVault.pushTick",
      "offset": [
        4362,
        4374
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7349": {
      "fn": "GeVault.pushTick",
      "offset": [
        4362,
        4374
      ],
      "op": "LOG2",
      "path": "0"
    },
    "7350": {
      "fn": "GeVault.pushTick",
      "offset": [
        3799,
        4379
      ],
      "op": "POP",
      "path": "0"
    },
    "7351": {
      "fn": "GeVault.pushTick",
      "offset": [
        3799,
        4379
      ],
      "op": "POP",
      "path": "0"
    },
    "7352": {
      "fn": "GeVault.pushTick",
      "offset": [
        3799,
        4379
      ],
      "op": "POP",
      "path": "0"
    },
    "7353": {
      "fn": "GeVault.pushTick",
      "offset": [
        3752,
        4379
      ],
      "op": "POP",
      "path": "0"
    },
    "7354": {
      "fn": "GeVault.pushTick",
      "jump": "o",
      "offset": [
        3752,
        4379
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7355": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7356": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x5"
    },
    "7358": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7363": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7365": {
      "op": "SHL"
    },
    "7366": {
      "op": "SUB"
    },
    "7367": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "12"
    },
    "7368": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "28"
    },
    "7369": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "12"
    },
    "7370": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1CE5"
    },
    "7373": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "7374": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "7376": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "7377": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7381": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7383": {
      "op": "SHL"
    },
    "7384": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "12"
    },
    "7385": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "7386": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "7388": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "12"
    },
    "7389": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x8AC"
    },
    "7392": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "7393": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4578"
    },
    "7396": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "12"
    },
    "7397": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7398": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 64,
      "value": "0x1CEF"
    },
    "7401": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "7403": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x37A6"
    },
    "7406": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "12"
    },
    "7407": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "7408": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "12"
    },
    "7409": {
      "fn": "GeVault.rebalance",
      "offset": [
        6471,
        6620
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7410": {
      "fn": "GeVault.rebalance",
      "offset": [
        6513,
        6532
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 65,
      "value": "0x1CF9"
    },
    "7413": {
      "fn": "GeVault.rebalance",
      "offset": [
        6513,
        6530
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A44"
    },
    "7416": {
      "fn": "GeVault.rebalance",
      "jump": "i",
      "offset": [
        6513,
        6532
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7417": {
      "branch": 182,
      "fn": "GeVault.rebalance",
      "offset": [
        6513,
        6532
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7418": {
      "fn": "GeVault.rebalance",
      "offset": [
        6505,
        6554
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D15"
    },
    "7421": {
      "branch": 182,
      "fn": "GeVault.rebalance",
      "offset": [
        6505,
        6554
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7422": {
      "fn": "GeVault.rebalance",
      "offset": [
        6505,
        6554
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7424": {
      "fn": "GeVault.rebalance",
      "offset": [
        6505,
        6554
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7425": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7429": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7431": {
      "op": "SHL"
    },
    "7432": {
      "fn": "GeVault.rebalance",
      "offset": [
        6505,
        6554
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7433": {
      "fn": "GeVault.rebalance",
      "offset": [
        6505,
        6554
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7434": {
      "fn": "GeVault.rebalance",
      "offset": [
        6505,
        6554
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7436": {
      "fn": "GeVault.rebalance",
      "offset": [
        6505,
        6554
      ],
      "op": "ADD",
      "path": "0"
    },
    "7437": {
      "fn": "GeVault.rebalance",
      "offset": [
        6505,
        6554
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8AC"
    },
    "7440": {
      "fn": "GeVault.rebalance",
      "offset": [
        6505,
        6554
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7441": {
      "fn": "GeVault.rebalance",
      "offset": [
        6505,
        6554
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4151"
    },
    "7444": {
      "fn": "GeVault.rebalance",
      "jump": "i",
      "offset": [
        6505,
        6554
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7445": {
      "fn": "GeVault.rebalance",
      "offset": [
        6505,
        6554
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7446": {
      "fn": "GeVault.rebalance",
      "offset": [
        6560,
        6580
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 66,
      "value": "0x1D1D"
    },
    "7449": {
      "fn": "GeVault.rebalance",
      "offset": [
        6560,
        6578
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31C1"
    },
    "7452": {
      "fn": "GeVault.rebalance",
      "jump": "i",
      "offset": [
        6560,
        6580
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7453": {
      "fn": "GeVault.rebalance",
      "offset": [
        6560,
        6580
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7454": {
      "fn": "GeVault.rebalance",
      "offset": [
        6590,
        6599
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "7456": {
      "fn": "GeVault.rebalance",
      "offset": [
        6590,
        6599
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7459": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7461": {
      "op": "SHL"
    },
    "7462": {
      "fn": "GeVault.rebalance",
      "offset": [
        6590,
        6599
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7463": {
      "fn": "GeVault.rebalance",
      "offset": [
        6590,
        6599
      ],
      "op": "DIV",
      "path": "0"
    },
    "7464": {
      "fn": "GeVault.rebalance",
      "offset": [
        6590,
        6599
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "7466": {
      "branch": 183,
      "fn": "GeVault.rebalance",
      "offset": [
        6590,
        6599
      ],
      "op": "AND",
      "path": "0"
    },
    "7467": {
      "fn": "GeVault.rebalance",
      "offset": [
        6586,
        6615
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7468": {
      "fn": "GeVault.rebalance",
      "offset": [
        6586,
        6615
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CEF"
    },
    "7471": {
      "branch": 183,
      "fn": "GeVault.rebalance",
      "offset": [
        6586,
        6615
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7472": {
      "fn": "GeVault.rebalance",
      "offset": [
        6601,
        6615
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 67,
      "value": "0x1CEF"
    },
    "7475": {
      "fn": "GeVault.rebalance",
      "offset": [
        6601,
        6613
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31E9"
    },
    "7478": {
      "fn": "GeVault.rebalance",
      "jump": "i",
      "offset": [
        6601,
        6615
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7479": {
      "fn": "ERC20.symbol",
      "offset": [
        2352,
        2454
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7480": {
      "fn": "ERC20.symbol",
      "offset": [
        2408,
        2421
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x60"
    },
    "7482": {
      "fn": "ERC20.symbol",
      "offset": [
        2440,
        2447
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 68,
      "value": "0x4"
    },
    "7484": {
      "fn": "ERC20.symbol",
      "offset": [
        2433,
        2447
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7485": {
      "fn": "ERC20.symbol",
      "offset": [
        2433,
        2447
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "7486": {
      "fn": "ERC20.symbol",
      "offset": [
        2433,
        2447
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x116E"
    },
    "7489": {
      "fn": "ERC20.symbol",
      "offset": [
        2433,
        2447
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7490": {
      "fn": "ERC20.symbol",
      "offset": [
        2433,
        2447
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4336"
    },
    "7493": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2433,
        2447
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7494": {
      "fn": "GeVault.getTVL",
      "offset": [
        13547,
        13771
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7495": {
      "fn": "GeVault.getTVL",
      "offset": [
        13586,
        13598
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7497": {
      "fn": "GeVault.getTVL",
      "offset": [
        13586,
        13598
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7498": {
      "fn": "GeVault.getTVL",
      "offset": [
        13605,
        13767
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7499": {
      "fn": "GeVault.getTVL",
      "offset": [
        13621,
        13626
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "7501": {
      "fn": "GeVault.getTVL",
      "offset": [
        13621,
        13633
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7502": {
      "fn": "GeVault.getTVL",
      "offset": [
        13619,
        13633
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7503": {
      "fn": "GeVault.getTVL",
      "offset": [
        13619,
        13633
      ],
      "op": "LT",
      "path": "0"
    },
    "7504": {
      "fn": "GeVault.getTVL",
      "offset": [
        13605,
        13767
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7505": {
      "fn": "GeVault.getTVL",
      "offset": [
        13605,
        13767
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E2A"
    },
    "7508": {
      "fn": "GeVault.getTVL",
      "offset": [
        13605,
        13767
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7509": {
      "fn": "GeVault.getTVL",
      "offset": [
        13647,
        13665
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7511": {
      "fn": "GeVault.getTVL",
      "offset": [
        13668,
        13673
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "7513": {
      "fn": "GeVault.getTVL",
      "offset": [
        13674,
        13675
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7514": {
      "fn": "GeVault.getTVL",
      "offset": [
        13668,
        13676
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7515": {
      "fn": "GeVault.getTVL",
      "offset": [
        13668,
        13676
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7516": {
      "fn": "GeVault.getTVL",
      "offset": [
        13668,
        13676
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7517": {
      "fn": "GeVault.getTVL",
      "offset": [
        13668,
        13676
      ],
      "op": "LT",
      "path": "0"
    },
    "7518": {
      "fn": "GeVault.getTVL",
      "offset": [
        13668,
        13676
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D69"
    },
    "7521": {
      "fn": "GeVault.getTVL",
      "offset": [
        13668,
        13676
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7522": {
      "fn": "GeVault.getTVL",
      "offset": [
        13668,
        13676
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D69"
    },
    "7525": {
      "fn": "GeVault.getTVL",
      "offset": [
        13668,
        13676
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4370"
    },
    "7528": {
      "fn": "GeVault.getTVL",
      "jump": "i",
      "offset": [
        13668,
        13676
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7529": {
      "fn": "GeVault.getTVL",
      "offset": [
        13668,
        13676
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7530": {
      "fn": "GeVault.getTVL",
      "offset": [
        13668,
        13676
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7532": {
      "fn": "GeVault.getTVL",
      "offset": [
        13668,
        13676
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7533": {
      "fn": "GeVault.getTVL",
      "offset": [
        13668,
        13676
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7534": {
      "fn": "GeVault.getTVL",
      "offset": [
        13668,
        13676
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7535": {
      "fn": "GeVault.getTVL",
      "offset": [
        13668,
        13676
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7537": {
      "fn": "GeVault.getTVL",
      "offset": [
        13668,
        13676
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7538": {
      "fn": "GeVault.getTVL",
      "offset": [
        13668,
        13676
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "7539": {
      "fn": "GeVault.getTVL",
      "offset": [
        13668,
        13676
      ],
      "op": "ADD",
      "path": "0"
    },
    "7540": {
      "fn": "GeVault.getTVL",
      "offset": [
        13668,
        13676
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7541": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7545": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7547": {
      "op": "SHL"
    },
    "7548": {
      "op": "SUB"
    },
    "7549": {
      "fn": "GeVault.getTVL",
      "offset": [
        13668,
        13676
      ],
      "op": "AND",
      "path": "0"
    },
    "7550": {
      "fn": "GeVault.getTVL",
      "offset": [
        13668,
        13676
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7551": {
      "op": "POP"
    },
    "7552": {
      "fn": "GeVault.getTVL",
      "offset": [
        13695,
        13712
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D88"
    },
    "7555": {
      "fn": "GeVault.getTVL",
      "offset": [
        13710,
        13711
      ],
      "op": "DUP4",
      "path": "0"
    },
    "7556": {
      "fn": "GeVault.getTVL",
      "offset": [
        13695,
        13709
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E2E"
    },
    "7559": {
      "fn": "GeVault.getTVL",
      "jump": "i",
      "offset": [
        13695,
        13712
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7560": {
      "fn": "GeVault.getTVL",
      "offset": [
        13695,
        13712
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7561": {
      "fn": "GeVault.getTVL",
      "offset": [
        13684,
        13712
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7562": {
      "fn": "GeVault.getTVL",
      "offset": [
        13684,
        13712
      ],
      "op": "POP",
      "path": "0"
    },
    "7563": {
      "fn": "GeVault.getTVL",
      "offset": [
        13756,
        13760
      ],
      "op": "PUSH8",
      "path": "0",
      "statement": 69,
      "value": "0xDE0B6B3A7640000"
    },
    "7572": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13738
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7577": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7579": {
      "op": "SHL"
    },
    "7580": {
      "op": "SUB"
    },
    "7581": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13751
      ],
      "op": "AND",
      "path": "0"
    },
    "7582": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13751
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x50D25BCD"
    },
    "7587": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13753
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7589": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13753
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7590": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13753
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7591": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13753
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "7596": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13753
      ],
      "op": "AND",
      "path": "0"
    },
    "7597": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13753
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "7599": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13753
      ],
      "op": "SHL",
      "path": "0"
    },
    "7600": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13753
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7601": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13753
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7602": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13753
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7604": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13753
      ],
      "op": "ADD",
      "path": "0"
    },
    "7605": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13753
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7607": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13753
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7609": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13753
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7610": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13753
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7611": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13753
      ],
      "op": "DUP4",
      "path": "0"
    },
    "7612": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13753
      ],
      "op": "SUB",
      "path": "0"
    },
    "7613": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13753
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7614": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13753
      ],
      "op": "DUP7",
      "path": "0"
    },
    "7615": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13753
      ],
      "op": "GAS",
      "path": "0"
    },
    "7616": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13753
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "7617": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13753
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7618": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13753
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7619": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13753
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7620": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13753
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DD1"
    },
    "7623": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13753
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7624": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13753
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "7625": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13753
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7627": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13753
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7628": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13753
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "7629": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13753
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "7630": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13753
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7632": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13753
      ],
      "op": "REVERT",
      "path": "0"
    },
    "7633": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13753
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7634": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13753
      ],
      "op": "POP",
      "path": "0"
    },
    "7635": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13753
      ],
      "op": "POP",
      "path": "0"
    },
    "7636": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13753
      ],
      "op": "POP",
      "path": "0"
    },
    "7637": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13753
      ],
      "op": "POP",
      "path": "0"
    },
    "7638": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13753
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7640": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13753
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7641": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13753
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "7642": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13753
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "7644": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13753
      ],
      "op": "NOT",
      "path": "0"
    },
    "7645": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13753
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "7647": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13753
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7648": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13753
      ],
      "op": "ADD",
      "path": "0"
    },
    "7649": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13753
      ],
      "op": "AND",
      "path": "0"
    },
    "7650": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13753
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7651": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13753
      ],
      "op": "ADD",
      "path": "0"
    },
    "7652": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13753
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7653": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13753
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7655": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13753
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7656": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13753
      ],
      "op": "POP",
      "path": "0"
    },
    "7657": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13753
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7658": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13753
      ],
      "op": "ADD",
      "path": "0"
    },
    "7659": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13753
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7660": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13753
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DF5"
    },
    "7663": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13753
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7664": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13753
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7665": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13753
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x430A"
    },
    "7668": {
      "fn": "GeVault.getTVL",
      "jump": "i",
      "offset": [
        13737,
        13753
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7669": {
      "fn": "GeVault.getTVL",
      "offset": [
        13737,
        13753
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7670": {
      "fn": "GeVault.getTVL",
      "offset": [
        13731,
        13753
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DFF"
    },
    "7673": {
      "fn": "GeVault.getTVL",
      "offset": [
        13731,
        13753
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7674": {
      "fn": "GeVault.getTVL",
      "offset": [
        13731,
        13734
      ],
      "op": "DUP4",
      "path": "0"
    },
    "7675": {
      "fn": "GeVault.getTVL",
      "offset": [
        13731,
        13753
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4192"
    },
    "7678": {
      "fn": "GeVault.getTVL",
      "jump": "i",
      "offset": [
        13731,
        13753
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7679": {
      "fn": "GeVault.getTVL",
      "offset": [
        13731,
        13753
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7680": {
      "fn": "GeVault.getTVL",
      "offset": [
        13731,
        13760
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E09"
    },
    "7683": {
      "fn": "GeVault.getTVL",
      "offset": [
        13731,
        13760
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7684": {
      "fn": "GeVault.getTVL",
      "offset": [
        13731,
        13760
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7685": {
      "fn": "GeVault.getTVL",
      "offset": [
        13731,
        13760
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41BF"
    },
    "7688": {
      "fn": "GeVault.getTVL",
      "jump": "i",
      "offset": [
        13731,
        13760
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7689": {
      "fn": "GeVault.getTVL",
      "offset": [
        13731,
        13760
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7690": {
      "fn": "GeVault.getTVL",
      "offset": [
        13720,
        13760
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E13"
    },
    "7693": {
      "fn": "GeVault.getTVL",
      "offset": [
        13720,
        13760
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7694": {
      "fn": "GeVault.getTVL",
      "offset": [
        13720,
        13760
      ],
      "op": "DUP6",
      "path": "0"
    },
    "7695": {
      "fn": "GeVault.getTVL",
      "offset": [
        13720,
        13760
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4323"
    },
    "7698": {
      "fn": "GeVault.getTVL",
      "jump": "i",
      "offset": [
        13720,
        13760
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7699": {
      "fn": "GeVault.getTVL",
      "offset": [
        13720,
        13760
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7700": {
      "fn": "GeVault.getTVL",
      "offset": [
        13720,
        13760
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "7701": {
      "fn": "GeVault.getTVL",
      "offset": [
        13720,
        13760
      ],
      "op": "POP",
      "path": "0"
    },
    "7702": {
      "fn": "GeVault.getTVL",
      "offset": [
        13639,
        13767
      ],
      "op": "POP",
      "path": "0"
    },
    "7703": {
      "fn": "GeVault.getTVL",
      "offset": [
        13639,
        13767
      ],
      "op": "POP",
      "path": "0"
    },
    "7704": {
      "fn": "GeVault.getTVL",
      "offset": [
        13635,
        13638
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 70
    },
    "7705": {
      "fn": "GeVault.getTVL",
      "offset": [
        13635,
        13638
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7706": {
      "fn": "GeVault.getTVL",
      "offset": [
        13635,
        13638
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E22"
    },
    "7709": {
      "fn": "GeVault.getTVL",
      "offset": [
        13635,
        13638
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7710": {
      "fn": "GeVault.getTVL",
      "offset": [
        13635,
        13638
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x455F"
    },
    "7713": {
      "fn": "GeVault.getTVL",
      "jump": "i",
      "offset": [
        13635,
        13638
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7714": {
      "fn": "GeVault.getTVL",
      "offset": [
        13635,
        13638
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7715": {
      "fn": "GeVault.getTVL",
      "offset": [
        13635,
        13638
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7716": {
      "fn": "GeVault.getTVL",
      "offset": [
        13635,
        13638
      ],
      "op": "POP",
      "path": "0"
    },
    "7717": {
      "fn": "GeVault.getTVL",
      "offset": [
        13635,
        13638
      ],
      "op": "POP",
      "path": "0"
    },
    "7718": {
      "fn": "GeVault.getTVL",
      "offset": [
        13605,
        13767
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D4A"
    },
    "7721": {
      "fn": "GeVault.getTVL",
      "offset": [
        13605,
        13767
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7722": {
      "fn": "GeVault.getTVL",
      "offset": [
        13605,
        13767
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7723": {
      "fn": "GeVault.getTVL",
      "offset": [
        13605,
        13767
      ],
      "op": "POP",
      "path": "0"
    },
    "7724": {
      "fn": "GeVault.getTVL",
      "offset": [
        13547,
        13771
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7725": {
      "fn": "GeVault.getTVL",
      "jump": "o",
      "offset": [
        13547,
        13771
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7726": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14541,
        14803
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7727": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14598,
        14612
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7729": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14620,
        14638
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7730": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14641,
        14646
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "7732": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14647,
        14652
      ],
      "op": "DUP4",
      "path": "0"
    },
    "7733": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14641,
        14653
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7734": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14641,
        14653
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7735": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14641,
        14653
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7736": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14641,
        14653
      ],
      "op": "LT",
      "path": "0"
    },
    "7737": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14641,
        14653
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E44"
    },
    "7740": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14641,
        14653
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7741": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14641,
        14653
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E44"
    },
    "7744": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14641,
        14653
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4370"
    },
    "7747": {
      "fn": "GeVault.getTickBalance",
      "jump": "i",
      "offset": [
        14641,
        14653
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7748": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14641,
        14653
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7749": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14641,
        14653
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7751": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14641,
        14653
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7752": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14641,
        14653
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7753": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14641,
        14653
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7754": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14641,
        14653
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7756": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14641,
        14653
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7757": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14641,
        14653
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "7758": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14641,
        14653
      ],
      "op": "ADD",
      "path": "0"
    },
    "7759": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14641,
        14653
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7760": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14694
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x10"
    },
    "7762": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14694
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7763": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14721
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7765": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14721
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7766": {
      "op": "PUSH4",
      "value": "0x35EA6A75"
    },
    "7771": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7773": {
      "op": "SHL"
    },
    "7774": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14721
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7775": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14721
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7780": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7782": {
      "op": "SHL"
    },
    "7783": {
      "op": "SUB"
    },
    "7784": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14641,
        14653
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "7785": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14641,
        14653
      ],
      "op": "DUP4",
      "path": "0"
    },
    "7786": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14641,
        14653
      ],
      "op": "AND",
      "path": "0"
    },
    "7787": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14721
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7789": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14721
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7790": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14721
      ],
      "op": "ADD",
      "path": "0"
    },
    "7791": {
      "op": "DUP2"
    },
    "7792": {
      "op": "SWAP1"
    },
    "7793": {
      "op": "MSTORE"
    },
    "7794": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14641,
        14653
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "7795": {
      "op": "POP"
    },
    "7796": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14694
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7797": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14694
      ],
      "op": "AND",
      "path": "0"
    },
    "7798": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14694
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7799": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14709
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x35EA6A75"
    },
    "7804": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14709
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7805": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7807": {
      "op": "ADD"
    },
    "7808": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14721
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "7811": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14721
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7813": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14721
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7814": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14721
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7815": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14721
      ],
      "op": "DUP4",
      "path": "0"
    },
    "7816": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14721
      ],
      "op": "SUB",
      "path": "0"
    },
    "7817": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14721
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7818": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14721
      ],
      "op": "DUP7",
      "path": "0"
    },
    "7819": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14721
      ],
      "op": "GAS",
      "path": "0"
    },
    "7820": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14721
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "7821": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14721
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7822": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14721
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7823": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14721
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7824": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14721
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E9D"
    },
    "7827": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14721
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7828": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14721
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "7829": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14721
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7831": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14721
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7832": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14721
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "7833": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14721
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "7834": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14721
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7836": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14721
      ],
      "op": "REVERT",
      "path": "0"
    },
    "7837": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14721
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7838": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14721
      ],
      "op": "POP",
      "path": "0"
    },
    "7839": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14721
      ],
      "op": "POP",
      "path": "0"
    },
    "7840": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14721
      ],
      "op": "POP",
      "path": "0"
    },
    "7841": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14721
      ],
      "op": "POP",
      "path": "0"
    },
    "7842": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14721
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7844": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14721
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7845": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14721
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "7846": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14721
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "7848": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14721
      ],
      "op": "NOT",
      "path": "0"
    },
    "7849": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14721
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "7851": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14721
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7852": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14721
      ],
      "op": "ADD",
      "path": "0"
    },
    "7853": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14721
      ],
      "op": "AND",
      "path": "0"
    },
    "7854": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14721
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7855": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14721
      ],
      "op": "ADD",
      "path": "0"
    },
    "7856": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14721
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7857": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14721
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7859": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14721
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7860": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14721
      ],
      "op": "POP",
      "path": "0"
    },
    "7861": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14721
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7862": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14721
      ],
      "op": "ADD",
      "path": "0"
    },
    "7863": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14721
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7864": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14721
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EC1"
    },
    "7867": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14721
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7868": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14721
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7869": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14721
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x444E"
    },
    "7872": {
      "fn": "GeVault.getTickBalance",
      "jump": "i",
      "offset": [
        14683,
        14721
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7873": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14721
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7874": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "7876": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14735
      ],
      "op": "ADD",
      "path": "0"
    },
    "7877": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14735
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7878": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14753,
        14798
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 71,
      "value": "0x40"
    },
    "7880": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14753,
        14798
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7881": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "7886": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7888": {
      "op": "SHL"
    },
    "7889": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14753,
        14798
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7890": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14753,
        14798
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7891": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14792,
        14796
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "7892": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14753,
        14798
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7894": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14753,
        14798
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7895": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14753,
        14798
      ],
      "op": "ADD",
      "path": "0"
    },
    "7896": {
      "op": "MSTORE"
    },
    "7897": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14735
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7898": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14683,
        14735
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7899": {
      "op": "POP"
    },
    "7900": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7902": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7904": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7906": {
      "op": "SHL"
    },
    "7907": {
      "op": "SUB"
    },
    "7908": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14753,
        14783
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7909": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14753,
        14783
      ],
      "op": "AND",
      "path": "0"
    },
    "7910": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14753,
        14783
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7911": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14753,
        14783
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "7916": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14753,
        14783
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7917": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7919": {
      "op": "ADD"
    },
    "7920": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14753,
        14798
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7922": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14753,
        14798
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7924": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14753,
        14798
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7925": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14753,
        14798
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7926": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14753,
        14798
      ],
      "op": "DUP4",
      "path": "0"
    },
    "7927": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14753,
        14798
      ],
      "op": "SUB",
      "path": "0"
    },
    "7928": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14753,
        14798
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7929": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14753,
        14798
      ],
      "op": "DUP7",
      "path": "0"
    },
    "7930": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14753,
        14798
      ],
      "op": "GAS",
      "path": "0"
    },
    "7931": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14753,
        14798
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "7932": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14753,
        14798
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7933": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14753,
        14798
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7934": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14753,
        14798
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7935": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14753,
        14798
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F0C"
    },
    "7938": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14753,
        14798
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7939": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14753,
        14798
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "7940": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14753,
        14798
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7942": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14753,
        14798
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7943": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14753,
        14798
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "7944": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14753,
        14798
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "7945": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14753,
        14798
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7947": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14753,
        14798
      ],
      "op": "REVERT",
      "path": "0"
    },
    "7948": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14753,
        14798
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7949": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14753,
        14798
      ],
      "op": "POP",
      "path": "0"
    },
    "7950": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14753,
        14798
      ],
      "op": "POP",
      "path": "0"
    },
    "7951": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14753,
        14798
      ],
      "op": "POP",
      "path": "0"
    },
    "7952": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14753,
        14798
      ],
      "op": "POP",
      "path": "0"
    },
    "7953": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14753,
        14798
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7955": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14753,
        14798
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7956": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14753,
        14798
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "7957": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14753,
        14798
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "7959": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14753,
        14798
      ],
      "op": "NOT",
      "path": "0"
    },
    "7960": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14753,
        14798
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "7962": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14753,
        14798
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7963": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14753,
        14798
      ],
      "op": "ADD",
      "path": "0"
    },
    "7964": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14753,
        14798
      ],
      "op": "AND",
      "path": "0"
    },
    "7965": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14753,
        14798
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7966": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14753,
        14798
      ],
      "op": "ADD",
      "path": "0"
    },
    "7967": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14753,
        14798
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7968": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14753,
        14798
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7970": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14753,
        14798
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7971": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14753,
        14798
      ],
      "op": "POP",
      "path": "0"
    },
    "7972": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14753,
        14798
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7973": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14753,
        14798
      ],
      "op": "ADD",
      "path": "0"
    },
    "7974": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14753,
        14798
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7975": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14753,
        14798
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F30"
    },
    "7978": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14753,
        14798
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7979": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14753,
        14798
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7980": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14753,
        14798
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x430A"
    },
    "7983": {
      "fn": "GeVault.getTickBalance",
      "jump": "i",
      "offset": [
        14753,
        14798
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7984": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14753,
        14798
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7985": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14741,
        14798
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "7986": {
      "fn": "GeVault.getTickBalance",
      "offset": [
        14541,
        14803
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "7987": {
      "op": "POP"
    },
    "7988": {
      "op": "POP"
    },
    "7989": {
      "op": "POP"
    },
    "7990": {
      "op": "POP"
    },
    "7991": {
      "fn": "GeVault.getTickBalance",
      "jump": "o",
      "offset": [
        14541,
        14803
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7992": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4458,
        5353
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7993": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x5"
    },
    "7995": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7996": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7998": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8000": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8002": {
      "op": "SHL"
    },
    "8003": {
      "op": "SUB"
    },
    "8004": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "12"
    },
    "8005": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "28"
    },
    "8006": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "12"
    },
    "8007": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1F62"
    },
    "8010": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "8011": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "8013": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "8014": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8018": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8020": {
      "op": "SHL"
    },
    "8021": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8022": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8023": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "8025": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "12"
    },
    "8026": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x8AC"
    },
    "8029": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8030": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4578"
    },
    "8033": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "12"
    },
    "8034": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8035": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4512,
        4530
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8037": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4550,
        4552
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8038": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4512,
        4553
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8039": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4512,
        4553
      ],
      "op": "POP",
      "path": "0"
    },
    "8040": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4560,
        4568
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8042": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4574
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8043": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8047": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8049": {
      "op": "SHL"
    },
    "8050": {
      "op": "SUB"
    },
    "8051": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4581
      ],
      "op": "AND",
      "path": "0"
    },
    "8052": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4581
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x443EC74D"
    },
    "8057": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4583
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8059": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4583
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8060": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4583
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8061": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4583
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "8066": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4583
      ],
      "op": "AND",
      "path": "0"
    },
    "8067": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4583
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "8069": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4583
      ],
      "op": "SHL",
      "path": "0"
    },
    "8070": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4583
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8071": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4583
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8072": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4583
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8074": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4583
      ],
      "op": "ADD",
      "path": "0"
    },
    "8075": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4583
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8077": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4583
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8078": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4583
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8079": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4583
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8080": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4583
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8081": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4583
      ],
      "op": "SUB",
      "path": "0"
    },
    "8082": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4583
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8083": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4583
      ],
      "op": "DUP7",
      "path": "0"
    },
    "8084": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4583
      ],
      "op": "GAS",
      "path": "0"
    },
    "8085": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4583
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "8086": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4583
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8087": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4583
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8088": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4583
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8089": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4583
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FA6"
    },
    "8092": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4583
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8093": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4583
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "8094": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4583
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8096": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4583
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8097": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4583
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "8098": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4583
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "8099": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4583
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8101": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4583
      ],
      "op": "REVERT",
      "path": "0"
    },
    "8102": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4583
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8103": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4583
      ],
      "op": "POP",
      "path": "0"
    },
    "8104": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4583
      ],
      "op": "POP",
      "path": "0"
    },
    "8105": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4583
      ],
      "op": "POP",
      "path": "0"
    },
    "8106": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4583
      ],
      "op": "POP",
      "path": "0"
    },
    "8107": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4583
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8109": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4583
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8110": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4583
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "8111": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4583
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "8113": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4583
      ],
      "op": "NOT",
      "path": "0"
    },
    "8114": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4583
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "8116": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4583
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8117": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4583
      ],
      "op": "ADD",
      "path": "0"
    },
    "8118": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4583
      ],
      "op": "AND",
      "path": "0"
    },
    "8119": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4583
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8120": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4583
      ],
      "op": "ADD",
      "path": "0"
    },
    "8121": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4583
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8122": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4583
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8124": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4583
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8125": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4583
      ],
      "op": "POP",
      "path": "0"
    },
    "8126": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4583
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8127": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4583
      ],
      "op": "ADD",
      "path": "0"
    },
    "8128": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4583
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8129": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4583
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FCA"
    },
    "8132": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4583
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8133": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4583
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8134": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4583
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x45AD"
    },
    "8137": {
      "fn": "GeVault.shiftTick",
      "jump": "i",
      "offset": [
        4573,
        4583
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8138": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4573,
        4583
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8139": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4559,
        4583
      ],
      "op": "POP",
      "path": "0"
    },
    "8140": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4559,
        4583
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8141": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4559,
        4583
      ],
      "op": "POP",
      "path": "0"
    },
    "8142": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4590,
        4598
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8144": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4604
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8145": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8147": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8149": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8151": {
      "op": "SHL"
    },
    "8152": {
      "op": "SUB"
    },
    "8153": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4611
      ],
      "op": "AND",
      "path": "0"
    },
    "8154": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4611
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5EE04D78"
    },
    "8159": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4613
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8161": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4613
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8162": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4613
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8163": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4613
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "8168": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4613
      ],
      "op": "AND",
      "path": "0"
    },
    "8169": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4613
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "8171": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4613
      ],
      "op": "SHL",
      "path": "0"
    },
    "8172": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4613
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8173": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4613
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8174": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4613
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8176": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4613
      ],
      "op": "ADD",
      "path": "0"
    },
    "8177": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4613
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8179": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4613
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8180": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4613
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8181": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4613
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8182": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4613
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8183": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4613
      ],
      "op": "SUB",
      "path": "0"
    },
    "8184": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4613
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8185": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4613
      ],
      "op": "DUP7",
      "path": "0"
    },
    "8186": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4613
      ],
      "op": "GAS",
      "path": "0"
    },
    "8187": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4613
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "8188": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4613
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8189": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4613
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8190": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4613
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8191": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4613
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x200C"
    },
    "8194": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4613
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8195": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4613
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "8196": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4613
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8198": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4613
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8199": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4613
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "8200": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4613
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "8201": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4613
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8203": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4613
      ],
      "op": "REVERT",
      "path": "0"
    },
    "8204": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4613
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8205": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4613
      ],
      "op": "POP",
      "path": "0"
    },
    "8206": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4613
      ],
      "op": "POP",
      "path": "0"
    },
    "8207": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4613
      ],
      "op": "POP",
      "path": "0"
    },
    "8208": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4613
      ],
      "op": "POP",
      "path": "0"
    },
    "8209": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4613
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8211": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4613
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8212": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4613
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "8213": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4613
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "8215": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4613
      ],
      "op": "NOT",
      "path": "0"
    },
    "8216": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4613
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "8218": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4613
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8219": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4613
      ],
      "op": "ADD",
      "path": "0"
    },
    "8220": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4613
      ],
      "op": "AND",
      "path": "0"
    },
    "8221": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4613
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8222": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4613
      ],
      "op": "ADD",
      "path": "0"
    },
    "8223": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4613
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8224": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4613
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8226": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4613
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8227": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4613
      ],
      "op": "POP",
      "path": "0"
    },
    "8228": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4613
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8229": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4613
      ],
      "op": "ADD",
      "path": "0"
    },
    "8230": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4613
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8231": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4613
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2030"
    },
    "8234": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4613
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8235": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4613
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8236": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4613
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x45AD"
    },
    "8239": {
      "fn": "GeVault.shiftTick",
      "jump": "i",
      "offset": [
        4603,
        4613
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8240": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4603,
        4613
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8241": {
      "op": "POP"
    },
    "8242": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4633,
        4639
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 72,
      "value": "0xA"
    },
    "8244": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4633,
        4639
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8245": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4589,
        4613
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8246": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4589,
        4613
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8247": {
      "op": "POP"
    },
    "8248": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8252": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8254": {
      "op": "SHL"
    },
    "8255": {
      "op": "SUB"
    },
    "8256": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4627,
        4639
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8257": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4627,
        4639
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8258": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4627,
        4639
      ],
      "op": "AND",
      "path": "0"
    },
    "8259": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4633,
        4639
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8260": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4633,
        4639
      ],
      "op": "AND",
      "path": "0"
    },
    "8261": {
      "branch": 184,
      "fn": "GeVault.shiftTick",
      "offset": [
        4627,
        4639
      ],
      "op": "EQ",
      "path": "0"
    },
    "8262": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4627,
        4655
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8263": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4627,
        4655
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8264": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4627,
        4655
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x205E"
    },
    "8267": {
      "branch": 184,
      "fn": "GeVault.shiftTick",
      "offset": [
        4627,
        4655
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8268": {
      "op": "POP"
    },
    "8269": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4649,
        4655
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "8271": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4649,
        4655
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8274": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8276": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8278": {
      "op": "SHL"
    },
    "8279": {
      "op": "SUB"
    },
    "8280": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4643,
        4655
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8281": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4643,
        4655
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8282": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4643,
        4655
      ],
      "op": "AND",
      "path": "0"
    },
    "8283": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4649,
        4655
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8284": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4649,
        4655
      ],
      "op": "AND",
      "path": "0"
    },
    "8285": {
      "branch": 185,
      "fn": "GeVault.shiftTick",
      "offset": [
        4643,
        4655
      ],
      "op": "EQ",
      "path": "0"
    },
    "8286": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4627,
        4655
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8287": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4619,
        4675
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x207A"
    },
    "8290": {
      "branch": 185,
      "fn": "GeVault.shiftTick",
      "offset": [
        4619,
        4675
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8291": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4619,
        4675
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8293": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4619,
        4675
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8294": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8298": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8300": {
      "op": "SHL"
    },
    "8301": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4619,
        4675
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8302": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4619,
        4675
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8303": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4619,
        4675
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8305": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4619,
        4675
      ],
      "op": "ADD",
      "path": "0"
    },
    "8306": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4619,
        4675
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8AC"
    },
    "8309": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4619,
        4675
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8310": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4619,
        4675
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x45E2"
    },
    "8313": {
      "fn": "GeVault.shiftTick",
      "jump": "i",
      "offset": [
        4619,
        4675
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8314": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4619,
        4675
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8315": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4685,
        4690
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "8317": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4685,
        4697
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8318": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4701,
        4702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8320": {
      "branch": 186,
      "fn": "GeVault.shiftTick",
      "offset": [
        4685,
        4702
      ],
      "op": "SUB",
      "path": "0"
    },
    "8321": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4681,
        5325
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20D4"
    },
    "8324": {
      "branch": 186,
      "fn": "GeVault.shiftTick",
      "offset": [
        4681,
        5325
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8325": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4704,
        4709
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 73,
      "value": "0x8"
    },
    "8327": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4704,
        4717
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8328": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4704,
        4717
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8329": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4704,
        4717
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "8331": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4704,
        4717
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8332": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4704,
        4717
      ],
      "op": "ADD",
      "path": "0"
    },
    "8333": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4704,
        4717
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8334": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4704,
        4717
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "8335": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8337": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4704,
        4717
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8338": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4704,
        4717
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8339": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4704,
        4717
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8340": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4704,
        4717
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8341": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4704,
        4717
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3"
    },
    "8374": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4704,
        4717
      ],
      "op": "ADD",
      "path": "0"
    },
    "8375": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4704,
        4717
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8376": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4704,
        4717
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8381": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8383": {
      "op": "SHL"
    },
    "8384": {
      "op": "SUB"
    },
    "8385": {
      "op": "NOT"
    },
    "8386": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4704,
        4717
      ],
      "op": "AND",
      "path": "0"
    },
    "8387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8391": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8393": {
      "op": "SHL"
    },
    "8394": {
      "op": "SUB"
    },
    "8395": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4704,
        4717
      ],
      "op": "DUP6",
      "path": "0"
    },
    "8396": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4704,
        4717
      ],
      "op": "AND",
      "path": "0"
    },
    "8397": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4704,
        4717
      ],
      "op": "OR",
      "path": "0"
    },
    "8398": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4704,
        4717
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8399": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4704,
        4717
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "8400": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4681,
        5325
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24C6"
    },
    "8403": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4681,
        5325
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8404": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4681,
        5325
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8405": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4786,
        4803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x12"
    },
    "8407": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4786,
        4803
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8410": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8412": {
      "op": "SHL"
    },
    "8413": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4786,
        4803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8414": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4786,
        4803
      ],
      "op": "DIV",
      "path": "0"
    },
    "8415": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4786,
        4803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "8417": {
      "branch": 187,
      "fn": "GeVault.shiftTick",
      "offset": [
        4786,
        4803
      ],
      "op": "AND",
      "path": "0"
    },
    "8418": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4781,
        4982
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x221F"
    },
    "8421": {
      "branch": 187,
      "fn": "GeVault.shiftTick",
      "offset": [
        4781,
        4982
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8422": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4844
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 74,
      "value": "0x8"
    },
    "8424": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4845,
        4846
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8426": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4847
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8427": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4847
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8428": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4847
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8429": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4847
      ],
      "op": "LT",
      "path": "0"
    },
    "8430": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4847
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20F9"
    },
    "8433": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4847
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8434": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4847
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20F9"
    },
    "8437": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4847
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4370"
    },
    "8440": {
      "fn": "GeVault.shiftTick",
      "jump": "i",
      "offset": [
        4839,
        4847
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8441": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4847
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8442": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4847
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8444": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4847
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8445": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4847
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8446": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4847
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8447": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4847
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8449": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4847
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8450": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4847
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8451": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4847
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8452": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4847
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "8453": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4847
      ],
      "op": "ADD",
      "path": "0"
    },
    "8454": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4847
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8455": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4859
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8457": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4859
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8458": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4859
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8459": {
      "op": "PUSH4",
      "value": "0xE4FBA45"
    },
    "8464": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "8466": {
      "op": "SHL"
    },
    "8467": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4859
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8468": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4859
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8469": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4859
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8470": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4859
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8473": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8475": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8477": {
      "op": "SHL"
    },
    "8478": {
      "op": "SUB"
    },
    "8479": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4847
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8480": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4847
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "8481": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4847
      ],
      "op": "AND",
      "path": "0"
    },
    "8482": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4847
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "8483": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4857
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x727DD228"
    },
    "8488": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4857
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "8489": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4859
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8491": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4859
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8492": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4859
      ],
      "op": "DUP5",
      "path": "0"
    },
    "8493": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4859
      ],
      "op": "ADD",
      "path": "0"
    },
    "8494": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4859
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "8495": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4859
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8496": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4859
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8497": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4859
      ],
      "op": "SUB",
      "path": "0"
    },
    "8498": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4859
      ],
      "op": "ADD",
      "path": "0"
    },
    "8499": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4859
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8500": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4847
      ],
      "op": "DUP7",
      "path": "0"
    },
    "8501": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4859
      ],
      "op": "GAS",
      "path": "0"
    },
    "8502": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4859
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "8503": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4859
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8504": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4859
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8505": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4859
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8506": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4859
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2147"
    },
    "8509": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4859
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8510": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4859
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "8511": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4859
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8513": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4859
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8514": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4859
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "8515": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4859
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "8516": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4859
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8518": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4859
      ],
      "op": "REVERT",
      "path": "0"
    },
    "8519": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4859
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8520": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4859
      ],
      "op": "POP",
      "path": "0"
    },
    "8521": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4859
      ],
      "op": "POP",
      "path": "0"
    },
    "8522": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4859
      ],
      "op": "POP",
      "path": "0"
    },
    "8523": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4859
      ],
      "op": "POP",
      "path": "0"
    },
    "8524": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4859
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8526": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4859
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8527": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4859
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "8528": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4859
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "8530": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4859
      ],
      "op": "NOT",
      "path": "0"
    },
    "8531": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4859
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "8533": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4859
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8534": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4859
      ],
      "op": "ADD",
      "path": "0"
    },
    "8535": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4859
      ],
      "op": "AND",
      "path": "0"
    },
    "8536": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4859
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8537": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4859
      ],
      "op": "ADD",
      "path": "0"
    },
    "8538": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4859
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8539": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4859
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8541": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4859
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8542": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4859
      ],
      "op": "POP",
      "path": "0"
    },
    "8543": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4859
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8544": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4859
      ],
      "op": "ADD",
      "path": "0"
    },
    "8545": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4859
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8546": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4859
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x216B"
    },
    "8549": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4859
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8550": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4859
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8551": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4859
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x461D"
    },
    "8554": {
      "fn": "GeVault.shiftTick",
      "jump": "i",
      "offset": [
        4839,
        4859
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8555": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4839,
        4859
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8556": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4859
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "8558": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4859
      ],
      "op": "SIGNEXTEND",
      "path": "0"
    },
    "8559": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4824
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8560": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8562": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8564": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8566": {
      "op": "SHL"
    },
    "8567": {
      "op": "SUB"
    },
    "8568": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4834
      ],
      "op": "AND",
      "path": "0"
    },
    "8569": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4834
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x9B1344AC"
    },
    "8574": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4836
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8576": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4836
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8577": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4836
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8578": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4836
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "8583": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4836
      ],
      "op": "AND",
      "path": "0"
    },
    "8584": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4836
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "8586": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4836
      ],
      "op": "SHL",
      "path": "0"
    },
    "8587": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4836
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8588": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4836
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8589": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4836
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8591": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4836
      ],
      "op": "ADD",
      "path": "0"
    },
    "8592": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4836
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8594": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4836
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8596": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4836
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8597": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4836
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8598": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4836
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8599": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4836
      ],
      "op": "SUB",
      "path": "0"
    },
    "8600": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4836
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8601": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4836
      ],
      "op": "DUP7",
      "path": "0"
    },
    "8602": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4836
      ],
      "op": "GAS",
      "path": "0"
    },
    "8603": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4836
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "8604": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4836
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8605": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4836
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8606": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4836
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8607": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4836
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21AC"
    },
    "8610": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4836
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8611": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4836
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "8612": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4836
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8614": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4836
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8615": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4836
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "8616": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4836
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "8617": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4836
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8619": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4836
      ],
      "op": "REVERT",
      "path": "0"
    },
    "8620": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4836
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8621": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4836
      ],
      "op": "POP",
      "path": "0"
    },
    "8622": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4836
      ],
      "op": "POP",
      "path": "0"
    },
    "8623": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4836
      ],
      "op": "POP",
      "path": "0"
    },
    "8624": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4836
      ],
      "op": "POP",
      "path": "0"
    },
    "8625": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4836
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8627": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4836
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8628": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4836
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "8629": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4836
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "8631": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4836
      ],
      "op": "NOT",
      "path": "0"
    },
    "8632": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4836
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "8634": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4836
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8635": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4836
      ],
      "op": "ADD",
      "path": "0"
    },
    "8636": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4836
      ],
      "op": "AND",
      "path": "0"
    },
    "8637": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4836
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8638": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4836
      ],
      "op": "ADD",
      "path": "0"
    },
    "8639": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4836
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8640": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4836
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8642": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4836
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8643": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4836
      ],
      "op": "POP",
      "path": "0"
    },
    "8644": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4836
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8645": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4836
      ],
      "op": "ADD",
      "path": "0"
    },
    "8646": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4836
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8647": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4836
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21D0"
    },
    "8650": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4836
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8651": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4836
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8652": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4836
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x461D"
    },
    "8655": {
      "fn": "GeVault.shiftTick",
      "jump": "i",
      "offset": [
        4823,
        4836
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8656": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4836
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8657": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4859
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "8659": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4859
      ],
      "op": "SIGNEXTEND",
      "path": "0"
    },
    "8660": {
      "branch": 188,
      "fn": "GeVault.shiftTick",
      "offset": [
        4823,
        4859
      ],
      "op": "SGT",
      "path": "0"
    },
    "8661": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4814,
        4887
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x221A"
    },
    "8664": {
      "branch": 188,
      "fn": "GeVault.shiftTick",
      "offset": [
        4814,
        4887
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8665": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4814,
        4887
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8667": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4814,
        4887
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8668": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8672": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8674": {
      "op": "SHL"
    },
    "8675": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4814,
        4887
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8676": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4814,
        4887
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8677": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8679": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4814,
        4887
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8681": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4814,
        4887
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8682": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4814,
        4887
      ],
      "op": "ADD",
      "path": "0"
    },
    "8683": {
      "op": "MSTORE"
    },
    "8684": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "8686": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8688": {
      "op": "DUP3"
    },
    "8689": {
      "op": "ADD"
    },
    "8690": {
      "op": "MSTORE"
    },
    "8691": {
      "op": "PUSH23",
      "value": "0x4745563A205368696674205469636B204F7665726C617"
    },
    "8715": {
      "op": "PUSH1",
      "value": "0x4C"
    },
    "8717": {
      "op": "SHL"
    },
    "8718": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8720": {
      "op": "DUP3"
    },
    "8721": {
      "op": "ADD"
    },
    "8722": {
      "op": "MSTORE"
    },
    "8723": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8725": {
      "op": "ADD"
    },
    "8726": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4814,
        4887
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8AC"
    },
    "8729": {
      "op": "JUMP"
    },
    "8730": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4814,
        4887
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8731": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4781,
        4982
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2354"
    },
    "8734": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4781,
        4982
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8735": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4781,
        4982
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8736": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4939
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 75,
      "value": "0x8"
    },
    "8738": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4940,
        4941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8740": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4942
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8741": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4942
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8742": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4942
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8743": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4942
      ],
      "op": "LT",
      "path": "0"
    },
    "8744": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4942
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2233"
    },
    "8747": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4942
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8748": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4942
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2233"
    },
    "8751": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4942
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4370"
    },
    "8754": {
      "fn": "GeVault.shiftTick",
      "jump": "i",
      "offset": [
        4934,
        4942
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8755": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4942
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8756": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4942
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8758": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4942
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8759": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4942
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8760": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4942
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8761": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4942
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8763": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4942
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8764": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4942
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8765": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4942
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8766": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4942
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "8767": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4942
      ],
      "op": "ADD",
      "path": "0"
    },
    "8768": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4942
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8769": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4954
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8771": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4954
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8772": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4954
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8773": {
      "op": "PUSH4",
      "value": "0x26C4D12B"
    },
    "8778": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "8780": {
      "op": "SHL"
    },
    "8781": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4954
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8782": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4954
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8783": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4954
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8784": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4954
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8785": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8787": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8789": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8791": {
      "op": "SHL"
    },
    "8792": {
      "op": "SUB"
    },
    "8793": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4942
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8794": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4942
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "8795": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4942
      ],
      "op": "AND",
      "path": "0"
    },
    "8796": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4942
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "8797": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4952
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x9B1344AC"
    },
    "8802": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4952
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "8803": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4954
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8805": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4954
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8806": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4954
      ],
      "op": "DUP5",
      "path": "0"
    },
    "8807": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4954
      ],
      "op": "ADD",
      "path": "0"
    },
    "8808": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4954
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "8809": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4954
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8810": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4954
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8811": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4954
      ],
      "op": "SUB",
      "path": "0"
    },
    "8812": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4954
      ],
      "op": "ADD",
      "path": "0"
    },
    "8813": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4954
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8814": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4942
      ],
      "op": "DUP7",
      "path": "0"
    },
    "8815": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4954
      ],
      "op": "GAS",
      "path": "0"
    },
    "8816": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4954
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "8817": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4954
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8818": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4954
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8819": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4954
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8820": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4954
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2281"
    },
    "8823": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4954
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8824": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4954
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "8825": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4954
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8827": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4954
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8828": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4954
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "8829": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4954
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "8830": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4954
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8832": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4954
      ],
      "op": "REVERT",
      "path": "0"
    },
    "8833": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4954
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8834": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4954
      ],
      "op": "POP",
      "path": "0"
    },
    "8835": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4954
      ],
      "op": "POP",
      "path": "0"
    },
    "8836": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4954
      ],
      "op": "POP",
      "path": "0"
    },
    "8837": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4954
      ],
      "op": "POP",
      "path": "0"
    },
    "8838": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4954
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8840": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4954
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8841": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4954
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "8842": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4954
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "8844": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4954
      ],
      "op": "NOT",
      "path": "0"
    },
    "8845": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4954
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "8847": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4954
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8848": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4954
      ],
      "op": "ADD",
      "path": "0"
    },
    "8849": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4954
      ],
      "op": "AND",
      "path": "0"
    },
    "8850": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4954
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8851": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4954
      ],
      "op": "ADD",
      "path": "0"
    },
    "8852": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4954
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8853": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4954
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8855": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4954
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8856": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4954
      ],
      "op": "POP",
      "path": "0"
    },
    "8857": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4954
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8858": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4954
      ],
      "op": "ADD",
      "path": "0"
    },
    "8859": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4954
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8860": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4954
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x22A5"
    },
    "8863": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4954
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8864": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4954
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8865": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4954
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x461D"
    },
    "8868": {
      "fn": "GeVault.shiftTick",
      "jump": "i",
      "offset": [
        4934,
        4954
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8869": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4934,
        4954
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8870": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4954
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "8872": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4954
      ],
      "op": "SIGNEXTEND",
      "path": "0"
    },
    "8873": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4919
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8874": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8876": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8878": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8880": {
      "op": "SHL"
    },
    "8881": {
      "op": "SUB"
    },
    "8882": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4929
      ],
      "op": "AND",
      "path": "0"
    },
    "8883": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4929
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x727DD228"
    },
    "8888": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4931
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8890": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4931
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8891": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4931
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8892": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4931
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "8897": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4931
      ],
      "op": "AND",
      "path": "0"
    },
    "8898": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4931
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "8900": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4931
      ],
      "op": "SHL",
      "path": "0"
    },
    "8901": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4931
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8902": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4931
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8903": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4931
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8905": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4931
      ],
      "op": "ADD",
      "path": "0"
    },
    "8906": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4931
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8908": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4931
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8910": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4931
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8911": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4931
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8912": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4931
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8913": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4931
      ],
      "op": "SUB",
      "path": "0"
    },
    "8914": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4931
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8915": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4931
      ],
      "op": "DUP7",
      "path": "0"
    },
    "8916": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4931
      ],
      "op": "GAS",
      "path": "0"
    },
    "8917": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4931
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "8918": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4931
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8919": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4931
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8920": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4931
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8921": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4931
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x22E6"
    },
    "8924": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4931
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8925": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4931
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "8926": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4931
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8928": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4931
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8929": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4931
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "8930": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4931
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "8931": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4931
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8933": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4931
      ],
      "op": "REVERT",
      "path": "0"
    },
    "8934": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4931
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8935": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4931
      ],
      "op": "POP",
      "path": "0"
    },
    "8936": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4931
      ],
      "op": "POP",
      "path": "0"
    },
    "8937": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4931
      ],
      "op": "POP",
      "path": "0"
    },
    "8938": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4931
      ],
      "op": "POP",
      "path": "0"
    },
    "8939": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4931
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8941": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4931
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8942": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4931
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "8943": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4931
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "8945": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4931
      ],
      "op": "NOT",
      "path": "0"
    },
    "8946": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4931
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "8948": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4931
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8949": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4931
      ],
      "op": "ADD",
      "path": "0"
    },
    "8950": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4931
      ],
      "op": "AND",
      "path": "0"
    },
    "8951": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4931
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8952": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4931
      ],
      "op": "ADD",
      "path": "0"
    },
    "8953": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4931
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8954": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4931
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8956": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4931
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8957": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4931
      ],
      "op": "POP",
      "path": "0"
    },
    "8958": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4931
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8959": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4931
      ],
      "op": "ADD",
      "path": "0"
    },
    "8960": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4931
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8961": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4931
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x230A"
    },
    "8964": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4931
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8965": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4931
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8966": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4931
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x461D"
    },
    "8969": {
      "fn": "GeVault.shiftTick",
      "jump": "i",
      "offset": [
        4918,
        4931
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8970": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4931
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8971": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4954
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "8973": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4954
      ],
      "op": "SIGNEXTEND",
      "path": "0"
    },
    "8974": {
      "branch": 189,
      "fn": "GeVault.shiftTick",
      "offset": [
        4918,
        4954
      ],
      "op": "SLT",
      "path": "0"
    },
    "8975": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4909,
        4982
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2354"
    },
    "8978": {
      "branch": 189,
      "fn": "GeVault.shiftTick",
      "offset": [
        4909,
        4982
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8979": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4909,
        4982
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8981": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4909,
        4982
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8982": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8986": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8988": {
      "op": "SHL"
    },
    "8989": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4909,
        4982
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8990": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4909,
        4982
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8991": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8993": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4909,
        4982
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8995": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4909,
        4982
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8996": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4909,
        4982
      ],
      "op": "ADD",
      "path": "0"
    },
    "8997": {
      "op": "MSTORE"
    },
    "8998": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "9000": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9002": {
      "op": "DUP3"
    },
    "9003": {
      "op": "ADD"
    },
    "9004": {
      "op": "MSTORE"
    },
    "9005": {
      "op": "PUSH23",
      "value": "0x4745563A205368696674205469636B204F7665726C617"
    },
    "9029": {
      "op": "PUSH1",
      "value": "0x4C"
    },
    "9031": {
      "op": "SHL"
    },
    "9032": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9034": {
      "op": "DUP3"
    },
    "9035": {
      "op": "ADD"
    },
    "9036": {
      "op": "MSTORE"
    },
    "9037": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9039": {
      "op": "ADD"
    },
    "9040": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4909,
        4982
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8AC"
    },
    "9043": {
      "op": "JUMP"
    },
    "9044": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4909,
        4982
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9045": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5039,
        5044
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 76,
      "value": "0x8"
    },
    "9047": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5056,
        5068
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9048": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5056,
        5068
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9049": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5039,
        5044
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9050": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5039,
        5044
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9051": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5056,
        5070
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2366"
    },
    "9054": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5056,
        5070
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9055": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5069,
        5070
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "9057": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5069,
        5070
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9058": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5056,
        5070
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x42F7"
    },
    "9061": {
      "fn": "GeVault.shiftTick",
      "jump": "i",
      "offset": [
        5056,
        5070
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9062": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5056,
        5070
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9063": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5050,
        5071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9064": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5050,
        5071
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9065": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5050,
        5071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9066": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5050,
        5071
      ],
      "op": "LT",
      "path": "0"
    },
    "9067": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5050,
        5071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2376"
    },
    "9070": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5050,
        5071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9071": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5050,
        5071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2376"
    },
    "9074": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5050,
        5071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4370"
    },
    "9077": {
      "fn": "GeVault.shiftTick",
      "jump": "i",
      "offset": [
        5050,
        5071
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9078": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5050,
        5071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9079": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5050,
        5071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9081": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5050,
        5071
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9082": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5050,
        5071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9083": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5050,
        5071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9084": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5050,
        5071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "9086": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5050,
        5071
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9087": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5050,
        5071
      ],
      "op": "DUP4",
      "path": "0"
    },
    "9088": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5050,
        5071
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "9089": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5050,
        5071
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9090": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5050,
        5071
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9091": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5050,
        5071
      ],
      "op": "ADD",
      "path": "0"
    },
    "9092": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5050,
        5071
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9093": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5039,
        5072
      ],
      "op": "DUP4",
      "path": "0"
    },
    "9094": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5039,
        5072
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9095": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5050,
        5071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "9097": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5039,
        5072
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9098": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5039,
        5072
      ],
      "op": "ADD",
      "path": "0"
    },
    "9099": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5039,
        5072
      ],
      "op": "DUP6",
      "path": "0"
    },
    "9100": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5039,
        5072
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "9101": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5039,
        5072
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "9102": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5039,
        5072
      ],
      "op": "DUP4",
      "path": "0"
    },
    "9103": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5039,
        5072
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9104": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5039,
        5072
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9105": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5039,
        5072
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "9106": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5039,
        5072
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9107": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5039,
        5072
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9108": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5039,
        5072
      ],
      "op": "ADD",
      "path": "0"
    },
    "9109": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5039,
        5072
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9110": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5039,
        5072
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9111": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9113": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9115": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9117": {
      "op": "SHL"
    },
    "9118": {
      "op": "SUB"
    },
    "9119": {
      "op": "NOT"
    },
    "9120": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5039,
        5072
      ],
      "op": "AND",
      "path": "0"
    },
    "9121": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9123": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9125": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9127": {
      "op": "SHL"
    },
    "9128": {
      "op": "SUB"
    },
    "9129": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5050,
        5071
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9130": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5050,
        5071
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "9131": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5050,
        5071
      ],
      "op": "AND",
      "path": "0"
    },
    "9132": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5039,
        5072
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9133": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5039,
        5072
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9134": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5039,
        5072
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9135": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5039,
        5072
      ],
      "op": "OR",
      "path": "0"
    },
    "9136": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5039,
        5072
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9137": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5039,
        5072
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "9138": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5112,
        5117
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "9140": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5112,
        5124
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9141": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5127,
        5128
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "9143": {
      "op": "LT"
    },
    "9144": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5108,
        5262
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9145": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5108,
        5262
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2482"
    },
    "9148": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5108,
        5262
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9149": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5144,
        5150
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9151": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5139,
        5251
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9152": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5160,
        5165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "9154": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5160,
        5172
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9155": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5160,
        5176
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23CE"
    },
    "9158": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5160,
        5176
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9159": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5175,
        5176
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "9161": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5175,
        5176
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9162": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5160,
        5176
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x42F7"
    },
    "9165": {
      "fn": "GeVault.shiftTick",
      "jump": "i",
      "offset": [
        5160,
        5176
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9166": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5160,
        5176
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9167": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5156,
        5157
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9168": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5156,
        5176
      ],
      "op": "LT",
      "path": "0"
    },
    "9169": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5139,
        5251
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9170": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5139,
        5251
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2480"
    },
    "9173": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5139,
        5251
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9174": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5224,
        5229
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 77,
      "value": "0x8"
    },
    "9176": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5230,
        5242
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9177": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5230,
        5242
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9178": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5249,
        5250
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9179": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5249,
        5250
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9180": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5230,
        5246
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23E7"
    },
    "9183": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5230,
        5246
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9184": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5245,
        5246
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "9186": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5245,
        5246
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9187": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5230,
        5246
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x42F7"
    },
    "9190": {
      "fn": "GeVault.shiftTick",
      "jump": "i",
      "offset": [
        5230,
        5246
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9191": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5230,
        5246
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9192": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5230,
        5250
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23F1"
    },
    "9195": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5230,
        5250
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9196": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5230,
        5250
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9197": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5230,
        5250
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x42F7"
    },
    "9200": {
      "fn": "GeVault.shiftTick",
      "jump": "i",
      "offset": [
        5230,
        5250
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9201": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5230,
        5250
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9202": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5224,
        5251
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9203": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5224,
        5251
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9204": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5224,
        5251
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9205": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5224,
        5251
      ],
      "op": "LT",
      "path": "0"
    },
    "9206": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5224,
        5251
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2401"
    },
    "9209": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5224,
        5251
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9210": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5224,
        5251
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2401"
    },
    "9213": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5224,
        5251
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4370"
    },
    "9216": {
      "fn": "GeVault.shiftTick",
      "jump": "i",
      "offset": [
        5224,
        5251
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9217": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5224,
        5251
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9218": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5224,
        5251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9220": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5224,
        5251
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9221": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5224,
        5251
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9222": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5224,
        5251
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9223": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5224,
        5251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "9225": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5224,
        5251
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9226": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5224,
        5251
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9227": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5224,
        5251
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "9228": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5224,
        5251
      ],
      "op": "ADD",
      "path": "0"
    },
    "9229": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5224,
        5251
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9230": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5194,
        5199
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "9232": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5200,
        5212
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9233": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5200,
        5212
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9238": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9240": {
      "op": "SHL"
    },
    "9241": {
      "op": "SUB"
    },
    "9242": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5224,
        5251
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9243": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5224,
        5251
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "9244": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5224,
        5251
      ],
      "op": "AND",
      "path": "0"
    },
    "9245": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5224,
        5251
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9246": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5219,
        5220
      ],
      "op": "DUP4",
      "path": "0"
    },
    "9247": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5219,
        5220
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9248": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5200,
        5216
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x242B"
    },
    "9251": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5200,
        5216
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9252": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5215,
        5216
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "9254": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5215,
        5216
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9255": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5200,
        5216
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x42F7"
    },
    "9258": {
      "fn": "GeVault.shiftTick",
      "jump": "i",
      "offset": [
        5200,
        5216
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9259": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5200,
        5216
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9260": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5200,
        5220
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2435"
    },
    "9263": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5200,
        5220
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9264": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5200,
        5220
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9265": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5200,
        5220
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x42F7"
    },
    "9268": {
      "fn": "GeVault.shiftTick",
      "jump": "i",
      "offset": [
        5200,
        5220
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9269": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5200,
        5220
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9270": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5194,
        5221
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9271": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5194,
        5221
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9272": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5194,
        5221
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9273": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5194,
        5221
      ],
      "op": "LT",
      "path": "0"
    },
    "9274": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5194,
        5221
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2445"
    },
    "9277": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5194,
        5221
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9278": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5194,
        5221
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2445"
    },
    "9281": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5194,
        5221
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4370"
    },
    "9284": {
      "fn": "GeVault.shiftTick",
      "jump": "i",
      "offset": [
        5194,
        5221
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9285": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5194,
        5221
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9286": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5194,
        5221
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9288": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5194,
        5221
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9289": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5194,
        5221
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9290": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5194,
        5221
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9291": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5194,
        5221
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "9293": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5194,
        5221
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9294": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5194,
        5221
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9295": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5194,
        5221
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "9296": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5194,
        5221
      ],
      "op": "ADD",
      "path": "0"
    },
    "9297": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5194,
        5251
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9298": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5194,
        5251
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9303": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9305": {
      "op": "SHL"
    },
    "9306": {
      "op": "SUB"
    },
    "9307": {
      "op": "NOT"
    },
    "9308": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5194,
        5251
      ],
      "op": "AND",
      "path": "0"
    },
    "9309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9313": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9315": {
      "op": "SHL"
    },
    "9316": {
      "op": "SUB"
    },
    "9317": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5194,
        5251
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "9318": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5194,
        5251
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9319": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5194,
        5251
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "9320": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5194,
        5251
      ],
      "op": "AND",
      "path": "0"
    },
    "9321": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5194,
        5251
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9322": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5194,
        5251
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9323": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5194,
        5251
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9324": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5194,
        5251
      ],
      "op": "OR",
      "path": "0"
    },
    "9325": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5194,
        5251
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9326": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5194,
        5251
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "9327": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5178,
        5181
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 78
    },
    "9328": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5178,
        5181
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2478"
    },
    "9331": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5178,
        5181
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9332": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5178,
        5181
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x455F"
    },
    "9335": {
      "fn": "GeVault.shiftTick",
      "jump": "i",
      "offset": [
        5178,
        5181
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9336": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5178,
        5181
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9337": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5178,
        5181
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9338": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5178,
        5181
      ],
      "op": "POP",
      "path": "0"
    },
    "9339": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5178,
        5181
      ],
      "op": "POP",
      "path": "0"
    },
    "9340": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5139,
        5251
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23BF"
    },
    "9343": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5139,
        5251
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9344": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5139,
        5251
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9345": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5139,
        5251
      ],
      "op": "POP",
      "path": "0"
    },
    "9346": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5108,
        5262
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9347": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5317,
        5318
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 79
    },
    "9348": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5306,
        5311
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "9350": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5312,
        5313
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9352": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5306,
        5314
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9353": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5306,
        5314
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9354": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5306,
        5314
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9355": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5306,
        5314
      ],
      "op": "LT",
      "path": "0"
    },
    "9356": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5306,
        5314
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2497"
    },
    "9359": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5306,
        5314
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9360": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5306,
        5314
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2497"
    },
    "9363": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5306,
        5314
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4370"
    },
    "9366": {
      "fn": "GeVault.shiftTick",
      "jump": "i",
      "offset": [
        5306,
        5314
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9367": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5306,
        5314
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9368": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5306,
        5314
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9369": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5306,
        5314
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9371": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5306,
        5314
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9372": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5306,
        5314
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "9374": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5306,
        5314
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9376": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5306,
        5314
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "9377": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5306,
        5314
      ],
      "op": "ADD",
      "path": "0"
    },
    "9378": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5306,
        5314
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9380": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5306,
        5318
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "9383": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5306,
        5318
      ],
      "op": "EXP",
      "path": "0"
    },
    "9384": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5306,
        5318
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9385": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5306,
        5318
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9386": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5306,
        5318
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9391": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9393": {
      "op": "SHL"
    },
    "9394": {
      "op": "SUB"
    },
    "9395": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5306,
        5318
      ],
      "op": "MUL",
      "path": "0"
    },
    "9396": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5306,
        5318
      ],
      "op": "NOT",
      "path": "0"
    },
    "9397": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5306,
        5318
      ],
      "op": "AND",
      "path": "0"
    },
    "9398": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5306,
        5318
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9399": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5306,
        5318
      ],
      "op": "DUP4",
      "path": "0"
    },
    "9400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9404": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9406": {
      "op": "SHL"
    },
    "9407": {
      "op": "SUB"
    },
    "9408": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5306,
        5318
      ],
      "op": "AND",
      "path": "0"
    },
    "9409": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5306,
        5318
      ],
      "op": "MUL",
      "path": "0"
    },
    "9410": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5306,
        5318
      ],
      "op": "OR",
      "path": "0"
    },
    "9411": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5306,
        5318
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9412": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5306,
        5318
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "9413": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5306,
        5318
      ],
      "op": "POP",
      "path": "0"
    },
    "9414": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4681,
        5325
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9415": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5335,
        5348
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 80,
      "value": "0x40"
    },
    "9417": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5335,
        5348
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9420": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9422": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9424": {
      "op": "SHL"
    },
    "9425": {
      "op": "SUB"
    },
    "9426": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5335,
        5348
      ],
      "op": "DUP6",
      "path": "0"
    },
    "9427": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5335,
        5348
      ],
      "op": "AND",
      "path": "0"
    },
    "9428": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5335,
        5348
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9429": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5335,
        5348
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x379724EB42B8009EB7CB6F3D25740CE23AF62531DBCAA953861505B29DC14816"
    },
    "9462": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5335,
        5348
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9463": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5335,
        5348
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9465": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5335,
        5348
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9466": {
      "fn": "GeVault.shiftTick",
      "offset": [
        5335,
        5348
      ],
      "op": "LOG2",
      "path": "0"
    },
    "9467": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4506,
        5353
      ],
      "op": "POP",
      "path": "0"
    },
    "9468": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4506,
        5353
      ],
      "op": "POP",
      "path": "0"
    },
    "9469": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4506,
        5353
      ],
      "op": "POP",
      "path": "0"
    },
    "9470": {
      "fn": "GeVault.shiftTick",
      "offset": [
        4458,
        5353
      ],
      "op": "POP",
      "path": "0"
    },
    "9471": {
      "fn": "GeVault.shiftTick",
      "jump": "o",
      "offset": [
        4458,
        5353
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9472": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6443,
        6848
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "9473": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "28"
    },
    "9474": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6536,
        6540
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "9476": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6604
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9477": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6604
      ],
      "op": "DUP2",
      "path": "20"
    },
    "9478": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6604
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "9479": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6590
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "9481": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6604
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "9483": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6604
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9484": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6604
      ],
      "op": "DUP2",
      "path": "20"
    },
    "9485": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6604
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "9486": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6604
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "9488": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6604
      ],
      "op": "DUP1",
      "path": "20"
    },
    "9489": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6604
      ],
      "op": "DUP4",
      "path": "20"
    },
    "9490": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6604
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "9491": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9493": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9495": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9497": {
      "op": "SHL"
    },
    "9498": {
      "op": "SUB"
    },
    "9499": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6613
      ],
      "op": "DUP7",
      "path": "20"
    },
    "9500": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6613
      ],
      "op": "AND",
      "path": "20"
    },
    "9501": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6613
      ],
      "op": "DUP5",
      "path": "20"
    },
    "9502": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6613
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "9503": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6613
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9504": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6613
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "9505": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6613
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "9506": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6613
      ],
      "op": "DUP2",
      "path": "20"
    },
    "9507": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6613
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "9508": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6613
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "9509": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6631,
        6666
      ],
      "op": "DUP3",
      "path": "20",
      "statement": 81
    },
    "9510": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6631,
        6666
      ],
      "op": "DUP2",
      "path": "20"
    },
    "9511": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6631,
        6666
      ],
      "op": "LT",
      "path": "20"
    },
    "9512": {
      "branch": 211,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6631,
        6666
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "9513": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6623,
        6708
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2582"
    },
    "9516": {
      "branch": 211,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6623,
        6708
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "9517": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6623,
        6708
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "9519": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6623,
        6708
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "9520": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9524": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9526": {
      "op": "SHL"
    },
    "9527": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6623,
        6708
      ],
      "op": "DUP2",
      "path": "20"
    },
    "9528": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6623,
        6708
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "9529": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9531": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6623,
        6708
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "9533": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6623,
        6708
      ],
      "op": "DUP3",
      "path": "20"
    },
    "9534": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6623,
        6708
      ],
      "op": "ADD",
      "path": "20"
    },
    "9535": {
      "op": "MSTORE"
    },
    "9536": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "9538": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9540": {
      "op": "DUP3"
    },
    "9541": {
      "op": "ADD"
    },
    "9542": {
      "op": "MSTORE"
    },
    "9543": {
      "op": "PUSH32",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "9576": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9578": {
      "op": "DUP3"
    },
    "9579": {
      "op": "ADD"
    },
    "9580": {
      "op": "MSTORE"
    },
    "9581": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "9587": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "9589": {
      "op": "SHL"
    },
    "9590": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9592": {
      "op": "DUP3"
    },
    "9593": {
      "op": "ADD"
    },
    "9594": {
      "op": "MSTORE"
    },
    "9595": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9597": {
      "op": "ADD"
    },
    "9598": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6623,
        6708
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x8AC"
    },
    "9601": {
      "op": "JUMP"
    },
    "9602": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6623,
        6708
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "9603": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6742,
        6809
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 82,
      "value": "0x258F"
    },
    "9606": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "28"
    },
    "9607": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6765,
        6772
      ],
      "op": "DUP6",
      "path": "20"
    },
    "9608": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6793,
        6808
      ],
      "op": "DUP6",
      "path": "20"
    },
    "9609": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6774,
        6790
      ],
      "op": "DUP5",
      "path": "20"
    },
    "9610": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6774,
        6808
      ],
      "op": "SUB",
      "path": "20"
    },
    "9611": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6742,
        6750
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x34B4"
    },
    "9614": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6742,
        6809
      ],
      "op": "JUMP",
      "path": "20"
    },
    "9615": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6742,
        6809
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "9616": {
      "op": "POP"
    },
    "9617": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6837,
        6841
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 83,
      "value": "0x1"
    },
    "9619": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6837,
        6841
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "9620": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6443,
        6848
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "9621": {
      "op": "POP"
    },
    "9622": {
      "op": "POP"
    },
    "9623": {
      "op": "POP"
    },
    "9624": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "o",
      "offset": [
        6443,
        6848
      ],
      "op": "JUMP",
      "path": "20"
    },
    "9625": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15669,
        16341
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9626": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15739,
        15761
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9628": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15770,
        15779
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9629": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15781,
        15790
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9631": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15794,
        15807
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25A6"
    },
    "9634": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15794,
        15805
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11F1"
    },
    "9637": {
      "fn": "GeVault.getAdjustedBaseFee",
      "jump": "i",
      "offset": [
        15794,
        15807
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9638": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15794,
        15807
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9639": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15769,
        15807
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9640": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15769,
        15807
      ],
      "op": "POP",
      "path": "0"
    },
    "9641": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15769,
        15807
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9642": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15769,
        15807
      ],
      "op": "POP",
      "path": "0"
    },
    "9643": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15813,
        15824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9645": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15884
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "9647": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15884
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9649": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15884
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9650": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15884
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9651": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15884
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9652": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15884
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "9655": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15884
      ],
      "op": "EXP",
      "path": "0"
    },
    "9656": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15884
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9657": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15884
      ],
      "op": "DIV",
      "path": "0"
    },
    "9658": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9660": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9662": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9664": {
      "op": "SHL"
    },
    "9665": {
      "op": "SUB"
    },
    "9666": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15884
      ],
      "op": "AND",
      "path": "0"
    },
    "9667": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9671": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9673": {
      "op": "SHL"
    },
    "9674": {
      "op": "SUB"
    },
    "9675": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15893
      ],
      "op": "AND",
      "path": "0"
    },
    "9676": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15893
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x313CE567"
    },
    "9681": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15895
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9683": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15895
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9684": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15895
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9685": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15895
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "9690": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15895
      ],
      "op": "AND",
      "path": "0"
    },
    "9691": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15895
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "9693": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15895
      ],
      "op": "SHL",
      "path": "0"
    },
    "9694": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15895
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9695": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15895
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9696": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15895
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9698": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15895
      ],
      "op": "ADD",
      "path": "0"
    },
    "9699": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15895
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "9701": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15895
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9703": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15895
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9704": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15895
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9705": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15895
      ],
      "op": "DUP4",
      "path": "0"
    },
    "9706": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15895
      ],
      "op": "SUB",
      "path": "0"
    },
    "9707": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15895
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9708": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15895
      ],
      "op": "DUP7",
      "path": "0"
    },
    "9709": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15895
      ],
      "op": "GAS",
      "path": "0"
    },
    "9710": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15895
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "9711": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15895
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9712": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15895
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9713": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15895
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9714": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15895
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25FF"
    },
    "9717": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15895
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9718": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15895
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "9719": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15895
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9721": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15895
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9722": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15895
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "9723": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15895
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "9724": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15895
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9726": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15895
      ],
      "op": "REVERT",
      "path": "0"
    },
    "9727": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15895
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9728": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15895
      ],
      "op": "POP",
      "path": "0"
    },
    "9729": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15895
      ],
      "op": "POP",
      "path": "0"
    },
    "9730": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15895
      ],
      "op": "POP",
      "path": "0"
    },
    "9731": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15895
      ],
      "op": "POP",
      "path": "0"
    },
    "9732": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15895
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9734": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15895
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9735": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15895
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "9736": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15895
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "9738": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15895
      ],
      "op": "NOT",
      "path": "0"
    },
    "9739": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15895
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "9741": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15895
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9742": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15895
      ],
      "op": "ADD",
      "path": "0"
    },
    "9743": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15895
      ],
      "op": "AND",
      "path": "0"
    },
    "9744": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15895
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9745": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15895
      ],
      "op": "ADD",
      "path": "0"
    },
    "9746": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15895
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9747": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15895
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9749": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15895
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9750": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15895
      ],
      "op": "POP",
      "path": "0"
    },
    "9751": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15895
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9752": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15895
      ],
      "op": "ADD",
      "path": "0"
    },
    "9753": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15895
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9754": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15895
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2623"
    },
    "9757": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15895
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9758": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15895
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9759": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15895
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41E9"
    },
    "9762": {
      "fn": "GeVault.getAdjustedBaseFee",
      "jump": "i",
      "offset": [
        15878,
        15895
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9763": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15878,
        15895
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9764": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15874,
        15895
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x262E"
    },
    "9767": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15874,
        15895
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9768": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15874,
        15876
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "9770": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15874,
        15895
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x42E8"
    },
    "9773": {
      "fn": "GeVault.getAdjustedBaseFee",
      "jump": "i",
      "offset": [
        15874,
        15895
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9774": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15874,
        15895
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9775": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15840
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x11"
    },
    "9777": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15840
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9778": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15863,
        15869
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "9780": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15863,
        15869
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9781": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15871
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9783": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15871
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9784": {
      "op": "PUSH4",
      "value": "0xB3596F07"
    },
    "9789": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9791": {
      "op": "SHL"
    },
    "9792": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15871
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9793": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15871
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9794": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9798": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9800": {
      "op": "SHL"
    },
    "9801": {
      "op": "SUB"
    },
    "9802": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15863,
        15869
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9803": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15863,
        15869
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9804": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15863,
        15869
      ],
      "op": "AND",
      "path": "0"
    },
    "9805": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15871
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9807": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15871
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9808": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15871
      ],
      "op": "ADD",
      "path": "0"
    },
    "9809": {
      "op": "MSTORE"
    },
    "9810": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15840
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9811": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15840
      ],
      "op": "AND",
      "path": "0"
    },
    "9812": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15840
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9813": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15854
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xB3596F07"
    },
    "9818": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15854
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9819": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9821": {
      "op": "ADD"
    },
    "9822": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15871
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "9824": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15871
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9826": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15871
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9827": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15871
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9828": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15871
      ],
      "op": "DUP4",
      "path": "0"
    },
    "9829": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15871
      ],
      "op": "SUB",
      "path": "0"
    },
    "9830": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15871
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9831": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15871
      ],
      "op": "DUP7",
      "path": "0"
    },
    "9832": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15871
      ],
      "op": "GAS",
      "path": "0"
    },
    "9833": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15871
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "9834": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15871
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9835": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15871
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9836": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15871
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9837": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15871
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x267A"
    },
    "9840": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15871
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9841": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15871
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "9842": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15871
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9844": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15871
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9845": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15871
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "9846": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15871
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "9847": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15871
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9849": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15871
      ],
      "op": "REVERT",
      "path": "0"
    },
    "9850": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15871
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9851": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15871
      ],
      "op": "POP",
      "path": "0"
    },
    "9852": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15871
      ],
      "op": "POP",
      "path": "0"
    },
    "9853": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15871
      ],
      "op": "POP",
      "path": "0"
    },
    "9854": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15871
      ],
      "op": "POP",
      "path": "0"
    },
    "9855": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15871
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9857": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15871
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9858": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15871
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "9859": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15871
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "9861": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15871
      ],
      "op": "NOT",
      "path": "0"
    },
    "9862": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15871
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "9864": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15871
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9865": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15871
      ],
      "op": "ADD",
      "path": "0"
    },
    "9866": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15871
      ],
      "op": "AND",
      "path": "0"
    },
    "9867": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15871
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9868": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15871
      ],
      "op": "ADD",
      "path": "0"
    },
    "9869": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15871
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9870": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15871
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9872": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15871
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9873": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15871
      ],
      "op": "POP",
      "path": "0"
    },
    "9874": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15871
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9875": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15871
      ],
      "op": "ADD",
      "path": "0"
    },
    "9876": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15871
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9877": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15871
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x269E"
    },
    "9880": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15871
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9881": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15871
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9882": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15871
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x430A"
    },
    "9885": {
      "fn": "GeVault.getAdjustedBaseFee",
      "jump": "i",
      "offset": [
        15834,
        15871
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9886": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15834,
        15871
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9887": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15827,
        15871
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26A8"
    },
    "9890": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15827,
        15871
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9891": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15827,
        15831
      ],
      "op": "DUP6",
      "path": "0"
    },
    "9892": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15827,
        15871
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4192"
    },
    "9895": {
      "fn": "GeVault.getAdjustedBaseFee",
      "jump": "i",
      "offset": [
        15827,
        15871
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9896": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15827,
        15871
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9897": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15827,
        15895
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26B2"
    },
    "9900": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15827,
        15895
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9901": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15827,
        15895
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9902": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15827,
        15895
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41BF"
    },
    "9905": {
      "fn": "GeVault.getAdjustedBaseFee",
      "jump": "i",
      "offset": [
        15827,
        15895
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9906": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15827,
        15895
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9907": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15813,
        15895
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9908": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15813,
        15895
      ],
      "op": "POP",
      "path": "0"
    },
    "9909": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15901,
        15912
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9911": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15972
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "9913": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15972
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9915": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15972
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9916": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15972
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9917": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15972
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9918": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15972
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "9921": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15972
      ],
      "op": "EXP",
      "path": "0"
    },
    "9922": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15972
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9923": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15972
      ],
      "op": "DIV",
      "path": "0"
    },
    "9924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9928": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9930": {
      "op": "SHL"
    },
    "9931": {
      "op": "SUB"
    },
    "9932": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15972
      ],
      "op": "AND",
      "path": "0"
    },
    "9933": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9935": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9937": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9939": {
      "op": "SHL"
    },
    "9940": {
      "op": "SUB"
    },
    "9941": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15981
      ],
      "op": "AND",
      "path": "0"
    },
    "9942": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15981
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x313CE567"
    },
    "9947": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15983
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9949": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15983
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9950": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15983
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9951": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15983
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "9956": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15983
      ],
      "op": "AND",
      "path": "0"
    },
    "9957": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15983
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "9959": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15983
      ],
      "op": "SHL",
      "path": "0"
    },
    "9960": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15983
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9961": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15983
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9962": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15983
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9964": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15983
      ],
      "op": "ADD",
      "path": "0"
    },
    "9965": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15983
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "9967": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15983
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9969": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15983
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9970": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15983
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9971": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15983
      ],
      "op": "DUP4",
      "path": "0"
    },
    "9972": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15983
      ],
      "op": "SUB",
      "path": "0"
    },
    "9973": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15983
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9974": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15983
      ],
      "op": "DUP7",
      "path": "0"
    },
    "9975": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15983
      ],
      "op": "GAS",
      "path": "0"
    },
    "9976": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15983
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "9977": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15983
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9978": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15983
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9979": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15983
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9980": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15983
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2709"
    },
    "9983": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15983
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9984": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15983
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "9985": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15983
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9987": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15983
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9988": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15983
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "9989": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15983
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "9990": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15983
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9992": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15983
      ],
      "op": "REVERT",
      "path": "0"
    },
    "9993": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15983
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9994": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15983
      ],
      "op": "POP",
      "path": "0"
    },
    "9995": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15983
      ],
      "op": "POP",
      "path": "0"
    },
    "9996": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15983
      ],
      "op": "POP",
      "path": "0"
    },
    "9997": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15983
      ],
      "op": "POP",
      "path": "0"
    },
    "9998": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15983
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10000": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15983
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10001": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15983
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "10002": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15983
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "10004": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15983
      ],
      "op": "NOT",
      "path": "0"
    },
    "10005": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15983
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "10007": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15983
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10008": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15983
      ],
      "op": "ADD",
      "path": "0"
    },
    "10009": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15983
      ],
      "op": "AND",
      "path": "0"
    },
    "10010": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15983
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10011": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15983
      ],
      "op": "ADD",
      "path": "0"
    },
    "10012": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15983
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10013": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15983
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10015": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15983
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10016": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15983
      ],
      "op": "POP",
      "path": "0"
    },
    "10017": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15983
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10018": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15983
      ],
      "op": "ADD",
      "path": "0"
    },
    "10019": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15983
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10020": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15983
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x272D"
    },
    "10023": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15983
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10024": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15983
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10025": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15983
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41E9"
    },
    "10028": {
      "fn": "GeVault.getAdjustedBaseFee",
      "jump": "i",
      "offset": [
        15966,
        15983
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10029": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15966,
        15983
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10030": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15962,
        15983
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2738"
    },
    "10033": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15962,
        15983
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10034": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15962,
        15964
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "10036": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15962,
        15983
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x42E8"
    },
    "10039": {
      "fn": "GeVault.getAdjustedBaseFee",
      "jump": "i",
      "offset": [
        15962,
        15983
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10040": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15962,
        15983
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10041": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15928
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x11"
    },
    "10043": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15928
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10044": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15951,
        15957
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "10046": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15951,
        15957
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10047": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15959
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10049": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15959
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10050": {
      "op": "PUSH4",
      "value": "0xB3596F07"
    },
    "10055": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10057": {
      "op": "SHL"
    },
    "10058": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15959
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10059": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15959
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10060": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10062": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10064": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10066": {
      "op": "SHL"
    },
    "10067": {
      "op": "SUB"
    },
    "10068": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15951,
        15957
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10069": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15951,
        15957
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10070": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15951,
        15957
      ],
      "op": "AND",
      "path": "0"
    },
    "10071": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15959
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "10073": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15959
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10074": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15959
      ],
      "op": "ADD",
      "path": "0"
    },
    "10075": {
      "op": "MSTORE"
    },
    "10076": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15928
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10077": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15928
      ],
      "op": "AND",
      "path": "0"
    },
    "10078": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15928
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10079": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15942
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xB3596F07"
    },
    "10084": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15942
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10085": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10087": {
      "op": "ADD"
    },
    "10088": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15959
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "10090": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15959
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10092": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15959
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10093": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15959
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10094": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15959
      ],
      "op": "DUP4",
      "path": "0"
    },
    "10095": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15959
      ],
      "op": "SUB",
      "path": "0"
    },
    "10096": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15959
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10097": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15959
      ],
      "op": "DUP7",
      "path": "0"
    },
    "10098": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15959
      ],
      "op": "GAS",
      "path": "0"
    },
    "10099": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15959
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "10100": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15959
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10101": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15959
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10102": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15959
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10103": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15959
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2784"
    },
    "10106": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15959
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10107": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15959
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "10108": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15959
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10110": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15959
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10111": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15959
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "10112": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15959
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "10113": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15959
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10115": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15959
      ],
      "op": "REVERT",
      "path": "0"
    },
    "10116": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15959
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10117": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15959
      ],
      "op": "POP",
      "path": "0"
    },
    "10118": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15959
      ],
      "op": "POP",
      "path": "0"
    },
    "10119": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15959
      ],
      "op": "POP",
      "path": "0"
    },
    "10120": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15959
      ],
      "op": "POP",
      "path": "0"
    },
    "10121": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15959
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10123": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15959
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10124": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15959
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "10125": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15959
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "10127": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15959
      ],
      "op": "NOT",
      "path": "0"
    },
    "10128": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15959
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "10130": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15959
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10131": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15959
      ],
      "op": "ADD",
      "path": "0"
    },
    "10132": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15959
      ],
      "op": "AND",
      "path": "0"
    },
    "10133": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15959
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10134": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15959
      ],
      "op": "ADD",
      "path": "0"
    },
    "10135": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15959
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10136": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15959
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10138": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15959
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10139": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15959
      ],
      "op": "POP",
      "path": "0"
    },
    "10140": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15959
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10141": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15959
      ],
      "op": "ADD",
      "path": "0"
    },
    "10142": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15959
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10143": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15959
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27A8"
    },
    "10146": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15959
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10147": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15959
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10148": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15959
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x430A"
    },
    "10151": {
      "fn": "GeVault.getAdjustedBaseFee",
      "jump": "i",
      "offset": [
        15922,
        15959
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10152": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15922,
        15959
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10153": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15915,
        15959
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27B2"
    },
    "10156": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15915,
        15959
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10157": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15915,
        15919
      ],
      "op": "DUP6",
      "path": "0"
    },
    "10158": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15915,
        15959
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4192"
    },
    "10161": {
      "fn": "GeVault.getAdjustedBaseFee",
      "jump": "i",
      "offset": [
        15915,
        15959
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10162": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15915,
        15959
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10163": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15915,
        15983
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27BC"
    },
    "10166": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15915,
        15983
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10167": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15915,
        15983
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10168": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15915,
        15983
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41BF"
    },
    "10171": {
      "fn": "GeVault.getAdjustedBaseFee",
      "jump": "i",
      "offset": [
        15915,
        15983
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10172": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15915,
        15983
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10173": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15901,
        15983
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10174": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15901,
        15983
      ],
      "op": "POP",
      "path": "0"
    },
    "10175": {
      "branch": 190,
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15994,
        16008
      ],
      "op": "DUP6",
      "path": "0"
    },
    "10176": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15990,
        16139
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10177": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15990,
        16139
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27EE"
    },
    "10180": {
      "branch": 190,
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15990,
        16139
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10181": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16058,
        16068
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 84,
      "value": "0x27CF"
    },
    "10184": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16058,
        16064
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10185": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16067,
        16068
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "10187": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16058,
        16068
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4323"
    },
    "10190": {
      "fn": "GeVault.getAdjustedBaseFee",
      "jump": "i",
      "offset": [
        16058,
        16068
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10191": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16058,
        16068
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10192": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16048,
        16054
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10193": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16036,
        16045
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "10195": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16036,
        16045
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10196": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16036,
        16054
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27DD"
    },
    "10199": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16036,
        16054
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10200": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16036,
        16054
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10201": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16036,
        16054
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4192"
    },
    "10204": {
      "fn": "GeVault.getAdjustedBaseFee",
      "jump": "i",
      "offset": [
        16036,
        16054
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10205": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16036,
        16054
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10206": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16036,
        16069
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27E7"
    },
    "10209": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16036,
        16069
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10210": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16036,
        16069
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10211": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16036,
        16069
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41BF"
    },
    "10214": {
      "fn": "GeVault.getAdjustedBaseFee",
      "jump": "i",
      "offset": [
        16036,
        16069
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10215": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16036,
        16069
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10216": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16016,
        16069
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "10217": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16016,
        16069
      ],
      "op": "POP",
      "path": "0"
    },
    "10218": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15990,
        16139
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2814"
    },
    "10221": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15990,
        16139
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10222": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15990,
        16139
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10223": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16128,
        16138
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 85,
      "value": "0x27F9"
    },
    "10226": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16128,
        16134
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10227": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16137,
        16138
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "10229": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16128,
        16138
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4323"
    },
    "10232": {
      "fn": "GeVault.getAdjustedBaseFee",
      "jump": "i",
      "offset": [
        16128,
        16138
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10233": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16128,
        16138
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10234": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16118,
        16124
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10235": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16106,
        16115
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "10237": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16106,
        16115
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10238": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16106,
        16124
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2807"
    },
    "10241": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16106,
        16124
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10242": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16106,
        16124
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10243": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16106,
        16124
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4192"
    },
    "10246": {
      "fn": "GeVault.getAdjustedBaseFee",
      "jump": "i",
      "offset": [
        16106,
        16124
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10247": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16106,
        16124
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10248": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16106,
        16139
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2811"
    },
    "10251": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16106,
        16139
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10252": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16106,
        16139
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10253": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16106,
        16139
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41BF"
    },
    "10256": {
      "fn": "GeVault.getAdjustedBaseFee",
      "jump": "i",
      "offset": [
        16106,
        16139
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10257": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16106,
        16139
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10258": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16086,
        16139
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "10259": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16086,
        16139
      ],
      "op": "POP",
      "path": "0"
    },
    "10260": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15990,
        16139
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10261": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16214,
        16215
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "10263": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16202,
        16211
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "10265": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16202,
        16211
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10266": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16202,
        16215
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2823"
    },
    "10269": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16202,
        16215
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10270": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16202,
        16215
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10271": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16202,
        16215
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41BF"
    },
    "10274": {
      "fn": "GeVault.getAdjustedBaseFee",
      "jump": "i",
      "offset": [
        16202,
        16215
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10275": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16202,
        16215
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10276": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16182,
        16199
      ],
      "op": "DUP6",
      "path": "0"
    },
    "10277": {
      "branch": 191,
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16182,
        16215
      ],
      "op": "LT",
      "path": "0"
    },
    "10278": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16178,
        16250
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10279": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16178,
        16250
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x283C"
    },
    "10282": {
      "branch": 191,
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16178,
        16250
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10283": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16249,
        16250
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 86,
      "value": "0x2"
    },
    "10285": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16237,
        16246
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "10287": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16237,
        16246
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10288": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16237,
        16250
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2839"
    },
    "10291": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16237,
        16250
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10292": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16237,
        16250
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10293": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16237,
        16250
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41BF"
    },
    "10296": {
      "fn": "GeVault.getAdjustedBaseFee",
      "jump": "i",
      "offset": [
        16237,
        16250
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10297": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16237,
        16250
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10298": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16217,
        16250
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "10299": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16217,
        16250
      ],
      "op": "POP",
      "path": "0"
    },
    "10300": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16178,
        16250
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10301": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16296,
        16297
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "10303": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16280,
        16289
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "10305": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16280,
        16289
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10306": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16292,
        16293
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "10308": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16280,
        16293
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x284D"
    },
    "10311": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16280,
        16293
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10312": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16280,
        16293
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10313": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16280,
        16293
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4192"
    },
    "10316": {
      "fn": "GeVault.getAdjustedBaseFee",
      "jump": "i",
      "offset": [
        16280,
        16293
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10317": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16280,
        16293
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10318": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16280,
        16297
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2857"
    },
    "10321": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16280,
        16297
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10322": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16280,
        16297
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10323": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16280,
        16297
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41BF"
    },
    "10326": {
      "fn": "GeVault.getAdjustedBaseFee",
      "jump": "i",
      "offset": [
        16280,
        16297
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10327": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16280,
        16297
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10328": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16260,
        16277
      ],
      "op": "DUP6",
      "path": "0"
    },
    "10329": {
      "branch": 192,
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16260,
        16297
      ],
      "op": "GT",
      "path": "0"
    },
    "10330": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16256,
        16336
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10331": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16256,
        16336
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x287C"
    },
    "10334": {
      "branch": 192,
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16256,
        16336
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10335": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16335,
        16336
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 87,
      "value": "0x2"
    },
    "10337": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16319,
        16328
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "10339": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16319,
        16328
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10340": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16331,
        16332
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "10342": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16319,
        16332
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x286F"
    },
    "10345": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16319,
        16332
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10346": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16319,
        16332
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10347": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16319,
        16332
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4192"
    },
    "10350": {
      "fn": "GeVault.getAdjustedBaseFee",
      "jump": "i",
      "offset": [
        16319,
        16332
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10351": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16319,
        16332
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10352": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16319,
        16336
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2879"
    },
    "10355": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16319,
        16336
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10356": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16319,
        16336
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10357": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16319,
        16336
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41BF"
    },
    "10360": {
      "fn": "GeVault.getAdjustedBaseFee",
      "jump": "i",
      "offset": [
        16319,
        16336
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10361": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16319,
        16336
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10362": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16299,
        16336
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "10363": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16299,
        16336
      ],
      "op": "POP",
      "path": "0"
    },
    "10364": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        16256,
        16336
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10365": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15763,
        16341
      ],
      "op": "POP",
      "path": "0"
    },
    "10366": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15763,
        16341
      ],
      "op": "POP",
      "path": "0"
    },
    "10367": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15763,
        16341
      ],
      "op": "POP",
      "path": "0"
    },
    "10368": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15763,
        16341
      ],
      "op": "POP",
      "path": "0"
    },
    "10369": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15669,
        16341
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10370": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15669,
        16341
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10371": {
      "fn": "GeVault.getAdjustedBaseFee",
      "offset": [
        15669,
        16341
      ],
      "op": "POP",
      "path": "0"
    },
    "10372": {
      "fn": "GeVault.getAdjustedBaseFee",
      "jump": "o",
      "offset": [
        15669,
        16341
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10373": {
      "fn": "ERC20.transfer",
      "offset": [
        3721,
        3893
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10374": {
      "fn": "ERC20.transfer",
      "offset": [
        3807,
        3811
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "10376": {
      "fn": "ERC20.transfer",
      "offset": [
        3823,
        3865
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 88,
      "value": "0x13BF"
    },
    "10379": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "28"
    },
    "10380": {
      "fn": "ERC20.transfer",
      "offset": [
        3847,
        3856
      ],
      "op": "DUP5",
      "path": "20"
    },
    "10381": {
      "fn": "ERC20.transfer",
      "offset": [
        3858,
        3864
      ],
      "op": "DUP5",
      "path": "20"
    },
    "10382": {
      "fn": "ERC20.transfer",
      "offset": [
        3823,
        3832
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x35D8"
    },
    "10385": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3823,
        3865
      ],
      "op": "JUMP",
      "path": "20"
    },
    "10386": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        14850,
        15417
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10387": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        14933,
        14938
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "10389": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        14933,
        14945
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10390": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        14901,
        14921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10392": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        14901,
        14921
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10393": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        14949,
        14950
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "10395": {
      "op": "GT"
    },
    "10396": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        14929,
        15413
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A41"
    },
    "10399": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        14929,
        15413
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10400": {
      "op": "POP"
    },
    "10401": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15066,
        15067
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 89,
      "value": "0x0"
    },
    "10403": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15043,
        15407
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10404": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15087,
        15092
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "10406": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15087,
        15099
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10407": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15087,
        15103
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28B2"
    },
    "10410": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15087,
        15103
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10411": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15102,
        15103
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "10413": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15102,
        15103
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10414": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15087,
        15103
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x42F7"
    },
    "10417": {
      "fn": "GeVault.getActiveTickIndex",
      "jump": "i",
      "offset": [
        15087,
        15103
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10418": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15087,
        15103
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10419": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15069,
        15084
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10420": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15069,
        15103
      ],
      "op": "LT",
      "path": "0"
    },
    "10421": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15043,
        15407
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10422": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15043,
        15407
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A41"
    },
    "10425": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15043,
        15407
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10426": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15134,
        15143
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10428": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15134,
        15143
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10429": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15163
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "10431": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15164,
        15181
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28C9"
    },
    "10434": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15164,
        15179
      ],
      "op": "DUP5",
      "path": "0"
    },
    "10435": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15180,
        15181
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "10437": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15164,
        15181
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4323"
    },
    "10440": {
      "fn": "GeVault.getActiveTickIndex",
      "jump": "i",
      "offset": [
        15164,
        15181
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10441": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15164,
        15181
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10442": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15182
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10443": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15182
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10444": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15182
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10445": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15182
      ],
      "op": "LT",
      "path": "0"
    },
    "10446": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15182
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28D9"
    },
    "10449": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15182
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10450": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15182
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28D9"
    },
    "10453": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15182
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4370"
    },
    "10456": {
      "fn": "GeVault.getActiveTickIndex",
      "jump": "i",
      "offset": [
        15158,
        15182
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10457": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15182
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10458": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15182
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10460": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15182
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10461": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15182
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10462": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15182
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10463": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15182
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "10465": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15182
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10466": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15182
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10467": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15182
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "10468": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15182
      ],
      "op": "ADD",
      "path": "0"
    },
    "10469": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15182
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10470": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15217
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10472": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15217
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10473": {
      "op": "PUSH4",
      "value": "0xD1F7E92B"
    },
    "10478": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10480": {
      "op": "SHL"
    },
    "10481": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15217
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10482": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15217
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10483": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15212,
        15216
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0xDE0B6B3A7640000"
    },
    "10492": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15217
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "10494": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15217
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10495": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15217
      ],
      "op": "ADD",
      "path": "0"
    },
    "10496": {
      "op": "MSTORE"
    },
    "10497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10501": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10503": {
      "op": "SHL"
    },
    "10504": {
      "op": "SUB"
    },
    "10505": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15182
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10506": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15182
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10507": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15182
      ],
      "op": "AND",
      "path": "0"
    },
    "10508": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15182
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10509": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15211
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xD1F7E92B"
    },
    "10514": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15211
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10515": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10517": {
      "op": "ADD"
    },
    "10518": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15217
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10520": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15217
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10521": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15217
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10522": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15217
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10523": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15217
      ],
      "op": "DUP4",
      "path": "0"
    },
    "10524": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15217
      ],
      "op": "SUB",
      "path": "0"
    },
    "10525": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15217
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10526": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15217
      ],
      "op": "DUP7",
      "path": "0"
    },
    "10527": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15217
      ],
      "op": "GAS",
      "path": "0"
    },
    "10528": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15217
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "10529": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15217
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10530": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15217
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10531": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15217
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10532": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15217
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2931"
    },
    "10535": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15217
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10536": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15217
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "10537": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15217
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10539": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15217
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10540": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15217
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "10541": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15217
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "10542": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15217
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10544": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15217
      ],
      "op": "REVERT",
      "path": "0"
    },
    "10545": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15217
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10546": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15217
      ],
      "op": "POP",
      "path": "0"
    },
    "10547": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15217
      ],
      "op": "POP",
      "path": "0"
    },
    "10548": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15217
      ],
      "op": "POP",
      "path": "0"
    },
    "10549": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15217
      ],
      "op": "POP",
      "path": "0"
    },
    "10550": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15217
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10552": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15217
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10553": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15217
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "10554": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15217
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "10556": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15217
      ],
      "op": "NOT",
      "path": "0"
    },
    "10557": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15217
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "10559": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15217
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10560": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15217
      ],
      "op": "ADD",
      "path": "0"
    },
    "10561": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15217
      ],
      "op": "AND",
      "path": "0"
    },
    "10562": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15217
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10563": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15217
      ],
      "op": "ADD",
      "path": "0"
    },
    "10564": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15217
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10565": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15217
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10567": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15217
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10568": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15217
      ],
      "op": "POP",
      "path": "0"
    },
    "10569": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15217
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10570": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15217
      ],
      "op": "ADD",
      "path": "0"
    },
    "10571": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15217
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10572": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15217
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2955"
    },
    "10575": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15217
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10576": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15217
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10577": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15217
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x453B"
    },
    "10580": {
      "fn": "GeVault.getActiveTickIndex",
      "jump": "i",
      "offset": [
        15158,
        15217
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10581": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15158,
        15217
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10582": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15133,
        15217
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10583": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15133,
        15217
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "10584": {
      "op": "POP"
    },
    "10585": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15133,
        15217
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10586": {
      "op": "POP"
    },
    "10587": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15228,
        15238
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10589": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15228,
        15238
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10590": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15259
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "10592": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15260,
        15277
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x296A"
    },
    "10595": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15260,
        15275
      ],
      "op": "DUP7",
      "path": "0"
    },
    "10596": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15276,
        15277
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "10598": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15260,
        15277
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4323"
    },
    "10601": {
      "fn": "GeVault.getActiveTickIndex",
      "jump": "i",
      "offset": [
        15260,
        15277
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10602": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15260,
        15277
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10603": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15278
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10604": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15278
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10605": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15278
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10606": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15278
      ],
      "op": "LT",
      "path": "0"
    },
    "10607": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15278
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x297A"
    },
    "10610": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15278
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10611": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15278
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x297A"
    },
    "10614": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15278
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4370"
    },
    "10617": {
      "fn": "GeVault.getActiveTickIndex",
      "jump": "i",
      "offset": [
        15254,
        15278
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10618": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15278
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10619": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15278
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10621": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15278
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10622": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15278
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10623": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15278
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10624": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15278
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "10626": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15278
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10627": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15278
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10628": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15278
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "10629": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15278
      ],
      "op": "ADD",
      "path": "0"
    },
    "10630": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15278
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10631": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15313
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10633": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15313
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10634": {
      "op": "PUSH4",
      "value": "0xD1F7E92B"
    },
    "10639": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10641": {
      "op": "SHL"
    },
    "10642": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15313
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10643": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15313
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10644": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15308,
        15312
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0xDE0B6B3A7640000"
    },
    "10653": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15313
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "10655": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15313
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10656": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15313
      ],
      "op": "ADD",
      "path": "0"
    },
    "10657": {
      "op": "MSTORE"
    },
    "10658": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10660": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10662": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10664": {
      "op": "SHL"
    },
    "10665": {
      "op": "SUB"
    },
    "10666": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15278
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10667": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15278
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10668": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15278
      ],
      "op": "AND",
      "path": "0"
    },
    "10669": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15278
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10670": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15307
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xD1F7E92B"
    },
    "10675": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15307
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10676": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10678": {
      "op": "ADD"
    },
    "10679": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15313
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10681": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15313
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10682": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15313
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10683": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15313
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10684": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15313
      ],
      "op": "DUP4",
      "path": "0"
    },
    "10685": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15313
      ],
      "op": "SUB",
      "path": "0"
    },
    "10686": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15313
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10687": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15313
      ],
      "op": "DUP7",
      "path": "0"
    },
    "10688": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15313
      ],
      "op": "GAS",
      "path": "0"
    },
    "10689": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15313
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "10690": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15313
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10691": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15313
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10692": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15313
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10693": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15313
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29D2"
    },
    "10696": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15313
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10697": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15313
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "10698": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15313
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10700": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15313
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10701": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15313
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "10702": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15313
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "10703": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15313
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10705": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15313
      ],
      "op": "REVERT",
      "path": "0"
    },
    "10706": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15313
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10707": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15313
      ],
      "op": "POP",
      "path": "0"
    },
    "10708": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15313
      ],
      "op": "POP",
      "path": "0"
    },
    "10709": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15313
      ],
      "op": "POP",
      "path": "0"
    },
    "10710": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15313
      ],
      "op": "POP",
      "path": "0"
    },
    "10711": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15313
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10713": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15313
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10714": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15313
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "10715": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15313
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "10717": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15313
      ],
      "op": "NOT",
      "path": "0"
    },
    "10718": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15313
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "10720": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15313
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10721": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15313
      ],
      "op": "ADD",
      "path": "0"
    },
    "10722": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15313
      ],
      "op": "AND",
      "path": "0"
    },
    "10723": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15313
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10724": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15313
      ],
      "op": "ADD",
      "path": "0"
    },
    "10725": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15313
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10726": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15313
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10728": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15313
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10729": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15313
      ],
      "op": "POP",
      "path": "0"
    },
    "10730": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15313
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10731": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15313
      ],
      "op": "ADD",
      "path": "0"
    },
    "10732": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15313
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10733": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15313
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29F6"
    },
    "10736": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15313
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10737": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15313
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10738": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15313
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x453B"
    },
    "10741": {
      "fn": "GeVault.getActiveTickIndex",
      "jump": "i",
      "offset": [
        15254,
        15313
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10742": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15254,
        15313
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10743": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15227,
        15313
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10744": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15227,
        15313
      ],
      "op": "POP",
      "path": "0"
    },
    "10745": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15227,
        15313
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10746": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15227,
        15313
      ],
      "op": "POP",
      "path": "0"
    },
    "10747": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15329,
        15333
      ],
      "op": "DUP4",
      "path": "0"
    },
    "10748": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15337,
        15338
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10750": {
      "branch": 193,
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15329,
        15338
      ],
      "op": "EQ",
      "path": "0"
    },
    "10751": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15329,
        15351
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10752": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15329,
        15351
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10753": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15329,
        15351
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A0A"
    },
    "10756": {
      "branch": 193,
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15329,
        15351
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10757": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15329,
        15351
      ],
      "op": "POP",
      "path": "0"
    },
    "10758": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15350,
        15351
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10760": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15342,
        15347
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10761": {
      "branch": 194,
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15342,
        15351
      ],
      "op": "GT",
      "path": "0"
    },
    "10762": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15329,
        15351
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10763": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15328,
        15380
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10764": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15328,
        15380
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A1E"
    },
    "10767": {
      "branch": 194,
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15328,
        15380
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10768": {
      "op": "POP"
    },
    "10769": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15357,
        15366
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10770": {
      "branch": 195,
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15357,
        15366
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10771": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15357,
        15379
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10772": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15357,
        15379
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10773": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15357,
        15379
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A1E"
    },
    "10776": {
      "branch": 195,
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15357,
        15379
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10777": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15357,
        15379
      ],
      "op": "POP",
      "path": "0"
    },
    "10778": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15378,
        15379
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10780": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15370,
        15375
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10781": {
      "branch": 196,
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15370,
        15379
      ],
      "op": "GT",
      "path": "0"
    },
    "10782": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15357,
        15379
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10783": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15323,
        15398
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10784": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15323,
        15398
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A2A"
    },
    "10787": {
      "branch": 196,
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15323,
        15398
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10788": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15393,
        15398
      ],
      "op": "POP",
      "path": "0",
      "statement": 90
    },
    "10789": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15393,
        15398
      ],
      "op": "POP",
      "path": "0"
    },
    "10790": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15393,
        15398
      ],
      "op": "POP",
      "path": "0"
    },
    "10791": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15393,
        15398
      ],
      "op": "POP",
      "path": "0"
    },
    "10792": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        14850,
        15417
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10793": {
      "fn": "GeVault.getActiveTickIndex",
      "jump": "o",
      "offset": [
        14850,
        15417
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10794": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15323,
        15398
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10795": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15123,
        15407
      ],
      "op": "POP",
      "path": "0"
    },
    "10796": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15123,
        15407
      ],
      "op": "POP",
      "path": "0"
    },
    "10797": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15123,
        15407
      ],
      "op": "POP",
      "path": "0"
    },
    "10798": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15123,
        15407
      ],
      "op": "POP",
      "path": "0"
    },
    "10799": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15105,
        15122
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 91
    },
    "10800": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15105,
        15122
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10801": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15105,
        15122
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A39"
    },
    "10804": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15105,
        15122
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10805": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15105,
        15122
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x455F"
    },
    "10808": {
      "fn": "GeVault.getActiveTickIndex",
      "jump": "i",
      "offset": [
        15105,
        15122
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10809": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15105,
        15122
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10810": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15105,
        15122
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10811": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15105,
        15122
      ],
      "op": "POP",
      "path": "0"
    },
    "10812": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15105,
        15122
      ],
      "op": "POP",
      "path": "0"
    },
    "10813": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15043,
        15407
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28A3"
    },
    "10816": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15043,
        15407
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10817": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        15043,
        15407
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10818": {
      "fn": "GeVault.getActiveTickIndex",
      "offset": [
        14850,
        15417
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10819": {
      "fn": "GeVault.getActiveTickIndex",
      "jump": "o",
      "offset": [
        14850,
        15417
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10820": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12364,
        12989
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10821": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12414,
        12426
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10823": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12434,
        12454
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10824": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12475
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "10826": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12475
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10828": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12475
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10829": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12475
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10830": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12475
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10831": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12475
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "10834": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12475
      ],
      "op": "EXP",
      "path": "0"
    },
    "10835": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12475
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10836": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12475
      ],
      "op": "DIV",
      "path": "0"
    },
    "10837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10839": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10841": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10843": {
      "op": "SHL"
    },
    "10844": {
      "op": "SUB"
    },
    "10845": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12475
      ],
      "op": "AND",
      "path": "0"
    },
    "10846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10850": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10852": {
      "op": "SHL"
    },
    "10853": {
      "op": "SUB"
    },
    "10854": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12481
      ],
      "op": "AND",
      "path": "0"
    },
    "10855": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12481
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x3850C7BD"
    },
    "10860": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12483
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10862": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12483
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10863": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12483
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10864": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12483
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "10869": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12483
      ],
      "op": "AND",
      "path": "0"
    },
    "10870": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12483
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "10872": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12483
      ],
      "op": "SHL",
      "path": "0"
    },
    "10873": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12483
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10874": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12483
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10875": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12483
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "10877": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12483
      ],
      "op": "ADD",
      "path": "0"
    },
    "10878": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12483
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "10880": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12483
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10882": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12483
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10883": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12483
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10884": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12483
      ],
      "op": "DUP4",
      "path": "0"
    },
    "10885": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12483
      ],
      "op": "SUB",
      "path": "0"
    },
    "10886": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12483
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10887": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12483
      ],
      "op": "DUP7",
      "path": "0"
    },
    "10888": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12483
      ],
      "op": "GAS",
      "path": "0"
    },
    "10889": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12483
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "10890": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12483
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10891": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12483
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10892": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12483
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10893": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12483
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A9A"
    },
    "10896": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12483
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10897": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12483
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "10898": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12483
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10900": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12483
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10901": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12483
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "10902": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12483
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "10903": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12483
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10905": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12483
      ],
      "op": "REVERT",
      "path": "0"
    },
    "10906": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12483
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10907": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12483
      ],
      "op": "POP",
      "path": "0"
    },
    "10908": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12483
      ],
      "op": "POP",
      "path": "0"
    },
    "10909": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12483
      ],
      "op": "POP",
      "path": "0"
    },
    "10910": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12483
      ],
      "op": "POP",
      "path": "0"
    },
    "10911": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12483
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10913": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12483
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10914": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12483
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "10915": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12483
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "10917": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12483
      ],
      "op": "NOT",
      "path": "0"
    },
    "10918": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12483
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "10920": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12483
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10921": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12483
      ],
      "op": "ADD",
      "path": "0"
    },
    "10922": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12483
      ],
      "op": "AND",
      "path": "0"
    },
    "10923": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12483
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10924": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12483
      ],
      "op": "ADD",
      "path": "0"
    },
    "10925": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12483
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10926": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12483
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10928": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12483
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10929": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12483
      ],
      "op": "POP",
      "path": "0"
    },
    "10930": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12483
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10931": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12483
      ],
      "op": "ADD",
      "path": "0"
    },
    "10932": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12483
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10933": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12483
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2ABE"
    },
    "10936": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12483
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10937": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12483
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10938": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12483
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x464A"
    },
    "10941": {
      "fn": "GeVault.poolMatchesOracle",
      "jump": "i",
      "offset": [
        12464,
        12483
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10942": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12464,
        12483
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10943": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12433,
        12483
      ],
      "op": "POP",
      "path": "0"
    },
    "10944": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12433,
        12483
      ],
      "op": "POP",
      "path": "0"
    },
    "10945": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12433,
        12483
      ],
      "op": "POP",
      "path": "0"
    },
    "10946": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12433,
        12483
      ],
      "op": "POP",
      "path": "0"
    },
    "10947": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12433,
        12483
      ],
      "op": "POP",
      "path": "0"
    },
    "10948": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12433,
        12483
      ],
      "op": "POP",
      "path": "0"
    },
    "10949": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12433,
        12483
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10950": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12433,
        12483
      ],
      "op": "POP",
      "path": "0"
    },
    "10951": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12494,
        12508
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10953": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12517
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "10955": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12517
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10957": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12517
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10958": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12517
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10959": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12517
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10960": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12517
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "10963": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12517
      ],
      "op": "EXP",
      "path": "0"
    },
    "10964": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12517
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10965": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12517
      ],
      "op": "DIV",
      "path": "0"
    },
    "10966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10968": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10970": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10972": {
      "op": "SHL"
    },
    "10973": {
      "op": "SUB"
    },
    "10974": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12517
      ],
      "op": "AND",
      "path": "0"
    },
    "10975": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10977": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10979": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10981": {
      "op": "SHL"
    },
    "10982": {
      "op": "SUB"
    },
    "10983": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12526
      ],
      "op": "AND",
      "path": "0"
    },
    "10984": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12526
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x313CE567"
    },
    "10989": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12528
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10991": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12528
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10992": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12528
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10993": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12528
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "10998": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12528
      ],
      "op": "AND",
      "path": "0"
    },
    "10999": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12528
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "11001": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12528
      ],
      "op": "SHL",
      "path": "0"
    },
    "11002": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12528
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11003": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12528
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11004": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12528
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "11006": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12528
      ],
      "op": "ADD",
      "path": "0"
    },
    "11007": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12528
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "11009": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12528
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11011": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12528
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11012": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12528
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11013": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12528
      ],
      "op": "DUP4",
      "path": "0"
    },
    "11014": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12528
      ],
      "op": "SUB",
      "path": "0"
    },
    "11015": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12528
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11016": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12528
      ],
      "op": "DUP7",
      "path": "0"
    },
    "11017": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12528
      ],
      "op": "GAS",
      "path": "0"
    },
    "11018": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12528
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "11019": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12528
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "11020": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12528
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11021": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12528
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "11022": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12528
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B1B"
    },
    "11025": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12528
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "11026": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12528
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "11027": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12528
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11029": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12528
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11030": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12528
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "11031": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12528
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "11032": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12528
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11034": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12528
      ],
      "op": "REVERT",
      "path": "0"
    },
    "11035": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12528
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11036": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12528
      ],
      "op": "POP",
      "path": "0"
    },
    "11037": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12528
      ],
      "op": "POP",
      "path": "0"
    },
    "11038": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12528
      ],
      "op": "POP",
      "path": "0"
    },
    "11039": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12528
      ],
      "op": "POP",
      "path": "0"
    },
    "11040": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12528
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11042": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12528
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11043": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12528
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "11044": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12528
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "11046": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12528
      ],
      "op": "NOT",
      "path": "0"
    },
    "11047": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12528
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "11049": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12528
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11050": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12528
      ],
      "op": "ADD",
      "path": "0"
    },
    "11051": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12528
      ],
      "op": "AND",
      "path": "0"
    },
    "11052": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12528
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11053": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12528
      ],
      "op": "ADD",
      "path": "0"
    },
    "11054": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12528
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11055": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12528
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11057": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12528
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11058": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12528
      ],
      "op": "POP",
      "path": "0"
    },
    "11059": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12528
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11060": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12528
      ],
      "op": "ADD",
      "path": "0"
    },
    "11061": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12528
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11062": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12528
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B3F"
    },
    "11065": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12528
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11066": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12528
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11067": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12528
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41E9"
    },
    "11070": {
      "fn": "GeVault.poolMatchesOracle",
      "jump": "i",
      "offset": [
        12511,
        12528
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11071": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12511,
        12528
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11072": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12494,
        12528
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "11074": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12494,
        12528
      ],
      "op": "AND",
      "path": "0"
    },
    "11075": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12494,
        12528
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11076": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12494,
        12528
      ],
      "op": "POP",
      "path": "0"
    },
    "11077": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12534,
        12548
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11079": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12557
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "11081": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12557
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11083": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12557
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11084": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12557
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "11085": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12557
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11086": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12557
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "11089": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12557
      ],
      "op": "EXP",
      "path": "0"
    },
    "11090": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12557
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11091": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12557
      ],
      "op": "DIV",
      "path": "0"
    },
    "11092": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11094": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11096": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11098": {
      "op": "SHL"
    },
    "11099": {
      "op": "SUB"
    },
    "11100": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12557
      ],
      "op": "AND",
      "path": "0"
    },
    "11101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11103": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11105": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11107": {
      "op": "SHL"
    },
    "11108": {
      "op": "SUB"
    },
    "11109": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12566
      ],
      "op": "AND",
      "path": "0"
    },
    "11110": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12566
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x313CE567"
    },
    "11115": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12568
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11117": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12568
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11118": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12568
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11119": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12568
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "11124": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12568
      ],
      "op": "AND",
      "path": "0"
    },
    "11125": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12568
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "11127": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12568
      ],
      "op": "SHL",
      "path": "0"
    },
    "11128": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12568
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11129": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12568
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11130": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12568
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "11132": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12568
      ],
      "op": "ADD",
      "path": "0"
    },
    "11133": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12568
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "11135": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12568
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11137": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12568
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11138": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12568
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11139": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12568
      ],
      "op": "DUP4",
      "path": "0"
    },
    "11140": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12568
      ],
      "op": "SUB",
      "path": "0"
    },
    "11141": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12568
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11142": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12568
      ],
      "op": "DUP7",
      "path": "0"
    },
    "11143": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12568
      ],
      "op": "GAS",
      "path": "0"
    },
    "11144": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12568
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "11145": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12568
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "11146": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12568
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11147": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12568
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "11148": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12568
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B99"
    },
    "11151": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12568
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "11152": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12568
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "11153": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12568
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11155": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12568
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11156": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12568
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "11157": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12568
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "11158": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12568
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11160": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12568
      ],
      "op": "REVERT",
      "path": "0"
    },
    "11161": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12568
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11162": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12568
      ],
      "op": "POP",
      "path": "0"
    },
    "11163": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12568
      ],
      "op": "POP",
      "path": "0"
    },
    "11164": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12568
      ],
      "op": "POP",
      "path": "0"
    },
    "11165": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12568
      ],
      "op": "POP",
      "path": "0"
    },
    "11166": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12568
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11168": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12568
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11169": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12568
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "11170": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12568
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "11172": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12568
      ],
      "op": "NOT",
      "path": "0"
    },
    "11173": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12568
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "11175": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12568
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11176": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12568
      ],
      "op": "ADD",
      "path": "0"
    },
    "11177": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12568
      ],
      "op": "AND",
      "path": "0"
    },
    "11178": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12568
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11179": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12568
      ],
      "op": "ADD",
      "path": "0"
    },
    "11180": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12568
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11181": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12568
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11183": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12568
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11184": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12568
      ],
      "op": "POP",
      "path": "0"
    },
    "11185": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12568
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11186": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12568
      ],
      "op": "ADD",
      "path": "0"
    },
    "11187": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12568
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11188": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12568
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BBD"
    },
    "11191": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12568
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11192": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12568
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11193": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12568
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41E9"
    },
    "11196": {
      "fn": "GeVault.poolMatchesOracle",
      "jump": "i",
      "offset": [
        12551,
        12568
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11197": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12551,
        12568
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11198": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12534,
        12568
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "11200": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12534,
        12568
      ],
      "op": "AND",
      "path": "0"
    },
    "11201": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12534,
        12568
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11202": {
      "op": "POP"
    },
    "11203": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12574,
        12586
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11205": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12589,
        12602
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BCF"
    },
    "11208": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12593,
        12602
      ],
      "op": "DUP4",
      "path": "0"
    },
    "11209": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12589,
        12591
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "11211": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12589,
        12602
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x46D6"
    },
    "11214": {
      "fn": "GeVault.poolMatchesOracle",
      "jump": "i",
      "offset": [
        12589,
        12602
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11215": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12589,
        12602
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11216": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12574,
        12602
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11217": {
      "op": "POP"
    },
    "11218": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11220": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "11222": {
      "op": "SHL"
    },
    "11223": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12726,
        12727
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 92,
      "value": "0x2"
    },
    "11225": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12699,
        12721
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BE4"
    },
    "11228": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12714,
        12721
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1000"
    },
    "11231": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12699,
        12711
      ],
      "op": "DUP8",
      "path": "0"
    },
    "11232": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12699,
        12721
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x46E2"
    },
    "11235": {
      "fn": "GeVault.poolMatchesOracle",
      "jump": "i",
      "offset": [
        12699,
        12721
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11236": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12699,
        12721
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11241": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11243": {
      "op": "SHL"
    },
    "11244": {
      "op": "SUB"
    },
    "11245": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12694,
        12722
      ],
      "op": "AND",
      "path": "0"
    },
    "11246": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12694,
        12727
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BF7"
    },
    "11249": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12694,
        12727
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11250": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12694,
        12727
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11251": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12694,
        12727
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x42E8"
    },
    "11254": {
      "fn": "GeVault.poolMatchesOracle",
      "jump": "i",
      "offset": [
        12694,
        12727
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11255": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12694,
        12727
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11256": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12684,
        12727
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C01"
    },
    "11259": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12684,
        12727
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11260": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12684,
        12691
      ],
      "op": "DUP4",
      "path": "0"
    },
    "11261": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12684,
        12727
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4192"
    },
    "11264": {
      "fn": "GeVault.poolMatchesOracle",
      "jump": "i",
      "offset": [
        12684,
        12727
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11265": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12684,
        12727
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11266": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12684,
        12733
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C0F"
    },
    "11269": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12684,
        12733
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11270": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12730,
        12733
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5F5E100"
    },
    "11275": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12684,
        12733
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4192"
    },
    "11278": {
      "fn": "GeVault.poolMatchesOracle",
      "jump": "i",
      "offset": [
        12684,
        12733
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11279": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12684,
        12733
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11280": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12684,
        12742
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C19"
    },
    "11283": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12684,
        12742
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11284": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12684,
        12742
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11285": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12684,
        12742
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41BF"
    },
    "11288": {
      "fn": "GeVault.poolMatchesOracle",
      "jump": "i",
      "offset": [
        12684,
        12742
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11289": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12684,
        12742
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11290": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12674,
        12742
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11291": {
      "op": "POP"
    },
    "11292": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12768,
        12781
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 93,
      "value": "0x2C26"
    },
    "11295": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12772,
        12781
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11296": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12768,
        12770
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "11298": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12768,
        12781
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x46D6"
    },
    "11301": {
      "fn": "GeVault.poolMatchesOracle",
      "jump": "i",
      "offset": [
        12768,
        12781
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11302": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12768,
        12781
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11303": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12758,
        12781
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C30"
    },
    "11306": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12758,
        12781
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11307": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12758,
        12765
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11308": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12758,
        12781
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41BF"
    },
    "11311": {
      "fn": "GeVault.poolMatchesOracle",
      "jump": "i",
      "offset": [
        12758,
        12781
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11312": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12758,
        12781
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11313": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12858
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x11"
    },
    "11315": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12858
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "11316": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12881,
        12887
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "11318": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12881,
        12887
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "11319": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12889
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11321": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12889
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11322": {
      "op": "PUSH4",
      "value": "0xB3596F07"
    },
    "11327": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11329": {
      "op": "SHL"
    },
    "11330": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12889
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11331": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12889
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11336": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11338": {
      "op": "SHL"
    },
    "11339": {
      "op": "SUB"
    },
    "11340": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12881,
        12887
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11341": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12881,
        12887
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11342": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12881,
        12887
      ],
      "op": "AND",
      "path": "0"
    },
    "11343": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12889
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "11345": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12889
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11346": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12889
      ],
      "op": "ADD",
      "path": "0"
    },
    "11347": {
      "op": "MSTORE"
    },
    "11348": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12748,
        12781
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "11349": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12748,
        12781
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "11350": {
      "op": "POP"
    },
    "11351": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12787,
        12803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11353": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12787,
        12803
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "11354": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12858
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11355": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12858
      ],
      "op": "AND",
      "path": "0"
    },
    "11356": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12858
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11357": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12872
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xB3596F07"
    },
    "11362": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12872
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11363": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11365": {
      "op": "ADD"
    },
    "11366": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12889
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "11368": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12889
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11370": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12889
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11371": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12889
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11372": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12889
      ],
      "op": "DUP4",
      "path": "0"
    },
    "11373": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12889
      ],
      "op": "SUB",
      "path": "0"
    },
    "11374": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12889
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11375": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12889
      ],
      "op": "DUP7",
      "path": "0"
    },
    "11376": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12889
      ],
      "op": "GAS",
      "path": "0"
    },
    "11377": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12889
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "11378": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12889
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "11379": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12889
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11380": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12889
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "11381": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12889
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C82"
    },
    "11384": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12889
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "11385": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12889
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "11386": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12889
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11388": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12889
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11389": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12889
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "11390": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12889
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "11391": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12889
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11393": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12889
      ],
      "op": "REVERT",
      "path": "0"
    },
    "11394": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12889
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11395": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12889
      ],
      "op": "POP",
      "path": "0"
    },
    "11396": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12889
      ],
      "op": "POP",
      "path": "0"
    },
    "11397": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12889
      ],
      "op": "POP",
      "path": "0"
    },
    "11398": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12889
      ],
      "op": "POP",
      "path": "0"
    },
    "11399": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12889
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11401": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12889
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11402": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12889
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "11403": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12889
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "11405": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12889
      ],
      "op": "NOT",
      "path": "0"
    },
    "11406": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12889
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "11408": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12889
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11409": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12889
      ],
      "op": "ADD",
      "path": "0"
    },
    "11410": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12889
      ],
      "op": "AND",
      "path": "0"
    },
    "11411": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12889
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11412": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12889
      ],
      "op": "ADD",
      "path": "0"
    },
    "11413": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12889
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11414": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12889
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11416": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12889
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11417": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12889
      ],
      "op": "POP",
      "path": "0"
    },
    "11418": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12889
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11419": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12889
      ],
      "op": "ADD",
      "path": "0"
    },
    "11420": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12889
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11421": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12889
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CA6"
    },
    "11424": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12889
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11425": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12889
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11426": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12889
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x430A"
    },
    "11429": {
      "fn": "GeVault.poolMatchesOracle",
      "jump": "i",
      "offset": [
        12852,
        12889
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11430": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12852,
        12889
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11431": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12818
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x11"
    },
    "11433": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12818
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "11434": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12841,
        12847
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "11436": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12841,
        12847
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "11437": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12849
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11439": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12849
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11440": {
      "op": "PUSH4",
      "value": "0xB3596F07"
    },
    "11445": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11447": {
      "op": "SHL"
    },
    "11448": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12849
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11449": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12849
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11454": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11456": {
      "op": "SHL"
    },
    "11457": {
      "op": "SUB"
    },
    "11458": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12841,
        12847
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11459": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12841,
        12847
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11460": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12841,
        12847
      ],
      "op": "AND",
      "path": "0"
    },
    "11461": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12849
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "11463": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12849
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11464": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12849
      ],
      "op": "ADD",
      "path": "0"
    },
    "11465": {
      "op": "MSTORE"
    },
    "11466": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12818
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11467": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12818
      ],
      "op": "AND",
      "path": "0"
    },
    "11468": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12818
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11469": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12832
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xB3596F07"
    },
    "11474": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12832
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11475": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11477": {
      "op": "ADD"
    },
    "11478": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12849
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "11480": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12849
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11482": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12849
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11483": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12849
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11484": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12849
      ],
      "op": "DUP4",
      "path": "0"
    },
    "11485": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12849
      ],
      "op": "SUB",
      "path": "0"
    },
    "11486": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12849
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11487": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12849
      ],
      "op": "DUP7",
      "path": "0"
    },
    "11488": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12849
      ],
      "op": "GAS",
      "path": "0"
    },
    "11489": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12849
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "11490": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12849
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "11491": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12849
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11492": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12849
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "11493": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12849
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CF2"
    },
    "11496": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12849
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "11497": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12849
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "11498": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12849
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11500": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12849
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11501": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12849
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "11502": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12849
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "11503": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12849
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11505": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12849
      ],
      "op": "REVERT",
      "path": "0"
    },
    "11506": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12849
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11507": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12849
      ],
      "op": "POP",
      "path": "0"
    },
    "11508": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12849
      ],
      "op": "POP",
      "path": "0"
    },
    "11509": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12849
      ],
      "op": "POP",
      "path": "0"
    },
    "11510": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12849
      ],
      "op": "POP",
      "path": "0"
    },
    "11511": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12849
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11513": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12849
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11514": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12849
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "11515": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12849
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "11517": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12849
      ],
      "op": "NOT",
      "path": "0"
    },
    "11518": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12849
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "11520": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12849
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11521": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12849
      ],
      "op": "ADD",
      "path": "0"
    },
    "11522": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12849
      ],
      "op": "AND",
      "path": "0"
    },
    "11523": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12849
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11524": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12849
      ],
      "op": "ADD",
      "path": "0"
    },
    "11525": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12849
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11526": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12849
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11528": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12849
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11529": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12849
      ],
      "op": "POP",
      "path": "0"
    },
    "11530": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12849
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11531": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12849
      ],
      "op": "ADD",
      "path": "0"
    },
    "11532": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12849
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11533": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12849
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D16"
    },
    "11536": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12849
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11537": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12849
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11538": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12849
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x430A"
    },
    "11541": {
      "fn": "GeVault.poolMatchesOracle",
      "jump": "i",
      "offset": [
        12812,
        12849
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11542": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12812,
        12849
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11543": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12806,
        12849
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D24"
    },
    "11546": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12806,
        12849
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11547": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12806,
        12809
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5F5E100"
    },
    "11552": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12806,
        12849
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4192"
    },
    "11555": {
      "fn": "GeVault.poolMatchesOracle",
      "jump": "i",
      "offset": [
        12806,
        12849
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11556": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12806,
        12849
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11557": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12806,
        12889
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D2E"
    },
    "11560": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12806,
        12889
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11561": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12806,
        12889
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11562": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12806,
        12889
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41BF"
    },
    "11565": {
      "fn": "GeVault.poolMatchesOracle",
      "jump": "i",
      "offset": [
        12806,
        12889
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11566": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12806,
        12889
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11567": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12787,
        12889
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11568": {
      "op": "POP"
    },
    "11569": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12929,
        12932
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "11571": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12913,
        12926
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D3D"
    },
    "11574": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12913,
        12920
      ],
      "op": "DUP4",
      "path": "0"
    },
    "11575": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12923,
        12926
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x65"
    },
    "11577": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12913,
        12926
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4192"
    },
    "11580": {
      "fn": "GeVault.poolMatchesOracle",
      "jump": "i",
      "offset": [
        12913,
        12926
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11581": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12913,
        12926
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11582": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12913,
        12932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D47"
    },
    "11585": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12913,
        12932
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11586": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12913,
        12932
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11587": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12913,
        12932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41BF"
    },
    "11590": {
      "fn": "GeVault.poolMatchesOracle",
      "jump": "i",
      "offset": [
        12913,
        12932
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11591": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12913,
        12932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11592": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12899,
        12910
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11593": {
      "branch": 197,
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12899,
        12932
      ],
      "op": "LT",
      "path": "0"
    },
    "11594": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12899,
        12968
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11595": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12899,
        12968
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "11596": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12899,
        12968
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D6A"
    },
    "11599": {
      "branch": 197,
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12899,
        12968
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "11600": {
      "op": "POP"
    },
    "11601": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12965,
        12968
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "11603": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12950,
        12962
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D5D"
    },
    "11606": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12950,
        12957
      ],
      "op": "DUP4",
      "path": "0"
    },
    "11607": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12960,
        12962
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x63"
    },
    "11609": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12950,
        12962
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4192"
    },
    "11612": {
      "fn": "GeVault.poolMatchesOracle",
      "jump": "i",
      "offset": [
        12950,
        12962
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11613": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12950,
        12962
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11614": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12950,
        12968
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D67"
    },
    "11617": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12950,
        12968
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11618": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12950,
        12968
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11619": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12950,
        12968
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41BF"
    },
    "11622": {
      "fn": "GeVault.poolMatchesOracle",
      "jump": "i",
      "offset": [
        12950,
        12968
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11623": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12950,
        12968
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11624": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12936,
        12947
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11625": {
      "branch": 198,
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12936,
        12968
      ],
      "op": "GT",
      "path": "0"
    },
    "11626": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12899,
        12968
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11627": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12895,
        12984
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "11628": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12895,
        12984
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D74"
    },
    "11631": {
      "branch": 198,
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12895,
        12984
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "11632": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12980,
        12984
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 94,
      "value": "0x1"
    },
    "11634": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12970,
        12984
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "11635": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12970,
        12984
      ],
      "op": "POP",
      "path": "0"
    },
    "11636": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12895,
        12984
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11637": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12427,
        12989
      ],
      "op": "POP",
      "path": "0"
    },
    "11638": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12427,
        12989
      ],
      "op": "POP",
      "path": "0"
    },
    "11639": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12427,
        12989
      ],
      "op": "POP",
      "path": "0"
    },
    "11640": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12427,
        12989
      ],
      "op": "POP",
      "path": "0"
    },
    "11641": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12427,
        12989
      ],
      "op": "POP",
      "path": "0"
    },
    "11642": {
      "fn": "GeVault.poolMatchesOracle",
      "offset": [
        12364,
        12989
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11643": {
      "fn": "GeVault.poolMatchesOracle",
      "jump": "o",
      "offset": [
        12364,
        12989
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11644": {
      "fn": "GeVault.setTvlCap",
      "offset": [
        6237,
        6349
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11645": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x5"
    },
    "11647": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "11648": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11650": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11652": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11654": {
      "op": "SHL"
    },
    "11655": {
      "op": "SUB"
    },
    "11656": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "12"
    },
    "11657": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "28"
    },
    "11658": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "12"
    },
    "11659": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2DA6"
    },
    "11662": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "11663": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "11665": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "11666": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11670": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11672": {
      "op": "SHL"
    },
    "11673": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "12"
    },
    "11674": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11675": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "11677": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "12"
    },
    "11678": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x8AC"
    },
    "11681": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11682": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4578"
    },
    "11685": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "12"
    },
    "11686": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11687": {
      "fn": "GeVault.setTvlCap",
      "offset": [
        6295,
        6301
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 95,
      "value": "0xD"
    },
    "11689": {
      "fn": "GeVault.setTvlCap",
      "offset": [
        6295,
        6313
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11690": {
      "fn": "GeVault.setTvlCap",
      "offset": [
        6295,
        6313
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11691": {
      "fn": "GeVault.setTvlCap",
      "offset": [
        6295,
        6313
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "11692": {
      "fn": "GeVault.setTvlCap",
      "offset": [
        6324,
        6344
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 96,
      "value": "0x40"
    },
    "11694": {
      "fn": "GeVault.setTvlCap",
      "offset": [
        6324,
        6344
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11695": {
      "op": "DUP2"
    },
    "11696": {
      "op": "DUP2"
    },
    "11697": {
      "op": "MSTORE"
    },
    "11698": {
      "fn": "GeVault.setTvlCap",
      "offset": [
        6324,
        6344
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x9B83075767C93F683DC38F28B4E8FD725867522B5BBEAD77B8C397AB04FE21F1"
    },
    "11731": {
      "fn": "GeVault.setTvlCap",
      "offset": [
        6324,
        6344
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11732": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11734": {
      "op": "ADD"
    },
    "11735": {
      "fn": "GeVault.setTvlCap",
      "offset": [
        6324,
        6344
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x169C"
    },
    "11738": {
      "op": "JUMP"
    },
    "11739": {
      "fn": "GeVault.setTreasury",
      "offset": [
        3546,
        3675
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11740": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x5"
    },
    "11742": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "11743": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11745": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11747": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11749": {
      "op": "SHL"
    },
    "11750": {
      "op": "SUB"
    },
    "11751": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "12"
    },
    "11752": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "28"
    },
    "11753": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "12"
    },
    "11754": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2E05"
    },
    "11757": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "11758": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "11760": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "11761": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11765": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11767": {
      "op": "SHL"
    },
    "11768": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "12"
    },
    "11769": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11770": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "11772": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "12"
    },
    "11773": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x8AC"
    },
    "11776": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11777": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4578"
    },
    "11780": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "12"
    },
    "11781": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11782": {
      "fn": "GeVault.setTreasury",
      "offset": [
        3612,
        3620
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 97,
      "value": "0xE"
    },
    "11784": {
      "fn": "GeVault.setTreasury",
      "offset": [
        3612,
        3634
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11785": {
      "fn": "GeVault.setTreasury",
      "offset": [
        3612,
        3634
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "11786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11790": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11792": {
      "op": "SHL"
    },
    "11793": {
      "op": "SUB"
    },
    "11794": {
      "op": "NOT"
    },
    "11795": {
      "fn": "GeVault.setTreasury",
      "offset": [
        3612,
        3634
      ],
      "op": "AND",
      "path": "0"
    },
    "11796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11800": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11802": {
      "op": "SHL"
    },
    "11803": {
      "op": "SUB"
    },
    "11804": {
      "fn": "GeVault.setTreasury",
      "offset": [
        3612,
        3634
      ],
      "op": "DUP4",
      "path": "0"
    },
    "11805": {
      "fn": "GeVault.setTreasury",
      "offset": [
        3612,
        3634
      ],
      "op": "AND",
      "path": "0"
    },
    "11806": {
      "fn": "GeVault.setTreasury",
      "offset": [
        3612,
        3634
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11807": {
      "fn": "GeVault.setTreasury",
      "offset": [
        3612,
        3634
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11808": {
      "fn": "GeVault.setTreasury",
      "offset": [
        3612,
        3634
      ],
      "op": "OR",
      "path": "0"
    },
    "11809": {
      "fn": "GeVault.setTreasury",
      "offset": [
        3612,
        3634
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11810": {
      "fn": "GeVault.setTreasury",
      "offset": [
        3612,
        3634
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11811": {
      "fn": "GeVault.setTreasury",
      "offset": [
        3612,
        3634
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "11812": {
      "fn": "GeVault.setTreasury",
      "offset": [
        3646,
        3670
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 98,
      "value": "0x40"
    },
    "11814": {
      "fn": "GeVault.setTreasury",
      "offset": [
        3646,
        3670
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11815": {
      "op": "SWAP1"
    },
    "11816": {
      "op": "DUP2"
    },
    "11817": {
      "op": "MSTORE"
    },
    "11818": {
      "fn": "GeVault.setTreasury",
      "offset": [
        3646,
        3670
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xCB7EF3E545F5CDB893F5C568BA710FE08F336375A2D9FD66E161033F8FC09EF3"
    },
    "11851": {
      "fn": "GeVault.setTreasury",
      "offset": [
        3646,
        3670
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11852": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11854": {
      "op": "ADD"
    },
    "11855": {
      "fn": "GeVault.setTreasury",
      "offset": [
        3646,
        3670
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x169C"
    },
    "11858": {
      "op": "JUMP"
    },
    "11859": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11860": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x5"
    },
    "11862": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "11863": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11865": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11867": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11869": {
      "op": "SHL"
    },
    "11870": {
      "op": "SUB"
    },
    "11871": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "12"
    },
    "11872": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "28"
    },
    "11873": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "12"
    },
    "11874": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2E7D"
    },
    "11877": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "11878": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "11880": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "11881": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11885": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11887": {
      "op": "SHL"
    },
    "11888": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "12"
    },
    "11889": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11890": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "11892": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "12"
    },
    "11893": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x8AC"
    },
    "11896": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11897": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4578"
    },
    "11900": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "12"
    },
    "11901": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11902": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11906": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11908": {
      "op": "SHL"
    },
    "11909": {
      "op": "SUB"
    },
    "11910": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "12",
      "statement": 99
    },
    "11911": {
      "branch": 220,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "12"
    },
    "11912": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2EE2"
    },
    "11915": {
      "branch": 220,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "11916": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "11918": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "11919": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11923": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11925": {
      "op": "SHL"
    },
    "11926": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "12"
    },
    "11927": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11928": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11930": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "11932": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "12"
    },
    "11933": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "12"
    },
    "11934": {
      "op": "MSTORE"
    },
    "11935": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "11937": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11939": {
      "op": "DUP3"
    },
    "11940": {
      "op": "ADD"
    },
    "11941": {
      "op": "MSTORE"
    },
    "11942": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "11975": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11977": {
      "op": "DUP3"
    },
    "11978": {
      "op": "ADD"
    },
    "11979": {
      "op": "MSTORE"
    },
    "11980": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "11987": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "11989": {
      "op": "SHL"
    },
    "11990": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11992": {
      "op": "DUP3"
    },
    "11993": {
      "op": "ADD"
    },
    "11994": {
      "op": "MSTORE"
    },
    "11995": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "11997": {
      "op": "ADD"
    },
    "11998": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x8AC"
    },
    "12001": {
      "op": "JUMP"
    },
    "12002": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12003": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 100,
      "value": "0x2EEB"
    },
    "12006": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12007": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x37A6"
    },
    "12010": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "12"
    },
    "12011": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12012": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "POP",
      "path": "12"
    },
    "12013": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "12"
    },
    "12014": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        912,
        1153
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "12015": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 101,
      "value": "0x40"
    },
    "12017": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "12018": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12022": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12024": {
      "op": "SHL"
    },
    "12025": {
      "op": "SUB"
    },
    "12026": {
      "op": "DUP1"
    },
    "12027": {
      "op": "DUP6"
    },
    "12028": {
      "op": "AND"
    },
    "12029": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "12031": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP4",
      "path": "23"
    },
    "12032": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "ADD",
      "path": "23"
    },
    "12033": {
      "op": "MSTORE"
    },
    "12034": {
      "op": "DUP4"
    },
    "12035": {
      "op": "AND"
    },
    "12036": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12038": {
      "op": "DUP3"
    },
    "12039": {
      "op": "ADD"
    },
    "12040": {
      "op": "MSTORE"
    },
    "12041": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12043": {
      "op": "DUP2"
    },
    "12044": {
      "op": "ADD"
    },
    "12045": {
      "op": "DUP3"
    },
    "12046": {
      "op": "SWAP1"
    },
    "12047": {
      "op": "MSTORE"
    },
    "12048": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1050,
        1146
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2F59"
    },
    "12051": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1050,
        1146
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "12052": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1070,
        1075
      ],
      "op": "DUP6",
      "path": "23"
    },
    "12053": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1070,
        1075
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "12054": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "12059": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12061": {
      "op": "SHL"
    },
    "12062": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1100,
        1127
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "12063": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "12065": {
      "op": "ADD"
    },
    "12066": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "12067": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "12069": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP1",
      "path": "23"
    },
    "12070": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "12071": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12073": {
      "op": "NOT"
    },
    "12074": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP2",
      "path": "23"
    },
    "12075": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP5",
      "path": "23"
    },
    "12076": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SUB",
      "path": "23"
    },
    "12077": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "ADD",
      "path": "23"
    },
    "12078": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP2",
      "path": "23"
    },
    "12079": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "12080": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "12081": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "12082": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "12083": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "12085": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP2",
      "path": "23"
    },
    "12086": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "ADD",
      "path": "23"
    },
    "12087": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP1",
      "path": "23"
    },
    "12088": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "12089": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12091": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12093": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12095": {
      "op": "SHL"
    },
    "12096": {
      "op": "SUB"
    },
    "12097": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "AND",
      "path": "23"
    },
    "12098": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12100": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12102": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12104": {
      "op": "SHL"
    },
    "12105": {
      "op": "SUB"
    },
    "12106": {
      "op": "NOT"
    },
    "12107": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "12108": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "12109": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "AND",
      "path": "23"
    },
    "12110": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "12111": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "12112": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "12113": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "OR",
      "path": "23"
    },
    "12114": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "12115": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "12116": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "12117": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1050,
        1069
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x37F8"
    },
    "12120": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "i",
      "offset": [
        1050,
        1146
      ],
      "op": "JUMP",
      "path": "23"
    },
    "12121": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1050,
        1146
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "12122": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        912,
        1153
      ],
      "op": "POP",
      "path": "23"
    },
    "12123": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        912,
        1153
      ],
      "op": "POP",
      "path": "23"
    },
    "12124": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        912,
        1153
      ],
      "op": "POP",
      "path": "23"
    },
    "12125": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        912,
        1153
      ],
      "op": "POP",
      "path": "23"
    },
    "12126": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "o",
      "offset": [
        912,
        1153
      ],
      "op": "JUMP",
      "path": "23"
    },
    "12127": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "12128": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 102,
      "value": "0x40"
    },
    "12130": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "12131": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12135": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12137": {
      "op": "SHL"
    },
    "12138": {
      "op": "SUB"
    },
    "12139": {
      "op": "DUP4"
    },
    "12140": {
      "op": "AND"
    },
    "12141": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "12143": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP3",
      "path": "23"
    },
    "12144": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "ADD",
      "path": "23"
    },
    "12145": {
      "op": "MSTORE"
    },
    "12146": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12148": {
      "op": "DUP2"
    },
    "12149": {
      "op": "ADD"
    },
    "12150": {
      "op": "DUP3"
    },
    "12151": {
      "op": "SWAP1"
    },
    "12152": {
      "op": "MSTORE"
    },
    "12153": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        899
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2F8F"
    },
    "12156": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        899
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "12157": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        833,
        838
      ],
      "op": "DUP5",
      "path": "23"
    },
    "12158": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        833,
        838
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "12159": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "12164": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12166": {
      "op": "SHL"
    },
    "12167": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        863,
        886
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "12168": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12170": {
      "op": "ADD"
    },
    "12171": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2F22"
    },
    "12174": {
      "op": "JUMP"
    },
    "12175": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        899
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "12176": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "POP",
      "path": "23"
    },
    "12177": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "POP",
      "path": "23"
    },
    "12178": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "POP",
      "path": "23"
    },
    "12179": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "o",
      "offset": [
        701,
        906
      ],
      "op": "JUMP",
      "path": "23"
    },
    "12180": {
      "fn": "ERC20._mint",
      "offset": [
        8311,
        8700
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "12181": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12183": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12185": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12187": {
      "op": "SHL"
    },
    "12188": {
      "op": "SUB"
    },
    "12189": {
      "fn": "ERC20._mint",
      "offset": [
        8394,
        8415
      ],
      "op": "DUP3",
      "path": "20",
      "statement": 103
    },
    "12190": {
      "branch": 212,
      "fn": "ERC20._mint",
      "offset": [
        8394,
        8415
      ],
      "op": "AND",
      "path": "20"
    },
    "12191": {
      "fn": "ERC20._mint",
      "offset": [
        8386,
        8451
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2FEA"
    },
    "12194": {
      "branch": 212,
      "fn": "ERC20._mint",
      "offset": [
        8386,
        8451
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "12195": {
      "fn": "ERC20._mint",
      "offset": [
        8386,
        8451
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "12197": {
      "fn": "ERC20._mint",
      "offset": [
        8386,
        8451
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "12198": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12202": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12204": {
      "op": "SHL"
    },
    "12205": {
      "fn": "ERC20._mint",
      "offset": [
        8386,
        8451
      ],
      "op": "DUP2",
      "path": "20"
    },
    "12206": {
      "fn": "ERC20._mint",
      "offset": [
        8386,
        8451
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "12207": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12209": {
      "fn": "ERC20._mint",
      "offset": [
        8386,
        8451
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "12211": {
      "fn": "ERC20._mint",
      "offset": [
        8386,
        8451
      ],
      "op": "DUP3",
      "path": "20"
    },
    "12212": {
      "fn": "ERC20._mint",
      "offset": [
        8386,
        8451
      ],
      "op": "ADD",
      "path": "20"
    },
    "12213": {
      "op": "MSTORE"
    },
    "12214": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12216": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12218": {
      "op": "DUP3"
    },
    "12219": {
      "op": "ADD"
    },
    "12220": {
      "op": "MSTORE"
    },
    "12221": {
      "op": "PUSH32",
      "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "12254": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12256": {
      "op": "DUP3"
    },
    "12257": {
      "op": "ADD"
    },
    "12258": {
      "op": "MSTORE"
    },
    "12259": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12261": {
      "op": "ADD"
    },
    "12262": {
      "fn": "ERC20._mint",
      "offset": [
        8386,
        8451
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x8AC"
    },
    "12265": {
      "op": "JUMP"
    },
    "12266": {
      "fn": "ERC20._mint",
      "offset": [
        8386,
        8451
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "12267": {
      "fn": "ERC20._mint",
      "offset": [
        8538,
        8544
      ],
      "op": "DUP1",
      "path": "20",
      "statement": 104
    },
    "12268": {
      "fn": "ERC20._mint",
      "offset": [
        8522,
        8534
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "12270": {
      "fn": "ERC20._mint",
      "offset": [
        8522,
        8534
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "12272": {
      "fn": "ERC20._mint",
      "offset": [
        8522,
        8544
      ],
      "op": "DUP3",
      "path": "20"
    },
    "12273": {
      "fn": "ERC20._mint",
      "offset": [
        8522,
        8544
      ],
      "op": "DUP3",
      "path": "20"
    },
    "12274": {
      "fn": "ERC20._mint",
      "offset": [
        8522,
        8544
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "12275": {
      "fn": "ERC20._mint",
      "offset": [
        8522,
        8544
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2FFC"
    },
    "12278": {
      "fn": "ERC20._mint",
      "offset": [
        8522,
        8544
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "12279": {
      "fn": "ERC20._mint",
      "offset": [
        8522,
        8544
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12280": {
      "fn": "ERC20._mint",
      "offset": [
        8522,
        8544
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4323"
    },
    "12283": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8522,
        8544
      ],
      "op": "JUMP",
      "path": "20"
    },
    "12284": {
      "fn": "ERC20._mint",
      "offset": [
        8522,
        8544
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "12285": {
      "fn": "ERC20._mint",
      "offset": [
        8522,
        8544
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12286": {
      "fn": "ERC20._mint",
      "offset": [
        8522,
        8544
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "12287": {
      "fn": "ERC20._mint",
      "offset": [
        8522,
        8544
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "12288": {
      "op": "POP"
    },
    "12289": {
      "op": "POP"
    },
    "12290": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12292": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12294": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12296": {
      "op": "SHL"
    },
    "12297": {
      "op": "SUB"
    },
    "12298": {
      "fn": "ERC20._mint",
      "offset": [
        8554,
        8572
      ],
      "op": "DUP3",
      "path": "20",
      "statement": 105
    },
    "12299": {
      "fn": "ERC20._mint",
      "offset": [
        8554,
        8572
      ],
      "op": "AND",
      "path": "20"
    },
    "12300": {
      "fn": "ERC20._mint",
      "offset": [
        8554,
        8563
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "12302": {
      "fn": "ERC20._mint",
      "offset": [
        8554,
        8572
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12303": {
      "fn": "ERC20._mint",
      "offset": [
        8554,
        8572
      ],
      "op": "DUP2",
      "path": "20"
    },
    "12304": {
      "fn": "ERC20._mint",
      "offset": [
        8554,
        8572
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "12305": {
      "fn": "ERC20._mint",
      "offset": [
        8554,
        8572
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "12307": {
      "fn": "ERC20._mint",
      "offset": [
        8554,
        8572
      ],
      "op": "DUP2",
      "path": "20"
    },
    "12308": {
      "fn": "ERC20._mint",
      "offset": [
        8554,
        8572
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12309": {
      "fn": "ERC20._mint",
      "offset": [
        8554,
        8572
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "12310": {
      "fn": "ERC20._mint",
      "offset": [
        8554,
        8572
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "12312": {
      "fn": "ERC20._mint",
      "offset": [
        8554,
        8572
      ],
      "op": "DUP2",
      "path": "20"
    },
    "12313": {
      "fn": "ERC20._mint",
      "offset": [
        8554,
        8572
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "12314": {
      "fn": "ERC20._mint",
      "offset": [
        8554,
        8582
      ],
      "op": "DUP1",
      "path": "20"
    },
    "12315": {
      "fn": "ERC20._mint",
      "offset": [
        8554,
        8582
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "12316": {
      "fn": "ERC20._mint",
      "offset": [
        8576,
        8582
      ],
      "op": "DUP4",
      "path": "20"
    },
    "12317": {
      "fn": "ERC20._mint",
      "offset": [
        8576,
        8582
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "12318": {
      "fn": "ERC20._mint",
      "offset": [
        8554,
        8563
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12319": {
      "fn": "ERC20._mint",
      "offset": [
        8554,
        8582
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3029"
    },
    "12322": {
      "fn": "ERC20._mint",
      "offset": [
        8554,
        8582
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12323": {
      "fn": "ERC20._mint",
      "offset": [
        8576,
        8582
      ],
      "op": "DUP5",
      "path": "20"
    },
    "12324": {
      "fn": "ERC20._mint",
      "offset": [
        8576,
        8582
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12325": {
      "fn": "ERC20._mint",
      "offset": [
        8554,
        8582
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4323"
    },
    "12328": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8554,
        8582
      ],
      "op": "JUMP",
      "path": "20"
    },
    "12329": {
      "fn": "ERC20._mint",
      "offset": [
        8554,
        8582
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "12330": {
      "fn": "ERC20._mint",
      "offset": [
        8554,
        8582
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12331": {
      "fn": "ERC20._mint",
      "offset": [
        8554,
        8582
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "12332": {
      "fn": "ERC20._mint",
      "offset": [
        8554,
        8582
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "12333": {
      "op": "POP"
    },
    "12334": {
      "op": "POP"
    },
    "12335": {
      "fn": "ERC20._mint",
      "offset": [
        8597,
        8634
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 106,
      "value": "0x40"
    },
    "12337": {
      "fn": "ERC20._mint",
      "offset": [
        8597,
        8634
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "12338": {
      "op": "DUP2"
    },
    "12339": {
      "op": "DUP2"
    },
    "12340": {
      "op": "MSTORE"
    },
    "12341": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12345": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12347": {
      "op": "SHL"
    },
    "12348": {
      "op": "SUB"
    },
    "12349": {
      "fn": "ERC20._mint",
      "offset": [
        8597,
        8634
      ],
      "op": "DUP4",
      "path": "20"
    },
    "12350": {
      "fn": "ERC20._mint",
      "offset": [
        8597,
        8634
      ],
      "op": "AND",
      "path": "20"
    },
    "12351": {
      "fn": "ERC20._mint",
      "offset": [
        8597,
        8634
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12352": {
      "fn": "ERC20._mint",
      "offset": [
        8614,
        8615
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "12354": {
      "fn": "ERC20._mint",
      "offset": [
        8614,
        8615
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12355": {
      "fn": "ERC20._mint",
      "offset": [
        8597,
        8634
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "12388": {
      "fn": "ERC20._mint",
      "offset": [
        8597,
        8634
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12389": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12391": {
      "op": "ADD"
    },
    "12392": {
      "fn": "ERC20._mint",
      "offset": [
        8597,
        8634
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "12394": {
      "fn": "ERC20._mint",
      "offset": [
        8597,
        8634
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "12395": {
      "fn": "ERC20._mint",
      "offset": [
        8597,
        8634
      ],
      "op": "DUP1",
      "path": "20"
    },
    "12396": {
      "fn": "ERC20._mint",
      "offset": [
        8597,
        8634
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "12397": {
      "fn": "ERC20._mint",
      "offset": [
        8597,
        8634
      ],
      "op": "SUB",
      "path": "20"
    },
    "12398": {
      "fn": "ERC20._mint",
      "offset": [
        8597,
        8634
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12399": {
      "fn": "ERC20._mint",
      "offset": [
        8597,
        8634
      ],
      "op": "LOG3",
      "path": "20"
    },
    "12400": {
      "fn": "ERC20._mint",
      "offset": [
        8311,
        8700
      ],
      "op": "POP",
      "path": "20"
    },
    "12401": {
      "fn": "ERC20._mint",
      "offset": [
        8311,
        8700
      ],
      "op": "POP",
      "path": "20"
    },
    "12402": {
      "fn": "ERC20._mint",
      "jump": "o",
      "offset": [
        8311,
        8700
      ],
      "op": "JUMP",
      "path": "20"
    },
    "12403": {
      "fn": "ERC20._burn",
      "offset": [
        9020,
        9596
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "12404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12408": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12410": {
      "op": "SHL"
    },
    "12411": {
      "op": "SUB"
    },
    "12412": {
      "fn": "ERC20._burn",
      "offset": [
        9103,
        9124
      ],
      "op": "DUP3",
      "path": "20",
      "statement": 107
    },
    "12413": {
      "branch": 213,
      "fn": "ERC20._burn",
      "offset": [
        9103,
        9124
      ],
      "op": "AND",
      "path": "20"
    },
    "12414": {
      "fn": "ERC20._burn",
      "offset": [
        9095,
        9162
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x30D3"
    },
    "12417": {
      "branch": 213,
      "fn": "ERC20._burn",
      "offset": [
        9095,
        9162
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "12418": {
      "fn": "ERC20._burn",
      "offset": [
        9095,
        9162
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "12420": {
      "fn": "ERC20._burn",
      "offset": [
        9095,
        9162
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "12421": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12425": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12427": {
      "op": "SHL"
    },
    "12428": {
      "fn": "ERC20._burn",
      "offset": [
        9095,
        9162
      ],
      "op": "DUP2",
      "path": "20"
    },
    "12429": {
      "fn": "ERC20._burn",
      "offset": [
        9095,
        9162
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "12430": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12432": {
      "fn": "ERC20._burn",
      "offset": [
        9095,
        9162
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "12434": {
      "fn": "ERC20._burn",
      "offset": [
        9095,
        9162
      ],
      "op": "DUP3",
      "path": "20"
    },
    "12435": {
      "fn": "ERC20._burn",
      "offset": [
        9095,
        9162
      ],
      "op": "ADD",
      "path": "20"
    },
    "12436": {
      "op": "MSTORE"
    },
    "12437": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "12439": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12441": {
      "op": "DUP3"
    },
    "12442": {
      "op": "ADD"
    },
    "12443": {
      "op": "MSTORE"
    },
    "12444": {
      "op": "PUSH32",
      "value": "0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
    },
    "12477": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12479": {
      "op": "DUP3"
    },
    "12480": {
      "op": "ADD"
    },
    "12481": {
      "op": "MSTORE"
    },
    "12482": {
      "op": "PUSH1",
      "value": "0x73"
    },
    "12484": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "12486": {
      "op": "SHL"
    },
    "12487": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12489": {
      "op": "DUP3"
    },
    "12490": {
      "op": "ADD"
    },
    "12491": {
      "op": "MSTORE"
    },
    "12492": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "12494": {
      "op": "ADD"
    },
    "12495": {
      "fn": "ERC20._burn",
      "offset": [
        9095,
        9162
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x8AC"
    },
    "12498": {
      "op": "JUMP"
    },
    "12499": {
      "fn": "ERC20._burn",
      "offset": [
        9095,
        9162
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "12500": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12502": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12504": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12506": {
      "op": "SHL"
    },
    "12507": {
      "op": "SUB"
    },
    "12508": {
      "fn": "ERC20._burn",
      "offset": [
        9258,
        9276
      ],
      "op": "DUP3",
      "path": "20"
    },
    "12509": {
      "fn": "ERC20._burn",
      "offset": [
        9258,
        9276
      ],
      "op": "AND",
      "path": "20"
    },
    "12510": {
      "fn": "ERC20._burn",
      "offset": [
        9233,
        9255
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "12512": {
      "fn": "ERC20._burn",
      "offset": [
        9258,
        9276
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12513": {
      "fn": "ERC20._burn",
      "offset": [
        9258,
        9276
      ],
      "op": "DUP2",
      "path": "20"
    },
    "12514": {
      "fn": "ERC20._burn",
      "offset": [
        9258,
        9276
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "12515": {
      "fn": "ERC20._burn",
      "offset": [
        9258,
        9276
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "12517": {
      "fn": "ERC20._burn",
      "offset": [
        9258,
        9276
      ],
      "op": "DUP2",
      "path": "20"
    },
    "12518": {
      "fn": "ERC20._burn",
      "offset": [
        9258,
        9276
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12519": {
      "fn": "ERC20._burn",
      "offset": [
        9258,
        9276
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "12520": {
      "fn": "ERC20._burn",
      "offset": [
        9258,
        9276
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "12522": {
      "fn": "ERC20._burn",
      "offset": [
        9258,
        9276
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12523": {
      "fn": "ERC20._burn",
      "offset": [
        9258,
        9276
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "12524": {
      "fn": "ERC20._burn",
      "offset": [
        9258,
        9276
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "12525": {
      "fn": "ERC20._burn",
      "offset": [
        9294,
        9318
      ],
      "op": "DUP2",
      "path": "20",
      "statement": 108
    },
    "12526": {
      "fn": "ERC20._burn",
      "offset": [
        9294,
        9318
      ],
      "op": "DUP2",
      "path": "20"
    },
    "12527": {
      "fn": "ERC20._burn",
      "offset": [
        9294,
        9318
      ],
      "op": "LT",
      "path": "20"
    },
    "12528": {
      "branch": 214,
      "fn": "ERC20._burn",
      "offset": [
        9294,
        9318
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "12529": {
      "fn": "ERC20._burn",
      "offset": [
        9286,
        9357
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3147"
    },
    "12532": {
      "branch": 214,
      "fn": "ERC20._burn",
      "offset": [
        9286,
        9357
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "12533": {
      "fn": "ERC20._burn",
      "offset": [
        9286,
        9357
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "12535": {
      "fn": "ERC20._burn",
      "offset": [
        9286,
        9357
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "12536": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12540": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12542": {
      "op": "SHL"
    },
    "12543": {
      "fn": "ERC20._burn",
      "offset": [
        9286,
        9357
      ],
      "op": "DUP2",
      "path": "20"
    },
    "12544": {
      "fn": "ERC20._burn",
      "offset": [
        9286,
        9357
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "12545": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12547": {
      "fn": "ERC20._burn",
      "offset": [
        9286,
        9357
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "12549": {
      "fn": "ERC20._burn",
      "offset": [
        9286,
        9357
      ],
      "op": "DUP3",
      "path": "20"
    },
    "12550": {
      "fn": "ERC20._burn",
      "offset": [
        9286,
        9357
      ],
      "op": "ADD",
      "path": "20"
    },
    "12551": {
      "op": "MSTORE"
    },
    "12552": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "12554": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12556": {
      "op": "DUP3"
    },
    "12557": {
      "op": "ADD"
    },
    "12558": {
      "op": "MSTORE"
    },
    "12559": {
      "op": "PUSH32",
      "value": "0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
    },
    "12592": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12594": {
      "op": "DUP3"
    },
    "12595": {
      "op": "ADD"
    },
    "12596": {
      "op": "MSTORE"
    },
    "12597": {
      "op": "PUSH2",
      "value": "0x6365"
    },
    "12600": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "12602": {
      "op": "SHL"
    },
    "12603": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12605": {
      "op": "DUP3"
    },
    "12606": {
      "op": "ADD"
    },
    "12607": {
      "op": "MSTORE"
    },
    "12608": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "12610": {
      "op": "ADD"
    },
    "12611": {
      "fn": "ERC20._burn",
      "offset": [
        9286,
        9357
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x8AC"
    },
    "12614": {
      "op": "JUMP"
    },
    "12615": {
      "fn": "ERC20._burn",
      "offset": [
        9286,
        9357
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "12616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12620": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12622": {
      "op": "SHL"
    },
    "12623": {
      "op": "SUB"
    },
    "12624": {
      "fn": "ERC20._burn",
      "offset": [
        9391,
        9409
      ],
      "op": "DUP4",
      "path": "20",
      "statement": 109
    },
    "12625": {
      "fn": "ERC20._burn",
      "offset": [
        9391,
        9409
      ],
      "op": "AND",
      "path": "20"
    },
    "12626": {
      "fn": "ERC20._burn",
      "offset": [
        9391,
        9400
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "12628": {
      "fn": "ERC20._burn",
      "offset": [
        9391,
        9409
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12629": {
      "fn": "ERC20._burn",
      "offset": [
        9391,
        9409
      ],
      "op": "DUP2",
      "path": "20"
    },
    "12630": {
      "fn": "ERC20._burn",
      "offset": [
        9391,
        9409
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "12631": {
      "fn": "ERC20._burn",
      "offset": [
        9391,
        9409
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "12633": {
      "fn": "ERC20._burn",
      "offset": [
        9391,
        9409
      ],
      "op": "DUP2",
      "path": "20"
    },
    "12634": {
      "fn": "ERC20._burn",
      "offset": [
        9391,
        9409
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12635": {
      "fn": "ERC20._burn",
      "offset": [
        9391,
        9409
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "12636": {
      "fn": "ERC20._burn",
      "offset": [
        9391,
        9409
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "12638": {
      "fn": "ERC20._burn",
      "offset": [
        9391,
        9409
      ],
      "op": "DUP2",
      "path": "20"
    },
    "12639": {
      "fn": "ERC20._burn",
      "offset": [
        9391,
        9409
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "12640": {
      "fn": "ERC20._burn",
      "offset": [
        9412,
        9435
      ],
      "op": "DUP4",
      "path": "20"
    },
    "12641": {
      "fn": "ERC20._burn",
      "offset": [
        9412,
        9435
      ],
      "op": "DUP4",
      "path": "20"
    },
    "12642": {
      "fn": "ERC20._burn",
      "offset": [
        9412,
        9435
      ],
      "op": "SUB",
      "path": "20"
    },
    "12643": {
      "fn": "ERC20._burn",
      "offset": [
        9391,
        9435
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12644": {
      "fn": "ERC20._burn",
      "offset": [
        9391,
        9435
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "12645": {
      "fn": "ERC20._burn",
      "offset": [
        9455,
        9467
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 110,
      "value": "0x2"
    },
    "12647": {
      "fn": "ERC20._burn",
      "offset": [
        9455,
        9477
      ],
      "op": "DUP1",
      "path": "20"
    },
    "12648": {
      "fn": "ERC20._burn",
      "offset": [
        9455,
        9477
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "12649": {
      "fn": "ERC20._burn",
      "offset": [
        9429,
        9435
      ],
      "op": "DUP5",
      "path": "20"
    },
    "12650": {
      "fn": "ERC20._burn",
      "offset": [
        9429,
        9435
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "12651": {
      "fn": "ERC20._burn",
      "offset": [
        9391,
        9400
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12652": {
      "fn": "ERC20._burn",
      "offset": [
        9455,
        9477
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3176"
    },
    "12655": {
      "fn": "ERC20._burn",
      "offset": [
        9455,
        9477
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12656": {
      "fn": "ERC20._burn",
      "offset": [
        9429,
        9435
      ],
      "op": "DUP5",
      "path": "20"
    },
    "12657": {
      "fn": "ERC20._burn",
      "offset": [
        9429,
        9435
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12658": {
      "fn": "ERC20._burn",
      "offset": [
        9455,
        9477
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x42F7"
    },
    "12661": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        9455,
        9477
      ],
      "op": "JUMP",
      "path": "20"
    },
    "12662": {
      "fn": "ERC20._burn",
      "offset": [
        9455,
        9477
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "12663": {
      "fn": "ERC20._burn",
      "offset": [
        9455,
        9477
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12664": {
      "fn": "ERC20._burn",
      "offset": [
        9455,
        9477
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "12665": {
      "fn": "ERC20._burn",
      "offset": [
        9455,
        9477
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "12666": {
      "op": "POP"
    },
    "12667": {
      "op": "POP"
    },
    "12668": {
      "fn": "ERC20._burn",
      "offset": [
        9493,
        9530
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 111,
      "value": "0x40"
    },
    "12670": {
      "fn": "ERC20._burn",
      "offset": [
        9493,
        9530
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "12671": {
      "op": "DUP3"
    },
    "12672": {
      "op": "DUP2"
    },
    "12673": {
      "op": "MSTORE"
    },
    "12674": {
      "fn": "ERC20._burn",
      "offset": [
        9519,
        9520
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "12676": {
      "fn": "ERC20._burn",
      "offset": [
        9519,
        9520
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12677": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12679": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12681": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12683": {
      "op": "SHL"
    },
    "12684": {
      "op": "SUB"
    },
    "12685": {
      "fn": "ERC20._burn",
      "offset": [
        9493,
        9530
      ],
      "op": "DUP6",
      "path": "20"
    },
    "12686": {
      "fn": "ERC20._burn",
      "offset": [
        9493,
        9530
      ],
      "op": "AND",
      "path": "20"
    },
    "12687": {
      "fn": "ERC20._burn",
      "offset": [
        9493,
        9530
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12688": {
      "fn": "ERC20._burn",
      "offset": [
        9493,
        9530
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "12721": {
      "fn": "ERC20._burn",
      "offset": [
        9493,
        9530
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12722": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12724": {
      "op": "ADD"
    },
    "12725": {
      "fn": "ERC20._burn",
      "offset": [
        9493,
        9530
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "12727": {
      "fn": "ERC20._burn",
      "offset": [
        9493,
        9530
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "12728": {
      "fn": "ERC20._burn",
      "offset": [
        9493,
        9530
      ],
      "op": "DUP1",
      "path": "20"
    },
    "12729": {
      "fn": "ERC20._burn",
      "offset": [
        9493,
        9530
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "12730": {
      "fn": "ERC20._burn",
      "offset": [
        9493,
        9530
      ],
      "op": "SUB",
      "path": "20"
    },
    "12731": {
      "fn": "ERC20._burn",
      "offset": [
        9493,
        9530
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12732": {
      "fn": "ERC20._burn",
      "offset": [
        9493,
        9530
      ],
      "op": "LOG3",
      "path": "20"
    },
    "12733": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "POP",
      "path": "23"
    },
    "12734": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "POP",
      "path": "23"
    },
    "12735": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "POP",
      "path": "23"
    },
    "12736": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "o",
      "offset": [
        701,
        906
      ],
      "op": "JUMP",
      "path": "23"
    },
    "12737": {
      "fn": "GeVault.removeFromAllTicks",
      "offset": [
        10586,
        10710
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12738": {
      "fn": "GeVault.removeFromAllTicks",
      "offset": [
        10636,
        10642
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "12740": {
      "fn": "GeVault.removeFromAllTicks",
      "offset": [
        10631,
        10702
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12741": {
      "fn": "GeVault.removeFromAllTicks",
      "offset": [
        10652,
        10657
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "12743": {
      "fn": "GeVault.removeFromAllTicks",
      "offset": [
        10652,
        10664
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "12744": {
      "fn": "GeVault.removeFromAllTicks",
      "offset": [
        10648,
        10664
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12745": {
      "fn": "GeVault.removeFromAllTicks",
      "offset": [
        10648,
        10664
      ],
      "op": "LT",
      "path": "0"
    },
    "12746": {
      "fn": "GeVault.removeFromAllTicks",
      "offset": [
        10631,
        10702
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "12747": {
      "fn": "GeVault.removeFromAllTicks",
      "offset": [
        10631,
        10702
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EEB"
    },
    "12750": {
      "fn": "GeVault.removeFromAllTicks",
      "offset": [
        10631,
        10702
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12751": {
      "fn": "GeVault.removeFromAllTicks",
      "offset": [
        10678,
        10695
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 112,
      "value": "0x31D7"
    },
    "12754": {
      "fn": "GeVault.removeFromAllTicks",
      "offset": [
        10693,
        10694
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12755": {
      "fn": "GeVault.removeFromAllTicks",
      "offset": [
        10678,
        10692
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x38CA"
    },
    "12758": {
      "fn": "GeVault.removeFromAllTicks",
      "jump": "i",
      "offset": [
        10678,
        10695
      ],
      "op": "JUMP",
      "path": "0"
    },
    "12759": {
      "fn": "GeVault.removeFromAllTicks",
      "offset": [
        10678,
        10695
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12760": {
      "fn": "GeVault.removeFromAllTicks",
      "offset": [
        10666,
        10669
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 113
    },
    "12761": {
      "fn": "GeVault.removeFromAllTicks",
      "offset": [
        10666,
        10669
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31E1"
    },
    "12764": {
      "fn": "GeVault.removeFromAllTicks",
      "offset": [
        10666,
        10669
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12765": {
      "fn": "GeVault.removeFromAllTicks",
      "offset": [
        10666,
        10669
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x455F"
    },
    "12768": {
      "fn": "GeVault.removeFromAllTicks",
      "jump": "i",
      "offset": [
        10666,
        10669
      ],
      "op": "JUMP",
      "path": "0"
    },
    "12769": {
      "fn": "GeVault.removeFromAllTicks",
      "offset": [
        10666,
        10669
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12770": {
      "fn": "GeVault.removeFromAllTicks",
      "offset": [
        10666,
        10669
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12771": {
      "fn": "GeVault.removeFromAllTicks",
      "offset": [
        10666,
        10669
      ],
      "op": "POP",
      "path": "0"
    },
    "12772": {
      "fn": "GeVault.removeFromAllTicks",
      "offset": [
        10666,
        10669
      ],
      "op": "POP",
      "path": "0"
    },
    "12773": {
      "fn": "GeVault.removeFromAllTicks",
      "offset": [
        10631,
        10702
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31C4"
    },
    "12776": {
      "fn": "GeVault.removeFromAllTicks",
      "offset": [
        10631,
        10702
      ],
      "op": "JUMP",
      "path": "0"
    },
    "12777": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11324,
        12296
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12778": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11364,
        11381
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "12780": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11384,
        11404
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31F3"
    },
    "12783": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11384,
        11402
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2892"
    },
    "12786": {
      "fn": "GeVault.deployAssets",
      "jump": "i",
      "offset": [
        11384,
        11404
      ],
      "op": "JUMP",
      "path": "0"
    },
    "12787": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11384,
        11404
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12788": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11435
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "12790": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11435
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "12791": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11460
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12793": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11460
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "12794": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "12799": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12801": {
      "op": "SHL"
    },
    "12802": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11460
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12803": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11460
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12804": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11454,
        11458
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "12805": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11460
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "12807": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11460
      ],
      "op": "DUP3",
      "path": "0"
    },
    "12808": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11460
      ],
      "op": "ADD",
      "path": "0"
    },
    "12809": {
      "op": "MSTORE"
    },
    "12810": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11364,
        11404
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12811": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11364,
        11404
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "12812": {
      "op": "POP"
    },
    "12813": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11410,
        11426
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "12815": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11410,
        11426
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12816": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12818": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12820": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12822": {
      "op": "SHL"
    },
    "12823": {
      "op": "SUB"
    },
    "12824": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11435
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12825": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11435
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12826": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11435
      ],
      "op": "AND",
      "path": "0"
    },
    "12827": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11435
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12828": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11445
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "12833": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11445
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12834": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12836": {
      "op": "ADD"
    },
    "12837": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11460
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "12839": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11460
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12841": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11460
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "12842": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11460
      ],
      "op": "DUP1",
      "path": "0"
    },
    "12843": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11460
      ],
      "op": "DUP4",
      "path": "0"
    },
    "12844": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11460
      ],
      "op": "SUB",
      "path": "0"
    },
    "12845": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11460
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12846": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11460
      ],
      "op": "DUP7",
      "path": "0"
    },
    "12847": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11460
      ],
      "op": "GAS",
      "path": "0"
    },
    "12848": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11460
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "12849": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11460
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "12850": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11460
      ],
      "op": "DUP1",
      "path": "0"
    },
    "12851": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11460
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "12852": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11460
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3241"
    },
    "12855": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11460
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12856": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11460
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "12857": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11460
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "12859": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11460
      ],
      "op": "DUP1",
      "path": "0"
    },
    "12860": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11460
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "12861": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11460
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "12862": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11460
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "12864": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11460
      ],
      "op": "REVERT",
      "path": "0"
    },
    "12865": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11460
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12866": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11460
      ],
      "op": "POP",
      "path": "0"
    },
    "12867": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11460
      ],
      "op": "POP",
      "path": "0"
    },
    "12868": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11460
      ],
      "op": "POP",
      "path": "0"
    },
    "12869": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11460
      ],
      "op": "POP",
      "path": "0"
    },
    "12870": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11460
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12872": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11460
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "12873": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11460
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "12874": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11460
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "12876": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11460
      ],
      "op": "NOT",
      "path": "0"
    },
    "12877": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11460
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "12879": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11460
      ],
      "op": "DUP3",
      "path": "0"
    },
    "12880": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11460
      ],
      "op": "ADD",
      "path": "0"
    },
    "12881": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11460
      ],
      "op": "AND",
      "path": "0"
    },
    "12882": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11460
      ],
      "op": "DUP3",
      "path": "0"
    },
    "12883": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11460
      ],
      "op": "ADD",
      "path": "0"
    },
    "12884": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11460
      ],
      "op": "DUP1",
      "path": "0"
    },
    "12885": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11460
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12887": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11460
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12888": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11460
      ],
      "op": "POP",
      "path": "0"
    },
    "12889": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11460
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12890": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11460
      ],
      "op": "ADD",
      "path": "0"
    },
    "12891": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11460
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12892": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11460
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3265"
    },
    "12895": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11460
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12896": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11460
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12897": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11460
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x430A"
    },
    "12900": {
      "fn": "GeVault.deployAssets",
      "jump": "i",
      "offset": [
        11429,
        11460
      ],
      "op": "JUMP",
      "path": "0"
    },
    "12901": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11429,
        11460
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12902": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11491
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "12904": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11491
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "12905": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11516
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12907": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11516
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "12908": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "12913": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12915": {
      "op": "SHL"
    },
    "12916": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11516
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12917": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11516
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12918": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11510,
        11514
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "12919": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11516
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "12921": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11516
      ],
      "op": "DUP3",
      "path": "0"
    },
    "12922": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11516
      ],
      "op": "ADD",
      "path": "0"
    },
    "12923": {
      "op": "MSTORE"
    },
    "12924": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11410,
        11460
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12925": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11410,
        11460
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "12926": {
      "op": "POP"
    },
    "12927": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11466,
        11482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "12929": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11466,
        11482
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12930": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12932": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12934": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12936": {
      "op": "SHL"
    },
    "12937": {
      "op": "SUB"
    },
    "12938": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11491
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12939": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11491
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "12940": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11491
      ],
      "op": "AND",
      "path": "0"
    },
    "12941": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11491
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12942": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11501
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "12947": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11501
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "12948": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12950": {
      "op": "ADD"
    },
    "12951": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11516
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "12953": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11516
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12955": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11516
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "12956": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11516
      ],
      "op": "DUP1",
      "path": "0"
    },
    "12957": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11516
      ],
      "op": "DUP4",
      "path": "0"
    },
    "12958": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11516
      ],
      "op": "SUB",
      "path": "0"
    },
    "12959": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11516
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12960": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11516
      ],
      "op": "DUP7",
      "path": "0"
    },
    "12961": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11516
      ],
      "op": "GAS",
      "path": "0"
    },
    "12962": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11516
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "12963": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11516
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "12964": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11516
      ],
      "op": "DUP1",
      "path": "0"
    },
    "12965": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11516
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "12966": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11516
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x32B3"
    },
    "12969": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11516
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12970": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11516
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "12971": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11516
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "12973": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11516
      ],
      "op": "DUP1",
      "path": "0"
    },
    "12974": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11516
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "12975": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11516
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "12976": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11516
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "12978": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11516
      ],
      "op": "REVERT",
      "path": "0"
    },
    "12979": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11516
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12980": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11516
      ],
      "op": "POP",
      "path": "0"
    },
    "12981": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11516
      ],
      "op": "POP",
      "path": "0"
    },
    "12982": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11516
      ],
      "op": "POP",
      "path": "0"
    },
    "12983": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11516
      ],
      "op": "POP",
      "path": "0"
    },
    "12984": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11516
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12986": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11516
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "12987": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11516
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "12988": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11516
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "12990": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11516
      ],
      "op": "NOT",
      "path": "0"
    },
    "12991": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11516
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "12993": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11516
      ],
      "op": "DUP3",
      "path": "0"
    },
    "12994": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11516
      ],
      "op": "ADD",
      "path": "0"
    },
    "12995": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11516
      ],
      "op": "AND",
      "path": "0"
    },
    "12996": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11516
      ],
      "op": "DUP3",
      "path": "0"
    },
    "12997": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11516
      ],
      "op": "ADD",
      "path": "0"
    },
    "12998": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11516
      ],
      "op": "DUP1",
      "path": "0"
    },
    "12999": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11516
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "13001": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11516
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "13002": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11516
      ],
      "op": "POP",
      "path": "0"
    },
    "13003": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11516
      ],
      "op": "DUP2",
      "path": "0"
    },
    "13004": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11516
      ],
      "op": "ADD",
      "path": "0"
    },
    "13005": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11516
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13006": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11516
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x32D7"
    },
    "13009": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11516
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "13010": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11516
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13011": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11516
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x430A"
    },
    "13014": {
      "fn": "GeVault.deployAssets",
      "jump": "i",
      "offset": [
        11485,
        11516
      ],
      "op": "JUMP",
      "path": "0"
    },
    "13015": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11485,
        11516
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "13016": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11466,
        11516
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13017": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11466,
        11516
      ],
      "op": "POP",
      "path": "0"
    },
    "13018": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11565,
        11579
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "13020": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11581,
        11595
      ],
      "op": "DUP1",
      "path": "0"
    },
    "13021": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11604
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "13023": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11605,
        11617
      ],
      "op": "DUP6",
      "path": "0"
    },
    "13024": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11618
      ],
      "op": "DUP2",
      "path": "0"
    },
    "13025": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11618
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "13026": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11618
      ],
      "op": "DUP2",
      "path": "0"
    },
    "13027": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11618
      ],
      "op": "LT",
      "path": "0"
    },
    "13028": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11618
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x32EF"
    },
    "13031": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11618
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13032": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11618
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x32EF"
    },
    "13035": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11618
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4370"
    },
    "13038": {
      "fn": "GeVault.deployAssets",
      "jump": "i",
      "offset": [
        11599,
        11618
      ],
      "op": "JUMP",
      "path": "0"
    },
    "13039": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11618
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "13040": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11618
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "13042": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11618
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "13043": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11618
      ],
      "op": "DUP3",
      "path": "0"
    },
    "13044": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11618
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "13045": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11618
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "13047": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11618
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13048": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11618
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "13049": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11618
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "13050": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11618
      ],
      "op": "ADD",
      "path": "0"
    },
    "13051": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11618
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "13052": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11653
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "13054": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11653
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "13055": {
      "op": "PUSH4",
      "value": "0xD1F7E92B"
    },
    "13060": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13062": {
      "op": "SHL"
    },
    "13063": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11653
      ],
      "op": "DUP2",
      "path": "0"
    },
    "13064": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11653
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "13065": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11648,
        11652
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0xDE0B6B3A7640000"
    },
    "13074": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11653
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "13076": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11653
      ],
      "op": "DUP3",
      "path": "0"
    },
    "13077": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11653
      ],
      "op": "ADD",
      "path": "0"
    },
    "13078": {
      "op": "MSTORE"
    },
    "13079": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13083": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13085": {
      "op": "SHL"
    },
    "13086": {
      "op": "SUB"
    },
    "13087": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11618
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13088": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11618
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "13089": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11618
      ],
      "op": "AND",
      "path": "0"
    },
    "13090": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11618
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13091": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11647
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xD1F7E92B"
    },
    "13096": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11647
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13097": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13099": {
      "op": "ADD"
    },
    "13100": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11653
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "13102": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11653
      ],
      "op": "DUP1",
      "path": "0"
    },
    "13103": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11653
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "13104": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11653
      ],
      "op": "DUP1",
      "path": "0"
    },
    "13105": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11653
      ],
      "op": "DUP4",
      "path": "0"
    },
    "13106": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11653
      ],
      "op": "SUB",
      "path": "0"
    },
    "13107": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11653
      ],
      "op": "DUP2",
      "path": "0"
    },
    "13108": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11653
      ],
      "op": "DUP7",
      "path": "0"
    },
    "13109": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11653
      ],
      "op": "GAS",
      "path": "0"
    },
    "13110": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11653
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "13111": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11653
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "13112": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11653
      ],
      "op": "DUP1",
      "path": "0"
    },
    "13113": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11653
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "13114": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11653
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3347"
    },
    "13117": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11653
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13118": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11653
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "13119": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11653
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "13121": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11653
      ],
      "op": "DUP1",
      "path": "0"
    },
    "13122": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11653
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "13123": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11653
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "13124": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11653
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "13126": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11653
      ],
      "op": "REVERT",
      "path": "0"
    },
    "13127": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11653
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "13128": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11653
      ],
      "op": "POP",
      "path": "0"
    },
    "13129": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11653
      ],
      "op": "POP",
      "path": "0"
    },
    "13130": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11653
      ],
      "op": "POP",
      "path": "0"
    },
    "13131": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11653
      ],
      "op": "POP",
      "path": "0"
    },
    "13132": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11653
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "13134": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11653
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "13135": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11653
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "13136": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11653
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "13138": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11653
      ],
      "op": "NOT",
      "path": "0"
    },
    "13139": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11653
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "13141": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11653
      ],
      "op": "DUP3",
      "path": "0"
    },
    "13142": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11653
      ],
      "op": "ADD",
      "path": "0"
    },
    "13143": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11653
      ],
      "op": "AND",
      "path": "0"
    },
    "13144": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11653
      ],
      "op": "DUP3",
      "path": "0"
    },
    "13145": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11653
      ],
      "op": "ADD",
      "path": "0"
    },
    "13146": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11653
      ],
      "op": "DUP1",
      "path": "0"
    },
    "13147": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11653
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "13149": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11653
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "13150": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11653
      ],
      "op": "POP",
      "path": "0"
    },
    "13151": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11653
      ],
      "op": "DUP2",
      "path": "0"
    },
    "13152": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11653
      ],
      "op": "ADD",
      "path": "0"
    },
    "13153": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11653
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13154": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11653
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x336B"
    },
    "13157": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11653
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "13158": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11653
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13159": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11653
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x453B"
    },
    "13162": {
      "fn": "GeVault.deployAssets",
      "jump": "i",
      "offset": [
        11599,
        11653
      ],
      "op": "JUMP",
      "path": "0"
    },
    "13163": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11599,
        11653
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "13164": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11564,
        11653
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13165": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11564,
        11653
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "13166": {
      "op": "POP"
    },
    "13167": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11564,
        11653
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13168": {
      "op": "POP"
    },
    "13169": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11677,
        11689
      ],
      "op": "DUP5",
      "path": "0"
    },
    "13170": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11659,
        11674
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "13172": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11713,
        11729
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x337E"
    },
    "13175": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11677,
        11689
      ],
      "op": "DUP3",
      "path": "0"
    },
    "13176": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11728,
        11729
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "13178": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11713,
        11729
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4323"
    },
    "13181": {
      "fn": "GeVault.deployAssets",
      "jump": "i",
      "offset": [
        11713,
        11729
      ],
      "op": "JUMP",
      "path": "0"
    },
    "13182": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11713,
        11729
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "13183": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11695,
        11729
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13184": {
      "op": "POP"
    },
    "13185": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11739,
        11752
      ],
      "op": "DUP3",
      "path": "0"
    },
    "13186": {
      "branch": 199,
      "fn": "GeVault.deployAssets",
      "offset": [
        11739,
        11752
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "13187": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11735,
        11830
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3397"
    },
    "13190": {
      "branch": 199,
      "fn": "GeVault.deployAssets",
      "offset": [
        11735,
        11830
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13191": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11774,
        11790
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 114,
      "value": "0x3391"
    },
    "13194": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11774,
        11786
      ],
      "op": "DUP8",
      "path": "0"
    },
    "13195": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11789,
        11790
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "13197": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11774,
        11790
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4323"
    },
    "13200": {
      "fn": "GeVault.deployAssets",
      "jump": "i",
      "offset": [
        11774,
        11790
      ],
      "op": "JUMP",
      "path": "0"
    },
    "13201": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11774,
        11790
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "13202": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11761,
        11790
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "13203": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11761,
        11790
      ],
      "op": "POP",
      "path": "0"
    },
    "13204": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11811,
        11823
      ],
      "op": "DUP7",
      "path": "0",
      "statement": 115
    },
    "13205": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11798,
        11823
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13206": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11798,
        11823
      ],
      "op": "POP",
      "path": "0"
    },
    "13207": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11735,
        11830
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "13208": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11888,
        11903
      ],
      "op": "DUP6",
      "path": "0"
    },
    "13209": {
      "branch": 200,
      "fn": "GeVault.deployAssets",
      "offset": [
        11888,
        11903
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "13210": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11884,
        12037
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x33FD"
    },
    "13213": {
      "branch": 200,
      "fn": "GeVault.deployAssets",
      "offset": [
        11884,
        12037
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13214": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11912,
        11966
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 116,
      "value": "0x33DA"
    },
    "13217": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11928,
        11933
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "13219": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11934,
        11944
      ],
      "op": "DUP4",
      "path": "0"
    },
    "13220": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11928,
        11945
      ],
      "op": "DUP2",
      "path": "0"
    },
    "13221": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11928,
        11945
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "13222": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11928,
        11945
      ],
      "op": "DUP2",
      "path": "0"
    },
    "13223": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11928,
        11945
      ],
      "op": "LT",
      "path": "0"
    },
    "13224": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11928,
        11945
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x33B3"
    },
    "13227": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11928,
        11945
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13228": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11928,
        11945
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x33B3"
    },
    "13231": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11928,
        11945
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4370"
    },
    "13234": {
      "fn": "GeVault.deployAssets",
      "jump": "i",
      "offset": [
        11928,
        11945
      ],
      "op": "JUMP",
      "path": "0"
    },
    "13235": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11928,
        11945
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "13236": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11928,
        11945
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "13238": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11928,
        11945
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "13239": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11928,
        11945
      ],
      "op": "DUP3",
      "path": "0"
    },
    "13240": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11928,
        11945
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "13241": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11928,
        11945
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "13243": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11928,
        11945
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13244": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11928,
        11945
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "13245": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11928,
        11945
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "13246": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11928,
        11945
      ],
      "op": "ADD",
      "path": "0"
    },
    "13247": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11928,
        11945
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "13248": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13252": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13254": {
      "op": "SHL"
    },
    "13255": {
      "op": "SUB"
    },
    "13256": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11928,
        11945
      ],
      "op": "AND",
      "path": "0"
    },
    "13257": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11947,
        11962
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x33D3"
    },
    "13260": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11961,
        11962
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "13262": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11947,
        11958
      ],
      "op": "DUP10",
      "path": "0"
    },
    "13263": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11947,
        11962
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41BF"
    },
    "13266": {
      "fn": "GeVault.deployAssets",
      "jump": "i",
      "offset": [
        11947,
        11962
      ],
      "op": "JUMP",
      "path": "0"
    },
    "13267": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11947,
        11962
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "13268": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11964,
        11965
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "13270": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11912,
        11927
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B52"
    },
    "13273": {
      "fn": "GeVault.deployAssets",
      "jump": "i",
      "offset": [
        11912,
        11966
      ],
      "op": "JUMP",
      "path": "0"
    },
    "13274": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11912,
        11966
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "13275": {
      "op": "POP"
    },
    "13276": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11974,
        12030
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 117,
      "value": "0x33FB"
    },
    "13279": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11990,
        11995
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "13281": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11996,
        12008
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x33EB"
    },
    "13284": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11996,
        12006
      ],
      "op": "DUP5",
      "path": "0"
    },
    "13285": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12007,
        12008
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "13287": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11996,
        12008
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4323"
    },
    "13290": {
      "fn": "GeVault.deployAssets",
      "jump": "i",
      "offset": [
        11996,
        12008
      ],
      "op": "JUMP",
      "path": "0"
    },
    "13291": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11996,
        12008
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "13292": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11990,
        12009
      ],
      "op": "DUP2",
      "path": "0"
    },
    "13293": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11990,
        12009
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "13294": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11990,
        12009
      ],
      "op": "DUP2",
      "path": "0"
    },
    "13295": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11990,
        12009
      ],
      "op": "LT",
      "path": "0"
    },
    "13296": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11990,
        12009
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x33B3"
    },
    "13299": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11990,
        12009
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13300": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11990,
        12009
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x33B3"
    },
    "13303": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11990,
        12009
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4370"
    },
    "13306": {
      "fn": "GeVault.deployAssets",
      "jump": "i",
      "offset": [
        11990,
        12009
      ],
      "op": "JUMP",
      "path": "0"
    },
    "13307": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11974,
        12030
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "13308": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11974,
        12030
      ],
      "op": "POP",
      "path": "0"
    },
    "13309": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11884,
        12037
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "13310": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12046,
        12061
      ],
      "op": "DUP5",
      "path": "0"
    },
    "13311": {
      "branch": 201,
      "fn": "GeVault.deployAssets",
      "offset": [
        12046,
        12061
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "13312": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12042,
        12195
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3461"
    },
    "13315": {
      "branch": 201,
      "fn": "GeVault.deployAssets",
      "offset": [
        12042,
        12195
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13316": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12070,
        12124
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 118,
      "value": "0x343E"
    },
    "13319": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12086,
        12091
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "13321": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12092,
        12102
      ],
      "op": "DUP3",
      "path": "0"
    },
    "13322": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12086,
        12103
      ],
      "op": "DUP2",
      "path": "0"
    },
    "13323": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12086,
        12103
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "13324": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12086,
        12103
      ],
      "op": "DUP2",
      "path": "0"
    },
    "13325": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12086,
        12103
      ],
      "op": "LT",
      "path": "0"
    },
    "13326": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12086,
        12103
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3419"
    },
    "13329": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12086,
        12103
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13330": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12086,
        12103
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3419"
    },
    "13333": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12086,
        12103
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4370"
    },
    "13336": {
      "fn": "GeVault.deployAssets",
      "jump": "i",
      "offset": [
        12086,
        12103
      ],
      "op": "JUMP",
      "path": "0"
    },
    "13337": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12086,
        12103
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "13338": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12086,
        12103
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "13340": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12086,
        12103
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "13341": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12086,
        12103
      ],
      "op": "DUP3",
      "path": "0"
    },
    "13342": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12086,
        12103
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "13343": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12086,
        12103
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "13345": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12086,
        12103
      ],
      "op": "DUP3",
      "path": "0"
    },
    "13346": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12086,
        12103
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "13347": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12086,
        12103
      ],
      "op": "ADD",
      "path": "0"
    },
    "13348": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12086,
        12103
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "13349": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13351": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13353": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13355": {
      "op": "SHL"
    },
    "13356": {
      "op": "SUB"
    },
    "13357": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12086,
        12103
      ],
      "op": "AND",
      "path": "0"
    },
    "13358": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12086,
        12103
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13359": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12108,
        12123
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3439"
    },
    "13362": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12122,
        12123
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "13364": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12108,
        12119
      ],
      "op": "DUP10",
      "path": "0"
    },
    "13365": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12108,
        12123
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41BF"
    },
    "13368": {
      "fn": "GeVault.deployAssets",
      "jump": "i",
      "offset": [
        12108,
        12123
      ],
      "op": "JUMP",
      "path": "0"
    },
    "13369": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12108,
        12123
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "13370": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12070,
        12085
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B52"
    },
    "13373": {
      "fn": "GeVault.deployAssets",
      "jump": "i",
      "offset": [
        12070,
        12124
      ],
      "op": "JUMP",
      "path": "0"
    },
    "13374": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12070,
        12124
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "13375": {
      "op": "POP"
    },
    "13376": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12132,
        12188
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 119,
      "value": "0x345F"
    },
    "13379": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12148,
        12153
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "13381": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12154,
        12166
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x344F"
    },
    "13384": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12154,
        12164
      ],
      "op": "DUP4",
      "path": "0"
    },
    "13385": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12165,
        12166
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "13387": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12154,
        12166
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4323"
    },
    "13390": {
      "fn": "GeVault.deployAssets",
      "jump": "i",
      "offset": [
        12154,
        12166
      ],
      "op": "JUMP",
      "path": "0"
    },
    "13391": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12154,
        12166
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "13392": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12148,
        12167
      ],
      "op": "DUP2",
      "path": "0"
    },
    "13393": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12148,
        12167
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "13394": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12148,
        12167
      ],
      "op": "DUP2",
      "path": "0"
    },
    "13395": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12148,
        12167
      ],
      "op": "LT",
      "path": "0"
    },
    "13396": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12148,
        12167
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3419"
    },
    "13399": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12148,
        12167
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13400": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12148,
        12167
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3419"
    },
    "13403": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12148,
        12167
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4370"
    },
    "13406": {
      "fn": "GeVault.deployAssets",
      "jump": "i",
      "offset": [
        12148,
        12167
      ],
      "op": "JUMP",
      "path": "0"
    },
    "13407": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12132,
        12188
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "13408": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12132,
        12188
      ],
      "op": "POP",
      "path": "0"
    },
    "13409": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12042,
        12195
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "13410": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12225,
        12234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "13412": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12225,
        12234
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "13413": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12209,
        12221
      ],
      "op": "DUP8",
      "path": "0"
    },
    "13414": {
      "branch": 202,
      "fn": "GeVault.deployAssets",
      "offset": [
        12209,
        12234
      ],
      "op": "EQ",
      "path": "0"
    },
    "13415": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12205,
        12260
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3470"
    },
    "13418": {
      "branch": 202,
      "fn": "GeVault.deployAssets",
      "offset": [
        12205,
        12260
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13419": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12236,
        12245
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 120,
      "value": "0x9"
    },
    "13421": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12236,
        12260
      ],
      "op": "DUP8",
      "path": "0"
    },
    "13422": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12236,
        12260
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13423": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12236,
        12260
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "13424": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12205,
        12260
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "13425": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12271,
        12291
      ],
      "op": "PUSH32",
      "path": "0",
      "statement": 121,
      "value": "0x811D4760F1A92875EB76DBD3DC2359544B2F6A000BA5B78784C0B105B3469BD0"
    },
    "13458": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12281,
        12290
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "13460": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12281,
        12290
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "13461": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12271,
        12291
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "13463": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12271,
        12291
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "13464": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12271,
        12291
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34A3"
    },
    "13467": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12271,
        12291
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "13468": {
      "op": "DUP2"
    },
    "13469": {
      "op": "MSTORE"
    },
    "13470": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13472": {
      "op": "ADD"
    },
    "13473": {
      "op": "SWAP1"
    },
    "13474": {
      "op": "JUMP"
    },
    "13475": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12271,
        12291
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "13476": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12271,
        12291
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "13478": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12271,
        12291
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "13479": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12271,
        12291
      ],
      "op": "DUP1",
      "path": "0"
    },
    "13480": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12271,
        12291
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "13481": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12271,
        12291
      ],
      "op": "SUB",
      "path": "0"
    },
    "13482": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12271,
        12291
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13483": {
      "fn": "GeVault.deployAssets",
      "offset": [
        12271,
        12291
      ],
      "op": "LOG1",
      "path": "0"
    },
    "13484": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11357,
        12296
      ],
      "op": "POP",
      "path": "0"
    },
    "13485": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11357,
        12296
      ],
      "op": "POP",
      "path": "0"
    },
    "13486": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11357,
        12296
      ],
      "op": "POP",
      "path": "0"
    },
    "13487": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11357,
        12296
      ],
      "op": "POP",
      "path": "0"
    },
    "13488": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11357,
        12296
      ],
      "op": "POP",
      "path": "0"
    },
    "13489": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11357,
        12296
      ],
      "op": "POP",
      "path": "0"
    },
    "13490": {
      "fn": "GeVault.deployAssets",
      "offset": [
        11357,
        12296
      ],
      "op": "POP",
      "path": "0"
    },
    "13491": {
      "fn": "GeVault.deployAssets",
      "jump": "o",
      "offset": [
        11324,
        12296
      ],
      "op": "JUMP",
      "path": "0"
    },
    "13492": {
      "fn": "ERC20._approve",
      "offset": [
        10019,
        10389
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "13493": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13495": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13497": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13499": {
      "op": "SHL"
    },
    "13500": {
      "op": "SUB"
    },
    "13501": {
      "fn": "ERC20._approve",
      "offset": [
        10150,
        10169
      ],
      "op": "DUP4",
      "path": "20",
      "statement": 122
    },
    "13502": {
      "branch": 215,
      "fn": "ERC20._approve",
      "offset": [
        10150,
        10169
      ],
      "op": "AND",
      "path": "20"
    },
    "13503": {
      "fn": "ERC20._approve",
      "offset": [
        10142,
        10210
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3516"
    },
    "13506": {
      "branch": 215,
      "fn": "ERC20._approve",
      "offset": [
        10142,
        10210
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "13507": {
      "fn": "ERC20._approve",
      "offset": [
        10142,
        10210
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "13509": {
      "fn": "ERC20._approve",
      "offset": [
        10142,
        10210
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "13510": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13514": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13516": {
      "op": "SHL"
    },
    "13517": {
      "fn": "ERC20._approve",
      "offset": [
        10142,
        10210
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13518": {
      "fn": "ERC20._approve",
      "offset": [
        10142,
        10210
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "13519": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13521": {
      "fn": "ERC20._approve",
      "offset": [
        10142,
        10210
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "13523": {
      "fn": "ERC20._approve",
      "offset": [
        10142,
        10210
      ],
      "op": "DUP3",
      "path": "20"
    },
    "13524": {
      "fn": "ERC20._approve",
      "offset": [
        10142,
        10210
      ],
      "op": "ADD",
      "path": "20"
    },
    "13525": {
      "op": "MSTORE"
    },
    "13526": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13528": {
      "op": "DUP1"
    },
    "13529": {
      "op": "DUP3"
    },
    "13530": {
      "op": "ADD"
    },
    "13531": {
      "op": "MSTORE"
    },
    "13532": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "13565": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13567": {
      "op": "DUP3"
    },
    "13568": {
      "op": "ADD"
    },
    "13569": {
      "op": "MSTORE"
    },
    "13570": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "13575": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13577": {
      "op": "SHL"
    },
    "13578": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13580": {
      "op": "DUP3"
    },
    "13581": {
      "op": "ADD"
    },
    "13582": {
      "op": "MSTORE"
    },
    "13583": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "13585": {
      "op": "ADD"
    },
    "13586": {
      "fn": "ERC20._approve",
      "offset": [
        10142,
        10210
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x8AC"
    },
    "13589": {
      "op": "JUMP"
    },
    "13590": {
      "fn": "ERC20._approve",
      "offset": [
        10142,
        10210
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "13591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13595": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13597": {
      "op": "SHL"
    },
    "13598": {
      "op": "SUB"
    },
    "13599": {
      "fn": "ERC20._approve",
      "offset": [
        10228,
        10249
      ],
      "op": "DUP3",
      "path": "20",
      "statement": 123
    },
    "13600": {
      "branch": 216,
      "fn": "ERC20._approve",
      "offset": [
        10228,
        10249
      ],
      "op": "AND",
      "path": "20"
    },
    "13601": {
      "fn": "ERC20._approve",
      "offset": [
        10220,
        10288
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3577"
    },
    "13604": {
      "branch": 216,
      "fn": "ERC20._approve",
      "offset": [
        10220,
        10288
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "13605": {
      "fn": "ERC20._approve",
      "offset": [
        10220,
        10288
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "13607": {
      "fn": "ERC20._approve",
      "offset": [
        10220,
        10288
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "13608": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13612": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13614": {
      "op": "SHL"
    },
    "13615": {
      "fn": "ERC20._approve",
      "offset": [
        10220,
        10288
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13616": {
      "fn": "ERC20._approve",
      "offset": [
        10220,
        10288
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "13617": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13619": {
      "fn": "ERC20._approve",
      "offset": [
        10220,
        10288
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "13621": {
      "fn": "ERC20._approve",
      "offset": [
        10220,
        10288
      ],
      "op": "DUP3",
      "path": "20"
    },
    "13622": {
      "fn": "ERC20._approve",
      "offset": [
        10220,
        10288
      ],
      "op": "ADD",
      "path": "20"
    },
    "13623": {
      "op": "MSTORE"
    },
    "13624": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "13626": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13628": {
      "op": "DUP3"
    },
    "13629": {
      "op": "ADD"
    },
    "13630": {
      "op": "MSTORE"
    },
    "13631": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "13664": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13666": {
      "op": "DUP3"
    },
    "13667": {
      "op": "ADD"
    },
    "13668": {
      "op": "MSTORE"
    },
    "13669": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "13672": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "13674": {
      "op": "SHL"
    },
    "13675": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13677": {
      "op": "DUP3"
    },
    "13678": {
      "op": "ADD"
    },
    "13679": {
      "op": "MSTORE"
    },
    "13680": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "13682": {
      "op": "ADD"
    },
    "13683": {
      "fn": "ERC20._approve",
      "offset": [
        10220,
        10288
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x8AC"
    },
    "13686": {
      "op": "JUMP"
    },
    "13687": {
      "fn": "ERC20._approve",
      "offset": [
        10220,
        10288
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "13688": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13690": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13692": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13694": {
      "op": "SHL"
    },
    "13695": {
      "op": "SUB"
    },
    "13696": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10317
      ],
      "op": "DUP4",
      "path": "20",
      "statement": 124
    },
    "13697": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10317
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13698": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10317
      ],
      "op": "AND",
      "path": "20"
    },
    "13699": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10317
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "13701": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10317
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13702": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10317
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13703": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10317
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "13704": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10310
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "13706": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10317
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "13708": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10317
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "13709": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10317
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13710": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10317
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "13711": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10317
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "13713": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10317
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13714": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10317
      ],
      "op": "DUP4",
      "path": "20"
    },
    "13715": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10317
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "13716": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10326
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "13717": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10326
      ],
      "op": "DUP8",
      "path": "20"
    },
    "13718": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10326
      ],
      "op": "AND",
      "path": "20"
    },
    "13719": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10326
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13720": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10326
      ],
      "op": "DUP5",
      "path": "20"
    },
    "13721": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10326
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "13722": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10326
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "13723": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10326
      ],
      "op": "DUP3",
      "path": "20"
    },
    "13724": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10326
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "13725": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10326
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "13726": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10326
      ],
      "op": "DUP3",
      "path": "20"
    },
    "13727": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10326
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "13728": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10326
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "13729": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10335
      ],
      "op": "DUP6",
      "path": "20"
    },
    "13730": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10335
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "13731": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10335
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "13732": {
      "fn": "ERC20._approve",
      "offset": [
        10350,
        10382
      ],
      "op": "SWAP1",
      "path": "20",
      "statement": 125
    },
    "13733": {
      "fn": "ERC20._approve",
      "offset": [
        10350,
        10382
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "13734": {
      "op": "DUP5"
    },
    "13735": {
      "op": "DUP2"
    },
    "13736": {
      "op": "MSTORE"
    },
    "13737": {
      "fn": "ERC20._approve",
      "offset": [
        10350,
        10382
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "13770": {
      "fn": "ERC20._approve",
      "offset": [
        10350,
        10382
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "13771": {
      "op": "ADD"
    },
    "13772": {
      "fn": "ERC20._approve",
      "offset": [
        10350,
        10382
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "13774": {
      "fn": "ERC20._approve",
      "offset": [
        10350,
        10382
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "13775": {
      "fn": "ERC20._approve",
      "offset": [
        10350,
        10382
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13776": {
      "fn": "ERC20._approve",
      "offset": [
        10350,
        10382
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "13777": {
      "fn": "ERC20._approve",
      "offset": [
        10350,
        10382
      ],
      "op": "SUB",
      "path": "20"
    },
    "13778": {
      "fn": "ERC20._approve",
      "offset": [
        10350,
        10382
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "13779": {
      "fn": "ERC20._approve",
      "offset": [
        10350,
        10382
      ],
      "op": "LOG3",
      "path": "20"
    },
    "13780": {
      "fn": "ERC20._approve",
      "offset": [
        10019,
        10389
      ],
      "op": "POP",
      "path": "20"
    },
    "13781": {
      "fn": "ERC20._approve",
      "offset": [
        10019,
        10389
      ],
      "op": "POP",
      "path": "20"
    },
    "13782": {
      "fn": "ERC20._approve",
      "offset": [
        10019,
        10389
      ],
      "op": "POP",
      "path": "20"
    },
    "13783": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        10019,
        10389
      ],
      "op": "JUMP",
      "path": "20"
    },
    "13784": {
      "fn": "ERC20._transfer",
      "offset": [
        7322,
        8035
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "13785": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13787": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13789": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13791": {
      "op": "SHL"
    },
    "13792": {
      "op": "SUB"
    },
    "13793": {
      "fn": "ERC20._transfer",
      "offset": [
        7457,
        7477
      ],
      "op": "DUP4",
      "path": "20",
      "statement": 126
    },
    "13794": {
      "branch": 217,
      "fn": "ERC20._transfer",
      "offset": [
        7457,
        7477
      ],
      "op": "AND",
      "path": "20"
    },
    "13795": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7519
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x363C"
    },
    "13798": {
      "branch": 217,
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7519
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "13799": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7519
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "13801": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7519
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "13802": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13806": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13808": {
      "op": "SHL"
    },
    "13809": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7519
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13810": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7519
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "13811": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13813": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7519
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "13815": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7519
      ],
      "op": "DUP3",
      "path": "20"
    },
    "13816": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7519
      ],
      "op": "ADD",
      "path": "20"
    },
    "13817": {
      "op": "MSTORE"
    },
    "13818": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "13820": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13822": {
      "op": "DUP3"
    },
    "13823": {
      "op": "ADD"
    },
    "13824": {
      "op": "MSTORE"
    },
    "13825": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "13858": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13860": {
      "op": "DUP3"
    },
    "13861": {
      "op": "ADD"
    },
    "13862": {
      "op": "MSTORE"
    },
    "13863": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "13869": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "13871": {
      "op": "SHL"
    },
    "13872": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13874": {
      "op": "DUP3"
    },
    "13875": {
      "op": "ADD"
    },
    "13876": {
      "op": "MSTORE"
    },
    "13877": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "13879": {
      "op": "ADD"
    },
    "13880": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7519
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x8AC"
    },
    "13883": {
      "op": "JUMP"
    },
    "13884": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7519
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "13885": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13887": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13889": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13891": {
      "op": "SHL"
    },
    "13892": {
      "op": "SUB"
    },
    "13893": {
      "fn": "ERC20._transfer",
      "offset": [
        7537,
        7560
      ],
      "op": "DUP3",
      "path": "20",
      "statement": 127
    },
    "13894": {
      "branch": 218,
      "fn": "ERC20._transfer",
      "offset": [
        7537,
        7560
      ],
      "op": "AND",
      "path": "20"
    },
    "13895": {
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7600
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x369E"
    },
    "13898": {
      "branch": 218,
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7600
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "13899": {
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7600
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "13901": {
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7600
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "13902": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13906": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13908": {
      "op": "SHL"
    },
    "13909": {
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7600
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13910": {
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7600
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "13911": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13913": {
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7600
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "13915": {
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7600
      ],
      "op": "DUP3",
      "path": "20"
    },
    "13916": {
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7600
      ],
      "op": "ADD",
      "path": "20"
    },
    "13917": {
      "op": "MSTORE"
    },
    "13918": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "13920": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13922": {
      "op": "DUP3"
    },
    "13923": {
      "op": "ADD"
    },
    "13924": {
      "op": "MSTORE"
    },
    "13925": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "13958": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13960": {
      "op": "DUP3"
    },
    "13961": {
      "op": "ADD"
    },
    "13962": {
      "op": "MSTORE"
    },
    "13963": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "13967": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "13969": {
      "op": "SHL"
    },
    "13970": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13972": {
      "op": "DUP3"
    },
    "13973": {
      "op": "ADD"
    },
    "13974": {
      "op": "MSTORE"
    },
    "13975": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "13977": {
      "op": "ADD"
    },
    "13978": {
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7600
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x8AC"
    },
    "13981": {
      "op": "JUMP"
    },
    "13982": {
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7600
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "13983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13987": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13989": {
      "op": "SHL"
    },
    "13990": {
      "op": "SUB"
    },
    "13991": {
      "fn": "ERC20._transfer",
      "offset": [
        7693,
        7710
      ],
      "op": "DUP4",
      "path": "20"
    },
    "13992": {
      "fn": "ERC20._transfer",
      "offset": [
        7693,
        7710
      ],
      "op": "AND",
      "path": "20"
    },
    "13993": {
      "fn": "ERC20._transfer",
      "offset": [
        7669,
        7690
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "13995": {
      "fn": "ERC20._transfer",
      "offset": [
        7693,
        7710
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "13996": {
      "fn": "ERC20._transfer",
      "offset": [
        7693,
        7710
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13997": {
      "fn": "ERC20._transfer",
      "offset": [
        7693,
        7710
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "13998": {
      "fn": "ERC20._transfer",
      "offset": [
        7693,
        7710
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "14000": {
      "fn": "ERC20._transfer",
      "offset": [
        7693,
        7710
      ],
      "op": "DUP2",
      "path": "20"
    },
    "14001": {
      "fn": "ERC20._transfer",
      "offset": [
        7693,
        7710
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "14002": {
      "fn": "ERC20._transfer",
      "offset": [
        7693,
        7710
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "14003": {
      "fn": "ERC20._transfer",
      "offset": [
        7693,
        7710
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "14005": {
      "fn": "ERC20._transfer",
      "offset": [
        7693,
        7710
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "14006": {
      "fn": "ERC20._transfer",
      "offset": [
        7693,
        7710
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "14007": {
      "fn": "ERC20._transfer",
      "offset": [
        7693,
        7710
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "14008": {
      "fn": "ERC20._transfer",
      "offset": [
        7728,
        7751
      ],
      "op": "DUP2",
      "path": "20",
      "statement": 128
    },
    "14009": {
      "fn": "ERC20._transfer",
      "offset": [
        7728,
        7751
      ],
      "op": "DUP2",
      "path": "20"
    },
    "14010": {
      "fn": "ERC20._transfer",
      "offset": [
        7728,
        7751
      ],
      "op": "LT",
      "path": "20"
    },
    "14011": {
      "branch": 219,
      "fn": "ERC20._transfer",
      "offset": [
        7728,
        7751
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "14012": {
      "fn": "ERC20._transfer",
      "offset": [
        7720,
        7794
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3716"
    },
    "14015": {
      "branch": 219,
      "fn": "ERC20._transfer",
      "offset": [
        7720,
        7794
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "14016": {
      "fn": "ERC20._transfer",
      "offset": [
        7720,
        7794
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "14018": {
      "fn": "ERC20._transfer",
      "offset": [
        7720,
        7794
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "14019": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14023": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14025": {
      "op": "SHL"
    },
    "14026": {
      "fn": "ERC20._transfer",
      "offset": [
        7720,
        7794
      ],
      "op": "DUP2",
      "path": "20"
    },
    "14027": {
      "fn": "ERC20._transfer",
      "offset": [
        7720,
        7794
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "14028": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14030": {
      "fn": "ERC20._transfer",
      "offset": [
        7720,
        7794
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "14032": {
      "fn": "ERC20._transfer",
      "offset": [
        7720,
        7794
      ],
      "op": "DUP3",
      "path": "20"
    },
    "14033": {
      "fn": "ERC20._transfer",
      "offset": [
        7720,
        7794
      ],
      "op": "ADD",
      "path": "20"
    },
    "14034": {
      "op": "MSTORE"
    },
    "14035": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "14037": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14039": {
      "op": "DUP3"
    },
    "14040": {
      "op": "ADD"
    },
    "14041": {
      "op": "MSTORE"
    },
    "14042": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "14075": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14077": {
      "op": "DUP3"
    },
    "14078": {
      "op": "ADD"
    },
    "14079": {
      "op": "MSTORE"
    },
    "14080": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "14087": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "14089": {
      "op": "SHL"
    },
    "14090": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14092": {
      "op": "DUP3"
    },
    "14093": {
      "op": "ADD"
    },
    "14094": {
      "op": "MSTORE"
    },
    "14095": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "14097": {
      "op": "ADD"
    },
    "14098": {
      "fn": "ERC20._transfer",
      "offset": [
        7720,
        7794
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x8AC"
    },
    "14101": {
      "op": "JUMP"
    },
    "14102": {
      "fn": "ERC20._transfer",
      "offset": [
        7720,
        7794
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "14103": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14107": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14109": {
      "op": "SHL"
    },
    "14110": {
      "op": "SUB"
    },
    "14111": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7845
      ],
      "op": "DUP1",
      "path": "20",
      "statement": 129
    },
    "14112": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7845
      ],
      "op": "DUP6",
      "path": "20"
    },
    "14113": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7845
      ],
      "op": "AND",
      "path": "20"
    },
    "14114": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7837
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "14116": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7845
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "14117": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7845
      ],
      "op": "DUP2",
      "path": "20"
    },
    "14118": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7845
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "14119": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7845
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "14121": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7845
      ],
      "op": "DUP2",
      "path": "20"
    },
    "14122": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7845
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "14123": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7845
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "14124": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7845
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "14126": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7845
      ],
      "op": "DUP1",
      "path": "20"
    },
    "14127": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7845
      ],
      "op": "DUP3",
      "path": "20"
    },
    "14128": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7845
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "14129": {
      "fn": "ERC20._transfer",
      "offset": [
        7848,
        7870
      ],
      "op": "DUP6",
      "path": "20"
    },
    "14130": {
      "fn": "ERC20._transfer",
      "offset": [
        7848,
        7870
      ],
      "op": "DUP6",
      "path": "20"
    },
    "14131": {
      "fn": "ERC20._transfer",
      "offset": [
        7848,
        7870
      ],
      "op": "SUB",
      "path": "20"
    },
    "14132": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7870
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "14133": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7870
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "14134": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7910
      ],
      "op": "SWAP2",
      "path": "20",
      "statement": 130
    },
    "14135": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7910
      ],
      "op": "DUP6",
      "path": "20"
    },
    "14136": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7910
      ],
      "op": "AND",
      "path": "20"
    },
    "14137": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7910
      ],
      "op": "DUP2",
      "path": "20"
    },
    "14138": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7910
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "14139": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7910
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "14140": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7910
      ],
      "op": "DUP2",
      "path": "20"
    },
    "14141": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7910
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "14142": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7920
      ],
      "op": "DUP1",
      "path": "20"
    },
    "14143": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7920
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "14144": {
      "fn": "ERC20._transfer",
      "offset": [
        7864,
        7870
      ],
      "op": "DUP5",
      "path": "20"
    },
    "14145": {
      "fn": "ERC20._transfer",
      "offset": [
        7864,
        7870
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "14146": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7837
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "14147": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7920
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x374D"
    },
    "14150": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7920
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "14151": {
      "fn": "ERC20._transfer",
      "offset": [
        7864,
        7870
      ],
      "op": "DUP5",
      "path": "20"
    },
    "14152": {
      "fn": "ERC20._transfer",
      "offset": [
        7864,
        7870
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "14153": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7920
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4323"
    },
    "14156": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7890,
        7920
      ],
      "op": "JUMP",
      "path": "20"
    },
    "14157": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7920
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "14158": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7920
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "14159": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7920
      ],
      "op": "POP",
      "path": "20"
    },
    "14160": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7920
      ],
      "op": "POP",
      "path": "20"
    },
    "14161": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7920
      ],
      "op": "DUP2",
      "path": "20"
    },
    "14162": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7920
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "14163": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7920
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "14164": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7920
      ],
      "op": "POP",
      "path": "20"
    },
    "14165": {
      "fn": "ERC20._transfer",
      "offset": [
        7953,
        7962
      ],
      "op": "DUP3",
      "path": "20",
      "statement": 131
    },
    "14166": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14170": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14172": {
      "op": "SHL"
    },
    "14173": {
      "op": "SUB"
    },
    "14174": {
      "fn": "ERC20._transfer",
      "offset": [
        7936,
        7971
      ],
      "op": "AND",
      "path": "20"
    },
    "14175": {
      "fn": "ERC20._transfer",
      "offset": [
        7945,
        7951
      ],
      "op": "DUP5",
      "path": "20"
    },
    "14176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14180": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14182": {
      "op": "SHL"
    },
    "14183": {
      "op": "SUB"
    },
    "14184": {
      "fn": "ERC20._transfer",
      "offset": [
        7936,
        7971
      ],
      "op": "AND",
      "path": "20"
    },
    "14185": {
      "fn": "ERC20._transfer",
      "offset": [
        7936,
        7971
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "14218": {
      "fn": "ERC20._transfer",
      "offset": [
        7964,
        7970
      ],
      "op": "DUP5",
      "path": "20"
    },
    "14219": {
      "fn": "ERC20._transfer",
      "offset": [
        7936,
        7971
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "14221": {
      "fn": "ERC20._transfer",
      "offset": [
        7936,
        7971
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "14222": {
      "fn": "ERC20._transfer",
      "offset": [
        7936,
        7971
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3799"
    },
    "14225": {
      "fn": "ERC20._transfer",
      "offset": [
        7936,
        7971
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "14226": {
      "op": "DUP2"
    },
    "14227": {
      "op": "MSTORE"
    },
    "14228": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14230": {
      "op": "ADD"
    },
    "14231": {
      "op": "SWAP1"
    },
    "14232": {
      "op": "JUMP"
    },
    "14233": {
      "fn": "ERC20._transfer",
      "offset": [
        7936,
        7971
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "14234": {
      "fn": "ERC20._transfer",
      "offset": [
        7936,
        7971
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "14236": {
      "fn": "ERC20._transfer",
      "offset": [
        7936,
        7971
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "14237": {
      "fn": "ERC20._transfer",
      "offset": [
        7936,
        7971
      ],
      "op": "DUP1",
      "path": "20"
    },
    "14238": {
      "fn": "ERC20._transfer",
      "offset": [
        7936,
        7971
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "14239": {
      "fn": "ERC20._transfer",
      "offset": [
        7936,
        7971
      ],
      "op": "SUB",
      "path": "20"
    },
    "14240": {
      "fn": "ERC20._transfer",
      "offset": [
        7936,
        7971
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "14241": {
      "fn": "ERC20._transfer",
      "offset": [
        7936,
        7971
      ],
      "op": "LOG3",
      "path": "20"
    },
    "14242": {
      "fn": "ERC20._transfer",
      "offset": [
        7982,
        8028
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 132,
      "value": "0x2F59"
    },
    "14245": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "JUMP",
      "path": "23"
    },
    "14246": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "14247": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x5"
    },
    "14249": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "12"
    },
    "14250": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "14251": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14253": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14255": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14257": {
      "op": "SHL"
    },
    "14258": {
      "op": "SUB"
    },
    "14259": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "12",
      "statement": 133
    },
    "14260": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "12"
    },
    "14261": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "12"
    },
    "14262": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14264": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14266": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14268": {
      "op": "SHL"
    },
    "14269": {
      "op": "SUB"
    },
    "14270": {
      "op": "NOT"
    },
    "14271": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "12"
    },
    "14272": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "12"
    },
    "14273": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "12"
    },
    "14274": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "12"
    },
    "14275": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "14276": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "14277": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "14278": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 134,
      "value": "0x40"
    },
    "14280": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "14281": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "14282": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "12"
    },
    "14283": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "14284": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "14285": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP3",
      "path": "12"
    },
    "14286": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "14287": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "14320": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "14321": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "14323": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "14324": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "12"
    },
    "14325": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "12"
    },
    "14326": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "12"
    },
    "14327": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "12"
    },
    "14328": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3207,
        3913
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "14329": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3649
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "14331": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x384D"
    },
    "14334": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3680,
        3684
      ],
      "op": "DUP3",
      "path": "23"
    },
    "14335": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "14337": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "14338": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP1",
      "path": "23"
    },
    "14339": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "14341": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "ADD",
      "path": "23"
    },
    "14342": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "14344": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "14345": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP1",
      "path": "23"
    },
    "14346": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "14348": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP2",
      "path": "23"
    },
    "14349": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "14350": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "14352": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "ADD",
      "path": "23"
    },
    "14353": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "14386": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP2",
      "path": "23"
    },
    "14387": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "14388": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "POP",
      "path": "23"
    },
    "14389": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3660,
        3665
      ],
      "op": "DUP6",
      "path": "23"
    },
    "14390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14394": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14396": {
      "op": "SHL"
    },
    "14397": {
      "op": "SUB"
    },
    "14398": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "AND",
      "path": "23"
    },
    "14399": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3CFF"
    },
    "14402": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "14403": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "14404": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "14405": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "14406": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xFFFFFFFF"
    },
    "14411": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "AND",
      "path": "23"
    },
    "14412": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3652,
        3721
      ],
      "op": "JUMP",
      "path": "23"
    },
    "14413": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "14414": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3752
      ],
      "op": "DUP1",
      "path": "23"
    },
    "14415": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3752
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "14416": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3721
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "14417": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3721
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "14418": {
      "op": "POP"
    },
    "14419": {
      "branch": 221,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3756
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "14420": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3731,
        3907
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2F8F"
    },
    "14423": {
      "branch": 221,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3731,
        3907
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "14424": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3830,
        3840
      ],
      "op": "DUP1",
      "path": "23",
      "statement": 135
    },
    "14425": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "DUP1",
      "path": "23"
    },
    "14426": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "14428": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "ADD",
      "path": "23"
    },
    "14429": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "14430": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "14431": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "DUP2",
      "path": "23"
    },
    "14432": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "ADD",
      "path": "23"
    },
    "14433": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "14434": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x386B"
    },
    "14437": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "14438": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "14439": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4708"
    },
    "14442": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3819,
        3849
      ],
      "op": "JUMP",
      "path": "23"
    },
    "14443": {
      "branch": 222,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "14444": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2F8F"
    },
    "14447": {
      "branch": 222,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "14448": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "14450": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "14451": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14455": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14457": {
      "op": "SHL"
    },
    "14458": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "DUP2",
      "path": "23"
    },
    "14459": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "14460": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14462": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "14464": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "DUP3",
      "path": "23"
    },
    "14465": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "ADD",
      "path": "23"
    },
    "14466": {
      "op": "MSTORE"
    },
    "14467": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "14469": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14471": {
      "op": "DUP3"
    },
    "14472": {
      "op": "ADD"
    },
    "14473": {
      "op": "MSTORE"
    },
    "14474": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "14507": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14509": {
      "op": "DUP3"
    },
    "14510": {
      "op": "ADD"
    },
    "14511": {
      "op": "MSTORE"
    },
    "14512": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "14523": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "14525": {
      "op": "SHL"
    },
    "14526": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14528": {
      "op": "DUP3"
    },
    "14529": {
      "op": "ADD"
    },
    "14530": {
      "op": "MSTORE"
    },
    "14531": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "14533": {
      "op": "ADD"
    },
    "14534": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x8AC"
    },
    "14537": {
      "op": "JUMP"
    },
    "14538": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10750,
        11300
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "14539": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10801,
        10820
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14541": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10823,
        10828
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "14543": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10829,
        10834
      ],
      "op": "DUP3",
      "path": "0"
    },
    "14544": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10823,
        10835
      ],
      "op": "DUP2",
      "path": "0"
    },
    "14545": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10823,
        10835
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "14546": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10823,
        10835
      ],
      "op": "DUP2",
      "path": "0"
    },
    "14547": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10823,
        10835
      ],
      "op": "LT",
      "path": "0"
    },
    "14548": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10823,
        10835
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x38DF"
    },
    "14551": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10823,
        10835
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "14552": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10823,
        10835
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x38DF"
    },
    "14555": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10823,
        10835
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4370"
    },
    "14558": {
      "fn": "GeVault.removeFromTick",
      "jump": "i",
      "offset": [
        10823,
        10835
      ],
      "op": "JUMP",
      "path": "0"
    },
    "14559": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10823,
        10835
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "14560": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10823,
        10835
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14562": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10823,
        10835
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "14563": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10823,
        10835
      ],
      "op": "DUP3",
      "path": "0"
    },
    "14564": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10823,
        10835
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "14565": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10823,
        10835
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "14567": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10823,
        10835
      ],
      "op": "DUP3",
      "path": "0"
    },
    "14568": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10823,
        10835
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "14569": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10823,
        10835
      ],
      "op": "ADD",
      "path": "0"
    },
    "14570": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10823,
        10835
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "14571": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10876
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x10"
    },
    "14573": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10876
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "14574": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "14576": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10904
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "14577": {
      "op": "PUSH4",
      "value": "0x35EA6A75"
    },
    "14582": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14584": {
      "op": "SHL"
    },
    "14585": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10904
      ],
      "op": "DUP2",
      "path": "0"
    },
    "14586": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10904
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "14587": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14591": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14593": {
      "op": "SHL"
    },
    "14594": {
      "op": "SUB"
    },
    "14595": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10823,
        10835
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "14596": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10823,
        10835
      ],
      "op": "DUP4",
      "path": "0"
    },
    "14597": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10823,
        10835
      ],
      "op": "AND",
      "path": "0"
    },
    "14598": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "14600": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10904
      ],
      "op": "DUP3",
      "path": "0"
    },
    "14601": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10904
      ],
      "op": "ADD",
      "path": "0"
    },
    "14602": {
      "op": "DUP2"
    },
    "14603": {
      "op": "SWAP1"
    },
    "14604": {
      "op": "MSTORE"
    },
    "14605": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10823,
        10835
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "14606": {
      "op": "POP"
    },
    "14607": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10876
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "14608": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10876
      ],
      "op": "AND",
      "path": "0"
    },
    "14609": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10876
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "14610": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10891
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x35EA6A75"
    },
    "14615": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10891
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "14616": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14618": {
      "op": "ADD"
    },
    "14619": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10904
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "14622": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "14624": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10904
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "14625": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10904
      ],
      "op": "DUP1",
      "path": "0"
    },
    "14626": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10904
      ],
      "op": "DUP4",
      "path": "0"
    },
    "14627": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10904
      ],
      "op": "SUB",
      "path": "0"
    },
    "14628": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10904
      ],
      "op": "DUP2",
      "path": "0"
    },
    "14629": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10904
      ],
      "op": "DUP7",
      "path": "0"
    },
    "14630": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10904
      ],
      "op": "GAS",
      "path": "0"
    },
    "14631": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10904
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "14632": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10904
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "14633": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10904
      ],
      "op": "DUP1",
      "path": "0"
    },
    "14634": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10904
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "14635": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10904
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3938"
    },
    "14638": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10904
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "14639": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10904
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "14640": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14642": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10904
      ],
      "op": "DUP1",
      "path": "0"
    },
    "14643": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10904
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "14644": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10904
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "14645": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14647": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10904
      ],
      "op": "REVERT",
      "path": "0"
    },
    "14648": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10904
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "14649": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10904
      ],
      "op": "POP",
      "path": "0"
    },
    "14650": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10904
      ],
      "op": "POP",
      "path": "0"
    },
    "14651": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10904
      ],
      "op": "POP",
      "path": "0"
    },
    "14652": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10904
      ],
      "op": "POP",
      "path": "0"
    },
    "14653": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "14655": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10904
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "14656": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10904
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "14657": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "14659": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10904
      ],
      "op": "NOT",
      "path": "0"
    },
    "14660": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "14662": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10904
      ],
      "op": "DUP3",
      "path": "0"
    },
    "14663": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10904
      ],
      "op": "ADD",
      "path": "0"
    },
    "14664": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10904
      ],
      "op": "AND",
      "path": "0"
    },
    "14665": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10904
      ],
      "op": "DUP3",
      "path": "0"
    },
    "14666": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10904
      ],
      "op": "ADD",
      "path": "0"
    },
    "14667": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10904
      ],
      "op": "DUP1",
      "path": "0"
    },
    "14668": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "14670": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10904
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "14671": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10904
      ],
      "op": "POP",
      "path": "0"
    },
    "14672": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10904
      ],
      "op": "DUP2",
      "path": "0"
    },
    "14673": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10904
      ],
      "op": "ADD",
      "path": "0"
    },
    "14674": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10904
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "14675": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10904
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x395C"
    },
    "14678": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10904
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "14679": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10904
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "14680": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10904
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x444E"
    },
    "14683": {
      "fn": "GeVault.removeFromTick",
      "jump": "i",
      "offset": [
        10865,
        10904
      ],
      "op": "JUMP",
      "path": "0"
    },
    "14684": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10904
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "14685": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10918
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "14687": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10918
      ],
      "op": "ADD",
      "path": "0"
    },
    "14688": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10918
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "14689": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10936,
        10981
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "14691": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10936,
        10981
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "14692": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "14697": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14699": {
      "op": "SHL"
    },
    "14700": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10936,
        10981
      ],
      "op": "DUP2",
      "path": "0"
    },
    "14701": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10936,
        10981
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "14702": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10975,
        10979
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "14703": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10936,
        10981
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "14705": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10936,
        10981
      ],
      "op": "DUP3",
      "path": "0"
    },
    "14706": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10936,
        10981
      ],
      "op": "ADD",
      "path": "0"
    },
    "14707": {
      "op": "MSTORE"
    },
    "14708": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10918
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "14709": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10865,
        10918
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "14710": {
      "op": "POP"
    },
    "14711": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10924,
        10933
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14713": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10924,
        10933
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "14714": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14716": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14718": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14720": {
      "op": "SHL"
    },
    "14721": {
      "op": "SUB"
    },
    "14722": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10936,
        10966
      ],
      "op": "DUP4",
      "path": "0"
    },
    "14723": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10936,
        10966
      ],
      "op": "AND",
      "path": "0"
    },
    "14724": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10936,
        10966
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "14725": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10936,
        10966
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "14730": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10936,
        10966
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "14731": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14733": {
      "op": "ADD"
    },
    "14734": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10936,
        10981
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "14736": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10936,
        10981
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "14738": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10936,
        10981
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "14739": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10936,
        10981
      ],
      "op": "DUP1",
      "path": "0"
    },
    "14740": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10936,
        10981
      ],
      "op": "DUP4",
      "path": "0"
    },
    "14741": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10936,
        10981
      ],
      "op": "SUB",
      "path": "0"
    },
    "14742": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10936,
        10981
      ],
      "op": "DUP2",
      "path": "0"
    },
    "14743": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10936,
        10981
      ],
      "op": "DUP7",
      "path": "0"
    },
    "14744": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10936,
        10981
      ],
      "op": "GAS",
      "path": "0"
    },
    "14745": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10936,
        10981
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "14746": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10936,
        10981
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "14747": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10936,
        10981
      ],
      "op": "DUP1",
      "path": "0"
    },
    "14748": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10936,
        10981
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "14749": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10936,
        10981
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x39AA"
    },
    "14752": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10936,
        10981
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "14753": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10936,
        10981
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "14754": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10936,
        10981
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14756": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10936,
        10981
      ],
      "op": "DUP1",
      "path": "0"
    },
    "14757": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10936,
        10981
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "14758": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10936,
        10981
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "14759": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10936,
        10981
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14761": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10936,
        10981
      ],
      "op": "REVERT",
      "path": "0"
    },
    "14762": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10936,
        10981
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "14763": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10936,
        10981
      ],
      "op": "POP",
      "path": "0"
    },
    "14764": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10936,
        10981
      ],
      "op": "POP",
      "path": "0"
    },
    "14765": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10936,
        10981
      ],
      "op": "POP",
      "path": "0"
    },
    "14766": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10936,
        10981
      ],
      "op": "POP",
      "path": "0"
    },
    "14767": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10936,
        10981
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "14769": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10936,
        10981
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "14770": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10936,
        10981
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "14771": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10936,
        10981
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "14773": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10936,
        10981
      ],
      "op": "NOT",
      "path": "0"
    },
    "14774": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10936,
        10981
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "14776": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10936,
        10981
      ],
      "op": "DUP3",
      "path": "0"
    },
    "14777": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10936,
        10981
      ],
      "op": "ADD",
      "path": "0"
    },
    "14778": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10936,
        10981
      ],
      "op": "AND",
      "path": "0"
    },
    "14779": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10936,
        10981
      ],
      "op": "DUP3",
      "path": "0"
    },
    "14780": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10936,
        10981
      ],
      "op": "ADD",
      "path": "0"
    },
    "14781": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10936,
        10981
      ],
      "op": "DUP1",
      "path": "0"
    },
    "14782": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10936,
        10981
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "14784": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10936,
        10981
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "14785": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10936,
        10981
      ],
      "op": "POP",
      "path": "0"
    },
    "14786": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10936,
        10981
      ],
      "op": "DUP2",
      "path": "0"
    },
    "14787": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10936,
        10981
      ],
      "op": "ADD",
      "path": "0"
    },
    "14788": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10936,
        10981
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "14789": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10936,
        10981
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x39CE"
    },
    "14792": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10936,
        10981
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "14793": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10936,
        10981
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "14794": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10936,
        10981
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x430A"
    },
    "14797": {
      "fn": "GeVault.removeFromTick",
      "jump": "i",
      "offset": [
        10936,
        10981
      ],
      "op": "JUMP",
      "path": "0"
    },
    "14798": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10936,
        10981
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "14799": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10999,
        11026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "14801": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10999,
        11026
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "14802": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "14807": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14809": {
      "op": "SHL"
    },
    "14810": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10999,
        11026
      ],
      "op": "DUP2",
      "path": "0"
    },
    "14811": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10999,
        11026
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "14812": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14814": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14816": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14818": {
      "op": "SHL"
    },
    "14819": {
      "op": "SUB"
    },
    "14820": {
      "op": "DUP5"
    },
    "14821": {
      "op": "DUP2"
    },
    "14822": {
      "op": "AND"
    },
    "14823": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10999,
        11026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "14825": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10999,
        11026
      ],
      "op": "DUP4",
      "path": "0"
    },
    "14826": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10999,
        11026
      ],
      "op": "ADD",
      "path": "0"
    },
    "14827": {
      "op": "MSTORE"
    },
    "14828": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10924,
        10981
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "14829": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10924,
        10981
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "14830": {
      "op": "POP"
    },
    "14831": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10987,
        10996
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14833": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10987,
        10996
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "14834": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10999,
        11011
      ],
      "op": "DUP6",
      "path": "0"
    },
    "14835": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10999,
        11011
      ],
      "op": "AND",
      "path": "0"
    },
    "14836": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10999,
        11011
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "14837": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10999,
        11011
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "14842": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10999,
        11011
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "14843": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14845": {
      "op": "ADD"
    },
    "14846": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10999,
        11026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "14848": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10999,
        11026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "14850": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10999,
        11026
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "14851": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10999,
        11026
      ],
      "op": "DUP1",
      "path": "0"
    },
    "14852": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10999,
        11026
      ],
      "op": "DUP4",
      "path": "0"
    },
    "14853": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10999,
        11026
      ],
      "op": "SUB",
      "path": "0"
    },
    "14854": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10999,
        11026
      ],
      "op": "DUP2",
      "path": "0"
    },
    "14855": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10999,
        11026
      ],
      "op": "DUP7",
      "path": "0"
    },
    "14856": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10999,
        11026
      ],
      "op": "GAS",
      "path": "0"
    },
    "14857": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10999,
        11026
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "14858": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10999,
        11026
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "14859": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10999,
        11026
      ],
      "op": "DUP1",
      "path": "0"
    },
    "14860": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10999,
        11026
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "14861": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10999,
        11026
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A1A"
    },
    "14864": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10999,
        11026
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "14865": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10999,
        11026
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "14866": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10999,
        11026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14868": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10999,
        11026
      ],
      "op": "DUP1",
      "path": "0"
    },
    "14869": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10999,
        11026
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "14870": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10999,
        11026
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "14871": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10999,
        11026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14873": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10999,
        11026
      ],
      "op": "REVERT",
      "path": "0"
    },
    "14874": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10999,
        11026
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "14875": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10999,
        11026
      ],
      "op": "POP",
      "path": "0"
    },
    "14876": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10999,
        11026
      ],
      "op": "POP",
      "path": "0"
    },
    "14877": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10999,
        11026
      ],
      "op": "POP",
      "path": "0"
    },
    "14878": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10999,
        11026
      ],
      "op": "POP",
      "path": "0"
    },
    "14879": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10999,
        11026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "14881": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10999,
        11026
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "14882": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10999,
        11026
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "14883": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10999,
        11026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "14885": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10999,
        11026
      ],
      "op": "NOT",
      "path": "0"
    },
    "14886": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10999,
        11026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "14888": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10999,
        11026
      ],
      "op": "DUP3",
      "path": "0"
    },
    "14889": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10999,
        11026
      ],
      "op": "ADD",
      "path": "0"
    },
    "14890": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10999,
        11026
      ],
      "op": "AND",
      "path": "0"
    },
    "14891": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10999,
        11026
      ],
      "op": "DUP3",
      "path": "0"
    },
    "14892": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10999,
        11026
      ],
      "op": "ADD",
      "path": "0"
    },
    "14893": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10999,
        11026
      ],
      "op": "DUP1",
      "path": "0"
    },
    "14894": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10999,
        11026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "14896": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10999,
        11026
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "14897": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10999,
        11026
      ],
      "op": "POP",
      "path": "0"
    },
    "14898": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10999,
        11026
      ],
      "op": "DUP2",
      "path": "0"
    },
    "14899": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10999,
        11026
      ],
      "op": "ADD",
      "path": "0"
    },
    "14900": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10999,
        11026
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "14901": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10999,
        11026
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A3E"
    },
    "14904": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10999,
        11026
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "14905": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10999,
        11026
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "14906": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10999,
        11026
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x430A"
    },
    "14909": {
      "fn": "GeVault.removeFromTick",
      "jump": "i",
      "offset": [
        10999,
        11026
      ],
      "op": "JUMP",
      "path": "0"
    },
    "14910": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10999,
        11026
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "14911": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10987,
        11026
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "14912": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10987,
        11026
      ],
      "op": "POP",
      "path": "0"
    },
    "14913": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11160,
        11164
      ],
      "op": "DUP1",
      "path": "0"
    },
    "14914": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11153,
        11157
      ],
      "op": "DUP3",
      "path": "0"
    },
    "14915": {
      "branch": 203,
      "fn": "GeVault.removeFromTick",
      "offset": [
        11153,
        11164
      ],
      "op": "GT",
      "path": "0"
    },
    "14916": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11149,
        11177
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "14917": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11149,
        11177
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A4C"
    },
    "14920": {
      "branch": 203,
      "fn": "GeVault.removeFromTick",
      "offset": [
        11149,
        11177
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "14921": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11173,
        11177
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 136
    },
    "14922": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11166,
        11177
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "14923": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11166,
        11177
      ],
      "op": "POP",
      "path": "0"
    },
    "14924": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11149,
        11177
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "14925": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11187,
        11195
      ],
      "op": "DUP2",
      "path": "0"
    },
    "14926": {
      "branch": 204,
      "fn": "GeVault.removeFromTick",
      "offset": [
        11187,
        11195
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "14927": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11183,
        11296
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B4B"
    },
    "14930": {
      "branch": 204,
      "fn": "GeVault.removeFromTick",
      "offset": [
        11183,
        11296
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "14931": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11215
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 137,
      "value": "0x10"
    },
    "14933": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11215
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "14934": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11258
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "14936": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11258
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "14937": {
      "op": "PUSH4",
      "value": "0x1A4CA37B"
    },
    "14942": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "14944": {
      "op": "SHL"
    },
    "14945": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11258
      ],
      "op": "DUP2",
      "path": "0"
    },
    "14946": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11258
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "14947": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14949": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14951": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14953": {
      "op": "SHL"
    },
    "14954": {
      "op": "SUB"
    },
    "14955": {
      "op": "DUP7"
    },
    "14956": {
      "op": "DUP2"
    },
    "14957": {
      "op": "AND"
    },
    "14958": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11258
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "14960": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11258
      ],
      "op": "DUP4",
      "path": "0"
    },
    "14961": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11258
      ],
      "op": "ADD",
      "path": "0"
    },
    "14962": {
      "op": "MSTORE"
    },
    "14963": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14965": {
      "op": "DUP3"
    },
    "14966": {
      "op": "ADD"
    },
    "14967": {
      "op": "DUP6"
    },
    "14968": {
      "op": "SWAP1"
    },
    "14969": {
      "op": "MSTORE"
    },
    "14970": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11252,
        11256
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "14971": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14973": {
      "op": "DUP4"
    },
    "14974": {
      "op": "ADD"
    },
    "14975": {
      "op": "MSTORE"
    },
    "14976": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11215
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "14977": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11215
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "14978": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11215
      ],
      "op": "AND",
      "path": "0"
    },
    "14979": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11215
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "14980": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11224
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x69328DEC"
    },
    "14985": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11224
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "14986": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14988": {
      "op": "ADD"
    },
    "14989": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11258
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "14991": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11258
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "14993": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11258
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "14994": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11258
      ],
      "op": "DUP1",
      "path": "0"
    },
    "14995": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11258
      ],
      "op": "DUP4",
      "path": "0"
    },
    "14996": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11258
      ],
      "op": "SUB",
      "path": "0"
    },
    "14997": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11258
      ],
      "op": "DUP2",
      "path": "0"
    },
    "14998": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11258
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15000": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11258
      ],
      "op": "DUP8",
      "path": "0"
    },
    "15001": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11258
      ],
      "op": "GAS",
      "path": "0"
    },
    "15002": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11258
      ],
      "op": "CALL",
      "path": "0"
    },
    "15003": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11258
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "15004": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11258
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15005": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11258
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "15006": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11258
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3AAB"
    },
    "15009": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11258
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "15010": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11258
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "15011": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11258
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15013": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11258
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15014": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11258
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "15015": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11258
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "15016": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11258
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15018": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11258
      ],
      "op": "REVERT",
      "path": "0"
    },
    "15019": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11258
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "15020": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11258
      ],
      "op": "POP",
      "path": "0"
    },
    "15021": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11258
      ],
      "op": "POP",
      "path": "0"
    },
    "15022": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11258
      ],
      "op": "POP",
      "path": "0"
    },
    "15023": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11258
      ],
      "op": "POP",
      "path": "0"
    },
    "15024": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11258
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "15026": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11258
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "15027": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11258
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "15028": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11258
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "15030": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11258
      ],
      "op": "NOT",
      "path": "0"
    },
    "15031": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11258
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "15033": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11258
      ],
      "op": "DUP3",
      "path": "0"
    },
    "15034": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11258
      ],
      "op": "ADD",
      "path": "0"
    },
    "15035": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11258
      ],
      "op": "AND",
      "path": "0"
    },
    "15036": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11258
      ],
      "op": "DUP3",
      "path": "0"
    },
    "15037": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11258
      ],
      "op": "ADD",
      "path": "0"
    },
    "15038": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11258
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15039": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11258
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "15041": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11258
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "15042": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11258
      ],
      "op": "POP",
      "path": "0"
    },
    "15043": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11258
      ],
      "op": "DUP2",
      "path": "0"
    },
    "15044": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11258
      ],
      "op": "ADD",
      "path": "0"
    },
    "15045": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11258
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "15046": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11258
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3ACF"
    },
    "15049": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11258
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "15050": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11258
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "15051": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11258
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x430A"
    },
    "15054": {
      "fn": "GeVault.removeFromTick",
      "jump": "i",
      "offset": [
        11204,
        11258
      ],
      "op": "JUMP",
      "path": "0"
    },
    "15055": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11204,
        11258
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "15056": {
      "op": "POP"
    },
    "15057": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11289
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 138,
      "value": "0x40"
    },
    "15059": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11289
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "15060": {
      "op": "PUSH4",
      "value": "0xA41FE49F"
    },
    "15065": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15067": {
      "op": "SHL"
    },
    "15068": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11289
      ],
      "op": "DUP2",
      "path": "0"
    },
    "15069": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11289
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "15070": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11289
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "15072": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11289
      ],
      "op": "DUP2",
      "path": "0"
    },
    "15073": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11289
      ],
      "op": "ADD",
      "path": "0"
    },
    "15074": {
      "op": "DUP4"
    },
    "15075": {
      "op": "SWAP1"
    },
    "15076": {
      "op": "MSTORE"
    },
    "15077": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11284,
        11285
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15079": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "15081": {
      "op": "DUP3"
    },
    "15082": {
      "op": "ADD"
    },
    "15083": {
      "op": "DUP2"
    },
    "15084": {
      "op": "SWAP1"
    },
    "15085": {
      "op": "MSTORE"
    },
    "15086": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "15088": {
      "op": "DUP3"
    },
    "15089": {
      "op": "ADD"
    },
    "15090": {
      "op": "MSTORE"
    },
    "15091": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15093": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15095": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15097": {
      "op": "SHL"
    },
    "15098": {
      "op": "SUB"
    },
    "15099": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11277
      ],
      "op": "DUP6",
      "path": "0"
    },
    "15100": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11277
      ],
      "op": "AND",
      "path": "0"
    },
    "15101": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11277
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "15102": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11277
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA41FE49F"
    },
    "15107": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11277
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "15108": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "15110": {
      "op": "ADD"
    },
    "15111": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11289
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "15113": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11289
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15114": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11289
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "15115": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11289
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15116": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11289
      ],
      "op": "DUP4",
      "path": "0"
    },
    "15117": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11289
      ],
      "op": "SUB",
      "path": "0"
    },
    "15118": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11289
      ],
      "op": "DUP2",
      "path": "0"
    },
    "15119": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11289
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15121": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11289
      ],
      "op": "DUP8",
      "path": "0"
    },
    "15122": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11289
      ],
      "op": "GAS",
      "path": "0"
    },
    "15123": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11289
      ],
      "op": "CALL",
      "path": "0"
    },
    "15124": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11289
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "15125": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11289
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15126": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11289
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "15127": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11289
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B24"
    },
    "15130": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11289
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "15131": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11289
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "15132": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11289
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15134": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11289
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15135": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11289
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "15136": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11289
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "15137": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11289
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15139": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11289
      ],
      "op": "REVERT",
      "path": "0"
    },
    "15140": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11289
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "15141": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11289
      ],
      "op": "POP",
      "path": "0"
    },
    "15142": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11289
      ],
      "op": "POP",
      "path": "0"
    },
    "15143": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11289
      ],
      "op": "POP",
      "path": "0"
    },
    "15144": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11289
      ],
      "op": "POP",
      "path": "0"
    },
    "15145": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11289
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "15147": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11289
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "15148": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11289
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "15149": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11289
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "15151": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11289
      ],
      "op": "NOT",
      "path": "0"
    },
    "15152": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11289
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "15154": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11289
      ],
      "op": "DUP3",
      "path": "0"
    },
    "15155": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11289
      ],
      "op": "ADD",
      "path": "0"
    },
    "15156": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11289
      ],
      "op": "AND",
      "path": "0"
    },
    "15157": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11289
      ],
      "op": "DUP3",
      "path": "0"
    },
    "15158": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11289
      ],
      "op": "ADD",
      "path": "0"
    },
    "15159": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11289
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15160": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11289
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "15162": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11289
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "15163": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11289
      ],
      "op": "POP",
      "path": "0"
    },
    "15164": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11289
      ],
      "op": "DUP2",
      "path": "0"
    },
    "15165": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11289
      ],
      "op": "ADD",
      "path": "0"
    },
    "15166": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11289
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "15167": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11289
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B48"
    },
    "15170": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11289
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "15171": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11289
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "15172": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11289
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x453B"
    },
    "15175": {
      "fn": "GeVault.removeFromTick",
      "jump": "i",
      "offset": [
        11266,
        11289
      ],
      "op": "JUMP",
      "path": "0"
    },
    "15176": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11289
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "15177": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11289
      ],
      "op": "POP",
      "path": "0"
    },
    "15178": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11266,
        11289
      ],
      "op": "POP",
      "path": "0"
    },
    "15179": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        11183,
        11296
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "15180": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10795,
        11300
      ],
      "op": "POP",
      "path": "0"
    },
    "15181": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10795,
        11300
      ],
      "op": "POP",
      "path": "0"
    },
    "15182": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10795,
        11300
      ],
      "op": "POP",
      "path": "0"
    },
    "15183": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10795,
        11300
      ],
      "op": "POP",
      "path": "0"
    },
    "15184": {
      "fn": "GeVault.removeFromTick",
      "offset": [
        10750,
        11300
      ],
      "op": "POP",
      "path": "0"
    },
    "15185": {
      "fn": "GeVault.removeFromTick",
      "jump": "o",
      "offset": [
        10750,
        11300
      ],
      "op": "JUMP",
      "path": "0"
    },
    "15186": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        13941,
        14411
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "15187": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14077,
        14083
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 139,
      "value": "0xA"
    },
    "15189": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14077,
        14083
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "15190": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14032,
        14046
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15192": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14032,
        14046
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "15193": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14053,
        14106
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B6C"
    },
    "15196": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14053,
        14106
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "15197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15201": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15203": {
      "op": "SHL"
    },
    "15204": {
      "op": "SUB"
    },
    "15205": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14077,
        14083
      ],
      "op": "AND",
      "path": "0"
    },
    "15206": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14094,
        14095
      ],
      "op": "DUP6",
      "path": "0"
    },
    "15207": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14098,
        14105
      ],
      "op": "DUP6",
      "path": "0"
    },
    "15208": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14053,
        14068
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3D0E"
    },
    "15211": {
      "fn": "GeVault.depositAndStash",
      "jump": "i",
      "offset": [
        14053,
        14106
      ],
      "op": "JUMP",
      "path": "0"
    },
    "15212": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14053,
        14106
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "15213": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14136,
        14142
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 140,
      "value": "0xB"
    },
    "15215": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14136,
        14142
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "15216": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14112,
        14165
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B83"
    },
    "15219": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14112,
        14165
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "15220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15224": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15226": {
      "op": "SHL"
    },
    "15227": {
      "op": "SUB"
    },
    "15228": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14136,
        14142
      ],
      "op": "AND",
      "path": "0"
    },
    "15229": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14153,
        14154
      ],
      "op": "DUP6",
      "path": "0"
    },
    "15230": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14157,
        14164
      ],
      "op": "DUP5",
      "path": "0"
    },
    "15231": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14112,
        14127
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3D0E"
    },
    "15234": {
      "fn": "GeVault.depositAndStash",
      "jump": "i",
      "offset": [
        14112,
        14165
      ],
      "op": "JUMP",
      "path": "0"
    },
    "15235": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14112,
        14165
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "15236": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14210
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 141,
      "value": "0x40"
    },
    "15238": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14210
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "15239": {
      "op": "PUSH4",
      "value": "0x1C57762B"
    },
    "15244": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "15246": {
      "op": "SHL"
    },
    "15247": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14210
      ],
      "op": "DUP2",
      "path": "0"
    },
    "15248": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14210
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "15249": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14210
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "15251": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14210
      ],
      "op": "DUP2",
      "path": "0"
    },
    "15252": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14210
      ],
      "op": "ADD",
      "path": "0"
    },
    "15253": {
      "op": "DUP5"
    },
    "15254": {
      "op": "SWAP1"
    },
    "15255": {
      "op": "MSTORE"
    },
    "15256": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "15258": {
      "op": "DUP2"
    },
    "15259": {
      "op": "ADD"
    },
    "15260": {
      "op": "DUP4"
    },
    "15261": {
      "op": "SWAP1"
    },
    "15262": {
      "op": "MSTORE"
    },
    "15263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15265": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15267": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15269": {
      "op": "SHL"
    },
    "15270": {
      "op": "SUB"
    },
    "15271": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14192
      ],
      "op": "DUP6",
      "path": "0"
    },
    "15272": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14192
      ],
      "op": "AND",
      "path": "0"
    },
    "15273": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14192
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "15274": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14192
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE2BBB158"
    },
    "15279": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14192
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "15280": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "15282": {
      "op": "ADD"
    },
    "15283": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14210
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "15285": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14210
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "15287": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14210
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "15288": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14210
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15289": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14210
      ],
      "op": "DUP4",
      "path": "0"
    },
    "15290": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14210
      ],
      "op": "SUB",
      "path": "0"
    },
    "15291": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14210
      ],
      "op": "DUP2",
      "path": "0"
    },
    "15292": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14210
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15294": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14210
      ],
      "op": "DUP8",
      "path": "0"
    },
    "15295": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14210
      ],
      "op": "GAS",
      "path": "0"
    },
    "15296": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14210
      ],
      "op": "CALL",
      "path": "0"
    },
    "15297": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14210
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "15298": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14210
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15299": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14210
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "15300": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14210
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3BD1"
    },
    "15303": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14210
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "15304": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14210
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "15305": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14210
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15307": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14210
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15308": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14210
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "15309": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14210
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "15310": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14210
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15312": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14210
      ],
      "op": "REVERT",
      "path": "0"
    },
    "15313": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14210
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "15314": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14210
      ],
      "op": "POP",
      "path": "0"
    },
    "15315": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14210
      ],
      "op": "POP",
      "path": "0"
    },
    "15316": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14210
      ],
      "op": "POP",
      "path": "0"
    },
    "15317": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14210
      ],
      "op": "POP",
      "path": "0"
    },
    "15318": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14210
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "15320": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14210
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "15321": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14210
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "15322": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14210
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "15324": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14210
      ],
      "op": "NOT",
      "path": "0"
    },
    "15325": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14210
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "15327": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14210
      ],
      "op": "DUP3",
      "path": "0"
    },
    "15328": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14210
      ],
      "op": "ADD",
      "path": "0"
    },
    "15329": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14210
      ],
      "op": "AND",
      "path": "0"
    },
    "15330": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14210
      ],
      "op": "DUP3",
      "path": "0"
    },
    "15331": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14210
      ],
      "op": "ADD",
      "path": "0"
    },
    "15332": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14210
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15333": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14210
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "15335": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14210
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "15336": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14210
      ],
      "op": "POP",
      "path": "0"
    },
    "15337": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14210
      ],
      "op": "DUP2",
      "path": "0"
    },
    "15338": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14210
      ],
      "op": "ADD",
      "path": "0"
    },
    "15339": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14210
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "15340": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14210
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3BF5"
    },
    "15343": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14210
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "15344": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14210
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "15345": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14210
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x430A"
    },
    "15348": {
      "fn": "GeVault.depositAndStash",
      "jump": "i",
      "offset": [
        14183,
        14210
      ],
      "op": "JUMP",
      "path": "0"
    },
    "15349": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14183,
        14210
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "15350": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14232,
        14258
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "15352": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14232,
        14258
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "15353": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "15358": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15360": {
      "op": "SHL"
    },
    "15361": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14232,
        14258
      ],
      "op": "DUP2",
      "path": "0"
    },
    "15362": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14232,
        14258
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "15363": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14252,
        14256
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "15364": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14232,
        14258
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "15366": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14232,
        14258
      ],
      "op": "DUP3",
      "path": "0"
    },
    "15367": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14232,
        14258
      ],
      "op": "ADD",
      "path": "0"
    },
    "15368": {
      "op": "MSTORE"
    },
    "15369": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14171,
        14210
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "15370": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14171,
        14210
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "15371": {
      "op": "POP"
    },
    "15372": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14221,
        14229
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15374": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14221,
        14229
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "15375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15379": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15381": {
      "op": "SHL"
    },
    "15382": {
      "op": "SUB"
    },
    "15383": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14232,
        14243
      ],
      "op": "DUP7",
      "path": "0"
    },
    "15384": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14232,
        14243
      ],
      "op": "AND",
      "path": "0"
    },
    "15385": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14232,
        14243
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "15386": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14232,
        14243
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "15391": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14232,
        14243
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "15392": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "15394": {
      "op": "ADD"
    },
    "15395": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14232,
        14258
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "15397": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14232,
        14258
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "15399": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14232,
        14258
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "15400": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14232,
        14258
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15401": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14232,
        14258
      ],
      "op": "DUP4",
      "path": "0"
    },
    "15402": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14232,
        14258
      ],
      "op": "SUB",
      "path": "0"
    },
    "15403": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14232,
        14258
      ],
      "op": "DUP2",
      "path": "0"
    },
    "15404": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14232,
        14258
      ],
      "op": "DUP7",
      "path": "0"
    },
    "15405": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14232,
        14258
      ],
      "op": "GAS",
      "path": "0"
    },
    "15406": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14232,
        14258
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "15407": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14232,
        14258
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "15408": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14232,
        14258
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15409": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14232,
        14258
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "15410": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14232,
        14258
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C3F"
    },
    "15413": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14232,
        14258
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "15414": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14232,
        14258
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "15415": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14232,
        14258
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15417": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14232,
        14258
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15418": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14232,
        14258
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "15419": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14232,
        14258
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "15420": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14232,
        14258
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15422": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14232,
        14258
      ],
      "op": "REVERT",
      "path": "0"
    },
    "15423": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14232,
        14258
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "15424": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14232,
        14258
      ],
      "op": "POP",
      "path": "0"
    },
    "15425": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14232,
        14258
      ],
      "op": "POP",
      "path": "0"
    },
    "15426": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14232,
        14258
      ],
      "op": "POP",
      "path": "0"
    },
    "15427": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14232,
        14258
      ],
      "op": "POP",
      "path": "0"
    },
    "15428": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14232,
        14258
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "15430": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14232,
        14258
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "15431": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14232,
        14258
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "15432": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14232,
        14258
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "15434": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14232,
        14258
      ],
      "op": "NOT",
      "path": "0"
    },
    "15435": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14232,
        14258
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "15437": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14232,
        14258
      ],
      "op": "DUP3",
      "path": "0"
    },
    "15438": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14232,
        14258
      ],
      "op": "ADD",
      "path": "0"
    },
    "15439": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14232,
        14258
      ],
      "op": "AND",
      "path": "0"
    },
    "15440": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14232,
        14258
      ],
      "op": "DUP3",
      "path": "0"
    },
    "15441": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14232,
        14258
      ],
      "op": "ADD",
      "path": "0"
    },
    "15442": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14232,
        14258
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15443": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14232,
        14258
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "15445": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14232,
        14258
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "15446": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14232,
        14258
      ],
      "op": "POP",
      "path": "0"
    },
    "15447": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14232,
        14258
      ],
      "op": "DUP2",
      "path": "0"
    },
    "15448": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14232,
        14258
      ],
      "op": "ADD",
      "path": "0"
    },
    "15449": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14232,
        14258
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "15450": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14232,
        14258
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C63"
    },
    "15453": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14232,
        14258
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "15454": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14232,
        14258
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "15455": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14232,
        14258
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x430A"
    },
    "15458": {
      "fn": "GeVault.depositAndStash",
      "jump": "i",
      "offset": [
        14232,
        14258
      ],
      "op": "JUMP",
      "path": "0"
    },
    "15459": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14232,
        14258
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "15460": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14221,
        14258
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "15461": {
      "op": "POP"
    },
    "15462": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14268,
        14275
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15463": {
      "branch": 205,
      "fn": "GeVault.depositAndStash",
      "offset": [
        14268,
        14275
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "15464": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14264,
        14407
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CF7"
    },
    "15467": {
      "branch": 205,
      "fn": "GeVault.depositAndStash",
      "offset": [
        14264,
        14407
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "15468": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14320,
        14331
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 142,
      "value": "0x10"
    },
    "15470": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14320,
        14331
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "15471": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14284,
        14338
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C83"
    },
    "15474": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14284,
        14338
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "15475": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14308,
        14309
      ],
      "op": "DUP7",
      "path": "0"
    },
    "15476": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14308,
        14309
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "15477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15479": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15481": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15483": {
      "op": "SHL"
    },
    "15484": {
      "op": "SUB"
    },
    "15485": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14320,
        14331
      ],
      "op": "AND",
      "path": "0"
    },
    "15486": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14334,
        14337
      ],
      "op": "DUP4",
      "path": "0"
    },
    "15487": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14284,
        14299
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3D0E"
    },
    "15490": {
      "fn": "GeVault.depositAndStash",
      "jump": "i",
      "offset": [
        14284,
        14338
      ],
      "op": "JUMP",
      "path": "0"
    },
    "15491": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14284,
        14338
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "15492": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14346,
        14357
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 143,
      "value": "0x10"
    },
    "15494": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14346,
        14357
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "15495": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14346,
        14400
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "15497": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14346,
        14400
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "15498": {
      "op": "PUSH4",
      "value": "0xE8EDA9DF"
    },
    "15503": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15505": {
      "op": "SHL"
    },
    "15506": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14346,
        14400
      ],
      "op": "DUP2",
      "path": "0"
    },
    "15507": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14346,
        14400
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "15508": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15510": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15512": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15514": {
      "op": "SHL"
    },
    "15515": {
      "op": "SUB"
    },
    "15516": {
      "op": "DUP8"
    },
    "15517": {
      "op": "DUP2"
    },
    "15518": {
      "op": "AND"
    },
    "15519": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14346,
        14400
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "15521": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14346,
        14400
      ],
      "op": "DUP4",
      "path": "0"
    },
    "15522": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14346,
        14400
      ],
      "op": "ADD",
      "path": "0"
    },
    "15523": {
      "op": "MSTORE"
    },
    "15524": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "15526": {
      "op": "DUP3"
    },
    "15527": {
      "op": "ADD"
    },
    "15528": {
      "op": "DUP5"
    },
    "15529": {
      "op": "SWAP1"
    },
    "15530": {
      "op": "MSTORE"
    },
    "15531": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14391,
        14395
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "15532": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "15534": {
      "op": "DUP4"
    },
    "15535": {
      "op": "ADD"
    },
    "15536": {
      "op": "MSTORE"
    },
    "15537": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14346,
        14357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15539": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "15541": {
      "op": "DUP4"
    },
    "15542": {
      "op": "ADD"
    },
    "15543": {
      "op": "MSTORE"
    },
    "15544": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14346,
        14357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "15545": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14346,
        14357
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "15546": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14346,
        14357
      ],
      "op": "AND",
      "path": "0"
    },
    "15547": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14346,
        14357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "15548": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14346,
        14365
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE8EDA9DF"
    },
    "15553": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14346,
        14365
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "15554": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "15556": {
      "op": "ADD"
    },
    "15557": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14346,
        14400
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15559": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14346,
        14400
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "15561": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14346,
        14400
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "15562": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14346,
        14400
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15563": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14346,
        14400
      ],
      "op": "DUP4",
      "path": "0"
    },
    "15564": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14346,
        14400
      ],
      "op": "SUB",
      "path": "0"
    },
    "15565": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14346,
        14400
      ],
      "op": "DUP2",
      "path": "0"
    },
    "15566": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14346,
        14400
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15568": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14346,
        14400
      ],
      "op": "DUP8",
      "path": "0"
    },
    "15569": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14346,
        14400
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15570": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14346,
        14400
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "15571": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14346,
        14400
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "15572": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14346,
        14400
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15573": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14346,
        14400
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "15574": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14346,
        14400
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CDE"
    },
    "15577": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14346,
        14400
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "15578": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14346,
        14400
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15580": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14346,
        14400
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15581": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14346,
        14400
      ],
      "op": "REVERT",
      "path": "0"
    },
    "15582": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14346,
        14400
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "15583": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14346,
        14400
      ],
      "op": "POP",
      "path": "0"
    },
    "15584": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14346,
        14400
      ],
      "op": "GAS",
      "path": "0"
    },
    "15585": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14346,
        14400
      ],
      "op": "CALL",
      "path": "0"
    },
    "15586": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14346,
        14400
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "15587": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14346,
        14400
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15588": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14346,
        14400
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "15589": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14346,
        14400
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CF2"
    },
    "15592": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14346,
        14400
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "15593": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14346,
        14400
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "15594": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14346,
        14400
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15596": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14346,
        14400
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15597": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14346,
        14400
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "15598": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14346,
        14400
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "15599": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14346,
        14400
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15601": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14346,
        14400
      ],
      "op": "REVERT",
      "path": "0"
    },
    "15602": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14346,
        14400
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "15603": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14346,
        14400
      ],
      "op": "POP",
      "path": "0"
    },
    "15604": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14346,
        14400
      ],
      "op": "POP",
      "path": "0"
    },
    "15605": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14346,
        14400
      ],
      "op": "POP",
      "path": "0"
    },
    "15606": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14346,
        14400
      ],
      "op": "POP",
      "path": "0"
    },
    "15607": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14264,
        14407
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "15608": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        14047,
        14411
      ],
      "op": "POP",
      "path": "0"
    },
    "15609": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        13941,
        14411
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "15610": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        13941,
        14411
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "15611": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        13941,
        14411
      ],
      "op": "POP",
      "path": "0"
    },
    "15612": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        13941,
        14411
      ],
      "op": "POP",
      "path": "0"
    },
    "15613": {
      "fn": "GeVault.depositAndStash",
      "offset": [
        13941,
        14411
      ],
      "op": "POP",
      "path": "0"
    },
    "15614": {
      "fn": "GeVault.depositAndStash",
      "jump": "o",
      "offset": [
        13941,
        14411
      ],
      "op": "JUMP",
      "path": "0"
    },
    "15615": {
      "fn": "Address.functionCall",
      "offset": [
        3846,
        4069
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "15616": {
      "fn": "Address.functionCall",
      "offset": [
        3979,
        3991
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x60"
    },
    "15618": {
      "fn": "Address.functionCall",
      "offset": [
        4010,
        4062
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 144,
      "value": "0x1F30"
    },
    "15621": {
      "fn": "Address.functionCall",
      "offset": [
        4032,
        4038
      ],
      "op": "DUP5",
      "path": "27"
    },
    "15622": {
      "fn": "Address.functionCall",
      "offset": [
        4040,
        4044
      ],
      "op": "DUP5",
      "path": "27"
    },
    "15623": {
      "fn": "Address.functionCall",
      "offset": [
        4046,
        4047
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "15625": {
      "fn": "Address.functionCall",
      "offset": [
        4049,
        4061
      ],
      "op": "DUP6",
      "path": "27"
    },
    "15626": {
      "fn": "Address.functionCall",
      "offset": [
        4010,
        4031
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3D9D"
    },
    "15629": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        4010,
        4062
      ],
      "op": "JUMP",
      "path": "27"
    },
    "15630": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13209,
        13423
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "15631": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13344
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "15633": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13344
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "15634": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "15639": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "15641": {
      "op": "SHL"
    },
    "15642": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13344
      ],
      "op": "DUP2",
      "path": "0"
    },
    "15643": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13344
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "15644": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13329,
        13333
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "15645": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13344
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "15647": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13344
      ],
      "op": "DUP3",
      "path": "0"
    },
    "15648": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13344
      ],
      "op": "ADD",
      "path": "0"
    },
    "15649": {
      "op": "MSTORE"
    },
    "15650": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15652": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15654": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15656": {
      "op": "SHL"
    },
    "15657": {
      "op": "SUB"
    },
    "15658": {
      "op": "DUP4"
    },
    "15659": {
      "op": "DUP2"
    },
    "15660": {
      "op": "AND"
    },
    "15661": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "15663": {
      "op": "DUP4"
    },
    "15664": {
      "op": "ADD"
    },
    "15665": {
      "op": "MSTORE"
    },
    "15666": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13347,
        13353
      ],
      "op": "DUP3",
      "path": "0"
    },
    "15667": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13347,
        13353
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "15668": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13320
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "15669": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13320
      ],
      "op": "DUP6",
      "path": "0"
    },
    "15670": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13320
      ],
      "op": "AND",
      "path": "0"
    },
    "15671": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13320
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "15672": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13320
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDD62ED3E"
    },
    "15677": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13320
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "15678": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "15680": {
      "op": "ADD"
    },
    "15681": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13344
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "15683": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13344
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "15685": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13344
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "15686": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13344
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15687": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13344
      ],
      "op": "DUP4",
      "path": "0"
    },
    "15688": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13344
      ],
      "op": "SUB",
      "path": "0"
    },
    "15689": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13344
      ],
      "op": "DUP2",
      "path": "0"
    },
    "15690": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13344
      ],
      "op": "DUP7",
      "path": "0"
    },
    "15691": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13344
      ],
      "op": "GAS",
      "path": "0"
    },
    "15692": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13344
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "15693": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13344
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "15694": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13344
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15695": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13344
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "15696": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13344
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3D5D"
    },
    "15699": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13344
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "15700": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13344
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "15701": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13344
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15703": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13344
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15704": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13344
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "15705": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13344
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "15706": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13344
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15708": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13344
      ],
      "op": "REVERT",
      "path": "0"
    },
    "15709": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13344
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "15710": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13344
      ],
      "op": "POP",
      "path": "0"
    },
    "15711": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13344
      ],
      "op": "POP",
      "path": "0"
    },
    "15712": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13344
      ],
      "op": "POP",
      "path": "0"
    },
    "15713": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13344
      ],
      "op": "POP",
      "path": "0"
    },
    "15714": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13344
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "15716": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13344
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "15717": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13344
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "15718": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13344
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "15720": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13344
      ],
      "op": "NOT",
      "path": "0"
    },
    "15721": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13344
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "15723": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13344
      ],
      "op": "DUP3",
      "path": "0"
    },
    "15724": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13344
      ],
      "op": "ADD",
      "path": "0"
    },
    "15725": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13344
      ],
      "op": "AND",
      "path": "0"
    },
    "15726": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13344
      ],
      "op": "DUP3",
      "path": "0"
    },
    "15727": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13344
      ],
      "op": "ADD",
      "path": "0"
    },
    "15728": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13344
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15729": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13344
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "15731": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13344
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "15732": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13344
      ],
      "op": "POP",
      "path": "0"
    },
    "15733": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13344
      ],
      "op": "DUP2",
      "path": "0"
    },
    "15734": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13344
      ],
      "op": "ADD",
      "path": "0"
    },
    "15735": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13344
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "15736": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13344
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3D81"
    },
    "15739": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13344
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "15740": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13344
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "15741": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13344
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x430A"
    },
    "15744": {
      "fn": "GeVault.checkSetApprove",
      "jump": "i",
      "offset": [
        13298,
        13344
      ],
      "op": "JUMP",
      "path": "0"
    },
    "15745": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13344
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "15746": {
      "branch": 206,
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13298,
        13353
      ],
      "op": "LT",
      "path": "0"
    },
    "15747": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13293,
        13418
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "15748": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13293,
        13418
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F8F"
    },
    "15751": {
      "branch": 206,
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13293,
        13418
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "15752": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13356,
        13418
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 145,
      "value": "0x2F8F"
    },
    "15755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15759": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15761": {
      "op": "SHL"
    },
    "15762": {
      "op": "SUB"
    },
    "15763": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13356,
        13390
      ],
      "op": "DUP5",
      "path": "0"
    },
    "15764": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13356,
        13390
      ],
      "op": "AND",
      "path": "0"
    },
    "15765": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13391,
        13398
      ],
      "op": "DUP4",
      "path": "0"
    },
    "15766": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15768": {
      "op": "NOT"
    },
    "15769": {
      "fn": "GeVault.checkSetApprove",
      "offset": [
        13356,
        13390
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3ECE"
    },
    "15772": {
      "fn": "GeVault.checkSetApprove",
      "jump": "i",
      "offset": [
        13356,
        13418
      ],
      "op": "JUMP",
      "path": "0"
    },
    "15773": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4933,
        5432
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "15774": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5098,
        5110
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x60"
    },
    "15776": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5155,
        5160
      ],
      "op": "DUP3",
      "path": "27",
      "statement": 146
    },
    "15777": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5130,
        5151
      ],
      "op": "SELFBALANCE",
      "path": "27"
    },
    "15778": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5130,
        5160
      ],
      "op": "LT",
      "path": "27"
    },
    "15779": {
      "branch": 207,
      "fn": "Address.functionCallWithValue",
      "offset": [
        5130,
        5160
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "15780": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3DFE"
    },
    "15783": {
      "branch": 207,
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "15784": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "15786": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "15787": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "15791": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "15793": {
      "op": "SHL"
    },
    "15794": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "DUP2",
      "path": "27"
    },
    "15795": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "15796": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15798": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "15800": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "DUP3",
      "path": "27"
    },
    "15801": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "ADD",
      "path": "27"
    },
    "15802": {
      "op": "MSTORE"
    },
    "15803": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "15805": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "15807": {
      "op": "DUP3"
    },
    "15808": {
      "op": "ADD"
    },
    "15809": {
      "op": "MSTORE"
    },
    "15810": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
    },
    "15843": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "15845": {
      "op": "DUP3"
    },
    "15846": {
      "op": "ADD"
    },
    "15847": {
      "op": "MSTORE"
    },
    "15848": {
      "op": "PUSH6",
      "value": "0x1C8818D85B1B"
    },
    "15855": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "15857": {
      "op": "SHL"
    },
    "15858": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "15860": {
      "op": "DUP3"
    },
    "15861": {
      "op": "ADD"
    },
    "15862": {
      "op": "MSTORE"
    },
    "15863": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "15865": {
      "op": "ADD"
    },
    "15866": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x8AC"
    },
    "15869": {
      "op": "JUMP"
    },
    "15870": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "15871": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15875": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15877": {
      "op": "SHL"
    },
    "15878": {
      "op": "SUB"
    },
    "15879": {
      "fn": "Address.isContract",
      "offset": [
        1450,
        1469
      ],
      "op": "DUP6",
      "path": "27",
      "statement": 147
    },
    "15880": {
      "fn": "Address.isContract",
      "offset": [
        1450,
        1469
      ],
      "op": "AND",
      "path": "27"
    },
    "15881": {
      "fn": "Address.isContract",
      "offset": [
        1450,
        1469
      ],
      "op": "EXTCODESIZE",
      "path": "27"
    },
    "15882": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 148,
      "value": "0x3E55"
    },
    "15885": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "15886": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "15888": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "15889": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "15893": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "15895": {
      "op": "SHL"
    },
    "15896": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "DUP2",
      "path": "27"
    },
    "15897": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "15898": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15900": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "15902": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "DUP3",
      "path": "27"
    },
    "15903": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "ADD",
      "path": "27"
    },
    "15904": {
      "op": "MSTORE"
    },
    "15905": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "15907": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "15909": {
      "op": "DUP3"
    },
    "15910": {
      "op": "ADD"
    },
    "15911": {
      "op": "MSTORE"
    },
    "15912": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "15945": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "15947": {
      "op": "DUP3"
    },
    "15948": {
      "op": "ADD"
    },
    "15949": {
      "op": "MSTORE"
    },
    "15950": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "15952": {
      "op": "ADD"
    },
    "15953": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x8AC"
    },
    "15956": {
      "op": "JUMP"
    },
    "15957": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "15958": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5285,
        5297
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "15960": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5322
      ],
      "op": "DUP1",
      "path": "27"
    },
    "15961": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5332
      ],
      "op": "DUP7",
      "path": "27"
    },
    "15962": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15964": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15966": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15968": {
      "op": "SHL"
    },
    "15969": {
      "op": "SUB"
    },
    "15970": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5337
      ],
      "op": "AND",
      "path": "27"
    },
    "15971": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5345,
        5350
      ],
      "op": "DUP6",
      "path": "27"
    },
    "15972": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5352,
        5356
      ],
      "op": "DUP8",
      "path": "27"
    },
    "15973": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "15975": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "15976": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3E71"
    },
    "15979": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "15980": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "15981": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4725"
    },
    "15984": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5326,
        5357
      ],
      "op": "JUMP",
      "path": "27"
    },
    "15985": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "15986": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "15988": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "15990": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "15991": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "DUP1",
      "path": "27"
    },
    "15992": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "DUP4",
      "path": "27"
    },
    "15993": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "SUB",
      "path": "27"
    },
    "15994": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "DUP2",
      "path": "27"
    },
    "15995": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "DUP6",
      "path": "27"
    },
    "15996": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "DUP8",
      "path": "27"
    },
    "15997": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "GAS",
      "path": "27"
    },
    "15998": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "CALL",
      "path": "27"
    },
    "15999": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "16000": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "POP",
      "path": "27"
    },
    "16001": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "POP",
      "path": "27"
    },
    "16002": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "POP",
      "path": "27"
    },
    "16003": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "16004": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "DUP1",
      "path": "27"
    },
    "16005": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "16007": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "DUP2",
      "path": "27"
    },
    "16008": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "EQ",
      "path": "27"
    },
    "16009": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3EAE"
    },
    "16012": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "16013": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "16015": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "16016": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "16017": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "POP",
      "path": "27"
    },
    "16018": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "16020": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "NOT",
      "path": "27"
    },
    "16021": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x3F"
    },
    "16023": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "16024": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "ADD",
      "path": "27"
    },
    "16025": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "AND",
      "path": "27"
    },
    "16026": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "DUP3",
      "path": "27"
    },
    "16027": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "ADD",
      "path": "27"
    },
    "16028": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "16030": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "16031": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "16032": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "DUP3",
      "path": "27"
    },
    "16033": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "16034": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "16035": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "16037": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "16039": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "DUP5",
      "path": "27"
    },
    "16040": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "ADD",
      "path": "27"
    },
    "16041": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "RETURNDATACOPY",
      "path": "27"
    },
    "16042": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3EB3"
    },
    "16045": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "JUMP",
      "path": "27"
    },
    "16046": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "16047": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x60"
    },
    "16049": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "16050": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "POP",
      "path": "27"
    },
    "16051": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "16052": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "POP",
      "path": "27"
    },
    "16053": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5284,
        5357
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "16054": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5284,
        5357
      ],
      "op": "POP",
      "path": "27"
    },
    "16055": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5284,
        5357
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "16056": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5284,
        5357
      ],
      "op": "POP",
      "path": "27"
    },
    "16057": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5374,
        5425
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 149,
      "value": "0x3EC3"
    },
    "16060": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5391,
        5398
      ],
      "op": "DUP3",
      "path": "27"
    },
    "16061": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5400,
        5410
      ],
      "op": "DUP3",
      "path": "27"
    },
    "16062": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5412,
        5424
      ],
      "op": "DUP7",
      "path": "27"
    },
    "16063": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5374,
        5390
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3F80"
    },
    "16066": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5374,
        5425
      ],
      "op": "JUMP",
      "path": "27"
    },
    "16067": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5374,
        5425
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "16068": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5367,
        5425
      ],
      "op": "SWAP8",
      "path": "27"
    },
    "16069": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4933,
        5432
      ],
      "op": "SWAP7",
      "path": "27"
    },
    "16070": {
      "op": "POP"
    },
    "16071": {
      "op": "POP"
    },
    "16072": {
      "op": "POP"
    },
    "16073": {
      "op": "POP"
    },
    "16074": {
      "op": "POP"
    },
    "16075": {
      "op": "POP"
    },
    "16076": {
      "op": "POP"
    },
    "16077": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4933,
        5432
      ],
      "op": "JUMP",
      "path": "27"
    },
    "16078": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2022,
        2332
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "16079": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "16081": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "16082": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "16087": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "16089": {
      "op": "SHL"
    },
    "16090": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "DUP2",
      "path": "23"
    },
    "16091": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "16092": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2195,
        2199
      ],
      "op": "ADDRESS",
      "path": "23"
    },
    "16093": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "16095": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "DUP3",
      "path": "23"
    },
    "16096": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "ADD",
      "path": "23"
    },
    "16097": {
      "op": "MSTORE"
    },
    "16098": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16100": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16102": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16104": {
      "op": "SHL"
    },
    "16105": {
      "op": "SUB"
    },
    "16106": {
      "op": "DUP4"
    },
    "16107": {
      "op": "DUP2"
    },
    "16108": {
      "op": "AND"
    },
    "16109": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "16111": {
      "op": "DUP4"
    },
    "16112": {
      "op": "ADD"
    },
    "16113": {
      "op": "MSTORE"
    },
    "16114": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2148,
        2168
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "16116": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2148,
        2168
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "16117": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2213,
        2218
      ],
      "op": "DUP4",
      "path": "23"
    },
    "16118": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2213,
        2218
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "16119": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2186
      ],
      "op": "DUP7",
      "path": "23"
    },
    "16120": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2186
      ],
      "op": "AND",
      "path": "23"
    },
    "16121": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2186
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "16122": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2186
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xDD62ED3E"
    },
    "16127": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2186
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "16128": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "16130": {
      "op": "ADD"
    },
    "16131": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "16133": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "16135": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "16136": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "DUP1",
      "path": "23"
    },
    "16137": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "DUP4",
      "path": "23"
    },
    "16138": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "SUB",
      "path": "23"
    },
    "16139": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "DUP2",
      "path": "23"
    },
    "16140": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "DUP7",
      "path": "23"
    },
    "16141": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "GAS",
      "path": "23"
    },
    "16142": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "STATICCALL",
      "path": "23"
    },
    "16143": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "16144": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "DUP1",
      "path": "23"
    },
    "16145": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "16146": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3F1F"
    },
    "16149": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "16150": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "16151": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "16153": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "DUP1",
      "path": "23"
    },
    "16154": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "RETURNDATACOPY",
      "path": "23"
    },
    "16155": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "16156": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "16158": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "REVERT",
      "path": "23"
    },
    "16159": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "16160": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "POP",
      "path": "23"
    },
    "16161": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "POP",
      "path": "23"
    },
    "16162": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "POP",
      "path": "23"
    },
    "16163": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "POP",
      "path": "23"
    },
    "16164": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "16166": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "16167": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "16168": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1F"
    },
    "16170": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "NOT",
      "path": "23"
    },
    "16171": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1F"
    },
    "16173": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "DUP3",
      "path": "23"
    },
    "16174": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "ADD",
      "path": "23"
    },
    "16175": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "AND",
      "path": "23"
    },
    "16176": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "DUP3",
      "path": "23"
    },
    "16177": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "ADD",
      "path": "23"
    },
    "16178": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "DUP1",
      "path": "23"
    },
    "16179": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "16181": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "16182": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "POP",
      "path": "23"
    },
    "16183": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "DUP2",
      "path": "23"
    },
    "16184": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "ADD",
      "path": "23"
    },
    "16185": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "16186": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3F43"
    },
    "16189": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "16190": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "16191": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x430A"
    },
    "16194": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "jump": "i",
      "offset": [
        2171,
        2210
      ],
      "op": "JUMP",
      "path": "23"
    },
    "16195": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "16196": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2218
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3F4D"
    },
    "16199": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2218
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "16200": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2218
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "16201": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2218
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4323"
    },
    "16204": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "jump": "i",
      "offset": [
        2171,
        2218
      ],
      "op": "JUMP",
      "path": "23"
    },
    "16205": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2218
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "16206": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2255,
        2324
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 150,
      "value": "0x40"
    },
    "16208": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2255,
        2324
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "16209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16211": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16213": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16215": {
      "op": "SHL"
    },
    "16216": {
      "op": "SUB"
    },
    "16217": {
      "op": "DUP6"
    },
    "16218": {
      "op": "AND"
    },
    "16219": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2255,
        2324
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "16221": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2255,
        2324
      ],
      "op": "DUP3",
      "path": "23"
    },
    "16222": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2255,
        2324
      ],
      "op": "ADD",
      "path": "23"
    },
    "16223": {
      "op": "MSTORE"
    },
    "16224": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "16226": {
      "op": "DUP2"
    },
    "16227": {
      "op": "ADD"
    },
    "16228": {
      "op": "DUP3"
    },
    "16229": {
      "op": "SWAP1"
    },
    "16230": {
      "op": "MSTORE"
    },
    "16231": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2148,
        2218
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "16232": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2148,
        2218
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "16233": {
      "op": "POP"
    },
    "16234": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2228,
        2325
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2F59"
    },
    "16237": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2228,
        2325
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "16238": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2248,
        2253
      ],
      "op": "DUP6",
      "path": "23"
    },
    "16239": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2248,
        2253
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "16240": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "16245": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "16247": {
      "op": "SHL"
    },
    "16248": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2278,
        2300
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "16249": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "16251": {
      "op": "ADD"
    },
    "16252": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2255,
        2324
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2F22"
    },
    "16255": {
      "op": "JUMP"
    },
    "16256": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7546,
        8238
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "16257": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7692,
        7704
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x60"
    },
    "16259": {
      "branch": 208,
      "fn": "Address.verifyCallResult",
      "offset": [
        7720,
        7727
      ],
      "op": "DUP4",
      "path": "27"
    },
    "16260": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7716,
        8232
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "16261": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7716,
        8232
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3F8F"
    },
    "16264": {
      "branch": 208,
      "fn": "Address.verifyCallResult",
      "offset": [
        7716,
        8232
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "16265": {
      "op": "POP"
    },
    "16266": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7750,
        7760
      ],
      "op": "DUP2",
      "path": "27",
      "statement": 151
    },
    "16267": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7743,
        7760
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x161E"
    },
    "16270": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7743,
        7760
      ],
      "op": "JUMP",
      "path": "27"
    },
    "16271": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7716,
        8232
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "16272": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7861,
        7878
      ],
      "op": "DUP3",
      "path": "27"
    },
    "16273": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7861,
        7878
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "16274": {
      "branch": 209,
      "fn": "Address.verifyCallResult",
      "offset": [
        7861,
        7882
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "16275": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7857,
        8222
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3F9F"
    },
    "16278": {
      "branch": 209,
      "fn": "Address.verifyCallResult",
      "offset": [
        7857,
        8222
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "16279": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8055,
        8065
      ],
      "op": "DUP3",
      "path": "27"
    },
    "16280": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8049,
        8066
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "16281": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8115,
        8130
      ],
      "op": "DUP1",
      "path": "27"
    },
    "16282": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8102,
        8112
      ],
      "op": "DUP5",
      "path": "27"
    },
    "16283": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8098,
        8100
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "16285": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8094,
        8113
      ],
      "op": "ADD",
      "path": "27"
    },
    "16286": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8087,
        8131
      ],
      "op": "REVERT",
      "path": "27"
    },
    "16287": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7857,
        8222
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "16288": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8194,
        8206
      ],
      "op": "DUP2",
      "path": "27",
      "statement": 152
    },
    "16289": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8187,
        8207
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "16291": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8187,
        8207
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "16292": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "16296": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "16298": {
      "op": "SHL"
    },
    "16299": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8187,
        8207
      ],
      "op": "DUP2",
      "path": "27"
    },
    "16300": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8187,
        8207
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "16301": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8187,
        8207
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "16303": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8187,
        8207
      ],
      "op": "ADD",
      "path": "27"
    },
    "16304": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8187,
        8207
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x8AC"
    },
    "16307": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8187,
        8207
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "16308": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8187,
        8207
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "16309": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8187,
        8207
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4022"
    },
    "16312": {
      "fn": "Address.verifyCallResult",
      "jump": "i",
      "offset": [
        8187,
        8207
      ],
      "op": "JUMP",
      "path": "27"
    },
    "16313": {
      "op": "JUMPDEST"
    },
    "16314": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16316": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16318": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16320": {
      "op": "SHL"
    },
    "16321": {
      "op": "SUB"
    },
    "16322": {
      "op": "DUP2"
    },
    "16323": {
      "op": "AND"
    },
    "16324": {
      "op": "DUP2"
    },
    "16325": {
      "op": "EQ"
    },
    "16326": {
      "op": "PUSH2",
      "value": "0x2EEB"
    },
    "16329": {
      "op": "JUMPI"
    },
    "16330": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16332": {
      "op": "DUP1"
    },
    "16333": {
      "op": "REVERT"
    },
    "16334": {
      "op": "JUMPDEST"
    },
    "16335": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16337": {
      "op": "DUP1"
    },
    "16338": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16340": {
      "op": "DUP4"
    },
    "16341": {
      "op": "DUP6"
    },
    "16342": {
      "op": "SUB"
    },
    "16343": {
      "op": "SLT"
    },
    "16344": {
      "op": "ISZERO"
    },
    "16345": {
      "op": "PUSH2",
      "value": "0x3FE1"
    },
    "16348": {
      "op": "JUMPI"
    },
    "16349": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16351": {
      "op": "DUP1"
    },
    "16352": {
      "op": "REVERT"
    },
    "16353": {
      "op": "JUMPDEST"
    },
    "16354": {
      "op": "DUP3"
    },
    "16355": {
      "op": "CALLDATALOAD"
    },
    "16356": {
      "op": "SWAP2"
    },
    "16357": {
      "op": "POP"
    },
    "16358": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16360": {
      "op": "DUP4"
    },
    "16361": {
      "op": "ADD"
    },
    "16362": {
      "op": "CALLDATALOAD"
    },
    "16363": {
      "op": "PUSH2",
      "value": "0x3FF3"
    },
    "16366": {
      "op": "DUP2"
    },
    "16367": {
      "op": "PUSH2",
      "value": "0x3FB9"
    },
    "16370": {
      "jump": "i",
      "op": "JUMP"
    },
    "16371": {
      "op": "JUMPDEST"
    },
    "16372": {
      "op": "DUP1"
    },
    "16373": {
      "op": "SWAP2"
    },
    "16374": {
      "op": "POP"
    },
    "16375": {
      "op": "POP"
    },
    "16376": {
      "op": "SWAP3"
    },
    "16377": {
      "op": "POP"
    },
    "16378": {
      "op": "SWAP3"
    },
    "16379": {
      "op": "SWAP1"
    },
    "16380": {
      "op": "POP"
    },
    "16381": {
      "jump": "o",
      "op": "JUMP"
    },
    "16382": {
      "op": "JUMPDEST"
    },
    "16383": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16385": {
      "op": "JUMPDEST"
    },
    "16386": {
      "op": "DUP4"
    },
    "16387": {
      "op": "DUP2"
    },
    "16388": {
      "op": "LT"
    },
    "16389": {
      "op": "ISZERO"
    },
    "16390": {
      "op": "PUSH2",
      "value": "0x4019"
    },
    "16393": {
      "op": "JUMPI"
    },
    "16394": {
      "op": "DUP2"
    },
    "16395": {
      "op": "DUP2"
    },
    "16396": {
      "op": "ADD"
    },
    "16397": {
      "op": "MLOAD"
    },
    "16398": {
      "op": "DUP4"
    },
    "16399": {
      "op": "DUP3"
    },
    "16400": {
      "op": "ADD"
    },
    "16401": {
      "op": "MSTORE"
    },
    "16402": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16404": {
      "op": "ADD"
    },
    "16405": {
      "op": "PUSH2",
      "value": "0x4001"
    },
    "16408": {
      "op": "JUMP"
    },
    "16409": {
      "op": "JUMPDEST"
    },
    "16410": {
      "op": "POP"
    },
    "16411": {
      "op": "POP"
    },
    "16412": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16414": {
      "op": "SWAP2"
    },
    "16415": {
      "op": "ADD"
    },
    "16416": {
      "op": "MSTORE"
    },
    "16417": {
      "jump": "o",
      "op": "JUMP"
    },
    "16418": {
      "op": "JUMPDEST"
    },
    "16419": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16421": {
      "op": "DUP2"
    },
    "16422": {
      "op": "MSTORE"
    },
    "16423": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16425": {
      "op": "DUP3"
    },
    "16426": {
      "op": "MLOAD"
    },
    "16427": {
      "op": "DUP1"
    },
    "16428": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16430": {
      "op": "DUP5"
    },
    "16431": {
      "op": "ADD"
    },
    "16432": {
      "op": "MSTORE"
    },
    "16433": {
      "op": "PUSH2",
      "value": "0x4041"
    },
    "16436": {
      "op": "DUP2"
    },
    "16437": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16439": {
      "op": "DUP6"
    },
    "16440": {
      "op": "ADD"
    },
    "16441": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16443": {
      "op": "DUP8"
    },
    "16444": {
      "op": "ADD"
    },
    "16445": {
      "op": "PUSH2",
      "value": "0x3FFE"
    },
    "16448": {
      "jump": "i",
      "op": "JUMP"
    },
    "16449": {
      "op": "JUMPDEST"
    },
    "16450": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "16452": {
      "op": "ADD"
    },
    "16453": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "16455": {
      "op": "NOT"
    },
    "16456": {
      "op": "AND"
    },
    "16457": {
      "op": "SWAP2"
    },
    "16458": {
      "op": "SWAP1"
    },
    "16459": {
      "op": "SWAP2"
    },
    "16460": {
      "op": "ADD"
    },
    "16461": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16463": {
      "op": "ADD"
    },
    "16464": {
      "op": "SWAP3"
    },
    "16465": {
      "op": "SWAP2"
    },
    "16466": {
      "op": "POP"
    },
    "16467": {
      "op": "POP"
    },
    "16468": {
      "jump": "o",
      "op": "JUMP"
    },
    "16469": {
      "op": "JUMPDEST"
    },
    "16470": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16472": {
      "op": "DUP1"
    },
    "16473": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16475": {
      "op": "DUP4"
    },
    "16476": {
      "op": "DUP6"
    },
    "16477": {
      "op": "SUB"
    },
    "16478": {
      "op": "SLT"
    },
    "16479": {
      "op": "ISZERO"
    },
    "16480": {
      "op": "PUSH2",
      "value": "0x4068"
    },
    "16483": {
      "op": "JUMPI"
    },
    "16484": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16486": {
      "op": "DUP1"
    },
    "16487": {
      "op": "REVERT"
    },
    "16488": {
      "op": "JUMPDEST"
    },
    "16489": {
      "op": "DUP3"
    },
    "16490": {
      "op": "CALLDATALOAD"
    },
    "16491": {
      "op": "PUSH2",
      "value": "0x4073"
    },
    "16494": {
      "op": "DUP2"
    },
    "16495": {
      "op": "PUSH2",
      "value": "0x3FB9"
    },
    "16498": {
      "jump": "i",
      "op": "JUMP"
    },
    "16499": {
      "op": "JUMPDEST"
    },
    "16500": {
      "op": "SWAP5"
    },
    "16501": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16503": {
      "op": "SWAP4"
    },
    "16504": {
      "op": "SWAP1"
    },
    "16505": {
      "op": "SWAP4"
    },
    "16506": {
      "op": "ADD"
    },
    "16507": {
      "op": "CALLDATALOAD"
    },
    "16508": {
      "op": "SWAP4"
    },
    "16509": {
      "op": "POP"
    },
    "16510": {
      "op": "POP"
    },
    "16511": {
      "op": "POP"
    },
    "16512": {
      "jump": "o",
      "op": "JUMP"
    },
    "16513": {
      "op": "JUMPDEST"
    },
    "16514": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16516": {
      "op": "DUP1"
    },
    "16517": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16519": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16521": {
      "op": "DUP5"
    },
    "16522": {
      "op": "DUP7"
    },
    "16523": {
      "op": "SUB"
    },
    "16524": {
      "op": "SLT"
    },
    "16525": {
      "op": "ISZERO"
    },
    "16526": {
      "op": "PUSH2",
      "value": "0x4096"
    },
    "16529": {
      "op": "JUMPI"
    },
    "16530": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16532": {
      "op": "DUP1"
    },
    "16533": {
      "op": "REVERT"
    },
    "16534": {
      "op": "JUMPDEST"
    },
    "16535": {
      "op": "DUP4"
    },
    "16536": {
      "op": "CALLDATALOAD"
    },
    "16537": {
      "op": "PUSH2",
      "value": "0x40A1"
    },
    "16540": {
      "op": "DUP2"
    },
    "16541": {
      "op": "PUSH2",
      "value": "0x3FB9"
    },
    "16544": {
      "jump": "i",
      "op": "JUMP"
    },
    "16545": {
      "op": "JUMPDEST"
    },
    "16546": {
      "op": "SWAP3"
    },
    "16547": {
      "op": "POP"
    },
    "16548": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16550": {
      "op": "DUP5"
    },
    "16551": {
      "op": "ADD"
    },
    "16552": {
      "op": "CALLDATALOAD"
    },
    "16553": {
      "op": "PUSH2",
      "value": "0x40B1"
    },
    "16556": {
      "op": "DUP2"
    },
    "16557": {
      "op": "PUSH2",
      "value": "0x3FB9"
    },
    "16560": {
      "jump": "i",
      "op": "JUMP"
    },
    "16561": {
      "op": "JUMPDEST"
    },
    "16562": {
      "op": "SWAP3"
    },
    "16563": {
      "op": "SWAP6"
    },
    "16564": {
      "op": "SWAP3"
    },
    "16565": {
      "op": "SWAP5"
    },
    "16566": {
      "op": "POP"
    },
    "16567": {
      "op": "POP"
    },
    "16568": {
      "op": "POP"
    },
    "16569": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16571": {
      "op": "SWAP2"
    },
    "16572": {
      "op": "SWAP1"
    },
    "16573": {
      "op": "SWAP2"
    },
    "16574": {
      "op": "ADD"
    },
    "16575": {
      "op": "CALLDATALOAD"
    },
    "16576": {
      "op": "SWAP1"
    },
    "16577": {
      "jump": "o",
      "op": "JUMP"
    },
    "16578": {
      "op": "JUMPDEST"
    },
    "16579": {
      "op": "DUP1"
    },
    "16580": {
      "op": "ISZERO"
    },
    "16581": {
      "op": "ISZERO"
    },
    "16582": {
      "op": "DUP2"
    },
    "16583": {
      "op": "EQ"
    },
    "16584": {
      "op": "PUSH2",
      "value": "0x2EEB"
    },
    "16587": {
      "op": "JUMPI"
    },
    "16588": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16590": {
      "op": "DUP1"
    },
    "16591": {
      "op": "REVERT"
    },
    "16592": {
      "op": "JUMPDEST"
    },
    "16593": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16595": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16597": {
      "op": "DUP3"
    },
    "16598": {
      "op": "DUP5"
    },
    "16599": {
      "op": "SUB"
    },
    "16600": {
      "op": "SLT"
    },
    "16601": {
      "op": "ISZERO"
    },
    "16602": {
      "op": "PUSH2",
      "value": "0x40E2"
    },
    "16605": {
      "op": "JUMPI"
    },
    "16606": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16608": {
      "op": "DUP1"
    },
    "16609": {
      "op": "REVERT"
    },
    "16610": {
      "op": "JUMPDEST"
    },
    "16611": {
      "op": "DUP2"
    },
    "16612": {
      "op": "CALLDATALOAD"
    },
    "16613": {
      "op": "PUSH2",
      "value": "0x161E"
    },
    "16616": {
      "op": "DUP2"
    },
    "16617": {
      "op": "PUSH2",
      "value": "0x40C2"
    },
    "16620": {
      "jump": "i",
      "op": "JUMP"
    },
    "16621": {
      "op": "JUMPDEST"
    },
    "16622": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16624": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16626": {
      "op": "DUP3"
    },
    "16627": {
      "op": "DUP5"
    },
    "16628": {
      "op": "SUB"
    },
    "16629": {
      "op": "SLT"
    },
    "16630": {
      "op": "ISZERO"
    },
    "16631": {
      "op": "PUSH2",
      "value": "0x40FF"
    },
    "16634": {
      "op": "JUMPI"
    },
    "16635": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16637": {
      "op": "DUP1"
    },
    "16638": {
      "op": "REVERT"
    },
    "16639": {
      "op": "JUMPDEST"
    },
    "16640": {
      "op": "POP"
    },
    "16641": {
      "op": "CALLDATALOAD"
    },
    "16642": {
      "op": "SWAP2"
    },
    "16643": {
      "op": "SWAP1"
    },
    "16644": {
      "op": "POP"
    },
    "16645": {
      "jump": "o",
      "op": "JUMP"
    },
    "16646": {
      "op": "JUMPDEST"
    },
    "16647": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16649": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16651": {
      "op": "DUP3"
    },
    "16652": {
      "op": "DUP5"
    },
    "16653": {
      "op": "SUB"
    },
    "16654": {
      "op": "SLT"
    },
    "16655": {
      "op": "ISZERO"
    },
    "16656": {
      "op": "PUSH2",
      "value": "0x4118"
    },
    "16659": {
      "op": "JUMPI"
    },
    "16660": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16662": {
      "op": "DUP1"
    },
    "16663": {
      "op": "REVERT"
    },
    "16664": {
      "op": "JUMPDEST"
    },
    "16665": {
      "op": "DUP2"
    },
    "16666": {
      "op": "CALLDATALOAD"
    },
    "16667": {
      "op": "PUSH2",
      "value": "0x161E"
    },
    "16670": {
      "op": "DUP2"
    },
    "16671": {
      "op": "PUSH2",
      "value": "0x3FB9"
    },
    "16674": {
      "jump": "i",
      "op": "JUMP"
    },
    "16675": {
      "op": "JUMPDEST"
    },
    "16676": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16678": {
      "op": "DUP1"
    },
    "16679": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16681": {
      "op": "DUP4"
    },
    "16682": {
      "op": "DUP6"
    },
    "16683": {
      "op": "SUB"
    },
    "16684": {
      "op": "SLT"
    },
    "16685": {
      "op": "ISZERO"
    },
    "16686": {
      "op": "PUSH2",
      "value": "0x4136"
    },
    "16689": {
      "op": "JUMPI"
    },
    "16690": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16692": {
      "op": "DUP1"
    },
    "16693": {
      "op": "REVERT"
    },
    "16694": {
      "op": "JUMPDEST"
    },
    "16695": {
      "op": "DUP3"
    },
    "16696": {
      "op": "CALLDATALOAD"
    },
    "16697": {
      "op": "PUSH2",
      "value": "0x4141"
    },
    "16700": {
      "op": "DUP2"
    },
    "16701": {
      "op": "PUSH2",
      "value": "0x3FB9"
    },
    "16704": {
      "jump": "i",
      "op": "JUMP"
    },
    "16705": {
      "op": "JUMPDEST"
    },
    "16706": {
      "op": "SWAP2"
    },
    "16707": {
      "op": "POP"
    },
    "16708": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16710": {
      "op": "DUP4"
    },
    "16711": {
      "op": "ADD"
    },
    "16712": {
      "op": "CALLDATALOAD"
    },
    "16713": {
      "op": "PUSH2",
      "value": "0x3FF3"
    },
    "16716": {
      "op": "DUP2"
    },
    "16717": {
      "op": "PUSH2",
      "value": "0x3FB9"
    },
    "16720": {
      "jump": "i",
      "op": "JUMP"
    },
    "16721": {
      "op": "JUMPDEST"
    },
    "16722": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16724": {
      "op": "DUP1"
    },
    "16725": {
      "op": "DUP3"
    },
    "16726": {
      "op": "MSTORE"
    },
    "16727": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "16729": {
      "op": "SWAP1"
    },
    "16730": {
      "op": "DUP3"
    },
    "16731": {
      "op": "ADD"
    },
    "16732": {
      "op": "MSTORE"
    },
    "16733": {
      "op": "PUSH17",
      "value": "0x23A2AB1D1027B930B1B6329022B93937B9"
    },
    "16751": {
      "op": "PUSH1",
      "value": "0x79"
    },
    "16753": {
      "op": "SHL"
    },
    "16754": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16756": {
      "op": "DUP3"
    },
    "16757": {
      "op": "ADD"
    },
    "16758": {
      "op": "MSTORE"
    },
    "16759": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16761": {
      "op": "ADD"
    },
    "16762": {
      "op": "SWAP1"
    },
    "16763": {
      "jump": "o",
      "op": "JUMP"
    },
    "16764": {
      "op": "JUMPDEST"
    },
    "16765": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "16770": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "16772": {
      "op": "SHL"
    },
    "16773": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16775": {
      "op": "MSTORE"
    },
    "16776": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "16778": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "16780": {
      "op": "MSTORE"
    },
    "16781": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "16783": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16785": {
      "op": "REVERT"
    },
    "16786": {
      "op": "JUMPDEST"
    },
    "16787": {
      "op": "DUP1"
    },
    "16788": {
      "op": "DUP3"
    },
    "16789": {
      "op": "MUL"
    },
    "16790": {
      "op": "DUP2"
    },
    "16791": {
      "op": "ISZERO"
    },
    "16792": {
      "op": "DUP3"
    },
    "16793": {
      "op": "DUP3"
    },
    "16794": {
      "op": "DIV"
    },
    "16795": {
      "op": "DUP5"
    },
    "16796": {
      "op": "EQ"
    },
    "16797": {
      "op": "OR"
    },
    "16798": {
      "op": "PUSH2",
      "value": "0x13C3"
    },
    "16801": {
      "op": "JUMPI"
    },
    "16802": {
      "op": "PUSH2",
      "value": "0x13C3"
    },
    "16805": {
      "op": "PUSH2",
      "value": "0x417C"
    },
    "16808": {
      "jump": "i",
      "op": "JUMP"
    },
    "16809": {
      "op": "JUMPDEST"
    },
    "16810": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "16815": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "16817": {
      "op": "SHL"
    },
    "16818": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16820": {
      "op": "MSTORE"
    },
    "16821": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "16823": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "16825": {
      "op": "MSTORE"
    },
    "16826": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "16828": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16830": {
      "op": "REVERT"
    },
    "16831": {
      "op": "JUMPDEST"
    },
    "16832": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16834": {
      "op": "DUP3"
    },
    "16835": {
      "op": "PUSH2",
      "value": "0x41CE"
    },
    "16838": {
      "op": "JUMPI"
    },
    "16839": {
      "op": "PUSH2",
      "value": "0x41CE"
    },
    "16842": {
      "op": "PUSH2",
      "value": "0x41A9"
    },
    "16845": {
      "jump": "i",
      "op": "JUMP"
    },
    "16846": {
      "op": "JUMPDEST"
    },
    "16847": {
      "op": "POP"
    },
    "16848": {
      "op": "DIV"
    },
    "16849": {
      "op": "SWAP1"
    },
    "16850": {
      "jump": "o",
      "op": "JUMP"
    },
    "16851": {
      "op": "JUMPDEST"
    },
    "16852": {
      "op": "DUP1"
    },
    "16853": {
      "op": "MLOAD"
    },
    "16854": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "16856": {
      "op": "DUP2"
    },
    "16857": {
      "op": "AND"
    },
    "16858": {
      "op": "DUP2"
    },
    "16859": {
      "op": "EQ"
    },
    "16860": {
      "op": "PUSH2",
      "value": "0x41E4"
    },
    "16863": {
      "op": "JUMPI"
    },
    "16864": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16866": {
      "op": "DUP1"
    },
    "16867": {
      "op": "REVERT"
    },
    "16868": {
      "op": "JUMPDEST"
    },
    "16869": {
      "op": "SWAP2"
    },
    "16870": {
      "op": "SWAP1"
    },
    "16871": {
      "op": "POP"
    },
    "16872": {
      "jump": "o",
      "op": "JUMP"
    },
    "16873": {
      "op": "JUMPDEST"
    },
    "16874": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16876": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16878": {
      "op": "DUP3"
    },
    "16879": {
      "op": "DUP5"
    },
    "16880": {
      "op": "SUB"
    },
    "16881": {
      "op": "SLT"
    },
    "16882": {
      "op": "ISZERO"
    },
    "16883": {
      "op": "PUSH2",
      "value": "0x41FB"
    },
    "16886": {
      "op": "JUMPI"
    },
    "16887": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16889": {
      "op": "DUP1"
    },
    "16890": {
      "op": "REVERT"
    },
    "16891": {
      "op": "JUMPDEST"
    },
    "16892": {
      "op": "PUSH2",
      "value": "0x161E"
    },
    "16895": {
      "op": "DUP3"
    },
    "16896": {
      "op": "PUSH2",
      "value": "0x41D3"
    },
    "16899": {
      "jump": "i",
      "op": "JUMP"
    },
    "16900": {
      "op": "JUMPDEST"
    },
    "16901": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16903": {
      "op": "DUP2"
    },
    "16904": {
      "op": "DUP2"
    },
    "16905": {
      "op": "JUMPDEST"
    },
    "16906": {
      "op": "DUP1"
    },
    "16907": {
      "op": "DUP6"
    },
    "16908": {
      "op": "GT"
    },
    "16909": {
      "op": "ISZERO"
    },
    "16910": {
      "op": "PUSH2",
      "value": "0x423F"
    },
    "16913": {
      "op": "JUMPI"
    },
    "16914": {
      "op": "DUP2"
    },
    "16915": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16917": {
      "op": "NOT"
    },
    "16918": {
      "op": "DIV"
    },
    "16919": {
      "op": "DUP3"
    },
    "16920": {
      "op": "GT"
    },
    "16921": {
      "op": "ISZERO"
    },
    "16922": {
      "op": "PUSH2",
      "value": "0x4225"
    },
    "16925": {
      "op": "JUMPI"
    },
    "16926": {
      "op": "PUSH2",
      "value": "0x4225"
    },
    "16929": {
      "op": "PUSH2",
      "value": "0x417C"
    },
    "16932": {
      "jump": "i",
      "op": "JUMP"
    },
    "16933": {
      "op": "JUMPDEST"
    },
    "16934": {
      "op": "DUP1"
    },
    "16935": {
      "op": "DUP6"
    },
    "16936": {
      "op": "AND"
    },
    "16937": {
      "op": "ISZERO"
    },
    "16938": {
      "op": "PUSH2",
      "value": "0x4232"
    },
    "16941": {
      "op": "JUMPI"
    },
    "16942": {
      "op": "SWAP2"
    },
    "16943": {
      "op": "DUP2"
    },
    "16944": {
      "op": "MUL"
    },
    "16945": {
      "op": "SWAP2"
    },
    "16946": {
      "op": "JUMPDEST"
    },
    "16947": {
      "op": "SWAP4"
    },
    "16948": {
      "op": "DUP5"
    },
    "16949": {
      "op": "SHR"
    },
    "16950": {
      "op": "SWAP4"
    },
    "16951": {
      "op": "SWAP1"
    },
    "16952": {
      "op": "DUP1"
    },
    "16953": {
      "op": "MUL"
    },
    "16954": {
      "op": "SWAP1"
    },
    "16955": {
      "op": "PUSH2",
      "value": "0x4209"
    },
    "16958": {
      "op": "JUMP"
    },
    "16959": {
      "op": "JUMPDEST"
    },
    "16960": {
      "op": "POP"
    },
    "16961": {
      "op": "SWAP3"
    },
    "16962": {
      "op": "POP"
    },
    "16963": {
      "op": "SWAP3"
    },
    "16964": {
      "op": "SWAP1"
    },
    "16965": {
      "op": "POP"
    },
    "16966": {
      "jump": "o",
      "op": "JUMP"
    },
    "16967": {
      "op": "JUMPDEST"
    },
    "16968": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16970": {
      "op": "DUP3"
    },
    "16971": {
      "op": "PUSH2",
      "value": "0x4256"
    },
    "16974": {
      "op": "JUMPI"
    },
    "16975": {
      "op": "POP"
    },
    "16976": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16978": {
      "op": "PUSH2",
      "value": "0x13C3"
    },
    "16981": {
      "op": "JUMP"
    },
    "16982": {
      "op": "JUMPDEST"
    },
    "16983": {
      "op": "DUP2"
    },
    "16984": {
      "op": "PUSH2",
      "value": "0x4263"
    },
    "16987": {
      "op": "JUMPI"
    },
    "16988": {
      "op": "POP"
    },
    "16989": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16991": {
      "op": "PUSH2",
      "value": "0x13C3"
    },
    "16994": {
      "op": "JUMP"
    },
    "16995": {
      "op": "JUMPDEST"
    },
    "16996": {
      "op": "DUP2"
    },
    "16997": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16999": {
      "op": "DUP2"
    },
    "17000": {
      "op": "EQ"
    },
    "17001": {
      "op": "PUSH2",
      "value": "0x4279"
    },
    "17004": {
      "op": "JUMPI"
    },
    "17005": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "17007": {
      "op": "DUP2"
    },
    "17008": {
      "op": "EQ"
    },
    "17009": {
      "op": "PUSH2",
      "value": "0x4283"
    },
    "17012": {
      "op": "JUMPI"
    },
    "17013": {
      "op": "PUSH2",
      "value": "0x429F"
    },
    "17016": {
      "op": "JUMP"
    },
    "17017": {
      "op": "JUMPDEST"
    },
    "17018": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17020": {
      "op": "SWAP2"
    },
    "17021": {
      "op": "POP"
    },
    "17022": {
      "op": "POP"
    },
    "17023": {
      "op": "PUSH2",
      "value": "0x13C3"
    },
    "17026": {
      "op": "JUMP"
    },
    "17027": {
      "op": "JUMPDEST"
    },
    "17028": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "17030": {
      "op": "DUP5"
    },
    "17031": {
      "op": "GT"
    },
    "17032": {
      "op": "ISZERO"
    },
    "17033": {
      "op": "PUSH2",
      "value": "0x4294"
    },
    "17036": {
      "op": "JUMPI"
    },
    "17037": {
      "op": "PUSH2",
      "value": "0x4294"
    },
    "17040": {
      "op": "PUSH2",
      "value": "0x417C"
    },
    "17043": {
      "jump": "i",
      "op": "JUMP"
    },
    "17044": {
      "op": "JUMPDEST"
    },
    "17045": {
      "op": "POP"
    },
    "17046": {
      "op": "POP"
    },
    "17047": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17049": {
      "op": "DUP3"
    },
    "17050": {
      "op": "SHL"
    },
    "17051": {
      "op": "PUSH2",
      "value": "0x13C3"
    },
    "17054": {
      "op": "JUMP"
    },
    "17055": {
      "op": "JUMPDEST"
    },
    "17056": {
      "op": "POP"
    },
    "17057": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17059": {
      "op": "DUP4"
    },
    "17060": {
      "op": "LT"
    },
    "17061": {
      "op": "PUSH2",
      "value": "0x133"
    },
    "17064": {
      "op": "DUP4"
    },
    "17065": {
      "op": "LT"
    },
    "17066": {
      "op": "AND"
    },
    "17067": {
      "op": "PUSH1",
      "value": "0x4E"
    },
    "17069": {
      "op": "DUP5"
    },
    "17070": {
      "op": "LT"
    },
    "17071": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "17073": {
      "op": "DUP5"
    },
    "17074": {
      "op": "LT"
    },
    "17075": {
      "op": "AND"
    },
    "17076": {
      "op": "OR"
    },
    "17077": {
      "op": "ISZERO"
    },
    "17078": {
      "op": "PUSH2",
      "value": "0x42C2"
    },
    "17081": {
      "op": "JUMPI"
    },
    "17082": {
      "op": "POP"
    },
    "17083": {
      "op": "DUP2"
    },
    "17084": {
      "op": "DUP2"
    },
    "17085": {
      "op": "EXP"
    },
    "17086": {
      "op": "PUSH2",
      "value": "0x13C3"
    },
    "17089": {
      "op": "JUMP"
    },
    "17090": {
      "op": "JUMPDEST"
    },
    "17091": {
      "op": "PUSH2",
      "value": "0x42CC"
    },
    "17094": {
      "op": "DUP4"
    },
    "17095": {
      "op": "DUP4"
    },
    "17096": {
      "op": "PUSH2",
      "value": "0x4204"
    },
    "17099": {
      "jump": "i",
      "op": "JUMP"
    },
    "17100": {
      "op": "JUMPDEST"
    },
    "17101": {
      "op": "DUP1"
    },
    "17102": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17104": {
      "op": "NOT"
    },
    "17105": {
      "op": "DIV"
    },
    "17106": {
      "op": "DUP3"
    },
    "17107": {
      "op": "GT"
    },
    "17108": {
      "op": "ISZERO"
    },
    "17109": {
      "op": "PUSH2",
      "value": "0x42E0"
    },
    "17112": {
      "op": "JUMPI"
    },
    "17113": {
      "op": "PUSH2",
      "value": "0x42E0"
    },
    "17116": {
      "op": "PUSH2",
      "value": "0x417C"
    },
    "17119": {
      "jump": "i",
      "op": "JUMP"
    },
    "17120": {
      "op": "JUMPDEST"
    },
    "17121": {
      "op": "MUL"
    },
    "17122": {
      "op": "SWAP4"
    },
    "17123": {
      "op": "SWAP3"
    },
    "17124": {
      "op": "POP"
    },
    "17125": {
      "op": "POP"
    },
    "17126": {
      "op": "POP"
    },
    "17127": {
      "jump": "o",
      "op": "JUMP"
    },
    "17128": {
      "op": "JUMPDEST"
    },
    "17129": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17131": {
      "op": "PUSH2",
      "value": "0x161E"
    },
    "17134": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "17136": {
      "op": "DUP5"
    },
    "17137": {
      "op": "AND"
    },
    "17138": {
      "op": "DUP4"
    },
    "17139": {
      "op": "PUSH2",
      "value": "0x4247"
    },
    "17142": {
      "jump": "i",
      "op": "JUMP"
    },
    "17143": {
      "op": "JUMPDEST"
    },
    "17144": {
      "op": "DUP2"
    },
    "17145": {
      "op": "DUP2"
    },
    "17146": {
      "op": "SUB"
    },
    "17147": {
      "op": "DUP2"
    },
    "17148": {
      "op": "DUP2"
    },
    "17149": {
      "op": "GT"
    },
    "17150": {
      "op": "ISZERO"
    },
    "17151": {
      "op": "PUSH2",
      "value": "0x13C3"
    },
    "17154": {
      "op": "JUMPI"
    },
    "17155": {
      "op": "PUSH2",
      "value": "0x13C3"
    },
    "17158": {
      "op": "PUSH2",
      "value": "0x417C"
    },
    "17161": {
      "jump": "i",
      "op": "JUMP"
    },
    "17162": {
      "op": "JUMPDEST"
    },
    "17163": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17165": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17167": {
      "op": "DUP3"
    },
    "17168": {
      "op": "DUP5"
    },
    "17169": {
      "op": "SUB"
    },
    "17170": {
      "op": "SLT"
    },
    "17171": {
      "op": "ISZERO"
    },
    "17172": {
      "op": "PUSH2",
      "value": "0x431C"
    },
    "17175": {
      "op": "JUMPI"
    },
    "17176": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17178": {
      "op": "DUP1"
    },
    "17179": {
      "op": "REVERT"
    },
    "17180": {
      "op": "JUMPDEST"
    },
    "17181": {
      "op": "POP"
    },
    "17182": {
      "op": "MLOAD"
    },
    "17183": {
      "op": "SWAP2"
    },
    "17184": {
      "op": "SWAP1"
    },
    "17185": {
      "op": "POP"
    },
    "17186": {
      "jump": "o",
      "op": "JUMP"
    },
    "17187": {
      "op": "JUMPDEST"
    },
    "17188": {
      "op": "DUP1"
    },
    "17189": {
      "op": "DUP3"
    },
    "17190": {
      "op": "ADD"
    },
    "17191": {
      "op": "DUP1"
    },
    "17192": {
      "op": "DUP3"
    },
    "17193": {
      "op": "GT"
    },
    "17194": {
      "op": "ISZERO"
    },
    "17195": {
      "op": "PUSH2",
      "value": "0x13C3"
    },
    "17198": {
      "op": "JUMPI"
    },
    "17199": {
      "op": "PUSH2",
      "value": "0x13C3"
    },
    "17202": {
      "op": "PUSH2",
      "value": "0x417C"
    },
    "17205": {
      "jump": "i",
      "op": "JUMP"
    },
    "17206": {
      "op": "JUMPDEST"
    },
    "17207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17209": {
      "op": "DUP2"
    },
    "17210": {
      "op": "DUP2"
    },
    "17211": {
      "op": "SHR"
    },
    "17212": {
      "op": "SWAP1"
    },
    "17213": {
      "op": "DUP3"
    },
    "17214": {
      "op": "AND"
    },
    "17215": {
      "op": "DUP1"
    },
    "17216": {
      "op": "PUSH2",
      "value": "0x434A"
    },
    "17219": {
      "op": "JUMPI"
    },
    "17220": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "17222": {
      "op": "DUP3"
    },
    "17223": {
      "op": "AND"
    },
    "17224": {
      "op": "SWAP2"
    },
    "17225": {
      "op": "POP"
    },
    "17226": {
      "op": "JUMPDEST"
    },
    "17227": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17229": {
      "op": "DUP3"
    },
    "17230": {
      "op": "LT"
    },
    "17231": {
      "op": "DUP2"
    },
    "17232": {
      "op": "SUB"
    },
    "17233": {
      "op": "PUSH2",
      "value": "0x436A"
    },
    "17236": {
      "op": "JUMPI"
    },
    "17237": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "17242": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "17244": {
      "op": "SHL"
    },
    "17245": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17247": {
      "op": "MSTORE"
    },
    "17248": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "17250": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "17252": {
      "op": "MSTORE"
    },
    "17253": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "17255": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17257": {
      "op": "REVERT"
    },
    "17258": {
      "op": "JUMPDEST"
    },
    "17259": {
      "op": "POP"
    },
    "17260": {
      "op": "SWAP2"
    },
    "17261": {
      "op": "SWAP1"
    },
    "17262": {
      "op": "POP"
    },
    "17263": {
      "jump": "o",
      "op": "JUMP"
    },
    "17264": {
      "op": "JUMPDEST"
    },
    "17265": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "17270": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "17272": {
      "op": "SHL"
    },
    "17273": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17275": {
      "op": "MSTORE"
    },
    "17276": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "17278": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "17280": {
      "op": "MSTORE"
    },
    "17281": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "17283": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17285": {
      "op": "REVERT"
    },
    "17286": {
      "op": "JUMPDEST"
    },
    "17287": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17289": {
      "op": "MLOAD"
    },
    "17290": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "17293": {
      "op": "DUP2"
    },
    "17294": {
      "op": "ADD"
    },
    "17295": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "17304": {
      "op": "DUP2"
    },
    "17305": {
      "op": "GT"
    },
    "17306": {
      "op": "DUP3"
    },
    "17307": {
      "op": "DUP3"
    },
    "17308": {
      "op": "LT"
    },
    "17309": {
      "op": "OR"
    },
    "17310": {
      "op": "ISZERO"
    },
    "17311": {
      "op": "PUSH2",
      "value": "0x43B8"
    },
    "17314": {
      "op": "JUMPI"
    },
    "17315": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "17320": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "17322": {
      "op": "SHL"
    },
    "17323": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17325": {
      "op": "MSTORE"
    },
    "17326": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "17328": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "17330": {
      "op": "MSTORE"
    },
    "17331": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "17333": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17335": {
      "op": "REVERT"
    },
    "17336": {
      "op": "JUMPDEST"
    },
    "17337": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17339": {
      "op": "MSTORE"
    },
    "17340": {
      "op": "SWAP1"
    },
    "17341": {
      "jump": "o",
      "op": "JUMP"
    },
    "17342": {
      "op": "JUMPDEST"
    },
    "17343": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17345": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17347": {
      "op": "DUP3"
    },
    "17348": {
      "op": "DUP5"
    },
    "17349": {
      "op": "SUB"
    },
    "17350": {
      "op": "SLT"
    },
    "17351": {
      "op": "ISZERO"
    },
    "17352": {
      "op": "PUSH2",
      "value": "0x43D0"
    },
    "17355": {
      "op": "JUMPI"
    },
    "17356": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17358": {
      "op": "DUP1"
    },
    "17359": {
      "op": "REVERT"
    },
    "17360": {
      "op": "JUMPDEST"
    },
    "17361": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17363": {
      "op": "MLOAD"
    },
    "17364": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17366": {
      "op": "DUP2"
    },
    "17367": {
      "op": "ADD"
    },
    "17368": {
      "op": "DUP2"
    },
    "17369": {
      "op": "DUP2"
    },
    "17370": {
      "op": "LT"
    },
    "17371": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "17380": {
      "op": "DUP3"
    },
    "17381": {
      "op": "GT"
    },
    "17382": {
      "op": "OR"
    },
    "17383": {
      "op": "ISZERO"
    },
    "17384": {
      "op": "PUSH2",
      "value": "0x4401"
    },
    "17387": {
      "op": "JUMPI"
    },
    "17388": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "17393": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "17395": {
      "op": "SHL"
    },
    "17396": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17398": {
      "op": "MSTORE"
    },
    "17399": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "17401": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "17403": {
      "op": "MSTORE"
    },
    "17404": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "17406": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17408": {
      "op": "REVERT"
    },
    "17409": {
      "op": "JUMPDEST"
    },
    "17410": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17412": {
      "op": "MSTORE"
    },
    "17413": {
      "op": "SWAP2"
    },
    "17414": {
      "op": "MLOAD"
    },
    "17415": {
      "op": "DUP3"
    },
    "17416": {
      "op": "MSTORE"
    },
    "17417": {
      "op": "POP"
    },
    "17418": {
      "op": "SWAP2"
    },
    "17419": {
      "op": "SWAP1"
    },
    "17420": {
      "op": "POP"
    },
    "17421": {
      "jump": "o",
      "op": "JUMP"
    },
    "17422": {
      "op": "JUMPDEST"
    },
    "17423": {
      "op": "DUP1"
    },
    "17424": {
      "op": "MLOAD"
    },
    "17425": {
      "op": "PUSH16",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "17442": {
      "op": "DUP2"
    },
    "17443": {
      "op": "AND"
    },
    "17444": {
      "op": "DUP2"
    },
    "17445": {
      "op": "EQ"
    },
    "17446": {
      "op": "PUSH2",
      "value": "0x41E4"
    },
    "17449": {
      "op": "JUMPI"
    },
    "17450": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17452": {
      "op": "DUP1"
    },
    "17453": {
      "op": "REVERT"
    },
    "17454": {
      "op": "JUMPDEST"
    },
    "17455": {
      "op": "DUP1"
    },
    "17456": {
      "op": "MLOAD"
    },
    "17457": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "17463": {
      "op": "DUP2"
    },
    "17464": {
      "op": "AND"
    },
    "17465": {
      "op": "DUP2"
    },
    "17466": {
      "op": "EQ"
    },
    "17467": {
      "op": "PUSH2",
      "value": "0x41E4"
    },
    "17470": {
      "op": "JUMPI"
    },
    "17471": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17473": {
      "op": "DUP1"
    },
    "17474": {
      "op": "REVERT"
    },
    "17475": {
      "op": "JUMPDEST"
    },
    "17476": {
      "op": "DUP1"
    },
    "17477": {
      "op": "MLOAD"
    },
    "17478": {
      "op": "PUSH2",
      "value": "0x41E4"
    },
    "17481": {
      "op": "DUP2"
    },
    "17482": {
      "op": "PUSH2",
      "value": "0x3FB9"
    },
    "17485": {
      "jump": "i",
      "op": "JUMP"
    },
    "17486": {
      "op": "JUMPDEST"
    },
    "17487": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17489": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "17492": {
      "op": "DUP3"
    },
    "17493": {
      "op": "DUP5"
    },
    "17494": {
      "op": "SUB"
    },
    "17495": {
      "op": "SLT"
    },
    "17496": {
      "op": "ISZERO"
    },
    "17497": {
      "op": "PUSH2",
      "value": "0x4461"
    },
    "17500": {
      "op": "JUMPI"
    },
    "17501": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17503": {
      "op": "DUP1"
    },
    "17504": {
      "op": "REVERT"
    },
    "17505": {
      "op": "JUMPDEST"
    },
    "17506": {
      "op": "PUSH2",
      "value": "0x4469"
    },
    "17509": {
      "op": "PUSH2",
      "value": "0x4386"
    },
    "17512": {
      "jump": "i",
      "op": "JUMP"
    },
    "17513": {
      "op": "JUMPDEST"
    },
    "17514": {
      "op": "PUSH2",
      "value": "0x4473"
    },
    "17517": {
      "op": "DUP5"
    },
    "17518": {
      "op": "DUP5"
    },
    "17519": {
      "op": "PUSH2",
      "value": "0x43BE"
    },
    "17522": {
      "jump": "i",
      "op": "JUMP"
    },
    "17523": {
      "op": "JUMPDEST"
    },
    "17524": {
      "op": "DUP2"
    },
    "17525": {
      "op": "MSTORE"
    },
    "17526": {
      "op": "PUSH2",
      "value": "0x4481"
    },
    "17529": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17531": {
      "op": "DUP5"
    },
    "17532": {
      "op": "ADD"
    },
    "17533": {
      "op": "PUSH2",
      "value": "0x440E"
    },
    "17536": {
      "jump": "i",
      "op": "JUMP"
    },
    "17537": {
      "op": "JUMPDEST"
    },
    "17538": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17540": {
      "op": "DUP3"
    },
    "17541": {
      "op": "ADD"
    },
    "17542": {
      "op": "MSTORE"
    },
    "17543": {
      "op": "PUSH2",
      "value": "0x4492"
    },
    "17546": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17548": {
      "op": "DUP5"
    },
    "17549": {
      "op": "ADD"
    },
    "17550": {
      "op": "PUSH2",
      "value": "0x440E"
    },
    "17553": {
      "jump": "i",
      "op": "JUMP"
    },
    "17554": {
      "op": "JUMPDEST"
    },
    "17555": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17557": {
      "op": "DUP3"
    },
    "17558": {
      "op": "ADD"
    },
    "17559": {
      "op": "MSTORE"
    },
    "17560": {
      "op": "PUSH2",
      "value": "0x44A3"
    },
    "17563": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17565": {
      "op": "DUP5"
    },
    "17566": {
      "op": "ADD"
    },
    "17567": {
      "op": "PUSH2",
      "value": "0x440E"
    },
    "17570": {
      "jump": "i",
      "op": "JUMP"
    },
    "17571": {
      "op": "JUMPDEST"
    },
    "17572": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17574": {
      "op": "DUP3"
    },
    "17575": {
      "op": "ADD"
    },
    "17576": {
      "op": "MSTORE"
    },
    "17577": {
      "op": "PUSH2",
      "value": "0x44B4"
    },
    "17580": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17582": {
      "op": "DUP5"
    },
    "17583": {
      "op": "ADD"
    },
    "17584": {
      "op": "PUSH2",
      "value": "0x440E"
    },
    "17587": {
      "jump": "i",
      "op": "JUMP"
    },
    "17588": {
      "op": "JUMPDEST"
    },
    "17589": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17591": {
      "op": "DUP3"
    },
    "17592": {
      "op": "ADD"
    },
    "17593": {
      "op": "MSTORE"
    },
    "17594": {
      "op": "PUSH2",
      "value": "0x44C5"
    },
    "17597": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17599": {
      "op": "DUP5"
    },
    "17600": {
      "op": "ADD"
    },
    "17601": {
      "op": "PUSH2",
      "value": "0x440E"
    },
    "17604": {
      "jump": "i",
      "op": "JUMP"
    },
    "17605": {
      "op": "JUMPDEST"
    },
    "17606": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17608": {
      "op": "DUP3"
    },
    "17609": {
      "op": "ADD"
    },
    "17610": {
      "op": "MSTORE"
    },
    "17611": {
      "op": "PUSH2",
      "value": "0x44D6"
    },
    "17614": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "17616": {
      "op": "DUP5"
    },
    "17617": {
      "op": "ADD"
    },
    "17618": {
      "op": "PUSH2",
      "value": "0x442E"
    },
    "17621": {
      "jump": "i",
      "op": "JUMP"
    },
    "17622": {
      "op": "JUMPDEST"
    },
    "17623": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "17625": {
      "op": "DUP3"
    },
    "17626": {
      "op": "ADD"
    },
    "17627": {
      "op": "MSTORE"
    },
    "17628": {
      "op": "PUSH2",
      "value": "0x44E7"
    },
    "17631": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "17633": {
      "op": "DUP5"
    },
    "17634": {
      "op": "ADD"
    },
    "17635": {
      "op": "PUSH2",
      "value": "0x4443"
    },
    "17638": {
      "jump": "i",
      "op": "JUMP"
    },
    "17639": {
      "op": "JUMPDEST"
    },
    "17640": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "17642": {
      "op": "DUP3"
    },
    "17643": {
      "op": "ADD"
    },
    "17644": {
      "op": "MSTORE"
    },
    "17645": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "17648": {
      "op": "PUSH2",
      "value": "0x44FA"
    },
    "17651": {
      "op": "DUP2"
    },
    "17652": {
      "op": "DUP6"
    },
    "17653": {
      "op": "ADD"
    },
    "17654": {
      "op": "PUSH2",
      "value": "0x4443"
    },
    "17657": {
      "jump": "i",
      "op": "JUMP"
    },
    "17658": {
      "op": "JUMPDEST"
    },
    "17659": {
      "op": "SWAP1"
    },
    "17660": {
      "op": "DUP3"
    },
    "17661": {
      "op": "ADD"
    },
    "17662": {
      "op": "MSTORE"
    },
    "17663": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "17666": {
      "op": "PUSH2",
      "value": "0x450C"
    },
    "17669": {
      "op": "DUP5"
    },
    "17670": {
      "op": "DUP3"
    },
    "17671": {
      "op": "ADD"
    },
    "17672": {
      "op": "PUSH2",
      "value": "0x4443"
    },
    "17675": {
      "jump": "i",
      "op": "JUMP"
    },
    "17676": {
      "op": "JUMPDEST"
    },
    "17677": {
      "op": "SWAP1"
    },
    "17678": {
      "op": "DUP3"
    },
    "17679": {
      "op": "ADD"
    },
    "17680": {
      "op": "MSTORE"
    },
    "17681": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "17684": {
      "op": "PUSH2",
      "value": "0x451E"
    },
    "17687": {
      "op": "DUP5"
    },
    "17688": {
      "op": "DUP3"
    },
    "17689": {
      "op": "ADD"
    },
    "17690": {
      "op": "PUSH2",
      "value": "0x4443"
    },
    "17693": {
      "jump": "i",
      "op": "JUMP"
    },
    "17694": {
      "op": "JUMPDEST"
    },
    "17695": {
      "op": "SWAP1"
    },
    "17696": {
      "op": "DUP3"
    },
    "17697": {
      "op": "ADD"
    },
    "17698": {
      "op": "MSTORE"
    },
    "17699": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "17702": {
      "op": "PUSH2",
      "value": "0x4530"
    },
    "17705": {
      "op": "DUP5"
    },
    "17706": {
      "op": "DUP3"
    },
    "17707": {
      "op": "ADD"
    },
    "17708": {
      "op": "PUSH2",
      "value": "0x41D3"
    },
    "17711": {
      "jump": "i",
      "op": "JUMP"
    },
    "17712": {
      "op": "JUMPDEST"
    },
    "17713": {
      "op": "SWAP1"
    },
    "17714": {
      "op": "DUP3"
    },
    "17715": {
      "op": "ADD"
    },
    "17716": {
      "op": "MSTORE"
    },
    "17717": {
      "op": "SWAP4"
    },
    "17718": {
      "op": "SWAP3"
    },
    "17719": {
      "op": "POP"
    },
    "17720": {
      "op": "POP"
    },
    "17721": {
      "op": "POP"
    },
    "17722": {
      "jump": "o",
      "op": "JUMP"
    },
    "17723": {
      "op": "JUMPDEST"
    },
    "17724": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17726": {
      "op": "DUP1"
    },
    "17727": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17729": {
      "op": "DUP4"
    },
    "17730": {
      "op": "DUP6"
    },
    "17731": {
      "op": "SUB"
    },
    "17732": {
      "op": "SLT"
    },
    "17733": {
      "op": "ISZERO"
    },
    "17734": {
      "op": "PUSH2",
      "value": "0x454E"
    },
    "17737": {
      "op": "JUMPI"
    },
    "17738": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17740": {
      "op": "DUP1"
    },
    "17741": {
      "op": "REVERT"
    },
    "17742": {
      "op": "JUMPDEST"
    },
    "17743": {
      "op": "POP"
    },
    "17744": {
      "op": "POP"
    },
    "17745": {
      "op": "DUP1"
    },
    "17746": {
      "op": "MLOAD"
    },
    "17747": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17749": {
      "op": "SWAP1"
    },
    "17750": {
      "op": "SWAP2"
    },
    "17751": {
      "op": "ADD"
    },
    "17752": {
      "op": "MLOAD"
    },
    "17753": {
      "op": "SWAP1"
    },
    "17754": {
      "op": "SWAP3"
    },
    "17755": {
      "op": "SWAP1"
    },
    "17756": {
      "op": "SWAP2"
    },
    "17757": {
      "op": "POP"
    },
    "17758": {
      "jump": "o",
      "op": "JUMP"
    },
    "17759": {
      "op": "JUMPDEST"
    },
    "17760": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17762": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17764": {
      "op": "DUP3"
    },
    "17765": {
      "op": "ADD"
    },
    "17766": {
      "op": "PUSH2",
      "value": "0x4571"
    },
    "17769": {
      "op": "JUMPI"
    },
    "17770": {
      "op": "PUSH2",
      "value": "0x4571"
    },
    "17773": {
      "op": "PUSH2",
      "value": "0x417C"
    },
    "17776": {
      "jump": "i",
      "op": "JUMP"
    },
    "17777": {
      "op": "JUMPDEST"
    },
    "17778": {
      "op": "POP"
    },
    "17779": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17781": {
      "op": "ADD"
    },
    "17782": {
      "op": "SWAP1"
    },
    "17783": {
      "jump": "o",
      "op": "JUMP"
    },
    "17784": {
      "op": "JUMPDEST"
    },
    "17785": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17787": {
      "op": "DUP1"
    },
    "17788": {
      "op": "DUP3"
    },
    "17789": {
      "op": "MSTORE"
    },
    "17790": {
      "op": "DUP2"
    },
    "17791": {
      "op": "DUP2"
    },
    "17792": {
      "op": "ADD"
    },
    "17793": {
      "op": "MSTORE"
    },
    "17794": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "17827": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17829": {
      "op": "DUP3"
    },
    "17830": {
      "op": "ADD"
    },
    "17831": {
      "op": "MSTORE"
    },
    "17832": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17834": {
      "op": "ADD"
    },
    "17835": {
      "op": "SWAP1"
    },
    "17836": {
      "jump": "o",
      "op": "JUMP"
    },
    "17837": {
      "op": "JUMPDEST"
    },
    "17838": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17840": {
      "op": "DUP1"
    },
    "17841": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17843": {
      "op": "DUP4"
    },
    "17844": {
      "op": "DUP6"
    },
    "17845": {
      "op": "SUB"
    },
    "17846": {
      "op": "SLT"
    },
    "17847": {
      "op": "ISZERO"
    },
    "17848": {
      "op": "PUSH2",
      "value": "0x45C0"
    },
    "17851": {
      "op": "JUMPI"
    },
    "17852": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17854": {
      "op": "DUP1"
    },
    "17855": {
      "op": "REVERT"
    },
    "17856": {
      "op": "JUMPDEST"
    },
    "17857": {
      "op": "DUP3"
    },
    "17858": {
      "op": "MLOAD"
    },
    "17859": {
      "op": "PUSH2",
      "value": "0x45CB"
    },
    "17862": {
      "op": "DUP2"
    },
    "17863": {
      "op": "PUSH2",
      "value": "0x3FB9"
    },
    "17866": {
      "jump": "i",
      "op": "JUMP"
    },
    "17867": {
      "op": "JUMPDEST"
    },
    "17868": {
      "op": "SWAP2"
    },
    "17869": {
      "op": "POP"
    },
    "17870": {
      "op": "PUSH2",
      "value": "0x45D9"
    },
    "17873": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17875": {
      "op": "DUP5"
    },
    "17876": {
      "op": "ADD"
    },
    "17877": {
      "op": "PUSH2",
      "value": "0x41D3"
    },
    "17880": {
      "jump": "i",
      "op": "JUMP"
    },
    "17881": {
      "op": "JUMPDEST"
    },
    "17882": {
      "op": "SWAP1"
    },
    "17883": {
      "op": "POP"
    },
    "17884": {
      "op": "SWAP3"
    },
    "17885": {
      "op": "POP"
    },
    "17886": {
      "op": "SWAP3"
    },
    "17887": {
      "op": "SWAP1"
    },
    "17888": {
      "op": "POP"
    },
    "17889": {
      "jump": "o",
      "op": "JUMP"
    },
    "17890": {
      "op": "JUMPDEST"
    },
    "17891": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17893": {
      "op": "DUP1"
    },
    "17894": {
      "op": "DUP3"
    },
    "17895": {
      "op": "MSTORE"
    },
    "17896": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "17898": {
      "op": "SWAP1"
    },
    "17899": {
      "op": "DUP3"
    },
    "17900": {
      "op": "ADD"
    },
    "17901": {
      "op": "MSTORE"
    },
    "17902": {
      "op": "PUSH15",
      "value": "0x23A2AB1D1024B73B30B634B2102A29"
    },
    "17918": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "17920": {
      "op": "SHL"
    },
    "17921": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17923": {
      "op": "DUP3"
    },
    "17924": {
      "op": "ADD"
    },
    "17925": {
      "op": "MSTORE"
    },
    "17926": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17928": {
      "op": "ADD"
    },
    "17929": {
      "op": "SWAP1"
    },
    "17930": {
      "jump": "o",
      "op": "JUMP"
    },
    "17931": {
      "op": "JUMPDEST"
    },
    "17932": {
      "op": "DUP1"
    },
    "17933": {
      "op": "MLOAD"
    },
    "17934": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "17936": {
      "op": "DUP2"
    },
    "17937": {
      "op": "SWAP1"
    },
    "17938": {
      "op": "SIGNEXTEND"
    },
    "17939": {
      "op": "DUP2"
    },
    "17940": {
      "op": "EQ"
    },
    "17941": {
      "op": "PUSH2",
      "value": "0x41E4"
    },
    "17944": {
      "op": "JUMPI"
    },
    "17945": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17947": {
      "op": "DUP1"
    },
    "17948": {
      "op": "REVERT"
    },
    "17949": {
      "op": "JUMPDEST"
    },
    "17950": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17952": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17954": {
      "op": "DUP3"
    },
    "17955": {
      "op": "DUP5"
    },
    "17956": {
      "op": "SUB"
    },
    "17957": {
      "op": "SLT"
    },
    "17958": {
      "op": "ISZERO"
    },
    "17959": {
      "op": "PUSH2",
      "value": "0x462F"
    },
    "17962": {
      "op": "JUMPI"
    },
    "17963": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17965": {
      "op": "DUP1"
    },
    "17966": {
      "op": "REVERT"
    },
    "17967": {
      "op": "JUMPDEST"
    },
    "17968": {
      "op": "PUSH2",
      "value": "0x161E"
    },
    "17971": {
      "op": "DUP3"
    },
    "17972": {
      "op": "PUSH2",
      "value": "0x460B"
    },
    "17975": {
      "jump": "i",
      "op": "JUMP"
    },
    "17976": {
      "op": "JUMPDEST"
    },
    "17977": {
      "op": "DUP1"
    },
    "17978": {
      "op": "MLOAD"
    },
    "17979": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "17982": {
      "op": "DUP2"
    },
    "17983": {
      "op": "AND"
    },
    "17984": {
      "op": "DUP2"
    },
    "17985": {
      "op": "EQ"
    },
    "17986": {
      "op": "PUSH2",
      "value": "0x41E4"
    },
    "17989": {
      "op": "JUMPI"
    },
    "17990": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17992": {
      "op": "DUP1"
    },
    "17993": {
      "op": "REVERT"
    },
    "17994": {
      "op": "JUMPDEST"
    },
    "17995": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17997": {
      "op": "DUP1"
    },
    "17998": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18000": {
      "op": "DUP1"
    },
    "18001": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18003": {
      "op": "DUP1"
    },
    "18004": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18006": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "18008": {
      "op": "DUP9"
    },
    "18009": {
      "op": "DUP11"
    },
    "18010": {
      "op": "SUB"
    },
    "18011": {
      "op": "SLT"
    },
    "18012": {
      "op": "ISZERO"
    },
    "18013": {
      "op": "PUSH2",
      "value": "0x4665"
    },
    "18016": {
      "op": "JUMPI"
    },
    "18017": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18019": {
      "op": "DUP1"
    },
    "18020": {
      "op": "REVERT"
    },
    "18021": {
      "op": "JUMPDEST"
    },
    "18022": {
      "op": "DUP8"
    },
    "18023": {
      "op": "MLOAD"
    },
    "18024": {
      "op": "PUSH2",
      "value": "0x4670"
    },
    "18027": {
      "op": "DUP2"
    },
    "18028": {
      "op": "PUSH2",
      "value": "0x3FB9"
    },
    "18031": {
      "jump": "i",
      "op": "JUMP"
    },
    "18032": {
      "op": "JUMPDEST"
    },
    "18033": {
      "op": "SWAP7"
    },
    "18034": {
      "op": "POP"
    },
    "18035": {
      "op": "PUSH2",
      "value": "0x467E"
    },
    "18038": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18040": {
      "op": "DUP10"
    },
    "18041": {
      "op": "ADD"
    },
    "18042": {
      "op": "PUSH2",
      "value": "0x460B"
    },
    "18045": {
      "jump": "i",
      "op": "JUMP"
    },
    "18046": {
      "op": "JUMPDEST"
    },
    "18047": {
      "op": "SWAP6"
    },
    "18048": {
      "op": "POP"
    },
    "18049": {
      "op": "PUSH2",
      "value": "0x468C"
    },
    "18052": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18054": {
      "op": "DUP10"
    },
    "18055": {
      "op": "ADD"
    },
    "18056": {
      "op": "PUSH2",
      "value": "0x4638"
    },
    "18059": {
      "jump": "i",
      "op": "JUMP"
    },
    "18060": {
      "op": "JUMPDEST"
    },
    "18061": {
      "op": "SWAP5"
    },
    "18062": {
      "op": "POP"
    },
    "18063": {
      "op": "PUSH2",
      "value": "0x469A"
    },
    "18066": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "18068": {
      "op": "DUP10"
    },
    "18069": {
      "op": "ADD"
    },
    "18070": {
      "op": "PUSH2",
      "value": "0x4638"
    },
    "18073": {
      "jump": "i",
      "op": "JUMP"
    },
    "18074": {
      "op": "JUMPDEST"
    },
    "18075": {
      "op": "SWAP4"
    },
    "18076": {
      "op": "POP"
    },
    "18077": {
      "op": "PUSH2",
      "value": "0x46A8"
    },
    "18080": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "18082": {
      "op": "DUP10"
    },
    "18083": {
      "op": "ADD"
    },
    "18084": {
      "op": "PUSH2",
      "value": "0x4638"
    },
    "18087": {
      "jump": "i",
      "op": "JUMP"
    },
    "18088": {
      "op": "JUMPDEST"
    },
    "18089": {
      "op": "SWAP3"
    },
    "18090": {
      "op": "POP"
    },
    "18091": {
      "op": "PUSH2",
      "value": "0x46B6"
    },
    "18094": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "18096": {
      "op": "DUP10"
    },
    "18097": {
      "op": "ADD"
    },
    "18098": {
      "op": "PUSH2",
      "value": "0x41D3"
    },
    "18101": {
      "jump": "i",
      "op": "JUMP"
    },
    "18102": {
      "op": "JUMPDEST"
    },
    "18103": {
      "op": "SWAP2"
    },
    "18104": {
      "op": "POP"
    },
    "18105": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "18107": {
      "op": "DUP9"
    },
    "18108": {
      "op": "ADD"
    },
    "18109": {
      "op": "MLOAD"
    },
    "18110": {
      "op": "PUSH2",
      "value": "0x46C6"
    },
    "18113": {
      "op": "DUP2"
    },
    "18114": {
      "op": "PUSH2",
      "value": "0x40C2"
    },
    "18117": {
      "jump": "i",
      "op": "JUMP"
    },
    "18118": {
      "op": "JUMPDEST"
    },
    "18119": {
      "op": "DUP1"
    },
    "18120": {
      "op": "SWAP2"
    },
    "18121": {
      "op": "POP"
    },
    "18122": {
      "op": "POP"
    },
    "18123": {
      "op": "SWAP3"
    },
    "18124": {
      "op": "SWAP6"
    },
    "18125": {
      "op": "SWAP9"
    },
    "18126": {
      "op": "SWAP2"
    },
    "18127": {
      "op": "SWAP5"
    },
    "18128": {
      "op": "SWAP8"
    },
    "18129": {
      "op": "POP"
    },
    "18130": {
      "op": "SWAP3"
    },
    "18131": {
      "op": "SWAP6"
    },
    "18132": {
      "op": "POP"
    },
    "18133": {
      "jump": "o",
      "op": "JUMP"
    },
    "18134": {
      "op": "JUMPDEST"
    },
    "18135": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18137": {
      "op": "PUSH2",
      "value": "0x161E"
    },
    "18140": {
      "op": "DUP4"
    },
    "18141": {
      "op": "DUP4"
    },
    "18142": {
      "op": "PUSH2",
      "value": "0x4247"
    },
    "18145": {
      "jump": "i",
      "op": "JUMP"
    },
    "18146": {
      "op": "JUMPDEST"
    },
    "18147": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18149": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18151": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18153": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "18155": {
      "op": "SHL"
    },
    "18156": {
      "op": "SUB"
    },
    "18157": {
      "op": "DUP4"
    },
    "18158": {
      "op": "DUP2"
    },
    "18159": {
      "op": "AND"
    },
    "18160": {
      "op": "DUP1"
    },
    "18161": {
      "op": "PUSH2",
      "value": "0x46FC"
    },
    "18164": {
      "op": "JUMPI"
    },
    "18165": {
      "op": "PUSH2",
      "value": "0x46FC"
    },
    "18168": {
      "op": "PUSH2",
      "value": "0x41A9"
    },
    "18171": {
      "jump": "i",
      "op": "JUMP"
    },
    "18172": {
      "op": "JUMPDEST"
    },
    "18173": {
      "op": "SWAP3"
    },
    "18174": {
      "op": "AND"
    },
    "18175": {
      "op": "SWAP2"
    },
    "18176": {
      "op": "SWAP1"
    },
    "18177": {
      "op": "SWAP2"
    },
    "18178": {
      "op": "DIV"
    },
    "18179": {
      "op": "SWAP3"
    },
    "18180": {
      "op": "SWAP2"
    },
    "18181": {
      "op": "POP"
    },
    "18182": {
      "op": "POP"
    },
    "18183": {
      "jump": "o",
      "op": "JUMP"
    },
    "18184": {
      "op": "JUMPDEST"
    },
    "18185": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18187": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18189": {
      "op": "DUP3"
    },
    "18190": {
      "op": "DUP5"
    },
    "18191": {
      "op": "SUB"
    },
    "18192": {
      "op": "SLT"
    },
    "18193": {
      "op": "ISZERO"
    },
    "18194": {
      "op": "PUSH2",
      "value": "0x471A"
    },
    "18197": {
      "op": "JUMPI"
    },
    "18198": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18200": {
      "op": "DUP1"
    },
    "18201": {
      "op": "REVERT"
    },
    "18202": {
      "op": "JUMPDEST"
    },
    "18203": {
      "op": "DUP2"
    },
    "18204": {
      "op": "MLOAD"
    },
    "18205": {
      "op": "PUSH2",
      "value": "0x161E"
    },
    "18208": {
      "op": "DUP2"
    },
    "18209": {
      "op": "PUSH2",
      "value": "0x40C2"
    },
    "18212": {
      "jump": "i",
      "op": "JUMP"
    },
    "18213": {
      "op": "JUMPDEST"
    },
    "18214": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18216": {
      "op": "DUP3"
    },
    "18217": {
      "op": "MLOAD"
    },
    "18218": {
      "op": "PUSH2",
      "value": "0x4737"
    },
    "18221": {
      "op": "DUP2"
    },
    "18222": {
      "op": "DUP5"
    },
    "18223": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18225": {
      "op": "DUP8"
    },
    "18226": {
      "op": "ADD"
    },
    "18227": {
      "op": "PUSH2",
      "value": "0x3FFE"
    },
    "18230": {
      "jump": "i",
      "op": "JUMP"
    },
    "18231": {
      "op": "JUMPDEST"
    },
    "18232": {
      "op": "SWAP2"
    },
    "18233": {
      "op": "SWAP1"
    },
    "18234": {
      "op": "SWAP2"
    },
    "18235": {
      "op": "ADD"
    },
    "18236": {
      "op": "SWAP3"
    },
    "18237": {
      "op": "SWAP2"
    },
    "18238": {
      "op": "POP"
    },
    "18239": {
      "op": "POP"
    },
    "18240": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "36c9c4e33c7a87a0efc56379de808051bf193107",
  "source": "// SPDX-License-Identifier: UNLICENSED\npragma solidity 0.8.19;\n\nimport \"./openzeppelin-solidity/contracts/access/Ownable.sol\";\nimport \"./openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\";\nimport \"./openzeppelin-solidity/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"./openzeppelin-solidity/contracts/security/ReentrancyGuard.sol\";\nimport \"../interfaces/IAaveLendingPoolV2.sol\";\nimport \"../interfaces/IUniswapV3Pool.sol\";\nimport \"../interfaces/IWETH.sol\";\nimport \"./RangeManager.sol\";\nimport \"./RoeRouter.sol\";\n\n\n/**\nGeVault is a reblancing vault that holds TokenisableRanges tickers\nFunctionalities:\n- Hold a list of tickers for a single pair, evenly spaced\n- Hold balances of those tickers, deposited in the ROE LP\n- Deposit one underlying asset split evenly into 2 or more consecutive ticks above/below the current price\n- Withdraw one underlying asset, taken out evenly from 2 or more consecutive ticks\n- Calculate the current balance of assets\n\nDesign:\n \n */\ncontract GeVault is ERC20, Ownable, ReentrancyGuard {\n  using SafeERC20 for ERC20;\n  \n  event Deposit(address indexed sender, address indexed token, uint amount, uint liquidity);\n  event Withdraw(address indexed sender, address indexed token, uint amount, uint liquidity);\n  event PushTick(address indexed ticker);\n  event ShiftTick(address indexed ticker);\n  event ModifyTick(address indexed ticker, uint index);\n  event Rebalance(uint tickIndex);\n  event SetEnabled(bool isEnabled);\n  event SetTreasury(address treasury);\n  event SetFee(uint baseFeeX4);\n  event SetTvlCap(uint tvlCap);\n\n  RangeManager rangeManager; \n  /// @notice Ticks properly ordered in ascending price order\n  TokenisableRange[] public ticks;\n  \n  /// @notice Tracks the beginning of active ticks: the next 4 ticks are the active\n  uint public tickIndex; \n  /// @notice Pair tokens\n  ERC20 public token0;\n  ERC20 public token1;\n  bool public isEnabled = true;\n  /// @notice Pool base fee \n  uint public baseFeeX4 = 20;\n  /// @notice Max vault TVL with 8 decimals\n  uint public tvlCap = 1e12;\n  \n  /// CONSTANTS \n  /// immutable keyword removed for coverage testing bug in brownie\n  address public treasury;\n  IUniswapV3Pool public uniswapPool;\n  ILendingPool public lendingPool;\n  IPriceOracle public oracle;\n  uint public constant nearbyRanges = 2;\n  IWETH public WETH;\n  bool public baseTokenIsToken0;\n  \n\n  constructor(\n    address _treasury, \n    address roeRouter, \n    address _uniswapPool, \n    uint poolId, \n    string memory name, \n    string memory symbol,\n    address weth,\n    bool _baseTokenIsToken0\n  ) \n    ERC20(name, symbol)\n  {\n    require(_treasury != address(0x0), \"GEV: Invalid Treasury\");\n    require(_uniswapPool != address(0x0), \"GEV: Invalid Pool\");\n    require(weth != address(0x0), \"GEV: Invalid WETH\");\n\n    (address lpap, address _token0, address _token1,, ) = RoeRouter(roeRouter).pools(poolId);\n    token0 = ERC20(_token0);\n    token1 = ERC20(_token1);\n    \n    lendingPool = ILendingPool(ILendingPoolAddressesProvider(lpap).getLendingPool());\n    oracle = IPriceOracle(ILendingPoolAddressesProvider(lpap).getPriceOracle());\n    treasury = _treasury;\n    uniswapPool = IUniswapV3Pool(_uniswapPool);\n    WETH = IWETH(weth);\n    baseTokenIsToken0 = _baseTokenIsToken0;\n  }\n  \n  \n  //////// ADMIN\n  \n  \n  /// @notice Set pool status\n  /// @param _isEnabled Pool status\n  function setEnabled(bool _isEnabled) public onlyOwner { \n    isEnabled = _isEnabled; \n    emit SetEnabled(_isEnabled);\n  }\n  \n  /// @notice Set treasury address\n  /// @param newTreasury New address\n  function setTreasury(address newTreasury) public onlyOwner { \n    treasury = newTreasury; \n    emit SetTreasury(newTreasury);\n  }\n\n\n  /// @notice Add a new ticker to the list\n  /// @param tr Tick address\n  function pushTick(address tr) public onlyOwner {\n    TokenisableRange t = TokenisableRange(tr);\n    (ERC20 t0,) = t.TOKEN0();\n    (ERC20 t1,) = t.TOKEN1();\n    require(t0 == token0 && t1 == token1, \"GEV: Invalid TR\");\n    if (ticks.length == 0) ticks.push(t);\n    else {\n      // Check that tick is properly ordered\n      if (baseTokenIsToken0) \n        require( t.lowerTick() > ticks[ticks.length-1].upperTick(), \"GEV: Push Tick Overlap\");\n      else \n        require( t.upperTick() < ticks[ticks.length-1].lowerTick(), \"GEV: Push Tick Overlap\");\n      \n      ticks.push(TokenisableRange(tr));\n    }\n    emit PushTick(tr);\n  }  \n\n\n  /// @notice Add a new ticker to the list\n  /// @param tr Tick address\n  function shiftTick(address tr) public onlyOwner {\n    TokenisableRange t = TokenisableRange(tr);\n    (ERC20 t0,) = t.TOKEN0();\n    (ERC20 t1,) = t.TOKEN1();\n    require(t0 == token0 && t1 == token1, \"GEV: Invalid TR\");\n    if (ticks.length == 0) ticks.push(t);\n    else {\n      // Check that tick is properly ordered\n      if (!baseTokenIsToken0) \n        require( t.lowerTick() > ticks[0].upperTick(), \"GEV: Shift Tick Overlap\");\n      else \n        require( t.upperTick() < ticks[0].lowerTick(), \"GEV: Shift Tick Overlap\");\n      \n      // extend array by pushing last elt\n      ticks.push(ticks[ticks.length-1]);\n      // shift each element\n      if (ticks.length > 2){\n        for (uint k = 0; k < ticks.length - 2; k++) \n          ticks[ticks.length - 2 - k] = ticks[ticks.length - 3 - k];\n        }\n      // add new tick in first place\n      ticks[0] = t;\n    }\n    emit ShiftTick(tr);\n  }\n\n\n  /// @notice Modify ticker\n  /// @param tr New tick address\n  /// @param index Tick to modify\n  function modifyTick(address tr, uint index) public onlyOwner {\n    (ERC20 t0,) = TokenisableRange(tr).TOKEN0();\n    (ERC20 t1,) = TokenisableRange(tr).TOKEN1();\n    require(t0 == token0 && t1 == token1, \"GEV: Invalid TR\");\n    ticks[index] = TokenisableRange(tr);\n    emit ModifyTick(tr, index);\n  }\n  \n  /// @notice Ticks length getter\n  /// @return len Ticks length\n  function getTickLength() public view returns(uint len){\n    len = ticks.length;\n  }\n  \n  /// @notice Set the base fee\n  /// @param newBaseFeeX4 New base fee in E4\n  function setBaseFee(uint newBaseFeeX4) public onlyOwner {\n  require(newBaseFeeX4 < 1e4, \"GEV: Invalid Base Fee\");\n    baseFeeX4 = newBaseFeeX4;\n    emit SetFee(newBaseFeeX4);\n  }\n  \n  /// @notice Set the TVL cap\n  /// @param newTvlCap New TVL cap\n  function setTvlCap(uint newTvlCap) public onlyOwner {\n    tvlCap = newTvlCap;\n    emit SetTvlCap(newTvlCap);\n  }\n  \n  \n  //////// PUBLIC FUNCTIONS\n  \n    \n  /// @notice Rebalance tickers\n  /// @dev Provide the list of tickers from \n  function rebalance() public {\n    require(poolMatchesOracle(), \"GEV: Oracle Error\");\n    removeFromAllTicks();\n    if (isEnabled) deployAssets();\n  }\n  \n\n  /// @notice Withdraw assets from the ticker\n  /// @param liquidity Amount of GEV tokens to redeem; if 0, redeem all\n  /// @param token Address of the token redeemed for\n  /// @return amount Total token returned\n  /// @dev For simplicity+efficieny, withdrawal is like a rebalancing, but a subset of the tokens are sent back to the user before redeploying\n  function withdraw(uint liquidity, address token) public nonReentrant returns (uint amount) {\n    require(poolMatchesOracle(), \"GEV: Oracle Error\");\n    if (liquidity == 0) liquidity = balanceOf(msg.sender);\n    require(liquidity <= balanceOf(msg.sender), \"GEV: Insufficient Balance\");\n    require(liquidity > 0, \"GEV: Withdraw Zero\");\n    \n    uint vaultValueX8 = getTVL();\n    uint valueX8 = vaultValueX8 * liquidity / totalSupply();\n    amount = valueX8 * 10**ERC20(token).decimals() / oracle.getAssetPrice(token);\n    uint fee = amount * getAdjustedBaseFee(token == address(token1)) / 1e4;\n    \n    _burn(msg.sender, liquidity);\n    removeFromAllTicks();\n    ERC20(token).safeTransfer(treasury, fee);\n    uint bal = amount - fee;\n\n    if (token == address(WETH)){\n      WETH.withdraw(bal);\n      payable(msg.sender).transfer(bal);\n    }\n    else {\n      ERC20(token).safeTransfer(msg.sender, bal);\n    }\n    \n    // if pool enabled, deploy assets in ticks, otherwise just let assets sit here until totally withdrawn\n    if (isEnabled) deployAssets();\n    emit Withdraw(msg.sender, token, amount, liquidity);\n  }\n\n\n  /// @notice deposit tokens in the pool, convert to WETH if necessary\n  /// @param token Token address\n  /// @param amount Amount of token deposited\n  function deposit(address token, uint amount) public payable nonReentrant returns (uint liquidity) \n  {\n    require(isEnabled, \"GEV: Pool Disabled\");\n    require(poolMatchesOracle(), \"GEV: Oracle Error\");\n    require(token == address(token0) || token == address(token1), \"GEV: Invalid Token\");\n    require(amount > 0 || msg.value > 0, \"GEV: Deposit Zero\");\n    \n    // Wrap if necessary and deposit here\n    if (msg.value > 0){\n      require(token == address(WETH), \"GEV: Invalid Weth\");\n      // wraps ETH by sending to the wrapper that sends back WETH\n      WETH.deposit{value: msg.value}();\n      amount = msg.value;\n    }\n    else { \n      ERC20(token).safeTransferFrom(msg.sender, address(this), amount);\n    }\n    \n    // Send deposit fee to treasury\n    uint fee = amount * getAdjustedBaseFee(token == address(token0)) / 1e4;\n    ERC20(token).safeTransfer(treasury, fee);\n    uint valueX8 = oracle.getAssetPrice(token) * (amount - fee) / 10**ERC20(token).decimals();\n    require(tvlCap > valueX8 + getTVL(), \"GEV: Max Cap Reached\");\n\n    uint vaultValueX8 = getTVL();\n    uint tSupply = totalSupply();\n    // initial liquidity at 1e18 token ~ $1\n    if (tSupply == 0 || vaultValueX8 == 0)\n      liquidity = valueX8 * 1e10;\n    else {\n      liquidity = tSupply * valueX8 / vaultValueX8;\n    }\n    \n    rebalance();\n    require(liquidity > 0, \"GEV: No Liquidity Added\");\n    _mint(msg.sender, liquidity);    \n    emit Deposit(msg.sender, token, amount, liquidity);\n  }\n  \n  \n  /// @notice Get value of 1e18 GEV tokens\n  /// @return priceX8 price of 1e18 tokens with 8 decimals\n  function latestAnswer() external view returns (uint256 priceX8) {\n    uint supply = totalSupply();\n    if (supply == 0) return 0;\n    uint vaultValue = getTVL();\n    priceX8 = vaultValue * 1e18 / supply;\n  }\n  \n  \n  /// @notice Get vault underlying assets\n  function getReserves() public view returns (uint amount0, uint amount1){\n    for (uint k = 0; k < ticks.length; k++){\n      TokenisableRange t = ticks[k];\n      address aTick = lendingPool.getReserveData(address(t)).aTokenAddress;\n      uint bal = ERC20(aTick).balanceOf(address(this));\n      (uint amt0, uint amt1) = t.getTokenAmounts(bal);\n      amount0 += amt0;\n      amount1 += amt1;\n    }\n  }\n\n\n  //////// INTERNAL FUNCTIONS\n  \n  /// @notice Remove assets from all the underlying ticks\n  function removeFromAllTicks() internal {\n    for (uint k = 0; k < ticks.length; k++){\n      removeFromTick(k);\n    }    \n  }\n  \n  \n  /// @notice Remove from tick\n  function removeFromTick(uint index) internal {\n    TokenisableRange tr = ticks[index];\n    address aTokenAddress = lendingPool.getReserveData(address(tr)).aTokenAddress;\n    uint aBal = ERC20(aTokenAddress).balanceOf(address(this));\n    uint sBal = tr.balanceOf(aTokenAddress);\n\n    // if there are less tokens available than the balance (because of outstanding debt), withdraw what's available\n    if (aBal > sBal) aBal = sBal;\n    if (aBal > 0){\n      lendingPool.withdraw(address(tr), aBal, address(this));\n      tr.withdraw(aBal, 0, 0);\n    }\n  }\n  \n  \n  /// @notice \n  function deployAssets() internal { \n    uint newTickIndex = getActiveTickIndex();\n    uint availToken0 = token0.balanceOf(address(this));\n    uint availToken1 = token1.balanceOf(address(this));\n    \n    // Check which is the main token\n    (uint amount0ft, uint amount1ft) = ticks[newTickIndex].getTokenAmountsExcludingFees(1e18);\n    uint tick0Index = newTickIndex;\n    uint tick1Index = newTickIndex + 2;\n    if (amount1ft > 0){\n      tick0Index = newTickIndex + 2;\n      tick1Index = newTickIndex;\n    }\n    \n    // Deposit into the ticks + into the LP\n    if (availToken0 > 0){\n      depositAndStash(ticks[tick0Index], availToken0 / 2, 0);\n      depositAndStash(ticks[tick0Index+1], availToken0 / 2, 0);\n    }\n    if (availToken1 > 0){\n      depositAndStash(ticks[tick1Index], 0, availToken1 / 2);\n      depositAndStash(ticks[tick1Index+1], 0, availToken1 / 2);\n    }\n    \n    if (newTickIndex != tickIndex) tickIndex = newTickIndex;\n    emit Rebalance(tickIndex);\n  }\n  \n  \n  /// @notice Checks that the pool price isn't manipulated\n  function poolMatchesOracle() public view returns (bool matches){\n    (uint160 sqrtPriceX96,,,,,,) = uniswapPool.slot0();\n    \n    uint decimals0 = token0.decimals();\n    uint decimals1 = token1.decimals();\n    uint priceX8 = 10**decimals0;\n    // Overflow if dont scale down the sqrtPrice before div 2*192\n    priceX8 = priceX8 * uint(sqrtPriceX96 / 2 ** 12) ** 2 * 1e8 / 2**168;\n    priceX8 = priceX8 / 10**decimals1;\n    uint oraclePrice = 1e8 * oracle.getAssetPrice(address(token0)) / oracle.getAssetPrice(address(token1));\n    if (oraclePrice < priceX8 * 101 / 100 && oraclePrice > priceX8 * 99 / 100) matches = true;\n  }\n\n\n  /// @notice Helper that checks current allowance and approves if necessary\n  /// @param token Target token\n  /// @param spender Spender\n  /// @param amount Amount below which we need to approve the token spending\n  function checkSetApprove(address token, address spender, uint amount) private {\n    if ( ERC20(token).allowance(address(this), spender) < amount ) ERC20(token).safeIncreaseAllowance(spender, type(uint256).max);\n  }\n  \n  \n  /// @notice Calculate the vault total ticks value\n  /// @return valueX8 Total value of the vault with 8 decimals\n  function getTVL() public view returns (uint valueX8){\n    for(uint k=0; k<ticks.length; k++){\n      TokenisableRange t = ticks[k];\n      uint bal = getTickBalance(k);\n      valueX8 += bal * t.latestAnswer() / 1e18;\n    }\n  }\n  \n  \n  /// @notice Deposit assets in a ticker, and the ticker in lending pool\n  /// @param t Tik address\n  /// @return liquidity The amount of ticker liquidity added\n  function depositAndStash(TokenisableRange t, uint amount0, uint amount1) internal returns (uint liquidity){\n    checkSetApprove(address(token0), address(t), amount0);\n    checkSetApprove(address(token1), address(t), amount1);\n    liquidity = t.deposit(amount0, amount1);\n    \n    uint bal = t.balanceOf(address(this));\n    if (bal > 0){\n      checkSetApprove(address(t), address(lendingPool), bal);\n      lendingPool.deposit(address(t), bal, address(this), 0);\n    }\n  }\n  \n  \n  /// @notice Get balance of tick deposited in GE\n  /// @param index Tick index\n  /// @return liquidity Amount of Ticker\n  function getTickBalance(uint index) public view returns (uint liquidity) {\n    TokenisableRange t = ticks[index];\n    address aTokenAddress = lendingPool.getReserveData(address(t)).aTokenAddress;\n    liquidity = ERC20(aTokenAddress).balanceOf(address(this));\n  }\n  \n  \n  /// @notice Return first valid tick\n  function getActiveTickIndex() public view returns (uint activeTickIndex) {\n    if (ticks.length >= 5){\n      // looking for index at which the underlying asset differs from the next tick\n      for (activeTickIndex = 0; activeTickIndex < ticks.length - 3; activeTickIndex++){\n        (uint amt0, uint amt1) = ticks[activeTickIndex+1].getTokenAmountsExcludingFees(1e18);\n        (uint amt0n, uint amt1n) = ticks[activeTickIndex+2].getTokenAmountsExcludingFees(1e18);\n        if ( (amt0 == 0 && amt0n > 0) || (amt1 == 0 && amt1n > 0) )\n          break;\n      }\n    }\n  }\n\n\n  /// @notice Get deposit fee\n  /// @param increaseToken0 Whether (token0 added || token1 removed) or not\n  /// @dev Simple linear model: from baseFeeX4 / 2 to baseFeeX4 * 2\n  /// @dev Call before withdrawing from ticks or reserves will both be 0\n  function getAdjustedBaseFee(bool increaseToken0) public view returns (uint adjustedBaseFeeX4) {\n    (uint res0, uint res1) = getReserves();\n    uint value0 = res0 * oracle.getAssetPrice(address(token0)) / 10**token0.decimals();\n    uint value1 = res1 * oracle.getAssetPrice(address(token1)) / 10**token1.decimals();\n\n    if (increaseToken0)\n      adjustedBaseFeeX4 = baseFeeX4 * value0 / (value1 + 1);\n    else\n      adjustedBaseFeeX4 = baseFeeX4 * value1 / (value0 + 1);\n\n    // Adjust from -50% to +50%\n    if (adjustedBaseFeeX4 < baseFeeX4 / 2) adjustedBaseFeeX4 = baseFeeX4 / 2;\n    if (adjustedBaseFeeX4 > baseFeeX4 * 3 / 2) adjustedBaseFeeX4 = baseFeeX4 * 3 / 2;\n  }\n\n\n  /// @notice fallback: deposit unless it's WETH being unwrapped\n  receive() external payable {\n    if(msg.sender != address(WETH)) deposit(address(WETH), msg.value);\n  }\n  \n}  ",
  "sourceMap": "974:15545:0:-:0;;;1877:28;;;-1:-1:-1;;;;1877:28:0;-1:-1:-1;;;1877:28:0;;;;1938:26;;2033:4;2012:25;;2357:891;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2575:4;2581:6;2029:5:20;:13;2575:4:0;2029:5:20;:13;:::i;:::-;-1:-1:-1;2052:7:20;:17;2062:7;2052;:17;:::i;:::-;;1963:113;;921:32:12;940:12;:10;;;:12;;:::i;:::-;921:18;:32::i;:::-;1701:1:19;1806:7;:22;-1:-1:-1;;;;;2605:25:0;::::1;2597:59;;;::::0;-1:-1:-1;;;2597:59:0;;5185:2:54;2597:59:0::1;::::0;::::1;5167:21:54::0;5224:2;5204:18;;;5197:30;5263:23;5243:18;;;5236:51;5304:18;;2597:59:0::1;;;;;;;;;-1:-1:-1::0;;;;;2670:28:0;::::1;2662:58;;;::::0;-1:-1:-1;;;2662:58:0;;5535:2:54;2662:58:0::1;::::0;::::1;5517:21:54::0;5574:2;5554:18;;;5547:30;-1:-1:-1;;;5593:18:54;;;5586:47;5650:18;;2662:58:0::1;5333:341:54::0;2662:58:0::1;-1:-1:-1::0;;;;;2734:20:0;::::1;2726:50;;;::::0;-1:-1:-1;;;2726:50:0;;5881:2:54;2726:50:0::1;::::0;::::1;5863:21:54::0;5920:2;5900:18;;;5893:30;-1:-1:-1;;;5939:18:54;;;5932:47;5996:18;;2726:50:0::1;5679:341:54::0;2726:50:0::1;2784:12;2798:15:::0;2815::::1;2847:9;-1:-1:-1::0;;;;;2837:26:0::1;;2864:6;2837:34;;;;;;;;;;;;;6171:25:54::0;;6159:2;6144:18;;6025:177;2837:34:0::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;2877:6:0::1;:23:::0;;-1:-1:-1;;;;;2877:23:0;;::::1;-1:-1:-1::0;;;;;;2877:23:0;;::::1;;::::0;;;2906:6:::1;:23:::0;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;2967:52:::1;::::0;;-1:-1:-1;;;2967:52:0;;;;2783:88;;-1:-1:-1;2783:88:0;;-1:-1:-1;2783:88:0;;-1:-1:-1;2967:50:0;::::1;::::0;::::1;::::0;:52:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;:50;:52:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2940:11;;:80;;;;;-1:-1:-1::0;;;;;2940:80:0::1;;;;;-1:-1:-1::0;;;;;2940:80:0::1;;;;;;3078:4;-1:-1:-1::0;;;;;3048:50:0::1;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3026:6;:75:::0;;-1:-1:-1;;;;;3026:75:0;;::::1;-1:-1:-1::0;;;;;;3026:75:0;;::::1;;::::0;;;3107:8:::1;:20:::0;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;3133:11:::1;:42:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;;3181:4:0::1;:18:::0;;3205:38;::::1;;-1:-1:-1::0;;;3205:38:0::1;-1:-1:-1::0;;;;;;3205:38:0;;;3181:18;;;::::1;3205:38:::0;;;;::::1;::::0;;;-1:-1:-1;974:15545:0;;-1:-1:-1;;;;974:15545:0;640:96:28;719:10;;640:96::o;2270:187:12:-;2362:6;;;-1:-1:-1;;;;;2378:17:12;;;-1:-1:-1;;;;;;2378:17:12;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;14:177:54:-;93:13;;-1:-1:-1;;;;;135:31:54;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:127::-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:840;382:5;435:3;428:4;420:6;416:17;412:27;402:55;;453:1;450;443:12;402:55;476:13;;-1:-1:-1;;;;;538:10:54;;;535:36;;;551:18;;:::i;:::-;626:2;620:9;594:2;680:13;;-1:-1:-1;;676:22:54;;;700:2;672:31;668:40;656:53;;;724:18;;;744:22;;;721:46;718:72;;;770:18;;:::i;:::-;810:10;806:2;799:22;845:2;837:6;830:18;867:4;857:14;;912:3;907:2;902;894:6;890:15;886:24;883:33;880:53;;;929:1;926;919:12;880:53;951:1;942:10;;961:133;975:2;972:1;969:9;961:133;;;1063:14;;;1059:23;;1053:30;1032:14;;;1028:23;;1021:63;986:10;;;;961:133;;;1136:1;1114:15;;;1110:24;;;1103:35;;;;1118:6;328:840;-1:-1:-1;;;;328:840:54:o;1173:164::-;1249:13;;1298;;1291:21;1281:32;;1271:60;;1327:1;1324;1317:12;1342:1047;1492:6;1500;1508;1516;1524;1532;1540;1548;1601:3;1589:9;1580:7;1576:23;1572:33;1569:53;;;1618:1;1615;1608:12;1569:53;1641:40;1671:9;1641:40;:::i;:::-;1631:50;;1700:49;1745:2;1734:9;1730:18;1700:49;:::i;:::-;1690:59;;1768:49;1813:2;1802:9;1798:18;1768:49;:::i;:::-;1857:2;1842:18;;1836:25;1905:3;1890:19;;1884:26;1758:59;;-1:-1:-1;1836:25:54;-1:-1:-1;;;;;;1959:14:54;;;1956:34;;;1986:1;1983;1976:12;1956:34;2009:61;2062:7;2053:6;2042:9;2038:22;2009:61;:::i;:::-;1999:71;;2116:3;2105:9;2101:19;2095:26;2079:42;;2146:2;2136:8;2133:16;2130:36;;;2162:1;2159;2152:12;2130:36;;2185:63;2240:7;2229:8;2218:9;2214:24;2185:63;:::i;:::-;2175:73;;;2267:50;2312:3;2301:9;2297:19;2267:50;:::i;:::-;2257:60;;2336:47;2378:3;2367:9;2363:19;2336:47;:::i;:::-;2326:57;;1342:1047;;;;;;;;;;;:::o;2394:380::-;2473:1;2469:12;;;;2516;;;2537:61;;2591:4;2583:6;2579:17;2569:27;;2537:61;2644:2;2636:6;2633:14;2613:18;2610:38;2607:161;;2690:10;2685:3;2681:20;2678:1;2671:31;2725:4;2722:1;2715:15;2753:4;2750:1;2743:15;2607:161;;2394:380;;;:::o;2905:545::-;3007:2;3002:3;2999:11;2996:448;;;3043:1;3068:5;3064:2;3057:17;3113:4;3109:2;3099:19;3183:2;3171:10;3167:19;3164:1;3160:27;3154:4;3150:38;3219:4;3207:10;3204:20;3201:47;;;-1:-1:-1;3242:4:54;3201:47;3297:2;3292:3;3288:12;3285:1;3281:20;3275:4;3271:31;3261:41;;3352:82;3370:2;3363:5;3360:13;3352:82;;;3415:17;;;3396:1;3385:13;3352:82;;;3356:3;;;2996:448;2905:545;;;:::o;3626:1352::-;3746:10;;-1:-1:-1;;;;;3768:30:54;;3765:56;;;3801:18;;:::i;:::-;3830:97;3920:6;3880:38;3912:4;3906:11;3880:38;:::i;:::-;3874:4;3830:97;:::i;:::-;3982:4;;4046:2;4035:14;;4063:1;4058:663;;;;4765:1;4782:6;4779:89;;;-1:-1:-1;4834:19:54;;;4828:26;4779:89;-1:-1:-1;;3583:1:54;3579:11;;;3575:24;3571:29;3561:40;3607:1;3603:11;;;3558:57;4881:81;;4028:944;;4058:663;2852:1;2845:14;;;2889:4;2876:18;;-1:-1:-1;;4094:20:54;;;4212:236;4226:7;4223:1;4220:14;4212:236;;;4315:19;;;4309:26;4294:42;;4407:27;;;;4375:1;4363:14;;;;4242:19;;4212:236;;;4216:3;4476:6;4467:7;4464:19;4461:201;;;4537:19;;;4531:26;-1:-1:-1;;4620:1:54;4616:14;;;4632:3;4612:24;4608:37;4604:42;4589:58;4574:74;;4461:201;-1:-1:-1;;;;;4708:1:54;4692:14;;;4688:22;4675:36;;-1:-1:-1;3626:1352:54:o;6207:544::-;6310:6;6318;6326;6334;6342;6395:3;6383:9;6374:7;6370:23;6366:33;6363:53;;;6412:1;6409;6402:12;6363:53;6435:40;6465:9;6435:40;:::i;:::-;6425:50;;6494:49;6539:2;6528:9;6524:18;6494:49;:::i;:::-;6484:59;;6562:49;6607:2;6596:9;6592:18;6562:49;:::i;:::-;6552:59;;6630:49;6675:2;6664:9;6660:18;6630:49;:::i;:::-;6620:59;;6698:47;6740:3;6729:9;6725:19;6698:47;:::i;:::-;6688:57;;6207:544;;;;;;;;:::o;6756:208::-;6826:6;6879:2;6867:9;6858:7;6854:23;6850:32;6847:52;;;6895:1;6892;6885:12;6847:52;6918:40;6948:9;6918:40;:::i;:::-;6908:50;6756:208;-1:-1:-1;;;6756:208:54:o;:::-;974:15545:0;;;;;;",
  "sourcePath": "contracts/GeVault.sol",
  "type": "contract"
}