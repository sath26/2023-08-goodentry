{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "lpToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "clToken0",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "clToken1",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "CL_TOKENA",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CL_TOKENB",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LP_TOKEN",
      "outputs": [
        {
          "internalType": "contract UniswapV2Pair",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimalsA",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimalsB",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestAnswer",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "33": "interfaces/AggregatorV3Interface.sol",
    "6": "contracts/helper/LPOracle.sol"
  },
  "ast": {
    "absolutePath": "contracts/helper/LPOracle.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        11293
      ],
      "IERC20": [
        4530
      ],
      "LPOracle": [
        4831
      ],
      "UniswapV2Pair": [
        4524
      ]
    },
    "id": 4832,
    "license": "none",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4498,
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:6"
      },
      {
        "absolutePath": "interfaces/AggregatorV3Interface.sol",
        "file": "../../interfaces/AggregatorV3Interface.sol",
        "id": 4499,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4832,
        "sourceUnit": 11294,
        "src": "58:52:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "UniswapV2Pair",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 4524,
        "linearizedBaseContracts": [
          4524
        ],
        "name": "UniswapV2Pair",
        "nameLocation": "122:13:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "18160ddd",
            "id": 4504,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "149:11:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4500,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "160:2:6"
            },
            "returnParameters": {
              "id": 4503,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4502,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4504,
                  "src": "186:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4501,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "186:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "185:6:6"
            },
            "scope": 4524,
            "src": "140:52:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "0902f1ac",
            "id": 4513,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getReserves",
            "nameLocation": "204:11:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4505,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "215:2:6"
            },
            "returnParameters": {
              "id": 4512,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4507,
                  "mutability": "mutable",
                  "name": "reserve0",
                  "nameLocation": "249:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 4513,
                  "src": "241:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint112",
                    "typeString": "uint112"
                  },
                  "typeName": {
                    "id": 4506,
                    "name": "uint112",
                    "nodeType": "ElementaryTypeName",
                    "src": "241:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint112",
                      "typeString": "uint112"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4509,
                  "mutability": "mutable",
                  "name": "reserve1",
                  "nameLocation": "267:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 4513,
                  "src": "259:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint112",
                    "typeString": "uint112"
                  },
                  "typeName": {
                    "id": 4508,
                    "name": "uint112",
                    "nodeType": "ElementaryTypeName",
                    "src": "259:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint112",
                      "typeString": "uint112"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4511,
                  "mutability": "mutable",
                  "name": "blockTimestampLast",
                  "nameLocation": "284:18:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 4513,
                  "src": "277:25:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 4510,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "277:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "240:63:6"
            },
            "scope": 4524,
            "src": "195:109:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "0dfe1681",
            "id": 4518,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "token0",
            "nameLocation": "316:6:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4514,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "322:2:6"
            },
            "returnParameters": {
              "id": 4517,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4516,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4518,
                  "src": "348:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4515,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "348:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "347:9:6"
            },
            "scope": 4524,
            "src": "307:50:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "d21220a7",
            "id": 4523,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "token1",
            "nameLocation": "369:6:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4519,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "375:2:6"
            },
            "returnParameters": {
              "id": 4522,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4521,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4523,
                  "src": "401:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4520,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "401:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "400:9:6"
            },
            "scope": 4524,
            "src": "360:50:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 4832,
        "src": "112:300:6",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IERC20",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 4530,
        "linearizedBaseContracts": [
          4530
        ],
        "name": "IERC20",
        "nameLocation": "424:6:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "313ce567",
            "id": 4529,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "444:8:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4525,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "452:2:6"
            },
            "returnParameters": {
              "id": 4528,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4527,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4529,
                  "src": "478:5:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 4526,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "478:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "477:7:6"
            },
            "scope": 4530,
            "src": "435:50:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 4832,
        "src": "414:73:6",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "LPOracle",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 4831,
        "linearizedBaseContracts": [
          4831
        ],
        "name": "LPOracle",
        "nameLocation": "498:8:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "e4571356",
            "id": 4533,
            "mutability": "immutable",
            "name": "CL_TOKENA",
            "nameLocation": "581:9:6",
            "nodeType": "VariableDeclaration",
            "scope": 4831,
            "src": "542:48:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AggregatorV3Interface_$11293",
              "typeString": "contract AggregatorV3Interface"
            },
            "typeName": {
              "id": 4532,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4531,
                "name": "AggregatorV3Interface",
                "nameLocations": [
                  "542:21:6"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 11293,
                "src": "542:21:6"
              },
              "referencedDeclaration": 11293,
              "src": "542:21:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorV3Interface_$11293",
                "typeString": "contract AggregatorV3Interface"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5fcf91aa",
            "id": 4536,
            "mutability": "immutable",
            "name": "CL_TOKENB",
            "nameLocation": "633:9:6",
            "nodeType": "VariableDeclaration",
            "scope": 4831,
            "src": "594:48:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AggregatorV3Interface_$11293",
              "typeString": "contract AggregatorV3Interface"
            },
            "typeName": {
              "id": 4535,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4534,
                "name": "AggregatorV3Interface",
                "nameLocations": [
                  "594:21:6"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 11293,
                "src": "594:21:6"
              },
              "referencedDeclaration": 11293,
              "src": "594:21:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorV3Interface_$11293",
                "typeString": "contract AggregatorV3Interface"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "bfd9041b",
            "id": 4539,
            "mutability": "immutable",
            "name": "LP_TOKEN",
            "nameLocation": "677:8:6",
            "nodeType": "VariableDeclaration",
            "scope": 4831,
            "src": "646:39:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_UniswapV2Pair_$4524",
              "typeString": "contract UniswapV2Pair"
            },
            "typeName": {
              "id": 4538,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4537,
                "name": "UniswapV2Pair",
                "nameLocations": [
                  "646:13:6"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4524,
                "src": "646:13:6"
              },
              "referencedDeclaration": 4524,
              "src": "646:13:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UniswapV2Pair_$4524",
                "typeString": "contract UniswapV2Pair"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "50894e9f",
            "id": 4541,
            "mutability": "immutable",
            "name": "decimalsA",
            "nameLocation": "711:9:6",
            "nodeType": "VariableDeclaration",
            "scope": 4831,
            "src": "688:32:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 4540,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "688:5:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "57cbf16c",
            "id": 4543,
            "mutability": "immutable",
            "name": "decimalsB",
            "nameLocation": "746:9:6",
            "nodeType": "VariableDeclaration",
            "scope": 4831,
            "src": "723:32:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 4542,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "723:5:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 4619,
              "nodeType": "Block",
              "src": "966:380:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 4573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 4566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 4559,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 4554,
                              "name": "lpToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4546,
                              "src": "980:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "307830",
                                  "id": 4557,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "999:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0x0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 4556,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "991:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 4555,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "991:7:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 4558,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "991:12:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "980:23:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 4565,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 4560,
                              "name": "clToken0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4548,
                              "src": "1007:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "307830",
                                  "id": 4563,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1027:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0x0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 4562,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1019:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 4561,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1019:7:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 4564,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1019:12:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "1007:24:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "980:51:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 4572,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4567,
                            "name": "clToken1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4550,
                            "src": "1035:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "307830",
                                "id": 4570,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1055:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0x0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 4569,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1047:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 4568,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1047:7:6",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 4571,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1047:12:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1035:24:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "980:79:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642061646472657373",
                        "id": 4574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1061:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
                          "typeString": "literal_string \"Invalid address\""
                        },
                        "value": "Invalid address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
                          "typeString": "literal_string \"Invalid address\""
                        }
                      ],
                      "id": 4553,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "972:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "972:107:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4576,
                  "nodeType": "ExpressionStatement",
                  "src": "972:107:6"
                },
                {
                  "expression": {
                    "id": 4581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4577,
                      "name": "LP_TOKEN",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4539,
                      "src": "1083:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UniswapV2Pair_$4524",
                        "typeString": "contract UniswapV2Pair"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4579,
                          "name": "lpToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4546,
                          "src": "1108:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 4578,
                        "name": "UniswapV2Pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4524,
                        "src": "1094:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_UniswapV2Pair_$4524_$",
                          "typeString": "type(contract UniswapV2Pair)"
                        }
                      },
                      "id": 4580,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1094:22:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UniswapV2Pair_$4524",
                        "typeString": "contract UniswapV2Pair"
                      }
                    },
                    "src": "1083:33:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UniswapV2Pair_$4524",
                      "typeString": "contract UniswapV2Pair"
                    }
                  },
                  "id": 4582,
                  "nodeType": "ExpressionStatement",
                  "src": "1083:33:6"
                },
                {
                  "expression": {
                    "id": 4587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4583,
                      "name": "CL_TOKENA",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4533,
                      "src": "1120:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$11293",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4585,
                          "name": "clToken0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4548,
                          "src": "1154:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 4584,
                        "name": "AggregatorV3Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11293,
                        "src": "1132:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$11293_$",
                          "typeString": "type(contract AggregatorV3Interface)"
                        }
                      },
                      "id": 4586,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1132:31:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$11293",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "src": "1120:43:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$11293",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "id": 4588,
                  "nodeType": "ExpressionStatement",
                  "src": "1120:43:6"
                },
                {
                  "expression": {
                    "id": 4593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4589,
                      "name": "CL_TOKENB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4536,
                      "src": "1167:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$11293",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4591,
                          "name": "clToken1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4550,
                          "src": "1201:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 4590,
                        "name": "AggregatorV3Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11293,
                        "src": "1179:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$11293_$",
                          "typeString": "type(contract AggregatorV3Interface)"
                        }
                      },
                      "id": 4592,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1179:31:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$11293",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "src": "1167:43:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$11293",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "id": 4594,
                  "nodeType": "ExpressionStatement",
                  "src": "1167:43:6"
                },
                {
                  "expression": {
                    "id": 4605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4595,
                      "name": "decimalsA",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4541,
                      "src": "1214:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 4598,
                                      "name": "lpToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4546,
                                      "src": "1247:7:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 4597,
                                    "name": "UniswapV2Pair",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4524,
                                    "src": "1233:13:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_UniswapV2Pair_$4524_$",
                                      "typeString": "type(contract UniswapV2Pair)"
                                    }
                                  },
                                  "id": 4599,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1233:22:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_UniswapV2Pair_$4524",
                                    "typeString": "contract UniswapV2Pair"
                                  }
                                },
                                "id": 4600,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1256:6:6",
                                "memberName": "token0",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4518,
                                "src": "1233:29:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                  "typeString": "function () view external returns (address)"
                                }
                              },
                              "id": 4601,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1233:31:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 4596,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4530,
                            "src": "1226:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$4530_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 4602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1226:39:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$4530",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 4603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1266:8:6",
                        "memberName": "decimals",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4529,
                        "src": "1226:48:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                          "typeString": "function () view external returns (uint8)"
                        }
                      },
                      "id": 4604,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1226:50:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "1214:62:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 4606,
                  "nodeType": "ExpressionStatement",
                  "src": "1214:62:6"
                },
                {
                  "expression": {
                    "id": 4617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4607,
                      "name": "decimalsB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4543,
                      "src": "1280:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 4610,
                                      "name": "lpToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4546,
                                      "src": "1313:7:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 4609,
                                    "name": "UniswapV2Pair",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4524,
                                    "src": "1299:13:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_UniswapV2Pair_$4524_$",
                                      "typeString": "type(contract UniswapV2Pair)"
                                    }
                                  },
                                  "id": 4611,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1299:22:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_UniswapV2Pair_$4524",
                                    "typeString": "contract UniswapV2Pair"
                                  }
                                },
                                "id": 4612,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1322:6:6",
                                "memberName": "token1",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4523,
                                "src": "1299:29:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                  "typeString": "function () view external returns (address)"
                                }
                              },
                              "id": 4613,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1299:31:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 4608,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4530,
                            "src": "1292:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$4530_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 4614,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1292:39:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$4530",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 4615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1332:8:6",
                        "memberName": "decimals",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4529,
                        "src": "1292:48:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                          "typeString": "function () view external returns (uint8)"
                        }
                      },
                      "id": 4616,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1292:50:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "1280:62:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 4618,
                  "nodeType": "ExpressionStatement",
                  "src": "1280:62:6"
                }
              ]
            },
            "documentation": {
              "id": 4544,
              "nodeType": "StructuredDocumentation",
              "src": "759:139:6",
              "text": "@param lpToken UNI-LP token\n @param clToken0 Underlying token0 ChainLink feed\n @param clToken1 Underlying token1 ChainLink feed"
            },
            "id": 4620,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4551,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4546,
                  "mutability": "mutable",
                  "name": "lpToken",
                  "nameLocation": "921:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 4620,
                  "src": "913:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4545,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "913:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4548,
                  "mutability": "mutable",
                  "name": "clToken0",
                  "nameLocation": "938:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 4620,
                  "src": "930:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4547,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "930:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4550,
                  "mutability": "mutable",
                  "name": "clToken1",
                  "nameLocation": "956:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 4620,
                  "src": "948:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4549,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "948:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "912:54:6"
            },
            "returnParameters": {
              "id": 4552,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "966:0:6"
            },
            "scope": 4831,
            "src": "900:446:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4628,
              "nodeType": "Block",
              "src": "1434:19:6",
              "statements": [
                {
                  "expression": {
                    "hexValue": "38",
                    "id": 4626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1447:1:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_8_by_1",
                      "typeString": "int_const 8"
                    },
                    "value": "8"
                  },
                  "functionReturnParameters": 4625,
                  "id": 4627,
                  "nodeType": "Return",
                  "src": "1440:8:6"
                }
              ]
            },
            "documentation": {
              "id": 4621,
              "nodeType": "StructuredDocumentation",
              "src": "1350:31:6",
              "text": "@notice Get oracle decimals"
            },
            "functionSelector": "313ce567",
            "id": 4629,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "1393:8:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4622,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1401:2:6"
            },
            "returnParameters": {
              "id": 4625,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4624,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4629,
                  "src": "1427:5:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 4623,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1427:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1426:7:6"
            },
            "scope": 4831,
            "src": "1384:69:6",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4670,
              "nodeType": "Block",
              "src": "1585:108:6",
              "statements": [
                {
                  "assignments": [
                    4638
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4638,
                      "mutability": "mutable",
                      "name": "z",
                      "nameLocation": "1596:1:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 4670,
                      "src": "1591:6:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4637,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1591:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4645,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4641,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4639,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4632,
                            "src": "1601:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 4640,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1605:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "1601:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 4642,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1600:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "32",
                      "id": 4643,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1610:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "1600:11:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1591:20:6"
                },
                {
                  "expression": {
                    "id": 4648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4646,
                      "name": "y",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4635,
                      "src": "1617:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4647,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4632,
                      "src": "1621:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1617:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4649,
                  "nodeType": "ExpressionStatement",
                  "src": "1617:5:6"
                },
                {
                  "body": {
                    "id": 4668,
                    "nodeType": "Block",
                    "src": "1642:47:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 4655,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4653,
                            "name": "y",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4635,
                            "src": "1650:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 4654,
                            "name": "z",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4638,
                            "src": "1654:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1650:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4656,
                        "nodeType": "ExpressionStatement",
                        "src": "1650:5:6"
                      },
                      {
                        "expression": {
                          "id": 4666,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4657,
                            "name": "z",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4638,
                            "src": "1663:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 4665,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 4662,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 4660,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 4658,
                                      "name": "x",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4632,
                                      "src": "1668:1:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "/",
                                    "rightExpression": {
                                      "id": 4659,
                                      "name": "z",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4638,
                                      "src": "1672:1:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "1668:5:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "id": 4661,
                                    "name": "z",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4638,
                                    "src": "1676:1:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "1668:9:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 4663,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "1667:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "32",
                              "id": 4664,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1681:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "src": "1667:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1663:19:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4667,
                        "nodeType": "ExpressionStatement",
                        "src": "1663:19:6"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4650,
                      "name": "z",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4638,
                      "src": "1635:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 4651,
                      "name": "y",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4635,
                      "src": "1639:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1635:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4669,
                  "nodeType": "WhileStatement",
                  "src": "1628:61:6"
                }
              ]
            },
            "documentation": {
              "id": 4630,
              "nodeType": "StructuredDocumentation",
              "src": "1457:72:6",
              "text": "@notice Calculate a square root \n @param y Square root variable"
            },
            "id": 4671,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sqrt",
            "nameLocation": "1541:4:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4633,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4632,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "1551:1:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 4671,
                  "src": "1546:6:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4631,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1546:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1545:8:6"
            },
            "returnParameters": {
              "id": 4636,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4635,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "1582:1:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 4671,
                  "src": "1577:6:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4634,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1577:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1576:8:6"
            },
            "scope": 4831,
            "src": "1532:161:6",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4697,
              "nodeType": "Block",
              "src": "1910:172:6",
              "statements": [
                {
                  "assignments": [
                    null,
                    4681,
                    null,
                    4683,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 4681,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "1937:5:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 4697,
                      "src": "1933:9:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 4680,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "1933:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    {
                      "constant": false,
                      "id": 4683,
                      "mutability": "mutable",
                      "name": "timeStamp",
                      "nameLocation": "1963:9:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 4697,
                      "src": "1958:14:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4682,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1958:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 4687,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 4684,
                        "name": "priceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4675,
                        "src": "1982:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$11293",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 4685,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1992:15:6",
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11292,
                      "src": "1982:25:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 4686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1982:27:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1916:93:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4689,
                          "name": "timeStamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4683,
                          "src": "2023:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 4690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2035:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2023:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f756e64206e6f7420636f6d706c657465",
                        "id": 4692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2038:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b7ecab3e737ab1feff263511100307a44f17c7fb1128774d25941524e6209697",
                          "typeString": "literal_string \"Round not complete\""
                        },
                        "value": "Round not complete"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b7ecab3e737ab1feff263511100307a44f17c7fb1128774d25941524e6209697",
                          "typeString": "literal_string \"Round not complete\""
                        }
                      ],
                      "id": 4688,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2015:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2015:44:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4694,
                  "nodeType": "ExpressionStatement",
                  "src": "2015:44:6"
                },
                {
                  "expression": {
                    "id": 4695,
                    "name": "price",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4681,
                    "src": "2072:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 4679,
                  "id": 4696,
                  "nodeType": "Return",
                  "src": "2065:12:6"
                }
              ]
            },
            "documentation": {
              "id": 4672,
              "nodeType": "StructuredDocumentation",
              "src": "1697:127:6",
              "text": "@notice Get the price for the latest available round of a feed\n @param priceFeed Price feed\n @return Latest price"
            },
            "id": 4698,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAnswer",
            "nameLocation": "1836:9:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4676,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4675,
                  "mutability": "mutable",
                  "name": "priceFeed",
                  "nameLocation": "1868:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 4698,
                  "src": "1846:31:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_AggregatorV3Interface_$11293",
                    "typeString": "contract AggregatorV3Interface"
                  },
                  "typeName": {
                    "id": 4674,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4673,
                      "name": "AggregatorV3Interface",
                      "nameLocations": [
                        "1846:21:6"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 11293,
                      "src": "1846:21:6"
                    },
                    "referencedDeclaration": 11293,
                    "src": "1846:21:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$11293",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1845:33:6"
            },
            "returnParameters": {
              "id": 4679,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4678,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4698,
                  "src": "1902:6:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 4677,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1902:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1901:8:6"
            },
            "scope": 4831,
            "src": "1827:255:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4829,
              "nodeType": "Block",
              "src": "2234:1679:6",
              "statements": [
                {
                  "assignments": [
                    4705,
                    4707,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4705,
                      "mutability": "mutable",
                      "name": "a",
                      "nameLocation": "2246:1:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 4829,
                      "src": "2241:6:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4704,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2241:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 4707,
                      "mutability": "mutable",
                      "name": "b",
                      "nameLocation": "2254:1:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 4829,
                      "src": "2249:6:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4706,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2249:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 4711,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 4708,
                        "name": "LP_TOKEN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4539,
                        "src": "2260:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UniswapV2Pair_$4524",
                          "typeString": "contract UniswapV2Pair"
                        }
                      },
                      "id": 4709,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2269:11:6",
                      "memberName": "getReserves",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4513,
                      "src": "2260:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
                        "typeString": "function () view external returns (uint112,uint112,uint32)"
                      }
                    },
                    "id": 4710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2260:22:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                      "typeString": "tuple(uint112,uint112,uint32)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2240:42:6"
                },
                {
                  "assignments": [
                    4713
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4713,
                      "mutability": "mutable",
                      "name": "priceA",
                      "nameLocation": "2294:6:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 4829,
                      "src": "2289:11:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4712,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2289:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4720,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4717,
                            "name": "CL_TOKENA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4533,
                            "src": "2318:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$11293",
                              "typeString": "contract AggregatorV3Interface"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$11293",
                              "typeString": "contract AggregatorV3Interface"
                            }
                          ],
                          "id": 4716,
                          "name": "getAnswer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4698,
                          "src": "2308:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_contract$_AggregatorV3Interface_$11293_$returns$_t_int256_$",
                            "typeString": "function (contract AggregatorV3Interface) view returns (int256)"
                          }
                        },
                        "id": 4718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2308:20:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 4715,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2303:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 4714,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2303:4:6",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 4719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2303:26:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2289:40:6"
                },
                {
                  "assignments": [
                    4722
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4722,
                      "mutability": "mutable",
                      "name": "priceB",
                      "nameLocation": "2340:6:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 4829,
                      "src": "2335:11:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4721,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2335:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4729,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4726,
                            "name": "CL_TOKENB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4536,
                            "src": "2364:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$11293",
                              "typeString": "contract AggregatorV3Interface"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$11293",
                              "typeString": "contract AggregatorV3Interface"
                            }
                          ],
                          "id": 4725,
                          "name": "getAnswer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4698,
                          "src": "2354:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_contract$_AggregatorV3Interface_$11293_$returns$_t_int256_$",
                            "typeString": "function (contract AggregatorV3Interface) view returns (int256)"
                          }
                        },
                        "id": 4727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2354:20:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 4724,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2349:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 4723,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2349:4:6",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 4728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2349:26:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2335:40:6"
                },
                {
                  "assignments": [
                    4731
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4731,
                      "mutability": "mutable",
                      "name": "norm_b",
                      "nameLocation": "3164:6:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 4829,
                      "src": "3159:11:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4730,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3159:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4732,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3159:11:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 4735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4733,
                      "name": "decimalsB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4543,
                      "src": "3180:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 4734,
                      "name": "decimalsA",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4541,
                      "src": "3193:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "3180:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 4775,
                    "nodeType": "Block",
                    "src": "3293:83:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 4773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4756,
                            "name": "norm_b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4731,
                            "src": "3301:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 4771,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 4769,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 4762,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 4760,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 4758,
                                        "name": "a",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4705,
                                        "src": "3316:1:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "id": 4759,
                                        "name": "b",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4707,
                                        "src": "3320:1:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "3316:5:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 4761,
                                      "name": "priceA",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4713,
                                      "src": "3324:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "3316:14:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 4768,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "3130",
                                      "id": 4763,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3333:2:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_10_by_1",
                                        "typeString": "int_const 10"
                                      },
                                      "value": "10"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "**",
                                    "rightExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          },
                                          "id": 4766,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 4764,
                                            "name": "decimalsA",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4541,
                                            "src": "3338:9:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "id": 4765,
                                            "name": "decimalsB",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4543,
                                            "src": "3348:9:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "src": "3338:19:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        }
                                      ],
                                      "id": 4767,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "3337:21:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "src": "3333:25:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "3316:42:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "id": 4770,
                                  "name": "priceB",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4722,
                                  "src": "3361:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3316:51:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 4757,
                              "name": "sqrt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4671,
                              "src": "3310:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (uint256)"
                              }
                            },
                            "id": 4772,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3310:59:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3301:68:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4774,
                        "nodeType": "ExpressionStatement",
                        "src": "3301:68:6"
                      }
                    ]
                  },
                  "id": 4776,
                  "nodeType": "IfStatement",
                  "src": "3176:200:6",
                  "trueBody": {
                    "id": 4755,
                    "nodeType": "Block",
                    "src": "3204:83:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 4753,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4736,
                            "name": "norm_b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4731,
                            "src": "3212:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 4751,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 4749,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 4742,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 4740,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 4738,
                                        "name": "a",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4705,
                                        "src": "3227:1:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "id": 4739,
                                        "name": "b",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4707,
                                        "src": "3231:1:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "3227:5:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 4741,
                                      "name": "priceA",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4713,
                                      "src": "3235:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "3227:14:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 4748,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "3130",
                                      "id": 4743,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3244:2:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_10_by_1",
                                        "typeString": "int_const 10"
                                      },
                                      "value": "10"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "**",
                                    "rightExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          },
                                          "id": 4746,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 4744,
                                            "name": "decimalsB",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4543,
                                            "src": "3249:9:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "id": 4745,
                                            "name": "decimalsA",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4541,
                                            "src": "3259:9:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "src": "3249:19:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        }
                                      ],
                                      "id": 4747,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "3248:21:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "src": "3244:25:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "3227:42:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "id": 4750,
                                  "name": "priceB",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4722,
                                  "src": "3272:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3227:51:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 4737,
                              "name": "sqrt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4671,
                              "src": "3221:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (uint256)"
                              }
                            },
                            "id": 4752,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3221:59:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3212:68:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4754,
                        "nodeType": "ExpressionStatement",
                        "src": "3212:68:6"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    4778
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4778,
                      "mutability": "mutable",
                      "name": "norm_a",
                      "nameLocation": "3386:6:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 4829,
                      "src": "3381:11:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4777,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3381:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4784,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4781,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 4779,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4705,
                        "src": "3395:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "id": 4780,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4707,
                        "src": "3399:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3395:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 4782,
                      "name": "norm_b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4731,
                      "src": "3403:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3395:14:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3381:28:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 4792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 4788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4786,
                            "name": "decimalsA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4541,
                            "src": "3715:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 4787,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3728:2:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "3715:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 4791,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4789,
                            "name": "decimalsB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4543,
                            "src": "3734:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 4790,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3747:2:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "3734:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3715:34:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e636f727265637420746f6b656e73",
                        "id": 4793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3751:18:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9e9c06bba4b0b1921d11e944c13c9b201361998775ba4758649bb2b576e9a0d2",
                          "typeString": "literal_string \"Incorrect tokens\""
                        },
                        "value": "Incorrect tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9e9c06bba4b0b1921d11e944c13c9b201361998775ba4758649bb2b576e9a0d2",
                          "typeString": "literal_string \"Incorrect tokens\""
                        }
                      ],
                      "id": 4785,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3707:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3707:63:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4795,
                  "nodeType": "ExpressionStatement",
                  "src": "3707:63:6"
                },
                {
                  "assignments": [
                    4797
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4797,
                      "mutability": "mutable",
                      "name": "val",
                      "nameLocation": "3781:3:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 4829,
                      "src": "3776:8:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4796,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3776:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4819,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4807,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4798,
                          "name": "norm_a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4778,
                          "src": "3787:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 4799,
                          "name": "priceA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4713,
                          "src": "3796:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3787:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 4801,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3805:2:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "id": 4804,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3138",
                                "id": 4802,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3810:2:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_18_by_1",
                                  "typeString": "int_const 18"
                                },
                                "value": "18"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 4803,
                                "name": "decimalsA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4541,
                                "src": "3813:9:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "src": "3810:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "id": 4805,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "3809:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "3805:18:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3787:36:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4817,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4808,
                          "name": "norm_b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4731,
                          "src": "3826:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 4809,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3835:2:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                "id": 4812,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3138",
                                  "id": 4810,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3840:2:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_18_by_1",
                                    "typeString": "int_const 18"
                                  },
                                  "value": "18"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 4811,
                                  "name": "decimalsB",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4543,
                                  "src": "3843:9:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "src": "3840:12:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              }
                            ],
                            "id": 4813,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "3839:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "3835:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3826:27:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "id": 4816,
                        "name": "priceB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4722,
                        "src": "3856:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3826:36:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3787:75:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3776:86:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4826,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4822,
                          "name": "val",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4797,
                          "src": "3879:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 4823,
                              "name": "LP_TOKEN",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4539,
                              "src": "3885:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_UniswapV2Pair_$4524",
                                "typeString": "contract UniswapV2Pair"
                              }
                            },
                            "id": 4824,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3894:11:6",
                            "memberName": "totalSupply",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4504,
                            "src": "3885:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 4825,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3885:22:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3879:28:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4821,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3875:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_int256_$",
                        "typeString": "type(int256)"
                      },
                      "typeName": {
                        "id": 4820,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "3875:3:6",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 4827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3875:33:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 4703,
                  "id": 4828,
                  "nodeType": "Return",
                  "src": "3868:40:6"
                }
              ]
            },
            "documentation": {
              "id": 4699,
              "nodeType": "StructuredDocumentation",
              "src": "2086:90:6",
              "text": "@notice Get the oracle price for the latest available round\n @return Latest price"
            },
            "functionSelector": "50d25bcd",
            "id": 4830,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "latestAnswer",
            "nameLocation": "2188:12:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4700,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2200:2:6"
            },
            "returnParameters": {
              "id": 4703,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4702,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4830,
                  "src": "2226:6:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 4701,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2226:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2225:8:6"
            },
            "scope": 4831,
            "src": "2179:1734:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 4832,
        "src": "489:3426:6",
        "usedErrors": []
      }
    ],
    "src": "33:3883:6"
  },
  "bytecode": "6101206040523480156200001257600080fd5b5060405162000d4d38038062000d4d833981016040819052620000359162000294565b6001600160a01b038316158015906200005657506001600160a01b03821615155b80156200006b57506001600160a01b03811615155b620000ae5760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b604482015260640160405180910390fd5b6001600160a01b0380841660c081905283821660805290821660a05260408051630dfe168160e01b81529051630dfe1681916004808201926020929091908290030181865afa15801562000106573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200012c9190620002de565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200016a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000190919062000303565b60ff1660e08160ff1681525050826001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015620001dc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002029190620002de565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000240573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000266919062000303565b60ff16610100525062000328915050565b80516001600160a01b03811681146200028f57600080fd5b919050565b600080600060608486031215620002aa57600080fd5b620002b58462000277565b9250620002c56020850162000277565b9150620002d56040850162000277565b90509250925092565b600060208284031215620002f157600080fd5b620002fc8262000277565b9392505050565b6000602082840312156200031657600080fd5b815160ff81168114620002fc57600080fd5b60805160a05160c05160e05161010051610980620003cd6000396000818160de015281816102ad015281816102fe0152818161036b01528181610429015261049a01526000818160a101528181610289015281816102dd0152818161038c015281816103fa01526104e4015260008181610144015281816101940152610537015260008181610105015261025f01526000818161016b015261023201526109806000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806357cbf16c1161005b57806357cbf16c146100d95780635fcf91aa14610100578063bfd9041b1461013f578063e45713561461016657600080fd5b8063313ce5671461008257806350894e9f1461009c57806350d25bcd146100c3575b600080fd5b60085b60405160ff90911681526020015b60405180910390f35b6100857f000000000000000000000000000000000000000000000000000000000000000081565b6100cb61018d565b604051908152602001610093565b6100857f000000000000000000000000000000000000000000000000000000000000000081565b6101277f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610093565b6101277f000000000000000000000000000000000000000000000000000000000000000081565b6101277f000000000000000000000000000000000000000000000000000000000000000081565b60008060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa1580156101f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021491906106fc565b506001600160701b031691506001600160701b0316915060006102567f00000000000000000000000000000000000000000000000000000000000000006105cd565b905060006102837f00000000000000000000000000000000000000000000000000000000000000006105cd565b905060007f000000000000000000000000000000000000000000000000000000000000000060ff167f000000000000000000000000000000000000000000000000000000000000000060ff16106103625761035b826103227f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610762565b61032d90600a610865565b85610338888a61087b565b610342919061087b565b61034c919061087b565b6103569190610892565b610687565b90506103dd565b6103da826103b07f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610762565b6103bb90600a610865565b856103c6888a61087b565b6103d0919061087b565b61034c9190610892565b90505b6000816103ea868861087b565b6103f49190610892565b905060127f000000000000000000000000000000000000000000000000000000000000000060ff161115801561044e575060127f000000000000000000000000000000000000000000000000000000000000000060ff1611155b6104925760405162461bcd60e51b815260206004820152601060248201526f496e636f727265637420746f6b656e7360801b60448201526064015b60405180910390fd5b6000836104c07f00000000000000000000000000000000000000000000000000000000000000006012610762565b6104cb90600a610865565b6104d5908561087b565b6104df919061087b565b61050a7f00000000000000000000000000000000000000000000000000000000000000006012610762565b61051590600a610865565b61051f878561087b565b610529919061087b565b61053391906108b4565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610593573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b791906108c7565b6105c19082610892565b97505050505050505090565b6000806000836001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610610573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063491906108fa565b50935050925050600081116106805760405162461bcd60e51b8152602060048201526012602482015271526f756e64206e6f7420636f6d706c65746560701b6044820152606401610489565b5092915050565b60008060026106978460016108b4565b6106a19190610892565b90508291505b818110156106da579050806002816106bf8186610892565b6106c991906108b4565b6106d39190610892565b90506106a7565b50919050565b80516001600160701b03811681146106f757600080fd5b919050565b60008060006060848603121561071157600080fd5b61071a846106e0565b9250610728602085016106e0565b9150604084015163ffffffff8116811461074157600080fd5b809150509250925092565b634e487b7160e01b600052601160045260246000fd5b60ff828116828216039081111561077b5761077b61074c565b92915050565b600181815b808511156107bc5781600019048211156107a2576107a261074c565b808516156107af57918102915b93841c9390800290610786565b509250929050565b6000826107d35750600161077b565b816107e05750600061077b565b81600181146107f657600281146108005761081c565b600191505061077b565b60ff8411156108115761081161074c565b50506001821b61077b565b5060208310610133831016604e8410600b841016171561083f575081810a61077b565b6108498383610781565b806000190482111561085d5761085d61074c565b029392505050565b600061087460ff8416836107c4565b9392505050565b808202811582820484141761077b5761077b61074c565b6000826108af57634e487b7160e01b600052601260045260246000fd5b500490565b8082018082111561077b5761077b61074c565b6000602082840312156108d957600080fd5b5051919050565b805169ffffffffffffffffffff811681146106f757600080fd5b600080600080600060a0868803121561091257600080fd5b61091b866108e0565b945060208601519350604086015192506060860151915061093e608087016108e0565b9050929550929590935056fea2646970667358221220799a4aebd56a361a25b951fb9e426cab6377b010a5a822283f9e7ba3a29a4e0464736f6c63430008130033",
  "bytecodeSha1": "beb3728e8c2ad6737218d52bf01177a274d1bcc7",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.19+commit.7dd6d404"
  },
  "contractName": "LPOracle",
  "coverageMap": {
    "branches": {
      "33": {},
      "6": {
        "LPOracle.getAnswer": {
          "13": [
            2023,
            2036,
            true
          ]
        },
        "LPOracle.latestAnswer": {
          "10": [
            3180,
            3202,
            false
          ],
          "11": [
            3715,
            3730,
            false
          ],
          "12": [
            3734,
            3749,
            true
          ]
        }
      }
    },
    "statements": {
      "33": {},
      "6": {
        "LPOracle.decimals": {
          "0": [
            1440,
            1448
          ]
        },
        "LPOracle.getAnswer": {
          "5": [
            2015,
            2059
          ],
          "6": [
            2065,
            2077
          ]
        },
        "LPOracle.latestAnswer": {
          "1": [
            3212,
            3280
          ],
          "2": [
            3301,
            3369
          ],
          "3": [
            3707,
            3770
          ],
          "4": [
            3868,
            3908
          ]
        },
        "LPOracle.sqrt": {
          "7": [
            1617,
            1622
          ],
          "8": [
            1650,
            1655
          ],
          "9": [
            1663,
            1682
          ]
        }
      }
    }
  },
  "dependencies": [
    "AggregatorV3Interface",
    "IERC20",
    "UniswapV2Pair"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061007d5760003560e01c806357cbf16c1161005b57806357cbf16c146100d95780635fcf91aa14610100578063bfd9041b1461013f578063e45713561461016657600080fd5b8063313ce5671461008257806350894e9f1461009c57806350d25bcd146100c3575b600080fd5b60085b60405160ff90911681526020015b60405180910390f35b6100857f000000000000000000000000000000000000000000000000000000000000000081565b6100cb61018d565b604051908152602001610093565b6100857f000000000000000000000000000000000000000000000000000000000000000081565b6101277f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610093565b6101277f000000000000000000000000000000000000000000000000000000000000000081565b6101277f000000000000000000000000000000000000000000000000000000000000000081565b60008060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa1580156101f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021491906106fc565b506001600160701b031691506001600160701b0316915060006102567f00000000000000000000000000000000000000000000000000000000000000006105cd565b905060006102837f00000000000000000000000000000000000000000000000000000000000000006105cd565b905060007f000000000000000000000000000000000000000000000000000000000000000060ff167f000000000000000000000000000000000000000000000000000000000000000060ff16106103625761035b826103227f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610762565b61032d90600a610865565b85610338888a61087b565b610342919061087b565b61034c919061087b565b6103569190610892565b610687565b90506103dd565b6103da826103b07f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610762565b6103bb90600a610865565b856103c6888a61087b565b6103d0919061087b565b61034c9190610892565b90505b6000816103ea868861087b565b6103f49190610892565b905060127f000000000000000000000000000000000000000000000000000000000000000060ff161115801561044e575060127f000000000000000000000000000000000000000000000000000000000000000060ff1611155b6104925760405162461bcd60e51b815260206004820152601060248201526f496e636f727265637420746f6b656e7360801b60448201526064015b60405180910390fd5b6000836104c07f00000000000000000000000000000000000000000000000000000000000000006012610762565b6104cb90600a610865565b6104d5908561087b565b6104df919061087b565b61050a7f00000000000000000000000000000000000000000000000000000000000000006012610762565b61051590600a610865565b61051f878561087b565b610529919061087b565b61053391906108b4565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610593573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b791906108c7565b6105c19082610892565b97505050505050505090565b6000806000836001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610610573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063491906108fa565b50935050925050600081116106805760405162461bcd60e51b8152602060048201526012602482015271526f756e64206e6f7420636f6d706c65746560701b6044820152606401610489565b5092915050565b60008060026106978460016108b4565b6106a19190610892565b90508291505b818110156106da579050806002816106bf8186610892565b6106c991906108b4565b6106d39190610892565b90506106a7565b50919050565b80516001600160701b03811681146106f757600080fd5b919050565b60008060006060848603121561071157600080fd5b61071a846106e0565b9250610728602085016106e0565b9150604084015163ffffffff8116811461074157600080fd5b809150509250925092565b634e487b7160e01b600052601160045260246000fd5b60ff828116828216039081111561077b5761077b61074c565b92915050565b600181815b808511156107bc5781600019048211156107a2576107a261074c565b808516156107af57918102915b93841c9390800290610786565b509250929050565b6000826107d35750600161077b565b816107e05750600061077b565b81600181146107f657600281146108005761081c565b600191505061077b565b60ff8411156108115761081161074c565b50506001821b61077b565b5060208310610133831016604e8410600b841016171561083f575081810a61077b565b6108498383610781565b806000190482111561085d5761085d61074c565b029392505050565b600061087460ff8416836107c4565b9392505050565b808202811582820484141761077b5761077b61074c565b6000826108af57634e487b7160e01b600052601260045260246000fd5b500490565b8082018082111561077b5761077b61074c565b6000602082840312156108d957600080fd5b5051919050565b805169ffffffffffffffffffff811681146106f757600080fd5b600080600080600060a0868803121561091257600080fd5b61091b866108e0565b945060208601519350604086015192506060860151915061093e608087016108e0565b9050929550929590935056fea2646970667358221220799a4aebd56a361a25b951fb9e426cab6377b010a5a822283f9e7ba3a29a4e0464736f6c63430008130033",
  "deployedSourceMap": "489:3426:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1384:69;1447:1;1384:69;;;186:4:54;174:17;;;156:36;;144:2;129:18;1384:69:6;;;;;;;;688:32;;;;;2179:1734;;;:::i;:::-;;;347:25:54;;;335:2;320:18;2179:1734:6;203:175:54;723:32:6;;;;;594:48;;;;;;;;-1:-1:-1;;;;;578:32:54;;;560:51;;548:2;533:18;594:48:6;383:234:54;646:39:6;;;;;542:48;;;;;2179:1734;2226:6;2241;2249;2260:8;-1:-1:-1;;;;;2260:20:6;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2240:42;-1:-1:-1;;;;;2240:42:6;;;-1:-1:-1;;;;;2240:42:6;;;2289:11;2308:20;2318:9;2308;:20::i;:::-;2289:40;;2335:11;2354:20;2364:9;2354;:20::i;:::-;2335:40;;3159:11;3193:9;3180:22;;:9;:22;;;3176:200;;3221:59;3272:6;3249:19;3259:9;3249;:19;:::i;:::-;3244:25;;:2;:25;:::i;:::-;3235:6;3227:5;3231:1;3227;:5;:::i;:::-;:14;;;;:::i;:::-;:42;;;;:::i;:::-;:51;;;;:::i;:::-;3221:4;:59::i;:::-;3212:68;;3176:200;;;3310:59;3361:6;3338:19;3348:9;3338;:19;:::i;:::-;3333:25;;:2;:25;:::i;:::-;3324:6;3316:5;3320:1;3316;:5;:::i;:::-;:14;;;;:::i;:::-;:42;;;;:::i;3310:59::-;3301:68;;3176:200;3381:11;3403:6;3395:5;3399:1;3395;:5;:::i;:::-;:14;;;;:::i;:::-;3381:28;;3728:2;3715:9;:15;;;;:34;;;;;3747:2;3734:9;:15;;;;3715:34;3707:63;;;;-1:-1:-1;;;3707:63:6;;3768:2:54;3707:63:6;;;3750:21:54;3807:2;3787:18;;;3780:30;-1:-1:-1;;;3826:18:54;;;3819:46;3882:18;;3707:63:6;;;;;;;;;3776:8;3856:6;3840:12;3843:9;3840:2;:12;:::i;:::-;3835:18;;:2;:18;:::i;:::-;3826:27;;:6;:27;:::i;:::-;:36;;;;:::i;:::-;3810:12;3813:9;3810:2;:12;:::i;:::-;3805:18;;:2;:18;:::i;:::-;3787:15;3796:6;3787;:15;:::i;:::-;:36;;;;:::i;:::-;:75;;;;:::i;:::-;3776:86;;3885:8;-1:-1:-1;;;;;3885:20:6;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3879:28;;:3;:28;:::i;:::-;3868:40;;;;;;;;;2179:1734;:::o;1827:255::-;1902:6;1933:9;1958:14;1982:9;-1:-1:-1;;;;;1982:25:6;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1916:93;;;;;;;2035:1;2023:9;:13;2015:44;;;;-1:-1:-1;;;2015:44:6;;5094:2:54;2015:44:6;;;5076:21:54;5133:2;5113:18;;;5106:30;-1:-1:-1;;;5152:18:54;;;5145:48;5210:18;;2015:44:6;4892:342:54;2015:44:6;-1:-1:-1;2072:5:6;1827:255;-1:-1:-1;;1827:255:6:o;1532:161::-;1577:6;;1610:1;1601:5;:1;1605;1601:5;:::i;:::-;1600:11;;;;:::i;:::-;1591:20;;1621:1;1617:5;;1628:61;1639:1;1635;:5;1628:61;;;1654:1;-1:-1:-1;1654:1:6;1681;1654;1668:5;1654:1;1668;:5;:::i;:::-;:9;;;;:::i;:::-;1667:15;;;;:::i;:::-;1663:19;;1628:61;;;1585:108;1532:161;;;:::o;852:188:54:-;931:13;;-1:-1:-1;;;;;973:42:54;;963:53;;953:81;;1030:1;1027;1020:12;953:81;852:188;;;:::o;1045:450::-;1132:6;1140;1148;1201:2;1189:9;1180:7;1176:23;1172:32;1169:52;;;1217:1;1214;1207:12;1169:52;1240:40;1270:9;1240:40;:::i;:::-;1230:50;;1299:49;1344:2;1333:9;1329:18;1299:49;:::i;:::-;1289:59;;1391:2;1380:9;1376:18;1370:25;1435:10;1428:5;1424:22;1417:5;1414:33;1404:61;;1461:1;1458;1451:12;1404:61;1484:5;1474:15;;;1045:450;;;;;:::o;1500:127::-;1561:10;1556:3;1552:20;1549:1;1542:31;1592:4;1589:1;1582:15;1616:4;1613:1;1606:15;1632:151;1722:4;1715:12;;;1701;;;1697:31;;1740:14;;1737:40;;;1757:18;;:::i;:::-;1632:151;;;;:::o;1788:422::-;1877:1;1920:5;1877:1;1934:270;1955:7;1945:8;1942:21;1934:270;;;2014:4;2010:1;2006:6;2002:17;1996:4;1993:27;1990:53;;;2023:18;;:::i;:::-;2073:7;2063:8;2059:22;2056:55;;;2093:16;;;;2056:55;2172:22;;;;2132:15;;;;1934:270;;;1938:3;1788:422;;;;;:::o;2215:806::-;2264:5;2294:8;2284:80;;-1:-1:-1;2335:1:54;2349:5;;2284:80;2383:4;2373:76;;-1:-1:-1;2420:1:54;2434:5;;2373:76;2465:4;2483:1;2478:59;;;;2551:1;2546:130;;;;2458:218;;2478:59;2508:1;2499:10;;2522:5;;;2546:130;2583:3;2573:8;2570:17;2567:43;;;2590:18;;:::i;:::-;-1:-1:-1;;2646:1:54;2632:16;;2661:5;;2458:218;;2760:2;2750:8;2747:16;2741:3;2735:4;2732:13;2728:36;2722:2;2712:8;2709:16;2704:2;2698:4;2695:12;2691:35;2688:77;2685:159;;;-1:-1:-1;2797:19:54;;;2829:5;;2685:159;2876:34;2901:8;2895:4;2876:34;:::i;:::-;2946:6;2942:1;2938:6;2934:19;2925:7;2922:32;2919:58;;;2957:18;;:::i;:::-;2995:20;;2215:806;-1:-1:-1;;;2215:806:54:o;3026:140::-;3084:5;3113:47;3154:4;3144:8;3140:19;3134:4;3113:47;:::i;:::-;3104:56;3026:140;-1:-1:-1;;;3026:140:54:o;3171:168::-;3244:9;;;3275;;3292:15;;;3286:22;;3272:37;3262:71;;3313:18;;:::i;3344:217::-;3384:1;3410;3400:132;;3454:10;3449:3;3445:20;3442:1;3435:31;3489:4;3486:1;3479:15;3517:4;3514:1;3507:15;3400:132;-1:-1:-1;3546:9:54;;3344:217::o;3911:125::-;3976:9;;;3997:10;;;3994:36;;;4010:18;;:::i;4041:184::-;4111:6;4164:2;4152:9;4143:7;4139:23;4135:32;4132:52;;;4180:1;4177;4170:12;4132:52;-1:-1:-1;4203:16:54;;4041:184;-1:-1:-1;4041:184:54:o;4230:179::-;4308:13;;4361:22;4350:34;;4340:45;;4330:73;;4399:1;4396;4389:12;4414:473;4517:6;4525;4533;4541;4549;4602:3;4590:9;4581:7;4577:23;4573:33;4570:53;;;4619:1;4616;4609:12;4570:53;4642:39;4671:9;4642:39;:::i;:::-;4632:49;;4721:2;4710:9;4706:18;4700:25;4690:35;;4765:2;4754:9;4750:18;4744:25;4734:35;;4809:2;4798:9;4794:18;4788:25;4778:35;;4832:49;4876:3;4865:9;4861:19;4832:49;:::i;:::-;4822:59;;4414:473;;;;;;;;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "constructor": {
        "params": {
          "clToken0": "Underlying token0 ChainLink feed",
          "clToken1": "Underlying token1 ChainLink feed",
          "lpToken": "UNI-LP token"
        }
      },
      "decimals()": {
        "notice": "Get oracle decimals"
      },
      "latestAnswer()": {
        "notice": "Get the oracle price for the latest available round",
        "returns": {
          "_0": "Latest price"
        }
      }
    },
    "version": 1
  },
  "offset": [
    489,
    3915
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x57CBF16C GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x57CBF16C EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0x5FCF91AA EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0xBFD9041B EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0xE4571356 EQ PUSH2 0x166 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x50894E9F EQ PUSH2 0x9C JUMPI DUP1 PUSH4 0x50D25BCD EQ PUSH2 0xC3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x85 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0xCB PUSH2 0x18D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x93 JUMP JUMPDEST PUSH2 0x85 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x127 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x93 JUMP JUMPDEST PUSH2 0x127 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x127 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x6FC JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP2 POP PUSH1 0x0 PUSH2 0x256 PUSH32 0x0 PUSH2 0x5CD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x283 PUSH32 0x0 PUSH2 0x5CD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH1 0xFF AND PUSH32 0x0 PUSH1 0xFF AND LT PUSH2 0x362 JUMPI PUSH2 0x35B DUP3 PUSH2 0x322 PUSH32 0x0 PUSH32 0x0 PUSH2 0x762 JUMP JUMPDEST PUSH2 0x32D SWAP1 PUSH1 0xA PUSH2 0x865 JUMP JUMPDEST DUP6 PUSH2 0x338 DUP9 DUP11 PUSH2 0x87B JUMP JUMPDEST PUSH2 0x342 SWAP2 SWAP1 PUSH2 0x87B JUMP JUMPDEST PUSH2 0x34C SWAP2 SWAP1 PUSH2 0x87B JUMP JUMPDEST PUSH2 0x356 SWAP2 SWAP1 PUSH2 0x892 JUMP JUMPDEST PUSH2 0x687 JUMP JUMPDEST SWAP1 POP PUSH2 0x3DD JUMP JUMPDEST PUSH2 0x3DA DUP3 PUSH2 0x3B0 PUSH32 0x0 PUSH32 0x0 PUSH2 0x762 JUMP JUMPDEST PUSH2 0x3BB SWAP1 PUSH1 0xA PUSH2 0x865 JUMP JUMPDEST DUP6 PUSH2 0x3C6 DUP9 DUP11 PUSH2 0x87B JUMP JUMPDEST PUSH2 0x3D0 SWAP2 SWAP1 PUSH2 0x87B JUMP JUMPDEST PUSH2 0x34C SWAP2 SWAP1 PUSH2 0x892 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x3EA DUP7 DUP9 PUSH2 0x87B JUMP JUMPDEST PUSH2 0x3F4 SWAP2 SWAP1 PUSH2 0x892 JUMP JUMPDEST SWAP1 POP PUSH1 0x12 PUSH32 0x0 PUSH1 0xFF AND GT ISZERO DUP1 ISZERO PUSH2 0x44E JUMPI POP PUSH1 0x12 PUSH32 0x0 PUSH1 0xFF AND GT ISZERO JUMPDEST PUSH2 0x492 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x496E636F727265637420746F6B656E73 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 PUSH2 0x4C0 PUSH32 0x0 PUSH1 0x12 PUSH2 0x762 JUMP JUMPDEST PUSH2 0x4CB SWAP1 PUSH1 0xA PUSH2 0x865 JUMP JUMPDEST PUSH2 0x4D5 SWAP1 DUP6 PUSH2 0x87B JUMP JUMPDEST PUSH2 0x4DF SWAP2 SWAP1 PUSH2 0x87B JUMP JUMPDEST PUSH2 0x50A PUSH32 0x0 PUSH1 0x12 PUSH2 0x762 JUMP JUMPDEST PUSH2 0x515 SWAP1 PUSH1 0xA PUSH2 0x865 JUMP JUMPDEST PUSH2 0x51F DUP8 DUP6 PUSH2 0x87B JUMP JUMPDEST PUSH2 0x529 SWAP2 SWAP1 PUSH2 0x87B JUMP JUMPDEST PUSH2 0x533 SWAP2 SWAP1 PUSH2 0x8B4 JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x593 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5B7 SWAP2 SWAP1 PUSH2 0x8C7 JUMP JUMPDEST PUSH2 0x5C1 SWAP1 DUP3 PUSH2 0x892 JUMP JUMPDEST SWAP8 POP POP POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x610 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x634 SWAP2 SWAP1 PUSH2 0x8FA JUMP JUMPDEST POP SWAP4 POP POP SWAP3 POP POP PUSH1 0x0 DUP2 GT PUSH2 0x680 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x526F756E64206E6F7420636F6D706C657465 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x489 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH2 0x697 DUP5 PUSH1 0x1 PUSH2 0x8B4 JUMP JUMPDEST PUSH2 0x6A1 SWAP2 SWAP1 PUSH2 0x892 JUMP JUMPDEST SWAP1 POP DUP3 SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6DA JUMPI SWAP1 POP DUP1 PUSH1 0x2 DUP2 PUSH2 0x6BF DUP2 DUP7 PUSH2 0x892 JUMP JUMPDEST PUSH2 0x6C9 SWAP2 SWAP1 PUSH2 0x8B4 JUMP JUMPDEST PUSH2 0x6D3 SWAP2 SWAP1 PUSH2 0x892 JUMP JUMPDEST SWAP1 POP PUSH2 0x6A7 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x711 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x71A DUP5 PUSH2 0x6E0 JUMP JUMPDEST SWAP3 POP PUSH2 0x728 PUSH1 0x20 DUP6 ADD PUSH2 0x6E0 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x741 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xFF DUP3 DUP2 AND DUP3 DUP3 AND SUB SWAP1 DUP2 GT ISZERO PUSH2 0x77B JUMPI PUSH2 0x77B PUSH2 0x74C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x7BC JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x7A2 JUMPI PUSH2 0x7A2 PUSH2 0x74C JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x7AF JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x786 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x7D3 JUMPI POP PUSH1 0x1 PUSH2 0x77B JUMP JUMPDEST DUP2 PUSH2 0x7E0 JUMPI POP PUSH1 0x0 PUSH2 0x77B JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x7F6 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x800 JUMPI PUSH2 0x81C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x77B JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x811 JUMPI PUSH2 0x811 PUSH2 0x74C JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x77B JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x83F JUMPI POP DUP2 DUP2 EXP PUSH2 0x77B JUMP JUMPDEST PUSH2 0x849 DUP4 DUP4 PUSH2 0x781 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x85D JUMPI PUSH2 0x85D PUSH2 0x74C JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x874 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x7C4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x77B JUMPI PUSH2 0x77B PUSH2 0x74C JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x8AF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x77B JUMPI PUSH2 0x77B PUSH2 0x74C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x6F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x912 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x91B DUP7 PUSH2 0x8E0 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x93E PUSH1 0x80 DUP8 ADD PUSH2 0x8E0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0x9A4AEBD56A361A25B951FB9E426CAB6377B010A5A822283F9E7B LOG3 LOG2 SWAP11 0x4E DIV PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        489,
        3915
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "6": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "8": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "12": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "DUP1",
      "path": "6"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "REVERT",
      "path": "6"
    },
    "16": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "17": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "POP",
      "path": "6"
    },
    "18": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "21": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "LT",
      "path": "6"
    },
    "22": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7D"
    },
    "25": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "26": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "29": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "SHR",
      "path": "6"
    },
    "32": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "DUP1",
      "path": "6"
    },
    "33": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x57CBF16C"
    },
    "38": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "GT",
      "path": "6"
    },
    "39": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5B"
    },
    "42": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "43": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "DUP1",
      "path": "6"
    },
    "44": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x57CBF16C"
    },
    "49": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "EQ",
      "path": "6"
    },
    "50": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD9"
    },
    "53": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "54": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "DUP1",
      "path": "6"
    },
    "55": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x5FCF91AA"
    },
    "60": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "EQ",
      "path": "6"
    },
    "61": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "64": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "65": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "DUP1",
      "path": "6"
    },
    "66": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xBFD9041B"
    },
    "71": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "EQ",
      "path": "6"
    },
    "72": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x13F"
    },
    "75": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "76": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "DUP1",
      "path": "6"
    },
    "77": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xE4571356"
    },
    "82": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "EQ",
      "path": "6"
    },
    "83": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x166"
    },
    "86": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "87": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "89": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "DUP1",
      "path": "6"
    },
    "90": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "REVERT",
      "path": "6"
    },
    "91": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "92": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "DUP1",
      "path": "6"
    },
    "93": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x313CE567"
    },
    "98": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "EQ",
      "path": "6"
    },
    "99": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x82"
    },
    "102": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "103": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "DUP1",
      "path": "6"
    },
    "104": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x50894E9F"
    },
    "109": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "EQ",
      "path": "6"
    },
    "110": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9C"
    },
    "113": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "114": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "DUP1",
      "path": "6"
    },
    "115": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x50D25BCD"
    },
    "120": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "EQ",
      "path": "6"
    },
    "121": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC3"
    },
    "124": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "125": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "126": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "128": {
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "DUP1",
      "path": "6"
    },
    "129": {
      "first_revert": true,
      "fn": null,
      "offset": [
        489,
        3915
      ],
      "op": "REVERT",
      "path": "6"
    },
    "130": {
      "fn": "LPOracle.decimals",
      "offset": [
        1384,
        1453
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "131": {
      "fn": "LPOracle.decimals",
      "offset": [
        1447,
        1448
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 0,
      "value": "0x8"
    },
    "133": {
      "fn": "LPOracle.decimals",
      "offset": [
        1384,
        1453
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "134": {
      "fn": "LPOracle.decimals",
      "offset": [
        1384,
        1453
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "136": {
      "fn": "LPOracle.decimals",
      "offset": [
        1384,
        1453
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "137": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "139": {
      "op": "SWAP1"
    },
    "140": {
      "op": "SWAP2"
    },
    "141": {
      "op": "AND"
    },
    "142": {
      "op": "DUP2"
    },
    "143": {
      "op": "MSTORE"
    },
    "144": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "146": {
      "op": "ADD"
    },
    "147": {
      "fn": "LPOracle.decimals",
      "offset": [
        1384,
        1453
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "148": {
      "fn": "LPOracle.decimals",
      "offset": [
        1384,
        1453
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "150": {
      "fn": "LPOracle.decimals",
      "offset": [
        1384,
        1453
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "151": {
      "fn": "LPOracle.decimals",
      "offset": [
        1384,
        1453
      ],
      "op": "DUP1",
      "path": "6"
    },
    "152": {
      "fn": "LPOracle.decimals",
      "offset": [
        1384,
        1453
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "153": {
      "fn": "LPOracle.decimals",
      "offset": [
        1384,
        1453
      ],
      "op": "SUB",
      "path": "6"
    },
    "154": {
      "fn": "LPOracle.decimals",
      "offset": [
        1384,
        1453
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "155": {
      "fn": "LPOracle.decimals",
      "offset": [
        1384,
        1453
      ],
      "op": "RETURN",
      "path": "6"
    },
    "156": {
      "offset": [
        688,
        720
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "157": {
      "fn": "LPOracle.decimals",
      "offset": [
        688,
        720
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x85"
    },
    "160": {
      "fn": "LPOracle.decimals",
      "offset": [
        688,
        720
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "193": {
      "fn": "LPOracle.decimals",
      "offset": [
        688,
        720
      ],
      "op": "DUP2",
      "path": "6"
    },
    "194": {
      "fn": "LPOracle.decimals",
      "offset": [
        688,
        720
      ],
      "op": "JUMP",
      "path": "6"
    },
    "195": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2179,
        3913
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "196": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2179,
        3913
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCB"
    },
    "199": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2179,
        3913
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18D"
    },
    "202": {
      "fn": "LPOracle.latestAnswer",
      "jump": "i",
      "offset": [
        2179,
        3913
      ],
      "op": "JUMP",
      "path": "6"
    },
    "203": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2179,
        3913
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "204": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2179,
        3913
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "206": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2179,
        3913
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "207": {
      "op": "SWAP1"
    },
    "208": {
      "op": "DUP2"
    },
    "209": {
      "op": "MSTORE"
    },
    "210": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "212": {
      "op": "ADD"
    },
    "213": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2179,
        3913
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x93"
    },
    "216": {
      "op": "JUMP"
    },
    "217": {
      "offset": [
        723,
        755
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "218": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        723,
        755
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x85"
    },
    "221": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        723,
        755
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "254": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        723,
        755
      ],
      "op": "DUP2",
      "path": "6"
    },
    "255": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        723,
        755
      ],
      "op": "JUMP",
      "path": "6"
    },
    "256": {
      "offset": [
        594,
        642
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "257": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        594,
        642
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x127"
    },
    "260": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        594,
        642
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "293": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        594,
        642
      ],
      "op": "DUP2",
      "path": "6"
    },
    "294": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        594,
        642
      ],
      "op": "JUMP",
      "path": "6"
    },
    "295": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        594,
        642
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "296": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        594,
        642
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "298": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        594,
        642
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "303": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "305": {
      "op": "SHL"
    },
    "306": {
      "op": "SUB"
    },
    "307": {
      "op": "SWAP1"
    },
    "308": {
      "op": "SWAP2"
    },
    "309": {
      "op": "AND"
    },
    "310": {
      "op": "DUP2"
    },
    "311": {
      "op": "MSTORE"
    },
    "312": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "314": {
      "op": "ADD"
    },
    "315": {
      "offset": [
        594,
        642
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x93"
    },
    "318": {
      "op": "JUMP"
    },
    "319": {
      "offset": [
        646,
        685
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "320": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        646,
        685
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x127"
    },
    "323": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        646,
        685
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "356": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        646,
        685
      ],
      "op": "DUP2",
      "path": "6"
    },
    "357": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        646,
        685
      ],
      "op": "JUMP",
      "path": "6"
    },
    "358": {
      "offset": [
        542,
        590
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "359": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        542,
        590
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x127"
    },
    "362": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        542,
        590
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "395": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        542,
        590
      ],
      "op": "DUP2",
      "path": "6"
    },
    "396": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        542,
        590
      ],
      "op": "JUMP",
      "path": "6"
    },
    "397": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2179,
        3913
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "398": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2226,
        2232
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "400": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2241,
        2247
      ],
      "op": "DUP1",
      "path": "6"
    },
    "401": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2249,
        2255
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "403": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2268
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "440": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "442": {
      "op": "SHL"
    },
    "443": {
      "op": "SUB"
    },
    "444": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2280
      ],
      "op": "AND",
      "path": "6"
    },
    "445": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2280
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x902F1AC"
    },
    "450": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "452": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2282
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "453": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2282
      ],
      "op": "DUP2",
      "path": "6"
    },
    "454": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2282
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "459": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2282
      ],
      "op": "AND",
      "path": "6"
    },
    "460": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "462": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2282
      ],
      "op": "SHL",
      "path": "6"
    },
    "463": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2282
      ],
      "op": "DUP2",
      "path": "6"
    },
    "464": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2282
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "465": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "467": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2282
      ],
      "op": "ADD",
      "path": "6"
    },
    "468": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "470": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "472": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2282
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "473": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2282
      ],
      "op": "DUP1",
      "path": "6"
    },
    "474": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2282
      ],
      "op": "DUP4",
      "path": "6"
    },
    "475": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2282
      ],
      "op": "SUB",
      "path": "6"
    },
    "476": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2282
      ],
      "op": "DUP2",
      "path": "6"
    },
    "477": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2282
      ],
      "op": "DUP7",
      "path": "6"
    },
    "478": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2282
      ],
      "op": "GAS",
      "path": "6"
    },
    "479": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2282
      ],
      "op": "STATICCALL",
      "path": "6"
    },
    "480": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2282
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "481": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2282
      ],
      "op": "DUP1",
      "path": "6"
    },
    "482": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2282
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "483": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2282
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1F0"
    },
    "486": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2282
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "487": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2282
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "488": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "490": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2282
      ],
      "op": "DUP1",
      "path": "6"
    },
    "491": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2282
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "492": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2282
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "493": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "495": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2282
      ],
      "op": "REVERT",
      "path": "6"
    },
    "496": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2282
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "497": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2282
      ],
      "op": "POP",
      "path": "6"
    },
    "498": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2282
      ],
      "op": "POP",
      "path": "6"
    },
    "499": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2282
      ],
      "op": "POP",
      "path": "6"
    },
    "500": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2282
      ],
      "op": "POP",
      "path": "6"
    },
    "501": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "503": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2282
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "504": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2282
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "505": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "507": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2282
      ],
      "op": "NOT",
      "path": "6"
    },
    "508": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "510": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2282
      ],
      "op": "DUP3",
      "path": "6"
    },
    "511": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2282
      ],
      "op": "ADD",
      "path": "6"
    },
    "512": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2282
      ],
      "op": "AND",
      "path": "6"
    },
    "513": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2282
      ],
      "op": "DUP3",
      "path": "6"
    },
    "514": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2282
      ],
      "op": "ADD",
      "path": "6"
    },
    "515": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2282
      ],
      "op": "DUP1",
      "path": "6"
    },
    "516": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2282
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "518": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2282
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "519": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2282
      ],
      "op": "POP",
      "path": "6"
    },
    "520": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2282
      ],
      "op": "DUP2",
      "path": "6"
    },
    "521": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2282
      ],
      "op": "ADD",
      "path": "6"
    },
    "522": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2282
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "523": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2282
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x214"
    },
    "526": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2282
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "527": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2282
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "528": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2282
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6FC"
    },
    "531": {
      "fn": "LPOracle.latestAnswer",
      "jump": "i",
      "offset": [
        2260,
        2282
      ],
      "op": "JUMP",
      "path": "6"
    },
    "532": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2260,
        2282
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "533": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2240,
        2282
      ],
      "op": "POP",
      "path": "6"
    },
    "534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "538": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "540": {
      "op": "SHL"
    },
    "541": {
      "op": "SUB"
    },
    "542": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2240,
        2282
      ],
      "op": "AND",
      "path": "6"
    },
    "543": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2240,
        2282
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "544": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2240,
        2282
      ],
      "op": "POP",
      "path": "6"
    },
    "545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "547": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "549": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "551": {
      "op": "SHL"
    },
    "552": {
      "op": "SUB"
    },
    "553": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2240,
        2282
      ],
      "op": "AND",
      "path": "6"
    },
    "554": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2240,
        2282
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "555": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2240,
        2282
      ],
      "op": "POP",
      "path": "6"
    },
    "556": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2289,
        2300
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "558": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2308,
        2328
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x256"
    },
    "561": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2318,
        2327
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "594": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2308,
        2317
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5CD"
    },
    "597": {
      "fn": "LPOracle.latestAnswer",
      "jump": "i",
      "offset": [
        2308,
        2328
      ],
      "op": "JUMP",
      "path": "6"
    },
    "598": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2308,
        2328
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "599": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2289,
        2329
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "600": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2289,
        2329
      ],
      "op": "POP",
      "path": "6"
    },
    "601": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2335,
        2346
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "603": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2354,
        2374
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x283"
    },
    "606": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2364,
        2373
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "639": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2354,
        2363
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5CD"
    },
    "642": {
      "fn": "LPOracle.latestAnswer",
      "jump": "i",
      "offset": [
        2354,
        2374
      ],
      "op": "JUMP",
      "path": "6"
    },
    "643": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2354,
        2374
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "644": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2335,
        2375
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "645": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2335,
        2375
      ],
      "op": "POP",
      "path": "6"
    },
    "646": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3159,
        3170
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "648": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3193,
        3202
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "681": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3180,
        3202
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "683": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3180,
        3202
      ],
      "op": "AND",
      "path": "6"
    },
    "684": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3180,
        3189
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "717": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3180,
        3202
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "719": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3180,
        3202
      ],
      "op": "AND",
      "path": "6"
    },
    "720": {
      "branch": 10,
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3180,
        3202
      ],
      "op": "LT",
      "path": "6"
    },
    "721": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3176,
        3376
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x362"
    },
    "724": {
      "branch": 10,
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3176,
        3376
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "725": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3221,
        3280
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 1,
      "value": "0x35B"
    },
    "728": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3272,
        3278
      ],
      "op": "DUP3",
      "path": "6"
    },
    "729": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3249,
        3268
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x322"
    },
    "732": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3259,
        3268
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "765": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3249,
        3258
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "798": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3249,
        3268
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x762"
    },
    "801": {
      "fn": "LPOracle.latestAnswer",
      "jump": "i",
      "offset": [
        3249,
        3268
      ],
      "op": "JUMP",
      "path": "6"
    },
    "802": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3249,
        3268
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "803": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3244,
        3269
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x32D"
    },
    "806": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3244,
        3269
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "807": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3244,
        3246
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA"
    },
    "809": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3244,
        3269
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x865"
    },
    "812": {
      "fn": "LPOracle.latestAnswer",
      "jump": "i",
      "offset": [
        3244,
        3269
      ],
      "op": "JUMP",
      "path": "6"
    },
    "813": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3244,
        3269
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "814": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3235,
        3241
      ],
      "op": "DUP6",
      "path": "6"
    },
    "815": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3227,
        3232
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x338"
    },
    "818": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3231,
        3232
      ],
      "op": "DUP9",
      "path": "6"
    },
    "819": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3227,
        3228
      ],
      "op": "DUP11",
      "path": "6"
    },
    "820": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3227,
        3232
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x87B"
    },
    "823": {
      "fn": "LPOracle.latestAnswer",
      "jump": "i",
      "offset": [
        3227,
        3232
      ],
      "op": "JUMP",
      "path": "6"
    },
    "824": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3227,
        3232
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "825": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3227,
        3241
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x342"
    },
    "828": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3227,
        3241
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "829": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3227,
        3241
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "830": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3227,
        3241
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x87B"
    },
    "833": {
      "fn": "LPOracle.latestAnswer",
      "jump": "i",
      "offset": [
        3227,
        3241
      ],
      "op": "JUMP",
      "path": "6"
    },
    "834": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3227,
        3241
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "835": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3227,
        3269
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x34C"
    },
    "838": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3227,
        3269
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "839": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3227,
        3269
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "840": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3227,
        3269
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x87B"
    },
    "843": {
      "fn": "LPOracle.latestAnswer",
      "jump": "i",
      "offset": [
        3227,
        3269
      ],
      "op": "JUMP",
      "path": "6"
    },
    "844": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3227,
        3269
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "845": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3227,
        3278
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x356"
    },
    "848": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3227,
        3278
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "849": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3227,
        3278
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "850": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3227,
        3278
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x892"
    },
    "853": {
      "fn": "LPOracle.latestAnswer",
      "jump": "i",
      "offset": [
        3227,
        3278
      ],
      "op": "JUMP",
      "path": "6"
    },
    "854": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3227,
        3278
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "855": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3221,
        3225
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x687"
    },
    "858": {
      "fn": "LPOracle.latestAnswer",
      "jump": "i",
      "offset": [
        3221,
        3280
      ],
      "op": "JUMP",
      "path": "6"
    },
    "859": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3221,
        3280
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "860": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3212,
        3280
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "861": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3212,
        3280
      ],
      "op": "POP",
      "path": "6"
    },
    "862": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3176,
        3376
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3DD"
    },
    "865": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3176,
        3376
      ],
      "op": "JUMP",
      "path": "6"
    },
    "866": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3176,
        3376
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "867": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3310,
        3369
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 2,
      "value": "0x3DA"
    },
    "870": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3361,
        3367
      ],
      "op": "DUP3",
      "path": "6"
    },
    "871": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3338,
        3357
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3B0"
    },
    "874": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3348,
        3357
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "907": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3338,
        3347
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "940": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3338,
        3357
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x762"
    },
    "943": {
      "fn": "LPOracle.latestAnswer",
      "jump": "i",
      "offset": [
        3338,
        3357
      ],
      "op": "JUMP",
      "path": "6"
    },
    "944": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3338,
        3357
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "945": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3333,
        3358
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3BB"
    },
    "948": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3333,
        3358
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "949": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3333,
        3335
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA"
    },
    "951": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3333,
        3358
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x865"
    },
    "954": {
      "fn": "LPOracle.latestAnswer",
      "jump": "i",
      "offset": [
        3333,
        3358
      ],
      "op": "JUMP",
      "path": "6"
    },
    "955": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3333,
        3358
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "956": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3324,
        3330
      ],
      "op": "DUP6",
      "path": "6"
    },
    "957": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3316,
        3321
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3C6"
    },
    "960": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3320,
        3321
      ],
      "op": "DUP9",
      "path": "6"
    },
    "961": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3316,
        3317
      ],
      "op": "DUP11",
      "path": "6"
    },
    "962": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3316,
        3321
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x87B"
    },
    "965": {
      "fn": "LPOracle.latestAnswer",
      "jump": "i",
      "offset": [
        3316,
        3321
      ],
      "op": "JUMP",
      "path": "6"
    },
    "966": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3316,
        3321
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "967": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3316,
        3330
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3D0"
    },
    "970": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3316,
        3330
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "971": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3316,
        3330
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "972": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3316,
        3330
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x87B"
    },
    "975": {
      "fn": "LPOracle.latestAnswer",
      "jump": "i",
      "offset": [
        3316,
        3330
      ],
      "op": "JUMP",
      "path": "6"
    },
    "976": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3316,
        3330
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "977": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3316,
        3358
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x34C"
    },
    "980": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3316,
        3358
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "981": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3316,
        3358
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "982": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3316,
        3358
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x892"
    },
    "985": {
      "fn": "LPOracle.latestAnswer",
      "jump": "i",
      "offset": [
        3316,
        3358
      ],
      "op": "JUMP",
      "path": "6"
    },
    "986": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3310,
        3369
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "987": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3301,
        3369
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "988": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3301,
        3369
      ],
      "op": "POP",
      "path": "6"
    },
    "989": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3176,
        3376
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "990": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3381,
        3392
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "992": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3403,
        3409
      ],
      "op": "DUP2",
      "path": "6"
    },
    "993": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3395,
        3400
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3EA"
    },
    "996": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3399,
        3400
      ],
      "op": "DUP7",
      "path": "6"
    },
    "997": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3395,
        3396
      ],
      "op": "DUP9",
      "path": "6"
    },
    "998": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3395,
        3400
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x87B"
    },
    "1001": {
      "fn": "LPOracle.latestAnswer",
      "jump": "i",
      "offset": [
        3395,
        3400
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1002": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3395,
        3400
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1003": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3395,
        3409
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3F4"
    },
    "1006": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3395,
        3409
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1007": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3395,
        3409
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1008": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3395,
        3409
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x892"
    },
    "1011": {
      "fn": "LPOracle.latestAnswer",
      "jump": "i",
      "offset": [
        3395,
        3409
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1012": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3395,
        3409
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1013": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3381,
        3409
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1014": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3381,
        3409
      ],
      "op": "POP",
      "path": "6"
    },
    "1015": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3728,
        3730
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 3,
      "value": "0x12"
    },
    "1017": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3715,
        3724
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "1050": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3715,
        3730
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "1052": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3715,
        3730
      ],
      "op": "AND",
      "path": "6"
    },
    "1053": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3715,
        3730
      ],
      "op": "GT",
      "path": "6"
    },
    "1054": {
      "branch": 11,
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3715,
        3730
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1055": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3715,
        3749
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1056": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3715,
        3749
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1057": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3715,
        3749
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x44E"
    },
    "1060": {
      "branch": 11,
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3715,
        3749
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1061": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3715,
        3749
      ],
      "op": "POP",
      "path": "6"
    },
    "1062": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3747,
        3749
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x12"
    },
    "1064": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3734,
        3743
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "1097": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3734,
        3749
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "1099": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3734,
        3749
      ],
      "op": "AND",
      "path": "6"
    },
    "1100": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3734,
        3749
      ],
      "op": "GT",
      "path": "6"
    },
    "1101": {
      "branch": 12,
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3734,
        3749
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1102": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3715,
        3749
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1103": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3707,
        3770
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x492"
    },
    "1106": {
      "branch": 12,
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3707,
        3770
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1107": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3707,
        3770
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1109": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3707,
        3770
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1110": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1114": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1116": {
      "op": "SHL"
    },
    "1117": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3707,
        3770
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1118": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3707,
        3770
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1119": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1121": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3707,
        3770
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1123": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3707,
        3770
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1124": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3707,
        3770
      ],
      "op": "ADD",
      "path": "6"
    },
    "1125": {
      "op": "MSTORE"
    },
    "1126": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "1128": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1130": {
      "op": "DUP3"
    },
    "1131": {
      "op": "ADD"
    },
    "1132": {
      "op": "MSTORE"
    },
    "1133": {
      "op": "PUSH16",
      "value": "0x496E636F727265637420746F6B656E73"
    },
    "1150": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1152": {
      "op": "SHL"
    },
    "1153": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1155": {
      "op": "DUP3"
    },
    "1156": {
      "op": "ADD"
    },
    "1157": {
      "op": "MSTORE"
    },
    "1158": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1160": {
      "op": "ADD"
    },
    "1161": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3707,
        3770
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1162": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3707,
        3770
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1164": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3707,
        3770
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1165": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3707,
        3770
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1166": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3707,
        3770
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1167": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3707,
        3770
      ],
      "op": "SUB",
      "path": "6"
    },
    "1168": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3707,
        3770
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1169": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3707,
        3770
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "6"
    },
    "1170": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3707,
        3770
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1171": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3776,
        3784
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1173": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3856,
        3862
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1174": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3840,
        3852
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4C0"
    },
    "1177": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3843,
        3852
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "1210": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3840,
        3842
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x12"
    },
    "1212": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3840,
        3852
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x762"
    },
    "1215": {
      "fn": "LPOracle.latestAnswer",
      "jump": "i",
      "offset": [
        3840,
        3852
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1216": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3840,
        3852
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1217": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3835,
        3853
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4CB"
    },
    "1220": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3835,
        3853
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1221": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3835,
        3837
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA"
    },
    "1223": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3835,
        3853
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x865"
    },
    "1226": {
      "fn": "LPOracle.latestAnswer",
      "jump": "i",
      "offset": [
        3835,
        3853
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1227": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3835,
        3853
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1228": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3826,
        3853
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4D5"
    },
    "1231": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3826,
        3853
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1232": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3826,
        3832
      ],
      "op": "DUP6",
      "path": "6"
    },
    "1233": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3826,
        3853
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x87B"
    },
    "1236": {
      "fn": "LPOracle.latestAnswer",
      "jump": "i",
      "offset": [
        3826,
        3853
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1237": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3826,
        3853
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1238": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3826,
        3862
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4DF"
    },
    "1241": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3826,
        3862
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1242": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3826,
        3862
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1243": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3826,
        3862
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x87B"
    },
    "1246": {
      "fn": "LPOracle.latestAnswer",
      "jump": "i",
      "offset": [
        3826,
        3862
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1247": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3826,
        3862
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1248": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3810,
        3822
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x50A"
    },
    "1251": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3813,
        3822
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "1284": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3810,
        3812
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x12"
    },
    "1286": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3810,
        3822
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x762"
    },
    "1289": {
      "fn": "LPOracle.latestAnswer",
      "jump": "i",
      "offset": [
        3810,
        3822
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1290": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3810,
        3822
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1291": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3805,
        3823
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x515"
    },
    "1294": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3805,
        3823
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1295": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3805,
        3807
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA"
    },
    "1297": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3805,
        3823
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x865"
    },
    "1300": {
      "fn": "LPOracle.latestAnswer",
      "jump": "i",
      "offset": [
        3805,
        3823
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1301": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3805,
        3823
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1302": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3787,
        3802
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x51F"
    },
    "1305": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3796,
        3802
      ],
      "op": "DUP8",
      "path": "6"
    },
    "1306": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3787,
        3793
      ],
      "op": "DUP6",
      "path": "6"
    },
    "1307": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3787,
        3802
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x87B"
    },
    "1310": {
      "fn": "LPOracle.latestAnswer",
      "jump": "i",
      "offset": [
        3787,
        3802
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1311": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3787,
        3802
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1312": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3787,
        3823
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x529"
    },
    "1315": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3787,
        3823
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1316": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3787,
        3823
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1317": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3787,
        3823
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x87B"
    },
    "1320": {
      "fn": "LPOracle.latestAnswer",
      "jump": "i",
      "offset": [
        3787,
        3823
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1321": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3787,
        3823
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1322": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3787,
        3862
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x533"
    },
    "1325": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3787,
        3862
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1326": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3787,
        3862
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1327": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3787,
        3862
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8B4"
    },
    "1330": {
      "fn": "LPOracle.latestAnswer",
      "jump": "i",
      "offset": [
        3787,
        3862
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1331": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3787,
        3862
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1332": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3776,
        3862
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1333": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3776,
        3862
      ],
      "op": "POP",
      "path": "6"
    },
    "1334": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3893
      ],
      "op": "PUSH32",
      "path": "6",
      "statement": 4,
      "value": "0x0"
    },
    "1367": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1371": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1373": {
      "op": "SHL"
    },
    "1374": {
      "op": "SUB"
    },
    "1375": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3905
      ],
      "op": "AND",
      "path": "6"
    },
    "1376": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3905
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x18160DDD"
    },
    "1381": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3907
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1383": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3907
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1384": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3907
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1385": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3907
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "1390": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3907
      ],
      "op": "AND",
      "path": "6"
    },
    "1391": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3907
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "1393": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3907
      ],
      "op": "SHL",
      "path": "6"
    },
    "1394": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3907
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1395": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3907
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1396": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3907
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1398": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3907
      ],
      "op": "ADD",
      "path": "6"
    },
    "1399": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3907
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1401": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3907
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1403": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3907
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1404": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3907
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1405": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3907
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1406": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3907
      ],
      "op": "SUB",
      "path": "6"
    },
    "1407": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3907
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1408": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3907
      ],
      "op": "DUP7",
      "path": "6"
    },
    "1409": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3907
      ],
      "op": "GAS",
      "path": "6"
    },
    "1410": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3907
      ],
      "op": "STATICCALL",
      "path": "6"
    },
    "1411": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3907
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1412": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3907
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1413": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3907
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1414": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3907
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x593"
    },
    "1417": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3907
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1418": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3907
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1419": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3907
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1421": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3907
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1422": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3907
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "1423": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3907
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1424": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3907
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1426": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3907
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1427": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3907
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1428": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3907
      ],
      "op": "POP",
      "path": "6"
    },
    "1429": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3907
      ],
      "op": "POP",
      "path": "6"
    },
    "1430": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3907
      ],
      "op": "POP",
      "path": "6"
    },
    "1431": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3907
      ],
      "op": "POP",
      "path": "6"
    },
    "1432": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3907
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1434": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3907
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1435": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3907
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1436": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3907
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1438": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3907
      ],
      "op": "NOT",
      "path": "6"
    },
    "1439": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3907
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1441": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3907
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1442": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3907
      ],
      "op": "ADD",
      "path": "6"
    },
    "1443": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3907
      ],
      "op": "AND",
      "path": "6"
    },
    "1444": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3907
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1445": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3907
      ],
      "op": "ADD",
      "path": "6"
    },
    "1446": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3907
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1447": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3907
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1449": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3907
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1450": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3907
      ],
      "op": "POP",
      "path": "6"
    },
    "1451": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3907
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1452": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3907
      ],
      "op": "ADD",
      "path": "6"
    },
    "1453": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3907
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1454": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3907
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5B7"
    },
    "1457": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3907
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1458": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3907
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1459": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3907
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8C7"
    },
    "1462": {
      "fn": "LPOracle.latestAnswer",
      "jump": "i",
      "offset": [
        3885,
        3907
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1463": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3885,
        3907
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1464": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3879,
        3907
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5C1"
    },
    "1467": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3879,
        3907
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1468": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3879,
        3882
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1469": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3879,
        3907
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x892"
    },
    "1472": {
      "fn": "LPOracle.latestAnswer",
      "jump": "i",
      "offset": [
        3879,
        3907
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1473": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3879,
        3907
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1474": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3868,
        3908
      ],
      "op": "SWAP8",
      "path": "6"
    },
    "1475": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3868,
        3908
      ],
      "op": "POP",
      "path": "6"
    },
    "1476": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3868,
        3908
      ],
      "op": "POP",
      "path": "6"
    },
    "1477": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3868,
        3908
      ],
      "op": "POP",
      "path": "6"
    },
    "1478": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3868,
        3908
      ],
      "op": "POP",
      "path": "6"
    },
    "1479": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3868,
        3908
      ],
      "op": "POP",
      "path": "6"
    },
    "1480": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3868,
        3908
      ],
      "op": "POP",
      "path": "6"
    },
    "1481": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3868,
        3908
      ],
      "op": "POP",
      "path": "6"
    },
    "1482": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        3868,
        3908
      ],
      "op": "POP",
      "path": "6"
    },
    "1483": {
      "fn": "LPOracle.latestAnswer",
      "offset": [
        2179,
        3913
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1484": {
      "fn": "LPOracle.latestAnswer",
      "jump": "o",
      "offset": [
        2179,
        3913
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1485": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1827,
        2082
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1486": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1902,
        1908
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1488": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1933,
        1942
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1489": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1958,
        1972
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1491": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        1991
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1492": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1496": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1498": {
      "op": "SHL"
    },
    "1499": {
      "op": "SUB"
    },
    "1500": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2007
      ],
      "op": "AND",
      "path": "6"
    },
    "1501": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2007
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFEAF968C"
    },
    "1506": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2009
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1508": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2009
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1509": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2009
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1510": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2009
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "1515": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2009
      ],
      "op": "AND",
      "path": "6"
    },
    "1516": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2009
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "1518": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2009
      ],
      "op": "SHL",
      "path": "6"
    },
    "1519": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2009
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1520": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2009
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1521": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2009
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1523": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2009
      ],
      "op": "ADD",
      "path": "6"
    },
    "1524": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2009
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA0"
    },
    "1526": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2009
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1528": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2009
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1529": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2009
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1530": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2009
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1531": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2009
      ],
      "op": "SUB",
      "path": "6"
    },
    "1532": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2009
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1533": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2009
      ],
      "op": "DUP7",
      "path": "6"
    },
    "1534": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2009
      ],
      "op": "GAS",
      "path": "6"
    },
    "1535": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2009
      ],
      "op": "STATICCALL",
      "path": "6"
    },
    "1536": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2009
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1537": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2009
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1538": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2009
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1539": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2009
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x610"
    },
    "1542": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2009
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1543": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2009
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1544": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2009
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1546": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2009
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1547": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2009
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "1548": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2009
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1549": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2009
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1551": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2009
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1552": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2009
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1553": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2009
      ],
      "op": "POP",
      "path": "6"
    },
    "1554": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2009
      ],
      "op": "POP",
      "path": "6"
    },
    "1555": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2009
      ],
      "op": "POP",
      "path": "6"
    },
    "1556": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2009
      ],
      "op": "POP",
      "path": "6"
    },
    "1557": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2009
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1559": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2009
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1560": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2009
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1561": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2009
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1563": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2009
      ],
      "op": "NOT",
      "path": "6"
    },
    "1564": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2009
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1566": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2009
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1567": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2009
      ],
      "op": "ADD",
      "path": "6"
    },
    "1568": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2009
      ],
      "op": "AND",
      "path": "6"
    },
    "1569": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2009
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1570": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2009
      ],
      "op": "ADD",
      "path": "6"
    },
    "1571": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2009
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1572": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2009
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1574": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2009
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1575": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2009
      ],
      "op": "POP",
      "path": "6"
    },
    "1576": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2009
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1577": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2009
      ],
      "op": "ADD",
      "path": "6"
    },
    "1578": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2009
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1579": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2009
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x634"
    },
    "1582": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2009
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1583": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2009
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1584": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2009
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8FA"
    },
    "1587": {
      "fn": "LPOracle.getAnswer",
      "jump": "i",
      "offset": [
        1982,
        2009
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1588": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1982,
        2009
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1589": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1916,
        2009
      ],
      "op": "POP",
      "path": "6"
    },
    "1590": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1916,
        2009
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "1591": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1916,
        2009
      ],
      "op": "POP",
      "path": "6"
    },
    "1592": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1916,
        2009
      ],
      "op": "POP",
      "path": "6"
    },
    "1593": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1916,
        2009
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1594": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1916,
        2009
      ],
      "op": "POP",
      "path": "6"
    },
    "1595": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1916,
        2009
      ],
      "op": "POP",
      "path": "6"
    },
    "1596": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        2035,
        2036
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 5,
      "value": "0x0"
    },
    "1598": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        2023,
        2032
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1599": {
      "branch": 13,
      "fn": "LPOracle.getAnswer",
      "offset": [
        2023,
        2036
      ],
      "op": "GT",
      "path": "6"
    },
    "1600": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        2015,
        2059
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x680"
    },
    "1603": {
      "branch": 13,
      "fn": "LPOracle.getAnswer",
      "offset": [
        2015,
        2059
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1604": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        2015,
        2059
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1606": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        2015,
        2059
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1607": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1611": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1613": {
      "op": "SHL"
    },
    "1614": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        2015,
        2059
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1615": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        2015,
        2059
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1616": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1618": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        2015,
        2059
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1620": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        2015,
        2059
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1621": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        2015,
        2059
      ],
      "op": "ADD",
      "path": "6"
    },
    "1622": {
      "op": "MSTORE"
    },
    "1623": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "1625": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1627": {
      "op": "DUP3"
    },
    "1628": {
      "op": "ADD"
    },
    "1629": {
      "op": "MSTORE"
    },
    "1630": {
      "op": "PUSH18",
      "value": "0x526F756E64206E6F7420636F6D706C657465"
    },
    "1649": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "1651": {
      "op": "SHL"
    },
    "1652": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1654": {
      "op": "DUP3"
    },
    "1655": {
      "op": "ADD"
    },
    "1656": {
      "op": "MSTORE"
    },
    "1657": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1659": {
      "op": "ADD"
    },
    "1660": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        2015,
        2059
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x489"
    },
    "1663": {
      "op": "JUMP"
    },
    "1664": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        2015,
        2059
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1665": {
      "op": "POP"
    },
    "1666": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        2072,
        2077
      ],
      "op": "SWAP3",
      "path": "6",
      "statement": 6
    },
    "1667": {
      "fn": "LPOracle.getAnswer",
      "offset": [
        1827,
        2082
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1668": {
      "op": "POP"
    },
    "1669": {
      "op": "POP"
    },
    "1670": {
      "fn": "LPOracle.getAnswer",
      "jump": "o",
      "offset": [
        1827,
        2082
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1671": {
      "fn": "LPOracle.sqrt",
      "offset": [
        1532,
        1693
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1672": {
      "fn": "LPOracle.sqrt",
      "offset": [
        1577,
        1583
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1674": {
      "fn": "LPOracle.sqrt",
      "offset": [
        1577,
        1583
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1675": {
      "fn": "LPOracle.sqrt",
      "offset": [
        1610,
        1611
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "1677": {
      "fn": "LPOracle.sqrt",
      "offset": [
        1601,
        1606
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x697"
    },
    "1680": {
      "fn": "LPOracle.sqrt",
      "offset": [
        1601,
        1602
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1681": {
      "fn": "LPOracle.sqrt",
      "offset": [
        1605,
        1606
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "1683": {
      "fn": "LPOracle.sqrt",
      "offset": [
        1601,
        1606
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8B4"
    },
    "1686": {
      "fn": "LPOracle.sqrt",
      "jump": "i",
      "offset": [
        1601,
        1606
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1687": {
      "fn": "LPOracle.sqrt",
      "offset": [
        1601,
        1606
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1688": {
      "fn": "LPOracle.sqrt",
      "offset": [
        1600,
        1611
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6A1"
    },
    "1691": {
      "fn": "LPOracle.sqrt",
      "offset": [
        1600,
        1611
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1692": {
      "fn": "LPOracle.sqrt",
      "offset": [
        1600,
        1611
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1693": {
      "fn": "LPOracle.sqrt",
      "offset": [
        1600,
        1611
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x892"
    },
    "1696": {
      "fn": "LPOracle.sqrt",
      "jump": "i",
      "offset": [
        1600,
        1611
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1697": {
      "fn": "LPOracle.sqrt",
      "offset": [
        1600,
        1611
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1698": {
      "fn": "LPOracle.sqrt",
      "offset": [
        1591,
        1611
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1699": {
      "fn": "LPOracle.sqrt",
      "offset": [
        1591,
        1611
      ],
      "op": "POP",
      "path": "6"
    },
    "1700": {
      "fn": "LPOracle.sqrt",
      "offset": [
        1621,
        1622
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 7
    },
    "1701": {
      "fn": "LPOracle.sqrt",
      "offset": [
        1617,
        1622
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1702": {
      "fn": "LPOracle.sqrt",
      "offset": [
        1617,
        1622
      ],
      "op": "POP",
      "path": "6"
    },
    "1703": {
      "fn": "LPOracle.sqrt",
      "offset": [
        1628,
        1689
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1704": {
      "fn": "LPOracle.sqrt",
      "offset": [
        1639,
        1640
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1705": {
      "fn": "LPOracle.sqrt",
      "offset": [
        1635,
        1636
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1706": {
      "fn": "LPOracle.sqrt",
      "offset": [
        1635,
        1640
      ],
      "op": "LT",
      "path": "6"
    },
    "1707": {
      "fn": "LPOracle.sqrt",
      "offset": [
        1628,
        1689
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1708": {
      "fn": "LPOracle.sqrt",
      "offset": [
        1628,
        1689
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6DA"
    },
    "1711": {
      "fn": "LPOracle.sqrt",
      "offset": [
        1628,
        1689
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1712": {
      "fn": "LPOracle.sqrt",
      "offset": [
        1654,
        1655
      ],
      "op": "SWAP1",
      "path": "6",
      "statement": 8
    },
    "1713": {
      "op": "POP"
    },
    "1714": {
      "fn": "LPOracle.sqrt",
      "offset": [
        1654,
        1655
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1715": {
      "fn": "LPOracle.sqrt",
      "offset": [
        1681,
        1682
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 9,
      "value": "0x2"
    },
    "1717": {
      "fn": "LPOracle.sqrt",
      "offset": [
        1654,
        1655
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1718": {
      "fn": "LPOracle.sqrt",
      "offset": [
        1668,
        1673
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6BF"
    },
    "1721": {
      "fn": "LPOracle.sqrt",
      "offset": [
        1654,
        1655
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1722": {
      "fn": "LPOracle.sqrt",
      "offset": [
        1668,
        1669
      ],
      "op": "DUP7",
      "path": "6"
    },
    "1723": {
      "fn": "LPOracle.sqrt",
      "offset": [
        1668,
        1673
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x892"
    },
    "1726": {
      "fn": "LPOracle.sqrt",
      "jump": "i",
      "offset": [
        1668,
        1673
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1727": {
      "fn": "LPOracle.sqrt",
      "offset": [
        1668,
        1673
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1728": {
      "fn": "LPOracle.sqrt",
      "offset": [
        1668,
        1677
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6C9"
    },
    "1731": {
      "fn": "LPOracle.sqrt",
      "offset": [
        1668,
        1677
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1732": {
      "fn": "LPOracle.sqrt",
      "offset": [
        1668,
        1677
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1733": {
      "fn": "LPOracle.sqrt",
      "offset": [
        1668,
        1677
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8B4"
    },
    "1736": {
      "fn": "LPOracle.sqrt",
      "jump": "i",
      "offset": [
        1668,
        1677
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1737": {
      "fn": "LPOracle.sqrt",
      "offset": [
        1668,
        1677
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1738": {
      "fn": "LPOracle.sqrt",
      "offset": [
        1667,
        1682
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6D3"
    },
    "1741": {
      "fn": "LPOracle.sqrt",
      "offset": [
        1667,
        1682
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1742": {
      "fn": "LPOracle.sqrt",
      "offset": [
        1667,
        1682
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1743": {
      "fn": "LPOracle.sqrt",
      "offset": [
        1667,
        1682
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x892"
    },
    "1746": {
      "fn": "LPOracle.sqrt",
      "jump": "i",
      "offset": [
        1667,
        1682
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1747": {
      "fn": "LPOracle.sqrt",
      "offset": [
        1667,
        1682
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1748": {
      "fn": "LPOracle.sqrt",
      "offset": [
        1663,
        1682
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1749": {
      "fn": "LPOracle.sqrt",
      "offset": [
        1663,
        1682
      ],
      "op": "POP",
      "path": "6"
    },
    "1750": {
      "fn": "LPOracle.sqrt",
      "offset": [
        1628,
        1689
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6A7"
    },
    "1753": {
      "fn": "LPOracle.sqrt",
      "offset": [
        1628,
        1689
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1754": {
      "fn": "LPOracle.sqrt",
      "offset": [
        1628,
        1689
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1755": {
      "fn": "LPOracle.sqrt",
      "offset": [
        1585,
        1693
      ],
      "op": "POP",
      "path": "6"
    },
    "1756": {
      "fn": "LPOracle.sqrt",
      "offset": [
        1532,
        1693
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1757": {
      "fn": "LPOracle.sqrt",
      "offset": [
        1532,
        1693
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1758": {
      "fn": "LPOracle.sqrt",
      "offset": [
        1532,
        1693
      ],
      "op": "POP",
      "path": "6"
    },
    "1759": {
      "fn": "LPOracle.sqrt",
      "jump": "o",
      "offset": [
        1532,
        1693
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1760": {
      "op": "JUMPDEST"
    },
    "1761": {
      "op": "DUP1"
    },
    "1762": {
      "op": "MLOAD"
    },
    "1763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1765": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1767": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "1769": {
      "op": "SHL"
    },
    "1770": {
      "op": "SUB"
    },
    "1771": {
      "op": "DUP2"
    },
    "1772": {
      "op": "AND"
    },
    "1773": {
      "op": "DUP2"
    },
    "1774": {
      "op": "EQ"
    },
    "1775": {
      "op": "PUSH2",
      "value": "0x6F7"
    },
    "1778": {
      "op": "JUMPI"
    },
    "1779": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1781": {
      "op": "DUP1"
    },
    "1782": {
      "op": "REVERT"
    },
    "1783": {
      "op": "JUMPDEST"
    },
    "1784": {
      "op": "SWAP2"
    },
    "1785": {
      "op": "SWAP1"
    },
    "1786": {
      "op": "POP"
    },
    "1787": {
      "jump": "o",
      "op": "JUMP"
    },
    "1788": {
      "op": "JUMPDEST"
    },
    "1789": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1791": {
      "op": "DUP1"
    },
    "1792": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1794": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1796": {
      "op": "DUP5"
    },
    "1797": {
      "op": "DUP7"
    },
    "1798": {
      "op": "SUB"
    },
    "1799": {
      "op": "SLT"
    },
    "1800": {
      "op": "ISZERO"
    },
    "1801": {
      "op": "PUSH2",
      "value": "0x711"
    },
    "1804": {
      "op": "JUMPI"
    },
    "1805": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1807": {
      "op": "DUP1"
    },
    "1808": {
      "op": "REVERT"
    },
    "1809": {
      "op": "JUMPDEST"
    },
    "1810": {
      "op": "PUSH2",
      "value": "0x71A"
    },
    "1813": {
      "op": "DUP5"
    },
    "1814": {
      "op": "PUSH2",
      "value": "0x6E0"
    },
    "1817": {
      "jump": "i",
      "op": "JUMP"
    },
    "1818": {
      "op": "JUMPDEST"
    },
    "1819": {
      "op": "SWAP3"
    },
    "1820": {
      "op": "POP"
    },
    "1821": {
      "op": "PUSH2",
      "value": "0x728"
    },
    "1824": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1826": {
      "op": "DUP6"
    },
    "1827": {
      "op": "ADD"
    },
    "1828": {
      "op": "PUSH2",
      "value": "0x6E0"
    },
    "1831": {
      "jump": "i",
      "op": "JUMP"
    },
    "1832": {
      "op": "JUMPDEST"
    },
    "1833": {
      "op": "SWAP2"
    },
    "1834": {
      "op": "POP"
    },
    "1835": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1837": {
      "op": "DUP5"
    },
    "1838": {
      "op": "ADD"
    },
    "1839": {
      "op": "MLOAD"
    },
    "1840": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "1845": {
      "op": "DUP2"
    },
    "1846": {
      "op": "AND"
    },
    "1847": {
      "op": "DUP2"
    },
    "1848": {
      "op": "EQ"
    },
    "1849": {
      "op": "PUSH2",
      "value": "0x741"
    },
    "1852": {
      "op": "JUMPI"
    },
    "1853": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1855": {
      "op": "DUP1"
    },
    "1856": {
      "op": "REVERT"
    },
    "1857": {
      "op": "JUMPDEST"
    },
    "1858": {
      "op": "DUP1"
    },
    "1859": {
      "op": "SWAP2"
    },
    "1860": {
      "op": "POP"
    },
    "1861": {
      "op": "POP"
    },
    "1862": {
      "op": "SWAP3"
    },
    "1863": {
      "op": "POP"
    },
    "1864": {
      "op": "SWAP3"
    },
    "1865": {
      "op": "POP"
    },
    "1866": {
      "op": "SWAP3"
    },
    "1867": {
      "jump": "o",
      "op": "JUMP"
    },
    "1868": {
      "op": "JUMPDEST"
    },
    "1869": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1874": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1876": {
      "op": "SHL"
    },
    "1877": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1879": {
      "op": "MSTORE"
    },
    "1880": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1882": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1884": {
      "op": "MSTORE"
    },
    "1885": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1887": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1889": {
      "op": "REVERT"
    },
    "1890": {
      "op": "JUMPDEST"
    },
    "1891": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1893": {
      "op": "DUP3"
    },
    "1894": {
      "op": "DUP2"
    },
    "1895": {
      "op": "AND"
    },
    "1896": {
      "op": "DUP3"
    },
    "1897": {
      "op": "DUP3"
    },
    "1898": {
      "op": "AND"
    },
    "1899": {
      "op": "SUB"
    },
    "1900": {
      "op": "SWAP1"
    },
    "1901": {
      "op": "DUP2"
    },
    "1902": {
      "op": "GT"
    },
    "1903": {
      "op": "ISZERO"
    },
    "1904": {
      "op": "PUSH2",
      "value": "0x77B"
    },
    "1907": {
      "op": "JUMPI"
    },
    "1908": {
      "op": "PUSH2",
      "value": "0x77B"
    },
    "1911": {
      "op": "PUSH2",
      "value": "0x74C"
    },
    "1914": {
      "jump": "i",
      "op": "JUMP"
    },
    "1915": {
      "op": "JUMPDEST"
    },
    "1916": {
      "op": "SWAP3"
    },
    "1917": {
      "op": "SWAP2"
    },
    "1918": {
      "op": "POP"
    },
    "1919": {
      "op": "POP"
    },
    "1920": {
      "jump": "o",
      "op": "JUMP"
    },
    "1921": {
      "op": "JUMPDEST"
    },
    "1922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1924": {
      "op": "DUP2"
    },
    "1925": {
      "op": "DUP2"
    },
    "1926": {
      "op": "JUMPDEST"
    },
    "1927": {
      "op": "DUP1"
    },
    "1928": {
      "op": "DUP6"
    },
    "1929": {
      "op": "GT"
    },
    "1930": {
      "op": "ISZERO"
    },
    "1931": {
      "op": "PUSH2",
      "value": "0x7BC"
    },
    "1934": {
      "op": "JUMPI"
    },
    "1935": {
      "op": "DUP2"
    },
    "1936": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1938": {
      "op": "NOT"
    },
    "1939": {
      "op": "DIV"
    },
    "1940": {
      "op": "DUP3"
    },
    "1941": {
      "op": "GT"
    },
    "1942": {
      "op": "ISZERO"
    },
    "1943": {
      "op": "PUSH2",
      "value": "0x7A2"
    },
    "1946": {
      "op": "JUMPI"
    },
    "1947": {
      "op": "PUSH2",
      "value": "0x7A2"
    },
    "1950": {
      "op": "PUSH2",
      "value": "0x74C"
    },
    "1953": {
      "jump": "i",
      "op": "JUMP"
    },
    "1954": {
      "op": "JUMPDEST"
    },
    "1955": {
      "op": "DUP1"
    },
    "1956": {
      "op": "DUP6"
    },
    "1957": {
      "op": "AND"
    },
    "1958": {
      "op": "ISZERO"
    },
    "1959": {
      "op": "PUSH2",
      "value": "0x7AF"
    },
    "1962": {
      "op": "JUMPI"
    },
    "1963": {
      "op": "SWAP2"
    },
    "1964": {
      "op": "DUP2"
    },
    "1965": {
      "op": "MUL"
    },
    "1966": {
      "op": "SWAP2"
    },
    "1967": {
      "op": "JUMPDEST"
    },
    "1968": {
      "op": "SWAP4"
    },
    "1969": {
      "op": "DUP5"
    },
    "1970": {
      "op": "SHR"
    },
    "1971": {
      "op": "SWAP4"
    },
    "1972": {
      "op": "SWAP1"
    },
    "1973": {
      "op": "DUP1"
    },
    "1974": {
      "op": "MUL"
    },
    "1975": {
      "op": "SWAP1"
    },
    "1976": {
      "op": "PUSH2",
      "value": "0x786"
    },
    "1979": {
      "op": "JUMP"
    },
    "1980": {
      "op": "JUMPDEST"
    },
    "1981": {
      "op": "POP"
    },
    "1982": {
      "op": "SWAP3"
    },
    "1983": {
      "op": "POP"
    },
    "1984": {
      "op": "SWAP3"
    },
    "1985": {
      "op": "SWAP1"
    },
    "1986": {
      "op": "POP"
    },
    "1987": {
      "jump": "o",
      "op": "JUMP"
    },
    "1988": {
      "op": "JUMPDEST"
    },
    "1989": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1991": {
      "op": "DUP3"
    },
    "1992": {
      "op": "PUSH2",
      "value": "0x7D3"
    },
    "1995": {
      "op": "JUMPI"
    },
    "1996": {
      "op": "POP"
    },
    "1997": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1999": {
      "op": "PUSH2",
      "value": "0x77B"
    },
    "2002": {
      "op": "JUMP"
    },
    "2003": {
      "op": "JUMPDEST"
    },
    "2004": {
      "op": "DUP2"
    },
    "2005": {
      "op": "PUSH2",
      "value": "0x7E0"
    },
    "2008": {
      "op": "JUMPI"
    },
    "2009": {
      "op": "POP"
    },
    "2010": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2012": {
      "op": "PUSH2",
      "value": "0x77B"
    },
    "2015": {
      "op": "JUMP"
    },
    "2016": {
      "op": "JUMPDEST"
    },
    "2017": {
      "op": "DUP2"
    },
    "2018": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2020": {
      "op": "DUP2"
    },
    "2021": {
      "op": "EQ"
    },
    "2022": {
      "op": "PUSH2",
      "value": "0x7F6"
    },
    "2025": {
      "op": "JUMPI"
    },
    "2026": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2028": {
      "op": "DUP2"
    },
    "2029": {
      "op": "EQ"
    },
    "2030": {
      "op": "PUSH2",
      "value": "0x800"
    },
    "2033": {
      "op": "JUMPI"
    },
    "2034": {
      "op": "PUSH2",
      "value": "0x81C"
    },
    "2037": {
      "op": "JUMP"
    },
    "2038": {
      "op": "JUMPDEST"
    },
    "2039": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2041": {
      "op": "SWAP2"
    },
    "2042": {
      "op": "POP"
    },
    "2043": {
      "op": "POP"
    },
    "2044": {
      "op": "PUSH2",
      "value": "0x77B"
    },
    "2047": {
      "op": "JUMP"
    },
    "2048": {
      "op": "JUMPDEST"
    },
    "2049": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2051": {
      "op": "DUP5"
    },
    "2052": {
      "op": "GT"
    },
    "2053": {
      "op": "ISZERO"
    },
    "2054": {
      "op": "PUSH2",
      "value": "0x811"
    },
    "2057": {
      "op": "JUMPI"
    },
    "2058": {
      "op": "PUSH2",
      "value": "0x811"
    },
    "2061": {
      "op": "PUSH2",
      "value": "0x74C"
    },
    "2064": {
      "jump": "i",
      "op": "JUMP"
    },
    "2065": {
      "op": "JUMPDEST"
    },
    "2066": {
      "op": "POP"
    },
    "2067": {
      "op": "POP"
    },
    "2068": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2070": {
      "op": "DUP3"
    },
    "2071": {
      "op": "SHL"
    },
    "2072": {
      "op": "PUSH2",
      "value": "0x77B"
    },
    "2075": {
      "op": "JUMP"
    },
    "2076": {
      "op": "JUMPDEST"
    },
    "2077": {
      "op": "POP"
    },
    "2078": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2080": {
      "op": "DUP4"
    },
    "2081": {
      "op": "LT"
    },
    "2082": {
      "op": "PUSH2",
      "value": "0x133"
    },
    "2085": {
      "op": "DUP4"
    },
    "2086": {
      "op": "LT"
    },
    "2087": {
      "op": "AND"
    },
    "2088": {
      "op": "PUSH1",
      "value": "0x4E"
    },
    "2090": {
      "op": "DUP5"
    },
    "2091": {
      "op": "LT"
    },
    "2092": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "2094": {
      "op": "DUP5"
    },
    "2095": {
      "op": "LT"
    },
    "2096": {
      "op": "AND"
    },
    "2097": {
      "op": "OR"
    },
    "2098": {
      "op": "ISZERO"
    },
    "2099": {
      "op": "PUSH2",
      "value": "0x83F"
    },
    "2102": {
      "op": "JUMPI"
    },
    "2103": {
      "op": "POP"
    },
    "2104": {
      "op": "DUP2"
    },
    "2105": {
      "op": "DUP2"
    },
    "2106": {
      "op": "EXP"
    },
    "2107": {
      "op": "PUSH2",
      "value": "0x77B"
    },
    "2110": {
      "op": "JUMP"
    },
    "2111": {
      "op": "JUMPDEST"
    },
    "2112": {
      "op": "PUSH2",
      "value": "0x849"
    },
    "2115": {
      "op": "DUP4"
    },
    "2116": {
      "op": "DUP4"
    },
    "2117": {
      "op": "PUSH2",
      "value": "0x781"
    },
    "2120": {
      "jump": "i",
      "op": "JUMP"
    },
    "2121": {
      "op": "JUMPDEST"
    },
    "2122": {
      "op": "DUP1"
    },
    "2123": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2125": {
      "op": "NOT"
    },
    "2126": {
      "op": "DIV"
    },
    "2127": {
      "op": "DUP3"
    },
    "2128": {
      "op": "GT"
    },
    "2129": {
      "op": "ISZERO"
    },
    "2130": {
      "op": "PUSH2",
      "value": "0x85D"
    },
    "2133": {
      "op": "JUMPI"
    },
    "2134": {
      "op": "PUSH2",
      "value": "0x85D"
    },
    "2137": {
      "op": "PUSH2",
      "value": "0x74C"
    },
    "2140": {
      "jump": "i",
      "op": "JUMP"
    },
    "2141": {
      "op": "JUMPDEST"
    },
    "2142": {
      "op": "MUL"
    },
    "2143": {
      "op": "SWAP4"
    },
    "2144": {
      "op": "SWAP3"
    },
    "2145": {
      "op": "POP"
    },
    "2146": {
      "op": "POP"
    },
    "2147": {
      "op": "POP"
    },
    "2148": {
      "jump": "o",
      "op": "JUMP"
    },
    "2149": {
      "op": "JUMPDEST"
    },
    "2150": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2152": {
      "op": "PUSH2",
      "value": "0x874"
    },
    "2155": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2157": {
      "op": "DUP5"
    },
    "2158": {
      "op": "AND"
    },
    "2159": {
      "op": "DUP4"
    },
    "2160": {
      "op": "PUSH2",
      "value": "0x7C4"
    },
    "2163": {
      "jump": "i",
      "op": "JUMP"
    },
    "2164": {
      "op": "JUMPDEST"
    },
    "2165": {
      "op": "SWAP4"
    },
    "2166": {
      "op": "SWAP3"
    },
    "2167": {
      "op": "POP"
    },
    "2168": {
      "op": "POP"
    },
    "2169": {
      "op": "POP"
    },
    "2170": {
      "jump": "o",
      "op": "JUMP"
    },
    "2171": {
      "op": "JUMPDEST"
    },
    "2172": {
      "op": "DUP1"
    },
    "2173": {
      "op": "DUP3"
    },
    "2174": {
      "op": "MUL"
    },
    "2175": {
      "op": "DUP2"
    },
    "2176": {
      "op": "ISZERO"
    },
    "2177": {
      "op": "DUP3"
    },
    "2178": {
      "op": "DUP3"
    },
    "2179": {
      "op": "DIV"
    },
    "2180": {
      "op": "DUP5"
    },
    "2181": {
      "op": "EQ"
    },
    "2182": {
      "op": "OR"
    },
    "2183": {
      "op": "PUSH2",
      "value": "0x77B"
    },
    "2186": {
      "op": "JUMPI"
    },
    "2187": {
      "op": "PUSH2",
      "value": "0x77B"
    },
    "2190": {
      "op": "PUSH2",
      "value": "0x74C"
    },
    "2193": {
      "jump": "i",
      "op": "JUMP"
    },
    "2194": {
      "op": "JUMPDEST"
    },
    "2195": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2197": {
      "op": "DUP3"
    },
    "2198": {
      "op": "PUSH2",
      "value": "0x8AF"
    },
    "2201": {
      "op": "JUMPI"
    },
    "2202": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2207": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2209": {
      "op": "SHL"
    },
    "2210": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2212": {
      "op": "MSTORE"
    },
    "2213": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "2215": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2217": {
      "op": "MSTORE"
    },
    "2218": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2220": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2222": {
      "op": "REVERT"
    },
    "2223": {
      "op": "JUMPDEST"
    },
    "2224": {
      "op": "POP"
    },
    "2225": {
      "op": "DIV"
    },
    "2226": {
      "op": "SWAP1"
    },
    "2227": {
      "jump": "o",
      "op": "JUMP"
    },
    "2228": {
      "op": "JUMPDEST"
    },
    "2229": {
      "op": "DUP1"
    },
    "2230": {
      "op": "DUP3"
    },
    "2231": {
      "op": "ADD"
    },
    "2232": {
      "op": "DUP1"
    },
    "2233": {
      "op": "DUP3"
    },
    "2234": {
      "op": "GT"
    },
    "2235": {
      "op": "ISZERO"
    },
    "2236": {
      "op": "PUSH2",
      "value": "0x77B"
    },
    "2239": {
      "op": "JUMPI"
    },
    "2240": {
      "op": "PUSH2",
      "value": "0x77B"
    },
    "2243": {
      "op": "PUSH2",
      "value": "0x74C"
    },
    "2246": {
      "jump": "i",
      "op": "JUMP"
    },
    "2247": {
      "op": "JUMPDEST"
    },
    "2248": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2250": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2252": {
      "op": "DUP3"
    },
    "2253": {
      "op": "DUP5"
    },
    "2254": {
      "op": "SUB"
    },
    "2255": {
      "op": "SLT"
    },
    "2256": {
      "op": "ISZERO"
    },
    "2257": {
      "op": "PUSH2",
      "value": "0x8D9"
    },
    "2260": {
      "op": "JUMPI"
    },
    "2261": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2263": {
      "op": "DUP1"
    },
    "2264": {
      "op": "REVERT"
    },
    "2265": {
      "op": "JUMPDEST"
    },
    "2266": {
      "op": "POP"
    },
    "2267": {
      "op": "MLOAD"
    },
    "2268": {
      "op": "SWAP2"
    },
    "2269": {
      "op": "SWAP1"
    },
    "2270": {
      "op": "POP"
    },
    "2271": {
      "jump": "o",
      "op": "JUMP"
    },
    "2272": {
      "op": "JUMPDEST"
    },
    "2273": {
      "op": "DUP1"
    },
    "2274": {
      "op": "MLOAD"
    },
    "2275": {
      "op": "PUSH10",
      "value": "0xFFFFFFFFFFFFFFFFFFFF"
    },
    "2286": {
      "op": "DUP2"
    },
    "2287": {
      "op": "AND"
    },
    "2288": {
      "op": "DUP2"
    },
    "2289": {
      "op": "EQ"
    },
    "2290": {
      "op": "PUSH2",
      "value": "0x6F7"
    },
    "2293": {
      "op": "JUMPI"
    },
    "2294": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2296": {
      "op": "DUP1"
    },
    "2297": {
      "op": "REVERT"
    },
    "2298": {
      "op": "JUMPDEST"
    },
    "2299": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2301": {
      "op": "DUP1"
    },
    "2302": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2304": {
      "op": "DUP1"
    },
    "2305": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2307": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2309": {
      "op": "DUP7"
    },
    "2310": {
      "op": "DUP9"
    },
    "2311": {
      "op": "SUB"
    },
    "2312": {
      "op": "SLT"
    },
    "2313": {
      "op": "ISZERO"
    },
    "2314": {
      "op": "PUSH2",
      "value": "0x912"
    },
    "2317": {
      "op": "JUMPI"
    },
    "2318": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2320": {
      "op": "DUP1"
    },
    "2321": {
      "op": "REVERT"
    },
    "2322": {
      "op": "JUMPDEST"
    },
    "2323": {
      "op": "PUSH2",
      "value": "0x91B"
    },
    "2326": {
      "op": "DUP7"
    },
    "2327": {
      "op": "PUSH2",
      "value": "0x8E0"
    },
    "2330": {
      "jump": "i",
      "op": "JUMP"
    },
    "2331": {
      "op": "JUMPDEST"
    },
    "2332": {
      "op": "SWAP5"
    },
    "2333": {
      "op": "POP"
    },
    "2334": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2336": {
      "op": "DUP7"
    },
    "2337": {
      "op": "ADD"
    },
    "2338": {
      "op": "MLOAD"
    },
    "2339": {
      "op": "SWAP4"
    },
    "2340": {
      "op": "POP"
    },
    "2341": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2343": {
      "op": "DUP7"
    },
    "2344": {
      "op": "ADD"
    },
    "2345": {
      "op": "MLOAD"
    },
    "2346": {
      "op": "SWAP3"
    },
    "2347": {
      "op": "POP"
    },
    "2348": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2350": {
      "op": "DUP7"
    },
    "2351": {
      "op": "ADD"
    },
    "2352": {
      "op": "MLOAD"
    },
    "2353": {
      "op": "SWAP2"
    },
    "2354": {
      "op": "POP"
    },
    "2355": {
      "op": "PUSH2",
      "value": "0x93E"
    },
    "2358": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2360": {
      "op": "DUP8"
    },
    "2361": {
      "op": "ADD"
    },
    "2362": {
      "op": "PUSH2",
      "value": "0x8E0"
    },
    "2365": {
      "jump": "i",
      "op": "JUMP"
    },
    "2366": {
      "op": "JUMPDEST"
    },
    "2367": {
      "op": "SWAP1"
    },
    "2368": {
      "op": "POP"
    },
    "2369": {
      "op": "SWAP3"
    },
    "2370": {
      "op": "SWAP6"
    },
    "2371": {
      "op": "POP"
    },
    "2372": {
      "op": "SWAP3"
    },
    "2373": {
      "op": "SWAP6"
    },
    "2374": {
      "op": "SWAP1"
    },
    "2375": {
      "op": "SWAP4"
    },
    "2376": {
      "op": "POP"
    },
    "2377": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "b5bb0de069b6907ac25c06bfa168a1f6364e55d6",
  "source": "// SPDX-License-Identifier: none\npragma solidity 0.8.19;\n\nimport \"../../interfaces/AggregatorV3Interface.sol\";\n\ninterface UniswapV2Pair {\n  function totalSupply() external view returns (uint);\n  function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\n  function token0() external view returns (address);\n  function token1() external view returns (address);\n}\n\ninterface IERC20 {\n  function decimals() external view returns (uint8);\n}\n\ncontract LPOracle {\n  /* Matic Network Settings */\n  AggregatorV3Interface public immutable CL_TOKENA;\n  AggregatorV3Interface public immutable CL_TOKENB;\n  UniswapV2Pair public immutable LP_TOKEN;\n\tuint8 public immutable decimalsA;\n\tuint8 public immutable decimalsB;\n\n\t/// @param lpToken UNI-LP token\n\t/// @param clToken0 Underlying token0 ChainLink feed\n\t/// @param clToken1 Underlying token1 ChainLink feed\n\tconstructor (address lpToken, address clToken0, address clToken1 ){\n    require(lpToken != address(0x0) && clToken0 != address(0x0) && clToken1 != address(0x0), \"Invalid address\");\n\t\tLP_TOKEN = UniswapV2Pair(lpToken);\n\t\tCL_TOKENA = AggregatorV3Interface(clToken0);\n\t\tCL_TOKENB = AggregatorV3Interface(clToken1);\n\t\tdecimalsA = IERC20(UniswapV2Pair(lpToken).token0()).decimals();\n\t\tdecimalsB = IERC20(UniswapV2Pair(lpToken).token1()).decimals();\n\t}\n\n  /// @notice Get oracle decimals\n  function decimals() external pure returns (uint8) {\n    return 8;\n  }\n\n  /// @notice Calculate a square root \n  /// @param y Square root variable\n  function sqrt(uint x) internal pure returns (uint y) {\n    uint z = (x + 1) / 2;\n    y = x;\n    while (z < y) {\n      y = z;\n      z = (x / z + z) / 2;\n    }\n  }\n\n  /// @notice Get the price for the latest available round of a feed\n  /// @param priceFeed Price feed\n  /// @return Latest price\n  function getAnswer(AggregatorV3Interface priceFeed) internal view returns (int256) {\n    (\n      , \n      int price,\n      ,\n      uint timeStamp,\n    ) = priceFeed.latestRoundData();\n    require(timeStamp > 0, \"Round not complete\");\n    return price;\n  }\n\n  /// @notice Get the oracle price for the latest available round\n  /// @return Latest price\n  function latestAnswer() external view returns (int256) {\n    (uint a, uint b,) = LP_TOKEN.getReserves();\n\n    uint priceA = uint(getAnswer(CL_TOKENA));\n    uint priceB = uint(getAnswer(CL_TOKENB));\n    /*\n      a and b represents the amounts of asset0 and asset1 in the LP\n      In the uniswap AMM model, a*b is always a constant k (ignoring fees)\n      norm_a, norm_b represents a, b adjusted along the k curve such that it represents the amounts the uniswap pool will contain at the Chainlink oracle price \n  \n      a*b = k = norm_a*norm_b\n      norm_a * cl_price_a / decimals_a = norm_b * cl_price_b / decimals_b\n      norm_b^2 = a*b * cl_price_a / decimals_a * decimals_b / cl_price_b\n    */\n    \n    // Below line may potentially overflow, e.g. for TRIBE-FEI pair, where numA * numB *priceA * 10**18 > 2**256-1\n    // uint norm_b = sqrt( a * b * priceA * 10**decimalsB / 10**decimalsA / priceB ); \n    \n    // Code below attempts to relief some common overflow potential\n    uint norm_b;\n    if (decimalsB >= decimalsA) {\n      norm_b = sqrt( a * b * priceA * 10**(decimalsB-decimalsA) / priceB );\n    } else {\n      norm_b = sqrt( a * b * priceA / 10**(decimalsA-decimalsB) / priceB );\n    }\n    uint norm_a = a * b / norm_b;\n\n    /*\n      The normalised positions (18 decimals) are multiplied with the chainlink value (8 decimals), giving val.\n      val is divided by LP_TOKEN.totalSupply(), which has 18 decimals, and casted to an int\n      The return value represents the value * 10**8 of a single LP token \n    */\n    require(decimalsA <= 18 && decimalsB <= 18, \"Incorrect tokens\");\n    uint val = norm_a * priceA * 10**(18-decimalsA) + norm_b * 10**(18-decimalsB) * priceB;\n    return int(val / LP_TOKEN.totalSupply());\n  }\n}\n",
  "sourceMap": "489:3426:6:-:0;;;900:446;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;980:23:6;;;;;;:51;;-1:-1:-1;;;;;;1007:24:6;;;;980:51;:79;;;;-1:-1:-1;;;;;;1035:24:6;;;;980:79;972:107;;;;-1:-1:-1;;;972:107:6;;781:2:54;972:107:6;;;763:21:54;820:2;800:18;;;793:30;-1:-1:-1;;;839:18:54;;;832:45;894:18;;972:107:6;;;;;;;;-1:-1:-1;;;;;1083:33:6;;;;;;;1120:43;;;;;1167;;;;;-1:-1:-1;1233:31:6;;-1:-1:-1;;;1233:31:6;;;;:29;;:31;;;;;-1:-1:-1;;1233:31:6;;;;;;;;1083:33;1233:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1226:48:6;;:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1214:62;;;;;;;;;;1313:7;-1:-1:-1;;;;;1299:29:6;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1292:48:6;;:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1280:62;;;;-1:-1:-1;489:3426:6;;-1:-1:-1;;489:3426:6;14:177:54;93:13;;-1:-1:-1;;;;;135:31:54;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:378::-;284:6;292;300;353:2;341:9;332:7;328:23;324:32;321:52;;;369:1;366;359:12;321:52;392:40;422:9;392:40;:::i;:::-;382:50;;451:49;496:2;485:9;481:18;451:49;:::i;:::-;441:59;;519:49;564:2;553:9;549:18;519:49;:::i;:::-;509:59;;196:378;;;;;:::o;923:208::-;993:6;1046:2;1034:9;1025:7;1021:23;1017:32;1014:52;;;1062:1;1059;1052:12;1014:52;1085:40;1115:9;1085:40;:::i;:::-;1075:50;923:208;-1:-1:-1;;;923:208:54:o;1136:273::-;1204:6;1257:2;1245:9;1236:7;1232:23;1228:32;1225:52;;;1273:1;1270;1263:12;1225:52;1305:9;1299:16;1355:4;1348:5;1344:16;1337:5;1334:27;1324:55;;1375:1;1372;1365:12;1136:273;489:3426:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/helper/LPOracle.sol",
  "type": "contract"
}