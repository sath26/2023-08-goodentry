{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "anotherValue",
          "type": "uint256"
        }
      ],
      "name": "migrate",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "migrate",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "x",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "y",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "127": "contracts/openzeppelin-solidity/contracts/mocks/SingleInheritanceInitializableMocks.sol",
    "147": "contracts/openzeppelin-solidity/contracts/proxy/utils/Initializable.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin-solidity/contracts/mocks/SingleInheritanceInitializableMocks.sol",
    "exportedSymbols": {
      "Address": [
        29802
      ],
      "Initializable": [
        21130
      ],
      "MigratableMockV1": [
        18308
      ],
      "MigratableMockV2": [
        18341
      ],
      "MigratableMockV3": [
        18372
      ]
    },
    "id": 18373,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 18289,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:127"
      },
      {
        "absolutePath": "contracts/openzeppelin-solidity/contracts/proxy/utils/Initializable.sol",
        "file": "../proxy/utils/Initializable.sol",
        "id": 18290,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 18373,
        "sourceUnit": 21131,
        "src": "58:42:127",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 18292,
              "name": "Initializable",
              "nameLocations": [
                "253:13:127"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21130,
              "src": "253:13:127"
            },
            "id": 18293,
            "nodeType": "InheritanceSpecifier",
            "src": "253:13:127"
          }
        ],
        "canonicalName": "MigratableMockV1",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 18291,
          "nodeType": "StructuredDocumentation",
          "src": "102:121:127",
          "text": " @title MigratableMockV1\n @dev This contract is a mock to test initializable functionality through migrations"
        },
        "fullyImplemented": true,
        "id": 18308,
        "linearizedBaseContracts": [
          18308,
          21130
        ],
        "name": "MigratableMockV1",
        "nameLocation": "233:16:127",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "0c55699c",
            "id": 18295,
            "mutability": "mutable",
            "name": "x",
            "nameLocation": "288:1:127",
            "nodeType": "VariableDeclaration",
            "scope": 18308,
            "src": "273:16:127",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 18294,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "273:7:127",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 18306,
              "nodeType": "Block",
              "src": "358:26:127",
              "statements": [
                {
                  "expression": {
                    "id": 18304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 18302,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18295,
                      "src": "368:1:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 18303,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18297,
                      "src": "372:5:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "368:9:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 18305,
                  "nodeType": "ExpressionStatement",
                  "src": "368:9:127"
                }
              ]
            },
            "functionSelector": "fe4b84df",
            "id": 18307,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 18300,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 18299,
                  "name": "initializer",
                  "nameLocations": [
                    "346:11:127"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21104,
                  "src": "346:11:127"
                },
                "nodeType": "ModifierInvocation",
                "src": "346:11:127"
              }
            ],
            "name": "initialize",
            "nameLocation": "305:10:127",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18298,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18297,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "324:5:127",
                  "nodeType": "VariableDeclaration",
                  "scope": 18307,
                  "src": "316:13:127",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18296,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "316:7:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "315:15:127"
            },
            "returnParameters": {
              "id": 18301,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "358:0:127"
            },
            "scope": 18308,
            "src": "296:88:127",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 18373,
        "src": "224:162:127",
        "usedErrors": [],
        "usedEvents": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 18310,
              "name": "MigratableMockV1",
              "nameLocations": [
                "529:16:127"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 18308,
              "src": "529:16:127"
            },
            "id": 18311,
            "nodeType": "InheritanceSpecifier",
            "src": "529:16:127"
          }
        ],
        "canonicalName": "MigratableMockV2",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 18309,
          "nodeType": "StructuredDocumentation",
          "src": "388:111:127",
          "text": " @title MigratableMockV2\n @dev This contract is a mock to test migratable functionality with params"
        },
        "fullyImplemented": true,
        "id": 18341,
        "linearizedBaseContracts": [
          18341,
          18308,
          21130
        ],
        "name": "MigratableMockV2",
        "nameLocation": "509:16:127",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 18313,
            "mutability": "mutable",
            "name": "_migratedV2",
            "nameLocation": "566:11:127",
            "nodeType": "VariableDeclaration",
            "scope": 18341,
            "src": "552:25:127",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 18312,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "552:4:127",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "a56dfe4a",
            "id": 18315,
            "mutability": "mutable",
            "name": "y",
            "nameLocation": "598:1:127",
            "nodeType": "VariableDeclaration",
            "scope": 18341,
            "src": "583:16:127",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 18314,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "583:7:127",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 18339,
              "nodeType": "Block",
              "src": "675:111:127",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 18324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "693:12:127",
                        "subExpression": {
                          "id": 18323,
                          "name": "_migratedV2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18313,
                          "src": "694:11:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 18322,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "685:7:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 18325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "685:21:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18326,
                  "nodeType": "ExpressionStatement",
                  "src": "685:21:127"
                },
                {
                  "expression": {
                    "id": 18329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 18327,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18295,
                      "src": "716:1:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 18328,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18317,
                      "src": "720:5:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "716:9:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 18330,
                  "nodeType": "ExpressionStatement",
                  "src": "716:9:127"
                },
                {
                  "expression": {
                    "id": 18333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 18331,
                      "name": "y",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18315,
                      "src": "735:1:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 18332,
                      "name": "anotherValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18319,
                      "src": "739:12:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "735:16:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 18334,
                  "nodeType": "ExpressionStatement",
                  "src": "735:16:127"
                },
                {
                  "expression": {
                    "id": 18337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 18335,
                      "name": "_migratedV2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18313,
                      "src": "761:11:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 18336,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "775:4:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "761:18:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 18338,
                  "nodeType": "ExpressionStatement",
                  "src": "761:18:127"
                }
              ]
            },
            "functionSelector": "3e54bacb",
            "id": 18340,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "migrate",
            "nameLocation": "615:7:127",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18320,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18317,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "631:5:127",
                  "nodeType": "VariableDeclaration",
                  "scope": 18340,
                  "src": "623:13:127",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18316,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "623:7:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18319,
                  "mutability": "mutable",
                  "name": "anotherValue",
                  "nameLocation": "646:12:127",
                  "nodeType": "VariableDeclaration",
                  "scope": 18340,
                  "src": "638:20:127",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18318,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "638:7:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "622:37:127"
            },
            "returnParameters": {
              "id": 18321,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "675:0:127"
            },
            "scope": 18341,
            "src": "606:180:127",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 18373,
        "src": "500:288:127",
        "usedErrors": [],
        "usedEvents": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 18343,
              "name": "MigratableMockV2",
              "nameLocations": [
                "934:16:127"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 18341,
              "src": "934:16:127"
            },
            "id": 18344,
            "nodeType": "InheritanceSpecifier",
            "src": "934:16:127"
          }
        ],
        "canonicalName": "MigratableMockV3",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 18342,
          "nodeType": "StructuredDocumentation",
          "src": "790:114:127",
          "text": " @title MigratableMockV3\n @dev This contract is a mock to test migratable functionality without params"
        },
        "fullyImplemented": true,
        "id": 18372,
        "linearizedBaseContracts": [
          18372,
          18341,
          18308,
          21130
        ],
        "name": "MigratableMockV3",
        "nameLocation": "914:16:127",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 18346,
            "mutability": "mutable",
            "name": "_migratedV3",
            "nameLocation": "971:11:127",
            "nodeType": "VariableDeclaration",
            "scope": 18372,
            "src": "957:25:127",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 18345,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "957:4:127",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 18370,
              "nodeType": "Block",
              "src": "1023:125:127",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 18351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1041:12:127",
                        "subExpression": {
                          "id": 18350,
                          "name": "_migratedV3",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18346,
                          "src": "1042:11:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 18349,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1033:7:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 18352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1033:21:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18353,
                  "nodeType": "ExpressionStatement",
                  "src": "1033:21:127"
                },
                {
                  "assignments": [
                    18355
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 18355,
                      "mutability": "mutable",
                      "name": "oldX",
                      "nameLocation": "1072:4:127",
                      "nodeType": "VariableDeclaration",
                      "scope": 18370,
                      "src": "1064:12:127",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 18354,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1064:7:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 18357,
                  "initialValue": {
                    "id": 18356,
                    "name": "x",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 18295,
                    "src": "1079:1:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1064:16:127"
                },
                {
                  "expression": {
                    "id": 18360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 18358,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18295,
                      "src": "1090:1:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 18359,
                      "name": "y",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18315,
                      "src": "1094:1:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1090:5:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 18361,
                  "nodeType": "ExpressionStatement",
                  "src": "1090:5:127"
                },
                {
                  "expression": {
                    "id": 18364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 18362,
                      "name": "y",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18315,
                      "src": "1105:1:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 18363,
                      "name": "oldX",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18355,
                      "src": "1109:4:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1105:8:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 18365,
                  "nodeType": "ExpressionStatement",
                  "src": "1105:8:127"
                },
                {
                  "expression": {
                    "id": 18368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 18366,
                      "name": "_migratedV3",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18346,
                      "src": "1123:11:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 18367,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1137:4:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1123:18:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 18369,
                  "nodeType": "ExpressionStatement",
                  "src": "1123:18:127"
                }
              ]
            },
            "functionSelector": "8fd3ab80",
            "id": 18371,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "migrate",
            "nameLocation": "998:7:127",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18347,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1005:2:127"
            },
            "returnParameters": {
              "id": 18348,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1023:0:127"
            },
            "scope": 18372,
            "src": "989:159:127",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 18373,
        "src": "905:245:127",
        "usedErrors": [],
        "usedEvents": []
      }
    ],
    "src": "33:1118:127"
  },
  "bytecode": "608060405234801561001057600080fd5b50610242806100206000396000f3fe60806040526004361061004a5760003560e01c80630c55699c1461004f5780633e54bacb146100775780638fd3ab801461008c578063a56dfe4a14610094578063fe4b84df146100aa575b600080fd5b34801561005b57600080fd5b5061006560015481565b60405190815260200160405180910390f35b61008a6100853660046101d1565b6100bd565b005b61008a6100e4565b3480156100a057600080fd5b5061006560035481565b61008a6100b83660046101f3565b61010e565b60025460ff16156100cd57600080fd5b60019182556003556002805460ff19169091179055565b60045460ff16156100f457600080fd5b60018054600380548355556004805460ff19169091179055565b600054610100900460ff166101295760005460ff161561012d565b303b155b6101945760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b600054610100900460ff161580156101b6576000805461ffff19166101011790555b600182905580156101cd576000805461ff00191690555b5050565b600080604083850312156101e457600080fd5b50508035926020909101359150565b60006020828403121561020557600080fd5b503591905056fea2646970667358221220508eb68f3641ec0765b40c1cc209177a0b4c2e0a1e8af6d009b9ec91ad1bb46664736f6c63430008150033",
  "bytecodeSha1": "21d097d4e49d5e734bd4c94c5e84886651a78600",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.21+commit.d9974bed"
  },
  "contractName": "MigratableMockV3",
  "coverageMap": {
    "branches": {
      "127": {
        "MigratableMockV2.migrate": {
          "10": [
            693,
            705,
            true
          ]
        },
        "MigratableMockV3.migrate": {
          "11": [
            1041,
            1053,
            true
          ]
        }
      },
      "147": {
        "MigratableMockV1.initialize": {
          "12": [
            2343,
            2356,
            true
          ],
          "13": [
            2343,
            2391,
            true
          ]
        }
      }
    },
    "statements": {
      "127": {
        "MigratableMockV1.initialize": {
          "9": [
            368,
            377
          ]
        },
        "MigratableMockV2.migrate": {
          "0": [
            685,
            706
          ],
          "1": [
            716,
            725
          ],
          "2": [
            735,
            751
          ],
          "3": [
            761,
            779
          ]
        },
        "MigratableMockV3.migrate": {
          "4": [
            1033,
            1054
          ],
          "5": [
            1090,
            1095
          ],
          "6": [
            1105,
            1113
          ],
          "7": [
            1123,
            1141
          ]
        }
      },
      "147": {
        "Initializable._isConstructor": {
          "8": [
            3075,
            3116
          ]
        }
      }
    }
  },
  "dependencies": [
    "Initializable",
    "MigratableMockV1",
    "MigratableMockV2"
  ],
  "deployedBytecode": "60806040526004361061004a5760003560e01c80630c55699c1461004f5780633e54bacb146100775780638fd3ab801461008c578063a56dfe4a14610094578063fe4b84df146100aa575b600080fd5b34801561005b57600080fd5b5061006560015481565b60405190815260200160405180910390f35b61008a6100853660046101d1565b6100bd565b005b61008a6100e4565b3480156100a057600080fd5b5061006560035481565b61008a6100b83660046101f3565b61010e565b60025460ff16156100cd57600080fd5b60019182556003556002805460ff19169091179055565b60045460ff16156100f457600080fd5b60018054600380548355556004805460ff19169091179055565b600054610100900460ff166101295760005460ff161561012d565b303b155b6101945760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b600054610100900460ff161580156101b6576000805461ffff19166101011790555b600182905580156101cd576000805461ff00191690555b5050565b600080604083850312156101e457600080fd5b50508035926020909101359150565b60006020828403121561020557600080fd5b503591905056fea2646970667358221220508eb68f3641ec0765b40c1cc209177a0b4c2e0a1e8af6d009b9ec91ad1bb46664736f6c63430008150033",
  "deployedSourceMap": "905:245:127:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;273:16;;;;;;;;;;;;;;;;;;;160:25:249;;;148:2;133:18;273:16:127;;;;;;;606:180;;;;;;:::i;:::-;;:::i;:::-;;989:159;;;:::i;583:16::-;;;;;;;;;;;;;;;;296:88;;;;;;:::i;:::-;;:::i;606:180::-;694:11;;;;693:12;685:21;;;;;;716:1;:9;;;735:1;:16;761:11;:18;;-1:-1:-1;;761:18:127;;;;;;606:180::o;989:159::-;1042:11;;;;1041:12;1033:21;;;;;;1079:1;;;1094;;;1090:5;;1105:8;1123:11;:18;;-1:-1:-1;;1123:18:127;;;;;;989:159::o;296:88::-;2343:13:147;;;;;;;:48;;2379:12;;;;2378:13;2343:48;;;3110:4;1450:19:198;:23;2359:16:147;2335:107;;;;-1:-1:-1;;;2335:107:147;;836:2:249;2335:107:147;;;818:21:249;875:2;855:18;;;848:30;914:34;894:18;;;887:62;-1:-1:-1;;;965:18:249;;;958:44;1019:19;;2335:107:147;;;;;;;;2453:19;2476:13;;;;;;2475:14;2499:98;;;;2533:13;:20;;-1:-1:-1;;2567:19:147;;;;;2499:98;368:1:127::1;:9:::0;;;2619:66:147;;;;2669:5;2653:21;;-1:-1:-1;;2653:21:147;;;2619:66;2054:637;296:88:127;:::o;196:248:249:-;264:6;272;325:2;313:9;304:7;300:23;296:32;293:52;;;341:1;338;331:12;293:52;-1:-1:-1;;364:23:249;;;434:2;419:18;;;406:32;;-1:-1:-1;196:248:249:o;449:180::-;508:6;561:2;549:9;540:7;536:23;532:32;529:52;;;577:1;574;567:12;529:52;-1:-1:-1;600:23:249;;449:180;-1:-1:-1;449:180:249:o",
  "language": "Solidity",
  "natspec": {
    "details": "This contract is a mock to test migratable functionality without params",
    "kind": "dev",
    "methods": {},
    "title": "MigratableMockV3",
    "version": 1
  },
  "offset": [
    905,
    1150
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC55699C EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x3E54BACB EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0x8FD3AB80 EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0xA56DFE4A EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0xFE4B84DF EQ PUSH2 0xAA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x65 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8A PUSH2 0x85 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D1 JUMP JUMPDEST PUSH2 0xBD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8A PUSH2 0xE4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x65 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x8A PUSH2 0xB8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F3 JUMP JUMPDEST PUSH2 0x10E JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SWAP2 DUP3 SSTORE PUSH1 0x3 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x3 DUP1 SLOAD DUP4 SSTORE SSTORE PUSH1 0x4 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x129 JUMPI PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x12D JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO JUMPDEST PUSH2 0x194 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1B6 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x1CD JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x205 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP DUP15 0xB6 DUP16 CALLDATASIZE COINBASE 0xEC SMOD PUSH6 0xB40C1CC20917 PUSH27 0xB4C2E0A1E8AF6D009B9EC91AD1BB46664736F6C63430008150033 ",
  "pcMap": {
    "0": {
      "offset": [
        905,
        1150
      ],
      "op": "PUSH1",
      "path": "127",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        905,
        1150
      ],
      "op": "PUSH1",
      "path": "127",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        905,
        1150
      ],
      "op": "MSTORE",
      "path": "127"
    },
    "5": {
      "fn": null,
      "offset": [
        905,
        1150
      ],
      "op": "PUSH1",
      "path": "127",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        905,
        1150
      ],
      "op": "CALLDATASIZE",
      "path": "127"
    },
    "8": {
      "fn": null,
      "offset": [
        905,
        1150
      ],
      "op": "LT",
      "path": "127"
    },
    "9": {
      "fn": null,
      "offset": [
        905,
        1150
      ],
      "op": "PUSH2",
      "path": "127",
      "value": "0x4A"
    },
    "12": {
      "fn": null,
      "offset": [
        905,
        1150
      ],
      "op": "JUMPI",
      "path": "127"
    },
    "13": {
      "fn": null,
      "offset": [
        905,
        1150
      ],
      "op": "PUSH1",
      "path": "127",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        905,
        1150
      ],
      "op": "CALLDATALOAD",
      "path": "127"
    },
    "16": {
      "fn": null,
      "offset": [
        905,
        1150
      ],
      "op": "PUSH1",
      "path": "127",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        905,
        1150
      ],
      "op": "SHR",
      "path": "127"
    },
    "19": {
      "fn": null,
      "offset": [
        905,
        1150
      ],
      "op": "DUP1",
      "path": "127"
    },
    "20": {
      "fn": null,
      "offset": [
        905,
        1150
      ],
      "op": "PUSH4",
      "path": "127",
      "value": "0xC55699C"
    },
    "25": {
      "fn": null,
      "offset": [
        905,
        1150
      ],
      "op": "EQ",
      "path": "127"
    },
    "26": {
      "fn": null,
      "offset": [
        905,
        1150
      ],
      "op": "PUSH2",
      "path": "127",
      "value": "0x4F"
    },
    "29": {
      "fn": null,
      "offset": [
        905,
        1150
      ],
      "op": "JUMPI",
      "path": "127"
    },
    "30": {
      "fn": null,
      "offset": [
        905,
        1150
      ],
      "op": "DUP1",
      "path": "127"
    },
    "31": {
      "fn": null,
      "offset": [
        905,
        1150
      ],
      "op": "PUSH4",
      "path": "127",
      "value": "0x3E54BACB"
    },
    "36": {
      "fn": null,
      "offset": [
        905,
        1150
      ],
      "op": "EQ",
      "path": "127"
    },
    "37": {
      "fn": null,
      "offset": [
        905,
        1150
      ],
      "op": "PUSH2",
      "path": "127",
      "value": "0x77"
    },
    "40": {
      "fn": null,
      "offset": [
        905,
        1150
      ],
      "op": "JUMPI",
      "path": "127"
    },
    "41": {
      "fn": null,
      "offset": [
        905,
        1150
      ],
      "op": "DUP1",
      "path": "127"
    },
    "42": {
      "fn": null,
      "offset": [
        905,
        1150
      ],
      "op": "PUSH4",
      "path": "127",
      "value": "0x8FD3AB80"
    },
    "47": {
      "fn": null,
      "offset": [
        905,
        1150
      ],
      "op": "EQ",
      "path": "127"
    },
    "48": {
      "fn": null,
      "offset": [
        905,
        1150
      ],
      "op": "PUSH2",
      "path": "127",
      "value": "0x8C"
    },
    "51": {
      "fn": null,
      "offset": [
        905,
        1150
      ],
      "op": "JUMPI",
      "path": "127"
    },
    "52": {
      "fn": null,
      "offset": [
        905,
        1150
      ],
      "op": "DUP1",
      "path": "127"
    },
    "53": {
      "fn": null,
      "offset": [
        905,
        1150
      ],
      "op": "PUSH4",
      "path": "127",
      "value": "0xA56DFE4A"
    },
    "58": {
      "fn": null,
      "offset": [
        905,
        1150
      ],
      "op": "EQ",
      "path": "127"
    },
    "59": {
      "fn": null,
      "offset": [
        905,
        1150
      ],
      "op": "PUSH2",
      "path": "127",
      "value": "0x94"
    },
    "62": {
      "fn": null,
      "offset": [
        905,
        1150
      ],
      "op": "JUMPI",
      "path": "127"
    },
    "63": {
      "fn": null,
      "offset": [
        905,
        1150
      ],
      "op": "DUP1",
      "path": "127"
    },
    "64": {
      "fn": null,
      "offset": [
        905,
        1150
      ],
      "op": "PUSH4",
      "path": "127",
      "value": "0xFE4B84DF"
    },
    "69": {
      "fn": null,
      "offset": [
        905,
        1150
      ],
      "op": "EQ",
      "path": "127"
    },
    "70": {
      "fn": null,
      "offset": [
        905,
        1150
      ],
      "op": "PUSH2",
      "path": "127",
      "value": "0xAA"
    },
    "73": {
      "fn": null,
      "offset": [
        905,
        1150
      ],
      "op": "JUMPI",
      "path": "127"
    },
    "74": {
      "fn": null,
      "offset": [
        905,
        1150
      ],
      "op": "JUMPDEST",
      "path": "127"
    },
    "75": {
      "fn": null,
      "offset": [
        905,
        1150
      ],
      "op": "PUSH1",
      "path": "127",
      "value": "0x0"
    },
    "77": {
      "fn": null,
      "offset": [
        905,
        1150
      ],
      "op": "DUP1",
      "path": "127"
    },
    "78": {
      "first_revert": true,
      "fn": null,
      "offset": [
        905,
        1150
      ],
      "op": "REVERT",
      "path": "127"
    },
    "79": {
      "offset": [
        273,
        289
      ],
      "op": "JUMPDEST",
      "path": "127"
    },
    "80": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "CALLVALUE",
      "path": "127"
    },
    "81": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "DUP1",
      "path": "127"
    },
    "82": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "ISZERO",
      "path": "127"
    },
    "83": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "PUSH2",
      "path": "127",
      "value": "0x5B"
    },
    "86": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "JUMPI",
      "path": "127"
    },
    "87": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "PUSH1",
      "path": "127",
      "value": "0x0"
    },
    "89": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "DUP1",
      "path": "127"
    },
    "90": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "REVERT",
      "path": "127"
    },
    "91": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "JUMPDEST",
      "path": "127"
    },
    "92": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "POP",
      "path": "127"
    },
    "93": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "PUSH2",
      "path": "127",
      "value": "0x65"
    },
    "96": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "PUSH1",
      "path": "127",
      "value": "0x1"
    },
    "98": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "SLOAD",
      "path": "127"
    },
    "99": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "DUP2",
      "path": "127"
    },
    "100": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "JUMP",
      "path": "127"
    },
    "101": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "JUMPDEST",
      "path": "127"
    },
    "102": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "PUSH1",
      "path": "127",
      "value": "0x40"
    },
    "104": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "MLOAD",
      "path": "127"
    },
    "105": {
      "op": "SWAP1"
    },
    "106": {
      "op": "DUP2"
    },
    "107": {
      "op": "MSTORE"
    },
    "108": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "110": {
      "op": "ADD"
    },
    "111": {
      "offset": [
        273,
        289
      ],
      "op": "PUSH1",
      "path": "127",
      "value": "0x40"
    },
    "113": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "MLOAD",
      "path": "127"
    },
    "114": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "DUP1",
      "path": "127"
    },
    "115": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "SWAP2",
      "path": "127"
    },
    "116": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "SUB",
      "path": "127"
    },
    "117": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "SWAP1",
      "path": "127"
    },
    "118": {
      "fn": null,
      "offset": [
        273,
        289
      ],
      "op": "RETURN",
      "path": "127"
    },
    "119": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        606,
        786
      ],
      "op": "JUMPDEST",
      "path": "127"
    },
    "120": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        606,
        786
      ],
      "op": "PUSH2",
      "path": "127",
      "value": "0x8A"
    },
    "123": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        606,
        786
      ],
      "op": "PUSH2",
      "path": "127",
      "value": "0x85"
    },
    "126": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        606,
        786
      ],
      "op": "CALLDATASIZE",
      "path": "127"
    },
    "127": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        606,
        786
      ],
      "op": "PUSH1",
      "path": "127",
      "value": "0x4"
    },
    "129": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        606,
        786
      ],
      "op": "PUSH2",
      "path": "127",
      "value": "0x1D1"
    },
    "132": {
      "fn": "MigratableMockV2.migrate",
      "jump": "i",
      "offset": [
        606,
        786
      ],
      "op": "JUMP",
      "path": "127"
    },
    "133": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        606,
        786
      ],
      "op": "JUMPDEST",
      "path": "127"
    },
    "134": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        606,
        786
      ],
      "op": "PUSH2",
      "path": "127",
      "value": "0xBD"
    },
    "137": {
      "fn": "MigratableMockV2.migrate",
      "jump": "i",
      "offset": [
        606,
        786
      ],
      "op": "JUMP",
      "path": "127"
    },
    "138": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        606,
        786
      ],
      "op": "JUMPDEST",
      "path": "127"
    },
    "139": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        606,
        786
      ],
      "op": "STOP",
      "path": "127"
    },
    "140": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        989,
        1148
      ],
      "op": "JUMPDEST",
      "path": "127"
    },
    "141": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        989,
        1148
      ],
      "op": "PUSH2",
      "path": "127",
      "value": "0x8A"
    },
    "144": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        989,
        1148
      ],
      "op": "PUSH2",
      "path": "127",
      "value": "0xE4"
    },
    "147": {
      "fn": "MigratableMockV3.migrate",
      "jump": "i",
      "offset": [
        989,
        1148
      ],
      "op": "JUMP",
      "path": "127"
    },
    "148": {
      "offset": [
        583,
        599
      ],
      "op": "JUMPDEST",
      "path": "127"
    },
    "149": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        583,
        599
      ],
      "op": "CALLVALUE",
      "path": "127"
    },
    "150": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        583,
        599
      ],
      "op": "DUP1",
      "path": "127"
    },
    "151": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        583,
        599
      ],
      "op": "ISZERO",
      "path": "127"
    },
    "152": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        583,
        599
      ],
      "op": "PUSH2",
      "path": "127",
      "value": "0xA0"
    },
    "155": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        583,
        599
      ],
      "op": "JUMPI",
      "path": "127"
    },
    "156": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        583,
        599
      ],
      "op": "PUSH1",
      "path": "127",
      "value": "0x0"
    },
    "158": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        583,
        599
      ],
      "op": "DUP1",
      "path": "127"
    },
    "159": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        583,
        599
      ],
      "op": "REVERT",
      "path": "127"
    },
    "160": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        583,
        599
      ],
      "op": "JUMPDEST",
      "path": "127"
    },
    "161": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        583,
        599
      ],
      "op": "POP",
      "path": "127"
    },
    "162": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        583,
        599
      ],
      "op": "PUSH2",
      "path": "127",
      "value": "0x65"
    },
    "165": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        583,
        599
      ],
      "op": "PUSH1",
      "path": "127",
      "value": "0x3"
    },
    "167": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        583,
        599
      ],
      "op": "SLOAD",
      "path": "127"
    },
    "168": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        583,
        599
      ],
      "op": "DUP2",
      "path": "127"
    },
    "169": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        583,
        599
      ],
      "op": "JUMP",
      "path": "127"
    },
    "170": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        296,
        384
      ],
      "op": "JUMPDEST",
      "path": "127"
    },
    "171": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        296,
        384
      ],
      "op": "PUSH2",
      "path": "127",
      "value": "0x8A"
    },
    "174": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        296,
        384
      ],
      "op": "PUSH2",
      "path": "127",
      "value": "0xB8"
    },
    "177": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        296,
        384
      ],
      "op": "CALLDATASIZE",
      "path": "127"
    },
    "178": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        296,
        384
      ],
      "op": "PUSH1",
      "path": "127",
      "value": "0x4"
    },
    "180": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        296,
        384
      ],
      "op": "PUSH2",
      "path": "127",
      "value": "0x1F3"
    },
    "183": {
      "fn": "MigratableMockV1.initialize",
      "jump": "i",
      "offset": [
        296,
        384
      ],
      "op": "JUMP",
      "path": "127"
    },
    "184": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        296,
        384
      ],
      "op": "JUMPDEST",
      "path": "127"
    },
    "185": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        296,
        384
      ],
      "op": "PUSH2",
      "path": "127",
      "value": "0x10E"
    },
    "188": {
      "fn": "MigratableMockV1.initialize",
      "jump": "i",
      "offset": [
        296,
        384
      ],
      "op": "JUMP",
      "path": "127"
    },
    "189": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        606,
        786
      ],
      "op": "JUMPDEST",
      "path": "127"
    },
    "190": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        694,
        705
      ],
      "op": "PUSH1",
      "path": "127",
      "statement": 0,
      "value": "0x2"
    },
    "192": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        694,
        705
      ],
      "op": "SLOAD",
      "path": "127"
    },
    "193": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        694,
        705
      ],
      "op": "PUSH1",
      "path": "127",
      "value": "0xFF"
    },
    "195": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        694,
        705
      ],
      "op": "AND",
      "path": "127"
    },
    "196": {
      "branch": 10,
      "fn": "MigratableMockV2.migrate",
      "offset": [
        693,
        705
      ],
      "op": "ISZERO",
      "path": "127"
    },
    "197": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        685,
        706
      ],
      "op": "PUSH2",
      "path": "127",
      "value": "0xCD"
    },
    "200": {
      "branch": 10,
      "fn": "MigratableMockV2.migrate",
      "offset": [
        685,
        706
      ],
      "op": "JUMPI",
      "path": "127"
    },
    "201": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        685,
        706
      ],
      "op": "PUSH1",
      "path": "127",
      "value": "0x0"
    },
    "203": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        685,
        706
      ],
      "op": "DUP1",
      "path": "127"
    },
    "204": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        685,
        706
      ],
      "op": "REVERT",
      "path": "127"
    },
    "205": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        685,
        706
      ],
      "op": "JUMPDEST",
      "path": "127"
    },
    "206": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        716,
        717
      ],
      "op": "PUSH1",
      "path": "127",
      "statement": 1,
      "value": "0x1"
    },
    "208": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        716,
        725
      ],
      "op": "SWAP2",
      "path": "127"
    },
    "209": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        716,
        725
      ],
      "op": "DUP3",
      "path": "127"
    },
    "210": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        716,
        725
      ],
      "op": "SSTORE",
      "path": "127"
    },
    "211": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        735,
        736
      ],
      "op": "PUSH1",
      "path": "127",
      "statement": 2,
      "value": "0x3"
    },
    "213": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        735,
        751
      ],
      "op": "SSTORE",
      "path": "127"
    },
    "214": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        761,
        772
      ],
      "op": "PUSH1",
      "path": "127",
      "statement": 3,
      "value": "0x2"
    },
    "216": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        761,
        779
      ],
      "op": "DUP1",
      "path": "127"
    },
    "217": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        761,
        779
      ],
      "op": "SLOAD",
      "path": "127"
    },
    "218": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "220": {
      "op": "NOT"
    },
    "221": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        761,
        779
      ],
      "op": "AND",
      "path": "127"
    },
    "222": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        761,
        779
      ],
      "op": "SWAP1",
      "path": "127"
    },
    "223": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        761,
        779
      ],
      "op": "SWAP2",
      "path": "127"
    },
    "224": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        761,
        779
      ],
      "op": "OR",
      "path": "127"
    },
    "225": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        761,
        779
      ],
      "op": "SWAP1",
      "path": "127"
    },
    "226": {
      "fn": "MigratableMockV2.migrate",
      "offset": [
        761,
        779
      ],
      "op": "SSTORE",
      "path": "127"
    },
    "227": {
      "fn": "MigratableMockV2.migrate",
      "jump": "o",
      "offset": [
        606,
        786
      ],
      "op": "JUMP",
      "path": "127"
    },
    "228": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        989,
        1148
      ],
      "op": "JUMPDEST",
      "path": "127"
    },
    "229": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        1042,
        1053
      ],
      "op": "PUSH1",
      "path": "127",
      "statement": 4,
      "value": "0x4"
    },
    "231": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        1042,
        1053
      ],
      "op": "SLOAD",
      "path": "127"
    },
    "232": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        1042,
        1053
      ],
      "op": "PUSH1",
      "path": "127",
      "value": "0xFF"
    },
    "234": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        1042,
        1053
      ],
      "op": "AND",
      "path": "127"
    },
    "235": {
      "branch": 11,
      "fn": "MigratableMockV3.migrate",
      "offset": [
        1041,
        1053
      ],
      "op": "ISZERO",
      "path": "127"
    },
    "236": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        1033,
        1054
      ],
      "op": "PUSH2",
      "path": "127",
      "value": "0xF4"
    },
    "239": {
      "branch": 11,
      "fn": "MigratableMockV3.migrate",
      "offset": [
        1033,
        1054
      ],
      "op": "JUMPI",
      "path": "127"
    },
    "240": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        1033,
        1054
      ],
      "op": "PUSH1",
      "path": "127",
      "value": "0x0"
    },
    "242": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        1033,
        1054
      ],
      "op": "DUP1",
      "path": "127"
    },
    "243": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        1033,
        1054
      ],
      "op": "REVERT",
      "path": "127"
    },
    "244": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        1033,
        1054
      ],
      "op": "JUMPDEST",
      "path": "127"
    },
    "245": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        1079,
        1080
      ],
      "op": "PUSH1",
      "path": "127",
      "value": "0x1"
    },
    "247": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        1079,
        1080
      ],
      "op": "DUP1",
      "path": "127"
    },
    "248": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        1079,
        1080
      ],
      "op": "SLOAD",
      "path": "127"
    },
    "249": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        1094,
        1095
      ],
      "op": "PUSH1",
      "path": "127",
      "statement": 5,
      "value": "0x3"
    },
    "251": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        1094,
        1095
      ],
      "op": "DUP1",
      "path": "127"
    },
    "252": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        1094,
        1095
      ],
      "op": "SLOAD",
      "path": "127"
    },
    "253": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        1090,
        1095
      ],
      "op": "DUP4",
      "path": "127"
    },
    "254": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        1090,
        1095
      ],
      "op": "SSTORE",
      "path": "127"
    },
    "255": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        1105,
        1113
      ],
      "op": "SSTORE",
      "path": "127",
      "statement": 6
    },
    "256": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        1123,
        1134
      ],
      "op": "PUSH1",
      "path": "127",
      "statement": 7,
      "value": "0x4"
    },
    "258": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        1123,
        1141
      ],
      "op": "DUP1",
      "path": "127"
    },
    "259": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        1123,
        1141
      ],
      "op": "SLOAD",
      "path": "127"
    },
    "260": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "262": {
      "op": "NOT"
    },
    "263": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        1123,
        1141
      ],
      "op": "AND",
      "path": "127"
    },
    "264": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        1123,
        1141
      ],
      "op": "SWAP1",
      "path": "127"
    },
    "265": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        1123,
        1141
      ],
      "op": "SWAP2",
      "path": "127"
    },
    "266": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        1123,
        1141
      ],
      "op": "OR",
      "path": "127"
    },
    "267": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        1123,
        1141
      ],
      "op": "SWAP1",
      "path": "127"
    },
    "268": {
      "fn": "MigratableMockV3.migrate",
      "offset": [
        1123,
        1141
      ],
      "op": "SSTORE",
      "path": "127"
    },
    "269": {
      "fn": "MigratableMockV3.migrate",
      "jump": "o",
      "offset": [
        989,
        1148
      ],
      "op": "JUMP",
      "path": "127"
    },
    "270": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        296,
        384
      ],
      "op": "JUMPDEST",
      "path": "127"
    },
    "271": {
      "offset": [
        2343,
        2356
      ],
      "op": "PUSH1",
      "path": "147",
      "value": "0x0"
    },
    "273": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        2343,
        2356
      ],
      "op": "SLOAD",
      "path": "147"
    },
    "274": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        2343,
        2356
      ],
      "op": "PUSH2",
      "path": "147",
      "value": "0x100"
    },
    "277": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        2343,
        2356
      ],
      "op": "SWAP1",
      "path": "147"
    },
    "278": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        2343,
        2356
      ],
      "op": "DIV",
      "path": "147"
    },
    "279": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        2343,
        2356
      ],
      "op": "PUSH1",
      "path": "147",
      "value": "0xFF"
    },
    "281": {
      "branch": 12,
      "fn": "MigratableMockV1.initialize",
      "offset": [
        2343,
        2356
      ],
      "op": "AND",
      "path": "147"
    },
    "282": {
      "offset": [
        2343,
        2391
      ],
      "op": "PUSH2",
      "path": "147",
      "value": "0x129"
    },
    "285": {
      "branch": 12,
      "fn": "MigratableMockV1.initialize",
      "offset": [
        2343,
        2391
      ],
      "op": "JUMPI",
      "path": "147"
    },
    "286": {
      "offset": [
        2379,
        2391
      ],
      "op": "PUSH1",
      "path": "147",
      "value": "0x0"
    },
    "288": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        2379,
        2391
      ],
      "op": "SLOAD",
      "path": "147"
    },
    "289": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        2379,
        2391
      ],
      "op": "PUSH1",
      "path": "147",
      "value": "0xFF"
    },
    "291": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        2379,
        2391
      ],
      "op": "AND",
      "path": "147"
    },
    "292": {
      "offset": [
        2378,
        2391
      ],
      "op": "ISZERO",
      "path": "147"
    },
    "293": {
      "offset": [
        2343,
        2391
      ],
      "op": "PUSH2",
      "path": "147",
      "value": "0x12D"
    },
    "296": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        2343,
        2391
      ],
      "op": "JUMP",
      "path": "147"
    },
    "297": {
      "branch": 13,
      "fn": "MigratableMockV1.initialize",
      "offset": [
        2343,
        2391
      ],
      "op": "JUMPDEST",
      "path": "147"
    },
    "298": {
      "fn": "Initializable._isConstructor",
      "offset": [
        3110,
        3114
      ],
      "op": "ADDRESS",
      "path": "147",
      "statement": 8
    },
    "299": {
      "op": "EXTCODESIZE"
    },
    "300": {
      "op": "ISZERO"
    },
    "301": {
      "offset": [
        2359,
        2375
      ],
      "op": "JUMPDEST",
      "path": "147"
    },
    "302": {
      "offset": [
        2335,
        2442
      ],
      "op": "PUSH2",
      "path": "147",
      "value": "0x194"
    },
    "305": {
      "branch": 13,
      "offset": [
        2335,
        2442
      ],
      "op": "JUMPI",
      "path": "147"
    },
    "306": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2335,
        2442
      ],
      "op": "PUSH1",
      "path": "147",
      "value": "0x40"
    },
    "308": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2335,
        2442
      ],
      "op": "MLOAD",
      "path": "147"
    },
    "309": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "313": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "315": {
      "op": "SHL"
    },
    "316": {
      "offset": [
        2335,
        2442
      ],
      "op": "DUP2",
      "path": "147"
    },
    "317": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2335,
        2442
      ],
      "op": "MSTORE",
      "path": "147"
    },
    "318": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "320": {
      "offset": [
        2335,
        2442
      ],
      "op": "PUSH1",
      "path": "147",
      "value": "0x4"
    },
    "322": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2335,
        2442
      ],
      "op": "DUP3",
      "path": "147"
    },
    "323": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2335,
        2442
      ],
      "op": "ADD",
      "path": "147"
    },
    "324": {
      "op": "MSTORE"
    },
    "325": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "327": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "329": {
      "op": "DUP3"
    },
    "330": {
      "op": "ADD"
    },
    "331": {
      "op": "MSTORE"
    },
    "332": {
      "op": "PUSH32",
      "value": "0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
    },
    "365": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "367": {
      "op": "DUP3"
    },
    "368": {
      "op": "ADD"
    },
    "369": {
      "op": "MSTORE"
    },
    "370": {
      "op": "PUSH14",
      "value": "0x191E481A5B9A5D1A585B1A5E9959"
    },
    "385": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "387": {
      "op": "SHL"
    },
    "388": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "390": {
      "op": "DUP3"
    },
    "391": {
      "op": "ADD"
    },
    "392": {
      "op": "MSTORE"
    },
    "393": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "395": {
      "op": "ADD"
    },
    "396": {
      "offset": [
        2335,
        2442
      ],
      "op": "PUSH1",
      "path": "147",
      "value": "0x40"
    },
    "398": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2335,
        2442
      ],
      "op": "MLOAD",
      "path": "147"
    },
    "399": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2335,
        2442
      ],
      "op": "DUP1",
      "path": "147"
    },
    "400": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2335,
        2442
      ],
      "op": "SWAP2",
      "path": "147"
    },
    "401": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2335,
        2442
      ],
      "op": "SUB",
      "path": "147"
    },
    "402": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2335,
        2442
      ],
      "op": "SWAP1",
      "path": "147"
    },
    "403": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2335,
        2442
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "147"
    },
    "404": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2335,
        2442
      ],
      "op": "JUMPDEST",
      "path": "147"
    },
    "405": {
      "offset": [
        2453,
        2472
      ],
      "op": "PUSH1",
      "path": "147",
      "value": "0x0"
    },
    "407": {
      "offset": [
        2476,
        2489
      ],
      "op": "SLOAD",
      "path": "147"
    },
    "408": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2476,
        2489
      ],
      "op": "PUSH2",
      "path": "147",
      "value": "0x100"
    },
    "411": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2476,
        2489
      ],
      "op": "SWAP1",
      "path": "147"
    },
    "412": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2476,
        2489
      ],
      "op": "DIV",
      "path": "147"
    },
    "413": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2476,
        2489
      ],
      "op": "PUSH1",
      "path": "147",
      "value": "0xFF"
    },
    "415": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2476,
        2489
      ],
      "op": "AND",
      "path": "147"
    },
    "416": {
      "offset": [
        2475,
        2489
      ],
      "op": "ISZERO",
      "path": "147"
    },
    "417": {
      "offset": [
        2499,
        2597
      ],
      "op": "DUP1",
      "path": "147"
    },
    "418": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2499,
        2597
      ],
      "op": "ISZERO",
      "path": "147"
    },
    "419": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2499,
        2597
      ],
      "op": "PUSH2",
      "path": "147",
      "value": "0x1B6"
    },
    "422": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2499,
        2597
      ],
      "op": "JUMPI",
      "path": "147"
    },
    "423": {
      "offset": [
        2533,
        2546
      ],
      "op": "PUSH1",
      "path": "147",
      "value": "0x0"
    },
    "425": {
      "offset": [
        2533,
        2553
      ],
      "op": "DUP1",
      "path": "147"
    },
    "426": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2533,
        2553
      ],
      "op": "SLOAD",
      "path": "147"
    },
    "427": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "430": {
      "op": "NOT"
    },
    "431": {
      "offset": [
        2567,
        2586
      ],
      "op": "AND",
      "path": "147"
    },
    "432": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2567,
        2586
      ],
      "op": "PUSH2",
      "path": "147",
      "value": "0x101"
    },
    "435": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2567,
        2586
      ],
      "op": "OR",
      "path": "147"
    },
    "436": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2567,
        2586
      ],
      "op": "SWAP1",
      "path": "147"
    },
    "437": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2567,
        2586
      ],
      "op": "SSTORE",
      "path": "147"
    },
    "438": {
      "offset": [
        2499,
        2597
      ],
      "op": "JUMPDEST",
      "path": "147"
    },
    "439": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        368,
        369
      ],
      "op": "PUSH1",
      "path": "127",
      "statement": 9,
      "value": "0x1"
    },
    "441": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        368,
        377
      ],
      "op": "DUP3",
      "path": "127"
    },
    "442": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        368,
        377
      ],
      "op": "SWAP1",
      "path": "127"
    },
    "443": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        368,
        377
      ],
      "op": "SSTORE",
      "path": "127"
    },
    "444": {
      "offset": [
        2619,
        2685
      ],
      "op": "DUP1",
      "path": "147"
    },
    "445": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        2619,
        2685
      ],
      "op": "ISZERO",
      "path": "147"
    },
    "446": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        2619,
        2685
      ],
      "op": "PUSH2",
      "path": "147",
      "value": "0x1CD"
    },
    "449": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        2619,
        2685
      ],
      "op": "JUMPI",
      "path": "147"
    },
    "450": {
      "offset": [
        2669,
        2674
      ],
      "op": "PUSH1",
      "path": "147",
      "value": "0x0"
    },
    "452": {
      "offset": [
        2653,
        2674
      ],
      "op": "DUP1",
      "path": "147"
    },
    "453": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        2653,
        2674
      ],
      "op": "SLOAD",
      "path": "147"
    },
    "454": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "457": {
      "op": "NOT"
    },
    "458": {
      "offset": [
        2653,
        2674
      ],
      "op": "AND",
      "path": "147"
    },
    "459": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        2653,
        2674
      ],
      "op": "SWAP1",
      "path": "147"
    },
    "460": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        2653,
        2674
      ],
      "op": "SSTORE",
      "path": "147"
    },
    "461": {
      "offset": [
        2619,
        2685
      ],
      "op": "JUMPDEST",
      "path": "147"
    },
    "462": {
      "offset": [
        2054,
        2691
      ],
      "op": "POP",
      "path": "147"
    },
    "463": {
      "fn": "MigratableMockV1.initialize",
      "offset": [
        296,
        384
      ],
      "op": "POP",
      "path": "127"
    },
    "464": {
      "fn": "MigratableMockV1.initialize",
      "jump": "o",
      "offset": [
        296,
        384
      ],
      "op": "JUMP",
      "path": "127"
    },
    "465": {
      "op": "JUMPDEST"
    },
    "466": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "468": {
      "op": "DUP1"
    },
    "469": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "471": {
      "op": "DUP4"
    },
    "472": {
      "op": "DUP6"
    },
    "473": {
      "op": "SUB"
    },
    "474": {
      "op": "SLT"
    },
    "475": {
      "op": "ISZERO"
    },
    "476": {
      "op": "PUSH2",
      "value": "0x1E4"
    },
    "479": {
      "op": "JUMPI"
    },
    "480": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "482": {
      "op": "DUP1"
    },
    "483": {
      "op": "REVERT"
    },
    "484": {
      "op": "JUMPDEST"
    },
    "485": {
      "op": "POP"
    },
    "486": {
      "op": "POP"
    },
    "487": {
      "op": "DUP1"
    },
    "488": {
      "op": "CALLDATALOAD"
    },
    "489": {
      "op": "SWAP3"
    },
    "490": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "492": {
      "op": "SWAP1"
    },
    "493": {
      "op": "SWAP2"
    },
    "494": {
      "op": "ADD"
    },
    "495": {
      "op": "CALLDATALOAD"
    },
    "496": {
      "op": "SWAP2"
    },
    "497": {
      "op": "POP"
    },
    "498": {
      "jump": "o",
      "op": "JUMP"
    },
    "499": {
      "op": "JUMPDEST"
    },
    "500": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "502": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "504": {
      "op": "DUP3"
    },
    "505": {
      "op": "DUP5"
    },
    "506": {
      "op": "SUB"
    },
    "507": {
      "op": "SLT"
    },
    "508": {
      "op": "ISZERO"
    },
    "509": {
      "op": "PUSH2",
      "value": "0x205"
    },
    "512": {
      "op": "JUMPI"
    },
    "513": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "515": {
      "op": "DUP1"
    },
    "516": {
      "op": "REVERT"
    },
    "517": {
      "op": "JUMPDEST"
    },
    "518": {
      "op": "POP"
    },
    "519": {
      "op": "CALLDATALOAD"
    },
    "520": {
      "op": "SWAP2"
    },
    "521": {
      "op": "SWAP1"
    },
    "522": {
      "op": "POP"
    },
    "523": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "cddf6f8075a4690819e13422616a1f61eeb64b20",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @title MigratableMockV1\n * @dev This contract is a mock to test initializable functionality through migrations\n */\ncontract MigratableMockV1 is Initializable {\n    uint256 public x;\n\n    function initialize(uint256 value) public payable initializer {\n        x = value;\n    }\n}\n\n/**\n * @title MigratableMockV2\n * @dev This contract is a mock to test migratable functionality with params\n */\ncontract MigratableMockV2 is MigratableMockV1 {\n    bool internal _migratedV2;\n    uint256 public y;\n\n    function migrate(uint256 value, uint256 anotherValue) public payable {\n        require(!_migratedV2);\n        x = value;\n        y = anotherValue;\n        _migratedV2 = true;\n    }\n}\n\n/**\n * @title MigratableMockV3\n * @dev This contract is a mock to test migratable functionality without params\n */\ncontract MigratableMockV3 is MigratableMockV2 {\n    bool internal _migratedV3;\n\n    function migrate() public payable {\n        require(!_migratedV3);\n        uint256 oldX = x;\n        x = y;\n        y = oldX;\n        _migratedV3 = true;\n    }\n}\n",
  "sourceMap": "905:245:127:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/openzeppelin-solidity/contracts/mocks/SingleInheritanceInitializableMocks.sol",
  "type": "contract"
}