{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "uri_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "152": "contracts/openzeppelin-solidity/contracts/token/ERC1155/ERC1155.sol",
    "153": "contracts/openzeppelin-solidity/contracts/token/ERC1155/IERC1155.sol",
    "154": "contracts/openzeppelin-solidity/contracts/token/ERC1155/IERC1155Receiver.sol",
    "158": "contracts/openzeppelin-solidity/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
    "198": "contracts/openzeppelin-solidity/contracts/utils/Address.sol",
    "202": "contracts/openzeppelin-solidity/contracts/utils/Context.sol",
    "216": "contracts/openzeppelin-solidity/contracts/utils/introspection/ERC165.sol",
    "220": "contracts/openzeppelin-solidity/contracts/utils/introspection/IERC165.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin-solidity/contracts/token/ERC1155/ERC1155.sol",
    "exportedSymbols": {
      "Address": [
        29802
      ],
      "Context": [
        30190
      ],
      "ERC1155": [
        22507
      ],
      "ERC165": [
        31974
      ],
      "IERC1155": [
        22629
      ],
      "IERC1155MetadataURI": [
        22935
      ],
      "IERC1155Receiver": [
        22670
      ],
      "IERC165": [
        32298
      ]
    },
    "id": 22508,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 21413,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "94:23:152"
      },
      {
        "absolutePath": "contracts/openzeppelin-solidity/contracts/token/ERC1155/IERC1155.sol",
        "file": "./IERC1155.sol",
        "id": 21414,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 22508,
        "sourceUnit": 22630,
        "src": "119:24:152",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-solidity/contracts/token/ERC1155/IERC1155Receiver.sol",
        "file": "./IERC1155Receiver.sol",
        "id": 21415,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 22508,
        "sourceUnit": 22671,
        "src": "144:32:152",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-solidity/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
        "file": "./extensions/IERC1155MetadataURI.sol",
        "id": 21416,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 22508,
        "sourceUnit": 22936,
        "src": "177:46:152",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-solidity/contracts/utils/Address.sol",
        "file": "../../utils/Address.sol",
        "id": 21417,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 22508,
        "sourceUnit": 29803,
        "src": "224:33:152",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-solidity/contracts/utils/Context.sol",
        "file": "../../utils/Context.sol",
        "id": 21418,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 22508,
        "sourceUnit": 30191,
        "src": "258:33:152",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-solidity/contracts/utils/introspection/ERC165.sol",
        "file": "../../utils/introspection/ERC165.sol",
        "id": 21419,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 22508,
        "sourceUnit": 31975,
        "src": "292:46:152",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 21421,
              "name": "Context",
              "nameLocations": [
                "575:7:152"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 30190,
              "src": "575:7:152"
            },
            "id": 21422,
            "nodeType": "InheritanceSpecifier",
            "src": "575:7:152"
          },
          {
            "baseName": {
              "id": 21423,
              "name": "ERC165",
              "nameLocations": [
                "584:6:152"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31974,
              "src": "584:6:152"
            },
            "id": 21424,
            "nodeType": "InheritanceSpecifier",
            "src": "584:6:152"
          },
          {
            "baseName": {
              "id": 21425,
              "name": "IERC1155",
              "nameLocations": [
                "592:8:152"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22629,
              "src": "592:8:152"
            },
            "id": 21426,
            "nodeType": "InheritanceSpecifier",
            "src": "592:8:152"
          },
          {
            "baseName": {
              "id": 21427,
              "name": "IERC1155MetadataURI",
              "nameLocations": [
                "602:19:152"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22935,
              "src": "602:19:152"
            },
            "id": 21428,
            "nodeType": "InheritanceSpecifier",
            "src": "602:19:152"
          }
        ],
        "canonicalName": "ERC1155",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 21420,
          "nodeType": "StructuredDocumentation",
          "src": "340:214:152",
          "text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155\n _Available since v3.1._"
        },
        "fullyImplemented": true,
        "id": 22507,
        "linearizedBaseContracts": [
          22507,
          22935,
          22629,
          31974,
          32298,
          30190
        ],
        "name": "ERC1155",
        "nameLocation": "564:7:152",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 21431,
            "libraryName": {
              "id": 21429,
              "name": "Address",
              "nameLocations": [
                "634:7:152"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29802,
              "src": "634:7:152"
            },
            "nodeType": "UsingForDirective",
            "src": "628:26:152",
            "typeName": {
              "id": 21430,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "646:7:152",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "constant": false,
            "id": 21437,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "765:9:152",
            "nodeType": "VariableDeclaration",
            "scope": 22507,
            "src": "709:65:152",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(uint256 => mapping(address => uint256))"
            },
            "typeName": {
              "id": 21436,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 21432,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "717:7:152",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "709:47:152",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(uint256 => mapping(address => uint256))"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 21435,
                "keyName": "",
                "keyNameLocation": "-1:-1:-1",
                "keyType": {
                  "id": 21433,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "736:7:152",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "728:27:152",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueName": "",
                "valueNameLocation": "-1:-1:-1",
                "valueType": {
                  "id": 21434,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "747:7:152",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 21443,
            "mutability": "mutable",
            "name": "_operatorApprovals",
            "nameLocation": "884:18:152",
            "nodeType": "VariableDeclaration",
            "scope": 22507,
            "src": "831:71:152",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 21442,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 21438,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "839:7:152",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "831:44:152",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 21441,
                "keyName": "",
                "keyNameLocation": "-1:-1:-1",
                "keyType": {
                  "id": 21439,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "858:7:152",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "850:24:152",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueName": "",
                "valueNameLocation": "-1:-1:-1",
                "valueType": {
                  "id": 21440,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "869:4:152",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 21445,
            "mutability": "mutable",
            "name": "_uri",
            "nameLocation": "1038:4:152",
            "nodeType": "VariableDeclaration",
            "scope": 22507,
            "src": "1023:19:152",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 21444,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1023:6:152",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 21455,
              "nodeType": "Block",
              "src": "1124:30:152",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21452,
                        "name": "uri_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21448,
                        "src": "1142:4:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 21451,
                      "name": "_setURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21935,
                      "src": "1134:7:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 21453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1134:13:152",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21454,
                  "nodeType": "ExpressionStatement",
                  "src": "1134:13:152"
                }
              ]
            },
            "documentation": {
              "id": 21446,
              "nodeType": "StructuredDocumentation",
              "src": "1049:38:152",
              "text": " @dev See {_setURI}."
            },
            "id": 21456,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 21449,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21448,
                  "mutability": "mutable",
                  "name": "uri_",
                  "nameLocation": "1118:4:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 21456,
                  "src": "1104:18:152",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 21447,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1104:6:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1103:20:152"
            },
            "returnParameters": {
              "id": 21450,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1124:0:152"
            },
            "scope": 22507,
            "src": "1092:62:152",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              31973,
              32297
            ],
            "body": {
              "id": 21486,
              "nodeType": "Block",
              "src": "1329:197:152",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 21484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 21479,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 21472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 21467,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21459,
                          "src": "1358:11:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 21469,
                                "name": "IERC1155",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22629,
                                "src": "1378:8:152",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155_$22629_$",
                                  "typeString": "type(contract IERC1155)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155_$22629_$",
                                  "typeString": "type(contract IERC1155)"
                                }
                              ],
                              "id": 21468,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1373:4:152",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 21470,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1373:14:152",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$22629",
                              "typeString": "type(contract IERC1155)"
                            }
                          },
                          "id": 21471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1388:11:152",
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "1373:26:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "1358:41:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 21478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 21473,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21459,
                          "src": "1415:11:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 21475,
                                "name": "IERC1155MetadataURI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22935,
                                "src": "1435:19:152",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$22935_$",
                                  "typeString": "type(contract IERC1155MetadataURI)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$22935_$",
                                  "typeString": "type(contract IERC1155MetadataURI)"
                                }
                              ],
                              "id": 21474,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1430:4:152",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 21476,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1430:25:152",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURI_$22935",
                              "typeString": "type(contract IERC1155MetadataURI)"
                            }
                          },
                          "id": 21477,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1456:11:152",
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "1430:37:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "1415:52:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "1358:109:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 21482,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21459,
                          "src": "1507:11:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 21480,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "1483:5:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_ERC1155_$22507_$",
                            "typeString": "type(contract super ERC1155)"
                          }
                        },
                        "id": 21481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1489:17:152",
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 31973,
                        "src": "1483:23:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 21483,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1483:36:152",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1358:161:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 21466,
                  "id": 21485,
                  "nodeType": "Return",
                  "src": "1339:180:152"
                }
              ]
            },
            "documentation": {
              "id": 21457,
              "nodeType": "StructuredDocumentation",
              "src": "1160:56:152",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 21487,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "1230:17:152",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 21463,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 21461,
                  "name": "ERC165",
                  "nameLocations": [
                    "1297:6:152"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31974,
                  "src": "1297:6:152"
                },
                {
                  "id": 21462,
                  "name": "IERC165",
                  "nameLocations": [
                    "1305:7:152"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32298,
                  "src": "1305:7:152"
                }
              ],
              "src": "1288:25:152"
            },
            "parameters": {
              "id": 21460,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21459,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "1255:11:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 21487,
                  "src": "1248:18:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 21458,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1248:6:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1247:20:152"
            },
            "returnParameters": {
              "id": 21466,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21465,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 21487,
                  "src": "1323:4:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 21464,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1323:4:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1322:6:152"
            },
            "scope": 22507,
            "src": "1221:305:152",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              22934
            ],
            "body": {
              "id": 21498,
              "nodeType": "Block",
              "src": "2000:28:152",
              "statements": [
                {
                  "expression": {
                    "id": 21496,
                    "name": "_uri",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 21445,
                    "src": "2017:4:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 21495,
                  "id": 21497,
                  "nodeType": "Return",
                  "src": "2010:11:152"
                }
              ]
            },
            "documentation": {
              "id": 21488,
              "nodeType": "StructuredDocumentation",
              "src": "1532:388:152",
              "text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
            },
            "functionSelector": "0e89341c",
            "id": 21499,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "uri",
            "nameLocation": "1934:3:152",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 21492,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1967:8:152"
            },
            "parameters": {
              "id": 21491,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21490,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 21499,
                  "src": "1938:7:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21489,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1938:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1937:9:152"
            },
            "returnParameters": {
              "id": 21495,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21494,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 21499,
                  "src": "1985:13:152",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 21493,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1985:6:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1984:15:152"
            },
            "scope": 22507,
            "src": "1925:103:152",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              22567
            ],
            "body": {
              "id": 21526,
              "nodeType": "Block",
              "src": "2265:133:152",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 21516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 21511,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21502,
                          "src": "2283:7:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 21514,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2302:1:152",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 21513,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2294:7:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 21512,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2294:7:152",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 21515,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2294:10:152",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2283:21:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
                        "id": 21517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2306:45:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
                          "typeString": "literal_string \"ERC1155: balance query for the zero address\""
                        },
                        "value": "ERC1155: balance query for the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
                          "typeString": "literal_string \"ERC1155: balance query for the zero address\""
                        }
                      ],
                      "id": 21510,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2275:7:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 21518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2275:77:152",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21519,
                  "nodeType": "ExpressionStatement",
                  "src": "2275:77:152"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 21520,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21437,
                        "src": "2369:9:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(uint256 => mapping(address => uint256))"
                        }
                      },
                      "id": 21522,
                      "indexExpression": {
                        "id": 21521,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21504,
                        "src": "2379:2:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2369:13:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 21524,
                    "indexExpression": {
                      "id": 21523,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21502,
                      "src": "2383:7:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2369:22:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 21509,
                  "id": 21525,
                  "nodeType": "Return",
                  "src": "2362:29:152"
                }
              ]
            },
            "documentation": {
              "id": 21500,
              "nodeType": "StructuredDocumentation",
              "src": "2034:131:152",
              "text": " @dev See {IERC1155-balanceOf}.\n Requirements:\n - `account` cannot be the zero address."
            },
            "functionSelector": "00fdd58e",
            "id": 21527,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "2179:9:152",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 21506,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2238:8:152"
            },
            "parameters": {
              "id": 21505,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21502,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2197:7:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 21527,
                  "src": "2189:15:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21501,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2189:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21504,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "2214:2:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 21527,
                  "src": "2206:10:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21503,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2206:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2188:29:152"
            },
            "returnParameters": {
              "id": 21509,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21508,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 21527,
                  "src": "2256:7:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21507,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2256:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2255:9:152"
            },
            "scope": 22507,
            "src": "2170:228:152",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              22580
            ],
            "body": {
              "id": 21590,
              "nodeType": "Block",
              "src": "2728:335:152",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 21546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 21542,
                            "name": "accounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21531,
                            "src": "2746:8:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 21543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2755:6:152",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2746:15:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 21544,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21534,
                            "src": "2765:3:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 21545,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2769:6:152",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2765:10:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2746:29:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368",
                        "id": 21547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2777:43:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
                          "typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
                        },
                        "value": "ERC1155: accounts and ids length mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
                          "typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
                        }
                      ],
                      "id": 21541,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2738:7:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 21548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2738:83:152",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21549,
                  "nodeType": "ExpressionStatement",
                  "src": "2738:83:152"
                },
                {
                  "assignments": [
                    21554
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 21554,
                      "mutability": "mutable",
                      "name": "batchBalances",
                      "nameLocation": "2849:13:152",
                      "nodeType": "VariableDeclaration",
                      "scope": 21590,
                      "src": "2832:30:152",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 21552,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2832:7:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 21553,
                        "nodeType": "ArrayTypeName",
                        "src": "2832:9:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 21561,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 21558,
                          "name": "accounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21531,
                          "src": "2879:8:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 21559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2888:6:152",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "2879:15:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 21557,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2865:13:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 21555,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2869:7:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 21556,
                        "nodeType": "ArrayTypeName",
                        "src": "2869:9:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 21560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2865:30:152",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2832:63:152"
                },
                {
                  "body": {
                    "id": 21586,
                    "nodeType": "Block",
                    "src": "2952:74:152",
                    "statements": [
                      {
                        "expression": {
                          "id": 21584,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 21573,
                              "name": "batchBalances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21554,
                              "src": "2966:13:152",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 21575,
                            "indexExpression": {
                              "id": 21574,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21563,
                              "src": "2980:1:152",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2966:16:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 21577,
                                  "name": "accounts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21531,
                                  "src": "2995:8:152",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 21579,
                                "indexExpression": {
                                  "id": 21578,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21563,
                                  "src": "3004:1:152",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2995:11:152",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "baseExpression": {
                                  "id": 21580,
                                  "name": "ids",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21534,
                                  "src": "3008:3:152",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 21582,
                                "indexExpression": {
                                  "id": 21581,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21563,
                                  "src": "3012:1:152",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3008:6:152",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 21576,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21527,
                              "src": "2985:9:152",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (address,uint256) view returns (uint256)"
                              }
                            },
                            "id": 21583,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2985:30:152",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2966:49:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 21585,
                        "nodeType": "ExpressionStatement",
                        "src": "2966:49:152"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 21569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 21566,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21563,
                      "src": "2926:1:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 21567,
                        "name": "accounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21531,
                        "src": "2930:8:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 21568,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2939:6:152",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2930:15:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2926:19:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21587,
                  "initializationExpression": {
                    "assignments": [
                      21563
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 21563,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2919:1:152",
                        "nodeType": "VariableDeclaration",
                        "scope": 21587,
                        "src": "2911:9:152",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 21562,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2911:7:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 21565,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 21564,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2923:1:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2911:13:152"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 21571,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "2947:3:152",
                      "subExpression": {
                        "id": 21570,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21563,
                        "src": "2949:1:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 21572,
                    "nodeType": "ExpressionStatement",
                    "src": "2947:3:152"
                  },
                  "nodeType": "ForStatement",
                  "src": "2906:120:152"
                },
                {
                  "expression": {
                    "id": 21588,
                    "name": "batchBalances",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 21554,
                    "src": "3043:13:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 21540,
                  "id": 21589,
                  "nodeType": "Return",
                  "src": "3036:20:152"
                }
              ]
            },
            "documentation": {
              "id": 21528,
              "nodeType": "StructuredDocumentation",
              "src": "2404:146:152",
              "text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
            },
            "functionSelector": "4e1273f4",
            "id": 21591,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOfBatch",
            "nameLocation": "2564:14:152",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 21536,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2680:8:152"
            },
            "parameters": {
              "id": 21535,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21531,
                  "mutability": "mutable",
                  "name": "accounts",
                  "nameLocation": "2596:8:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 21591,
                  "src": "2579:25:152",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 21529,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2579:7:152",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 21530,
                    "nodeType": "ArrayTypeName",
                    "src": "2579:9:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21534,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "2623:3:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 21591,
                  "src": "2606:20:152",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 21532,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2606:7:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 21533,
                    "nodeType": "ArrayTypeName",
                    "src": "2606:9:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2578:49:152"
            },
            "returnParameters": {
              "id": 21540,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21539,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 21591,
                  "src": "2706:16:152",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 21537,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2706:7:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 21538,
                    "nodeType": "ArrayTypeName",
                    "src": "2706:9:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2705:18:152"
            },
            "scope": 22507,
            "src": "2555:508:152",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              22588
            ],
            "body": {
              "id": 21607,
              "nodeType": "Block",
              "src": "3215:69:152",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 21601,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30180,
                          "src": "3244:10:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 21602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3244:12:152",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 21603,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21594,
                        "src": "3258:8:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 21604,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21596,
                        "src": "3268:8:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 21600,
                      "name": "_setApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22331,
                      "src": "3225:18:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 21605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3225:52:152",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21606,
                  "nodeType": "ExpressionStatement",
                  "src": "3225:52:152"
                }
              ]
            },
            "documentation": {
              "id": 21592,
              "nodeType": "StructuredDocumentation",
              "src": "3069:57:152",
              "text": " @dev See {IERC1155-setApprovalForAll}."
            },
            "functionSelector": "a22cb465",
            "id": 21608,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nameLocation": "3140:17:152",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 21598,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3206:8:152"
            },
            "parameters": {
              "id": 21597,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21594,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "3166:8:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 21608,
                  "src": "3158:16:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21593,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3158:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21596,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "3181:8:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 21608,
                  "src": "3176:13:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 21595,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3176:4:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3157:33:152"
            },
            "returnParameters": {
              "id": 21599,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3215:0:152"
            },
            "scope": 22507,
            "src": "3131:153:152",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              22598
            ],
            "body": {
              "id": 21625,
              "nodeType": "Block",
              "src": "3456:61:152",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 21619,
                        "name": "_operatorApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21443,
                        "src": "3473:18:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(address => mapping(address => bool))"
                        }
                      },
                      "id": 21621,
                      "indexExpression": {
                        "id": 21620,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21611,
                        "src": "3492:7:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3473:27:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 21623,
                    "indexExpression": {
                      "id": 21622,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21613,
                      "src": "3501:8:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3473:37:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 21618,
                  "id": 21624,
                  "nodeType": "Return",
                  "src": "3466:44:152"
                }
              ]
            },
            "documentation": {
              "id": 21609,
              "nodeType": "StructuredDocumentation",
              "src": "3290:56:152",
              "text": " @dev See {IERC1155-isApprovedForAll}."
            },
            "functionSelector": "e985e9c5",
            "id": 21626,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nameLocation": "3360:16:152",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 21615,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3432:8:152"
            },
            "parameters": {
              "id": 21614,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21611,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3385:7:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 21626,
                  "src": "3377:15:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21610,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3377:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21613,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "3402:8:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 21626,
                  "src": "3394:16:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21612,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3394:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3376:35:152"
            },
            "returnParameters": {
              "id": 21618,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21617,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 21626,
                  "src": "3450:4:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 21616,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3450:4:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3449:6:152"
            },
            "scope": 22507,
            "src": "3351:166:152",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              22612
            ],
            "body": {
              "id": 21663,
              "nodeType": "Block",
              "src": "3753:220:152",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 21651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 21645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 21642,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21629,
                            "src": "3784:4:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 21643,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30180,
                              "src": "3792:10:152",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 21644,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3792:12:152",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3784:20:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 21647,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21629,
                              "src": "3825:4:152",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 21648,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30180,
                                "src": "3831:10:152",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 21649,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3831:12:152",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 21646,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21626,
                            "src": "3808:16:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 21650,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3808:36:152",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3784:60:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 21652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3858:43:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
                          "typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
                        },
                        "value": "ERC1155: caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
                          "typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
                        }
                      ],
                      "id": 21641,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3763:7:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 21653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3763:148:152",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21654,
                  "nodeType": "ExpressionStatement",
                  "src": "3763:148:152"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21656,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21629,
                        "src": "3939:4:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 21657,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21631,
                        "src": "3945:2:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 21658,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21633,
                        "src": "3949:2:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 21659,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21635,
                        "src": "3953:6:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 21660,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21637,
                        "src": "3961:4:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 21655,
                      "name": "_safeTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21798,
                      "src": "3921:17:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 21661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3921:45:152",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21662,
                  "nodeType": "ExpressionStatement",
                  "src": "3921:45:152"
                }
              ]
            },
            "documentation": {
              "id": 21627,
              "nodeType": "StructuredDocumentation",
              "src": "3523:56:152",
              "text": " @dev See {IERC1155-safeTransferFrom}."
            },
            "functionSelector": "f242432a",
            "id": 21664,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "3593:16:152",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 21639,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3744:8:152"
            },
            "parameters": {
              "id": 21638,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21629,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "3627:4:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 21664,
                  "src": "3619:12:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21628,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3619:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21631,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3649:2:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 21664,
                  "src": "3641:10:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21630,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3641:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21633,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "3669:2:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 21664,
                  "src": "3661:10:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21632,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3661:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21635,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3689:6:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 21664,
                  "src": "3681:14:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21634,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3681:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21637,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "3718:4:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 21664,
                  "src": "3705:17:152",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 21636,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3705:5:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3609:119:152"
            },
            "returnParameters": {
              "id": 21640,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3753:0:152"
            },
            "scope": 22507,
            "src": "3584:389:152",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              22628
            ],
            "body": {
              "id": 21703,
              "nodeType": "Block",
              "src": "4239:236:152",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 21691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 21685,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 21682,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21667,
                            "src": "4270:4:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 21683,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30180,
                              "src": "4278:10:152",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 21684,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4278:12:152",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4270:20:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 21687,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21667,
                              "src": "4311:4:152",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 21688,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30180,
                                "src": "4317:10:152",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 21689,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4317:12:152",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 21686,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21626,
                            "src": "4294:16:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 21690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4294:36:152",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4270:60:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 21692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4344:52:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
                          "typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC1155: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
                          "typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 21681,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4249:7:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 21693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4249:157:152",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21694,
                  "nodeType": "ExpressionStatement",
                  "src": "4249:157:152"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21696,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21667,
                        "src": "4439:4:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 21697,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21669,
                        "src": "4445:2:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 21698,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21672,
                        "src": "4449:3:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 21699,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21675,
                        "src": "4454:7:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 21700,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21677,
                        "src": "4463:4:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 21695,
                      "name": "_safeBatchTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21924,
                      "src": "4416:22:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 21701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4416:52:152",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21702,
                  "nodeType": "ExpressionStatement",
                  "src": "4416:52:152"
                }
              ]
            },
            "documentation": {
              "id": 21665,
              "nodeType": "StructuredDocumentation",
              "src": "3979:61:152",
              "text": " @dev See {IERC1155-safeBatchTransferFrom}."
            },
            "functionSelector": "2eb2c2d6",
            "id": 21704,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeBatchTransferFrom",
            "nameLocation": "4054:21:152",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 21679,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4230:8:152"
            },
            "parameters": {
              "id": 21678,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21667,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "4093:4:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 21704,
                  "src": "4085:12:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21666,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4085:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21669,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4115:2:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 21704,
                  "src": "4107:10:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21668,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4107:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21672,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "4144:3:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 21704,
                  "src": "4127:20:152",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 21670,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4127:7:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 21671,
                    "nodeType": "ArrayTypeName",
                    "src": "4127:9:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21675,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "4174:7:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 21704,
                  "src": "4157:24:152",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 21673,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4157:7:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 21674,
                    "nodeType": "ArrayTypeName",
                    "src": "4157:9:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21677,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "4204:4:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 21704,
                  "src": "4191:17:152",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 21676,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4191:5:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4075:139:152"
            },
            "returnParameters": {
              "id": 21680,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4239:0:152"
            },
            "scope": 22507,
            "src": "4045:430:152",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 21797,
              "nodeType": "Block",
              "src": "5088:634:152",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 21724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 21719,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21709,
                          "src": "5106:2:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 21722,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5120:1:152",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 21721,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5112:7:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 21720,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5112:7:152",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 21723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5112:10:152",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5106:16:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 21725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5124:39:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
                          "typeString": "literal_string \"ERC1155: transfer to the zero address\""
                        },
                        "value": "ERC1155: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
                          "typeString": "literal_string \"ERC1155: transfer to the zero address\""
                        }
                      ],
                      "id": 21718,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5098:7:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 21726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5098:66:152",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21727,
                  "nodeType": "ExpressionStatement",
                  "src": "5098:66:152"
                },
                {
                  "assignments": [
                    21729
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 21729,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "5183:8:152",
                      "nodeType": "VariableDeclaration",
                      "scope": 21797,
                      "src": "5175:16:152",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 21728,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5175:7:152",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 21732,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 21730,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30180,
                      "src": "5194:10:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 21731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5194:12:152",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5175:31:152"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21734,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21729,
                        "src": "5238:8:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 21735,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21707,
                        "src": "5248:4:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 21736,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21709,
                        "src": "5254:2:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 21738,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21711,
                            "src": "5276:2:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 21737,
                          "name": "_asSingletonArray",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22506,
                          "src": "5258:17:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (uint256[] memory)"
                          }
                        },
                        "id": 21739,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5258:21:152",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 21741,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21713,
                            "src": "5299:6:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 21740,
                          "name": "_asSingletonArray",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22506,
                          "src": "5281:17:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (uint256[] memory)"
                          }
                        },
                        "id": 21742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5281:25:152",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 21743,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21715,
                        "src": "5308:4:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 21733,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22350,
                      "src": "5217:20:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 21744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5217:96:152",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21745,
                  "nodeType": "ExpressionStatement",
                  "src": "5217:96:152"
                },
                {
                  "assignments": [
                    21747
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 21747,
                      "mutability": "mutable",
                      "name": "fromBalance",
                      "nameLocation": "5332:11:152",
                      "nodeType": "VariableDeclaration",
                      "scope": 21797,
                      "src": "5324:19:152",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 21746,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5324:7:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 21753,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 21748,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21437,
                        "src": "5346:9:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(uint256 => mapping(address => uint256))"
                        }
                      },
                      "id": 21750,
                      "indexExpression": {
                        "id": 21749,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21711,
                        "src": "5356:2:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5346:13:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 21752,
                    "indexExpression": {
                      "id": 21751,
                      "name": "from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21707,
                      "src": "5360:4:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5346:19:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5324:41:152"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 21757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 21755,
                          "name": "fromBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21747,
                          "src": "5383:11:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 21756,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21713,
                          "src": "5398:6:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5383:21:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
                        "id": 21758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5406:44:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
                          "typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
                        },
                        "value": "ERC1155: insufficient balance for transfer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
                          "typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
                        }
                      ],
                      "id": 21754,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5375:7:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 21759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5375:76:152",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21760,
                  "nodeType": "ExpressionStatement",
                  "src": "5375:76:152"
                },
                {
                  "id": 21771,
                  "nodeType": "UncheckedBlock",
                  "src": "5461:77:152",
                  "statements": [
                    {
                      "expression": {
                        "id": 21769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 21761,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21437,
                              "src": "5485:9:152",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(uint256 => mapping(address => uint256))"
                              }
                            },
                            "id": 21764,
                            "indexExpression": {
                              "id": 21762,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21711,
                              "src": "5495:2:152",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5485:13:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 21765,
                          "indexExpression": {
                            "id": 21763,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21707,
                            "src": "5499:4:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "5485:19:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 21768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 21766,
                            "name": "fromBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21747,
                            "src": "5507:11:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 21767,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21713,
                            "src": "5521:6:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5507:20:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5485:42:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 21770,
                      "nodeType": "ExpressionStatement",
                      "src": "5485:42:152"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 21778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 21772,
                          "name": "_balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21437,
                          "src": "5547:9:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(address => uint256))"
                          }
                        },
                        "id": 21775,
                        "indexExpression": {
                          "id": 21773,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21711,
                          "src": "5557:2:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5547:13:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 21776,
                      "indexExpression": {
                        "id": 21774,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21709,
                        "src": "5561:2:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5547:17:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 21777,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21713,
                      "src": "5568:6:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5547:27:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 21779,
                  "nodeType": "ExpressionStatement",
                  "src": "5547:27:152"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 21781,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21729,
                        "src": "5605:8:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 21782,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21707,
                        "src": "5615:4:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 21783,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21709,
                        "src": "5621:2:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 21784,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21711,
                        "src": "5625:2:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 21785,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21713,
                        "src": "5629:6:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 21780,
                      "name": "TransferSingle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22526,
                      "src": "5590:14:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256)"
                      }
                    },
                    "id": 21786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5590:46:152",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21787,
                  "nodeType": "EmitStatement",
                  "src": "5585:51:152"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21789,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21729,
                        "src": "5678:8:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 21790,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21707,
                        "src": "5688:4:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 21791,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21709,
                        "src": "5694:2:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 21792,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21711,
                        "src": "5698:2:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 21793,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21713,
                        "src": "5702:6:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 21794,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21715,
                        "src": "5710:4:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 21788,
                      "name": "_doSafeTransferAcceptanceCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22413,
                      "src": "5647:30:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 21795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5647:68:152",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21796,
                  "nodeType": "ExpressionStatement",
                  "src": "5647:68:152"
                }
              ]
            },
            "documentation": {
              "id": 21705,
              "nodeType": "StructuredDocumentation",
              "src": "4481:439:152",
              "text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
            },
            "id": 21798,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeTransferFrom",
            "nameLocation": "4934:17:152",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 21716,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21707,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "4969:4:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 21798,
                  "src": "4961:12:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21706,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4961:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21709,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4991:2:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 21798,
                  "src": "4983:10:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21708,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4983:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21711,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "5011:2:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 21798,
                  "src": "5003:10:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21710,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5003:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21713,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5031:6:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 21798,
                  "src": "5023:14:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21712,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5023:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21715,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "5060:4:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 21798,
                  "src": "5047:17:152",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 21714,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5047:5:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4951:119:152"
            },
            "returnParameters": {
              "id": 21717,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5088:0:152"
            },
            "scope": 22507,
            "src": "4925:797:152",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 21923,
              "nodeType": "Block",
              "src": "6256:857:152",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 21819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 21815,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21806,
                            "src": "6274:3:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 21816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6278:6:152",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6274:10:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 21817,
                            "name": "amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21809,
                            "src": "6288:7:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 21818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6296:6:152",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6288:14:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6274:28:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
                        "id": 21820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6304:42:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
                          "typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
                        },
                        "value": "ERC1155: ids and amounts length mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
                          "typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
                        }
                      ],
                      "id": 21814,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6266:7:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 21821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6266:81:152",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21822,
                  "nodeType": "ExpressionStatement",
                  "src": "6266:81:152"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 21829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 21824,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21803,
                          "src": "6365:2:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 21827,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6379:1:152",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 21826,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6371:7:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 21825,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6371:7:152",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 21828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6371:10:152",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6365:16:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 21830,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6383:39:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
                          "typeString": "literal_string \"ERC1155: transfer to the zero address\""
                        },
                        "value": "ERC1155: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
                          "typeString": "literal_string \"ERC1155: transfer to the zero address\""
                        }
                      ],
                      "id": 21823,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6357:7:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 21831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6357:66:152",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21832,
                  "nodeType": "ExpressionStatement",
                  "src": "6357:66:152"
                },
                {
                  "assignments": [
                    21834
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 21834,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "6442:8:152",
                      "nodeType": "VariableDeclaration",
                      "scope": 21923,
                      "src": "6434:16:152",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 21833,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6434:7:152",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 21837,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 21835,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30180,
                      "src": "6453:10:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 21836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6453:12:152",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6434:31:152"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21839,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21834,
                        "src": "6497:8:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 21840,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21801,
                        "src": "6507:4:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 21841,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21803,
                        "src": "6513:2:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 21842,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21806,
                        "src": "6517:3:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 21843,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21809,
                        "src": "6522:7:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 21844,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21811,
                        "src": "6531:4:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 21838,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22350,
                      "src": "6476:20:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 21845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6476:60:152",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21846,
                  "nodeType": "ExpressionStatement",
                  "src": "6476:60:152"
                },
                {
                  "body": {
                    "id": 21904,
                    "nodeType": "Block",
                    "src": "6588:370:152",
                    "statements": [
                      {
                        "assignments": [
                          21859
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 21859,
                            "mutability": "mutable",
                            "name": "id",
                            "nameLocation": "6610:2:152",
                            "nodeType": "VariableDeclaration",
                            "scope": 21904,
                            "src": "6602:10:152",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 21858,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6602:7:152",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 21863,
                        "initialValue": {
                          "baseExpression": {
                            "id": 21860,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21806,
                            "src": "6615:3:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 21862,
                          "indexExpression": {
                            "id": 21861,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21848,
                            "src": "6619:1:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6615:6:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6602:19:152"
                      },
                      {
                        "assignments": [
                          21865
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 21865,
                            "mutability": "mutable",
                            "name": "amount",
                            "nameLocation": "6643:6:152",
                            "nodeType": "VariableDeclaration",
                            "scope": 21904,
                            "src": "6635:14:152",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 21864,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6635:7:152",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 21869,
                        "initialValue": {
                          "baseExpression": {
                            "id": 21866,
                            "name": "amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21809,
                            "src": "6652:7:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 21868,
                          "indexExpression": {
                            "id": 21867,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21848,
                            "src": "6660:1:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6652:10:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6635:27:152"
                      },
                      {
                        "assignments": [
                          21871
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 21871,
                            "mutability": "mutable",
                            "name": "fromBalance",
                            "nameLocation": "6685:11:152",
                            "nodeType": "VariableDeclaration",
                            "scope": 21904,
                            "src": "6677:19:152",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 21870,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6677:7:152",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 21877,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 21872,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21437,
                              "src": "6699:9:152",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(uint256 => mapping(address => uint256))"
                              }
                            },
                            "id": 21874,
                            "indexExpression": {
                              "id": 21873,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21859,
                              "src": "6709:2:152",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6699:13:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 21876,
                          "indexExpression": {
                            "id": 21875,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21801,
                            "src": "6713:4:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6699:19:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6677:41:152"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 21881,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 21879,
                                "name": "fromBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21871,
                                "src": "6740:11:152",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 21880,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21865,
                                "src": "6755:6:152",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6740:21:152",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
                              "id": 21882,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6763:44:152",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
                                "typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
                              },
                              "value": "ERC1155: insufficient balance for transfer"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
                                "typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
                              }
                            ],
                            "id": 21878,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6732:7:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 21883,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6732:76:152",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 21884,
                        "nodeType": "ExpressionStatement",
                        "src": "6732:76:152"
                      },
                      {
                        "id": 21895,
                        "nodeType": "UncheckedBlock",
                        "src": "6822:85:152",
                        "statements": [
                          {
                            "expression": {
                              "id": 21893,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 21885,
                                    "name": "_balances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 21437,
                                    "src": "6850:9:152",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                      "typeString": "mapping(uint256 => mapping(address => uint256))"
                                    }
                                  },
                                  "id": 21888,
                                  "indexExpression": {
                                    "id": 21886,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 21859,
                                    "src": "6860:2:152",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6850:13:152",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 21889,
                                "indexExpression": {
                                  "id": 21887,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21801,
                                  "src": "6864:4:152",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "6850:19:152",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 21892,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 21890,
                                  "name": "fromBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21871,
                                  "src": "6872:11:152",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 21891,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21865,
                                  "src": "6886:6:152",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6872:20:152",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6850:42:152",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 21894,
                            "nodeType": "ExpressionStatement",
                            "src": "6850:42:152"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "id": 21902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 21896,
                                "name": "_balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21437,
                                "src": "6920:9:152",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(uint256 => mapping(address => uint256))"
                                }
                              },
                              "id": 21899,
                              "indexExpression": {
                                "id": 21897,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21859,
                                "src": "6930:2:152",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6920:13:152",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 21900,
                            "indexExpression": {
                              "id": 21898,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21803,
                              "src": "6934:2:152",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6920:17:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 21901,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21865,
                            "src": "6941:6:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6920:27:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 21903,
                        "nodeType": "ExpressionStatement",
                        "src": "6920:27:152"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 21854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 21851,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21848,
                      "src": "6567:1:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 21852,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21806,
                        "src": "6571:3:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 21853,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6575:6:152",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6571:10:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6567:14:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21905,
                  "initializationExpression": {
                    "assignments": [
                      21848
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 21848,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6560:1:152",
                        "nodeType": "VariableDeclaration",
                        "scope": 21905,
                        "src": "6552:9:152",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 21847,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6552:7:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 21850,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 21849,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6564:1:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6552:13:152"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 21856,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "6583:3:152",
                      "subExpression": {
                        "id": 21855,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21848,
                        "src": "6585:1:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 21857,
                    "nodeType": "ExpressionStatement",
                    "src": "6583:3:152"
                  },
                  "nodeType": "ForStatement",
                  "src": "6547:411:152"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 21907,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21834,
                        "src": "6987:8:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 21908,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21801,
                        "src": "6997:4:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 21909,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21803,
                        "src": "7003:2:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 21910,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21806,
                        "src": "7007:3:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 21911,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21809,
                        "src": "7012:7:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 21906,
                      "name": "TransferBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22541,
                      "src": "6973:13:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 21912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6973:47:152",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21913,
                  "nodeType": "EmitStatement",
                  "src": "6968:52:152"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21915,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21834,
                        "src": "7067:8:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 21916,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21801,
                        "src": "7077:4:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 21917,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21803,
                        "src": "7083:2:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 21918,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21806,
                        "src": "7087:3:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 21919,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21809,
                        "src": "7092:7:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 21920,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21811,
                        "src": "7101:4:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 21914,
                      "name": "_doSafeBatchTransferAcceptanceCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22478,
                      "src": "7031:35:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 21921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7031:75:152",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21922,
                  "nodeType": "ExpressionStatement",
                  "src": "7031:75:152"
                }
              ]
            },
            "documentation": {
              "id": 21799,
              "nodeType": "StructuredDocumentation",
              "src": "5728:335:152",
              "text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
            },
            "id": 21924,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeBatchTransferFrom",
            "nameLocation": "6077:22:152",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 21812,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21801,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "6117:4:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 21924,
                  "src": "6109:12:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21800,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6109:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21803,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6139:2:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 21924,
                  "src": "6131:10:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21802,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6131:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21806,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "6168:3:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 21924,
                  "src": "6151:20:152",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 21804,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6151:7:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 21805,
                    "nodeType": "ArrayTypeName",
                    "src": "6151:9:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21809,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "6198:7:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 21924,
                  "src": "6181:24:152",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 21807,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6181:7:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 21808,
                    "nodeType": "ArrayTypeName",
                    "src": "6181:9:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21811,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "6228:4:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 21924,
                  "src": "6215:17:152",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 21810,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6215:5:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6099:139:152"
            },
            "returnParameters": {
              "id": 21813,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6256:0:152"
            },
            "scope": 22507,
            "src": "6068:1045:152",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 21934,
              "nodeType": "Block",
              "src": "7992:30:152",
              "statements": [
                {
                  "expression": {
                    "id": 21932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21930,
                      "name": "_uri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21445,
                      "src": "8002:4:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 21931,
                      "name": "newuri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21927,
                      "src": "8009:6:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "8002:13:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 21933,
                  "nodeType": "ExpressionStatement",
                  "src": "8002:13:152"
                }
              ]
            },
            "documentation": {
              "id": 21925,
              "nodeType": "StructuredDocumentation",
              "src": "7119:812:152",
              "text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the amounts in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
            },
            "id": 21935,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setURI",
            "nameLocation": "7945:7:152",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 21928,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21927,
                  "mutability": "mutable",
                  "name": "newuri",
                  "nameLocation": "7967:6:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 21935,
                  "src": "7953:20:152",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 21926,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7953:6:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7952:22:152"
            },
            "returnParameters": {
              "id": 21929,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7992:0:152"
            },
            "scope": 22507,
            "src": "7936:86:152",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 22009,
              "nodeType": "Block",
              "src": "8524:424:152",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 21953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 21948,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21938,
                          "src": "8542:2:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 21951,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8556:1:152",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 21950,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8548:7:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 21949,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8548:7:152",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 21952,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8548:10:152",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8542:16:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 21954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8560:35:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
                          "typeString": "literal_string \"ERC1155: mint to the zero address\""
                        },
                        "value": "ERC1155: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
                          "typeString": "literal_string \"ERC1155: mint to the zero address\""
                        }
                      ],
                      "id": 21947,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8534:7:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 21955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8534:62:152",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21956,
                  "nodeType": "ExpressionStatement",
                  "src": "8534:62:152"
                },
                {
                  "assignments": [
                    21958
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 21958,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "8615:8:152",
                      "nodeType": "VariableDeclaration",
                      "scope": 22009,
                      "src": "8607:16:152",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 21957,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8607:7:152",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 21961,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 21959,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30180,
                      "src": "8626:10:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 21960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8626:12:152",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8607:31:152"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21963,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21958,
                        "src": "8670:8:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 21966,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8688:1:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 21965,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8680:7:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21964,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8680:7:152",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8680:10:152",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 21968,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21938,
                        "src": "8692:2:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 21970,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21940,
                            "src": "8714:2:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 21969,
                          "name": "_asSingletonArray",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22506,
                          "src": "8696:17:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (uint256[] memory)"
                          }
                        },
                        "id": 21971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8696:21:152",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 21973,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21942,
                            "src": "8737:6:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 21972,
                          "name": "_asSingletonArray",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22506,
                          "src": "8719:17:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (uint256[] memory)"
                          }
                        },
                        "id": 21974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8719:25:152",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 21975,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21944,
                        "src": "8746:4:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 21962,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22350,
                      "src": "8649:20:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 21976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8649:102:152",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21977,
                  "nodeType": "ExpressionStatement",
                  "src": "8649:102:152"
                },
                {
                  "expression": {
                    "id": 21984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 21978,
                          "name": "_balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21437,
                          "src": "8762:9:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(address => uint256))"
                          }
                        },
                        "id": 21981,
                        "indexExpression": {
                          "id": 21979,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21940,
                          "src": "8772:2:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8762:13:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 21982,
                      "indexExpression": {
                        "id": 21980,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21938,
                        "src": "8776:2:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8762:17:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 21983,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21942,
                      "src": "8783:6:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8762:27:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 21985,
                  "nodeType": "ExpressionStatement",
                  "src": "8762:27:152"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 21987,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21958,
                        "src": "8819:8:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 21990,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8837:1:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 21989,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8829:7:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21988,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8829:7:152",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21991,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8829:10:152",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 21992,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21938,
                        "src": "8841:2:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 21993,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21940,
                        "src": "8845:2:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 21994,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21942,
                        "src": "8849:6:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 21986,
                      "name": "TransferSingle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22526,
                      "src": "8804:14:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256)"
                      }
                    },
                    "id": 21995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8804:52:152",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21996,
                  "nodeType": "EmitStatement",
                  "src": "8799:57:152"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21998,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21958,
                        "src": "8898:8:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 22001,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8916:1:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 22000,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8908:7:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21999,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8908:7:152",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 22002,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8908:10:152",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 22003,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21938,
                        "src": "8920:2:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 22004,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21940,
                        "src": "8924:2:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 22005,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21942,
                        "src": "8928:6:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 22006,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21944,
                        "src": "8936:4:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 21997,
                      "name": "_doSafeTransferAcceptanceCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22413,
                      "src": "8867:30:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 22007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8867:74:152",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22008,
                  "nodeType": "ExpressionStatement",
                  "src": "8867:74:152"
                }
              ]
            },
            "documentation": {
              "id": 21936,
              "nodeType": "StructuredDocumentation",
              "src": "8028:362:152",
              "text": " @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
            },
            "id": 22010,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "8404:5:152",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 21945,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21938,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8427:2:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 22010,
                  "src": "8419:10:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21937,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8419:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21940,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "8447:2:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 22010,
                  "src": "8439:10:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21939,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8439:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21942,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8467:6:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 22010,
                  "src": "8459:14:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21941,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8459:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21944,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "8496:4:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 22010,
                  "src": "8483:17:152",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 21943,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8483:5:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8409:97:152"
            },
            "returnParameters": {
              "id": 21946,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8524:0:152"
            },
            "scope": 22507,
            "src": "8395:553:152",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 22108,
              "nodeType": "Block",
              "src": "9447:561:152",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 22030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 22025,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22013,
                          "src": "9465:2:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 22028,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9479:1:152",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 22027,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9471:7:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 22026,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9471:7:152",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 22029,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9471:10:152",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9465:16:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 22031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9483:35:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
                          "typeString": "literal_string \"ERC1155: mint to the zero address\""
                        },
                        "value": "ERC1155: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
                          "typeString": "literal_string \"ERC1155: mint to the zero address\""
                        }
                      ],
                      "id": 22024,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9457:7:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 22032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9457:62:152",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22033,
                  "nodeType": "ExpressionStatement",
                  "src": "9457:62:152"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 22039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 22035,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22016,
                            "src": "9537:3:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 22036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9541:6:152",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "9537:10:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 22037,
                            "name": "amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22019,
                            "src": "9551:7:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 22038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9559:6:152",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "9551:14:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9537:28:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
                        "id": 22040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9567:42:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
                          "typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
                        },
                        "value": "ERC1155: ids and amounts length mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
                          "typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
                        }
                      ],
                      "id": 22034,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9529:7:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 22041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9529:81:152",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22042,
                  "nodeType": "ExpressionStatement",
                  "src": "9529:81:152"
                },
                {
                  "assignments": [
                    22044
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22044,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "9629:8:152",
                      "nodeType": "VariableDeclaration",
                      "scope": 22108,
                      "src": "9621:16:152",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 22043,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9621:7:152",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 22047,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 22045,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30180,
                      "src": "9640:10:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 22046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9640:12:152",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9621:31:152"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 22049,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22044,
                        "src": "9684:8:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 22052,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9702:1:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 22051,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9694:7:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 22050,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9694:7:152",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 22053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9694:10:152",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 22054,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22013,
                        "src": "9706:2:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 22055,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22016,
                        "src": "9710:3:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 22056,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22019,
                        "src": "9715:7:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 22057,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22021,
                        "src": "9724:4:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 22048,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22350,
                      "src": "9663:20:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 22058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9663:66:152",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22059,
                  "nodeType": "ExpressionStatement",
                  "src": "9663:66:152"
                },
                {
                  "body": {
                    "id": 22083,
                    "nodeType": "Block",
                    "src": "9781:60:152",
                    "statements": [
                      {
                        "expression": {
                          "id": 22081,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 22071,
                                "name": "_balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21437,
                                "src": "9795:9:152",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(uint256 => mapping(address => uint256))"
                                }
                              },
                              "id": 22076,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 22072,
                                  "name": "ids",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22016,
                                  "src": "9805:3:152",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 22074,
                                "indexExpression": {
                                  "id": 22073,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22061,
                                  "src": "9809:1:152",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9805:6:152",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9795:17:152",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 22077,
                            "indexExpression": {
                              "id": 22075,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22013,
                              "src": "9813:2:152",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9795:21:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 22078,
                              "name": "amounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22019,
                              "src": "9820:7:152",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 22080,
                            "indexExpression": {
                              "id": 22079,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22061,
                              "src": "9828:1:152",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9820:10:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9795:35:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 22082,
                        "nodeType": "ExpressionStatement",
                        "src": "9795:35:152"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 22067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 22064,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22061,
                      "src": "9760:1:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 22065,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22016,
                        "src": "9764:3:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 22066,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9768:6:152",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "9764:10:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9760:14:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 22084,
                  "initializationExpression": {
                    "assignments": [
                      22061
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 22061,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "9753:1:152",
                        "nodeType": "VariableDeclaration",
                        "scope": 22084,
                        "src": "9745:9:152",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 22060,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9745:7:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 22063,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 22062,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9757:1:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "9745:13:152"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 22069,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "9776:3:152",
                      "subExpression": {
                        "id": 22068,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22061,
                        "src": "9776:1:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 22070,
                    "nodeType": "ExpressionStatement",
                    "src": "9776:3:152"
                  },
                  "nodeType": "ForStatement",
                  "src": "9740:101:152"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 22086,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22044,
                        "src": "9870:8:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 22089,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9888:1:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 22088,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9880:7:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 22087,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9880:7:152",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 22090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9880:10:152",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 22091,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22013,
                        "src": "9892:2:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 22092,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22016,
                        "src": "9896:3:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 22093,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22019,
                        "src": "9901:7:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 22085,
                      "name": "TransferBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22541,
                      "src": "9856:13:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 22094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9856:53:152",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22095,
                  "nodeType": "EmitStatement",
                  "src": "9851:58:152"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 22097,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22044,
                        "src": "9956:8:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 22100,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9974:1:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 22099,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9966:7:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 22098,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9966:7:152",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 22101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9966:10:152",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 22102,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22013,
                        "src": "9978:2:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 22103,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22016,
                        "src": "9982:3:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 22104,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22019,
                        "src": "9987:7:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 22105,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22021,
                        "src": "9996:4:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 22096,
                      "name": "_doSafeBatchTransferAcceptanceCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22478,
                      "src": "9920:35:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 22106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9920:81:152",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22107,
                  "nodeType": "ExpressionStatement",
                  "src": "9920:81:152"
                }
              ]
            },
            "documentation": {
              "id": 22011,
              "nodeType": "StructuredDocumentation",
              "src": "8954:334:152",
              "text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
            },
            "id": 22109,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mintBatch",
            "nameLocation": "9302:10:152",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22022,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22013,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9330:2:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 22109,
                  "src": "9322:10:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22012,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9322:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22016,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "9359:3:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 22109,
                  "src": "9342:20:152",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 22014,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "9342:7:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 22015,
                    "nodeType": "ArrayTypeName",
                    "src": "9342:9:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22019,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "9389:7:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 22109,
                  "src": "9372:24:152",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 22017,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "9372:7:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 22018,
                    "nodeType": "ArrayTypeName",
                    "src": "9372:9:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22021,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "9419:4:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 22109,
                  "src": "9406:17:152",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 22020,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9406:5:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9312:117:152"
            },
            "returnParameters": {
              "id": 22023,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9447:0:152"
            },
            "scope": 22507,
            "src": "9293:715:152",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 22187,
              "nodeType": "Block",
              "src": "10352:526:152",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 22125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 22120,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22112,
                          "src": "10370:4:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 22123,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10386:1:152",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 22122,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10378:7:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 22121,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10378:7:152",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 22124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10378:10:152",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10370:18:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
                        "id": 22126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10390:37:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
                          "typeString": "literal_string \"ERC1155: burn from the zero address\""
                        },
                        "value": "ERC1155: burn from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
                          "typeString": "literal_string \"ERC1155: burn from the zero address\""
                        }
                      ],
                      "id": 22119,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10362:7:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 22127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10362:66:152",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22128,
                  "nodeType": "ExpressionStatement",
                  "src": "10362:66:152"
                },
                {
                  "assignments": [
                    22130
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22130,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "10447:8:152",
                      "nodeType": "VariableDeclaration",
                      "scope": 22187,
                      "src": "10439:16:152",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 22129,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10439:7:152",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 22133,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 22131,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30180,
                      "src": "10458:10:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 22132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10458:12:152",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10439:31:152"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 22135,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22130,
                        "src": "10502:8:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 22136,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22112,
                        "src": "10512:4:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 22139,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10526:1:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 22138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10518:7:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 22137,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10518:7:152",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 22140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10518:10:152",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 22142,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22114,
                            "src": "10548:2:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 22141,
                          "name": "_asSingletonArray",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22506,
                          "src": "10530:17:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (uint256[] memory)"
                          }
                        },
                        "id": 22143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10530:21:152",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 22145,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22116,
                            "src": "10571:6:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 22144,
                          "name": "_asSingletonArray",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22506,
                          "src": "10553:17:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (uint256[] memory)"
                          }
                        },
                        "id": 22146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10553:25:152",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 22147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10580:2:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 22134,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22350,
                      "src": "10481:20:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 22148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10481:102:152",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22149,
                  "nodeType": "ExpressionStatement",
                  "src": "10481:102:152"
                },
                {
                  "assignments": [
                    22151
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22151,
                      "mutability": "mutable",
                      "name": "fromBalance",
                      "nameLocation": "10602:11:152",
                      "nodeType": "VariableDeclaration",
                      "scope": 22187,
                      "src": "10594:19:152",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 22150,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10594:7:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 22157,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 22152,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21437,
                        "src": "10616:9:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(uint256 => mapping(address => uint256))"
                        }
                      },
                      "id": 22154,
                      "indexExpression": {
                        "id": 22153,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22114,
                        "src": "10626:2:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "10616:13:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 22156,
                    "indexExpression": {
                      "id": 22155,
                      "name": "from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22112,
                      "src": "10630:4:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10616:19:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10594:41:152"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 22161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 22159,
                          "name": "fromBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22151,
                          "src": "10653:11:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 22160,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22116,
                          "src": "10668:6:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10653:21:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
                        "id": 22162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10676:38:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
                          "typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
                        },
                        "value": "ERC1155: burn amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
                          "typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
                        }
                      ],
                      "id": 22158,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10645:7:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 22163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10645:70:152",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22164,
                  "nodeType": "ExpressionStatement",
                  "src": "10645:70:152"
                },
                {
                  "id": 22175,
                  "nodeType": "UncheckedBlock",
                  "src": "10725:77:152",
                  "statements": [
                    {
                      "expression": {
                        "id": 22173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 22165,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21437,
                              "src": "10749:9:152",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(uint256 => mapping(address => uint256))"
                              }
                            },
                            "id": 22168,
                            "indexExpression": {
                              "id": 22166,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22114,
                              "src": "10759:2:152",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10749:13:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 22169,
                          "indexExpression": {
                            "id": 22167,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22112,
                            "src": "10763:4:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "10749:19:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 22172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 22170,
                            "name": "fromBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22151,
                            "src": "10771:11:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 22171,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22116,
                            "src": "10785:6:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10771:20:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10749:42:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 22174,
                      "nodeType": "ExpressionStatement",
                      "src": "10749:42:152"
                    }
                  ]
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 22177,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22130,
                        "src": "10832:8:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 22178,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22112,
                        "src": "10842:4:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 22181,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10856:1:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 22180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10848:7:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 22179,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10848:7:152",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 22182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10848:10:152",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 22183,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22114,
                        "src": "10860:2:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 22184,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22116,
                        "src": "10864:6:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 22176,
                      "name": "TransferSingle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22526,
                      "src": "10817:14:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256)"
                      }
                    },
                    "id": 22185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10817:54:152",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22186,
                  "nodeType": "EmitStatement",
                  "src": "10812:59:152"
                }
              ]
            },
            "documentation": {
              "id": 22110,
              "nodeType": "StructuredDocumentation",
              "src": "10014:229:152",
              "text": " @dev Destroys `amount` tokens of token type `id` from `from`\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `amount` tokens of token type `id`."
            },
            "id": 22188,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "10257:5:152",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22112,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "10280:4:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 22188,
                  "src": "10272:12:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22111,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10272:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22114,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "10302:2:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 22188,
                  "src": "10294:10:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22113,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10294:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22116,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10322:6:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 22188,
                  "src": "10314:14:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22115,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10314:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10262:72:152"
            },
            "returnParameters": {
              "id": 22118,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10352:0:152"
            },
            "scope": 22507,
            "src": "10248:630:152",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 22298,
              "nodeType": "Block",
              "src": "11201:738:152",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 22206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 22201,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22191,
                          "src": "11219:4:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 22204,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11235:1:152",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 22203,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11227:7:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 22202,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11227:7:152",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 22205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11227:10:152",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11219:18:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
                        "id": 22207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11239:37:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
                          "typeString": "literal_string \"ERC1155: burn from the zero address\""
                        },
                        "value": "ERC1155: burn from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
                          "typeString": "literal_string \"ERC1155: burn from the zero address\""
                        }
                      ],
                      "id": 22200,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11211:7:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 22208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11211:66:152",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22209,
                  "nodeType": "ExpressionStatement",
                  "src": "11211:66:152"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 22215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 22211,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22194,
                            "src": "11295:3:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 22212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11299:6:152",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "11295:10:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 22213,
                            "name": "amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22197,
                            "src": "11309:7:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 22214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11317:6:152",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "11309:14:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11295:28:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
                        "id": 22216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11325:42:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
                          "typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
                        },
                        "value": "ERC1155: ids and amounts length mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
                          "typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
                        }
                      ],
                      "id": 22210,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11287:7:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 22217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11287:81:152",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22218,
                  "nodeType": "ExpressionStatement",
                  "src": "11287:81:152"
                },
                {
                  "assignments": [
                    22220
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22220,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "11387:8:152",
                      "nodeType": "VariableDeclaration",
                      "scope": 22298,
                      "src": "11379:16:152",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 22219,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11379:7:152",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 22223,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 22221,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30180,
                      "src": "11398:10:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 22222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11398:12:152",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11379:31:152"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 22225,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22220,
                        "src": "11442:8:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 22226,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22191,
                        "src": "11452:4:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 22229,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11466:1:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 22228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11458:7:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 22227,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11458:7:152",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 22230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11458:10:152",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 22231,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22194,
                        "src": "11470:3:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 22232,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22197,
                        "src": "11475:7:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 22233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11484:2:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 22224,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22350,
                      "src": "11421:20:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 22234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11421:66:152",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22235,
                  "nodeType": "ExpressionStatement",
                  "src": "11421:66:152"
                },
                {
                  "body": {
                    "id": 22285,
                    "nodeType": "Block",
                    "src": "11539:323:152",
                    "statements": [
                      {
                        "assignments": [
                          22248
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 22248,
                            "mutability": "mutable",
                            "name": "id",
                            "nameLocation": "11561:2:152",
                            "nodeType": "VariableDeclaration",
                            "scope": 22285,
                            "src": "11553:10:152",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 22247,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11553:7:152",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 22252,
                        "initialValue": {
                          "baseExpression": {
                            "id": 22249,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22194,
                            "src": "11566:3:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 22251,
                          "indexExpression": {
                            "id": 22250,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22237,
                            "src": "11570:1:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11566:6:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11553:19:152"
                      },
                      {
                        "assignments": [
                          22254
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 22254,
                            "mutability": "mutable",
                            "name": "amount",
                            "nameLocation": "11594:6:152",
                            "nodeType": "VariableDeclaration",
                            "scope": 22285,
                            "src": "11586:14:152",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 22253,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11586:7:152",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 22258,
                        "initialValue": {
                          "baseExpression": {
                            "id": 22255,
                            "name": "amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22197,
                            "src": "11603:7:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 22257,
                          "indexExpression": {
                            "id": 22256,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22237,
                            "src": "11611:1:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11603:10:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11586:27:152"
                      },
                      {
                        "assignments": [
                          22260
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 22260,
                            "mutability": "mutable",
                            "name": "fromBalance",
                            "nameLocation": "11636:11:152",
                            "nodeType": "VariableDeclaration",
                            "scope": 22285,
                            "src": "11628:19:152",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 22259,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11628:7:152",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 22266,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 22261,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21437,
                              "src": "11650:9:152",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(uint256 => mapping(address => uint256))"
                              }
                            },
                            "id": 22263,
                            "indexExpression": {
                              "id": 22262,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22248,
                              "src": "11660:2:152",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11650:13:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 22265,
                          "indexExpression": {
                            "id": 22264,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22191,
                            "src": "11664:4:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11650:19:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11628:41:152"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 22270,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 22268,
                                "name": "fromBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22260,
                                "src": "11691:11:152",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 22269,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22254,
                                "src": "11706:6:152",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11691:21:152",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
                              "id": 22271,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11714:38:152",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
                                "typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
                              },
                              "value": "ERC1155: burn amount exceeds balance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
                                "typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
                              }
                            ],
                            "id": 22267,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11683:7:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 22272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11683:70:152",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 22273,
                        "nodeType": "ExpressionStatement",
                        "src": "11683:70:152"
                      },
                      {
                        "id": 22284,
                        "nodeType": "UncheckedBlock",
                        "src": "11767:85:152",
                        "statements": [
                          {
                            "expression": {
                              "id": 22282,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 22274,
                                    "name": "_balances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 21437,
                                    "src": "11795:9:152",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                      "typeString": "mapping(uint256 => mapping(address => uint256))"
                                    }
                                  },
                                  "id": 22277,
                                  "indexExpression": {
                                    "id": 22275,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 22248,
                                    "src": "11805:2:152",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "11795:13:152",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 22278,
                                "indexExpression": {
                                  "id": 22276,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22191,
                                  "src": "11809:4:152",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "11795:19:152",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 22281,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 22279,
                                  "name": "fromBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22260,
                                  "src": "11817:11:152",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 22280,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22254,
                                  "src": "11831:6:152",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "11817:20:152",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11795:42:152",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 22283,
                            "nodeType": "ExpressionStatement",
                            "src": "11795:42:152"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 22243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 22240,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22237,
                      "src": "11518:1:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 22241,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22194,
                        "src": "11522:3:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 22242,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11526:6:152",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "11522:10:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11518:14:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 22286,
                  "initializationExpression": {
                    "assignments": [
                      22237
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 22237,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "11511:1:152",
                        "nodeType": "VariableDeclaration",
                        "scope": 22286,
                        "src": "11503:9:152",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 22236,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11503:7:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 22239,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 22238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11515:1:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "11503:13:152"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 22245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "11534:3:152",
                      "subExpression": {
                        "id": 22244,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22237,
                        "src": "11534:1:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 22246,
                    "nodeType": "ExpressionStatement",
                    "src": "11534:3:152"
                  },
                  "nodeType": "ForStatement",
                  "src": "11498:364:152"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 22288,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22220,
                        "src": "11891:8:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 22289,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22191,
                        "src": "11901:4:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 22292,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11915:1:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 22291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11907:7:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 22290,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11907:7:152",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 22293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11907:10:152",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 22294,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22194,
                        "src": "11919:3:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 22295,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22197,
                        "src": "11924:7:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 22287,
                      "name": "TransferBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22541,
                      "src": "11877:13:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 22296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11877:55:152",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22297,
                  "nodeType": "EmitStatement",
                  "src": "11872:60:152"
                }
              ]
            },
            "documentation": {
              "id": 22189,
              "nodeType": "StructuredDocumentation",
              "src": "10884:183:152",
              "text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Requirements:\n - `ids` and `amounts` must have the same length."
            },
            "id": 22299,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burnBatch",
            "nameLocation": "11081:10:152",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22191,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "11109:4:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 22299,
                  "src": "11101:12:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22190,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11101:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22194,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "11140:3:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 22299,
                  "src": "11123:20:152",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 22192,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "11123:7:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 22193,
                    "nodeType": "ArrayTypeName",
                    "src": "11123:9:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22197,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "11170:7:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 22299,
                  "src": "11153:24:152",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 22195,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "11153:7:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 22196,
                    "nodeType": "ArrayTypeName",
                    "src": "11153:9:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11091:92:152"
            },
            "returnParameters": {
              "id": 22199,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11201:0:152"
            },
            "scope": 22507,
            "src": "11072:867:152",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 22330,
              "nodeType": "Block",
              "src": "12197:200:152",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 22312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 22310,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22302,
                          "src": "12215:5:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 22311,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22304,
                          "src": "12224:8:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "12215:17:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66",
                        "id": 22313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12234:43:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
                          "typeString": "literal_string \"ERC1155: setting approval status for self\""
                        },
                        "value": "ERC1155: setting approval status for self"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
                          "typeString": "literal_string \"ERC1155: setting approval status for self\""
                        }
                      ],
                      "id": 22309,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12207:7:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 22314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12207:71:152",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22315,
                  "nodeType": "ExpressionStatement",
                  "src": "12207:71:152"
                },
                {
                  "expression": {
                    "id": 22322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 22316,
                          "name": "_operatorApprovals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21443,
                          "src": "12288:18:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 22319,
                        "indexExpression": {
                          "id": 22317,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22302,
                          "src": "12307:5:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12288:25:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 22320,
                      "indexExpression": {
                        "id": 22318,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22304,
                        "src": "12314:8:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12288:35:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 22321,
                      "name": "approved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22306,
                      "src": "12326:8:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "12288:46:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 22323,
                  "nodeType": "ExpressionStatement",
                  "src": "12288:46:152"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 22325,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22302,
                        "src": "12364:5:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 22326,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22304,
                        "src": "12371:8:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 22327,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22306,
                        "src": "12381:8:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 22324,
                      "name": "ApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22550,
                      "src": "12349:14:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 22328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12349:41:152",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22329,
                  "nodeType": "EmitStatement",
                  "src": "12344:46:152"
                }
              ]
            },
            "documentation": {
              "id": 22300,
              "nodeType": "StructuredDocumentation",
              "src": "11945:124:152",
              "text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits a {ApprovalForAll} event."
            },
            "id": 22331,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setApprovalForAll",
            "nameLocation": "12083:18:152",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22307,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22302,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "12119:5:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 22331,
                  "src": "12111:13:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22301,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12111:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22304,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "12142:8:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 22331,
                  "src": "12134:16:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22303,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12134:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22306,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "12165:8:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 22331,
                  "src": "12160:13:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 22305,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12160:4:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12101:78:152"
            },
            "returnParameters": {
              "id": 22308,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12197:0:152"
            },
            "scope": 22507,
            "src": "12074:323:152",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 22349,
              "nodeType": "Block",
              "src": "13543:2:152",
              "statements": []
            },
            "documentation": {
              "id": 22332,
              "nodeType": "StructuredDocumentation",
              "src": "12403:923:152",
              "text": " @dev Hook that is called before any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 22350,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "13340:20:152",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22347,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22334,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "13378:8:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 22350,
                  "src": "13370:16:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22333,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13370:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22336,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "13404:4:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 22350,
                  "src": "13396:12:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22335,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13396:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22338,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "13426:2:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 22350,
                  "src": "13418:10:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22337,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13418:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22341,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "13455:3:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 22350,
                  "src": "13438:20:152",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 22339,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "13438:7:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 22340,
                    "nodeType": "ArrayTypeName",
                    "src": "13438:9:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22344,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "13485:7:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 22350,
                  "src": "13468:24:152",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 22342,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "13468:7:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 22343,
                    "nodeType": "ArrayTypeName",
                    "src": "13468:9:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22346,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "13515:4:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 22350,
                  "src": "13502:17:152",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 22345,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13502:5:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13360:165:152"
            },
            "returnParameters": {
              "id": 22348,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13543:0:152"
            },
            "scope": 22507,
            "src": "13331:214:152",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 22412,
              "nodeType": "Block",
              "src": "13744:532:152",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 22365,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22356,
                        "src": "13758:2:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 22366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13761:10:152",
                      "memberName": "isContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29525,
                      "src": "13758:13:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 22367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13758:15:152",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 22411,
                  "nodeType": "IfStatement",
                  "src": "13754:516:152",
                  "trueBody": {
                    "id": 22410,
                    "nodeType": "Block",
                    "src": "13775:495:152",
                    "statements": [
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 22392,
                              "nodeType": "Block",
                              "src": "13892:184:152",
                              "statements": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 22385,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 22381,
                                      "name": "response",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 22379,
                                      "src": "13914:8:152",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 22382,
                                          "name": "IERC1155Receiver",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 22670,
                                          "src": "13926:16:152",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$22670_$",
                                            "typeString": "type(contract IERC1155Receiver)"
                                          }
                                        },
                                        "id": 22383,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberLocation": "13943:17:152",
                                        "memberName": "onERC1155Received",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 22651,
                                        "src": "13926:34:152",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                                          "typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
                                        }
                                      },
                                      "id": 22384,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "13961:8:152",
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "13926:43:152",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "13914:55:152",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 22391,
                                  "nodeType": "IfStatement",
                                  "src": "13910:152:152",
                                  "trueBody": {
                                    "id": 22390,
                                    "nodeType": "Block",
                                    "src": "13971:91:152",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
                                              "id": 22387,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "14000:42:152",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
                                                "typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
                                              },
                                              "value": "ERC1155: ERC1155Receiver rejected tokens"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
                                                "typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
                                              }
                                            ],
                                            "id": 22386,
                                            "name": "revert",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                              -19,
                                              -19
                                            ],
                                            "referencedDeclaration": -19,
                                            "src": "13993:6:152",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                              "typeString": "function (string memory) pure"
                                            }
                                          },
                                          "id": 22388,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "13993:50:152",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 22389,
                                        "nodeType": "ExpressionStatement",
                                        "src": "13993:50:152"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 22393,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 22380,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 22379,
                                  "mutability": "mutable",
                                  "name": "response",
                                  "nameLocation": "13882:8:152",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 22393,
                                  "src": "13875:15:152",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "typeName": {
                                    "id": 22378,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "13875:6:152",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "13874:17:152"
                            },
                            "src": "13866:210:152"
                          },
                          {
                            "block": {
                              "id": 22401,
                              "nodeType": "Block",
                              "src": "14111:47:152",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 22398,
                                        "name": "reason",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 22395,
                                        "src": "14136:6:152",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "id": 22397,
                                      "name": "revert",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        -19,
                                        -19
                                      ],
                                      "referencedDeclaration": -19,
                                      "src": "14129:6:152",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                        "typeString": "function (string memory) pure"
                                      }
                                    },
                                    "id": 22399,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "14129:14:152",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 22400,
                                  "nodeType": "ExpressionStatement",
                                  "src": "14129:14:152"
                                }
                              ]
                            },
                            "errorName": "Error",
                            "id": 22402,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 22396,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 22395,
                                  "mutability": "mutable",
                                  "name": "reason",
                                  "nameLocation": "14103:6:152",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 22402,
                                  "src": "14089:20:152",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string"
                                  },
                                  "typeName": {
                                    "id": 22394,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "14089:6:152",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage_ptr",
                                      "typeString": "string"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "14088:22:152"
                            },
                            "src": "14077:81:152"
                          },
                          {
                            "block": {
                              "id": 22407,
                              "nodeType": "Block",
                              "src": "14165:95:152",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
                                        "id": 22404,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "14190:54:152",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
                                          "typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
                                        },
                                        "value": "ERC1155: transfer to non ERC1155Receiver implementer"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
                                          "typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
                                        }
                                      ],
                                      "id": 22403,
                                      "name": "revert",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        -19,
                                        -19
                                      ],
                                      "referencedDeclaration": -19,
                                      "src": "14183:6:152",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                        "typeString": "function (string memory) pure"
                                      }
                                    },
                                    "id": 22405,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "14183:62:152",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 22406,
                                  "nodeType": "ExpressionStatement",
                                  "src": "14183:62:152"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 22408,
                            "nodeType": "TryCatchClause",
                            "src": "14159:101:152"
                          }
                        ],
                        "externalCall": {
                          "arguments": [
                            {
                              "id": 22372,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22352,
                              "src": "13832:8:152",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 22373,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22354,
                              "src": "13842:4:152",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 22374,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22358,
                              "src": "13848:2:152",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 22375,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22360,
                              "src": "13852:6:152",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 22376,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22362,
                              "src": "13860:4:152",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 22369,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22356,
                                  "src": "13810:2:152",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 22368,
                                "name": "IERC1155Receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22670,
                                "src": "13793:16:152",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$22670_$",
                                  "typeString": "type(contract IERC1155Receiver)"
                                }
                              },
                              "id": 22370,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13793:20:152",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC1155Receiver_$22670",
                                "typeString": "contract IERC1155Receiver"
                              }
                            },
                            "id": 22371,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "13814:17:152",
                            "memberName": "onERC1155Received",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 22651,
                            "src": "13793:38:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
                            }
                          },
                          "id": 22377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13793:72:152",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 22409,
                        "nodeType": "TryStatement",
                        "src": "13789:471:152"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 22413,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_doSafeTransferAcceptanceCheck",
            "nameLocation": "13560:30:152",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22363,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22352,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "13608:8:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 22413,
                  "src": "13600:16:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22351,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13600:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22354,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "13634:4:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 22413,
                  "src": "13626:12:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22353,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13626:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22356,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "13656:2:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 22413,
                  "src": "13648:10:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22355,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13648:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22358,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "13676:2:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 22413,
                  "src": "13668:10:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22357,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13668:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22360,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "13696:6:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 22413,
                  "src": "13688:14:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22359,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13688:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22362,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "13725:4:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 22413,
                  "src": "13712:17:152",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 22361,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13712:5:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13590:145:152"
            },
            "returnParameters": {
              "id": 22364,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13744:0:152"
            },
            "scope": 22507,
            "src": "13551:725:152",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 22477,
              "nodeType": "Block",
              "src": "14500:574:152",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 22430,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22419,
                        "src": "14514:2:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 22431,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14517:10:152",
                      "memberName": "isContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29525,
                      "src": "14514:13:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 22432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14514:15:152",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 22476,
                  "nodeType": "IfStatement",
                  "src": "14510:558:152",
                  "trueBody": {
                    "id": 22475,
                    "nodeType": "Block",
                    "src": "14531:537:152",
                    "statements": [
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 22457,
                              "nodeType": "Block",
                              "src": "14685:189:152",
                              "statements": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 22450,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 22446,
                                      "name": "response",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 22444,
                                      "src": "14707:8:152",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 22447,
                                          "name": "IERC1155Receiver",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 22670,
                                          "src": "14719:16:152",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$22670_$",
                                            "typeString": "type(contract IERC1155Receiver)"
                                          }
                                        },
                                        "id": 22448,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberLocation": "14736:22:152",
                                        "memberName": "onERC1155BatchReceived",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 22669,
                                        "src": "14719:39:152",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                                          "typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
                                        }
                                      },
                                      "id": 22449,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "14759:8:152",
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "14719:48:152",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "14707:60:152",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 22456,
                                  "nodeType": "IfStatement",
                                  "src": "14703:157:152",
                                  "trueBody": {
                                    "id": 22455,
                                    "nodeType": "Block",
                                    "src": "14769:91:152",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
                                              "id": 22452,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "14798:42:152",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
                                                "typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
                                              },
                                              "value": "ERC1155: ERC1155Receiver rejected tokens"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
                                                "typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
                                              }
                                            ],
                                            "id": 22451,
                                            "name": "revert",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                              -19,
                                              -19
                                            ],
                                            "referencedDeclaration": -19,
                                            "src": "14791:6:152",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                              "typeString": "function (string memory) pure"
                                            }
                                          },
                                          "id": 22453,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "14791:50:152",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 22454,
                                        "nodeType": "ExpressionStatement",
                                        "src": "14791:50:152"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 22458,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 22445,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 22444,
                                  "mutability": "mutable",
                                  "name": "response",
                                  "nameLocation": "14662:8:152",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 22458,
                                  "src": "14655:15:152",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "typeName": {
                                    "id": 22443,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "14655:6:152",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "14637:47:152"
                            },
                            "src": "14629:245:152"
                          },
                          {
                            "block": {
                              "id": 22466,
                              "nodeType": "Block",
                              "src": "14909:47:152",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 22463,
                                        "name": "reason",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 22460,
                                        "src": "14934:6:152",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "id": 22462,
                                      "name": "revert",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        -19,
                                        -19
                                      ],
                                      "referencedDeclaration": -19,
                                      "src": "14927:6:152",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                        "typeString": "function (string memory) pure"
                                      }
                                    },
                                    "id": 22464,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "14927:14:152",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 22465,
                                  "nodeType": "ExpressionStatement",
                                  "src": "14927:14:152"
                                }
                              ]
                            },
                            "errorName": "Error",
                            "id": 22467,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 22461,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 22460,
                                  "mutability": "mutable",
                                  "name": "reason",
                                  "nameLocation": "14901:6:152",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 22467,
                                  "src": "14887:20:152",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string"
                                  },
                                  "typeName": {
                                    "id": 22459,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "14887:6:152",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage_ptr",
                                      "typeString": "string"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "14886:22:152"
                            },
                            "src": "14875:81:152"
                          },
                          {
                            "block": {
                              "id": 22472,
                              "nodeType": "Block",
                              "src": "14963:95:152",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
                                        "id": 22469,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "14988:54:152",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
                                          "typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
                                        },
                                        "value": "ERC1155: transfer to non ERC1155Receiver implementer"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
                                          "typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
                                        }
                                      ],
                                      "id": 22468,
                                      "name": "revert",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        -19,
                                        -19
                                      ],
                                      "referencedDeclaration": -19,
                                      "src": "14981:6:152",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                        "typeString": "function (string memory) pure"
                                      }
                                    },
                                    "id": 22470,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "14981:62:152",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 22471,
                                  "nodeType": "ExpressionStatement",
                                  "src": "14981:62:152"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 22473,
                            "nodeType": "TryCatchClause",
                            "src": "14957:101:152"
                          }
                        ],
                        "externalCall": {
                          "arguments": [
                            {
                              "id": 22437,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22415,
                              "src": "14593:8:152",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 22438,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22417,
                              "src": "14603:4:152",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 22439,
                              "name": "ids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22422,
                              "src": "14609:3:152",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            {
                              "id": 22440,
                              "name": "amounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22425,
                              "src": "14614:7:152",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            {
                              "id": 22441,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22427,
                              "src": "14623:4:152",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 22434,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22419,
                                  "src": "14566:2:152",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 22433,
                                "name": "IERC1155Receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22670,
                                "src": "14549:16:152",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$22670_$",
                                  "typeString": "type(contract IERC1155Receiver)"
                                }
                              },
                              "id": 22435,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14549:20:152",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC1155Receiver_$22670",
                                "typeString": "contract IERC1155Receiver"
                              }
                            },
                            "id": 22436,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14570:22:152",
                            "memberName": "onERC1155BatchReceived",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 22669,
                            "src": "14549:43:152",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
                            }
                          },
                          "id": 22442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14549:79:152",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 22474,
                        "nodeType": "TryStatement",
                        "src": "14545:513:152"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 22478,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_doSafeBatchTransferAcceptanceCheck",
            "nameLocation": "14291:35:152",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22428,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22415,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "14344:8:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 22478,
                  "src": "14336:16:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22414,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14336:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22417,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "14370:4:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 22478,
                  "src": "14362:12:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22416,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14362:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22419,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "14392:2:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 22478,
                  "src": "14384:10:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22418,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14384:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22422,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "14421:3:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 22478,
                  "src": "14404:20:152",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 22420,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "14404:7:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 22421,
                    "nodeType": "ArrayTypeName",
                    "src": "14404:9:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22425,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "14451:7:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 22478,
                  "src": "14434:24:152",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 22423,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "14434:7:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 22424,
                    "nodeType": "ArrayTypeName",
                    "src": "14434:9:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22427,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "14481:4:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 22478,
                  "src": "14468:17:152",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 22426,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14468:5:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14326:165:152"
            },
            "returnParameters": {
              "id": 22429,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14500:0:152"
            },
            "scope": 22507,
            "src": "14282:792:152",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 22505,
              "nodeType": "Block",
              "src": "15164:109:152",
              "statements": [
                {
                  "assignments": [
                    22490
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22490,
                      "mutability": "mutable",
                      "name": "array",
                      "nameLocation": "15191:5:152",
                      "nodeType": "VariableDeclaration",
                      "scope": 22505,
                      "src": "15174:22:152",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 22488,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15174:7:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 22489,
                        "nodeType": "ArrayTypeName",
                        "src": "15174:9:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 22496,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 22494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15213:1:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 22493,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "15199:13:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 22491,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15203:7:152",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 22492,
                        "nodeType": "ArrayTypeName",
                        "src": "15203:9:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 22495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15199:16:152",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15174:41:152"
                },
                {
                  "expression": {
                    "id": 22501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 22497,
                        "name": "array",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22490,
                        "src": "15225:5:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 22499,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 22498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15231:1:152",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "15225:8:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 22500,
                      "name": "element",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22480,
                      "src": "15236:7:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15225:18:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 22502,
                  "nodeType": "ExpressionStatement",
                  "src": "15225:18:152"
                },
                {
                  "expression": {
                    "id": 22503,
                    "name": "array",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 22490,
                    "src": "15261:5:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 22485,
                  "id": 22504,
                  "nodeType": "Return",
                  "src": "15254:12:152"
                }
              ]
            },
            "id": 22506,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_asSingletonArray",
            "nameLocation": "15089:17:152",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22481,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22480,
                  "mutability": "mutable",
                  "name": "element",
                  "nameLocation": "15115:7:152",
                  "nodeType": "VariableDeclaration",
                  "scope": 22506,
                  "src": "15107:15:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22479,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15107:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15106:17:152"
            },
            "returnParameters": {
              "id": 22485,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22484,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 22506,
                  "src": "15146:16:152",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 22482,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "15146:7:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 22483,
                    "nodeType": "ArrayTypeName",
                    "src": "15146:9:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15145:18:152"
            },
            "scope": 22507,
            "src": "15080:193:152",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 22508,
        "src": "555:14720:152",
        "usedErrors": [],
        "usedEvents": [
          22526,
          22541,
          22550,
          22557
        ]
      }
    ],
    "src": "94:15182:152"
  },
  "bytecode": "60806040523480156200001157600080fd5b506040516200165e3803806200165e83398101604081905262000034916200006e565b6200003f8162000046565b506200029e565b6002620000548282620001d2565b5050565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156200008257600080fd5b82516001600160401b03808211156200009a57600080fd5b818501915085601f830112620000af57600080fd5b815181811115620000c457620000c462000058565b604051601f8201601f19908116603f01168101908382118183101715620000ef57620000ef62000058565b8160405282815288868487010111156200010857600080fd5b600093505b828410156200012c57848401860151818501870152928501926200010d565b600086848301015280965050505050505092915050565b600181811c908216806200015857607f821691505b6020821081036200017957634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001cd57600081815260208120601f850160051c81016020861015620001a85750805b601f850160051c820191505b81811015620001c957828155600101620001b4565b5050505b505050565b81516001600160401b03811115620001ee57620001ee62000058565b6200020681620001ff845462000143565b846200017f565b602080601f8311600181146200023e5760008415620002255750858301515b600019600386901b1c1916600185901b178555620001c9565b600085815260208120601f198616915b828110156200026f578886015182559484019460019091019084016200024e565b50858210156200028e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6113b080620002ae6000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f41461010a578063a22cb4651461012a578063e985e9c51461013d578063f242432a1461017957600080fd5b8062fdd58e1461008c57806301ffc9a7146100b25780630e89341c146100d55780632eb2c2d6146100f5575b600080fd5b61009f61009a366004610bc1565b61018c565b6040519081526020015b60405180910390f35b6100c56100c0366004610c04565b610226565b60405190151581526020016100a9565b6100e86100e3366004610c28565b610276565b6040516100a99190610c87565b610108610103366004610de6565b61030a565b005b61011d610118366004610e90565b6103a1565b6040516100a99190610f96565b610108610138366004610fa9565b6104cb565b6100c561014b366004610fe5565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b610108610187366004611018565b6104da565b60006001600160a01b0383166101fd5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b148061025757506001600160e01b031982166303a24d0760e21b145b8061022057506301ffc9a760e01b6001600160e01b0319831614610220565b6060600280546102859061107d565b80601f01602080910402602001604051908101604052809291908181526020018280546102b19061107d565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b50505050509050919050565b6001600160a01b0385163314806103265750610326853361014b565b61038d5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b60648201526084016101f4565b61039a8585858585610561565b5050505050565b606081518351146104065760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016101f4565b6000835167ffffffffffffffff81111561042257610422610c9a565b60405190808252806020026020018201604052801561044b578160200160208202803683370190505b50905060005b84518110156104c35761049685828151811061046f5761046f6110b7565b6020026020010151858381518110610489576104896110b7565b602002602001015161018c565b8282815181106104a8576104a86110b7565b60209081029190910101526104bc816110e3565b9050610451565b509392505050565b6104d633838361073e565b5050565b6001600160a01b0385163314806104f657506104f6853361014b565b6105545760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084016101f4565b61039a858585858561081e565b81518351146105c35760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016101f4565b6001600160a01b0384166105e95760405162461bcd60e51b81526004016101f4906110fc565b3360005b84518110156106d057600085828151811061060a5761060a6110b7565b602002602001015190506000858381518110610628576106286110b7565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156106785760405162461bcd60e51b81526004016101f490611141565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906106b590849061118b565b92505081905550505050806106c9906110e3565b90506105ed565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161072092919061119e565b60405180910390a4610736818787878787610944565b505050505050565b816001600160a01b0316836001600160a01b0316036107b15760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016101f4565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166108445760405162461bcd60e51b81526004016101f4906110fc565b3361085d81878761085488610a9f565b61039a88610a9f565b6000848152602081815260408083206001600160a01b038a1684529091529020548381101561089e5760405162461bcd60e51b81526004016101f490611141565b6000858152602081815260408083206001600160a01b038b81168552925280832087850390559088168252812080548692906108db90849061118b565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461093b828888888888610aea565b50505050505050565b6001600160a01b0384163b156107365760405163bc197c8160e01b81526001600160a01b0385169063bc197c819061098890899089908890889088906004016111cc565b6020604051808303816000875af19250505080156109c3575060408051601f3d908101601f191682019092526109c09181019061122a565b60015b610a6f576109cf611247565b806308c379a003610a0857506109e3611263565b806109ee5750610a0a565b8060405162461bcd60e51b81526004016101f49190610c87565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016101f4565b6001600160e01b0319811663bc197c8160e01b1461093b5760405162461bcd60e51b81526004016101f4906112ed565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610ad957610ad96110b7565b602090810291909101015292915050565b6001600160a01b0384163b156107365760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610b2e9089908990889088908890600401611335565b6020604051808303816000875af1925050508015610b69575060408051601f3d908101601f19168201909252610b669181019061122a565b60015b610b75576109cf611247565b6001600160e01b0319811663f23a6e6160e01b1461093b5760405162461bcd60e51b81526004016101f4906112ed565b80356001600160a01b0381168114610bbc57600080fd5b919050565b60008060408385031215610bd457600080fd5b610bdd83610ba5565b946020939093013593505050565b6001600160e01b031981168114610c0157600080fd5b50565b600060208284031215610c1657600080fd5b8135610c2181610beb565b9392505050565b600060208284031215610c3a57600080fd5b5035919050565b6000815180845260005b81811015610c6757602081850181015186830182015201610c4b565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610c216020830184610c41565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715610cd657610cd6610c9a565b6040525050565b600067ffffffffffffffff821115610cf757610cf7610c9a565b5060051b60200190565b600082601f830112610d1257600080fd5b81356020610d1f82610cdd565b604051610d2c8282610cb0565b83815260059390931b8501820192828101915086841115610d4c57600080fd5b8286015b84811015610d675780358352918301918301610d50565b509695505050505050565b600082601f830112610d8357600080fd5b813567ffffffffffffffff811115610d9d57610d9d610c9a565b604051610db4601f8301601f191660200182610cb0565b818152846020838601011115610dc957600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215610dfe57600080fd5b610e0786610ba5565b9450610e1560208701610ba5565b9350604086013567ffffffffffffffff80821115610e3257600080fd5b610e3e89838a01610d01565b94506060880135915080821115610e5457600080fd5b610e6089838a01610d01565b93506080880135915080821115610e7657600080fd5b50610e8388828901610d72565b9150509295509295909350565b60008060408385031215610ea357600080fd5b823567ffffffffffffffff80821115610ebb57600080fd5b818501915085601f830112610ecf57600080fd5b81356020610edc82610cdd565b604051610ee98282610cb0565b83815260059390931b8501820192828101915089841115610f0957600080fd5b948201945b83861015610f2e57610f1f86610ba5565b82529482019490820190610f0e565b96505086013592505080821115610f4457600080fd5b50610f5185828601610d01565b9150509250929050565b600081518084526020808501945080840160005b83811015610f8b57815187529582019590820190600101610f6f565b509495945050505050565b602081526000610c216020830184610f5b565b60008060408385031215610fbc57600080fd5b610fc583610ba5565b915060208301358015158114610fda57600080fd5b809150509250929050565b60008060408385031215610ff857600080fd5b61100183610ba5565b915061100f60208401610ba5565b90509250929050565b600080600080600060a0868803121561103057600080fd5b61103986610ba5565b945061104760208701610ba5565b93506040860135925060608601359150608086013567ffffffffffffffff81111561107157600080fd5b610e8388828901610d72565b600181811c9082168061109157607f821691505b6020821081036110b157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016110f5576110f56110cd565b5060010190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b80820180821115610220576102206110cd565b6040815260006111b16040830185610f5b565b82810360208401526111c38185610f5b565b95945050505050565b6001600160a01b0386811682528516602082015260a0604082018190526000906111f890830186610f5b565b828103606084015261120a8186610f5b565b9050828103608084015261121e8185610c41565b98975050505050505050565b60006020828403121561123c57600080fd5b8151610c2181610beb565b600060033d11156112605760046000803e5060005160e01c5b90565b600060443d10156112715790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156112a157505050505090565b82850191508151818111156112b95750505050505090565b843d87010160208285010111156112d35750505050505090565b6112e260208286010187610cb0565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061136f90830184610c41565b97965050505050505056fea2646970667358221220450f5109e8bd2add3ab792b445a4decb5e652d3b743e8a8c236debae9897ca9764736f6c63430008150033",
  "bytecodeSha1": "805ca460b497ff7e440b168ac28abd8afa842ef8",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.21+commit.d9974bed"
  },
  "contractName": "ERC1155",
  "coverageMap": {
    "branches": {
      "152": {
        "ERC1155._doSafeBatchTransferAcceptanceCheck": {
          "53": [
            14707,
            14767,
            false
          ]
        },
        "ERC1155._doSafeTransferAcceptanceCheck": {
          "54": [
            13914,
            13969,
            false
          ]
        },
        "ERC1155._safeBatchTransferFrom": {
          "47": [
            6274,
            6302,
            true
          ],
          "48": [
            6365,
            6381,
            true
          ],
          "49": [
            6740,
            6761,
            true
          ]
        },
        "ERC1155._safeTransferFrom": {
          "51": [
            5106,
            5122,
            true
          ],
          "52": [
            5383,
            5404,
            true
          ]
        },
        "ERC1155._setApprovalForAll": {
          "50": [
            12215,
            12232,
            true
          ]
        },
        "ERC1155.balanceOf": {
          "41": [
            2283,
            2304,
            true
          ]
        },
        "ERC1155.balanceOfBatch": {
          "44": [
            2746,
            2775,
            true
          ]
        },
        "ERC1155.safeBatchTransferFrom": {
          "42": [
            4270,
            4290,
            true
          ],
          "43": [
            4294,
            4330,
            true
          ]
        },
        "ERC1155.safeTransferFrom": {
          "45": [
            3784,
            3804,
            true
          ],
          "46": [
            3808,
            3844,
            true
          ]
        }
      },
      "153": {},
      "154": {},
      "158": {},
      "198": {},
      "202": {},
      "216": {},
      "220": {}
    },
    "statements": {
      "152": {
        "ERC1155._asSingletonArray": {
          "38": [
            15225,
            15243
          ],
          "39": [
            15254,
            15266
          ]
        },
        "ERC1155._doSafeBatchTransferAcceptanceCheck": {
          "35": [
            14927,
            14941
          ],
          "36": [
            14981,
            15043
          ],
          "37": [
            14791,
            14841
          ]
        },
        "ERC1155._doSafeTransferAcceptanceCheck": {
          "40": [
            13993,
            14043
          ]
        },
        "ERC1155._safeBatchTransferFrom": {
          "16": [
            6266,
            6347
          ],
          "17": [
            6357,
            6423
          ],
          "18": [
            6732,
            6808
          ],
          "19": [
            6850,
            6892
          ],
          "20": [
            6920,
            6947
          ],
          "21": [
            6583,
            6586
          ],
          "22": [
            6968,
            7020
          ],
          "23": [
            7031,
            7106
          ]
        },
        "ERC1155._safeTransferFrom": {
          "27": [
            5098,
            5164
          ],
          "28": [
            5217,
            5313
          ],
          "29": [
            5375,
            5451
          ],
          "30": [
            5485,
            5527
          ],
          "31": [
            5547,
            5574
          ],
          "32": [
            5585,
            5636
          ],
          "33": [
            5647,
            5715
          ]
        },
        "ERC1155._setApprovalForAll": {
          "24": [
            12207,
            12278
          ],
          "25": [
            12288,
            12334
          ],
          "26": [
            12344,
            12390
          ]
        },
        "ERC1155.balanceOf": {
          "1": [
            2275,
            2352
          ],
          "2": [
            2362,
            2391
          ]
        },
        "ERC1155.balanceOfBatch": {
          "9": [
            2738,
            2821
          ],
          "10": [
            2966,
            3015
          ],
          "11": [
            2947,
            2950
          ],
          "12": [
            3036,
            3056
          ]
        },
        "ERC1155.isApprovedForAll": {
          "0": [
            3466,
            3510
          ]
        },
        "ERC1155.safeBatchTransferFrom": {
          "6": [
            4249,
            4406
          ],
          "8": [
            4416,
            4468
          ]
        },
        "ERC1155.safeTransferFrom": {
          "14": [
            3763,
            3911
          ],
          "15": [
            3921,
            3966
          ]
        },
        "ERC1155.setApprovalForAll": {
          "13": [
            3225,
            3277
          ]
        },
        "ERC1155.supportsInterface": {
          "3": [
            1339,
            1519
          ]
        },
        "ERC1155.uri": {
          "5": [
            2010,
            2021
          ]
        }
      },
      "153": {},
      "154": {},
      "158": {},
      "198": {
        "Address.isContract": {
          "34": [
            1443,
            1473
          ]
        }
      },
      "202": {
        "Context._msgSender": {
          "7": [
            712,
            729
          ]
        }
      },
      "216": {
        "ERC165.supportsInterface": {
          "4": [
            930,
            977
          ]
        }
      },
      "220": {}
    }
  },
  "dependencies": [
    "Address",
    "Context",
    "ERC165",
    "IERC1155",
    "IERC1155MetadataURI",
    "IERC1155Receiver",
    "IERC165"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f41461010a578063a22cb4651461012a578063e985e9c51461013d578063f242432a1461017957600080fd5b8062fdd58e1461008c57806301ffc9a7146100b25780630e89341c146100d55780632eb2c2d6146100f5575b600080fd5b61009f61009a366004610bc1565b61018c565b6040519081526020015b60405180910390f35b6100c56100c0366004610c04565b610226565b60405190151581526020016100a9565b6100e86100e3366004610c28565b610276565b6040516100a99190610c87565b610108610103366004610de6565b61030a565b005b61011d610118366004610e90565b6103a1565b6040516100a99190610f96565b610108610138366004610fa9565b6104cb565b6100c561014b366004610fe5565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b610108610187366004611018565b6104da565b60006001600160a01b0383166101fd5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b148061025757506001600160e01b031982166303a24d0760e21b145b8061022057506301ffc9a760e01b6001600160e01b0319831614610220565b6060600280546102859061107d565b80601f01602080910402602001604051908101604052809291908181526020018280546102b19061107d565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b50505050509050919050565b6001600160a01b0385163314806103265750610326853361014b565b61038d5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b60648201526084016101f4565b61039a8585858585610561565b5050505050565b606081518351146104065760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016101f4565b6000835167ffffffffffffffff81111561042257610422610c9a565b60405190808252806020026020018201604052801561044b578160200160208202803683370190505b50905060005b84518110156104c35761049685828151811061046f5761046f6110b7565b6020026020010151858381518110610489576104896110b7565b602002602001015161018c565b8282815181106104a8576104a86110b7565b60209081029190910101526104bc816110e3565b9050610451565b509392505050565b6104d633838361073e565b5050565b6001600160a01b0385163314806104f657506104f6853361014b565b6105545760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084016101f4565b61039a858585858561081e565b81518351146105c35760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016101f4565b6001600160a01b0384166105e95760405162461bcd60e51b81526004016101f4906110fc565b3360005b84518110156106d057600085828151811061060a5761060a6110b7565b602002602001015190506000858381518110610628576106286110b7565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156106785760405162461bcd60e51b81526004016101f490611141565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906106b590849061118b565b92505081905550505050806106c9906110e3565b90506105ed565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161072092919061119e565b60405180910390a4610736818787878787610944565b505050505050565b816001600160a01b0316836001600160a01b0316036107b15760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016101f4565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166108445760405162461bcd60e51b81526004016101f4906110fc565b3361085d81878761085488610a9f565b61039a88610a9f565b6000848152602081815260408083206001600160a01b038a1684529091529020548381101561089e5760405162461bcd60e51b81526004016101f490611141565b6000858152602081815260408083206001600160a01b038b81168552925280832087850390559088168252812080548692906108db90849061118b565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461093b828888888888610aea565b50505050505050565b6001600160a01b0384163b156107365760405163bc197c8160e01b81526001600160a01b0385169063bc197c819061098890899089908890889088906004016111cc565b6020604051808303816000875af19250505080156109c3575060408051601f3d908101601f191682019092526109c09181019061122a565b60015b610a6f576109cf611247565b806308c379a003610a0857506109e3611263565b806109ee5750610a0a565b8060405162461bcd60e51b81526004016101f49190610c87565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016101f4565b6001600160e01b0319811663bc197c8160e01b1461093b5760405162461bcd60e51b81526004016101f4906112ed565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610ad957610ad96110b7565b602090810291909101015292915050565b6001600160a01b0384163b156107365760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610b2e9089908990889088908890600401611335565b6020604051808303816000875af1925050508015610b69575060408051601f3d908101601f19168201909252610b669181019061122a565b60015b610b75576109cf611247565b6001600160e01b0319811663f23a6e6160e01b1461093b5760405162461bcd60e51b81526004016101f4906112ed565b80356001600160a01b0381168114610bbc57600080fd5b919050565b60008060408385031215610bd457600080fd5b610bdd83610ba5565b946020939093013593505050565b6001600160e01b031981168114610c0157600080fd5b50565b600060208284031215610c1657600080fd5b8135610c2181610beb565b9392505050565b600060208284031215610c3a57600080fd5b5035919050565b6000815180845260005b81811015610c6757602081850181015186830182015201610c4b565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610c216020830184610c41565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715610cd657610cd6610c9a565b6040525050565b600067ffffffffffffffff821115610cf757610cf7610c9a565b5060051b60200190565b600082601f830112610d1257600080fd5b81356020610d1f82610cdd565b604051610d2c8282610cb0565b83815260059390931b8501820192828101915086841115610d4c57600080fd5b8286015b84811015610d675780358352918301918301610d50565b509695505050505050565b600082601f830112610d8357600080fd5b813567ffffffffffffffff811115610d9d57610d9d610c9a565b604051610db4601f8301601f191660200182610cb0565b818152846020838601011115610dc957600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215610dfe57600080fd5b610e0786610ba5565b9450610e1560208701610ba5565b9350604086013567ffffffffffffffff80821115610e3257600080fd5b610e3e89838a01610d01565b94506060880135915080821115610e5457600080fd5b610e6089838a01610d01565b93506080880135915080821115610e7657600080fd5b50610e8388828901610d72565b9150509295509295909350565b60008060408385031215610ea357600080fd5b823567ffffffffffffffff80821115610ebb57600080fd5b818501915085601f830112610ecf57600080fd5b81356020610edc82610cdd565b604051610ee98282610cb0565b83815260059390931b8501820192828101915089841115610f0957600080fd5b948201945b83861015610f2e57610f1f86610ba5565b82529482019490820190610f0e565b96505086013592505080821115610f4457600080fd5b50610f5185828601610d01565b9150509250929050565b600081518084526020808501945080840160005b83811015610f8b57815187529582019590820190600101610f6f565b509495945050505050565b602081526000610c216020830184610f5b565b60008060408385031215610fbc57600080fd5b610fc583610ba5565b915060208301358015158114610fda57600080fd5b809150509250929050565b60008060408385031215610ff857600080fd5b61100183610ba5565b915061100f60208401610ba5565b90509250929050565b600080600080600060a0868803121561103057600080fd5b61103986610ba5565b945061104760208701610ba5565b93506040860135925060608601359150608086013567ffffffffffffffff81111561107157600080fd5b610e8388828901610d72565b600181811c9082168061109157607f821691505b6020821081036110b157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016110f5576110f56110cd565b5060010190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b80820180821115610220576102206110cd565b6040815260006111b16040830185610f5b565b82810360208401526111c38185610f5b565b95945050505050565b6001600160a01b0386811682528516602082015260a0604082018190526000906111f890830186610f5b565b828103606084015261120a8186610f5b565b9050828103608084015261121e8185610c41565b98975050505050505050565b60006020828403121561123c57600080fd5b8151610c2181610beb565b600060033d11156112605760046000803e5060005160e01c5b90565b600060443d10156112715790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156112a157505050505090565b82850191508151818111156112b95750505050505090565b843d87010160208285010111156112d35750505050505090565b6112e260208286010187610cb0565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061136f90830184610c41565b97965050505050505056fea2646970667358221220450f5109e8bd2add3ab792b445a4decb5e652d3b743e8a8c236debae9897ca9764736f6c63430008150033",
  "deployedSourceMap": "555:14720:152:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2170:228;;;;;;:::i;:::-;;:::i;:::-;;;597:25:249;;;585:2;570:18;2170:228:152;;;;;;;;1221:305;;;;;;:::i;:::-;;:::i;:::-;;;1184:14:249;;1177:22;1159:41;;1147:2;1132:18;1221:305:152;1019:187:249;1925:103:152;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4045:430::-;;;;;;:::i;:::-;;:::i;:::-;;2555:508;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3131:153::-;;;;;;:::i;:::-;;:::i;3351:166::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3473:27:152;;;3450:4;3473:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3351:166;3584:389;;;;;;:::i;:::-;;:::i;2170:228::-;2256:7;-1:-1:-1;;;;;2283:21:152;;2275:77;;;;-1:-1:-1;;;2275:77:152;;8209:2:249;2275:77:152;;;8191:21:249;8248:2;8228:18;;;8221:30;8287:34;8267:18;;;8260:62;-1:-1:-1;;;8338:18:249;;;8331:41;8389:19;;2275:77:152;;;;;;;;;-1:-1:-1;2369:9:152;:13;;;;;;;;;;;-1:-1:-1;;;;;2369:22:152;;;;;;;;;;2170:228;;;;;:::o;1221:305::-;1323:4;-1:-1:-1;;;;;;1358:41:152;;-1:-1:-1;;;1358:41:152;;:109;;-1:-1:-1;;;;;;;1415:52:152;;-1:-1:-1;;;1415:52:152;1358:109;:161;;;-1:-1:-1;;;;;;;;;;937:40:216;;;1483:36:152;829:155:216;1925:103:152;1985:13;2017:4;2010:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1925:103;;;:::o;4045:430::-;-1:-1:-1;;;;;4270:20:152;;719:10:202;4270:20:152;;:60;;-1:-1:-1;4294:36:152;4311:4;719:10:202;3351:166:152;:::i;4294:36::-;4249:157;;;;-1:-1:-1;;;4249:157:152;;9006:2:249;4249:157:152;;;8988:21:249;9045:2;9025:18;;;9018:30;9084:34;9064:18;;;9057:62;-1:-1:-1;;;9135:18:249;;;9128:48;9193:19;;4249:157:152;8804:414:249;4249:157:152;4416:52;4439:4;4445:2;4449:3;4454:7;4463:4;4416:22;:52::i;:::-;4045:430;;;;;:::o;2555:508::-;2706:16;2765:3;:10;2746:8;:15;:29;2738:83;;;;-1:-1:-1;;;2738:83:152;;9425:2:249;2738:83:152;;;9407:21:249;9464:2;9444:18;;;9437:30;9503:34;9483:18;;;9476:62;-1:-1:-1;;;9554:18:249;;;9547:39;9603:19;;2738:83:152;9223:405:249;2738:83:152;2832:30;2879:8;:15;2865:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2865:30:152;;2832:63;;2911:9;2906:120;2930:8;:15;2926:1;:19;2906:120;;;2985:30;2995:8;3004:1;2995:11;;;;;;;;:::i;:::-;;;;;;;3008:3;3012:1;3008:6;;;;;;;;:::i;:::-;;;;;;;2985:9;:30::i;:::-;2966:13;2980:1;2966:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;2947:3;;;:::i;:::-;;;2906:120;;;-1:-1:-1;3043:13:152;2555:508;-1:-1:-1;;;2555:508:152:o;3131:153::-;3225:52;719:10:202;3258:8:152;3268;3225:18;:52::i;:::-;3131:153;;:::o;3584:389::-;-1:-1:-1;;;;;3784:20:152;;719:10:202;3784:20:152;;:60;;-1:-1:-1;3808:36:152;3825:4;719:10:202;3351:166:152;:::i;3808:36::-;3763:148;;;;-1:-1:-1;;;3763:148:152;;10239:2:249;3763:148:152;;;10221:21:249;10278:2;10258:18;;;10251:30;10317:34;10297:18;;;10290:62;-1:-1:-1;;;10368:18:249;;;10361:39;10417:19;;3763:148:152;10037:405:249;3763:148:152;3921:45;3939:4;3945:2;3949;3953:6;3961:4;3921:17;:45::i;6068:1045::-;6288:7;:14;6274:3;:10;:28;6266:81;;;;-1:-1:-1;;;6266:81:152;;10649:2:249;6266:81:152;;;10631:21:249;10688:2;10668:18;;;10661:30;10727:34;10707:18;;;10700:62;-1:-1:-1;;;10778:18:249;;;10771:38;10826:19;;6266:81:152;10447:404:249;6266:81:152;-1:-1:-1;;;;;6365:16:152;;6357:66;;;;-1:-1:-1;;;6357:66:152;;;;;;;:::i;:::-;719:10:202;6434:16:152;6547:411;6571:3;:10;6567:1;:14;6547:411;;;6602:10;6615:3;6619:1;6615:6;;;;;;;;:::i;:::-;;;;;;;6602:19;;6635:14;6652:7;6660:1;6652:10;;;;;;;;:::i;:::-;;;;;;;;;;;;6677:19;6699:13;;;;;;;;;;-1:-1:-1;;;;;6699:19:152;;;;;;;;;;;;6652:10;;-1:-1:-1;6740:21:152;;;;6732:76;;;;-1:-1:-1;;;6732:76:152;;;;;;;:::i;:::-;6850:9;:13;;;;;;;;;;;-1:-1:-1;;;;;6850:19:152;;;;;;;;;;6872:20;;;6850:42;;6920:17;;;;;;;:27;;6872:20;;6850:9;6920:27;;6872:20;;6920:27;:::i;:::-;;;;;;;;6588:370;;;6583:3;;;;:::i;:::-;;;6547:411;;;;7003:2;-1:-1:-1;;;;;6973:47:152;6997:4;-1:-1:-1;;;;;6973:47:152;6987:8;-1:-1:-1;;;;;6973:47:152;;7007:3;7012:7;6973:47;;;;;;;:::i;:::-;;;;;;;;7031:75;7067:8;7077:4;7083:2;7087:3;7092:7;7101:4;7031:35;:75::i;:::-;6256:857;6068:1045;;;;;:::o;12074:323::-;12224:8;-1:-1:-1;;;;;12215:17:152;:5;-1:-1:-1;;;;;12215:17:152;;12207:71;;;;-1:-1:-1;;;12207:71:152;;12475:2:249;12207:71:152;;;12457:21:249;12514:2;12494:18;;;12487:30;12553:34;12533:18;;;12526:62;-1:-1:-1;;;12604:18:249;;;12597:39;12653:19;;12207:71:152;12273:405:249;12207:71:152;-1:-1:-1;;;;;12288:25:152;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;12288:46:152;;;;;;;;;;12349:41;;1159::249;;;12349::152;;1132:18:249;12349:41:152;;;;;;;12074:323;;;:::o;4925:797::-;-1:-1:-1;;;;;5106:16:152;;5098:66;;;;-1:-1:-1;;;5098:66:152;;;;;;;:::i;:::-;719:10:202;5217:96:152;719:10:202;5248:4:152;5254:2;5258:21;5276:2;5258:17;:21::i;:::-;5281:25;5299:6;5281:17;:25::i;5217:96::-;5324:19;5346:13;;;;;;;;;;;-1:-1:-1;;;;;5346:19:152;;;;;;;;;;5383:21;;;;5375:76;;;;-1:-1:-1;;;5375:76:152;;;;;;;:::i;:::-;5485:9;:13;;;;;;;;;;;-1:-1:-1;;;;;5485:19:152;;;;;;;;;;5507:20;;;5485:42;;5547:17;;;;;;;:27;;5507:20;;5485:9;5547:27;;5507:20;;5547:27;:::i;:::-;;;;-1:-1:-1;;5590:46:152;;;12857:25:249;;;12913:2;12898:18;;12891:34;;;-1:-1:-1;;;;;5590:46:152;;;;;;;;;;;;;;12830:18:249;5590:46:152;;;;;;;5647:68;5678:8;5688:4;5694:2;5698;5702:6;5710:4;5647:30;:68::i;:::-;5088:634;;4925:797;;;;;:::o;14282:792::-;-1:-1:-1;;;;;14514:13:152;;1450:19:198;:23;14510:558:152;;14549:79;;-1:-1:-1;;;14549:79:152;;-1:-1:-1;;;;;14549:43:152;;;;;:79;;14593:8;;14603:4;;14609:3;;14614:7;;14623:4;;14549:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14549:79:152;;;;;;;;-1:-1:-1;;14549:79:152;;;;;;;;;;;;:::i;:::-;;;14545:513;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;14934:6;14927:14;;-1:-1:-1;;;14927:14:152;;;;;;;;:::i;14545:513::-;;;14981:62;;-1:-1:-1;;;14981:62:152;;15084:2:249;14981:62:152;;;15066:21:249;15123:2;15103:18;;;15096:30;15162:34;15142:18;;;15135:62;-1:-1:-1;;;15213:18:249;;;15206:50;15273:19;;14981:62:152;14882:416:249;14545:513:152;-1:-1:-1;;;;;;14707:60:152;;-1:-1:-1;;;14707:60:152;14703:157;;14791:50;;-1:-1:-1;;;14791:50:152;;;;;;;:::i;15080:193::-;15199:16;;;15213:1;15199:16;;;;;;;;;15146;;15174:22;;15199:16;;;;;;;;;;;;-1:-1:-1;15199:16:152;15174:41;;15236:7;15225:5;15231:1;15225:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;15261:5;15080:193;-1:-1:-1;;15080:193:152:o;13551:725::-;-1:-1:-1;;;;;13758:13:152;;1450:19:198;:23;13754:516:152;;13793:72;;-1:-1:-1;;;13793:72:152;;-1:-1:-1;;;;;13793:38:152;;;;;:72;;13832:8;;13842:4;;13848:2;;13852:6;;13860:4;;13793:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13793:72:152;;;;;;;;-1:-1:-1;;13793:72:152;;;;;;;;;;;;:::i;:::-;;;13789:471;;;;:::i;:::-;-1:-1:-1;;;;;;13914:55:152;;-1:-1:-1;;;13914:55:152;13910:152;;13993:50;;-1:-1:-1;;;13993:50:152;;;;;;;:::i;14:173:249:-;82:20;;-1:-1:-1;;;;;131:31:249;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:249:o;633:131::-;-1:-1:-1;;;;;;707:32:249;;697:43;;687:71;;754:1;751;744:12;687:71;633:131;:::o;769:245::-;827:6;880:2;868:9;859:7;855:23;851:32;848:52;;;896:1;893;886:12;848:52;935:9;922:23;954:30;978:5;954:30;:::i;:::-;1003:5;769:245;-1:-1:-1;;;769:245:249:o;1211:180::-;1270:6;1323:2;1311:9;1302:7;1298:23;1294:32;1291:52;;;1339:1;1336;1329:12;1291:52;-1:-1:-1;1362:23:249;;1211:180;-1:-1:-1;1211:180:249:o;1396:423::-;1438:3;1476:5;1470:12;1503:6;1498:3;1491:19;1528:1;1538:162;1552:6;1549:1;1546:13;1538:162;;;1614:4;1670:13;;;1666:22;;1660:29;1642:11;;;1638:20;;1631:59;1567:12;1538:162;;;1542:3;1745:1;1738:4;1729:6;1724:3;1720:16;1716:27;1709:38;1808:4;1801:2;1797:7;1792:2;1784:6;1780:15;1776:29;1771:3;1767:39;1763:50;1756:57;;;1396:423;;;;:::o;1824:220::-;1973:2;1962:9;1955:21;1936:4;1993:45;2034:2;2023:9;2019:18;2011:6;1993:45;:::i;2049:127::-;2110:10;2105:3;2101:20;2098:1;2091:31;2141:4;2138:1;2131:15;2165:4;2162:1;2155:15;2181:249;2291:2;2272:13;;-1:-1:-1;;2268:27:249;2256:40;;2326:18;2311:34;;2347:22;;;2308:62;2305:88;;;2373:18;;:::i;:::-;2409:2;2402:22;-1:-1:-1;;2181:249:249:o;2435:183::-;2495:4;2528:18;2520:6;2517:30;2514:56;;;2550:18;;:::i;:::-;-1:-1:-1;2595:1:249;2591:14;2607:4;2587:25;;2435:183::o;2623:724::-;2677:5;2730:3;2723:4;2715:6;2711:17;2707:27;2697:55;;2748:1;2745;2738:12;2697:55;2784:6;2771:20;2810:4;2833:43;2873:2;2833:43;:::i;:::-;2905:2;2899:9;2917:31;2945:2;2937:6;2917:31;:::i;:::-;2983:18;;;3075:1;3071:10;;;;3059:23;;3055:32;;;3017:15;;;;-1:-1:-1;3099:15:249;;;3096:35;;;3127:1;3124;3117:12;3096:35;3163:2;3155:6;3151:15;3175:142;3191:6;3186:3;3183:15;3175:142;;;3257:17;;3245:30;;3295:12;;;;3208;;3175:142;;;-1:-1:-1;3335:6:249;2623:724;-1:-1:-1;;;;;;2623:724:249:o;3352:555::-;3394:5;3447:3;3440:4;3432:6;3428:17;3424:27;3414:55;;3465:1;3462;3455:12;3414:55;3501:6;3488:20;3527:18;3523:2;3520:26;3517:52;;;3549:18;;:::i;:::-;3598:2;3592:9;3610:67;3665:2;3646:13;;-1:-1:-1;;3642:27:249;3671:4;3638:38;3592:9;3610:67;:::i;:::-;3701:2;3693:6;3686:18;3747:3;3740:4;3735:2;3727:6;3723:15;3719:26;3716:35;3713:55;;;3764:1;3761;3754:12;3713:55;3828:2;3821:4;3813:6;3809:17;3802:4;3794:6;3790:17;3777:54;3875:1;3851:15;;;3868:4;3847:26;3840:37;;;;3855:6;3352:555;-1:-1:-1;;;3352:555:249:o;3912:943::-;4066:6;4074;4082;4090;4098;4151:3;4139:9;4130:7;4126:23;4122:33;4119:53;;;4168:1;4165;4158:12;4119:53;4191:29;4210:9;4191:29;:::i;:::-;4181:39;;4239:38;4273:2;4262:9;4258:18;4239:38;:::i;:::-;4229:48;;4328:2;4317:9;4313:18;4300:32;4351:18;4392:2;4384:6;4381:14;4378:34;;;4408:1;4405;4398:12;4378:34;4431:61;4484:7;4475:6;4464:9;4460:22;4431:61;:::i;:::-;4421:71;;4545:2;4534:9;4530:18;4517:32;4501:48;;4574:2;4564:8;4561:16;4558:36;;;4590:1;4587;4580:12;4558:36;4613:63;4668:7;4657:8;4646:9;4642:24;4613:63;:::i;:::-;4603:73;;4729:3;4718:9;4714:19;4701:33;4685:49;;4759:2;4749:8;4746:16;4743:36;;;4775:1;4772;4765:12;4743:36;;4798:51;4841:7;4830:8;4819:9;4815:24;4798:51;:::i;:::-;4788:61;;;3912:943;;;;;;;;:::o;4860:1208::-;4978:6;4986;5039:2;5027:9;5018:7;5014:23;5010:32;5007:52;;;5055:1;5052;5045:12;5007:52;5095:9;5082:23;5124:18;5165:2;5157:6;5154:14;5151:34;;;5181:1;5178;5171:12;5151:34;5219:6;5208:9;5204:22;5194:32;;5264:7;5257:4;5253:2;5249:13;5245:27;5235:55;;5286:1;5283;5276:12;5235:55;5322:2;5309:16;5344:4;5367:43;5407:2;5367:43;:::i;:::-;5439:2;5433:9;5451:31;5479:2;5471:6;5451:31;:::i;:::-;5517:18;;;5605:1;5601:10;;;;5593:19;;5589:28;;;5551:15;;;;-1:-1:-1;5629:19:249;;;5626:39;;;5661:1;5658;5651:12;5626:39;5685:11;;;;5705:148;5721:6;5716:3;5713:15;5705:148;;;5787:23;5806:3;5787:23;:::i;:::-;5775:36;;5738:12;;;;5831;;;;5705:148;;;5872:6;-1:-1:-1;;5916:18:249;;5903:32;;-1:-1:-1;;5947:16:249;;;5944:36;;;5976:1;5973;5966:12;5944:36;;5999:63;6054:7;6043:8;6032:9;6028:24;5999:63;:::i;:::-;5989:73;;;4860:1208;;;;;:::o;6073:435::-;6126:3;6164:5;6158:12;6191:6;6186:3;6179:19;6217:4;6246:2;6241:3;6237:12;6230:19;;6283:2;6276:5;6272:14;6304:1;6314:169;6328:6;6325:1;6322:13;6314:169;;;6389:13;;6377:26;;6423:12;;;;6458:15;;;;6350:1;6343:9;6314:169;;;-1:-1:-1;6499:3:249;;6073:435;-1:-1:-1;;;;;6073:435:249:o;6513:261::-;6692:2;6681:9;6674:21;6655:4;6712:56;6764:2;6753:9;6749:18;6741:6;6712:56;:::i;6779:347::-;6844:6;6852;6905:2;6893:9;6884:7;6880:23;6876:32;6873:52;;;6921:1;6918;6911:12;6873:52;6944:29;6963:9;6944:29;:::i;:::-;6934:39;;7023:2;7012:9;7008:18;6995:32;7070:5;7063:13;7056:21;7049:5;7046:32;7036:60;;7092:1;7089;7082:12;7036:60;7115:5;7105:15;;;6779:347;;;;;:::o;7131:260::-;7199:6;7207;7260:2;7248:9;7239:7;7235:23;7231:32;7228:52;;;7276:1;7273;7266:12;7228:52;7299:29;7318:9;7299:29;:::i;:::-;7289:39;;7347:38;7381:2;7370:9;7366:18;7347:38;:::i;:::-;7337:48;;7131:260;;;;;:::o;7396:606::-;7500:6;7508;7516;7524;7532;7585:3;7573:9;7564:7;7560:23;7556:33;7553:53;;;7602:1;7599;7592:12;7553:53;7625:29;7644:9;7625:29;:::i;:::-;7615:39;;7673:38;7707:2;7696:9;7692:18;7673:38;:::i;:::-;7663:48;;7758:2;7747:9;7743:18;7730:32;7720:42;;7809:2;7798:9;7794:18;7781:32;7771:42;;7864:3;7853:9;7849:19;7836:33;7892:18;7884:6;7881:30;7878:50;;;7924:1;7921;7914:12;7878:50;7947:49;7988:7;7979:6;7968:9;7964:22;7947:49;:::i;8419:380::-;8498:1;8494:12;;;;8541;;;8562:61;;8616:4;8608:6;8604:17;8594:27;;8562:61;8669:2;8661:6;8658:14;8638:18;8635:38;8632:161;;8715:10;8710:3;8706:20;8703:1;8696:31;8750:4;8747:1;8740:15;8778:4;8775:1;8768:15;8632:161;;8419:380;;;:::o;9633:127::-;9694:10;9689:3;9685:20;9682:1;9675:31;9725:4;9722:1;9715:15;9749:4;9746:1;9739:15;9765:127;9826:10;9821:3;9817:20;9814:1;9807:31;9857:4;9854:1;9847:15;9881:4;9878:1;9871:15;9897:135;9936:3;9957:17;;;9954:43;;9977:18;;:::i;:::-;-1:-1:-1;10024:1:249;10013:13;;9897:135::o;10856:401::-;11058:2;11040:21;;;11097:2;11077:18;;;11070:30;11136:34;11131:2;11116:18;;11109:62;-1:-1:-1;;;11202:2:249;11187:18;;11180:35;11247:3;11232:19;;10856:401::o;11262:406::-;11464:2;11446:21;;;11503:2;11483:18;;;11476:30;11542:34;11537:2;11522:18;;11515:62;-1:-1:-1;;;11608:2:249;11593:18;;11586:40;11658:3;11643:19;;11262:406::o;11673:125::-;11738:9;;;11759:10;;;11756:36;;;11772:18;;:::i;11803:465::-;12060:2;12049:9;12042:21;12023:4;12086:56;12138:2;12127:9;12123:18;12115:6;12086:56;:::i;:::-;12190:9;12182:6;12178:22;12173:2;12162:9;12158:18;12151:50;12218:44;12255:6;12247;12218:44;:::i;:::-;12210:52;11803:465;-1:-1:-1;;;;;11803:465:249:o;12936:827::-;-1:-1:-1;;;;;13333:15:249;;;13315:34;;13385:15;;13380:2;13365:18;;13358:43;13295:3;13432:2;13417:18;;13410:31;;;13258:4;;13464:57;;13501:19;;13493:6;13464:57;:::i;:::-;13569:9;13561:6;13557:22;13552:2;13541:9;13537:18;13530:50;13603:44;13640:6;13632;13603:44;:::i;:::-;13589:58;;13696:9;13688:6;13684:22;13678:3;13667:9;13663:19;13656:51;13724:33;13750:6;13742;13724:33;:::i;:::-;13716:41;12936:827;-1:-1:-1;;;;;;;;12936:827:249:o;13768:249::-;13837:6;13890:2;13878:9;13869:7;13865:23;13861:32;13858:52;;;13906:1;13903;13896:12;13858:52;13938:9;13932:16;13957:30;13981:5;13957:30;:::i;14022:179::-;14057:3;14099:1;14081:16;14078:23;14075:120;;;14145:1;14142;14139;14124:23;-1:-1:-1;14182:1:249;14176:8;14171:3;14167:18;14075:120;14022:179;:::o;14206:671::-;14245:3;14287:4;14269:16;14266:26;14263:39;;;14206:671;:::o;14263:39::-;14329:2;14323:9;-1:-1:-1;;14394:16:249;14390:25;;14387:1;14323:9;14366:50;14445:4;14439:11;14469:16;14504:18;14575:2;14568:4;14560:6;14556:17;14553:25;14548:2;14540:6;14537:14;14534:45;14531:58;;;14582:5;;;;;14206:671;:::o;14531:58::-;14619:6;14613:4;14609:17;14598:28;;14655:3;14649:10;14682:2;14674:6;14671:14;14668:27;;;14688:5;;;;;;14206:671;:::o;14668:27::-;14772:2;14753:16;14747:4;14743:27;14739:36;14732:4;14723:6;14718:3;14714:16;14710:27;14707:69;14704:82;;;14779:5;;;;;;14206:671;:::o;14704:82::-;14795:57;14846:4;14837:6;14829;14825:19;14821:30;14815:4;14795:57;:::i;:::-;-1:-1:-1;14868:3:249;;14206:671;-1:-1:-1;;;;;14206:671:249:o;15303:404::-;15505:2;15487:21;;;15544:2;15524:18;;;15517:30;15583:34;15578:2;15563:18;;15556:62;-1:-1:-1;;;15649:2:249;15634:18;;15627:38;15697:3;15682:19;;15303:404::o;15712:561::-;-1:-1:-1;;;;;16009:15:249;;;15991:34;;16061:15;;16056:2;16041:18;;16034:43;16108:2;16093:18;;16086:34;;;16151:2;16136:18;;16129:34;;;15971:3;16194;16179:19;;16172:32;;;15934:4;;16221:46;;16247:19;;16239:6;16221:46;:::i;:::-;16213:54;15712:561;-1:-1:-1;;;;;;;15712:561:249:o",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._",
    "events": {
      "ApprovalForAll(address,address,bool)": {
        "details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
      },
      "TransferBatch(address,address,address,uint256[],uint256[])": {
        "details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
      },
      "TransferSingle(address,address,address,uint256,uint256)": {
        "details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
      },
      "URI(string,uint256)": {
        "details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
      }
    },
    "kind": "dev",
    "methods": {
      "balanceOf(address,uint256)": {
        "details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
      },
      "balanceOfBatch(address[],uint256[])": {
        "details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
      },
      "constructor": {
        "details": "See {_setURI}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC1155-isApprovedForAll}."
      },
      "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
        "details": "See {IERC1155-safeBatchTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,uint256,bytes)": {
        "details": "See {IERC1155-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC1155-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "uri(uint256)": {
        "details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
      }
    },
    "version": 1
  },
  "offset": [
    555,
    15275
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0xF5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0xBC1 JUMP JUMPDEST PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0xC04 JUMP JUMPDEST PUSH2 0x226 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0xE8 PUSH2 0xE3 CALLDATASIZE PUSH1 0x4 PUSH2 0xC28 JUMP JUMPDEST PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xC87 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x103 CALLDATASIZE PUSH1 0x4 PUSH2 0xDE6 JUMP JUMPDEST PUSH2 0x30A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11D PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0xE90 JUMP JUMPDEST PUSH2 0x3A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xF96 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0xFA9 JUMP JUMPDEST PUSH2 0x4CB JUMP JUMPDEST PUSH2 0xC5 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0xFE5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0x1018 JUMP JUMPDEST PUSH2 0x4DA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x257 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x220 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x220 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0x107D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0x107D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x326 JUMPI POP PUSH2 0x326 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x38D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x39A DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x561 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x406 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x422 JUMPI PUSH2 0x422 PUSH2 0xC9A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x44B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x4C3 JUMPI PUSH2 0x496 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x46F JUMPI PUSH2 0x46F PUSH2 0x10B7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x489 JUMPI PUSH2 0x489 PUSH2 0x10B7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x18C JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4A8 JUMPI PUSH2 0x4A8 PUSH2 0x10B7 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x4BC DUP2 PUSH2 0x10E3 JUMP JUMPDEST SWAP1 POP PUSH2 0x451 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x4D6 CALLER DUP4 DUP4 PUSH2 0x73E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x4F6 JUMPI POP PUSH2 0x4F6 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x554 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x39A DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x81E JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x5C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x5E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x10FC JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x6D0 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x60A JUMPI PUSH2 0x60A PUSH2 0x10B7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x628 JUMPI PUSH2 0x628 PUSH2 0x10B7 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x678 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1141 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6B5 SWAP1 DUP5 SWAP1 PUSH2 0x118B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x6C9 SWAP1 PUSH2 0x10E3 JUMP JUMPDEST SWAP1 POP PUSH2 0x5ED JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x720 SWAP3 SWAP2 SWAP1 PUSH2 0x119E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x736 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x944 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x7B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x844 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x10FC JUMP JUMPDEST CALLER PUSH2 0x85D DUP2 DUP8 DUP8 PUSH2 0x854 DUP9 PUSH2 0xA9F JUMP JUMPDEST PUSH2 0x39A DUP9 PUSH2 0xA9F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0x89E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1141 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP8 DUP6 SUB SWAP1 SSTORE SWAP1 DUP9 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0x8DB SWAP1 DUP5 SWAP1 PUSH2 0x118B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND SWAP3 DUP11 DUP3 AND SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x93B DUP3 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xAEA JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x736 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x988 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x11CC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x9C3 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x9C0 SWAP2 DUP2 ADD SWAP1 PUSH2 0x122A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xA6F JUMPI PUSH2 0x9CF PUSH2 0x1247 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0xA08 JUMPI POP PUSH2 0x9E3 PUSH2 0x1263 JUMP JUMPDEST DUP1 PUSH2 0x9EE JUMPI POP PUSH2 0xA0A JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0xC87 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x93B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x12ED JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xAD9 JUMPI PUSH2 0xAD9 PUSH2 0x10B7 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x736 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xB2E SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1335 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xB69 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xB66 SWAP2 DUP2 ADD SWAP1 PUSH2 0x122A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB75 JUMPI PUSH2 0x9CF PUSH2 0x1247 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x93B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x12ED JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBDD DUP4 PUSH2 0xBA5 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xC01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC21 DUP2 PUSH2 0xBEB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC67 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xC4B JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xC21 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC41 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xCD6 JUMPI PUSH2 0xCD6 PUSH2 0xC9A JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xCF7 JUMPI PUSH2 0xCF7 PUSH2 0xC9A JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xD1F DUP3 PUSH2 0xCDD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD2C DUP3 DUP3 PUSH2 0xCB0 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0xD4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xD67 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xD50 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD9D JUMPI PUSH2 0xD9D PUSH2 0xC9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDB4 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0xCB0 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xDC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xDFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE07 DUP7 PUSH2 0xBA5 JUMP JUMPDEST SWAP5 POP PUSH2 0xE15 PUSH1 0x20 DUP8 ADD PUSH2 0xBA5 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE3E DUP10 DUP4 DUP11 ADD PUSH2 0xD01 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xE54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE60 DUP10 DUP4 DUP11 ADD PUSH2 0xD01 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xE76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE83 DUP9 DUP3 DUP10 ADD PUSH2 0xD72 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xEBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xECF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xEDC DUP3 PUSH2 0xCDD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEE9 DUP3 DUP3 PUSH2 0xCB0 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0xF09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0xF2E JUMPI PUSH2 0xF1F DUP7 PUSH2 0xBA5 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0xF0E JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0xF44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF51 DUP6 DUP3 DUP7 ADD PUSH2 0xD01 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF8B JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xF6F JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xC21 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF5B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFC5 DUP4 PUSH2 0xBA5 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xFDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1001 DUP4 PUSH2 0xBA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x100F PUSH1 0x20 DUP5 ADD PUSH2 0xBA5 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1030 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1039 DUP7 PUSH2 0xBA5 JUMP JUMPDEST SWAP5 POP PUSH2 0x1047 PUSH1 0x20 DUP8 ADD PUSH2 0xBA5 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1071 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE83 DUP9 DUP3 DUP10 ADD PUSH2 0xD72 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1091 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x10B1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x10F5 JUMPI PUSH2 0x10F5 PUSH2 0x10CD JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x220 JUMPI PUSH2 0x220 PUSH2 0x10CD JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x11B1 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xF5B JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x11C3 DUP2 DUP6 PUSH2 0xF5B JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x11F8 SWAP1 DUP4 ADD DUP7 PUSH2 0xF5B JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x120A DUP2 DUP7 PUSH2 0xF5B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x121E DUP2 DUP6 PUSH2 0xC41 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x123C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xC21 DUP2 PUSH2 0xBEB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x1260 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x1271 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x12A1 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x12B9 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x12D3 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x12E2 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0xCB0 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x136F SWAP1 DUP4 ADD DUP5 PUSH2 0xC41 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT 0xF MLOAD MULMOD 0xE8 0xBD 0x2A 0xDD GASPRICE 0xB7 SWAP3 0xB4 GASLIMIT LOG4 0xDE 0xCB 0x5E PUSH6 0x2D3B743E8A8C 0x23 PUSH14 0xEBAE9897CA9764736F6C63430008 ISZERO STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        555,
        15275
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "5": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "CALLVALUE",
      "path": "152"
    },
    "6": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "DUP1",
      "path": "152"
    },
    "7": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "ISZERO",
      "path": "152"
    },
    "8": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "JUMPI",
      "path": "152"
    },
    "12": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "DUP1",
      "path": "152"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "REVERT",
      "path": "152"
    },
    "16": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "17": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "POP",
      "path": "152"
    },
    "18": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "CALLDATASIZE",
      "path": "152"
    },
    "21": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "LT",
      "path": "152"
    },
    "22": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x87"
    },
    "25": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "JUMPI",
      "path": "152"
    },
    "26": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "CALLDATALOAD",
      "path": "152"
    },
    "29": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "SHR",
      "path": "152"
    },
    "32": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "DUP1",
      "path": "152"
    },
    "33": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "PUSH4",
      "path": "152",
      "value": "0x4E1273F4"
    },
    "38": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "GT",
      "path": "152"
    },
    "39": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x5B"
    },
    "42": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "JUMPI",
      "path": "152"
    },
    "43": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "DUP1",
      "path": "152"
    },
    "44": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "PUSH4",
      "path": "152",
      "value": "0x4E1273F4"
    },
    "49": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "EQ",
      "path": "152"
    },
    "50": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x10A"
    },
    "53": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "JUMPI",
      "path": "152"
    },
    "54": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "DUP1",
      "path": "152"
    },
    "55": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "PUSH4",
      "path": "152",
      "value": "0xA22CB465"
    },
    "60": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "EQ",
      "path": "152"
    },
    "61": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x12A"
    },
    "64": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "JUMPI",
      "path": "152"
    },
    "65": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "DUP1",
      "path": "152"
    },
    "66": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "PUSH4",
      "path": "152",
      "value": "0xE985E9C5"
    },
    "71": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "EQ",
      "path": "152"
    },
    "72": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x13D"
    },
    "75": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "JUMPI",
      "path": "152"
    },
    "76": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "DUP1",
      "path": "152"
    },
    "77": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "PUSH4",
      "path": "152",
      "value": "0xF242432A"
    },
    "82": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "EQ",
      "path": "152"
    },
    "83": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x179"
    },
    "86": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "JUMPI",
      "path": "152"
    },
    "87": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x0"
    },
    "89": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "DUP1",
      "path": "152"
    },
    "90": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "REVERT",
      "path": "152"
    },
    "91": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "92": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "DUP1",
      "path": "152"
    },
    "93": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "PUSH3",
      "path": "152",
      "value": "0xFDD58E"
    },
    "97": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "EQ",
      "path": "152"
    },
    "98": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x8C"
    },
    "101": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "JUMPI",
      "path": "152"
    },
    "102": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "DUP1",
      "path": "152"
    },
    "103": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "PUSH4",
      "path": "152",
      "value": "0x1FFC9A7"
    },
    "108": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "EQ",
      "path": "152"
    },
    "109": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0xB2"
    },
    "112": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "JUMPI",
      "path": "152"
    },
    "113": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "DUP1",
      "path": "152"
    },
    "114": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "PUSH4",
      "path": "152",
      "value": "0xE89341C"
    },
    "119": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "EQ",
      "path": "152"
    },
    "120": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0xD5"
    },
    "123": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "JUMPI",
      "path": "152"
    },
    "124": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "DUP1",
      "path": "152"
    },
    "125": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "PUSH4",
      "path": "152",
      "value": "0x2EB2C2D6"
    },
    "130": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "EQ",
      "path": "152"
    },
    "131": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0xF5"
    },
    "134": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "JUMPI",
      "path": "152"
    },
    "135": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "136": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x0"
    },
    "138": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "DUP1",
      "path": "152"
    },
    "139": {
      "first_revert": true,
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "REVERT",
      "path": "152"
    },
    "140": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "141": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x9F"
    },
    "144": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x9A"
    },
    "147": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "CALLDATASIZE",
      "path": "152"
    },
    "148": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x4"
    },
    "150": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0xBC1"
    },
    "153": {
      "fn": "ERC1155.balanceOf",
      "jump": "i",
      "offset": [
        2170,
        2398
      ],
      "op": "JUMP",
      "path": "152"
    },
    "154": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "155": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x18C"
    },
    "158": {
      "fn": "ERC1155.balanceOf",
      "jump": "i",
      "offset": [
        2170,
        2398
      ],
      "op": "JUMP",
      "path": "152"
    },
    "159": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "160": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x40"
    },
    "162": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "163": {
      "op": "SWAP1"
    },
    "164": {
      "op": "DUP2"
    },
    "165": {
      "op": "MSTORE"
    },
    "166": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "168": {
      "op": "ADD"
    },
    "169": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "170": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x40"
    },
    "172": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "173": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "DUP1",
      "path": "152"
    },
    "174": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "SWAP2",
      "path": "152"
    },
    "175": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "SUB",
      "path": "152"
    },
    "176": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "177": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "RETURN",
      "path": "152"
    },
    "178": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1221,
        1526
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "179": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1221,
        1526
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0xC5"
    },
    "182": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1221,
        1526
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0xC0"
    },
    "185": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1221,
        1526
      ],
      "op": "CALLDATASIZE",
      "path": "152"
    },
    "186": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1221,
        1526
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x4"
    },
    "188": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1221,
        1526
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0xC04"
    },
    "191": {
      "fn": "ERC1155.supportsInterface",
      "jump": "i",
      "offset": [
        1221,
        1526
      ],
      "op": "JUMP",
      "path": "152"
    },
    "192": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1221,
        1526
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "193": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1221,
        1526
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x226"
    },
    "196": {
      "fn": "ERC1155.supportsInterface",
      "jump": "i",
      "offset": [
        1221,
        1526
      ],
      "op": "JUMP",
      "path": "152"
    },
    "197": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1221,
        1526
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "198": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1221,
        1526
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x40"
    },
    "200": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1221,
        1526
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "201": {
      "op": "SWAP1"
    },
    "202": {
      "op": "ISZERO"
    },
    "203": {
      "op": "ISZERO"
    },
    "204": {
      "op": "DUP2"
    },
    "205": {
      "op": "MSTORE"
    },
    "206": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "208": {
      "op": "ADD"
    },
    "209": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1221,
        1526
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0xA9"
    },
    "212": {
      "op": "JUMP"
    },
    "213": {
      "fn": "ERC1155.uri",
      "offset": [
        1925,
        2028
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "214": {
      "fn": "ERC1155.uri",
      "offset": [
        1925,
        2028
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0xE8"
    },
    "217": {
      "fn": "ERC1155.uri",
      "offset": [
        1925,
        2028
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0xE3"
    },
    "220": {
      "fn": "ERC1155.uri",
      "offset": [
        1925,
        2028
      ],
      "op": "CALLDATASIZE",
      "path": "152"
    },
    "221": {
      "fn": "ERC1155.uri",
      "offset": [
        1925,
        2028
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x4"
    },
    "223": {
      "fn": "ERC1155.uri",
      "offset": [
        1925,
        2028
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0xC28"
    },
    "226": {
      "fn": "ERC1155.uri",
      "jump": "i",
      "offset": [
        1925,
        2028
      ],
      "op": "JUMP",
      "path": "152"
    },
    "227": {
      "fn": "ERC1155.uri",
      "offset": [
        1925,
        2028
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "228": {
      "fn": "ERC1155.uri",
      "offset": [
        1925,
        2028
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x276"
    },
    "231": {
      "fn": "ERC1155.uri",
      "jump": "i",
      "offset": [
        1925,
        2028
      ],
      "op": "JUMP",
      "path": "152"
    },
    "232": {
      "fn": "ERC1155.uri",
      "offset": [
        1925,
        2028
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "233": {
      "fn": "ERC1155.uri",
      "offset": [
        1925,
        2028
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x40"
    },
    "235": {
      "fn": "ERC1155.uri",
      "offset": [
        1925,
        2028
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "236": {
      "fn": "ERC1155.uri",
      "offset": [
        1925,
        2028
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0xA9"
    },
    "239": {
      "fn": "ERC1155.uri",
      "offset": [
        1925,
        2028
      ],
      "op": "SWAP2",
      "path": "152"
    },
    "240": {
      "fn": "ERC1155.uri",
      "offset": [
        1925,
        2028
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "241": {
      "fn": "ERC1155.uri",
      "offset": [
        1925,
        2028
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0xC87"
    },
    "244": {
      "fn": "ERC1155.uri",
      "jump": "i",
      "offset": [
        1925,
        2028
      ],
      "op": "JUMP",
      "path": "152"
    },
    "245": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4045,
        4475
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "246": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4045,
        4475
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x108"
    },
    "249": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4045,
        4475
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x103"
    },
    "252": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4045,
        4475
      ],
      "op": "CALLDATASIZE",
      "path": "152"
    },
    "253": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4045,
        4475
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x4"
    },
    "255": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4045,
        4475
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0xDE6"
    },
    "258": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        4045,
        4475
      ],
      "op": "JUMP",
      "path": "152"
    },
    "259": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4045,
        4475
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "260": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4045,
        4475
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x30A"
    },
    "263": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        4045,
        4475
      ],
      "op": "JUMP",
      "path": "152"
    },
    "264": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4045,
        4475
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "265": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4045,
        4475
      ],
      "op": "STOP",
      "path": "152"
    },
    "266": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2555,
        3063
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "267": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2555,
        3063
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x11D"
    },
    "270": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2555,
        3063
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x118"
    },
    "273": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2555,
        3063
      ],
      "op": "CALLDATASIZE",
      "path": "152"
    },
    "274": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2555,
        3063
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x4"
    },
    "276": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2555,
        3063
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0xE90"
    },
    "279": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2555,
        3063
      ],
      "op": "JUMP",
      "path": "152"
    },
    "280": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2555,
        3063
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "281": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2555,
        3063
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x3A1"
    },
    "284": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2555,
        3063
      ],
      "op": "JUMP",
      "path": "152"
    },
    "285": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2555,
        3063
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "286": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2555,
        3063
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x40"
    },
    "288": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2555,
        3063
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "289": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2555,
        3063
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0xA9"
    },
    "292": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2555,
        3063
      ],
      "op": "SWAP2",
      "path": "152"
    },
    "293": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2555,
        3063
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "294": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2555,
        3063
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0xF96"
    },
    "297": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2555,
        3063
      ],
      "op": "JUMP",
      "path": "152"
    },
    "298": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3131,
        3284
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "299": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3131,
        3284
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x108"
    },
    "302": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3131,
        3284
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x138"
    },
    "305": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3131,
        3284
      ],
      "op": "CALLDATASIZE",
      "path": "152"
    },
    "306": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3131,
        3284
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x4"
    },
    "308": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3131,
        3284
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0xFA9"
    },
    "311": {
      "fn": "ERC1155.setApprovalForAll",
      "jump": "i",
      "offset": [
        3131,
        3284
      ],
      "op": "JUMP",
      "path": "152"
    },
    "312": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3131,
        3284
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "313": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3131,
        3284
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x4CB"
    },
    "316": {
      "fn": "ERC1155.setApprovalForAll",
      "jump": "i",
      "offset": [
        3131,
        3284
      ],
      "op": "JUMP",
      "path": "152"
    },
    "317": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3351,
        3517
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "318": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3351,
        3517
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0xC5"
    },
    "321": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3351,
        3517
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x14B"
    },
    "324": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3351,
        3517
      ],
      "op": "CALLDATASIZE",
      "path": "152"
    },
    "325": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3351,
        3517
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x4"
    },
    "327": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3351,
        3517
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0xFE5"
    },
    "330": {
      "fn": "ERC1155.isApprovedForAll",
      "jump": "i",
      "offset": [
        3351,
        3517
      ],
      "op": "JUMP",
      "path": "152"
    },
    "331": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3351,
        3517
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "336": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "338": {
      "op": "SHL"
    },
    "339": {
      "op": "SUB"
    },
    "340": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3500
      ],
      "op": "SWAP2",
      "path": "152",
      "statement": 0
    },
    "341": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3500
      ],
      "op": "DUP3",
      "path": "152"
    },
    "342": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3500
      ],
      "op": "AND",
      "path": "152"
    },
    "343": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3450,
        3454
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x0"
    },
    "345": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3500
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "346": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3500
      ],
      "op": "DUP2",
      "path": "152"
    },
    "347": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3500
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "348": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3491
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x1"
    },
    "350": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3500
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x20"
    },
    "352": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3500
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "353": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3500
      ],
      "op": "DUP2",
      "path": "152"
    },
    "354": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3500
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "355": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3500
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x40"
    },
    "357": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3500
      ],
      "op": "DUP1",
      "path": "152"
    },
    "358": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3500
      ],
      "op": "DUP4",
      "path": "152"
    },
    "359": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3500
      ],
      "op": "KECCAK256",
      "path": "152"
    },
    "360": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3510
      ],
      "op": "SWAP4",
      "path": "152"
    },
    "361": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3510
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "362": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3510
      ],
      "op": "SWAP5",
      "path": "152"
    },
    "363": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3510
      ],
      "op": "AND",
      "path": "152"
    },
    "364": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3510
      ],
      "op": "DUP3",
      "path": "152"
    },
    "365": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3510
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "366": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3510
      ],
      "op": "SWAP2",
      "path": "152"
    },
    "367": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3510
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "368": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3510
      ],
      "op": "SWAP2",
      "path": "152"
    },
    "369": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3510
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "370": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3510
      ],
      "op": "KECCAK256",
      "path": "152"
    },
    "371": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3510
      ],
      "op": "SLOAD",
      "path": "152"
    },
    "372": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3510
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0xFF"
    },
    "374": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3510
      ],
      "op": "AND",
      "path": "152"
    },
    "375": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3510
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "376": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3351,
        3517
      ],
      "op": "JUMP",
      "path": "152"
    },
    "377": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3584,
        3973
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "378": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3584,
        3973
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x108"
    },
    "381": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3584,
        3973
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x187"
    },
    "384": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3584,
        3973
      ],
      "op": "CALLDATASIZE",
      "path": "152"
    },
    "385": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3584,
        3973
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x4"
    },
    "387": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3584,
        3973
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x1018"
    },
    "390": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        3584,
        3973
      ],
      "op": "JUMP",
      "path": "152"
    },
    "391": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3584,
        3973
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "392": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3584,
        3973
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x4DA"
    },
    "395": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        3584,
        3973
      ],
      "op": "JUMP",
      "path": "152"
    },
    "396": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "397": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2256,
        2263
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x0"
    },
    "399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "403": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "405": {
      "op": "SHL"
    },
    "406": {
      "op": "SUB"
    },
    "407": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2283,
        2304
      ],
      "op": "DUP4",
      "path": "152",
      "statement": 1
    },
    "408": {
      "branch": 41,
      "fn": "ERC1155.balanceOf",
      "offset": [
        2283,
        2304
      ],
      "op": "AND",
      "path": "152"
    },
    "409": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2275,
        2352
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x1FD"
    },
    "412": {
      "branch": 41,
      "fn": "ERC1155.balanceOf",
      "offset": [
        2275,
        2352
      ],
      "op": "JUMPI",
      "path": "152"
    },
    "413": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2275,
        2352
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x40"
    },
    "415": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2275,
        2352
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "416": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "420": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "422": {
      "op": "SHL"
    },
    "423": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2275,
        2352
      ],
      "op": "DUP2",
      "path": "152"
    },
    "424": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2275,
        2352
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "425": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "427": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2275,
        2352
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x4"
    },
    "429": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2275,
        2352
      ],
      "op": "DUP3",
      "path": "152"
    },
    "430": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2275,
        2352
      ],
      "op": "ADD",
      "path": "152"
    },
    "431": {
      "op": "MSTORE"
    },
    "432": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "434": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "436": {
      "op": "DUP3"
    },
    "437": {
      "op": "ADD"
    },
    "438": {
      "op": "MSTORE"
    },
    "439": {
      "op": "PUSH32",
      "value": "0x455243313135353A2062616C616E636520717565727920666F7220746865207A"
    },
    "472": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "474": {
      "op": "DUP3"
    },
    "475": {
      "op": "ADD"
    },
    "476": {
      "op": "MSTORE"
    },
    "477": {
      "op": "PUSH11",
      "value": "0x65726F2061646472657373"
    },
    "489": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "491": {
      "op": "SHL"
    },
    "492": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "494": {
      "op": "DUP3"
    },
    "495": {
      "op": "ADD"
    },
    "496": {
      "op": "MSTORE"
    },
    "497": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "499": {
      "op": "ADD"
    },
    "500": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2275,
        2352
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "501": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2275,
        2352
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x40"
    },
    "503": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2275,
        2352
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "504": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2275,
        2352
      ],
      "op": "DUP1",
      "path": "152"
    },
    "505": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2275,
        2352
      ],
      "op": "SWAP2",
      "path": "152"
    },
    "506": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2275,
        2352
      ],
      "op": "SUB",
      "path": "152"
    },
    "507": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2275,
        2352
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "508": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2275,
        2352
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "152"
    },
    "509": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2275,
        2352
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "510": {
      "op": "POP"
    },
    "511": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2378
      ],
      "op": "PUSH1",
      "path": "152",
      "statement": 2,
      "value": "0x0"
    },
    "513": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2382
      ],
      "op": "DUP2",
      "path": "152"
    },
    "514": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2382
      ],
      "op": "DUP2",
      "path": "152"
    },
    "515": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2382
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "516": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2382
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x20"
    },
    "518": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2382
      ],
      "op": "DUP2",
      "path": "152"
    },
    "519": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2382
      ],
      "op": "DUP2",
      "path": "152"
    },
    "520": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2382
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "521": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2382
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x40"
    },
    "523": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2382
      ],
      "op": "DUP1",
      "path": "152"
    },
    "524": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2382
      ],
      "op": "DUP4",
      "path": "152"
    },
    "525": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2382
      ],
      "op": "KECCAK256",
      "path": "152"
    },
    "526": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "528": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "530": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "532": {
      "op": "SHL"
    },
    "533": {
      "op": "SUB"
    },
    "534": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2391
      ],
      "op": "DUP7",
      "path": "152"
    },
    "535": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2391
      ],
      "op": "AND",
      "path": "152"
    },
    "536": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2391
      ],
      "op": "DUP5",
      "path": "152"
    },
    "537": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2391
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "538": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2391
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "539": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2391
      ],
      "op": "SWAP2",
      "path": "152"
    },
    "540": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2391
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "541": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2391
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "542": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2391
      ],
      "op": "KECCAK256",
      "path": "152"
    },
    "543": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2391
      ],
      "op": "SLOAD",
      "path": "152"
    },
    "544": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "545": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "SWAP3",
      "path": "152"
    },
    "546": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "SWAP2",
      "path": "152"
    },
    "547": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "POP",
      "path": "152"
    },
    "548": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "POP",
      "path": "152"
    },
    "549": {
      "fn": "ERC1155.balanceOf",
      "jump": "o",
      "offset": [
        2170,
        2398
      ],
      "op": "JUMP",
      "path": "152"
    },
    "550": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1221,
        1526
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "551": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1323,
        1327
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x0"
    },
    "553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "557": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "559": {
      "op": "SHL"
    },
    "560": {
      "op": "SUB"
    },
    "561": {
      "op": "NOT"
    },
    "562": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1358,
        1399
      ],
      "op": "DUP3",
      "path": "152",
      "statement": 3
    },
    "563": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1358,
        1399
      ],
      "op": "AND",
      "path": "152"
    },
    "564": {
      "op": "PUSH4",
      "value": "0x6CDB3D13"
    },
    "569": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "571": {
      "op": "SHL"
    },
    "572": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1358,
        1399
      ],
      "op": "EQ",
      "path": "152"
    },
    "573": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1358,
        1399
      ],
      "op": "DUP1",
      "path": "152"
    },
    "574": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1358,
        1467
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x257"
    },
    "577": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1358,
        1467
      ],
      "op": "JUMPI",
      "path": "152"
    },
    "578": {
      "op": "POP"
    },
    "579": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "583": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "585": {
      "op": "SHL"
    },
    "586": {
      "op": "SUB"
    },
    "587": {
      "op": "NOT"
    },
    "588": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1415,
        1467
      ],
      "op": "DUP3",
      "path": "152"
    },
    "589": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1415,
        1467
      ],
      "op": "AND",
      "path": "152"
    },
    "590": {
      "op": "PUSH4",
      "value": "0x3A24D07"
    },
    "595": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "597": {
      "op": "SHL"
    },
    "598": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1415,
        1467
      ],
      "op": "EQ",
      "path": "152"
    },
    "599": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1358,
        1467
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "600": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1358,
        1519
      ],
      "op": "DUP1",
      "path": "152"
    },
    "601": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1358,
        1519
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x220"
    },
    "604": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1358,
        1519
      ],
      "op": "JUMPI",
      "path": "152"
    },
    "605": {
      "op": "POP"
    },
    "606": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "611": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "613": {
      "op": "SHL"
    },
    "614": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "618": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "620": {
      "op": "SHL"
    },
    "621": {
      "op": "SUB"
    },
    "622": {
      "op": "NOT"
    },
    "623": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "DUP4",
      "path": "216",
      "statement": 4
    },
    "624": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "AND",
      "path": "216"
    },
    "625": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "EQ",
      "path": "216"
    },
    "626": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1483,
        1519
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x220"
    },
    "629": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        829,
        984
      ],
      "op": "JUMP",
      "path": "216"
    },
    "630": {
      "fn": "ERC1155.uri",
      "offset": [
        1925,
        2028
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "631": {
      "fn": "ERC1155.uri",
      "offset": [
        1985,
        1998
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x60"
    },
    "633": {
      "fn": "ERC1155.uri",
      "offset": [
        2017,
        2021
      ],
      "op": "PUSH1",
      "path": "152",
      "statement": 5,
      "value": "0x2"
    },
    "635": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP1",
      "path": "152"
    },
    "636": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SLOAD",
      "path": "152"
    },
    "637": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x285"
    },
    "640": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "641": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x107D"
    },
    "644": {
      "fn": "ERC1155.uri",
      "jump": "i",
      "offset": [
        2010,
        2021
      ],
      "op": "JUMP",
      "path": "152"
    },
    "645": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "646": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP1",
      "path": "152"
    },
    "647": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x1F"
    },
    "649": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "ADD",
      "path": "152"
    },
    "650": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x20"
    },
    "652": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP1",
      "path": "152"
    },
    "653": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SWAP2",
      "path": "152"
    },
    "654": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DIV",
      "path": "152"
    },
    "655": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "MUL",
      "path": "152"
    },
    "656": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x20"
    },
    "658": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "ADD",
      "path": "152"
    },
    "659": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x40"
    },
    "661": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "662": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "663": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP2",
      "path": "152"
    },
    "664": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "ADD",
      "path": "152"
    },
    "665": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x40"
    },
    "667": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "668": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP1",
      "path": "152"
    },
    "669": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SWAP3",
      "path": "152"
    },
    "670": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SWAP2",
      "path": "152"
    },
    "671": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "672": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP2",
      "path": "152"
    },
    "673": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP2",
      "path": "152"
    },
    "674": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "675": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x20"
    },
    "677": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "ADD",
      "path": "152"
    },
    "678": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP3",
      "path": "152"
    },
    "679": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP1",
      "path": "152"
    },
    "680": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SLOAD",
      "path": "152"
    },
    "681": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x2B1"
    },
    "684": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "685": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x107D"
    },
    "688": {
      "fn": "ERC1155.uri",
      "jump": "i",
      "offset": [
        2010,
        2021
      ],
      "op": "JUMP",
      "path": "152"
    },
    "689": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "690": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP1",
      "path": "152"
    },
    "691": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "ISZERO",
      "path": "152"
    },
    "692": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x2FE"
    },
    "695": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "JUMPI",
      "path": "152"
    },
    "696": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP1",
      "path": "152"
    },
    "697": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x1F"
    },
    "699": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "LT",
      "path": "152"
    },
    "700": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x2D3"
    },
    "703": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "JUMPI",
      "path": "152"
    },
    "704": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x100"
    },
    "707": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP1",
      "path": "152"
    },
    "708": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP4",
      "path": "152"
    },
    "709": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SLOAD",
      "path": "152"
    },
    "710": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DIV",
      "path": "152"
    },
    "711": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "MUL",
      "path": "152"
    },
    "712": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP4",
      "path": "152"
    },
    "713": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "714": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SWAP2",
      "path": "152"
    },
    "715": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x20"
    },
    "717": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "ADD",
      "path": "152"
    },
    "718": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SWAP2",
      "path": "152"
    },
    "719": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x2FE"
    },
    "722": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "JUMP",
      "path": "152"
    },
    "723": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "724": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP3",
      "path": "152"
    },
    "725": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "ADD",
      "path": "152"
    },
    "726": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SWAP2",
      "path": "152"
    },
    "727": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "728": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x0"
    },
    "730": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "731": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x20"
    },
    "733": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x0"
    },
    "735": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "KECCAK256",
      "path": "152"
    },
    "736": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "737": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "738": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP2",
      "path": "152"
    },
    "739": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SLOAD",
      "path": "152"
    },
    "740": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP2",
      "path": "152"
    },
    "741": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "742": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "743": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x1"
    },
    "745": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "ADD",
      "path": "152"
    },
    "746": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "747": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x20"
    },
    "749": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "ADD",
      "path": "152"
    },
    "750": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP1",
      "path": "152"
    },
    "751": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP4",
      "path": "152"
    },
    "752": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "GT",
      "path": "152"
    },
    "753": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x2E1"
    },
    "756": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "JUMPI",
      "path": "152"
    },
    "757": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP3",
      "path": "152"
    },
    "758": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "759": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SUB",
      "path": "152"
    },
    "760": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x1F"
    },
    "762": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "AND",
      "path": "152"
    },
    "763": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP3",
      "path": "152"
    },
    "764": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "ADD",
      "path": "152"
    },
    "765": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SWAP2",
      "path": "152"
    },
    "766": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "767": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "POP",
      "path": "152"
    },
    "768": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "POP",
      "path": "152"
    },
    "769": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "POP",
      "path": "152"
    },
    "770": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "POP",
      "path": "152"
    },
    "771": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "POP",
      "path": "152"
    },
    "772": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "773": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "POP",
      "path": "152"
    },
    "774": {
      "fn": "ERC1155.uri",
      "offset": [
        1925,
        2028
      ],
      "op": "SWAP2",
      "path": "152"
    },
    "775": {
      "fn": "ERC1155.uri",
      "offset": [
        1925,
        2028
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "776": {
      "fn": "ERC1155.uri",
      "offset": [
        1925,
        2028
      ],
      "op": "POP",
      "path": "152"
    },
    "777": {
      "fn": "ERC1155.uri",
      "jump": "o",
      "offset": [
        1925,
        2028
      ],
      "op": "JUMP",
      "path": "152"
    },
    "778": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4045,
        4475
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "779": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "781": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "783": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "785": {
      "op": "SHL"
    },
    "786": {
      "op": "SUB"
    },
    "787": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4270,
        4290
      ],
      "op": "DUP6",
      "path": "152",
      "statement": 6
    },
    "788": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4270,
        4290
      ],
      "op": "AND",
      "path": "152"
    },
    "789": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "202",
      "statement": 7
    },
    "790": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4270,
        4290
      ],
      "op": "EQ",
      "path": "152"
    },
    "791": {
      "branch": 42,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4270,
        4290
      ],
      "op": "DUP1",
      "path": "152"
    },
    "792": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4270,
        4330
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x326"
    },
    "795": {
      "branch": 42,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4270,
        4330
      ],
      "op": "JUMPI",
      "path": "152"
    },
    "796": {
      "op": "POP"
    },
    "797": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4294,
        4330
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x326"
    },
    "800": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4311,
        4315
      ],
      "op": "DUP6",
      "path": "152"
    },
    "801": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "202"
    },
    "802": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3351,
        3517
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x14B"
    },
    "805": {
      "fn": "ERC1155.isApprovedForAll",
      "jump": "i",
      "offset": [
        3351,
        3517
      ],
      "op": "JUMP",
      "path": "152"
    },
    "806": {
      "branch": 43,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4294,
        4330
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "807": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4249,
        4406
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x38D"
    },
    "810": {
      "branch": 43,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4249,
        4406
      ],
      "op": "JUMPI",
      "path": "152"
    },
    "811": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4249,
        4406
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x40"
    },
    "813": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4249,
        4406
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "814": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "818": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "820": {
      "op": "SHL"
    },
    "821": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4249,
        4406
      ],
      "op": "DUP2",
      "path": "152"
    },
    "822": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4249,
        4406
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "823": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "825": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4249,
        4406
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x4"
    },
    "827": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4249,
        4406
      ],
      "op": "DUP3",
      "path": "152"
    },
    "828": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4249,
        4406
      ],
      "op": "ADD",
      "path": "152"
    },
    "829": {
      "op": "MSTORE"
    },
    "830": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "832": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "834": {
      "op": "DUP3"
    },
    "835": {
      "op": "ADD"
    },
    "836": {
      "op": "MSTORE"
    },
    "837": {
      "op": "PUSH32",
      "value": "0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420"
    },
    "870": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "872": {
      "op": "DUP3"
    },
    "873": {
      "op": "ADD"
    },
    "874": {
      "op": "MSTORE"
    },
    "875": {
      "op": "PUSH18",
      "value": "0x1BDDDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "894": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "896": {
      "op": "SHL"
    },
    "897": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "899": {
      "op": "DUP3"
    },
    "900": {
      "op": "ADD"
    },
    "901": {
      "op": "MSTORE"
    },
    "902": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "904": {
      "op": "ADD"
    },
    "905": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4249,
        4406
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x1F4"
    },
    "908": {
      "op": "JUMP"
    },
    "909": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4249,
        4406
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "910": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4416,
        4468
      ],
      "op": "PUSH2",
      "path": "152",
      "statement": 8,
      "value": "0x39A"
    },
    "913": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4439,
        4443
      ],
      "op": "DUP6",
      "path": "152"
    },
    "914": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4445,
        4447
      ],
      "op": "DUP6",
      "path": "152"
    },
    "915": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4449,
        4452
      ],
      "op": "DUP6",
      "path": "152"
    },
    "916": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4454,
        4461
      ],
      "op": "DUP6",
      "path": "152"
    },
    "917": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4463,
        4467
      ],
      "op": "DUP6",
      "path": "152"
    },
    "918": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4416,
        4438
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x561"
    },
    "921": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        4416,
        4468
      ],
      "op": "JUMP",
      "path": "152"
    },
    "922": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4416,
        4468
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "923": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4045,
        4475
      ],
      "op": "POP",
      "path": "152"
    },
    "924": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4045,
        4475
      ],
      "op": "POP",
      "path": "152"
    },
    "925": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4045,
        4475
      ],
      "op": "POP",
      "path": "152"
    },
    "926": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4045,
        4475
      ],
      "op": "POP",
      "path": "152"
    },
    "927": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4045,
        4475
      ],
      "op": "POP",
      "path": "152"
    },
    "928": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "o",
      "offset": [
        4045,
        4475
      ],
      "op": "JUMP",
      "path": "152"
    },
    "929": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2555,
        3063
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "930": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2706,
        2722
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x60"
    },
    "932": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2765,
        2768
      ],
      "op": "DUP2",
      "path": "152",
      "statement": 9
    },
    "933": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2765,
        2775
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "934": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2746,
        2754
      ],
      "op": "DUP4",
      "path": "152"
    },
    "935": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2746,
        2761
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "936": {
      "branch": 44,
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2746,
        2775
      ],
      "op": "EQ",
      "path": "152"
    },
    "937": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2738,
        2821
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x406"
    },
    "940": {
      "branch": 44,
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2738,
        2821
      ],
      "op": "JUMPI",
      "path": "152"
    },
    "941": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2738,
        2821
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x40"
    },
    "943": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2738,
        2821
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "944": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "948": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "950": {
      "op": "SHL"
    },
    "951": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2738,
        2821
      ],
      "op": "DUP2",
      "path": "152"
    },
    "952": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2738,
        2821
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "953": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "955": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2738,
        2821
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x4"
    },
    "957": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2738,
        2821
      ],
      "op": "DUP3",
      "path": "152"
    },
    "958": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2738,
        2821
      ],
      "op": "ADD",
      "path": "152"
    },
    "959": {
      "op": "MSTORE"
    },
    "960": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "962": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "964": {
      "op": "DUP3"
    },
    "965": {
      "op": "ADD"
    },
    "966": {
      "op": "MSTORE"
    },
    "967": {
      "op": "PUSH32",
      "value": "0x455243313135353A206163636F756E747320616E6420696473206C656E677468"
    },
    "1000": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1002": {
      "op": "DUP3"
    },
    "1003": {
      "op": "ADD"
    },
    "1004": {
      "op": "MSTORE"
    },
    "1005": {
      "op": "PUSH9",
      "value": "0x40DAD2E6DAC2E8C6D"
    },
    "1015": {
      "op": "PUSH1",
      "value": "0xBB"
    },
    "1017": {
      "op": "SHL"
    },
    "1018": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1020": {
      "op": "DUP3"
    },
    "1021": {
      "op": "ADD"
    },
    "1022": {
      "op": "MSTORE"
    },
    "1023": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1025": {
      "op": "ADD"
    },
    "1026": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2738,
        2821
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x1F4"
    },
    "1029": {
      "op": "JUMP"
    },
    "1030": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2738,
        2821
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "1031": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2832,
        2862
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x0"
    },
    "1033": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2879,
        2887
      ],
      "op": "DUP4",
      "path": "152"
    },
    "1034": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2879,
        2894
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "1035": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "PUSH8",
      "path": "152",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1044": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "DUP2",
      "path": "152"
    },
    "1045": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "GT",
      "path": "152"
    },
    "1046": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "ISZERO",
      "path": "152"
    },
    "1047": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x422"
    },
    "1050": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "JUMPI",
      "path": "152"
    },
    "1051": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x422"
    },
    "1054": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0xC9A"
    },
    "1057": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2865,
        2895
      ],
      "op": "JUMP",
      "path": "152"
    },
    "1058": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "1059": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x40"
    },
    "1061": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "1062": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "1063": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "DUP1",
      "path": "152"
    },
    "1064": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "DUP3",
      "path": "152"
    },
    "1065": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "1066": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "DUP1",
      "path": "152"
    },
    "1067": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x20"
    },
    "1069": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "MUL",
      "path": "152"
    },
    "1070": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x20"
    },
    "1072": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "ADD",
      "path": "152"
    },
    "1073": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "DUP3",
      "path": "152"
    },
    "1074": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "ADD",
      "path": "152"
    },
    "1075": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x40"
    },
    "1077": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "1078": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "DUP1",
      "path": "152"
    },
    "1079": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "ISZERO",
      "path": "152"
    },
    "1080": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x44B"
    },
    "1083": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "JUMPI",
      "path": "152"
    },
    "1084": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "DUP2",
      "path": "152"
    },
    "1085": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x20"
    },
    "1087": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "ADD",
      "path": "152"
    },
    "1088": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x20"
    },
    "1090": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "DUP3",
      "path": "152"
    },
    "1091": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "MUL",
      "path": "152"
    },
    "1092": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "DUP1",
      "path": "152"
    },
    "1093": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "CALLDATASIZE",
      "path": "152"
    },
    "1094": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "DUP4",
      "path": "152"
    },
    "1095": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "CALLDATACOPY",
      "path": "152"
    },
    "1096": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "ADD",
      "path": "152"
    },
    "1097": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "1098": {
      "op": "POP"
    },
    "1099": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "1100": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "POP",
      "path": "152"
    },
    "1101": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2832,
        2895
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "1102": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2832,
        2895
      ],
      "op": "POP",
      "path": "152"
    },
    "1103": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2911,
        2920
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x0"
    },
    "1105": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2906,
        3026
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "1106": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2930,
        2938
      ],
      "op": "DUP5",
      "path": "152"
    },
    "1107": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2930,
        2945
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "1108": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2926,
        2927
      ],
      "op": "DUP2",
      "path": "152"
    },
    "1109": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2926,
        2945
      ],
      "op": "LT",
      "path": "152"
    },
    "1110": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2906,
        3026
      ],
      "op": "ISZERO",
      "path": "152"
    },
    "1111": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2906,
        3026
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x4C3"
    },
    "1114": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2906,
        3026
      ],
      "op": "JUMPI",
      "path": "152"
    },
    "1115": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2985,
        3015
      ],
      "op": "PUSH2",
      "path": "152",
      "statement": 10,
      "value": "0x496"
    },
    "1118": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2995,
        3003
      ],
      "op": "DUP6",
      "path": "152"
    },
    "1119": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3004,
        3005
      ],
      "op": "DUP3",
      "path": "152"
    },
    "1120": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2995,
        3006
      ],
      "op": "DUP2",
      "path": "152"
    },
    "1121": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2995,
        3006
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "1122": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2995,
        3006
      ],
      "op": "DUP2",
      "path": "152"
    },
    "1123": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2995,
        3006
      ],
      "op": "LT",
      "path": "152"
    },
    "1124": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2995,
        3006
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x46F"
    },
    "1127": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2995,
        3006
      ],
      "op": "JUMPI",
      "path": "152"
    },
    "1128": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2995,
        3006
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x46F"
    },
    "1131": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2995,
        3006
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x10B7"
    },
    "1134": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2995,
        3006
      ],
      "op": "JUMP",
      "path": "152"
    },
    "1135": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2995,
        3006
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "1136": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2995,
        3006
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x20"
    },
    "1138": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2995,
        3006
      ],
      "op": "MUL",
      "path": "152"
    },
    "1139": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2995,
        3006
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x20"
    },
    "1141": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2995,
        3006
      ],
      "op": "ADD",
      "path": "152"
    },
    "1142": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2995,
        3006
      ],
      "op": "ADD",
      "path": "152"
    },
    "1143": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2995,
        3006
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "1144": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3008,
        3011
      ],
      "op": "DUP6",
      "path": "152"
    },
    "1145": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3012,
        3013
      ],
      "op": "DUP4",
      "path": "152"
    },
    "1146": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3008,
        3014
      ],
      "op": "DUP2",
      "path": "152"
    },
    "1147": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3008,
        3014
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "1148": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3008,
        3014
      ],
      "op": "DUP2",
      "path": "152"
    },
    "1149": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3008,
        3014
      ],
      "op": "LT",
      "path": "152"
    },
    "1150": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3008,
        3014
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x489"
    },
    "1153": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3008,
        3014
      ],
      "op": "JUMPI",
      "path": "152"
    },
    "1154": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3008,
        3014
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x489"
    },
    "1157": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3008,
        3014
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x10B7"
    },
    "1160": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        3008,
        3014
      ],
      "op": "JUMP",
      "path": "152"
    },
    "1161": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3008,
        3014
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "1162": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3008,
        3014
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x20"
    },
    "1164": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3008,
        3014
      ],
      "op": "MUL",
      "path": "152"
    },
    "1165": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3008,
        3014
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x20"
    },
    "1167": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3008,
        3014
      ],
      "op": "ADD",
      "path": "152"
    },
    "1168": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3008,
        3014
      ],
      "op": "ADD",
      "path": "152"
    },
    "1169": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3008,
        3014
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "1170": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2985,
        2994
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x18C"
    },
    "1173": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2985,
        3015
      ],
      "op": "JUMP",
      "path": "152"
    },
    "1174": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2985,
        3015
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "1175": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2979
      ],
      "op": "DUP3",
      "path": "152"
    },
    "1176": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2980,
        2981
      ],
      "op": "DUP3",
      "path": "152"
    },
    "1177": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2982
      ],
      "op": "DUP2",
      "path": "152"
    },
    "1178": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2982
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "1179": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2982
      ],
      "op": "DUP2",
      "path": "152"
    },
    "1180": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2982
      ],
      "op": "LT",
      "path": "152"
    },
    "1181": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2982
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x4A8"
    },
    "1184": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2982
      ],
      "op": "JUMPI",
      "path": "152"
    },
    "1185": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2982
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x4A8"
    },
    "1188": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2982
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x10B7"
    },
    "1191": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2966,
        2982
      ],
      "op": "JUMP",
      "path": "152"
    },
    "1192": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2982
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "1193": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2982
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x20"
    },
    "1195": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2982
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "1196": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2982
      ],
      "op": "DUP2",
      "path": "152"
    },
    "1197": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2982
      ],
      "op": "MUL",
      "path": "152"
    },
    "1198": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2982
      ],
      "op": "SWAP2",
      "path": "152"
    },
    "1199": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2982
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "1200": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2982
      ],
      "op": "SWAP2",
      "path": "152"
    },
    "1201": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2982
      ],
      "op": "ADD",
      "path": "152"
    },
    "1202": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2982
      ],
      "op": "ADD",
      "path": "152"
    },
    "1203": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        3015
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "1204": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2950
      ],
      "op": "PUSH2",
      "path": "152",
      "statement": 11,
      "value": "0x4BC"
    },
    "1207": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2950
      ],
      "op": "DUP2",
      "path": "152"
    },
    "1208": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2950
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x10E3"
    },
    "1211": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2947,
        2950
      ],
      "op": "JUMP",
      "path": "152"
    },
    "1212": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2950
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "1213": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2950
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "1214": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2950
      ],
      "op": "POP",
      "path": "152"
    },
    "1215": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2906,
        3026
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x451"
    },
    "1218": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2906,
        3026
      ],
      "op": "JUMP",
      "path": "152"
    },
    "1219": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2906,
        3026
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "1220": {
      "op": "POP"
    },
    "1221": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3043,
        3056
      ],
      "op": "SWAP4",
      "path": "152",
      "statement": 12
    },
    "1222": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2555,
        3063
      ],
      "op": "SWAP3",
      "path": "152"
    },
    "1223": {
      "op": "POP"
    },
    "1224": {
      "op": "POP"
    },
    "1225": {
      "op": "POP"
    },
    "1226": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "o",
      "offset": [
        2555,
        3063
      ],
      "op": "JUMP",
      "path": "152"
    },
    "1227": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3131,
        3284
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "1228": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3225,
        3277
      ],
      "op": "PUSH2",
      "path": "152",
      "statement": 13,
      "value": "0x4D6"
    },
    "1231": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "202"
    },
    "1232": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3258,
        3266
      ],
      "op": "DUP4",
      "path": "152"
    },
    "1233": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3268,
        3276
      ],
      "op": "DUP4",
      "path": "152"
    },
    "1234": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3225,
        3243
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x73E"
    },
    "1237": {
      "fn": "ERC1155.setApprovalForAll",
      "jump": "i",
      "offset": [
        3225,
        3277
      ],
      "op": "JUMP",
      "path": "152"
    },
    "1238": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3225,
        3277
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "1239": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3131,
        3284
      ],
      "op": "POP",
      "path": "152"
    },
    "1240": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3131,
        3284
      ],
      "op": "POP",
      "path": "152"
    },
    "1241": {
      "fn": "ERC1155.setApprovalForAll",
      "jump": "o",
      "offset": [
        3131,
        3284
      ],
      "op": "JUMP",
      "path": "152"
    },
    "1242": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3584,
        3973
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "1243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1247": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1249": {
      "op": "SHL"
    },
    "1250": {
      "op": "SUB"
    },
    "1251": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3784,
        3804
      ],
      "op": "DUP6",
      "path": "152",
      "statement": 14
    },
    "1252": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3784,
        3804
      ],
      "op": "AND",
      "path": "152"
    },
    "1253": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "202"
    },
    "1254": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3784,
        3804
      ],
      "op": "EQ",
      "path": "152"
    },
    "1255": {
      "branch": 45,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3784,
        3804
      ],
      "op": "DUP1",
      "path": "152"
    },
    "1256": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3784,
        3844
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x4F6"
    },
    "1259": {
      "branch": 45,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3784,
        3844
      ],
      "op": "JUMPI",
      "path": "152"
    },
    "1260": {
      "op": "POP"
    },
    "1261": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3808,
        3844
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x4F6"
    },
    "1264": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3825,
        3829
      ],
      "op": "DUP6",
      "path": "152"
    },
    "1265": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "202"
    },
    "1266": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3351,
        3517
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x14B"
    },
    "1269": {
      "fn": "ERC1155.isApprovedForAll",
      "jump": "i",
      "offset": [
        3351,
        3517
      ],
      "op": "JUMP",
      "path": "152"
    },
    "1270": {
      "branch": 46,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3808,
        3844
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "1271": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3763,
        3911
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x554"
    },
    "1274": {
      "branch": 46,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3763,
        3911
      ],
      "op": "JUMPI",
      "path": "152"
    },
    "1275": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3763,
        3911
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x40"
    },
    "1277": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3763,
        3911
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "1278": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1282": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1284": {
      "op": "SHL"
    },
    "1285": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3763,
        3911
      ],
      "op": "DUP2",
      "path": "152"
    },
    "1286": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3763,
        3911
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "1287": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1289": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3763,
        3911
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x4"
    },
    "1291": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3763,
        3911
      ],
      "op": "DUP3",
      "path": "152"
    },
    "1292": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3763,
        3911
      ],
      "op": "ADD",
      "path": "152"
    },
    "1293": {
      "op": "MSTORE"
    },
    "1294": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "1296": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1298": {
      "op": "DUP3"
    },
    "1299": {
      "op": "ADD"
    },
    "1300": {
      "op": "MSTORE"
    },
    "1301": {
      "op": "PUSH32",
      "value": "0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72"
    },
    "1334": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1336": {
      "op": "DUP3"
    },
    "1337": {
      "op": "ADD"
    },
    "1338": {
      "op": "MSTORE"
    },
    "1339": {
      "op": "PUSH9",
      "value": "0x8185C1C1C9BDD9959"
    },
    "1349": {
      "op": "PUSH1",
      "value": "0xBA"
    },
    "1351": {
      "op": "SHL"
    },
    "1352": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1354": {
      "op": "DUP3"
    },
    "1355": {
      "op": "ADD"
    },
    "1356": {
      "op": "MSTORE"
    },
    "1357": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1359": {
      "op": "ADD"
    },
    "1360": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3763,
        3911
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x1F4"
    },
    "1363": {
      "op": "JUMP"
    },
    "1364": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3763,
        3911
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "1365": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3921,
        3966
      ],
      "op": "PUSH2",
      "path": "152",
      "statement": 15,
      "value": "0x39A"
    },
    "1368": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3939,
        3943
      ],
      "op": "DUP6",
      "path": "152"
    },
    "1369": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3945,
        3947
      ],
      "op": "DUP6",
      "path": "152"
    },
    "1370": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3949,
        3951
      ],
      "op": "DUP6",
      "path": "152"
    },
    "1371": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3953,
        3959
      ],
      "op": "DUP6",
      "path": "152"
    },
    "1372": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3961,
        3965
      ],
      "op": "DUP6",
      "path": "152"
    },
    "1373": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3921,
        3938
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x81E"
    },
    "1376": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        3921,
        3966
      ],
      "op": "JUMP",
      "path": "152"
    },
    "1377": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6068,
        7113
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "1378": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6288,
        6295
      ],
      "op": "DUP2",
      "path": "152",
      "statement": 16
    },
    "1379": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6288,
        6302
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "1380": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6274,
        6277
      ],
      "op": "DUP4",
      "path": "152"
    },
    "1381": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6274,
        6284
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "1382": {
      "branch": 47,
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6274,
        6302
      ],
      "op": "EQ",
      "path": "152"
    },
    "1383": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6266,
        6347
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x5C3"
    },
    "1386": {
      "branch": 47,
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6266,
        6347
      ],
      "op": "JUMPI",
      "path": "152"
    },
    "1387": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6266,
        6347
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x40"
    },
    "1389": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6266,
        6347
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "1390": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1394": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1396": {
      "op": "SHL"
    },
    "1397": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6266,
        6347
      ],
      "op": "DUP2",
      "path": "152"
    },
    "1398": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6266,
        6347
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "1399": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1401": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6266,
        6347
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x4"
    },
    "1403": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6266,
        6347
      ],
      "op": "DUP3",
      "path": "152"
    },
    "1404": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6266,
        6347
      ],
      "op": "ADD",
      "path": "152"
    },
    "1405": {
      "op": "MSTORE"
    },
    "1406": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "1408": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1410": {
      "op": "DUP3"
    },
    "1411": {
      "op": "ADD"
    },
    "1412": {
      "op": "MSTORE"
    },
    "1413": {
      "op": "PUSH32",
      "value": "0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
    },
    "1446": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1448": {
      "op": "DUP3"
    },
    "1449": {
      "op": "ADD"
    },
    "1450": {
      "op": "MSTORE"
    },
    "1451": {
      "op": "PUSH8",
      "value": "0xDAD2E6DAC2E8C6D"
    },
    "1460": {
      "op": "PUSH1",
      "value": "0xC3"
    },
    "1462": {
      "op": "SHL"
    },
    "1463": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1465": {
      "op": "DUP3"
    },
    "1466": {
      "op": "ADD"
    },
    "1467": {
      "op": "MSTORE"
    },
    "1468": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1470": {
      "op": "ADD"
    },
    "1471": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6266,
        6347
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x1F4"
    },
    "1474": {
      "op": "JUMP"
    },
    "1475": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6266,
        6347
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "1476": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1480": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1482": {
      "op": "SHL"
    },
    "1483": {
      "op": "SUB"
    },
    "1484": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6365,
        6381
      ],
      "op": "DUP5",
      "path": "152",
      "statement": 17
    },
    "1485": {
      "branch": 48,
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6365,
        6381
      ],
      "op": "AND",
      "path": "152"
    },
    "1486": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6357,
        6423
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x5E9"
    },
    "1489": {
      "branch": 48,
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6357,
        6423
      ],
      "op": "JUMPI",
      "path": "152"
    },
    "1490": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6357,
        6423
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x40"
    },
    "1492": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6357,
        6423
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "1493": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1497": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1499": {
      "op": "SHL"
    },
    "1500": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6357,
        6423
      ],
      "op": "DUP2",
      "path": "152"
    },
    "1501": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6357,
        6423
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "1502": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6357,
        6423
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x4"
    },
    "1504": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6357,
        6423
      ],
      "op": "ADD",
      "path": "152"
    },
    "1505": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6357,
        6423
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x1F4"
    },
    "1508": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6357,
        6423
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "1509": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6357,
        6423
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x10FC"
    },
    "1512": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6357,
        6423
      ],
      "op": "JUMP",
      "path": "152"
    },
    "1513": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6357,
        6423
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "1514": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "202"
    },
    "1515": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6434,
        6450
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x0"
    },
    "1517": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6547,
        6958
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "1518": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6571,
        6574
      ],
      "op": "DUP5",
      "path": "152"
    },
    "1519": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6571,
        6581
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "1520": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6567,
        6568
      ],
      "op": "DUP2",
      "path": "152"
    },
    "1521": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6567,
        6581
      ],
      "op": "LT",
      "path": "152"
    },
    "1522": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6547,
        6958
      ],
      "op": "ISZERO",
      "path": "152"
    },
    "1523": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6547,
        6958
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x6D0"
    },
    "1526": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6547,
        6958
      ],
      "op": "JUMPI",
      "path": "152"
    },
    "1527": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6602,
        6612
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x0"
    },
    "1529": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6615,
        6618
      ],
      "op": "DUP6",
      "path": "152"
    },
    "1530": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6619,
        6620
      ],
      "op": "DUP3",
      "path": "152"
    },
    "1531": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6615,
        6621
      ],
      "op": "DUP2",
      "path": "152"
    },
    "1532": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6615,
        6621
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "1533": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6615,
        6621
      ],
      "op": "DUP2",
      "path": "152"
    },
    "1534": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6615,
        6621
      ],
      "op": "LT",
      "path": "152"
    },
    "1535": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6615,
        6621
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x60A"
    },
    "1538": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6615,
        6621
      ],
      "op": "JUMPI",
      "path": "152"
    },
    "1539": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6615,
        6621
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x60A"
    },
    "1542": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6615,
        6621
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x10B7"
    },
    "1545": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6615,
        6621
      ],
      "op": "JUMP",
      "path": "152"
    },
    "1546": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6615,
        6621
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "1547": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6615,
        6621
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x20"
    },
    "1549": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6615,
        6621
      ],
      "op": "MUL",
      "path": "152"
    },
    "1550": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6615,
        6621
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x20"
    },
    "1552": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6615,
        6621
      ],
      "op": "ADD",
      "path": "152"
    },
    "1553": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6615,
        6621
      ],
      "op": "ADD",
      "path": "152"
    },
    "1554": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6615,
        6621
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "1555": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6602,
        6621
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "1556": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6602,
        6621
      ],
      "op": "POP",
      "path": "152"
    },
    "1557": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6635,
        6649
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x0"
    },
    "1559": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6659
      ],
      "op": "DUP6",
      "path": "152"
    },
    "1560": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6660,
        6661
      ],
      "op": "DUP4",
      "path": "152"
    },
    "1561": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "DUP2",
      "path": "152"
    },
    "1562": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "1563": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "DUP2",
      "path": "152"
    },
    "1564": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "LT",
      "path": "152"
    },
    "1565": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x628"
    },
    "1568": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "JUMPI",
      "path": "152"
    },
    "1569": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x628"
    },
    "1572": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x10B7"
    },
    "1575": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6652,
        6662
      ],
      "op": "JUMP",
      "path": "152"
    },
    "1576": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "1577": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x20"
    },
    "1579": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "1580": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "DUP2",
      "path": "152"
    },
    "1581": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "MUL",
      "path": "152"
    },
    "1582": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "SWAP2",
      "path": "152"
    },
    "1583": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "1584": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "SWAP2",
      "path": "152"
    },
    "1585": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "ADD",
      "path": "152"
    },
    "1586": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "DUP2",
      "path": "152"
    },
    "1587": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "ADD",
      "path": "152"
    },
    "1588": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "1589": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6677,
        6696
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x0"
    },
    "1591": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6712
      ],
      "op": "DUP5",
      "path": "152"
    },
    "1592": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6712
      ],
      "op": "DUP2",
      "path": "152"
    },
    "1593": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6712
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "1594": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6712
      ],
      "op": "DUP1",
      "path": "152"
    },
    "1595": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6712
      ],
      "op": "DUP4",
      "path": "152"
    },
    "1596": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6712
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "1597": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6712
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x40"
    },
    "1599": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6712
      ],
      "op": "DUP1",
      "path": "152"
    },
    "1600": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6712
      ],
      "op": "DUP3",
      "path": "152"
    },
    "1601": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6712
      ],
      "op": "KECCAK256",
      "path": "152"
    },
    "1602": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1604": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1606": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1608": {
      "op": "SHL"
    },
    "1609": {
      "op": "SUB"
    },
    "1610": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6718
      ],
      "op": "DUP15",
      "path": "152"
    },
    "1611": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6718
      ],
      "op": "AND",
      "path": "152"
    },
    "1612": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6718
      ],
      "op": "DUP4",
      "path": "152"
    },
    "1613": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6718
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "1614": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6718
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "1615": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6718
      ],
      "op": "SWAP4",
      "path": "152"
    },
    "1616": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6718
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "1617": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6718
      ],
      "op": "SWAP2",
      "path": "152"
    },
    "1618": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6718
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "1619": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6718
      ],
      "op": "SWAP2",
      "path": "152"
    },
    "1620": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6718
      ],
      "op": "KECCAK256",
      "path": "152"
    },
    "1621": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6718
      ],
      "op": "SLOAD",
      "path": "152"
    },
    "1622": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "1623": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "SWAP2",
      "path": "152"
    },
    "1624": {
      "op": "POP"
    },
    "1625": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6740,
        6761
      ],
      "op": "DUP2",
      "path": "152",
      "statement": 18
    },
    "1626": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6740,
        6761
      ],
      "op": "DUP2",
      "path": "152"
    },
    "1627": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6740,
        6761
      ],
      "op": "LT",
      "path": "152"
    },
    "1628": {
      "branch": 49,
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6740,
        6761
      ],
      "op": "ISZERO",
      "path": "152"
    },
    "1629": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6732,
        6808
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x678"
    },
    "1632": {
      "branch": 49,
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6732,
        6808
      ],
      "op": "JUMPI",
      "path": "152"
    },
    "1633": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6732,
        6808
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x40"
    },
    "1635": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6732,
        6808
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "1636": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1640": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1642": {
      "op": "SHL"
    },
    "1643": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6732,
        6808
      ],
      "op": "DUP2",
      "path": "152"
    },
    "1644": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6732,
        6808
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "1645": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6732,
        6808
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x4"
    },
    "1647": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6732,
        6808
      ],
      "op": "ADD",
      "path": "152"
    },
    "1648": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6732,
        6808
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x1F4"
    },
    "1651": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6732,
        6808
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "1652": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6732,
        6808
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x1141"
    },
    "1655": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6732,
        6808
      ],
      "op": "JUMP",
      "path": "152"
    },
    "1656": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6732,
        6808
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "1657": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6859
      ],
      "op": "PUSH1",
      "path": "152",
      "statement": 19,
      "value": "0x0"
    },
    "1659": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6863
      ],
      "op": "DUP4",
      "path": "152"
    },
    "1660": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6863
      ],
      "op": "DUP2",
      "path": "152"
    },
    "1661": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6863
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "1662": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6863
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x20"
    },
    "1664": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6863
      ],
      "op": "DUP2",
      "path": "152"
    },
    "1665": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6863
      ],
      "op": "DUP2",
      "path": "152"
    },
    "1666": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6863
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "1667": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6863
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x40"
    },
    "1669": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6863
      ],
      "op": "DUP1",
      "path": "152"
    },
    "1670": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6863
      ],
      "op": "DUP4",
      "path": "152"
    },
    "1671": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6863
      ],
      "op": "KECCAK256",
      "path": "152"
    },
    "1672": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1674": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1676": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1678": {
      "op": "SHL"
    },
    "1679": {
      "op": "SUB"
    },
    "1680": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6869
      ],
      "op": "DUP15",
      "path": "152"
    },
    "1681": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6869
      ],
      "op": "DUP2",
      "path": "152"
    },
    "1682": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6869
      ],
      "op": "AND",
      "path": "152"
    },
    "1683": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6869
      ],
      "op": "DUP6",
      "path": "152"
    },
    "1684": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6869
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "1685": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6869
      ],
      "op": "SWAP3",
      "path": "152"
    },
    "1686": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6869
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "1687": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6869
      ],
      "op": "DUP1",
      "path": "152"
    },
    "1688": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6869
      ],
      "op": "DUP4",
      "path": "152"
    },
    "1689": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6869
      ],
      "op": "KECCAK256",
      "path": "152"
    },
    "1690": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6872,
        6892
      ],
      "op": "DUP6",
      "path": "152"
    },
    "1691": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6872,
        6892
      ],
      "op": "DUP6",
      "path": "152"
    },
    "1692": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6872,
        6892
      ],
      "op": "SUB",
      "path": "152"
    },
    "1693": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6892
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "1694": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6892
      ],
      "op": "SSTORE",
      "path": "152"
    },
    "1695": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6920,
        6937
      ],
      "op": "SWAP1",
      "path": "152",
      "statement": 20
    },
    "1696": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6920,
        6937
      ],
      "op": "DUP12",
      "path": "152"
    },
    "1697": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6920,
        6937
      ],
      "op": "AND",
      "path": "152"
    },
    "1698": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6920,
        6937
      ],
      "op": "DUP3",
      "path": "152"
    },
    "1699": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6920,
        6937
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "1700": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6920,
        6937
      ],
      "op": "DUP2",
      "path": "152"
    },
    "1701": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6920,
        6937
      ],
      "op": "KECCAK256",
      "path": "152"
    },
    "1702": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6920,
        6947
      ],
      "op": "DUP1",
      "path": "152"
    },
    "1703": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6920,
        6947
      ],
      "op": "SLOAD",
      "path": "152"
    },
    "1704": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6872,
        6892
      ],
      "op": "DUP5",
      "path": "152"
    },
    "1705": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6872,
        6892
      ],
      "op": "SWAP3",
      "path": "152"
    },
    "1706": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6859
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "1707": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6920,
        6947
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x6B5"
    },
    "1710": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6920,
        6947
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "1711": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6872,
        6892
      ],
      "op": "DUP5",
      "path": "152"
    },
    "1712": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6872,
        6892
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "1713": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6920,
        6947
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x118B"
    },
    "1716": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6920,
        6947
      ],
      "op": "JUMP",
      "path": "152"
    },
    "1717": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6920,
        6947
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "1718": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6920,
        6947
      ],
      "op": "SWAP3",
      "path": "152"
    },
    "1719": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6920,
        6947
      ],
      "op": "POP",
      "path": "152"
    },
    "1720": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6920,
        6947
      ],
      "op": "POP",
      "path": "152"
    },
    "1721": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6920,
        6947
      ],
      "op": "DUP2",
      "path": "152"
    },
    "1722": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6920,
        6947
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "1723": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6920,
        6947
      ],
      "op": "SSTORE",
      "path": "152"
    },
    "1724": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6920,
        6947
      ],
      "op": "POP",
      "path": "152"
    },
    "1725": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6588,
        6958
      ],
      "op": "POP",
      "path": "152"
    },
    "1726": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6588,
        6958
      ],
      "op": "POP",
      "path": "152"
    },
    "1727": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6588,
        6958
      ],
      "op": "POP",
      "path": "152"
    },
    "1728": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6583,
        6586
      ],
      "op": "DUP1",
      "path": "152",
      "statement": 21
    },
    "1729": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6583,
        6586
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x6C9"
    },
    "1732": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6583,
        6586
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "1733": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6583,
        6586
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x10E3"
    },
    "1736": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6583,
        6586
      ],
      "op": "JUMP",
      "path": "152"
    },
    "1737": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6583,
        6586
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "1738": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6583,
        6586
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "1739": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6583,
        6586
      ],
      "op": "POP",
      "path": "152"
    },
    "1740": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6547,
        6958
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x5ED"
    },
    "1743": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6547,
        6958
      ],
      "op": "JUMP",
      "path": "152"
    },
    "1744": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6547,
        6958
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "1745": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6547,
        6958
      ],
      "op": "POP",
      "path": "152"
    },
    "1746": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7003,
        7005
      ],
      "op": "DUP5",
      "path": "152",
      "statement": 22
    },
    "1747": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1751": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1753": {
      "op": "SHL"
    },
    "1754": {
      "op": "SUB"
    },
    "1755": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6973,
        7020
      ],
      "op": "AND",
      "path": "152"
    },
    "1756": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6997,
        7001
      ],
      "op": "DUP7",
      "path": "152"
    },
    "1757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1761": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1763": {
      "op": "SHL"
    },
    "1764": {
      "op": "SUB"
    },
    "1765": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6973,
        7020
      ],
      "op": "AND",
      "path": "152"
    },
    "1766": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6987,
        6995
      ],
      "op": "DUP3",
      "path": "152"
    },
    "1767": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1769": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1771": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1773": {
      "op": "SHL"
    },
    "1774": {
      "op": "SUB"
    },
    "1775": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6973,
        7020
      ],
      "op": "AND",
      "path": "152"
    },
    "1776": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6973,
        7020
      ],
      "op": "PUSH32",
      "path": "152",
      "value": "0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
    },
    "1809": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7007,
        7010
      ],
      "op": "DUP8",
      "path": "152"
    },
    "1810": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7019
      ],
      "op": "DUP8",
      "path": "152"
    },
    "1811": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6973,
        7020
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x40"
    },
    "1813": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6973,
        7020
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "1814": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6973,
        7020
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x720"
    },
    "1817": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6973,
        7020
      ],
      "op": "SWAP3",
      "path": "152"
    },
    "1818": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6973,
        7020
      ],
      "op": "SWAP2",
      "path": "152"
    },
    "1819": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6973,
        7020
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "1820": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6973,
        7020
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x119E"
    },
    "1823": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6973,
        7020
      ],
      "op": "JUMP",
      "path": "152"
    },
    "1824": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6973,
        7020
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "1825": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6973,
        7020
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x40"
    },
    "1827": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6973,
        7020
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "1828": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6973,
        7020
      ],
      "op": "DUP1",
      "path": "152"
    },
    "1829": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6973,
        7020
      ],
      "op": "SWAP2",
      "path": "152"
    },
    "1830": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6973,
        7020
      ],
      "op": "SUB",
      "path": "152"
    },
    "1831": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6973,
        7020
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "1832": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6973,
        7020
      ],
      "op": "LOG4",
      "path": "152"
    },
    "1833": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7031,
        7106
      ],
      "op": "PUSH2",
      "path": "152",
      "statement": 23,
      "value": "0x736"
    },
    "1836": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7067,
        7075
      ],
      "op": "DUP2",
      "path": "152"
    },
    "1837": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7077,
        7081
      ],
      "op": "DUP8",
      "path": "152"
    },
    "1838": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7083,
        7085
      ],
      "op": "DUP8",
      "path": "152"
    },
    "1839": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7087,
        7090
      ],
      "op": "DUP8",
      "path": "152"
    },
    "1840": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7092,
        7099
      ],
      "op": "DUP8",
      "path": "152"
    },
    "1841": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7101,
        7105
      ],
      "op": "DUP8",
      "path": "152"
    },
    "1842": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7031,
        7066
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x944"
    },
    "1845": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        7031,
        7106
      ],
      "op": "JUMP",
      "path": "152"
    },
    "1846": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7031,
        7106
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "1847": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6256,
        7113
      ],
      "op": "POP",
      "path": "152"
    },
    "1848": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6068,
        7113
      ],
      "op": "POP",
      "path": "152"
    },
    "1849": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6068,
        7113
      ],
      "op": "POP",
      "path": "152"
    },
    "1850": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6068,
        7113
      ],
      "op": "POP",
      "path": "152"
    },
    "1851": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6068,
        7113
      ],
      "op": "POP",
      "path": "152"
    },
    "1852": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6068,
        7113
      ],
      "op": "POP",
      "path": "152"
    },
    "1853": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "o",
      "offset": [
        6068,
        7113
      ],
      "op": "JUMP",
      "path": "152"
    },
    "1854": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12074,
        12397
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "1855": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12224,
        12232
      ],
      "op": "DUP2",
      "path": "152",
      "statement": 24
    },
    "1856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1860": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1862": {
      "op": "SHL"
    },
    "1863": {
      "op": "SUB"
    },
    "1864": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12215,
        12232
      ],
      "op": "AND",
      "path": "152"
    },
    "1865": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12215,
        12220
      ],
      "op": "DUP4",
      "path": "152"
    },
    "1866": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1868": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1870": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1872": {
      "op": "SHL"
    },
    "1873": {
      "op": "SUB"
    },
    "1874": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12215,
        12232
      ],
      "op": "AND",
      "path": "152"
    },
    "1875": {
      "branch": 50,
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12215,
        12232
      ],
      "op": "SUB",
      "path": "152"
    },
    "1876": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12207,
        12278
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x7B1"
    },
    "1879": {
      "branch": 50,
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12207,
        12278
      ],
      "op": "JUMPI",
      "path": "152"
    },
    "1880": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12207,
        12278
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x40"
    },
    "1882": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12207,
        12278
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "1883": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1887": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1889": {
      "op": "SHL"
    },
    "1890": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12207,
        12278
      ],
      "op": "DUP2",
      "path": "152"
    },
    "1891": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12207,
        12278
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "1892": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1894": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12207,
        12278
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x4"
    },
    "1896": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12207,
        12278
      ],
      "op": "DUP3",
      "path": "152"
    },
    "1897": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12207,
        12278
      ],
      "op": "ADD",
      "path": "152"
    },
    "1898": {
      "op": "MSTORE"
    },
    "1899": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "1901": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1903": {
      "op": "DUP3"
    },
    "1904": {
      "op": "ADD"
    },
    "1905": {
      "op": "MSTORE"
    },
    "1906": {
      "op": "PUSH32",
      "value": "0x455243313135353A2073657474696E6720617070726F76616C20737461747573"
    },
    "1939": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1941": {
      "op": "DUP3"
    },
    "1942": {
      "op": "ADD"
    },
    "1943": {
      "op": "MSTORE"
    },
    "1944": {
      "op": "PUSH9",
      "value": "0x103337B91039B2B633"
    },
    "1954": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "1956": {
      "op": "SHL"
    },
    "1957": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1959": {
      "op": "DUP3"
    },
    "1960": {
      "op": "ADD"
    },
    "1961": {
      "op": "MSTORE"
    },
    "1962": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1964": {
      "op": "ADD"
    },
    "1965": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12207,
        12278
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x1F4"
    },
    "1968": {
      "op": "JUMP"
    },
    "1969": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12207,
        12278
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "1970": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1974": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1976": {
      "op": "SHL"
    },
    "1977": {
      "op": "SUB"
    },
    "1978": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12313
      ],
      "op": "DUP4",
      "path": "152",
      "statement": 25
    },
    "1979": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12313
      ],
      "op": "DUP2",
      "path": "152"
    },
    "1980": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12313
      ],
      "op": "AND",
      "path": "152"
    },
    "1981": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12313
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x0"
    },
    "1983": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12313
      ],
      "op": "DUP2",
      "path": "152"
    },
    "1984": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12313
      ],
      "op": "DUP2",
      "path": "152"
    },
    "1985": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12313
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "1986": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12306
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x1"
    },
    "1988": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12313
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x20"
    },
    "1990": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12313
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "1991": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12313
      ],
      "op": "DUP2",
      "path": "152"
    },
    "1992": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12313
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "1993": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12313
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x40"
    },
    "1995": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12313
      ],
      "op": "DUP1",
      "path": "152"
    },
    "1996": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12313
      ],
      "op": "DUP4",
      "path": "152"
    },
    "1997": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12313
      ],
      "op": "KECCAK256",
      "path": "152"
    },
    "1998": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12323
      ],
      "op": "SWAP5",
      "path": "152"
    },
    "1999": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12323
      ],
      "op": "DUP8",
      "path": "152"
    },
    "2000": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12323
      ],
      "op": "AND",
      "path": "152"
    },
    "2001": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12323
      ],
      "op": "DUP1",
      "path": "152"
    },
    "2002": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12323
      ],
      "op": "DUP5",
      "path": "152"
    },
    "2003": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12323
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "2004": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12323
      ],
      "op": "SWAP5",
      "path": "152"
    },
    "2005": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12323
      ],
      "op": "DUP3",
      "path": "152"
    },
    "2006": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12323
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "2007": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12323
      ],
      "op": "SWAP2",
      "path": "152"
    },
    "2008": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12323
      ],
      "op": "DUP3",
      "path": "152"
    },
    "2009": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12323
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "2010": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12323
      ],
      "op": "KECCAK256",
      "path": "152"
    },
    "2011": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12334
      ],
      "op": "DUP1",
      "path": "152"
    },
    "2012": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12334
      ],
      "op": "SLOAD",
      "path": "152"
    },
    "2013": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2015": {
      "op": "NOT"
    },
    "2016": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12334
      ],
      "op": "AND",
      "path": "152"
    },
    "2017": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12334
      ],
      "op": "DUP7",
      "path": "152"
    },
    "2018": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12334
      ],
      "op": "ISZERO",
      "path": "152"
    },
    "2019": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12334
      ],
      "op": "ISZERO",
      "path": "152"
    },
    "2020": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12334
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "2021": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12334
      ],
      "op": "DUP2",
      "path": "152"
    },
    "2022": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12334
      ],
      "op": "OR",
      "path": "152"
    },
    "2023": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12334
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "2024": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12334
      ],
      "op": "SWAP2",
      "path": "152"
    },
    "2025": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12334
      ],
      "op": "SSTORE",
      "path": "152"
    },
    "2026": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12349,
        12390
      ],
      "op": "SWAP2",
      "path": "152",
      "statement": 26
    },
    "2027": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12349,
        12390
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "2028": {
      "op": "SWAP2"
    },
    "2029": {
      "op": "DUP3"
    },
    "2030": {
      "op": "MSTORE"
    },
    "2031": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12349,
        12390
      ],
      "op": "PUSH32",
      "path": "152",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "2064": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12349,
        12390
      ],
      "op": "SWAP2",
      "path": "152"
    },
    "2065": {
      "op": "ADD"
    },
    "2066": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12349,
        12390
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x40"
    },
    "2068": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12349,
        12390
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "2069": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12349,
        12390
      ],
      "op": "DUP1",
      "path": "152"
    },
    "2070": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12349,
        12390
      ],
      "op": "SWAP2",
      "path": "152"
    },
    "2071": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12349,
        12390
      ],
      "op": "SUB",
      "path": "152"
    },
    "2072": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12349,
        12390
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "2073": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12349,
        12390
      ],
      "op": "LOG3",
      "path": "152"
    },
    "2074": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12074,
        12397
      ],
      "op": "POP",
      "path": "152"
    },
    "2075": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12074,
        12397
      ],
      "op": "POP",
      "path": "152"
    },
    "2076": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12074,
        12397
      ],
      "op": "POP",
      "path": "152"
    },
    "2077": {
      "fn": "ERC1155._setApprovalForAll",
      "jump": "o",
      "offset": [
        12074,
        12397
      ],
      "op": "JUMP",
      "path": "152"
    },
    "2078": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        4925,
        5722
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "2079": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2083": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2085": {
      "op": "SHL"
    },
    "2086": {
      "op": "SUB"
    },
    "2087": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5106,
        5122
      ],
      "op": "DUP5",
      "path": "152",
      "statement": 27
    },
    "2088": {
      "branch": 51,
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5106,
        5122
      ],
      "op": "AND",
      "path": "152"
    },
    "2089": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5098,
        5164
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x844"
    },
    "2092": {
      "branch": 51,
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5098,
        5164
      ],
      "op": "JUMPI",
      "path": "152"
    },
    "2093": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5098,
        5164
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x40"
    },
    "2095": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5098,
        5164
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "2096": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2100": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2102": {
      "op": "SHL"
    },
    "2103": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5098,
        5164
      ],
      "op": "DUP2",
      "path": "152"
    },
    "2104": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5098,
        5164
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "2105": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5098,
        5164
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x4"
    },
    "2107": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5098,
        5164
      ],
      "op": "ADD",
      "path": "152"
    },
    "2108": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5098,
        5164
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x1F4"
    },
    "2111": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5098,
        5164
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "2112": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5098,
        5164
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x10FC"
    },
    "2115": {
      "fn": "ERC1155._safeTransferFrom",
      "jump": "i",
      "offset": [
        5098,
        5164
      ],
      "op": "JUMP",
      "path": "152"
    },
    "2116": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5098,
        5164
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "2117": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "202"
    },
    "2118": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5217,
        5313
      ],
      "op": "PUSH2",
      "path": "152",
      "statement": 28,
      "value": "0x85D"
    },
    "2121": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP2",
      "path": "202"
    },
    "2122": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5248,
        5252
      ],
      "op": "DUP8",
      "path": "152"
    },
    "2123": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5254,
        5256
      ],
      "op": "DUP8",
      "path": "152"
    },
    "2124": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5258,
        5279
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x854"
    },
    "2127": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5276,
        5278
      ],
      "op": "DUP9",
      "path": "152"
    },
    "2128": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5258,
        5275
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0xA9F"
    },
    "2131": {
      "fn": "ERC1155._safeTransferFrom",
      "jump": "i",
      "offset": [
        5258,
        5279
      ],
      "op": "JUMP",
      "path": "152"
    },
    "2132": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5258,
        5279
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "2133": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5281,
        5306
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x39A"
    },
    "2136": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5299,
        5305
      ],
      "op": "DUP9",
      "path": "152"
    },
    "2137": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5281,
        5298
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0xA9F"
    },
    "2140": {
      "fn": "ERC1155._safeTransferFrom",
      "jump": "i",
      "offset": [
        5281,
        5306
      ],
      "op": "JUMP",
      "path": "152"
    },
    "2141": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5217,
        5313
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "2142": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5324,
        5343
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x0"
    },
    "2144": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5359
      ],
      "op": "DUP5",
      "path": "152"
    },
    "2145": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5359
      ],
      "op": "DUP2",
      "path": "152"
    },
    "2146": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5359
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "2147": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5359
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x20"
    },
    "2149": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5359
      ],
      "op": "DUP2",
      "path": "152"
    },
    "2150": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5359
      ],
      "op": "DUP2",
      "path": "152"
    },
    "2151": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5359
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "2152": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5359
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x40"
    },
    "2154": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5359
      ],
      "op": "DUP1",
      "path": "152"
    },
    "2155": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5359
      ],
      "op": "DUP4",
      "path": "152"
    },
    "2156": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5359
      ],
      "op": "KECCAK256",
      "path": "152"
    },
    "2157": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2161": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2163": {
      "op": "SHL"
    },
    "2164": {
      "op": "SUB"
    },
    "2165": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5365
      ],
      "op": "DUP11",
      "path": "152"
    },
    "2166": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5365
      ],
      "op": "AND",
      "path": "152"
    },
    "2167": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5365
      ],
      "op": "DUP5",
      "path": "152"
    },
    "2168": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5365
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "2169": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5365
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "2170": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5365
      ],
      "op": "SWAP2",
      "path": "152"
    },
    "2171": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5365
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "2172": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5365
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "2173": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5365
      ],
      "op": "KECCAK256",
      "path": "152"
    },
    "2174": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5365
      ],
      "op": "SLOAD",
      "path": "152"
    },
    "2175": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5383,
        5404
      ],
      "op": "DUP4",
      "path": "152",
      "statement": 29
    },
    "2176": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5383,
        5404
      ],
      "op": "DUP2",
      "path": "152"
    },
    "2177": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5383,
        5404
      ],
      "op": "LT",
      "path": "152"
    },
    "2178": {
      "branch": 52,
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5383,
        5404
      ],
      "op": "ISZERO",
      "path": "152"
    },
    "2179": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5375,
        5451
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x89E"
    },
    "2182": {
      "branch": 52,
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5375,
        5451
      ],
      "op": "JUMPI",
      "path": "152"
    },
    "2183": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5375,
        5451
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x40"
    },
    "2185": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5375,
        5451
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "2186": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2190": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2192": {
      "op": "SHL"
    },
    "2193": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5375,
        5451
      ],
      "op": "DUP2",
      "path": "152"
    },
    "2194": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5375,
        5451
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "2195": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5375,
        5451
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x4"
    },
    "2197": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5375,
        5451
      ],
      "op": "ADD",
      "path": "152"
    },
    "2198": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5375,
        5451
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x1F4"
    },
    "2201": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5375,
        5451
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "2202": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5375,
        5451
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x1141"
    },
    "2205": {
      "fn": "ERC1155._safeTransferFrom",
      "jump": "i",
      "offset": [
        5375,
        5451
      ],
      "op": "JUMP",
      "path": "152"
    },
    "2206": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5375,
        5451
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "2207": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5494
      ],
      "op": "PUSH1",
      "path": "152",
      "statement": 30,
      "value": "0x0"
    },
    "2209": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5498
      ],
      "op": "DUP6",
      "path": "152"
    },
    "2210": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5498
      ],
      "op": "DUP2",
      "path": "152"
    },
    "2211": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5498
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "2212": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5498
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x20"
    },
    "2214": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5498
      ],
      "op": "DUP2",
      "path": "152"
    },
    "2215": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5498
      ],
      "op": "DUP2",
      "path": "152"
    },
    "2216": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5498
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "2217": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5498
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x40"
    },
    "2219": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5498
      ],
      "op": "DUP1",
      "path": "152"
    },
    "2220": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5498
      ],
      "op": "DUP4",
      "path": "152"
    },
    "2221": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5498
      ],
      "op": "KECCAK256",
      "path": "152"
    },
    "2222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2224": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2226": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2228": {
      "op": "SHL"
    },
    "2229": {
      "op": "SUB"
    },
    "2230": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5504
      ],
      "op": "DUP12",
      "path": "152"
    },
    "2231": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5504
      ],
      "op": "DUP2",
      "path": "152"
    },
    "2232": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5504
      ],
      "op": "AND",
      "path": "152"
    },
    "2233": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5504
      ],
      "op": "DUP6",
      "path": "152"
    },
    "2234": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5504
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "2235": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5504
      ],
      "op": "SWAP3",
      "path": "152"
    },
    "2236": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5504
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "2237": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5504
      ],
      "op": "DUP1",
      "path": "152"
    },
    "2238": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5504
      ],
      "op": "DUP4",
      "path": "152"
    },
    "2239": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5504
      ],
      "op": "KECCAK256",
      "path": "152"
    },
    "2240": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5507,
        5527
      ],
      "op": "DUP8",
      "path": "152"
    },
    "2241": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5507,
        5527
      ],
      "op": "DUP6",
      "path": "152"
    },
    "2242": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5507,
        5527
      ],
      "op": "SUB",
      "path": "152"
    },
    "2243": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5527
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "2244": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5527
      ],
      "op": "SSTORE",
      "path": "152"
    },
    "2245": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5547,
        5564
      ],
      "op": "SWAP1",
      "path": "152",
      "statement": 31
    },
    "2246": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5547,
        5564
      ],
      "op": "DUP9",
      "path": "152"
    },
    "2247": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5547,
        5564
      ],
      "op": "AND",
      "path": "152"
    },
    "2248": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5547,
        5564
      ],
      "op": "DUP3",
      "path": "152"
    },
    "2249": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5547,
        5564
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "2250": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5547,
        5564
      ],
      "op": "DUP2",
      "path": "152"
    },
    "2251": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5547,
        5564
      ],
      "op": "KECCAK256",
      "path": "152"
    },
    "2252": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5547,
        5574
      ],
      "op": "DUP1",
      "path": "152"
    },
    "2253": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5547,
        5574
      ],
      "op": "SLOAD",
      "path": "152"
    },
    "2254": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5507,
        5527
      ],
      "op": "DUP7",
      "path": "152"
    },
    "2255": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5507,
        5527
      ],
      "op": "SWAP3",
      "path": "152"
    },
    "2256": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5494
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "2257": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5547,
        5574
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x8DB"
    },
    "2260": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5547,
        5574
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "2261": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5507,
        5527
      ],
      "op": "DUP5",
      "path": "152"
    },
    "2262": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5507,
        5527
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "2263": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5547,
        5574
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x118B"
    },
    "2266": {
      "fn": "ERC1155._safeTransferFrom",
      "jump": "i",
      "offset": [
        5547,
        5574
      ],
      "op": "JUMP",
      "path": "152"
    },
    "2267": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5547,
        5574
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "2268": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5547,
        5574
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "2269": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5547,
        5574
      ],
      "op": "SWAP2",
      "path": "152"
    },
    "2270": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5547,
        5574
      ],
      "op": "SSTORE",
      "path": "152"
    },
    "2271": {
      "op": "POP"
    },
    "2272": {
      "op": "POP"
    },
    "2273": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "PUSH1",
      "path": "152",
      "statement": 32,
      "value": "0x40"
    },
    "2275": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "DUP1",
      "path": "152"
    },
    "2276": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "2277": {
      "op": "DUP7"
    },
    "2278": {
      "op": "DUP2"
    },
    "2279": {
      "op": "MSTORE"
    },
    "2280": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2282": {
      "op": "DUP2"
    },
    "2283": {
      "op": "ADD"
    },
    "2284": {
      "op": "DUP7"
    },
    "2285": {
      "op": "SWAP1"
    },
    "2286": {
      "op": "MSTORE"
    },
    "2287": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2289": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2291": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2293": {
      "op": "SHL"
    },
    "2294": {
      "op": "SUB"
    },
    "2295": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "DUP1",
      "path": "152"
    },
    "2296": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "DUP10",
      "path": "152"
    },
    "2297": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "AND",
      "path": "152"
    },
    "2298": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "SWAP3",
      "path": "152"
    },
    "2299": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "DUP11",
      "path": "152"
    },
    "2300": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "DUP3",
      "path": "152"
    },
    "2301": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "AND",
      "path": "152"
    },
    "2302": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "SWAP3",
      "path": "152"
    },
    "2303": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "SWAP2",
      "path": "152"
    },
    "2304": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "DUP7",
      "path": "152"
    },
    "2305": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "AND",
      "path": "152"
    },
    "2306": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "SWAP2",
      "path": "152"
    },
    "2307": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "PUSH32",
      "path": "152",
      "value": "0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
    },
    "2340": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "SWAP2",
      "path": "152"
    },
    "2341": {
      "op": "ADD"
    },
    "2342": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x40"
    },
    "2344": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "2345": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "DUP1",
      "path": "152"
    },
    "2346": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "SWAP2",
      "path": "152"
    },
    "2347": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "SUB",
      "path": "152"
    },
    "2348": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "2349": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "LOG4",
      "path": "152"
    },
    "2350": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5647,
        5715
      ],
      "op": "PUSH2",
      "path": "152",
      "statement": 33,
      "value": "0x93B"
    },
    "2353": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5678,
        5686
      ],
      "op": "DUP3",
      "path": "152"
    },
    "2354": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5688,
        5692
      ],
      "op": "DUP9",
      "path": "152"
    },
    "2355": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5694,
        5696
      ],
      "op": "DUP9",
      "path": "152"
    },
    "2356": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5698,
        5700
      ],
      "op": "DUP9",
      "path": "152"
    },
    "2357": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5702,
        5708
      ],
      "op": "DUP9",
      "path": "152"
    },
    "2358": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5710,
        5714
      ],
      "op": "DUP9",
      "path": "152"
    },
    "2359": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5647,
        5677
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0xAEA"
    },
    "2362": {
      "fn": "ERC1155._safeTransferFrom",
      "jump": "i",
      "offset": [
        5647,
        5715
      ],
      "op": "JUMP",
      "path": "152"
    },
    "2363": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5647,
        5715
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "2364": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5088,
        5722
      ],
      "op": "POP",
      "path": "152"
    },
    "2365": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5088,
        5722
      ],
      "op": "POP",
      "path": "152"
    },
    "2366": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        4925,
        5722
      ],
      "op": "POP",
      "path": "152"
    },
    "2367": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        4925,
        5722
      ],
      "op": "POP",
      "path": "152"
    },
    "2368": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        4925,
        5722
      ],
      "op": "POP",
      "path": "152"
    },
    "2369": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        4925,
        5722
      ],
      "op": "POP",
      "path": "152"
    },
    "2370": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        4925,
        5722
      ],
      "op": "POP",
      "path": "152"
    },
    "2371": {
      "fn": "ERC1155._safeTransferFrom",
      "jump": "o",
      "offset": [
        4925,
        5722
      ],
      "op": "JUMP",
      "path": "152"
    },
    "2372": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14282,
        15074
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "2373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2377": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2379": {
      "op": "SHL"
    },
    "2380": {
      "op": "SUB"
    },
    "2381": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14514,
        14527
      ],
      "op": "DUP5",
      "path": "152"
    },
    "2382": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14514,
        14527
      ],
      "op": "AND",
      "path": "152"
    },
    "2383": {
      "fn": "Address.isContract",
      "offset": [
        1450,
        1469
      ],
      "op": "EXTCODESIZE",
      "path": "198",
      "statement": 34
    },
    "2384": {
      "fn": "Address.isContract",
      "offset": [
        1450,
        1473
      ],
      "op": "ISZERO",
      "path": "198"
    },
    "2385": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14510,
        15068
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x736"
    },
    "2388": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14510,
        15068
      ],
      "op": "JUMPI",
      "path": "152"
    },
    "2389": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x40"
    },
    "2391": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "2392": {
      "op": "PUSH4",
      "value": "0xBC197C81"
    },
    "2397": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2399": {
      "op": "SHL"
    },
    "2400": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "DUP2",
      "path": "152"
    },
    "2401": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "2402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2406": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2408": {
      "op": "SHL"
    },
    "2409": {
      "op": "SUB"
    },
    "2410": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14592
      ],
      "op": "DUP6",
      "path": "152"
    },
    "2411": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14592
      ],
      "op": "AND",
      "path": "152"
    },
    "2412": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14592
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "2413": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14592
      ],
      "op": "PUSH4",
      "path": "152",
      "value": "0xBC197C81"
    },
    "2418": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14592
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "2419": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x988"
    },
    "2422": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "2423": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14593,
        14601
      ],
      "op": "DUP10",
      "path": "152"
    },
    "2424": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14593,
        14601
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "2425": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14603,
        14607
      ],
      "op": "DUP10",
      "path": "152"
    },
    "2426": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14603,
        14607
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "2427": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14609,
        14612
      ],
      "op": "DUP9",
      "path": "152"
    },
    "2428": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14609,
        14612
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "2429": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14614,
        14621
      ],
      "op": "DUP9",
      "path": "152"
    },
    "2430": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14614,
        14621
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "2431": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14623,
        14627
      ],
      "op": "DUP9",
      "path": "152"
    },
    "2432": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14623,
        14627
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "2433": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x4"
    },
    "2435": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "ADD",
      "path": "152"
    },
    "2436": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x11CC"
    },
    "2439": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        14549,
        14628
      ],
      "op": "JUMP",
      "path": "152"
    },
    "2440": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "2441": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x20"
    },
    "2443": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x40"
    },
    "2445": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "2446": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "DUP1",
      "path": "152"
    },
    "2447": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "DUP4",
      "path": "152"
    },
    "2448": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "SUB",
      "path": "152"
    },
    "2449": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "DUP2",
      "path": "152"
    },
    "2450": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x0"
    },
    "2452": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "DUP8",
      "path": "152"
    },
    "2453": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "GAS",
      "path": "152"
    },
    "2454": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "CALL",
      "path": "152"
    },
    "2455": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "SWAP3",
      "path": "152"
    },
    "2456": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "POP",
      "path": "152"
    },
    "2457": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "POP",
      "path": "152"
    },
    "2458": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "POP",
      "path": "152"
    },
    "2459": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "DUP1",
      "path": "152"
    },
    "2460": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "ISZERO",
      "path": "152"
    },
    "2461": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x9C3"
    },
    "2464": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "JUMPI",
      "path": "152"
    },
    "2465": {
      "op": "POP"
    },
    "2466": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x40"
    },
    "2468": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "DUP1",
      "path": "152"
    },
    "2469": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "2470": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x1F"
    },
    "2472": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "RETURNDATASIZE",
      "path": "152"
    },
    "2473": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "2474": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "DUP2",
      "path": "152"
    },
    "2475": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "ADD",
      "path": "152"
    },
    "2476": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2478": {
      "op": "NOT"
    },
    "2479": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "AND",
      "path": "152"
    },
    "2480": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "DUP3",
      "path": "152"
    },
    "2481": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "ADD",
      "path": "152"
    },
    "2482": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "2483": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "SWAP3",
      "path": "152"
    },
    "2484": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "2485": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x9C0"
    },
    "2488": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "SWAP2",
      "path": "152"
    },
    "2489": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "DUP2",
      "path": "152"
    },
    "2490": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "ADD",
      "path": "152"
    },
    "2491": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "2492": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x122A"
    },
    "2495": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        14549,
        14628
      ],
      "op": "JUMP",
      "path": "152"
    },
    "2496": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "2497": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x1"
    },
    "2499": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "2500": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0xA6F"
    },
    "2503": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "JUMPI",
      "path": "152"
    },
    "2504": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x9CF"
    },
    "2507": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x1247"
    },
    "2510": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        14545,
        15058
      ],
      "op": "JUMP",
      "path": "152"
    },
    "2511": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "2512": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "DUP1",
      "path": "152"
    },
    "2513": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "PUSH4",
      "path": "152",
      "value": "0x8C379A0"
    },
    "2518": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "SUB",
      "path": "152"
    },
    "2519": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0xA08"
    },
    "2522": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "JUMPI",
      "path": "152"
    },
    "2523": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "POP",
      "path": "152"
    },
    "2524": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x9E3"
    },
    "2527": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x1263"
    },
    "2530": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        14545,
        15058
      ],
      "op": "JUMP",
      "path": "152"
    },
    "2531": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "2532": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "DUP1",
      "path": "152"
    },
    "2533": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x9EE"
    },
    "2536": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "JUMPI",
      "path": "152"
    },
    "2537": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "POP",
      "path": "152"
    },
    "2538": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0xA0A"
    },
    "2541": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "JUMP",
      "path": "152"
    },
    "2542": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "2543": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14934,
        14940
      ],
      "op": "DUP1",
      "path": "152",
      "statement": 35
    },
    "2544": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14927,
        14941
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x40"
    },
    "2546": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14927,
        14941
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "2547": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2551": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2553": {
      "op": "SHL"
    },
    "2554": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14927,
        14941
      ],
      "op": "DUP2",
      "path": "152"
    },
    "2555": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14927,
        14941
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "2556": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14927,
        14941
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x4"
    },
    "2558": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14927,
        14941
      ],
      "op": "ADD",
      "path": "152"
    },
    "2559": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14927,
        14941
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x1F4"
    },
    "2562": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14927,
        14941
      ],
      "op": "SWAP2",
      "path": "152"
    },
    "2563": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14927,
        14941
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "2564": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14927,
        14941
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0xC87"
    },
    "2567": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        14927,
        14941
      ],
      "op": "JUMP",
      "path": "152"
    },
    "2568": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "2569": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "POP",
      "path": "152"
    },
    "2570": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "2571": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14981,
        15043
      ],
      "op": "PUSH1",
      "path": "152",
      "statement": 36,
      "value": "0x40"
    },
    "2573": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14981,
        15043
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "2574": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2578": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2580": {
      "op": "SHL"
    },
    "2581": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14981,
        15043
      ],
      "op": "DUP2",
      "path": "152"
    },
    "2582": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14981,
        15043
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "2583": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2585": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14981,
        15043
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x4"
    },
    "2587": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14981,
        15043
      ],
      "op": "DUP3",
      "path": "152"
    },
    "2588": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14981,
        15043
      ],
      "op": "ADD",
      "path": "152"
    },
    "2589": {
      "op": "MSTORE"
    },
    "2590": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "2592": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2594": {
      "op": "DUP3"
    },
    "2595": {
      "op": "ADD"
    },
    "2596": {
      "op": "MSTORE"
    },
    "2597": {
      "op": "PUSH32",
      "value": "0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
    },
    "2630": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2632": {
      "op": "DUP3"
    },
    "2633": {
      "op": "ADD"
    },
    "2634": {
      "op": "MSTORE"
    },
    "2635": {
      "op": "PUSH20",
      "value": "0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "2656": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "2658": {
      "op": "SHL"
    },
    "2659": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2661": {
      "op": "DUP3"
    },
    "2662": {
      "op": "ADD"
    },
    "2663": {
      "op": "MSTORE"
    },
    "2664": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2666": {
      "op": "ADD"
    },
    "2667": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14981,
        15043
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x1F4"
    },
    "2670": {
      "op": "JUMP"
    },
    "2671": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "2672": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2674": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2676": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2678": {
      "op": "SHL"
    },
    "2679": {
      "op": "SUB"
    },
    "2680": {
      "op": "NOT"
    },
    "2681": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14707,
        14767
      ],
      "op": "DUP2",
      "path": "152"
    },
    "2682": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14707,
        14767
      ],
      "op": "AND",
      "path": "152"
    },
    "2683": {
      "op": "PUSH4",
      "value": "0xBC197C81"
    },
    "2688": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2690": {
      "op": "SHL"
    },
    "2691": {
      "branch": 53,
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14707,
        14767
      ],
      "op": "EQ",
      "path": "152"
    },
    "2692": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14703,
        14860
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x93B"
    },
    "2695": {
      "branch": 53,
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14703,
        14860
      ],
      "op": "JUMPI",
      "path": "152"
    },
    "2696": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14791,
        14841
      ],
      "op": "PUSH1",
      "path": "152",
      "statement": 37,
      "value": "0x40"
    },
    "2698": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14791,
        14841
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "2699": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2703": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2705": {
      "op": "SHL"
    },
    "2706": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14791,
        14841
      ],
      "op": "DUP2",
      "path": "152"
    },
    "2707": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14791,
        14841
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "2708": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14791,
        14841
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x4"
    },
    "2710": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14791,
        14841
      ],
      "op": "ADD",
      "path": "152"
    },
    "2711": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14791,
        14841
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x1F4"
    },
    "2714": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14791,
        14841
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "2715": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14791,
        14841
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x12ED"
    },
    "2718": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        14791,
        14841
      ],
      "op": "JUMP",
      "path": "152"
    },
    "2719": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15080,
        15273
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "2720": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x40"
    },
    "2722": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "DUP1",
      "path": "152"
    },
    "2723": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "2724": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15213,
        15214
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x1"
    },
    "2726": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "DUP1",
      "path": "152"
    },
    "2727": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "DUP3",
      "path": "152"
    },
    "2728": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "2729": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "DUP2",
      "path": "152"
    },
    "2730": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "DUP4",
      "path": "152"
    },
    "2731": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "ADD",
      "path": "152"
    },
    "2732": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "2733": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "SWAP3",
      "path": "152"
    },
    "2734": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "2735": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15146,
        15162
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x60"
    },
    "2737": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15146,
        15162
      ],
      "op": "SWAP2",
      "path": "152"
    },
    "2738": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15174,
        15196
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x0"
    },
    "2740": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15174,
        15196
      ],
      "op": "SWAP2",
      "path": "152"
    },
    "2741": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "2742": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x20"
    },
    "2744": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "DUP1",
      "path": "152"
    },
    "2745": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "DUP4",
      "path": "152"
    },
    "2746": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "ADD",
      "path": "152"
    },
    "2747": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "2748": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "DUP1",
      "path": "152"
    },
    "2749": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "CALLDATASIZE",
      "path": "152"
    },
    "2750": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "DUP4",
      "path": "152"
    },
    "2751": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "CALLDATACOPY",
      "path": "152"
    },
    "2752": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "ADD",
      "path": "152"
    },
    "2753": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "2754": {
      "op": "POP"
    },
    "2755": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "POP",
      "path": "152"
    },
    "2756": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15174,
        15215
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "2757": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15174,
        15215
      ],
      "op": "POP",
      "path": "152"
    },
    "2758": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15236,
        15243
      ],
      "op": "DUP3",
      "path": "152",
      "statement": 38
    },
    "2759": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15230
      ],
      "op": "DUP2",
      "path": "152"
    },
    "2760": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15231,
        15232
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x0"
    },
    "2762": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15233
      ],
      "op": "DUP2",
      "path": "152"
    },
    "2763": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15233
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "2764": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15233
      ],
      "op": "DUP2",
      "path": "152"
    },
    "2765": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15233
      ],
      "op": "LT",
      "path": "152"
    },
    "2766": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15233
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0xAD9"
    },
    "2769": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15233
      ],
      "op": "JUMPI",
      "path": "152"
    },
    "2770": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15233
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0xAD9"
    },
    "2773": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15233
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x10B7"
    },
    "2776": {
      "fn": "ERC1155._asSingletonArray",
      "jump": "i",
      "offset": [
        15225,
        15233
      ],
      "op": "JUMP",
      "path": "152"
    },
    "2777": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15233
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "2778": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15233
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x20"
    },
    "2780": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15233
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "2781": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15233
      ],
      "op": "DUP2",
      "path": "152"
    },
    "2782": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15233
      ],
      "op": "MUL",
      "path": "152"
    },
    "2783": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15233
      ],
      "op": "SWAP2",
      "path": "152"
    },
    "2784": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15233
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "2785": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15233
      ],
      "op": "SWAP2",
      "path": "152"
    },
    "2786": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15233
      ],
      "op": "ADD",
      "path": "152"
    },
    "2787": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15233
      ],
      "op": "ADD",
      "path": "152"
    },
    "2788": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15243
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "2789": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15261,
        15266
      ],
      "op": "SWAP3",
      "path": "152",
      "statement": 39
    },
    "2790": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15080,
        15273
      ],
      "op": "SWAP2",
      "path": "152"
    },
    "2791": {
      "op": "POP"
    },
    "2792": {
      "op": "POP"
    },
    "2793": {
      "fn": "ERC1155._asSingletonArray",
      "jump": "o",
      "offset": [
        15080,
        15273
      ],
      "op": "JUMP",
      "path": "152"
    },
    "2794": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13551,
        14276
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "2795": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2797": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2799": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2801": {
      "op": "SHL"
    },
    "2802": {
      "op": "SUB"
    },
    "2803": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13758,
        13771
      ],
      "op": "DUP5",
      "path": "152"
    },
    "2804": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13758,
        13771
      ],
      "op": "AND",
      "path": "152"
    },
    "2805": {
      "fn": "Address.isContract",
      "offset": [
        1450,
        1469
      ],
      "op": "EXTCODESIZE",
      "path": "198"
    },
    "2806": {
      "fn": "Address.isContract",
      "offset": [
        1450,
        1473
      ],
      "op": "ISZERO",
      "path": "198"
    },
    "2807": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13754,
        14270
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x736"
    },
    "2810": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13754,
        14270
      ],
      "op": "JUMPI",
      "path": "152"
    },
    "2811": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x40"
    },
    "2813": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "2814": {
      "op": "PUSH4",
      "value": "0xF23A6E61"
    },
    "2819": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2821": {
      "op": "SHL"
    },
    "2822": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "DUP2",
      "path": "152"
    },
    "2823": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "2824": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2826": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2828": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2830": {
      "op": "SHL"
    },
    "2831": {
      "op": "SUB"
    },
    "2832": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13831
      ],
      "op": "DUP6",
      "path": "152"
    },
    "2833": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13831
      ],
      "op": "AND",
      "path": "152"
    },
    "2834": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13831
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "2835": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13831
      ],
      "op": "PUSH4",
      "path": "152",
      "value": "0xF23A6E61"
    },
    "2840": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13831
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "2841": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0xB2E"
    },
    "2844": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "2845": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13832,
        13840
      ],
      "op": "DUP10",
      "path": "152"
    },
    "2846": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13832,
        13840
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "2847": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13842,
        13846
      ],
      "op": "DUP10",
      "path": "152"
    },
    "2848": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13842,
        13846
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "2849": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13848,
        13850
      ],
      "op": "DUP9",
      "path": "152"
    },
    "2850": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13848,
        13850
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "2851": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13852,
        13858
      ],
      "op": "DUP9",
      "path": "152"
    },
    "2852": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13852,
        13858
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "2853": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13860,
        13864
      ],
      "op": "DUP9",
      "path": "152"
    },
    "2854": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13860,
        13864
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "2855": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x4"
    },
    "2857": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "ADD",
      "path": "152"
    },
    "2858": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x1335"
    },
    "2861": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13793,
        13865
      ],
      "op": "JUMP",
      "path": "152"
    },
    "2862": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "2863": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x20"
    },
    "2865": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x40"
    },
    "2867": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "2868": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "DUP1",
      "path": "152"
    },
    "2869": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "DUP4",
      "path": "152"
    },
    "2870": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "SUB",
      "path": "152"
    },
    "2871": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "DUP2",
      "path": "152"
    },
    "2872": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x0"
    },
    "2874": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "DUP8",
      "path": "152"
    },
    "2875": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "GAS",
      "path": "152"
    },
    "2876": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "CALL",
      "path": "152"
    },
    "2877": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "SWAP3",
      "path": "152"
    },
    "2878": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "POP",
      "path": "152"
    },
    "2879": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "POP",
      "path": "152"
    },
    "2880": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "POP",
      "path": "152"
    },
    "2881": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "DUP1",
      "path": "152"
    },
    "2882": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "ISZERO",
      "path": "152"
    },
    "2883": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0xB69"
    },
    "2886": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "JUMPI",
      "path": "152"
    },
    "2887": {
      "op": "POP"
    },
    "2888": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x40"
    },
    "2890": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "DUP1",
      "path": "152"
    },
    "2891": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "2892": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x1F"
    },
    "2894": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "RETURNDATASIZE",
      "path": "152"
    },
    "2895": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "2896": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "DUP2",
      "path": "152"
    },
    "2897": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "ADD",
      "path": "152"
    },
    "2898": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2900": {
      "op": "NOT"
    },
    "2901": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "AND",
      "path": "152"
    },
    "2902": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "DUP3",
      "path": "152"
    },
    "2903": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "ADD",
      "path": "152"
    },
    "2904": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "2905": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "SWAP3",
      "path": "152"
    },
    "2906": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "2907": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0xB66"
    },
    "2910": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "SWAP2",
      "path": "152"
    },
    "2911": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "DUP2",
      "path": "152"
    },
    "2912": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "ADD",
      "path": "152"
    },
    "2913": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "2914": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x122A"
    },
    "2917": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13793,
        13865
      ],
      "op": "JUMP",
      "path": "152"
    },
    "2918": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "2919": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x1"
    },
    "2921": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "2922": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13789,
        14260
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0xB75"
    },
    "2925": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13789,
        14260
      ],
      "op": "JUMPI",
      "path": "152"
    },
    "2926": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13789,
        14260
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x9CF"
    },
    "2929": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13789,
        14260
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x1247"
    },
    "2932": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13789,
        14260
      ],
      "op": "JUMP",
      "path": "152"
    },
    "2933": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13789,
        14260
      ],
      "op": "JUMPDEST",
      "path": "152"
    },
    "2934": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2938": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2940": {
      "op": "SHL"
    },
    "2941": {
      "op": "SUB"
    },
    "2942": {
      "op": "NOT"
    },
    "2943": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13914,
        13969
      ],
      "op": "DUP2",
      "path": "152"
    },
    "2944": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13914,
        13969
      ],
      "op": "AND",
      "path": "152"
    },
    "2945": {
      "op": "PUSH4",
      "value": "0xF23A6E61"
    },
    "2950": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2952": {
      "op": "SHL"
    },
    "2953": {
      "branch": 54,
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13914,
        13969
      ],
      "op": "EQ",
      "path": "152"
    },
    "2954": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13910,
        14062
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x93B"
    },
    "2957": {
      "branch": 54,
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13910,
        14062
      ],
      "op": "JUMPI",
      "path": "152"
    },
    "2958": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13993,
        14043
      ],
      "op": "PUSH1",
      "path": "152",
      "statement": 40,
      "value": "0x40"
    },
    "2960": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13993,
        14043
      ],
      "op": "MLOAD",
      "path": "152"
    },
    "2961": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2965": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2967": {
      "op": "SHL"
    },
    "2968": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13993,
        14043
      ],
      "op": "DUP2",
      "path": "152"
    },
    "2969": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13993,
        14043
      ],
      "op": "MSTORE",
      "path": "152"
    },
    "2970": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13993,
        14043
      ],
      "op": "PUSH1",
      "path": "152",
      "value": "0x4"
    },
    "2972": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13993,
        14043
      ],
      "op": "ADD",
      "path": "152"
    },
    "2973": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13993,
        14043
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x1F4"
    },
    "2976": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13993,
        14043
      ],
      "op": "SWAP1",
      "path": "152"
    },
    "2977": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13993,
        14043
      ],
      "op": "PUSH2",
      "path": "152",
      "value": "0x12ED"
    },
    "2980": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13993,
        14043
      ],
      "op": "JUMP",
      "path": "152"
    },
    "2981": {
      "op": "JUMPDEST"
    },
    "2982": {
      "op": "DUP1"
    },
    "2983": {
      "op": "CALLDATALOAD"
    },
    "2984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2986": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2988": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2990": {
      "op": "SHL"
    },
    "2991": {
      "op": "SUB"
    },
    "2992": {
      "op": "DUP2"
    },
    "2993": {
      "op": "AND"
    },
    "2994": {
      "op": "DUP2"
    },
    "2995": {
      "op": "EQ"
    },
    "2996": {
      "op": "PUSH2",
      "value": "0xBBC"
    },
    "2999": {
      "op": "JUMPI"
    },
    "3000": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3002": {
      "op": "DUP1"
    },
    "3003": {
      "op": "REVERT"
    },
    "3004": {
      "op": "JUMPDEST"
    },
    "3005": {
      "op": "SWAP2"
    },
    "3006": {
      "op": "SWAP1"
    },
    "3007": {
      "op": "POP"
    },
    "3008": {
      "jump": "o",
      "op": "JUMP"
    },
    "3009": {
      "op": "JUMPDEST"
    },
    "3010": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3012": {
      "op": "DUP1"
    },
    "3013": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3015": {
      "op": "DUP4"
    },
    "3016": {
      "op": "DUP6"
    },
    "3017": {
      "op": "SUB"
    },
    "3018": {
      "op": "SLT"
    },
    "3019": {
      "op": "ISZERO"
    },
    "3020": {
      "op": "PUSH2",
      "value": "0xBD4"
    },
    "3023": {
      "op": "JUMPI"
    },
    "3024": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3026": {
      "op": "DUP1"
    },
    "3027": {
      "op": "REVERT"
    },
    "3028": {
      "op": "JUMPDEST"
    },
    "3029": {
      "op": "PUSH2",
      "value": "0xBDD"
    },
    "3032": {
      "op": "DUP4"
    },
    "3033": {
      "op": "PUSH2",
      "value": "0xBA5"
    },
    "3036": {
      "jump": "i",
      "op": "JUMP"
    },
    "3037": {
      "op": "JUMPDEST"
    },
    "3038": {
      "op": "SWAP5"
    },
    "3039": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3041": {
      "op": "SWAP4"
    },
    "3042": {
      "op": "SWAP1"
    },
    "3043": {
      "op": "SWAP4"
    },
    "3044": {
      "op": "ADD"
    },
    "3045": {
      "op": "CALLDATALOAD"
    },
    "3046": {
      "op": "SWAP4"
    },
    "3047": {
      "op": "POP"
    },
    "3048": {
      "op": "POP"
    },
    "3049": {
      "op": "POP"
    },
    "3050": {
      "jump": "o",
      "op": "JUMP"
    },
    "3051": {
      "op": "JUMPDEST"
    },
    "3052": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3054": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3056": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3058": {
      "op": "SHL"
    },
    "3059": {
      "op": "SUB"
    },
    "3060": {
      "op": "NOT"
    },
    "3061": {
      "op": "DUP2"
    },
    "3062": {
      "op": "AND"
    },
    "3063": {
      "op": "DUP2"
    },
    "3064": {
      "op": "EQ"
    },
    "3065": {
      "op": "PUSH2",
      "value": "0xC01"
    },
    "3068": {
      "op": "JUMPI"
    },
    "3069": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3071": {
      "op": "DUP1"
    },
    "3072": {
      "op": "REVERT"
    },
    "3073": {
      "op": "JUMPDEST"
    },
    "3074": {
      "op": "POP"
    },
    "3075": {
      "jump": "o",
      "op": "JUMP"
    },
    "3076": {
      "op": "JUMPDEST"
    },
    "3077": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3079": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3081": {
      "op": "DUP3"
    },
    "3082": {
      "op": "DUP5"
    },
    "3083": {
      "op": "SUB"
    },
    "3084": {
      "op": "SLT"
    },
    "3085": {
      "op": "ISZERO"
    },
    "3086": {
      "op": "PUSH2",
      "value": "0xC16"
    },
    "3089": {
      "op": "JUMPI"
    },
    "3090": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3092": {
      "op": "DUP1"
    },
    "3093": {
      "op": "REVERT"
    },
    "3094": {
      "op": "JUMPDEST"
    },
    "3095": {
      "op": "DUP2"
    },
    "3096": {
      "op": "CALLDATALOAD"
    },
    "3097": {
      "op": "PUSH2",
      "value": "0xC21"
    },
    "3100": {
      "op": "DUP2"
    },
    "3101": {
      "op": "PUSH2",
      "value": "0xBEB"
    },
    "3104": {
      "jump": "i",
      "op": "JUMP"
    },
    "3105": {
      "op": "JUMPDEST"
    },
    "3106": {
      "op": "SWAP4"
    },
    "3107": {
      "op": "SWAP3"
    },
    "3108": {
      "op": "POP"
    },
    "3109": {
      "op": "POP"
    },
    "3110": {
      "op": "POP"
    },
    "3111": {
      "jump": "o",
      "op": "JUMP"
    },
    "3112": {
      "op": "JUMPDEST"
    },
    "3113": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3115": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3117": {
      "op": "DUP3"
    },
    "3118": {
      "op": "DUP5"
    },
    "3119": {
      "op": "SUB"
    },
    "3120": {
      "op": "SLT"
    },
    "3121": {
      "op": "ISZERO"
    },
    "3122": {
      "op": "PUSH2",
      "value": "0xC3A"
    },
    "3125": {
      "op": "JUMPI"
    },
    "3126": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3128": {
      "op": "DUP1"
    },
    "3129": {
      "op": "REVERT"
    },
    "3130": {
      "op": "JUMPDEST"
    },
    "3131": {
      "op": "POP"
    },
    "3132": {
      "op": "CALLDATALOAD"
    },
    "3133": {
      "op": "SWAP2"
    },
    "3134": {
      "op": "SWAP1"
    },
    "3135": {
      "op": "POP"
    },
    "3136": {
      "jump": "o",
      "op": "JUMP"
    },
    "3137": {
      "op": "JUMPDEST"
    },
    "3138": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3140": {
      "op": "DUP2"
    },
    "3141": {
      "op": "MLOAD"
    },
    "3142": {
      "op": "DUP1"
    },
    "3143": {
      "op": "DUP5"
    },
    "3144": {
      "op": "MSTORE"
    },
    "3145": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3147": {
      "op": "JUMPDEST"
    },
    "3148": {
      "op": "DUP2"
    },
    "3149": {
      "op": "DUP2"
    },
    "3150": {
      "op": "LT"
    },
    "3151": {
      "op": "ISZERO"
    },
    "3152": {
      "op": "PUSH2",
      "value": "0xC67"
    },
    "3155": {
      "op": "JUMPI"
    },
    "3156": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3158": {
      "op": "DUP2"
    },
    "3159": {
      "op": "DUP6"
    },
    "3160": {
      "op": "ADD"
    },
    "3161": {
      "op": "DUP2"
    },
    "3162": {
      "op": "ADD"
    },
    "3163": {
      "op": "MLOAD"
    },
    "3164": {
      "op": "DUP7"
    },
    "3165": {
      "op": "DUP4"
    },
    "3166": {
      "op": "ADD"
    },
    "3167": {
      "op": "DUP3"
    },
    "3168": {
      "op": "ADD"
    },
    "3169": {
      "op": "MSTORE"
    },
    "3170": {
      "op": "ADD"
    },
    "3171": {
      "op": "PUSH2",
      "value": "0xC4B"
    },
    "3174": {
      "op": "JUMP"
    },
    "3175": {
      "op": "JUMPDEST"
    },
    "3176": {
      "op": "POP"
    },
    "3177": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3179": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3181": {
      "op": "DUP3"
    },
    "3182": {
      "op": "DUP7"
    },
    "3183": {
      "op": "ADD"
    },
    "3184": {
      "op": "ADD"
    },
    "3185": {
      "op": "MSTORE"
    },
    "3186": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3188": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3190": {
      "op": "NOT"
    },
    "3191": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3193": {
      "op": "DUP4"
    },
    "3194": {
      "op": "ADD"
    },
    "3195": {
      "op": "AND"
    },
    "3196": {
      "op": "DUP6"
    },
    "3197": {
      "op": "ADD"
    },
    "3198": {
      "op": "ADD"
    },
    "3199": {
      "op": "SWAP2"
    },
    "3200": {
      "op": "POP"
    },
    "3201": {
      "op": "POP"
    },
    "3202": {
      "op": "SWAP3"
    },
    "3203": {
      "op": "SWAP2"
    },
    "3204": {
      "op": "POP"
    },
    "3205": {
      "op": "POP"
    },
    "3206": {
      "jump": "o",
      "op": "JUMP"
    },
    "3207": {
      "op": "JUMPDEST"
    },
    "3208": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3210": {
      "op": "DUP2"
    },
    "3211": {
      "op": "MSTORE"
    },
    "3212": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3214": {
      "op": "PUSH2",
      "value": "0xC21"
    },
    "3217": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3219": {
      "op": "DUP4"
    },
    "3220": {
      "op": "ADD"
    },
    "3221": {
      "op": "DUP5"
    },
    "3222": {
      "op": "PUSH2",
      "value": "0xC41"
    },
    "3225": {
      "jump": "i",
      "op": "JUMP"
    },
    "3226": {
      "op": "JUMPDEST"
    },
    "3227": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3232": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3234": {
      "op": "SHL"
    },
    "3235": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3237": {
      "op": "MSTORE"
    },
    "3238": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "3240": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3242": {
      "op": "MSTORE"
    },
    "3243": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3245": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3247": {
      "op": "REVERT"
    },
    "3248": {
      "op": "JUMPDEST"
    },
    "3249": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3251": {
      "op": "DUP3"
    },
    "3252": {
      "op": "ADD"
    },
    "3253": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3255": {
      "op": "NOT"
    },
    "3256": {
      "op": "AND"
    },
    "3257": {
      "op": "DUP2"
    },
    "3258": {
      "op": "ADD"
    },
    "3259": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3268": {
      "op": "DUP2"
    },
    "3269": {
      "op": "GT"
    },
    "3270": {
      "op": "DUP3"
    },
    "3271": {
      "op": "DUP3"
    },
    "3272": {
      "op": "LT"
    },
    "3273": {
      "op": "OR"
    },
    "3274": {
      "op": "ISZERO"
    },
    "3275": {
      "op": "PUSH2",
      "value": "0xCD6"
    },
    "3278": {
      "op": "JUMPI"
    },
    "3279": {
      "op": "PUSH2",
      "value": "0xCD6"
    },
    "3282": {
      "op": "PUSH2",
      "value": "0xC9A"
    },
    "3285": {
      "jump": "i",
      "op": "JUMP"
    },
    "3286": {
      "op": "JUMPDEST"
    },
    "3287": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3289": {
      "op": "MSTORE"
    },
    "3290": {
      "op": "POP"
    },
    "3291": {
      "op": "POP"
    },
    "3292": {
      "jump": "o",
      "op": "JUMP"
    },
    "3293": {
      "op": "JUMPDEST"
    },
    "3294": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3296": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3305": {
      "op": "DUP3"
    },
    "3306": {
      "op": "GT"
    },
    "3307": {
      "op": "ISZERO"
    },
    "3308": {
      "op": "PUSH2",
      "value": "0xCF7"
    },
    "3311": {
      "op": "JUMPI"
    },
    "3312": {
      "op": "PUSH2",
      "value": "0xCF7"
    },
    "3315": {
      "op": "PUSH2",
      "value": "0xC9A"
    },
    "3318": {
      "jump": "i",
      "op": "JUMP"
    },
    "3319": {
      "op": "JUMPDEST"
    },
    "3320": {
      "op": "POP"
    },
    "3321": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "3323": {
      "op": "SHL"
    },
    "3324": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3326": {
      "op": "ADD"
    },
    "3327": {
      "op": "SWAP1"
    },
    "3328": {
      "jump": "o",
      "op": "JUMP"
    },
    "3329": {
      "op": "JUMPDEST"
    },
    "3330": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3332": {
      "op": "DUP3"
    },
    "3333": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3335": {
      "op": "DUP4"
    },
    "3336": {
      "op": "ADD"
    },
    "3337": {
      "op": "SLT"
    },
    "3338": {
      "op": "PUSH2",
      "value": "0xD12"
    },
    "3341": {
      "op": "JUMPI"
    },
    "3342": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3344": {
      "op": "DUP1"
    },
    "3345": {
      "op": "REVERT"
    },
    "3346": {
      "op": "JUMPDEST"
    },
    "3347": {
      "op": "DUP2"
    },
    "3348": {
      "op": "CALLDATALOAD"
    },
    "3349": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3351": {
      "op": "PUSH2",
      "value": "0xD1F"
    },
    "3354": {
      "op": "DUP3"
    },
    "3355": {
      "op": "PUSH2",
      "value": "0xCDD"
    },
    "3358": {
      "jump": "i",
      "op": "JUMP"
    },
    "3359": {
      "op": "JUMPDEST"
    },
    "3360": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3362": {
      "op": "MLOAD"
    },
    "3363": {
      "op": "PUSH2",
      "value": "0xD2C"
    },
    "3366": {
      "op": "DUP3"
    },
    "3367": {
      "op": "DUP3"
    },
    "3368": {
      "op": "PUSH2",
      "value": "0xCB0"
    },
    "3371": {
      "jump": "i",
      "op": "JUMP"
    },
    "3372": {
      "op": "JUMPDEST"
    },
    "3373": {
      "op": "DUP4"
    },
    "3374": {
      "op": "DUP2"
    },
    "3375": {
      "op": "MSTORE"
    },
    "3376": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "3378": {
      "op": "SWAP4"
    },
    "3379": {
      "op": "SWAP1"
    },
    "3380": {
      "op": "SWAP4"
    },
    "3381": {
      "op": "SHL"
    },
    "3382": {
      "op": "DUP6"
    },
    "3383": {
      "op": "ADD"
    },
    "3384": {
      "op": "DUP3"
    },
    "3385": {
      "op": "ADD"
    },
    "3386": {
      "op": "SWAP3"
    },
    "3387": {
      "op": "DUP3"
    },
    "3388": {
      "op": "DUP2"
    },
    "3389": {
      "op": "ADD"
    },
    "3390": {
      "op": "SWAP2"
    },
    "3391": {
      "op": "POP"
    },
    "3392": {
      "op": "DUP7"
    },
    "3393": {
      "op": "DUP5"
    },
    "3394": {
      "op": "GT"
    },
    "3395": {
      "op": "ISZERO"
    },
    "3396": {
      "op": "PUSH2",
      "value": "0xD4C"
    },
    "3399": {
      "op": "JUMPI"
    },
    "3400": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3402": {
      "op": "DUP1"
    },
    "3403": {
      "op": "REVERT"
    },
    "3404": {
      "op": "JUMPDEST"
    },
    "3405": {
      "op": "DUP3"
    },
    "3406": {
      "op": "DUP7"
    },
    "3407": {
      "op": "ADD"
    },
    "3408": {
      "op": "JUMPDEST"
    },
    "3409": {
      "op": "DUP5"
    },
    "3410": {
      "op": "DUP2"
    },
    "3411": {
      "op": "LT"
    },
    "3412": {
      "op": "ISZERO"
    },
    "3413": {
      "op": "PUSH2",
      "value": "0xD67"
    },
    "3416": {
      "op": "JUMPI"
    },
    "3417": {
      "op": "DUP1"
    },
    "3418": {
      "op": "CALLDATALOAD"
    },
    "3419": {
      "op": "DUP4"
    },
    "3420": {
      "op": "MSTORE"
    },
    "3421": {
      "op": "SWAP2"
    },
    "3422": {
      "op": "DUP4"
    },
    "3423": {
      "op": "ADD"
    },
    "3424": {
      "op": "SWAP2"
    },
    "3425": {
      "op": "DUP4"
    },
    "3426": {
      "op": "ADD"
    },
    "3427": {
      "op": "PUSH2",
      "value": "0xD50"
    },
    "3430": {
      "op": "JUMP"
    },
    "3431": {
      "op": "JUMPDEST"
    },
    "3432": {
      "op": "POP"
    },
    "3433": {
      "op": "SWAP7"
    },
    "3434": {
      "op": "SWAP6"
    },
    "3435": {
      "op": "POP"
    },
    "3436": {
      "op": "POP"
    },
    "3437": {
      "op": "POP"
    },
    "3438": {
      "op": "POP"
    },
    "3439": {
      "op": "POP"
    },
    "3440": {
      "op": "POP"
    },
    "3441": {
      "jump": "o",
      "op": "JUMP"
    },
    "3442": {
      "op": "JUMPDEST"
    },
    "3443": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3445": {
      "op": "DUP3"
    },
    "3446": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3448": {
      "op": "DUP4"
    },
    "3449": {
      "op": "ADD"
    },
    "3450": {
      "op": "SLT"
    },
    "3451": {
      "op": "PUSH2",
      "value": "0xD83"
    },
    "3454": {
      "op": "JUMPI"
    },
    "3455": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3457": {
      "op": "DUP1"
    },
    "3458": {
      "op": "REVERT"
    },
    "3459": {
      "op": "JUMPDEST"
    },
    "3460": {
      "op": "DUP2"
    },
    "3461": {
      "op": "CALLDATALOAD"
    },
    "3462": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3471": {
      "op": "DUP2"
    },
    "3472": {
      "op": "GT"
    },
    "3473": {
      "op": "ISZERO"
    },
    "3474": {
      "op": "PUSH2",
      "value": "0xD9D"
    },
    "3477": {
      "op": "JUMPI"
    },
    "3478": {
      "op": "PUSH2",
      "value": "0xD9D"
    },
    "3481": {
      "op": "PUSH2",
      "value": "0xC9A"
    },
    "3484": {
      "jump": "i",
      "op": "JUMP"
    },
    "3485": {
      "op": "JUMPDEST"
    },
    "3486": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3488": {
      "op": "MLOAD"
    },
    "3489": {
      "op": "PUSH2",
      "value": "0xDB4"
    },
    "3492": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3494": {
      "op": "DUP4"
    },
    "3495": {
      "op": "ADD"
    },
    "3496": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3498": {
      "op": "NOT"
    },
    "3499": {
      "op": "AND"
    },
    "3500": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3502": {
      "op": "ADD"
    },
    "3503": {
      "op": "DUP3"
    },
    "3504": {
      "op": "PUSH2",
      "value": "0xCB0"
    },
    "3507": {
      "jump": "i",
      "op": "JUMP"
    },
    "3508": {
      "op": "JUMPDEST"
    },
    "3509": {
      "op": "DUP2"
    },
    "3510": {
      "op": "DUP2"
    },
    "3511": {
      "op": "MSTORE"
    },
    "3512": {
      "op": "DUP5"
    },
    "3513": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3515": {
      "op": "DUP4"
    },
    "3516": {
      "op": "DUP7"
    },
    "3517": {
      "op": "ADD"
    },
    "3518": {
      "op": "ADD"
    },
    "3519": {
      "op": "GT"
    },
    "3520": {
      "op": "ISZERO"
    },
    "3521": {
      "op": "PUSH2",
      "value": "0xDC9"
    },
    "3524": {
      "op": "JUMPI"
    },
    "3525": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3527": {
      "op": "DUP1"
    },
    "3528": {
      "op": "REVERT"
    },
    "3529": {
      "op": "JUMPDEST"
    },
    "3530": {
      "op": "DUP2"
    },
    "3531": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3533": {
      "op": "DUP6"
    },
    "3534": {
      "op": "ADD"
    },
    "3535": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3537": {
      "op": "DUP4"
    },
    "3538": {
      "op": "ADD"
    },
    "3539": {
      "op": "CALLDATACOPY"
    },
    "3540": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3542": {
      "op": "SWAP2"
    },
    "3543": {
      "op": "DUP2"
    },
    "3544": {
      "op": "ADD"
    },
    "3545": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3547": {
      "op": "ADD"
    },
    "3548": {
      "op": "SWAP2"
    },
    "3549": {
      "op": "SWAP1"
    },
    "3550": {
      "op": "SWAP2"
    },
    "3551": {
      "op": "MSTORE"
    },
    "3552": {
      "op": "SWAP4"
    },
    "3553": {
      "op": "SWAP3"
    },
    "3554": {
      "op": "POP"
    },
    "3555": {
      "op": "POP"
    },
    "3556": {
      "op": "POP"
    },
    "3557": {
      "jump": "o",
      "op": "JUMP"
    },
    "3558": {
      "op": "JUMPDEST"
    },
    "3559": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3561": {
      "op": "DUP1"
    },
    "3562": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3564": {
      "op": "DUP1"
    },
    "3565": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3567": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3569": {
      "op": "DUP7"
    },
    "3570": {
      "op": "DUP9"
    },
    "3571": {
      "op": "SUB"
    },
    "3572": {
      "op": "SLT"
    },
    "3573": {
      "op": "ISZERO"
    },
    "3574": {
      "op": "PUSH2",
      "value": "0xDFE"
    },
    "3577": {
      "op": "JUMPI"
    },
    "3578": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3580": {
      "op": "DUP1"
    },
    "3581": {
      "op": "REVERT"
    },
    "3582": {
      "op": "JUMPDEST"
    },
    "3583": {
      "op": "PUSH2",
      "value": "0xE07"
    },
    "3586": {
      "op": "DUP7"
    },
    "3587": {
      "op": "PUSH2",
      "value": "0xBA5"
    },
    "3590": {
      "jump": "i",
      "op": "JUMP"
    },
    "3591": {
      "op": "JUMPDEST"
    },
    "3592": {
      "op": "SWAP5"
    },
    "3593": {
      "op": "POP"
    },
    "3594": {
      "op": "PUSH2",
      "value": "0xE15"
    },
    "3597": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3599": {
      "op": "DUP8"
    },
    "3600": {
      "op": "ADD"
    },
    "3601": {
      "op": "PUSH2",
      "value": "0xBA5"
    },
    "3604": {
      "jump": "i",
      "op": "JUMP"
    },
    "3605": {
      "op": "JUMPDEST"
    },
    "3606": {
      "op": "SWAP4"
    },
    "3607": {
      "op": "POP"
    },
    "3608": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3610": {
      "op": "DUP7"
    },
    "3611": {
      "op": "ADD"
    },
    "3612": {
      "op": "CALLDATALOAD"
    },
    "3613": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3622": {
      "op": "DUP1"
    },
    "3623": {
      "op": "DUP3"
    },
    "3624": {
      "op": "GT"
    },
    "3625": {
      "op": "ISZERO"
    },
    "3626": {
      "op": "PUSH2",
      "value": "0xE32"
    },
    "3629": {
      "op": "JUMPI"
    },
    "3630": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3632": {
      "op": "DUP1"
    },
    "3633": {
      "op": "REVERT"
    },
    "3634": {
      "op": "JUMPDEST"
    },
    "3635": {
      "op": "PUSH2",
      "value": "0xE3E"
    },
    "3638": {
      "op": "DUP10"
    },
    "3639": {
      "op": "DUP4"
    },
    "3640": {
      "op": "DUP11"
    },
    "3641": {
      "op": "ADD"
    },
    "3642": {
      "op": "PUSH2",
      "value": "0xD01"
    },
    "3645": {
      "jump": "i",
      "op": "JUMP"
    },
    "3646": {
      "op": "JUMPDEST"
    },
    "3647": {
      "op": "SWAP5"
    },
    "3648": {
      "op": "POP"
    },
    "3649": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3651": {
      "op": "DUP9"
    },
    "3652": {
      "op": "ADD"
    },
    "3653": {
      "op": "CALLDATALOAD"
    },
    "3654": {
      "op": "SWAP2"
    },
    "3655": {
      "op": "POP"
    },
    "3656": {
      "op": "DUP1"
    },
    "3657": {
      "op": "DUP3"
    },
    "3658": {
      "op": "GT"
    },
    "3659": {
      "op": "ISZERO"
    },
    "3660": {
      "op": "PUSH2",
      "value": "0xE54"
    },
    "3663": {
      "op": "JUMPI"
    },
    "3664": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3666": {
      "op": "DUP1"
    },
    "3667": {
      "op": "REVERT"
    },
    "3668": {
      "op": "JUMPDEST"
    },
    "3669": {
      "op": "PUSH2",
      "value": "0xE60"
    },
    "3672": {
      "op": "DUP10"
    },
    "3673": {
      "op": "DUP4"
    },
    "3674": {
      "op": "DUP11"
    },
    "3675": {
      "op": "ADD"
    },
    "3676": {
      "op": "PUSH2",
      "value": "0xD01"
    },
    "3679": {
      "jump": "i",
      "op": "JUMP"
    },
    "3680": {
      "op": "JUMPDEST"
    },
    "3681": {
      "op": "SWAP4"
    },
    "3682": {
      "op": "POP"
    },
    "3683": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3685": {
      "op": "DUP9"
    },
    "3686": {
      "op": "ADD"
    },
    "3687": {
      "op": "CALLDATALOAD"
    },
    "3688": {
      "op": "SWAP2"
    },
    "3689": {
      "op": "POP"
    },
    "3690": {
      "op": "DUP1"
    },
    "3691": {
      "op": "DUP3"
    },
    "3692": {
      "op": "GT"
    },
    "3693": {
      "op": "ISZERO"
    },
    "3694": {
      "op": "PUSH2",
      "value": "0xE76"
    },
    "3697": {
      "op": "JUMPI"
    },
    "3698": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3700": {
      "op": "DUP1"
    },
    "3701": {
      "op": "REVERT"
    },
    "3702": {
      "op": "JUMPDEST"
    },
    "3703": {
      "op": "POP"
    },
    "3704": {
      "op": "PUSH2",
      "value": "0xE83"
    },
    "3707": {
      "op": "DUP9"
    },
    "3708": {
      "op": "DUP3"
    },
    "3709": {
      "op": "DUP10"
    },
    "3710": {
      "op": "ADD"
    },
    "3711": {
      "op": "PUSH2",
      "value": "0xD72"
    },
    "3714": {
      "jump": "i",
      "op": "JUMP"
    },
    "3715": {
      "op": "JUMPDEST"
    },
    "3716": {
      "op": "SWAP2"
    },
    "3717": {
      "op": "POP"
    },
    "3718": {
      "op": "POP"
    },
    "3719": {
      "op": "SWAP3"
    },
    "3720": {
      "op": "SWAP6"
    },
    "3721": {
      "op": "POP"
    },
    "3722": {
      "op": "SWAP3"
    },
    "3723": {
      "op": "SWAP6"
    },
    "3724": {
      "op": "SWAP1"
    },
    "3725": {
      "op": "SWAP4"
    },
    "3726": {
      "op": "POP"
    },
    "3727": {
      "jump": "o",
      "op": "JUMP"
    },
    "3728": {
      "op": "JUMPDEST"
    },
    "3729": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3731": {
      "op": "DUP1"
    },
    "3732": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3734": {
      "op": "DUP4"
    },
    "3735": {
      "op": "DUP6"
    },
    "3736": {
      "op": "SUB"
    },
    "3737": {
      "op": "SLT"
    },
    "3738": {
      "op": "ISZERO"
    },
    "3739": {
      "op": "PUSH2",
      "value": "0xEA3"
    },
    "3742": {
      "op": "JUMPI"
    },
    "3743": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3745": {
      "op": "DUP1"
    },
    "3746": {
      "op": "REVERT"
    },
    "3747": {
      "op": "JUMPDEST"
    },
    "3748": {
      "op": "DUP3"
    },
    "3749": {
      "op": "CALLDATALOAD"
    },
    "3750": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3759": {
      "op": "DUP1"
    },
    "3760": {
      "op": "DUP3"
    },
    "3761": {
      "op": "GT"
    },
    "3762": {
      "op": "ISZERO"
    },
    "3763": {
      "op": "PUSH2",
      "value": "0xEBB"
    },
    "3766": {
      "op": "JUMPI"
    },
    "3767": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3769": {
      "op": "DUP1"
    },
    "3770": {
      "op": "REVERT"
    },
    "3771": {
      "op": "JUMPDEST"
    },
    "3772": {
      "op": "DUP2"
    },
    "3773": {
      "op": "DUP6"
    },
    "3774": {
      "op": "ADD"
    },
    "3775": {
      "op": "SWAP2"
    },
    "3776": {
      "op": "POP"
    },
    "3777": {
      "op": "DUP6"
    },
    "3778": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3780": {
      "op": "DUP4"
    },
    "3781": {
      "op": "ADD"
    },
    "3782": {
      "op": "SLT"
    },
    "3783": {
      "op": "PUSH2",
      "value": "0xECF"
    },
    "3786": {
      "op": "JUMPI"
    },
    "3787": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3789": {
      "op": "DUP1"
    },
    "3790": {
      "op": "REVERT"
    },
    "3791": {
      "op": "JUMPDEST"
    },
    "3792": {
      "op": "DUP2"
    },
    "3793": {
      "op": "CALLDATALOAD"
    },
    "3794": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3796": {
      "op": "PUSH2",
      "value": "0xEDC"
    },
    "3799": {
      "op": "DUP3"
    },
    "3800": {
      "op": "PUSH2",
      "value": "0xCDD"
    },
    "3803": {
      "jump": "i",
      "op": "JUMP"
    },
    "3804": {
      "op": "JUMPDEST"
    },
    "3805": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3807": {
      "op": "MLOAD"
    },
    "3808": {
      "op": "PUSH2",
      "value": "0xEE9"
    },
    "3811": {
      "op": "DUP3"
    },
    "3812": {
      "op": "DUP3"
    },
    "3813": {
      "op": "PUSH2",
      "value": "0xCB0"
    },
    "3816": {
      "jump": "i",
      "op": "JUMP"
    },
    "3817": {
      "op": "JUMPDEST"
    },
    "3818": {
      "op": "DUP4"
    },
    "3819": {
      "op": "DUP2"
    },
    "3820": {
      "op": "MSTORE"
    },
    "3821": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "3823": {
      "op": "SWAP4"
    },
    "3824": {
      "op": "SWAP1"
    },
    "3825": {
      "op": "SWAP4"
    },
    "3826": {
      "op": "SHL"
    },
    "3827": {
      "op": "DUP6"
    },
    "3828": {
      "op": "ADD"
    },
    "3829": {
      "op": "DUP3"
    },
    "3830": {
      "op": "ADD"
    },
    "3831": {
      "op": "SWAP3"
    },
    "3832": {
      "op": "DUP3"
    },
    "3833": {
      "op": "DUP2"
    },
    "3834": {
      "op": "ADD"
    },
    "3835": {
      "op": "SWAP2"
    },
    "3836": {
      "op": "POP"
    },
    "3837": {
      "op": "DUP10"
    },
    "3838": {
      "op": "DUP5"
    },
    "3839": {
      "op": "GT"
    },
    "3840": {
      "op": "ISZERO"
    },
    "3841": {
      "op": "PUSH2",
      "value": "0xF09"
    },
    "3844": {
      "op": "JUMPI"
    },
    "3845": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3847": {
      "op": "DUP1"
    },
    "3848": {
      "op": "REVERT"
    },
    "3849": {
      "op": "JUMPDEST"
    },
    "3850": {
      "op": "SWAP5"
    },
    "3851": {
      "op": "DUP3"
    },
    "3852": {
      "op": "ADD"
    },
    "3853": {
      "op": "SWAP5"
    },
    "3854": {
      "op": "JUMPDEST"
    },
    "3855": {
      "op": "DUP4"
    },
    "3856": {
      "op": "DUP7"
    },
    "3857": {
      "op": "LT"
    },
    "3858": {
      "op": "ISZERO"
    },
    "3859": {
      "op": "PUSH2",
      "value": "0xF2E"
    },
    "3862": {
      "op": "JUMPI"
    },
    "3863": {
      "op": "PUSH2",
      "value": "0xF1F"
    },
    "3866": {
      "op": "DUP7"
    },
    "3867": {
      "op": "PUSH2",
      "value": "0xBA5"
    },
    "3870": {
      "jump": "i",
      "op": "JUMP"
    },
    "3871": {
      "op": "JUMPDEST"
    },
    "3872": {
      "op": "DUP3"
    },
    "3873": {
      "op": "MSTORE"
    },
    "3874": {
      "op": "SWAP5"
    },
    "3875": {
      "op": "DUP3"
    },
    "3876": {
      "op": "ADD"
    },
    "3877": {
      "op": "SWAP5"
    },
    "3878": {
      "op": "SWAP1"
    },
    "3879": {
      "op": "DUP3"
    },
    "3880": {
      "op": "ADD"
    },
    "3881": {
      "op": "SWAP1"
    },
    "3882": {
      "op": "PUSH2",
      "value": "0xF0E"
    },
    "3885": {
      "op": "JUMP"
    },
    "3886": {
      "op": "JUMPDEST"
    },
    "3887": {
      "op": "SWAP7"
    },
    "3888": {
      "op": "POP"
    },
    "3889": {
      "op": "POP"
    },
    "3890": {
      "op": "DUP7"
    },
    "3891": {
      "op": "ADD"
    },
    "3892": {
      "op": "CALLDATALOAD"
    },
    "3893": {
      "op": "SWAP3"
    },
    "3894": {
      "op": "POP"
    },
    "3895": {
      "op": "POP"
    },
    "3896": {
      "op": "DUP1"
    },
    "3897": {
      "op": "DUP3"
    },
    "3898": {
      "op": "GT"
    },
    "3899": {
      "op": "ISZERO"
    },
    "3900": {
      "op": "PUSH2",
      "value": "0xF44"
    },
    "3903": {
      "op": "JUMPI"
    },
    "3904": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3906": {
      "op": "DUP1"
    },
    "3907": {
      "op": "REVERT"
    },
    "3908": {
      "op": "JUMPDEST"
    },
    "3909": {
      "op": "POP"
    },
    "3910": {
      "op": "PUSH2",
      "value": "0xF51"
    },
    "3913": {
      "op": "DUP6"
    },
    "3914": {
      "op": "DUP3"
    },
    "3915": {
      "op": "DUP7"
    },
    "3916": {
      "op": "ADD"
    },
    "3917": {
      "op": "PUSH2",
      "value": "0xD01"
    },
    "3920": {
      "jump": "i",
      "op": "JUMP"
    },
    "3921": {
      "op": "JUMPDEST"
    },
    "3922": {
      "op": "SWAP2"
    },
    "3923": {
      "op": "POP"
    },
    "3924": {
      "op": "POP"
    },
    "3925": {
      "op": "SWAP3"
    },
    "3926": {
      "op": "POP"
    },
    "3927": {
      "op": "SWAP3"
    },
    "3928": {
      "op": "SWAP1"
    },
    "3929": {
      "op": "POP"
    },
    "3930": {
      "jump": "o",
      "op": "JUMP"
    },
    "3931": {
      "op": "JUMPDEST"
    },
    "3932": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3934": {
      "op": "DUP2"
    },
    "3935": {
      "op": "MLOAD"
    },
    "3936": {
      "op": "DUP1"
    },
    "3937": {
      "op": "DUP5"
    },
    "3938": {
      "op": "MSTORE"
    },
    "3939": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3941": {
      "op": "DUP1"
    },
    "3942": {
      "op": "DUP6"
    },
    "3943": {
      "op": "ADD"
    },
    "3944": {
      "op": "SWAP5"
    },
    "3945": {
      "op": "POP"
    },
    "3946": {
      "op": "DUP1"
    },
    "3947": {
      "op": "DUP5"
    },
    "3948": {
      "op": "ADD"
    },
    "3949": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3951": {
      "op": "JUMPDEST"
    },
    "3952": {
      "op": "DUP4"
    },
    "3953": {
      "op": "DUP2"
    },
    "3954": {
      "op": "LT"
    },
    "3955": {
      "op": "ISZERO"
    },
    "3956": {
      "op": "PUSH2",
      "value": "0xF8B"
    },
    "3959": {
      "op": "JUMPI"
    },
    "3960": {
      "op": "DUP2"
    },
    "3961": {
      "op": "MLOAD"
    },
    "3962": {
      "op": "DUP8"
    },
    "3963": {
      "op": "MSTORE"
    },
    "3964": {
      "op": "SWAP6"
    },
    "3965": {
      "op": "DUP3"
    },
    "3966": {
      "op": "ADD"
    },
    "3967": {
      "op": "SWAP6"
    },
    "3968": {
      "op": "SWAP1"
    },
    "3969": {
      "op": "DUP3"
    },
    "3970": {
      "op": "ADD"
    },
    "3971": {
      "op": "SWAP1"
    },
    "3972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3974": {
      "op": "ADD"
    },
    "3975": {
      "op": "PUSH2",
      "value": "0xF6F"
    },
    "3978": {
      "op": "JUMP"
    },
    "3979": {
      "op": "JUMPDEST"
    },
    "3980": {
      "op": "POP"
    },
    "3981": {
      "op": "SWAP5"
    },
    "3982": {
      "op": "SWAP6"
    },
    "3983": {
      "op": "SWAP5"
    },
    "3984": {
      "op": "POP"
    },
    "3985": {
      "op": "POP"
    },
    "3986": {
      "op": "POP"
    },
    "3987": {
      "op": "POP"
    },
    "3988": {
      "op": "POP"
    },
    "3989": {
      "jump": "o",
      "op": "JUMP"
    },
    "3990": {
      "op": "JUMPDEST"
    },
    "3991": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3993": {
      "op": "DUP2"
    },
    "3994": {
      "op": "MSTORE"
    },
    "3995": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3997": {
      "op": "PUSH2",
      "value": "0xC21"
    },
    "4000": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4002": {
      "op": "DUP4"
    },
    "4003": {
      "op": "ADD"
    },
    "4004": {
      "op": "DUP5"
    },
    "4005": {
      "op": "PUSH2",
      "value": "0xF5B"
    },
    "4008": {
      "jump": "i",
      "op": "JUMP"
    },
    "4009": {
      "op": "JUMPDEST"
    },
    "4010": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4012": {
      "op": "DUP1"
    },
    "4013": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4015": {
      "op": "DUP4"
    },
    "4016": {
      "op": "DUP6"
    },
    "4017": {
      "op": "SUB"
    },
    "4018": {
      "op": "SLT"
    },
    "4019": {
      "op": "ISZERO"
    },
    "4020": {
      "op": "PUSH2",
      "value": "0xFBC"
    },
    "4023": {
      "op": "JUMPI"
    },
    "4024": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4026": {
      "op": "DUP1"
    },
    "4027": {
      "op": "REVERT"
    },
    "4028": {
      "op": "JUMPDEST"
    },
    "4029": {
      "op": "PUSH2",
      "value": "0xFC5"
    },
    "4032": {
      "op": "DUP4"
    },
    "4033": {
      "op": "PUSH2",
      "value": "0xBA5"
    },
    "4036": {
      "jump": "i",
      "op": "JUMP"
    },
    "4037": {
      "op": "JUMPDEST"
    },
    "4038": {
      "op": "SWAP2"
    },
    "4039": {
      "op": "POP"
    },
    "4040": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4042": {
      "op": "DUP4"
    },
    "4043": {
      "op": "ADD"
    },
    "4044": {
      "op": "CALLDATALOAD"
    },
    "4045": {
      "op": "DUP1"
    },
    "4046": {
      "op": "ISZERO"
    },
    "4047": {
      "op": "ISZERO"
    },
    "4048": {
      "op": "DUP2"
    },
    "4049": {
      "op": "EQ"
    },
    "4050": {
      "op": "PUSH2",
      "value": "0xFDA"
    },
    "4053": {
      "op": "JUMPI"
    },
    "4054": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4056": {
      "op": "DUP1"
    },
    "4057": {
      "op": "REVERT"
    },
    "4058": {
      "op": "JUMPDEST"
    },
    "4059": {
      "op": "DUP1"
    },
    "4060": {
      "op": "SWAP2"
    },
    "4061": {
      "op": "POP"
    },
    "4062": {
      "op": "POP"
    },
    "4063": {
      "op": "SWAP3"
    },
    "4064": {
      "op": "POP"
    },
    "4065": {
      "op": "SWAP3"
    },
    "4066": {
      "op": "SWAP1"
    },
    "4067": {
      "op": "POP"
    },
    "4068": {
      "jump": "o",
      "op": "JUMP"
    },
    "4069": {
      "op": "JUMPDEST"
    },
    "4070": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4072": {
      "op": "DUP1"
    },
    "4073": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4075": {
      "op": "DUP4"
    },
    "4076": {
      "op": "DUP6"
    },
    "4077": {
      "op": "SUB"
    },
    "4078": {
      "op": "SLT"
    },
    "4079": {
      "op": "ISZERO"
    },
    "4080": {
      "op": "PUSH2",
      "value": "0xFF8"
    },
    "4083": {
      "op": "JUMPI"
    },
    "4084": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4086": {
      "op": "DUP1"
    },
    "4087": {
      "op": "REVERT"
    },
    "4088": {
      "op": "JUMPDEST"
    },
    "4089": {
      "op": "PUSH2",
      "value": "0x1001"
    },
    "4092": {
      "op": "DUP4"
    },
    "4093": {
      "op": "PUSH2",
      "value": "0xBA5"
    },
    "4096": {
      "jump": "i",
      "op": "JUMP"
    },
    "4097": {
      "op": "JUMPDEST"
    },
    "4098": {
      "op": "SWAP2"
    },
    "4099": {
      "op": "POP"
    },
    "4100": {
      "op": "PUSH2",
      "value": "0x100F"
    },
    "4103": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4105": {
      "op": "DUP5"
    },
    "4106": {
      "op": "ADD"
    },
    "4107": {
      "op": "PUSH2",
      "value": "0xBA5"
    },
    "4110": {
      "jump": "i",
      "op": "JUMP"
    },
    "4111": {
      "op": "JUMPDEST"
    },
    "4112": {
      "op": "SWAP1"
    },
    "4113": {
      "op": "POP"
    },
    "4114": {
      "op": "SWAP3"
    },
    "4115": {
      "op": "POP"
    },
    "4116": {
      "op": "SWAP3"
    },
    "4117": {
      "op": "SWAP1"
    },
    "4118": {
      "op": "POP"
    },
    "4119": {
      "jump": "o",
      "op": "JUMP"
    },
    "4120": {
      "op": "JUMPDEST"
    },
    "4121": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4123": {
      "op": "DUP1"
    },
    "4124": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4126": {
      "op": "DUP1"
    },
    "4127": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4129": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4131": {
      "op": "DUP7"
    },
    "4132": {
      "op": "DUP9"
    },
    "4133": {
      "op": "SUB"
    },
    "4134": {
      "op": "SLT"
    },
    "4135": {
      "op": "ISZERO"
    },
    "4136": {
      "op": "PUSH2",
      "value": "0x1030"
    },
    "4139": {
      "op": "JUMPI"
    },
    "4140": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4142": {
      "op": "DUP1"
    },
    "4143": {
      "op": "REVERT"
    },
    "4144": {
      "op": "JUMPDEST"
    },
    "4145": {
      "op": "PUSH2",
      "value": "0x1039"
    },
    "4148": {
      "op": "DUP7"
    },
    "4149": {
      "op": "PUSH2",
      "value": "0xBA5"
    },
    "4152": {
      "jump": "i",
      "op": "JUMP"
    },
    "4153": {
      "op": "JUMPDEST"
    },
    "4154": {
      "op": "SWAP5"
    },
    "4155": {
      "op": "POP"
    },
    "4156": {
      "op": "PUSH2",
      "value": "0x1047"
    },
    "4159": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4161": {
      "op": "DUP8"
    },
    "4162": {
      "op": "ADD"
    },
    "4163": {
      "op": "PUSH2",
      "value": "0xBA5"
    },
    "4166": {
      "jump": "i",
      "op": "JUMP"
    },
    "4167": {
      "op": "JUMPDEST"
    },
    "4168": {
      "op": "SWAP4"
    },
    "4169": {
      "op": "POP"
    },
    "4170": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4172": {
      "op": "DUP7"
    },
    "4173": {
      "op": "ADD"
    },
    "4174": {
      "op": "CALLDATALOAD"
    },
    "4175": {
      "op": "SWAP3"
    },
    "4176": {
      "op": "POP"
    },
    "4177": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4179": {
      "op": "DUP7"
    },
    "4180": {
      "op": "ADD"
    },
    "4181": {
      "op": "CALLDATALOAD"
    },
    "4182": {
      "op": "SWAP2"
    },
    "4183": {
      "op": "POP"
    },
    "4184": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4186": {
      "op": "DUP7"
    },
    "4187": {
      "op": "ADD"
    },
    "4188": {
      "op": "CALLDATALOAD"
    },
    "4189": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4198": {
      "op": "DUP2"
    },
    "4199": {
      "op": "GT"
    },
    "4200": {
      "op": "ISZERO"
    },
    "4201": {
      "op": "PUSH2",
      "value": "0x1071"
    },
    "4204": {
      "op": "JUMPI"
    },
    "4205": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4207": {
      "op": "DUP1"
    },
    "4208": {
      "op": "REVERT"
    },
    "4209": {
      "op": "JUMPDEST"
    },
    "4210": {
      "op": "PUSH2",
      "value": "0xE83"
    },
    "4213": {
      "op": "DUP9"
    },
    "4214": {
      "op": "DUP3"
    },
    "4215": {
      "op": "DUP10"
    },
    "4216": {
      "op": "ADD"
    },
    "4217": {
      "op": "PUSH2",
      "value": "0xD72"
    },
    "4220": {
      "jump": "i",
      "op": "JUMP"
    },
    "4221": {
      "op": "JUMPDEST"
    },
    "4222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4224": {
      "op": "DUP2"
    },
    "4225": {
      "op": "DUP2"
    },
    "4226": {
      "op": "SHR"
    },
    "4227": {
      "op": "SWAP1"
    },
    "4228": {
      "op": "DUP3"
    },
    "4229": {
      "op": "AND"
    },
    "4230": {
      "op": "DUP1"
    },
    "4231": {
      "op": "PUSH2",
      "value": "0x1091"
    },
    "4234": {
      "op": "JUMPI"
    },
    "4235": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "4237": {
      "op": "DUP3"
    },
    "4238": {
      "op": "AND"
    },
    "4239": {
      "op": "SWAP2"
    },
    "4240": {
      "op": "POP"
    },
    "4241": {
      "op": "JUMPDEST"
    },
    "4242": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4244": {
      "op": "DUP3"
    },
    "4245": {
      "op": "LT"
    },
    "4246": {
      "op": "DUP2"
    },
    "4247": {
      "op": "SUB"
    },
    "4248": {
      "op": "PUSH2",
      "value": "0x10B1"
    },
    "4251": {
      "op": "JUMPI"
    },
    "4252": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4257": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4259": {
      "op": "SHL"
    },
    "4260": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4262": {
      "op": "MSTORE"
    },
    "4263": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "4265": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4267": {
      "op": "MSTORE"
    },
    "4268": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4270": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4272": {
      "op": "REVERT"
    },
    "4273": {
      "op": "JUMPDEST"
    },
    "4274": {
      "op": "POP"
    },
    "4275": {
      "op": "SWAP2"
    },
    "4276": {
      "op": "SWAP1"
    },
    "4277": {
      "op": "POP"
    },
    "4278": {
      "jump": "o",
      "op": "JUMP"
    },
    "4279": {
      "op": "JUMPDEST"
    },
    "4280": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4285": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4287": {
      "op": "SHL"
    },
    "4288": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4290": {
      "op": "MSTORE"
    },
    "4291": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4293": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4295": {
      "op": "MSTORE"
    },
    "4296": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4298": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4300": {
      "op": "REVERT"
    },
    "4301": {
      "op": "JUMPDEST"
    },
    "4302": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4307": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4309": {
      "op": "SHL"
    },
    "4310": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4312": {
      "op": "MSTORE"
    },
    "4313": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4315": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4317": {
      "op": "MSTORE"
    },
    "4318": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4320": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4322": {
      "op": "REVERT"
    },
    "4323": {
      "op": "JUMPDEST"
    },
    "4324": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4328": {
      "op": "DUP3"
    },
    "4329": {
      "op": "ADD"
    },
    "4330": {
      "op": "PUSH2",
      "value": "0x10F5"
    },
    "4333": {
      "op": "JUMPI"
    },
    "4334": {
      "op": "PUSH2",
      "value": "0x10F5"
    },
    "4337": {
      "op": "PUSH2",
      "value": "0x10CD"
    },
    "4340": {
      "jump": "i",
      "op": "JUMP"
    },
    "4341": {
      "op": "JUMPDEST"
    },
    "4342": {
      "op": "POP"
    },
    "4343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4345": {
      "op": "ADD"
    },
    "4346": {
      "op": "SWAP1"
    },
    "4347": {
      "jump": "o",
      "op": "JUMP"
    },
    "4348": {
      "op": "JUMPDEST"
    },
    "4349": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4351": {
      "op": "DUP1"
    },
    "4352": {
      "op": "DUP3"
    },
    "4353": {
      "op": "MSTORE"
    },
    "4354": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "4356": {
      "op": "SWAP1"
    },
    "4357": {
      "op": "DUP3"
    },
    "4358": {
      "op": "ADD"
    },
    "4359": {
      "op": "MSTORE"
    },
    "4360": {
      "op": "PUSH32",
      "value": "0x455243313135353A207472616E7366657220746F20746865207A65726F206164"
    },
    "4393": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4395": {
      "op": "DUP3"
    },
    "4396": {
      "op": "ADD"
    },
    "4397": {
      "op": "MSTORE"
    },
    "4398": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "4404": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "4406": {
      "op": "SHL"
    },
    "4407": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4409": {
      "op": "DUP3"
    },
    "4410": {
      "op": "ADD"
    },
    "4411": {
      "op": "MSTORE"
    },
    "4412": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4414": {
      "op": "ADD"
    },
    "4415": {
      "op": "SWAP1"
    },
    "4416": {
      "jump": "o",
      "op": "JUMP"
    },
    "4417": {
      "op": "JUMPDEST"
    },
    "4418": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4420": {
      "op": "DUP1"
    },
    "4421": {
      "op": "DUP3"
    },
    "4422": {
      "op": "MSTORE"
    },
    "4423": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "4425": {
      "op": "SWAP1"
    },
    "4426": {
      "op": "DUP3"
    },
    "4427": {
      "op": "ADD"
    },
    "4428": {
      "op": "MSTORE"
    },
    "4429": {
      "op": "PUSH32",
      "value": "0x455243313135353A20696E73756666696369656E742062616C616E636520666F"
    },
    "4462": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4464": {
      "op": "DUP3"
    },
    "4465": {
      "op": "ADD"
    },
    "4466": {
      "op": "MSTORE"
    },
    "4467": {
      "op": "PUSH10",
      "value": "0x39103A3930B739B332B9"
    },
    "4478": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "4480": {
      "op": "SHL"
    },
    "4481": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4483": {
      "op": "DUP3"
    },
    "4484": {
      "op": "ADD"
    },
    "4485": {
      "op": "MSTORE"
    },
    "4486": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4488": {
      "op": "ADD"
    },
    "4489": {
      "op": "SWAP1"
    },
    "4490": {
      "jump": "o",
      "op": "JUMP"
    },
    "4491": {
      "op": "JUMPDEST"
    },
    "4492": {
      "op": "DUP1"
    },
    "4493": {
      "op": "DUP3"
    },
    "4494": {
      "op": "ADD"
    },
    "4495": {
      "op": "DUP1"
    },
    "4496": {
      "op": "DUP3"
    },
    "4497": {
      "op": "GT"
    },
    "4498": {
      "op": "ISZERO"
    },
    "4499": {
      "op": "PUSH2",
      "value": "0x220"
    },
    "4502": {
      "op": "JUMPI"
    },
    "4503": {
      "op": "PUSH2",
      "value": "0x220"
    },
    "4506": {
      "op": "PUSH2",
      "value": "0x10CD"
    },
    "4509": {
      "jump": "i",
      "op": "JUMP"
    },
    "4510": {
      "op": "JUMPDEST"
    },
    "4511": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4513": {
      "op": "DUP2"
    },
    "4514": {
      "op": "MSTORE"
    },
    "4515": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4517": {
      "op": "PUSH2",
      "value": "0x11B1"
    },
    "4520": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4522": {
      "op": "DUP4"
    },
    "4523": {
      "op": "ADD"
    },
    "4524": {
      "op": "DUP6"
    },
    "4525": {
      "op": "PUSH2",
      "value": "0xF5B"
    },
    "4528": {
      "jump": "i",
      "op": "JUMP"
    },
    "4529": {
      "op": "JUMPDEST"
    },
    "4530": {
      "op": "DUP3"
    },
    "4531": {
      "op": "DUP2"
    },
    "4532": {
      "op": "SUB"
    },
    "4533": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4535": {
      "op": "DUP5"
    },
    "4536": {
      "op": "ADD"
    },
    "4537": {
      "op": "MSTORE"
    },
    "4538": {
      "op": "PUSH2",
      "value": "0x11C3"
    },
    "4541": {
      "op": "DUP2"
    },
    "4542": {
      "op": "DUP6"
    },
    "4543": {
      "op": "PUSH2",
      "value": "0xF5B"
    },
    "4546": {
      "jump": "i",
      "op": "JUMP"
    },
    "4547": {
      "op": "JUMPDEST"
    },
    "4548": {
      "op": "SWAP6"
    },
    "4549": {
      "op": "SWAP5"
    },
    "4550": {
      "op": "POP"
    },
    "4551": {
      "op": "POP"
    },
    "4552": {
      "op": "POP"
    },
    "4553": {
      "op": "POP"
    },
    "4554": {
      "op": "POP"
    },
    "4555": {
      "jump": "o",
      "op": "JUMP"
    },
    "4556": {
      "op": "JUMPDEST"
    },
    "4557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4559": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4561": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4563": {
      "op": "SHL"
    },
    "4564": {
      "op": "SUB"
    },
    "4565": {
      "op": "DUP7"
    },
    "4566": {
      "op": "DUP2"
    },
    "4567": {
      "op": "AND"
    },
    "4568": {
      "op": "DUP3"
    },
    "4569": {
      "op": "MSTORE"
    },
    "4570": {
      "op": "DUP6"
    },
    "4571": {
      "op": "AND"
    },
    "4572": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4574": {
      "op": "DUP3"
    },
    "4575": {
      "op": "ADD"
    },
    "4576": {
      "op": "MSTORE"
    },
    "4577": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4579": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4581": {
      "op": "DUP3"
    },
    "4582": {
      "op": "ADD"
    },
    "4583": {
      "op": "DUP2"
    },
    "4584": {
      "op": "SWAP1"
    },
    "4585": {
      "op": "MSTORE"
    },
    "4586": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4588": {
      "op": "SWAP1"
    },
    "4589": {
      "op": "PUSH2",
      "value": "0x11F8"
    },
    "4592": {
      "op": "SWAP1"
    },
    "4593": {
      "op": "DUP4"
    },
    "4594": {
      "op": "ADD"
    },
    "4595": {
      "op": "DUP7"
    },
    "4596": {
      "op": "PUSH2",
      "value": "0xF5B"
    },
    "4599": {
      "jump": "i",
      "op": "JUMP"
    },
    "4600": {
      "op": "JUMPDEST"
    },
    "4601": {
      "op": "DUP3"
    },
    "4602": {
      "op": "DUP2"
    },
    "4603": {
      "op": "SUB"
    },
    "4604": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4606": {
      "op": "DUP5"
    },
    "4607": {
      "op": "ADD"
    },
    "4608": {
      "op": "MSTORE"
    },
    "4609": {
      "op": "PUSH2",
      "value": "0x120A"
    },
    "4612": {
      "op": "DUP2"
    },
    "4613": {
      "op": "DUP7"
    },
    "4614": {
      "op": "PUSH2",
      "value": "0xF5B"
    },
    "4617": {
      "jump": "i",
      "op": "JUMP"
    },
    "4618": {
      "op": "JUMPDEST"
    },
    "4619": {
      "op": "SWAP1"
    },
    "4620": {
      "op": "POP"
    },
    "4621": {
      "op": "DUP3"
    },
    "4622": {
      "op": "DUP2"
    },
    "4623": {
      "op": "SUB"
    },
    "4624": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4626": {
      "op": "DUP5"
    },
    "4627": {
      "op": "ADD"
    },
    "4628": {
      "op": "MSTORE"
    },
    "4629": {
      "op": "PUSH2",
      "value": "0x121E"
    },
    "4632": {
      "op": "DUP2"
    },
    "4633": {
      "op": "DUP6"
    },
    "4634": {
      "op": "PUSH2",
      "value": "0xC41"
    },
    "4637": {
      "jump": "i",
      "op": "JUMP"
    },
    "4638": {
      "op": "JUMPDEST"
    },
    "4639": {
      "op": "SWAP9"
    },
    "4640": {
      "op": "SWAP8"
    },
    "4641": {
      "op": "POP"
    },
    "4642": {
      "op": "POP"
    },
    "4643": {
      "op": "POP"
    },
    "4644": {
      "op": "POP"
    },
    "4645": {
      "op": "POP"
    },
    "4646": {
      "op": "POP"
    },
    "4647": {
      "op": "POP"
    },
    "4648": {
      "op": "POP"
    },
    "4649": {
      "jump": "o",
      "op": "JUMP"
    },
    "4650": {
      "op": "JUMPDEST"
    },
    "4651": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4653": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4655": {
      "op": "DUP3"
    },
    "4656": {
      "op": "DUP5"
    },
    "4657": {
      "op": "SUB"
    },
    "4658": {
      "op": "SLT"
    },
    "4659": {
      "op": "ISZERO"
    },
    "4660": {
      "op": "PUSH2",
      "value": "0x123C"
    },
    "4663": {
      "op": "JUMPI"
    },
    "4664": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4666": {
      "op": "DUP1"
    },
    "4667": {
      "op": "REVERT"
    },
    "4668": {
      "op": "JUMPDEST"
    },
    "4669": {
      "op": "DUP2"
    },
    "4670": {
      "op": "MLOAD"
    },
    "4671": {
      "op": "PUSH2",
      "value": "0xC21"
    },
    "4674": {
      "op": "DUP2"
    },
    "4675": {
      "op": "PUSH2",
      "value": "0xBEB"
    },
    "4678": {
      "jump": "i",
      "op": "JUMP"
    },
    "4679": {
      "op": "JUMPDEST"
    },
    "4680": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4682": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "4684": {
      "op": "RETURNDATASIZE"
    },
    "4685": {
      "op": "GT"
    },
    "4686": {
      "op": "ISZERO"
    },
    "4687": {
      "op": "PUSH2",
      "value": "0x1260"
    },
    "4690": {
      "op": "JUMPI"
    },
    "4691": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4693": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4695": {
      "op": "DUP1"
    },
    "4696": {
      "op": "RETURNDATACOPY"
    },
    "4697": {
      "op": "POP"
    },
    "4698": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4700": {
      "op": "MLOAD"
    },
    "4701": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4703": {
      "op": "SHR"
    },
    "4704": {
      "op": "JUMPDEST"
    },
    "4705": {
      "op": "SWAP1"
    },
    "4706": {
      "jump": "o",
      "op": "JUMP"
    },
    "4707": {
      "op": "JUMPDEST"
    },
    "4708": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4710": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4712": {
      "op": "RETURNDATASIZE"
    },
    "4713": {
      "op": "LT"
    },
    "4714": {
      "op": "ISZERO"
    },
    "4715": {
      "op": "PUSH2",
      "value": "0x1271"
    },
    "4718": {
      "op": "JUMPI"
    },
    "4719": {
      "op": "SWAP1"
    },
    "4720": {
      "jump": "o",
      "op": "JUMP"
    },
    "4721": {
      "op": "JUMPDEST"
    },
    "4722": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4724": {
      "op": "MLOAD"
    },
    "4725": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "4727": {
      "op": "NOT"
    },
    "4728": {
      "op": "RETURNDATASIZE"
    },
    "4729": {
      "op": "DUP2"
    },
    "4730": {
      "op": "ADD"
    },
    "4731": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4733": {
      "op": "DUP4"
    },
    "4734": {
      "op": "RETURNDATACOPY"
    },
    "4735": {
      "op": "DUP2"
    },
    "4736": {
      "op": "MLOAD"
    },
    "4737": {
      "op": "RETURNDATASIZE"
    },
    "4738": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4747": {
      "op": "DUP2"
    },
    "4748": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4750": {
      "op": "DUP5"
    },
    "4751": {
      "op": "ADD"
    },
    "4752": {
      "op": "GT"
    },
    "4753": {
      "op": "DUP2"
    },
    "4754": {
      "op": "DUP5"
    },
    "4755": {
      "op": "GT"
    },
    "4756": {
      "op": "OR"
    },
    "4757": {
      "op": "ISZERO"
    },
    "4758": {
      "op": "PUSH2",
      "value": "0x12A1"
    },
    "4761": {
      "op": "JUMPI"
    },
    "4762": {
      "op": "POP"
    },
    "4763": {
      "op": "POP"
    },
    "4764": {
      "op": "POP"
    },
    "4765": {
      "op": "POP"
    },
    "4766": {
      "op": "POP"
    },
    "4767": {
      "op": "SWAP1"
    },
    "4768": {
      "jump": "o",
      "op": "JUMP"
    },
    "4769": {
      "op": "JUMPDEST"
    },
    "4770": {
      "op": "DUP3"
    },
    "4771": {
      "op": "DUP6"
    },
    "4772": {
      "op": "ADD"
    },
    "4773": {
      "op": "SWAP2"
    },
    "4774": {
      "op": "POP"
    },
    "4775": {
      "op": "DUP2"
    },
    "4776": {
      "op": "MLOAD"
    },
    "4777": {
      "op": "DUP2"
    },
    "4778": {
      "op": "DUP2"
    },
    "4779": {
      "op": "GT"
    },
    "4780": {
      "op": "ISZERO"
    },
    "4781": {
      "op": "PUSH2",
      "value": "0x12B9"
    },
    "4784": {
      "op": "JUMPI"
    },
    "4785": {
      "op": "POP"
    },
    "4786": {
      "op": "POP"
    },
    "4787": {
      "op": "POP"
    },
    "4788": {
      "op": "POP"
    },
    "4789": {
      "op": "POP"
    },
    "4790": {
      "op": "POP"
    },
    "4791": {
      "op": "SWAP1"
    },
    "4792": {
      "jump": "o",
      "op": "JUMP"
    },
    "4793": {
      "op": "JUMPDEST"
    },
    "4794": {
      "op": "DUP5"
    },
    "4795": {
      "op": "RETURNDATASIZE"
    },
    "4796": {
      "op": "DUP8"
    },
    "4797": {
      "op": "ADD"
    },
    "4798": {
      "op": "ADD"
    },
    "4799": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4801": {
      "op": "DUP3"
    },
    "4802": {
      "op": "DUP6"
    },
    "4803": {
      "op": "ADD"
    },
    "4804": {
      "op": "ADD"
    },
    "4805": {
      "op": "GT"
    },
    "4806": {
      "op": "ISZERO"
    },
    "4807": {
      "op": "PUSH2",
      "value": "0x12D3"
    },
    "4810": {
      "op": "JUMPI"
    },
    "4811": {
      "op": "POP"
    },
    "4812": {
      "op": "POP"
    },
    "4813": {
      "op": "POP"
    },
    "4814": {
      "op": "POP"
    },
    "4815": {
      "op": "POP"
    },
    "4816": {
      "op": "POP"
    },
    "4817": {
      "op": "SWAP1"
    },
    "4818": {
      "jump": "o",
      "op": "JUMP"
    },
    "4819": {
      "op": "JUMPDEST"
    },
    "4820": {
      "op": "PUSH2",
      "value": "0x12E2"
    },
    "4823": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4825": {
      "op": "DUP3"
    },
    "4826": {
      "op": "DUP7"
    },
    "4827": {
      "op": "ADD"
    },
    "4828": {
      "op": "ADD"
    },
    "4829": {
      "op": "DUP8"
    },
    "4830": {
      "op": "PUSH2",
      "value": "0xCB0"
    },
    "4833": {
      "jump": "i",
      "op": "JUMP"
    },
    "4834": {
      "op": "JUMPDEST"
    },
    "4835": {
      "op": "POP"
    },
    "4836": {
      "op": "SWAP1"
    },
    "4837": {
      "op": "SWAP6"
    },
    "4838": {
      "op": "SWAP5"
    },
    "4839": {
      "op": "POP"
    },
    "4840": {
      "op": "POP"
    },
    "4841": {
      "op": "POP"
    },
    "4842": {
      "op": "POP"
    },
    "4843": {
      "op": "POP"
    },
    "4844": {
      "jump": "o",
      "op": "JUMP"
    },
    "4845": {
      "op": "JUMPDEST"
    },
    "4846": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4848": {
      "op": "DUP1"
    },
    "4849": {
      "op": "DUP3"
    },
    "4850": {
      "op": "MSTORE"
    },
    "4851": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "4853": {
      "op": "SWAP1"
    },
    "4854": {
      "op": "DUP3"
    },
    "4855": {
      "op": "ADD"
    },
    "4856": {
      "op": "MSTORE"
    },
    "4857": {
      "op": "PUSH32",
      "value": "0x455243313135353A204552433131353552656365697665722072656A65637465"
    },
    "4890": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4892": {
      "op": "DUP3"
    },
    "4893": {
      "op": "ADD"
    },
    "4894": {
      "op": "MSTORE"
    },
    "4895": {
      "op": "PUSH8",
      "value": "0x6420746F6B656E73"
    },
    "4904": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4906": {
      "op": "SHL"
    },
    "4907": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4909": {
      "op": "DUP3"
    },
    "4910": {
      "op": "ADD"
    },
    "4911": {
      "op": "MSTORE"
    },
    "4912": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4914": {
      "op": "ADD"
    },
    "4915": {
      "op": "SWAP1"
    },
    "4916": {
      "jump": "o",
      "op": "JUMP"
    },
    "4917": {
      "op": "JUMPDEST"
    },
    "4918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4922": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4924": {
      "op": "SHL"
    },
    "4925": {
      "op": "SUB"
    },
    "4926": {
      "op": "DUP7"
    },
    "4927": {
      "op": "DUP2"
    },
    "4928": {
      "op": "AND"
    },
    "4929": {
      "op": "DUP3"
    },
    "4930": {
      "op": "MSTORE"
    },
    "4931": {
      "op": "DUP6"
    },
    "4932": {
      "op": "AND"
    },
    "4933": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4935": {
      "op": "DUP3"
    },
    "4936": {
      "op": "ADD"
    },
    "4937": {
      "op": "MSTORE"
    },
    "4938": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4940": {
      "op": "DUP2"
    },
    "4941": {
      "op": "ADD"
    },
    "4942": {
      "op": "DUP5"
    },
    "4943": {
      "op": "SWAP1"
    },
    "4944": {
      "op": "MSTORE"
    },
    "4945": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4947": {
      "op": "DUP2"
    },
    "4948": {
      "op": "ADD"
    },
    "4949": {
      "op": "DUP4"
    },
    "4950": {
      "op": "SWAP1"
    },
    "4951": {
      "op": "MSTORE"
    },
    "4952": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4954": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4956": {
      "op": "DUP3"
    },
    "4957": {
      "op": "ADD"
    },
    "4958": {
      "op": "DUP2"
    },
    "4959": {
      "op": "SWAP1"
    },
    "4960": {
      "op": "MSTORE"
    },
    "4961": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4963": {
      "op": "SWAP1"
    },
    "4964": {
      "op": "PUSH2",
      "value": "0x136F"
    },
    "4967": {
      "op": "SWAP1"
    },
    "4968": {
      "op": "DUP4"
    },
    "4969": {
      "op": "ADD"
    },
    "4970": {
      "op": "DUP5"
    },
    "4971": {
      "op": "PUSH2",
      "value": "0xC41"
    },
    "4974": {
      "jump": "i",
      "op": "JUMP"
    },
    "4975": {
      "op": "JUMPDEST"
    },
    "4976": {
      "op": "SWAP8"
    },
    "4977": {
      "op": "SWAP7"
    },
    "4978": {
      "op": "POP"
    },
    "4979": {
      "op": "POP"
    },
    "4980": {
      "op": "POP"
    },
    "4981": {
      "op": "POP"
    },
    "4982": {
      "op": "POP"
    },
    "4983": {
      "op": "POP"
    },
    "4984": {
      "op": "POP"
    },
    "4985": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "0f814780500abf2e917858e34184a7dbfe318c0f",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC1155.sol\";\nimport \"./IERC1155Receiver.sol\";\nimport \"./extensions/IERC1155MetadataURI.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n *\n * _Available since v3.1._\n */\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\n    using Address for address;\n\n    // Mapping from token ID to account balances\n    mapping(uint256 => mapping(address => uint256)) private _balances;\n\n    // Mapping from account to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256) public view virtual override returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\n        require(account != address(0), \"ERC1155: balance query for the zero address\");\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\n        public\n        view\n        virtual\n        override\n        returns (uint256[] memory)\n    {\n        require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\");\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data);\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n        _balances[id][to] += amount;\n\n        emit TransferSingle(operator, from, to, id, amount);\n\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n            _balances[id][to] += amount;\n        }\n\n        emit TransferBatch(operator, from, to, ids, amounts);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), to, _asSingletonArray(id), _asSingletonArray(amount), data);\n\n        _balances[id][to] += amount;\n        emit TransferSingle(operator, address(0), to, id, amount);\n\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            _balances[ids[i]][to] += amounts[i];\n        }\n\n        emit TransferBatch(operator, address(0), to, ids, amounts);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens of token type `id` from `from`\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `amount` tokens of token type `id`.\n     */\n    function _burn(\n        address from,\n        uint256 id,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, address(0), _asSingletonArray(id), _asSingletonArray(amount), \"\");\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n\n        emit TransferSingle(operator, from, address(0), id, amount);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     */\n    function _burnBatch(\n        address from,\n        uint256[] memory ids,\n        uint256[] memory amounts\n    ) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n        }\n\n        emit TransferBatch(operator, from, address(0), ids, amounts);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits a {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC1155: setting approval status for self\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `id` and `amount` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\n        uint256[] memory array = new uint256[](1);\n        array[0] = element;\n\n        return array;\n    }\n}\n",
  "sourceMap": "555:14720:152:-:0;;;1092:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1134:13;1142:4;1134:7;:13::i;:::-;1092:62;555:14720;;7936:86;8002:4;:13;8009:6;8002:4;:13;:::i;:::-;;7936:86;:::o;14:127:249:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:1042;226:6;257:2;300;288:9;279:7;275:23;271:32;268:52;;;316:1;313;306:12;268:52;343:16;;-1:-1:-1;;;;;408:14:249;;;405:34;;;435:1;432;425:12;405:34;473:6;462:9;458:22;448:32;;518:7;511:4;507:2;503:13;499:27;489:55;;540:1;537;530:12;489:55;569:2;563:9;591:2;587;584:10;581:36;;;597:18;;:::i;:::-;672:2;666:9;640:2;726:13;;-1:-1:-1;;722:22:249;;;746:2;718:31;714:40;702:53;;;770:18;;;790:22;;;767:46;764:72;;;816:18;;:::i;:::-;856:10;852:2;845:22;891:2;883:6;876:18;931:7;926:2;921;917;913:11;909:20;906:33;903:53;;;952:1;949;942:12;903:53;974:1;965:10;;984:129;998:2;995:1;992:9;984:129;;;1086:10;;;1082:19;;1076:26;1055:14;;;1051:23;;1044:59;1009:10;;;;984:129;;;1155:1;1150:2;1145;1137:6;1133:15;1129:24;1122:35;1176:6;1166:16;;;;;;;;146:1042;;;;:::o;1193:380::-;1272:1;1268:12;;;;1315;;;1336:61;;1390:4;1382:6;1378:17;1368:27;;1336:61;1443:2;1435:6;1432:14;1412:18;1409:38;1406:161;;1489:10;1484:3;1480:20;1477:1;1470:31;1524:4;1521:1;1514:15;1552:4;1549:1;1542:15;1406:161;;1193:380;;;:::o;1704:545::-;1806:2;1801:3;1798:11;1795:448;;;1842:1;1867:5;1863:2;1856:17;1912:4;1908:2;1898:19;1982:2;1970:10;1966:19;1963:1;1959:27;1953:4;1949:38;2018:4;2006:10;2003:20;2000:47;;;-1:-1:-1;2041:4:249;2000:47;2096:2;2091:3;2087:12;2084:1;2080:20;2074:4;2070:31;2060:41;;2151:82;2169:2;2162:5;2159:13;2151:82;;;2214:17;;;2195:1;2184:13;2151:82;;;2155:3;;;1795:448;1704:545;;;:::o;2425:1352::-;2545:10;;-1:-1:-1;;;;;2567:30:249;;2564:56;;;2600:18;;:::i;:::-;2629:97;2719:6;2679:38;2711:4;2705:11;2679:38;:::i;:::-;2673:4;2629:97;:::i;:::-;2781:4;;2845:2;2834:14;;2862:1;2857:663;;;;3564:1;3581:6;3578:89;;;-1:-1:-1;3633:19:249;;;3627:26;3578:89;-1:-1:-1;;2382:1:249;2378:11;;;2374:24;2370:29;2360:40;2406:1;2402:11;;;2357:57;3680:81;;2827:944;;2857:663;1651:1;1644:14;;;1688:4;1675:18;;-1:-1:-1;;2893:20:249;;;3011:236;3025:7;3022:1;3019:14;3011:236;;;3114:19;;;3108:26;3093:42;;3206:27;;;;3174:1;3162:14;;;;3041:19;;3011:236;;;3015:3;3275:6;3266:7;3263:19;3260:201;;;3336:19;;;3330:26;-1:-1:-1;;3419:1:249;3415:14;;;3431:3;3411:24;3407:37;3403:42;3388:58;3373:74;;3260:201;-1:-1:-1;;;;;3507:1:249;3491:14;;;3487:22;3474:36;;-1:-1:-1;2425:1352:249:o;:::-;555:14720:152;;;;;;",
  "sourcePath": "contracts/openzeppelin-solidity/contracts/token/ERC1155/ERC1155.sol",
  "type": "contract"
}