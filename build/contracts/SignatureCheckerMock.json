{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "isValidSignatureNow",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "125": "contracts/openzeppelin-solidity/contracts/mocks/SignatureCheckerMock.sol",
    "207": "contracts/openzeppelin-solidity/contracts/utils/Strings.sol",
    "209": "contracts/openzeppelin-solidity/contracts/utils/cryptography/ECDSA.sol",
    "211": "contracts/openzeppelin-solidity/contracts/utils/cryptography/SignatureChecker.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin-solidity/contracts/mocks/SignatureCheckerMock.sol",
    "exportedSymbols": {
      "Address": [
        29802
      ],
      "ECDSA": [
        31314
      ],
      "IERC1271": [
        10488
      ],
      "SignatureChecker": [
        31486
      ],
      "SignatureCheckerMock": [
        18219
      ],
      "Strings": [
        30693
      ]
    },
    "id": 18220,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 18196,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:125"
      },
      {
        "absolutePath": "contracts/openzeppelin-solidity/contracts/utils/cryptography/SignatureChecker.sol",
        "file": "../utils/cryptography/SignatureChecker.sol",
        "id": 18197,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 18220,
        "sourceUnit": 31487,
        "src": "58:52:125",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "SignatureCheckerMock",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 18219,
        "linearizedBaseContracts": [
          18219
        ],
        "name": "SignatureCheckerMock",
        "nameLocation": "121:20:125",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 18200,
            "libraryName": {
              "id": 18198,
              "name": "SignatureChecker",
              "nameLocations": [
                "154:16:125"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31486,
              "src": "154:16:125"
            },
            "nodeType": "UsingForDirective",
            "src": "148:35:125",
            "typeName": {
              "id": 18199,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "175:7:125",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "body": {
              "id": 18217,
              "nodeType": "Block",
              "src": "329:67:125",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 18213,
                        "name": "hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18204,
                        "src": "373:4:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 18214,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18206,
                        "src": "379:9:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 18211,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18202,
                        "src": "346:6:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 18212,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "353:19:125",
                      "memberName": "isValidSignatureNow",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31485,
                      "src": "346:26:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$attached_to$_t_address_$",
                        "typeString": "function (address,bytes32,bytes memory) view returns (bool)"
                      }
                    },
                    "id": 18215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "346:43:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 18210,
                  "id": 18216,
                  "nodeType": "Return",
                  "src": "339:50:125"
                }
              ]
            },
            "functionSelector": "6ccea652",
            "id": 18218,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isValidSignatureNow",
            "nameLocation": "198:19:125",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18202,
                  "mutability": "mutable",
                  "name": "signer",
                  "nameLocation": "235:6:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 18218,
                  "src": "227:14:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18201,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "227:7:125",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18204,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "259:4:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 18218,
                  "src": "251:12:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 18203,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "251:7:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18206,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "286:9:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 18218,
                  "src": "273:22:125",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 18205,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "273:5:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "217:84:125"
            },
            "returnParameters": {
              "id": 18210,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18209,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18218,
                  "src": "323:4:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 18208,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "323:4:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "322:6:125"
            },
            "scope": 18219,
            "src": "189:207:125",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 18220,
        "src": "112:286:125",
        "usedErrors": [],
        "usedEvents": []
      }
    ],
    "src": "33:366:125"
  },
  "bytecode": "608060405234801561001057600080fd5b5061055d806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80636ccea65214610030575b600080fd5b61004361003e36600461036d565b610057565b604051901515815260200160405180910390f35b600061006d6001600160a01b0385168484610077565b90505b9392505050565b600080600061008685856101c3565b9092509050600081600481111561009f5761009f610446565b1480156100bd5750856001600160a01b0316826001600160a01b0316145b156100cd57600192505050610070565b600080876001600160a01b0316631626ba7e60e01b88886040516024016100f5929190610480565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905161013391906104ba565b600060405180830381855afa9150503d806000811461016e576040519150601f19603f3d011682016040523d82523d6000602084013e610173565b606091505b5091509150818015610186575080516020145b80156101b757508051630b135d3f60e11b906101ab90830160209081019084016104d6565b6001600160e01b031916145b98975050505050505050565b60008082516041036101f95760208301516040840151606085015160001a6101ed87828585610231565b9450945050505061022a565b8251604003610222576020830151604084015161021786838361031e565b93509350505061022a565b506000905060025b9250929050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156102685750600090506003610315565b8460ff16601b1415801561028057508460ff16601c14155b156102915750600090506004610315565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156102e5573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661030e57600060019250925050610315565b9150600090505b94509492505050565b6000806001600160ff1b0383168161033b60ff86901c601b610500565b905061034987828885610231565b935093505050935093915050565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121561038257600080fd5b83356001600160a01b038116811461039957600080fd5b925060208401359150604084013567ffffffffffffffff808211156103bd57600080fd5b818601915086601f8301126103d157600080fd5b8135818111156103e3576103e3610357565b604051601f8201601f19908116603f0116810190838211818310171561040b5761040b610357565b8160405282815289602084870101111561042457600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b634e487b7160e01b600052602160045260246000fd5b60005b8381101561047757818101518382015260200161045f565b50506000910152565b82815260406020820152600082518060408401526104a581606085016020870161045c565b601f01601f1916919091016060019392505050565b600082516104cc81846020870161045c565b9190910192915050565b6000602082840312156104e857600080fd5b81516001600160e01b03198116811461007057600080fd5b8082018082111561052157634e487b7160e01b600052601160045260246000fd5b9291505056fea2646970667358221220f9d78a4184dec0fc2905ea4b554da4ba1f08f62b57b4a86f79dfd5d00238863864736f6c63430008150033",
  "bytecodeSha1": "2844fdb9e9f0c4f8e2b9dab54bdd03498e50ea98",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.21+commit.d9974bed"
  },
  "contractName": "SignatureCheckerMock",
  "coverageMap": {
    "branches": {
      "125": {},
      "207": {},
      "209": {
        "ECDSA.tryRecover": {
          "11": [
            2539,
            2561,
            false
          ],
          "12": [
            3021,
            3043,
            false
          ],
          "13": [
            6735,
            6814,
            false
          ],
          "14": [
            6905,
            6912,
            false
          ],
          "15": [
            6916,
            6923,
            false
          ],
          "16": [
            7150,
            7170,
            false
          ]
        }
      },
      "211": {
        "SignatureChecker.isValidSignatureNow": {
          "17": [
            1038,
            1073,
            false
          ],
          "18": [
            1077,
            1096,
            false
          ]
        }
      }
    },
    "statements": {
      "125": {
        "SignatureCheckerMock.isValidSignatureNow": {
          "0": [
            339,
            389
          ]
        }
      },
      "207": {},
      "209": {
        "ECDSA.tryRecover": {
          "3": [
            2968,
            3000
          ],
          "4": [
            3373,
            3403
          ],
          "5": [
            3434,
            3490
          ],
          "6": [
            6830,
            6881
          ],
          "7": [
            6939,
            6990
          ],
          "8": [
            7186,
            7236
          ],
          "9": [
            7257,
            7294
          ],
          "10": [
            5071,
            5103
          ]
        }
      },
      "211": {
        "SignatureChecker.isValidSignatureNow": {
          "1": [
            1112,
            1123
          ],
          "2": [
            1308,
            1417
          ]
        }
      }
    }
  },
  "dependencies": [
    "ECDSA",
    "SignatureChecker",
    "Strings"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061002b5760003560e01c80636ccea65214610030575b600080fd5b61004361003e36600461036d565b610057565b604051901515815260200160405180910390f35b600061006d6001600160a01b0385168484610077565b90505b9392505050565b600080600061008685856101c3565b9092509050600081600481111561009f5761009f610446565b1480156100bd5750856001600160a01b0316826001600160a01b0316145b156100cd57600192505050610070565b600080876001600160a01b0316631626ba7e60e01b88886040516024016100f5929190610480565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905161013391906104ba565b600060405180830381855afa9150503d806000811461016e576040519150601f19603f3d011682016040523d82523d6000602084013e610173565b606091505b5091509150818015610186575080516020145b80156101b757508051630b135d3f60e11b906101ab90830160209081019084016104d6565b6001600160e01b031916145b98975050505050505050565b60008082516041036101f95760208301516040840151606085015160001a6101ed87828585610231565b9450945050505061022a565b8251604003610222576020830151604084015161021786838361031e565b93509350505061022a565b506000905060025b9250929050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156102685750600090506003610315565b8460ff16601b1415801561028057508460ff16601c14155b156102915750600090506004610315565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156102e5573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661030e57600060019250925050610315565b9150600090505b94509492505050565b6000806001600160ff1b0383168161033b60ff86901c601b610500565b905061034987828885610231565b935093505050935093915050565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121561038257600080fd5b83356001600160a01b038116811461039957600080fd5b925060208401359150604084013567ffffffffffffffff808211156103bd57600080fd5b818601915086601f8301126103d157600080fd5b8135818111156103e3576103e3610357565b604051601f8201601f19908116603f0116810190838211818310171561040b5761040b610357565b8160405282815289602084870101111561042457600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b634e487b7160e01b600052602160045260246000fd5b60005b8381101561047757818101518382015260200161045f565b50506000910152565b82815260406020820152600082518060408401526104a581606085016020870161045c565b601f01601f1916919091016060019392505050565b600082516104cc81846020870161045c565b9190910192915050565b6000602082840312156104e857600080fd5b81516001600160e01b03198116811461007057600080fd5b8082018082111561052157634e487b7160e01b600052601160045260246000fd5b9291505056fea2646970667358221220f9d78a4184dec0fc2905ea4b554da4ba1f08f62b57b4a86f79dfd5d00238863864736f6c63430008150033",
  "deployedSourceMap": "112:286:125:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;189:207;;;;;;:::i;:::-;;:::i;:::-;;;1479:14:249;;1472:22;1454:41;;1442:2;1427:18;189:207:125;;;;;;;;323:4;346:43;-1:-1:-1;;;;;346:26:125;;373:4;379:9;346:26;:43::i;:::-;339:50;;189:207;;;;;;:::o;791:633:211:-;927:4;944:17;963:24;991:33;1008:4;1014:9;991:16;:33::i;:::-;943:81;;-1:-1:-1;943:81:211;-1:-1:-1;1047:26:211;1038:5;:35;;;;;;;;:::i;:::-;;:58;;;;;1090:6;-1:-1:-1;;;;;1077:19:211;:9;-1:-1:-1;;;;;1077:19:211;;1038:58;1034:100;;;1119:4;1112:11;;;;;;1034:100;1145:12;1159:19;1182:6;-1:-1:-1;;;;;1182:17:211;1236:34;;;1272:4;1278:9;1213:75;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1213:75:211;;;;;;;;;;;;;;-1:-1:-1;;;;;1213:75:211;-1:-1:-1;;;;;;1213:75:211;;;;;;;;;;1182:116;;;;1213:75;1182:116;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1144:154;;;;1316:7;:30;;;;;1327:6;:13;1344:2;1327:19;1316:30;:100;;;;-1:-1:-1;1350:28:211;;-1:-1:-1;;;1382:34:211;1350:28;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;1350:66:211;;1316:100;1308:109;791:633;-1:-1:-1;;;;;;;;791:633:211:o;2228:1279:209:-;2309:7;2318:12;2539:9;:16;2559:2;2539:22;2535:966;;2828:4;2813:20;;2807:27;2877:4;2862:20;;2856:27;2934:4;2919:20;;2913:27;2577:9;2905:36;2975:25;2986:4;2905:36;2807:27;2856;2975:10;:25::i;:::-;2968:32;;;;;;;;;2535:966;3021:9;:16;3041:2;3021:22;3017:484;;3290:4;3275:20;;3269:27;3340:4;3325:20;;3319:27;3380:23;3391:4;3269:27;3319;3380:10;:23::i;:::-;3373:30;;;;;;;;3017:484;-1:-1:-1;3450:1:209;;-1:-1:-1;3454:35:209;3017:484;2228:1279;;;;;:::o;5701:1600::-;5827:7;;6748:66;6735:79;;6731:161;;;-1:-1:-1;6846:1:209;;-1:-1:-1;6850:30:209;6830:51;;6731:161;6905:1;:7;;6910:2;6905:7;;:18;;;;;6916:1;:7;;6921:2;6916:7;;6905:18;6901:100;;;-1:-1:-1;6955:1:209;;-1:-1:-1;6959:30:209;6939:51;;6901:100;7112:24;;;7095:14;7112:24;;;;;;;;;3177:25:249;;;3250:4;3238:17;;3218:18;;;3211:45;;;;3272:18;;;3265:34;;;3315:18;;;3308:34;;;7112:24:209;;3149:19:249;;7112:24:209;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7112:24:209;;-1:-1:-1;;7112:24:209;;;-1:-1:-1;;;;;;;7150:20:209;;7146:101;;7202:1;7206:29;7186:50;;;;;;;7146:101;7265:6;-1:-1:-1;7273:20:209;;-1:-1:-1;5701:1600:209;;;;;;;;:::o;4774:336::-;4884:7;;-1:-1:-1;;;;;4929:80:209;;4884:7;5035:25;5051:3;5036:18;;;5058:2;5035:25;:::i;:::-;5019:42;;5078:25;5089:4;5095:1;5098;5101;5078:10;:25::i;:::-;5071:32;;;;;;4774:336;;;;;;:::o;14:127:249:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:1163;232:6;240;248;301:2;289:9;280:7;276:23;272:32;269:52;;;317:1;314;307:12;269:52;343:23;;-1:-1:-1;;;;;395:31:249;;385:42;;375:70;;441:1;438;431:12;375:70;464:5;-1:-1:-1;516:2:249;501:18;;488:32;;-1:-1:-1;571:2:249;556:18;;543:32;594:18;624:14;;;621:34;;;651:1;648;641:12;621:34;689:6;678:9;674:22;664:32;;734:7;727:4;723:2;719:13;715:27;705:55;;756:1;753;746:12;705:55;792:2;779:16;814:2;810;807:10;804:36;;;820:18;;:::i;:::-;895:2;889:9;863:2;949:13;;-1:-1:-1;;945:22:249;;;969:2;941:31;937:40;925:53;;;993:18;;;1013:22;;;990:46;987:72;;;1039:18;;:::i;:::-;1079:10;1075:2;1068:22;1114:2;1106:6;1099:18;1154:7;1149:2;1144;1140;1136:11;1132:20;1129:33;1126:53;;;1175:1;1172;1165:12;1126:53;1231:2;1226;1222;1218:11;1213:2;1205:6;1201:15;1188:46;1276:1;1271:2;1266;1258:6;1254:15;1250:24;1243:35;1297:6;1287:16;;;;;;;146:1163;;;;;:::o;1506:127::-;1567:10;1562:3;1558:20;1555:1;1548:31;1598:4;1595:1;1588:15;1622:4;1619:1;1612:15;1638:250;1723:1;1733:113;1747:6;1744:1;1741:13;1733:113;;;1823:11;;;1817:18;1804:11;;;1797:39;1769:2;1762:10;1733:113;;;-1:-1:-1;;1880:1:249;1862:16;;1855:27;1638:250::o;1893:465::-;2068:6;2057:9;2050:25;2111:2;2106;2095:9;2091:18;2084:30;2031:4;2143:6;2137:13;2186:6;2181:2;2170:9;2166:18;2159:34;2202:79;2274:6;2269:2;2258:9;2254:18;2249:2;2241:6;2237:15;2202:79;:::i;:::-;2342:2;2321:15;-1:-1:-1;;2317:29:249;2302:45;;;;2349:2;2298:54;;1893:465;-1:-1:-1;;;1893:465:249:o;2363:287::-;2492:3;2530:6;2524:13;2546:66;2605:6;2600:3;2593:4;2585:6;2581:17;2546:66;:::i;:::-;2628:16;;;;;2363:287;-1:-1:-1;;2363:287:249:o;2655:290::-;2724:6;2777:2;2765:9;2756:7;2752:23;2748:32;2745:52;;;2793:1;2790;2783:12;2745:52;2819:16;;-1:-1:-1;;;;;;2864:32:249;;2854:43;;2844:71;;2911:1;2908;2901:12;3353:222;3418:9;;;3439:10;;;3436:133;;;3491:10;3486:3;3482:20;3479:1;3472:31;3526:4;3523:1;3516:15;3554:4;3551:1;3544:15;3436:133;3353:222;;;;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    112,
    398
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6CCEA652 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x3E CALLDATASIZE PUSH1 0x4 PUSH2 0x36D JUMP JUMPDEST PUSH2 0x57 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x6D PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 DUP5 PUSH2 0x77 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x86 DUP6 DUP6 PUSH2 0x1C3 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x9F JUMPI PUSH2 0x9F PUSH2 0x446 JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0xBD JUMPI POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST ISZERO PUSH2 0xCD JUMPI PUSH1 0x1 SWAP3 POP POP POP PUSH2 0x70 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1626BA7E PUSH1 0xE0 SHL DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xF5 SWAP3 SWAP2 SWAP1 PUSH2 0x480 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 MSTORE SWAP1 MLOAD PUSH2 0x133 SWAP2 SWAP1 PUSH2 0x4BA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x16E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x173 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x186 JUMPI POP DUP1 MLOAD PUSH1 0x20 EQ JUMPDEST DUP1 ISZERO PUSH2 0x1B7 JUMPI POP DUP1 MLOAD PUSH4 0xB135D3F PUSH1 0xE1 SHL SWAP1 PUSH2 0x1AB SWAP1 DUP4 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP1 DUP5 ADD PUSH2 0x4D6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND EQ JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MLOAD PUSH1 0x41 SUB PUSH2 0x1F9 JUMPI PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0x1ED DUP8 DUP3 DUP6 DUP6 PUSH2 0x231 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP POP PUSH2 0x22A JUMP JUMPDEST DUP3 MLOAD PUSH1 0x40 SUB PUSH2 0x222 JUMPI PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x40 DUP5 ADD MLOAD PUSH2 0x217 DUP7 DUP4 DUP4 PUSH2 0x31E JUMP JUMPDEST SWAP4 POP SWAP4 POP POP POP PUSH2 0x22A JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP PUSH1 0x2 JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 GT ISZERO PUSH2 0x268 JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x3 PUSH2 0x315 JUMP JUMPDEST DUP5 PUSH1 0xFF AND PUSH1 0x1B EQ ISZERO DUP1 ISZERO PUSH2 0x280 JUMPI POP DUP5 PUSH1 0xFF AND PUSH1 0x1C EQ ISZERO JUMPDEST ISZERO PUSH2 0x291 JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x4 PUSH2 0x315 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP10 SWAP1 MSTORE PUSH1 0xFF DUP9 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2E5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x30E JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x315 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP4 AND DUP2 PUSH2 0x33B PUSH1 0xFF DUP7 SWAP1 SHR PUSH1 0x1B PUSH2 0x500 JUMP JUMPDEST SWAP1 POP PUSH2 0x349 DUP8 DUP3 DUP9 DUP6 PUSH2 0x231 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x382 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x399 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x3E3 JUMPI PUSH2 0x3E3 PUSH2 0x357 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x40B JUMPI PUSH2 0x40B PUSH2 0x357 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP10 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x424 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x477 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x45F JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x4A5 DUP2 PUSH1 0x60 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x45C JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x60 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x4CC DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x45C JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x521 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 0xD7 DUP11 COINBASE DUP5 0xDE 0xC0 0xFC 0x29 SDIV 0xEA 0x4B SSTORE 0x4D LOG4 0xBA 0x1F ADDMOD 0xF6 0x2B JUMPI 0xB4 0xA8 PUSH16 0x79DFD5D00238863864736F6C63430008 ISZERO STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        112,
        398
      ],
      "op": "PUSH1",
      "path": "125",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "PUSH1",
      "path": "125",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "MSTORE",
      "path": "125"
    },
    "5": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "CALLVALUE",
      "path": "125"
    },
    "6": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "DUP1",
      "path": "125"
    },
    "7": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "ISZERO",
      "path": "125"
    },
    "8": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "PUSH2",
      "path": "125",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "JUMPI",
      "path": "125"
    },
    "12": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "PUSH1",
      "path": "125",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "DUP1",
      "path": "125"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "REVERT",
      "path": "125"
    },
    "16": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "JUMPDEST",
      "path": "125"
    },
    "17": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "POP",
      "path": "125"
    },
    "18": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "PUSH1",
      "path": "125",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "CALLDATASIZE",
      "path": "125"
    },
    "21": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "LT",
      "path": "125"
    },
    "22": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "PUSH2",
      "path": "125",
      "value": "0x2B"
    },
    "25": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "JUMPI",
      "path": "125"
    },
    "26": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "PUSH1",
      "path": "125",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "CALLDATALOAD",
      "path": "125"
    },
    "29": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "PUSH1",
      "path": "125",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "SHR",
      "path": "125"
    },
    "32": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "DUP1",
      "path": "125"
    },
    "33": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "PUSH4",
      "path": "125",
      "value": "0x6CCEA652"
    },
    "38": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "EQ",
      "path": "125"
    },
    "39": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "PUSH2",
      "path": "125",
      "value": "0x30"
    },
    "42": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "JUMPI",
      "path": "125"
    },
    "43": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "JUMPDEST",
      "path": "125"
    },
    "44": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "PUSH1",
      "path": "125",
      "value": "0x0"
    },
    "46": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "DUP1",
      "path": "125"
    },
    "47": {
      "first_revert": true,
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "REVERT",
      "path": "125"
    },
    "48": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "JUMPDEST",
      "path": "125"
    },
    "49": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "PUSH2",
      "path": "125",
      "value": "0x43"
    },
    "52": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "PUSH2",
      "path": "125",
      "value": "0x3E"
    },
    "55": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "CALLDATASIZE",
      "path": "125"
    },
    "56": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "PUSH1",
      "path": "125",
      "value": "0x4"
    },
    "58": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "PUSH2",
      "path": "125",
      "value": "0x36D"
    },
    "61": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "jump": "i",
      "offset": [
        189,
        396
      ],
      "op": "JUMP",
      "path": "125"
    },
    "62": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "JUMPDEST",
      "path": "125"
    },
    "63": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "PUSH2",
      "path": "125",
      "value": "0x57"
    },
    "66": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "jump": "i",
      "offset": [
        189,
        396
      ],
      "op": "JUMP",
      "path": "125"
    },
    "67": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "JUMPDEST",
      "path": "125"
    },
    "68": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "PUSH1",
      "path": "125",
      "value": "0x40"
    },
    "70": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "MLOAD",
      "path": "125"
    },
    "71": {
      "op": "SWAP1"
    },
    "72": {
      "op": "ISZERO"
    },
    "73": {
      "op": "ISZERO"
    },
    "74": {
      "op": "DUP2"
    },
    "75": {
      "op": "MSTORE"
    },
    "76": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "78": {
      "op": "ADD"
    },
    "79": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "PUSH1",
      "path": "125",
      "value": "0x40"
    },
    "81": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "MLOAD",
      "path": "125"
    },
    "82": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "DUP1",
      "path": "125"
    },
    "83": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "SWAP2",
      "path": "125"
    },
    "84": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "SUB",
      "path": "125"
    },
    "85": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "SWAP1",
      "path": "125"
    },
    "86": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "RETURN",
      "path": "125"
    },
    "87": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "JUMPDEST",
      "path": "125"
    },
    "88": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        323,
        327
      ],
      "op": "PUSH1",
      "path": "125",
      "value": "0x0"
    },
    "90": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        346,
        389
      ],
      "op": "PUSH2",
      "path": "125",
      "statement": 0,
      "value": "0x6D"
    },
    "93": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "95": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "97": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "99": {
      "op": "SHL"
    },
    "100": {
      "op": "SUB"
    },
    "101": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        346,
        372
      ],
      "op": "DUP6",
      "path": "125"
    },
    "102": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        346,
        372
      ],
      "op": "AND",
      "path": "125"
    },
    "103": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        373,
        377
      ],
      "op": "DUP5",
      "path": "125"
    },
    "104": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        379,
        388
      ],
      "op": "DUP5",
      "path": "125"
    },
    "105": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        346,
        372
      ],
      "op": "PUSH2",
      "path": "125",
      "value": "0x77"
    },
    "108": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "jump": "i",
      "offset": [
        346,
        389
      ],
      "op": "JUMP",
      "path": "125"
    },
    "109": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        346,
        389
      ],
      "op": "JUMPDEST",
      "path": "125"
    },
    "110": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        339,
        389
      ],
      "op": "SWAP1",
      "path": "125"
    },
    "111": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        339,
        389
      ],
      "op": "POP",
      "path": "125"
    },
    "112": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "JUMPDEST",
      "path": "125"
    },
    "113": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "SWAP4",
      "path": "125"
    },
    "114": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "SWAP3",
      "path": "125"
    },
    "115": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "POP",
      "path": "125"
    },
    "116": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "POP",
      "path": "125"
    },
    "117": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "POP",
      "path": "125"
    },
    "118": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "jump": "o",
      "offset": [
        189,
        396
      ],
      "op": "JUMP",
      "path": "125"
    },
    "119": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        791,
        1424
      ],
      "op": "JUMPDEST",
      "path": "211"
    },
    "120": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        927,
        931
      ],
      "op": "PUSH1",
      "path": "211",
      "value": "0x0"
    },
    "122": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        944,
        961
      ],
      "op": "DUP1",
      "path": "211"
    },
    "123": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        963,
        987
      ],
      "op": "PUSH1",
      "path": "211",
      "value": "0x0"
    },
    "125": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        991,
        1024
      ],
      "op": "PUSH2",
      "path": "211",
      "value": "0x86"
    },
    "128": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1008,
        1012
      ],
      "op": "DUP6",
      "path": "211"
    },
    "129": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1014,
        1023
      ],
      "op": "DUP6",
      "path": "211"
    },
    "130": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        991,
        1007
      ],
      "op": "PUSH2",
      "path": "211",
      "value": "0x1C3"
    },
    "133": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "jump": "i",
      "offset": [
        991,
        1024
      ],
      "op": "JUMP",
      "path": "211"
    },
    "134": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        991,
        1024
      ],
      "op": "JUMPDEST",
      "path": "211"
    },
    "135": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        943,
        1024
      ],
      "op": "SWAP1",
      "path": "211"
    },
    "136": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        943,
        1024
      ],
      "op": "SWAP3",
      "path": "211"
    },
    "137": {
      "op": "POP"
    },
    "138": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        943,
        1024
      ],
      "op": "SWAP1",
      "path": "211"
    },
    "139": {
      "op": "POP"
    },
    "140": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1047,
        1073
      ],
      "op": "PUSH1",
      "path": "211",
      "value": "0x0"
    },
    "142": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1038,
        1043
      ],
      "op": "DUP2",
      "path": "211"
    },
    "143": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1038,
        1073
      ],
      "op": "PUSH1",
      "path": "211",
      "value": "0x4"
    },
    "145": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1038,
        1073
      ],
      "op": "DUP2",
      "path": "211"
    },
    "146": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1038,
        1073
      ],
      "op": "GT",
      "path": "211"
    },
    "147": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1038,
        1073
      ],
      "op": "ISZERO",
      "path": "211"
    },
    "148": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1038,
        1073
      ],
      "op": "PUSH2",
      "path": "211",
      "value": "0x9F"
    },
    "151": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1038,
        1073
      ],
      "op": "JUMPI",
      "path": "211"
    },
    "152": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1038,
        1073
      ],
      "op": "PUSH2",
      "path": "211",
      "value": "0x9F"
    },
    "155": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1038,
        1073
      ],
      "op": "PUSH2",
      "path": "211",
      "value": "0x446"
    },
    "158": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "jump": "i",
      "offset": [
        1038,
        1073
      ],
      "op": "JUMP",
      "path": "211"
    },
    "159": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1038,
        1073
      ],
      "op": "JUMPDEST",
      "path": "211"
    },
    "160": {
      "branch": 17,
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1038,
        1073
      ],
      "op": "EQ",
      "path": "211"
    },
    "161": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1038,
        1096
      ],
      "op": "DUP1",
      "path": "211"
    },
    "162": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1038,
        1096
      ],
      "op": "ISZERO",
      "path": "211"
    },
    "163": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1038,
        1096
      ],
      "op": "PUSH2",
      "path": "211",
      "value": "0xBD"
    },
    "166": {
      "branch": 17,
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1038,
        1096
      ],
      "op": "JUMPI",
      "path": "211"
    },
    "167": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1038,
        1096
      ],
      "op": "POP",
      "path": "211"
    },
    "168": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1090,
        1096
      ],
      "op": "DUP6",
      "path": "211"
    },
    "169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "173": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "175": {
      "op": "SHL"
    },
    "176": {
      "op": "SUB"
    },
    "177": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1077,
        1096
      ],
      "op": "AND",
      "path": "211"
    },
    "178": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1077,
        1086
      ],
      "op": "DUP3",
      "path": "211"
    },
    "179": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "181": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "183": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "185": {
      "op": "SHL"
    },
    "186": {
      "op": "SUB"
    },
    "187": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1077,
        1096
      ],
      "op": "AND",
      "path": "211"
    },
    "188": {
      "branch": 18,
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1077,
        1096
      ],
      "op": "EQ",
      "path": "211"
    },
    "189": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1038,
        1096
      ],
      "op": "JUMPDEST",
      "path": "211"
    },
    "190": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1034,
        1134
      ],
      "op": "ISZERO",
      "path": "211"
    },
    "191": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1034,
        1134
      ],
      "op": "PUSH2",
      "path": "211",
      "value": "0xCD"
    },
    "194": {
      "branch": 18,
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1034,
        1134
      ],
      "op": "JUMPI",
      "path": "211"
    },
    "195": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1119,
        1123
      ],
      "op": "PUSH1",
      "path": "211",
      "statement": 1,
      "value": "0x1"
    },
    "197": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1112,
        1123
      ],
      "op": "SWAP3",
      "path": "211"
    },
    "198": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1112,
        1123
      ],
      "op": "POP",
      "path": "211"
    },
    "199": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1112,
        1123
      ],
      "op": "POP",
      "path": "211"
    },
    "200": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1112,
        1123
      ],
      "op": "POP",
      "path": "211"
    },
    "201": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1112,
        1123
      ],
      "op": "PUSH2",
      "path": "211",
      "value": "0x70"
    },
    "204": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1112,
        1123
      ],
      "op": "JUMP",
      "path": "211"
    },
    "205": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1034,
        1134
      ],
      "op": "JUMPDEST",
      "path": "211"
    },
    "206": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1145,
        1157
      ],
      "op": "PUSH1",
      "path": "211",
      "value": "0x0"
    },
    "208": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1159,
        1178
      ],
      "op": "DUP1",
      "path": "211"
    },
    "209": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1188
      ],
      "op": "DUP8",
      "path": "211"
    },
    "210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "214": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "216": {
      "op": "SHL"
    },
    "217": {
      "op": "SUB"
    },
    "218": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1199
      ],
      "op": "AND",
      "path": "211"
    },
    "219": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1236,
        1270
      ],
      "op": "PUSH4",
      "path": "211",
      "value": "0x1626BA7E"
    },
    "224": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1236,
        1270
      ],
      "op": "PUSH1",
      "path": "211",
      "value": "0xE0"
    },
    "226": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1236,
        1270
      ],
      "op": "SHL",
      "path": "211"
    },
    "227": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1272,
        1276
      ],
      "op": "DUP9",
      "path": "211"
    },
    "228": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1278,
        1287
      ],
      "op": "DUP9",
      "path": "211"
    },
    "229": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "PUSH1",
      "path": "211",
      "value": "0x40"
    },
    "231": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "MLOAD",
      "path": "211"
    },
    "232": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "PUSH1",
      "path": "211",
      "value": "0x24"
    },
    "234": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "ADD",
      "path": "211"
    },
    "235": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "PUSH2",
      "path": "211",
      "value": "0xF5"
    },
    "238": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "SWAP3",
      "path": "211"
    },
    "239": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "SWAP2",
      "path": "211"
    },
    "240": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "SWAP1",
      "path": "211"
    },
    "241": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "PUSH2",
      "path": "211",
      "value": "0x480"
    },
    "244": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "jump": "i",
      "offset": [
        1213,
        1288
      ],
      "op": "JUMP",
      "path": "211"
    },
    "245": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "JUMPDEST",
      "path": "211"
    },
    "246": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "PUSH1",
      "path": "211",
      "value": "0x40"
    },
    "248": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "DUP1",
      "path": "211"
    },
    "249": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "MLOAD",
      "path": "211"
    },
    "250": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "252": {
      "op": "NOT"
    },
    "253": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "DUP2",
      "path": "211"
    },
    "254": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "DUP5",
      "path": "211"
    },
    "255": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "SUB",
      "path": "211"
    },
    "256": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "ADD",
      "path": "211"
    },
    "257": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "DUP2",
      "path": "211"
    },
    "258": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "MSTORE",
      "path": "211"
    },
    "259": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "SWAP2",
      "path": "211"
    },
    "260": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "DUP2",
      "path": "211"
    },
    "261": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "MSTORE",
      "path": "211"
    },
    "262": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "PUSH1",
      "path": "211",
      "value": "0x20"
    },
    "264": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "DUP3",
      "path": "211"
    },
    "265": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "ADD",
      "path": "211"
    },
    "266": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "DUP1",
      "path": "211"
    },
    "267": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "MLOAD",
      "path": "211"
    },
    "268": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "272": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "274": {
      "op": "SHL"
    },
    "275": {
      "op": "SUB"
    },
    "276": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "AND",
      "path": "211"
    },
    "277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "281": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "283": {
      "op": "SHL"
    },
    "284": {
      "op": "SUB"
    },
    "285": {
      "op": "NOT"
    },
    "286": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "SWAP1",
      "path": "211"
    },
    "287": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "SWAP5",
      "path": "211"
    },
    "288": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "AND",
      "path": "211"
    },
    "289": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "SWAP4",
      "path": "211"
    },
    "290": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "SWAP1",
      "path": "211"
    },
    "291": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "SWAP4",
      "path": "211"
    },
    "292": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "OR",
      "path": "211"
    },
    "293": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "SWAP1",
      "path": "211"
    },
    "294": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "SWAP3",
      "path": "211"
    },
    "295": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "MSTORE",
      "path": "211"
    },
    "296": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "SWAP1",
      "path": "211"
    },
    "297": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "MLOAD",
      "path": "211"
    },
    "298": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "PUSH2",
      "path": "211",
      "value": "0x133"
    },
    "301": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "SWAP2",
      "path": "211"
    },
    "302": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1213,
        1288
      ],
      "op": "SWAP1",
      "path": "211"
    },
    "303": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "PUSH2",
      "path": "211",
      "value": "0x4BA"
    },
    "306": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "jump": "i",
      "offset": [
        1182,
        1298
      ],
      "op": "JUMP",
      "path": "211"
    },
    "307": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "JUMPDEST",
      "path": "211"
    },
    "308": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "PUSH1",
      "path": "211",
      "value": "0x0"
    },
    "310": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "PUSH1",
      "path": "211",
      "value": "0x40"
    },
    "312": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "MLOAD",
      "path": "211"
    },
    "313": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "DUP1",
      "path": "211"
    },
    "314": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "DUP4",
      "path": "211"
    },
    "315": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "SUB",
      "path": "211"
    },
    "316": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "DUP2",
      "path": "211"
    },
    "317": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "DUP6",
      "path": "211"
    },
    "318": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "GAS",
      "path": "211"
    },
    "319": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "STATICCALL",
      "path": "211"
    },
    "320": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "SWAP2",
      "path": "211"
    },
    "321": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "POP",
      "path": "211"
    },
    "322": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "POP",
      "path": "211"
    },
    "323": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "RETURNDATASIZE",
      "path": "211"
    },
    "324": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "DUP1",
      "path": "211"
    },
    "325": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "PUSH1",
      "path": "211",
      "value": "0x0"
    },
    "327": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "DUP2",
      "path": "211"
    },
    "328": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "EQ",
      "path": "211"
    },
    "329": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "PUSH2",
      "path": "211",
      "value": "0x16E"
    },
    "332": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "JUMPI",
      "path": "211"
    },
    "333": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "PUSH1",
      "path": "211",
      "value": "0x40"
    },
    "335": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "MLOAD",
      "path": "211"
    },
    "336": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "SWAP2",
      "path": "211"
    },
    "337": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "POP",
      "path": "211"
    },
    "338": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "PUSH1",
      "path": "211",
      "value": "0x1F"
    },
    "340": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "NOT",
      "path": "211"
    },
    "341": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "PUSH1",
      "path": "211",
      "value": "0x3F"
    },
    "343": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "RETURNDATASIZE",
      "path": "211"
    },
    "344": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "ADD",
      "path": "211"
    },
    "345": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "AND",
      "path": "211"
    },
    "346": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "DUP3",
      "path": "211"
    },
    "347": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "ADD",
      "path": "211"
    },
    "348": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "PUSH1",
      "path": "211",
      "value": "0x40"
    },
    "350": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "MSTORE",
      "path": "211"
    },
    "351": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "RETURNDATASIZE",
      "path": "211"
    },
    "352": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "DUP3",
      "path": "211"
    },
    "353": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "MSTORE",
      "path": "211"
    },
    "354": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "RETURNDATASIZE",
      "path": "211"
    },
    "355": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "PUSH1",
      "path": "211",
      "value": "0x0"
    },
    "357": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "PUSH1",
      "path": "211",
      "value": "0x20"
    },
    "359": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "DUP5",
      "path": "211"
    },
    "360": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "ADD",
      "path": "211"
    },
    "361": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "RETURNDATACOPY",
      "path": "211"
    },
    "362": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "PUSH2",
      "path": "211",
      "value": "0x173"
    },
    "365": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "JUMP",
      "path": "211"
    },
    "366": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "JUMPDEST",
      "path": "211"
    },
    "367": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "PUSH1",
      "path": "211",
      "value": "0x60"
    },
    "369": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "SWAP2",
      "path": "211"
    },
    "370": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "POP",
      "path": "211"
    },
    "371": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "JUMPDEST",
      "path": "211"
    },
    "372": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1182,
        1298
      ],
      "op": "POP",
      "path": "211"
    },
    "373": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1144,
        1298
      ],
      "op": "SWAP2",
      "path": "211"
    },
    "374": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1144,
        1298
      ],
      "op": "POP",
      "path": "211"
    },
    "375": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1144,
        1298
      ],
      "op": "SWAP2",
      "path": "211"
    },
    "376": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1144,
        1298
      ],
      "op": "POP",
      "path": "211"
    },
    "377": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1316,
        1323
      ],
      "op": "DUP2",
      "path": "211",
      "statement": 2
    },
    "378": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1316,
        1346
      ],
      "op": "DUP1",
      "path": "211"
    },
    "379": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1316,
        1346
      ],
      "op": "ISZERO",
      "path": "211"
    },
    "380": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1316,
        1346
      ],
      "op": "PUSH2",
      "path": "211",
      "value": "0x186"
    },
    "383": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1316,
        1346
      ],
      "op": "JUMPI",
      "path": "211"
    },
    "384": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1316,
        1346
      ],
      "op": "POP",
      "path": "211"
    },
    "385": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1327,
        1333
      ],
      "op": "DUP1",
      "path": "211"
    },
    "386": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1327,
        1340
      ],
      "op": "MLOAD",
      "path": "211"
    },
    "387": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1344,
        1346
      ],
      "op": "PUSH1",
      "path": "211",
      "value": "0x20"
    },
    "389": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1327,
        1346
      ],
      "op": "EQ",
      "path": "211"
    },
    "390": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1316,
        1346
      ],
      "op": "JUMPDEST",
      "path": "211"
    },
    "391": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1316,
        1416
      ],
      "op": "DUP1",
      "path": "211"
    },
    "392": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1316,
        1416
      ],
      "op": "ISZERO",
      "path": "211"
    },
    "393": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1316,
        1416
      ],
      "op": "PUSH2",
      "path": "211",
      "value": "0x1B7"
    },
    "396": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1316,
        1416
      ],
      "op": "JUMPI",
      "path": "211"
    },
    "397": {
      "op": "POP"
    },
    "398": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1350,
        1378
      ],
      "op": "DUP1",
      "path": "211"
    },
    "399": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1350,
        1378
      ],
      "op": "MLOAD",
      "path": "211"
    },
    "400": {
      "op": "PUSH4",
      "value": "0xB135D3F"
    },
    "405": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "407": {
      "op": "SHL"
    },
    "408": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1382,
        1416
      ],
      "op": "SWAP1",
      "path": "211"
    },
    "409": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1350,
        1378
      ],
      "op": "PUSH2",
      "path": "211",
      "value": "0x1AB"
    },
    "412": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1350,
        1378
      ],
      "op": "SWAP1",
      "path": "211"
    },
    "413": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1350,
        1378
      ],
      "op": "DUP4",
      "path": "211"
    },
    "414": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1350,
        1378
      ],
      "op": "ADD",
      "path": "211"
    },
    "415": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1350,
        1378
      ],
      "op": "PUSH1",
      "path": "211",
      "value": "0x20"
    },
    "417": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1350,
        1378
      ],
      "op": "SWAP1",
      "path": "211"
    },
    "418": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1350,
        1378
      ],
      "op": "DUP2",
      "path": "211"
    },
    "419": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1350,
        1378
      ],
      "op": "ADD",
      "path": "211"
    },
    "420": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1350,
        1378
      ],
      "op": "SWAP1",
      "path": "211"
    },
    "421": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1350,
        1378
      ],
      "op": "DUP5",
      "path": "211"
    },
    "422": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1350,
        1378
      ],
      "op": "ADD",
      "path": "211"
    },
    "423": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1350,
        1378
      ],
      "op": "PUSH2",
      "path": "211",
      "value": "0x4D6"
    },
    "426": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "jump": "i",
      "offset": [
        1350,
        1378
      ],
      "op": "JUMP",
      "path": "211"
    },
    "427": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1350,
        1378
      ],
      "op": "JUMPDEST",
      "path": "211"
    },
    "428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "432": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "434": {
      "op": "SHL"
    },
    "435": {
      "op": "SUB"
    },
    "436": {
      "op": "NOT"
    },
    "437": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1350,
        1416
      ],
      "op": "AND",
      "path": "211"
    },
    "438": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1350,
        1416
      ],
      "op": "EQ",
      "path": "211"
    },
    "439": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1316,
        1416
      ],
      "op": "JUMPDEST",
      "path": "211"
    },
    "440": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1308,
        1417
      ],
      "op": "SWAP9",
      "path": "211"
    },
    "441": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        791,
        1424
      ],
      "op": "SWAP8",
      "path": "211"
    },
    "442": {
      "op": "POP"
    },
    "443": {
      "op": "POP"
    },
    "444": {
      "op": "POP"
    },
    "445": {
      "op": "POP"
    },
    "446": {
      "op": "POP"
    },
    "447": {
      "op": "POP"
    },
    "448": {
      "op": "POP"
    },
    "449": {
      "op": "POP"
    },
    "450": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "jump": "o",
      "offset": [
        791,
        1424
      ],
      "op": "JUMP",
      "path": "211"
    },
    "451": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2228,
        3507
      ],
      "op": "JUMPDEST",
      "path": "209"
    },
    "452": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2309,
        2316
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x0"
    },
    "454": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2318,
        2330
      ],
      "op": "DUP1",
      "path": "209"
    },
    "455": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2539,
        2548
      ],
      "op": "DUP3",
      "path": "209"
    },
    "456": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2539,
        2555
      ],
      "op": "MLOAD",
      "path": "209"
    },
    "457": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2559,
        2561
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x41"
    },
    "459": {
      "branch": 11,
      "fn": "ECDSA.tryRecover",
      "offset": [
        2539,
        2561
      ],
      "op": "SUB",
      "path": "209"
    },
    "460": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2535,
        3501
      ],
      "op": "PUSH2",
      "path": "209",
      "value": "0x1F9"
    },
    "463": {
      "branch": 11,
      "fn": "ECDSA.tryRecover",
      "offset": [
        2535,
        3501
      ],
      "op": "JUMPI",
      "path": "209"
    },
    "464": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2828,
        2832
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x20"
    },
    "466": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2813,
        2833
      ],
      "op": "DUP4",
      "path": "209"
    },
    "467": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2813,
        2833
      ],
      "op": "ADD",
      "path": "209"
    },
    "468": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2807,
        2834
      ],
      "op": "MLOAD",
      "path": "209"
    },
    "469": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2877,
        2881
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x40"
    },
    "471": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2862,
        2882
      ],
      "op": "DUP5",
      "path": "209"
    },
    "472": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2862,
        2882
      ],
      "op": "ADD",
      "path": "209"
    },
    "473": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2856,
        2883
      ],
      "op": "MLOAD",
      "path": "209"
    },
    "474": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2934,
        2938
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x60"
    },
    "476": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2919,
        2939
      ],
      "op": "DUP6",
      "path": "209"
    },
    "477": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2919,
        2939
      ],
      "op": "ADD",
      "path": "209"
    },
    "478": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2913,
        2940
      ],
      "op": "MLOAD",
      "path": "209"
    },
    "479": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2577,
        2586
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x0"
    },
    "481": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2905,
        2941
      ],
      "op": "BYTE",
      "path": "209"
    },
    "482": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2975,
        3000
      ],
      "op": "PUSH2",
      "path": "209",
      "statement": 3,
      "value": "0x1ED"
    },
    "485": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2986,
        2990
      ],
      "op": "DUP8",
      "path": "209"
    },
    "486": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2905,
        2941
      ],
      "op": "DUP3",
      "path": "209"
    },
    "487": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2807,
        2834
      ],
      "op": "DUP6",
      "path": "209"
    },
    "488": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2856,
        2883
      ],
      "op": "DUP6",
      "path": "209"
    },
    "489": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2975,
        2985
      ],
      "op": "PUSH2",
      "path": "209",
      "value": "0x231"
    },
    "492": {
      "fn": "ECDSA.tryRecover",
      "jump": "i",
      "offset": [
        2975,
        3000
      ],
      "op": "JUMP",
      "path": "209"
    },
    "493": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2975,
        3000
      ],
      "op": "JUMPDEST",
      "path": "209"
    },
    "494": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2968,
        3000
      ],
      "op": "SWAP5",
      "path": "209"
    },
    "495": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2968,
        3000
      ],
      "op": "POP",
      "path": "209"
    },
    "496": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2968,
        3000
      ],
      "op": "SWAP5",
      "path": "209"
    },
    "497": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2968,
        3000
      ],
      "op": "POP",
      "path": "209"
    },
    "498": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2968,
        3000
      ],
      "op": "POP",
      "path": "209"
    },
    "499": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2968,
        3000
      ],
      "op": "POP",
      "path": "209"
    },
    "500": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2968,
        3000
      ],
      "op": "POP",
      "path": "209"
    },
    "501": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2968,
        3000
      ],
      "op": "PUSH2",
      "path": "209",
      "value": "0x22A"
    },
    "504": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2968,
        3000
      ],
      "op": "JUMP",
      "path": "209"
    },
    "505": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2535,
        3501
      ],
      "op": "JUMPDEST",
      "path": "209"
    },
    "506": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3021,
        3030
      ],
      "op": "DUP3",
      "path": "209"
    },
    "507": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3021,
        3037
      ],
      "op": "MLOAD",
      "path": "209"
    },
    "508": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3041,
        3043
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x40"
    },
    "510": {
      "branch": 12,
      "fn": "ECDSA.tryRecover",
      "offset": [
        3021,
        3043
      ],
      "op": "SUB",
      "path": "209"
    },
    "511": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3017,
        3501
      ],
      "op": "PUSH2",
      "path": "209",
      "value": "0x222"
    },
    "514": {
      "branch": 12,
      "fn": "ECDSA.tryRecover",
      "offset": [
        3017,
        3501
      ],
      "op": "JUMPI",
      "path": "209"
    },
    "515": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3290,
        3294
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x20"
    },
    "517": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3275,
        3295
      ],
      "op": "DUP4",
      "path": "209"
    },
    "518": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3275,
        3295
      ],
      "op": "ADD",
      "path": "209"
    },
    "519": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3269,
        3296
      ],
      "op": "MLOAD",
      "path": "209"
    },
    "520": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3340,
        3344
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x40"
    },
    "522": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3325,
        3345
      ],
      "op": "DUP5",
      "path": "209"
    },
    "523": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3325,
        3345
      ],
      "op": "ADD",
      "path": "209"
    },
    "524": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3319,
        3346
      ],
      "op": "MLOAD",
      "path": "209"
    },
    "525": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3380,
        3403
      ],
      "op": "PUSH2",
      "path": "209",
      "statement": 4,
      "value": "0x217"
    },
    "528": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3391,
        3395
      ],
      "op": "DUP7",
      "path": "209"
    },
    "529": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3269,
        3296
      ],
      "op": "DUP4",
      "path": "209"
    },
    "530": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3319,
        3346
      ],
      "op": "DUP4",
      "path": "209"
    },
    "531": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3380,
        3390
      ],
      "op": "PUSH2",
      "path": "209",
      "value": "0x31E"
    },
    "534": {
      "fn": "ECDSA.tryRecover",
      "jump": "i",
      "offset": [
        3380,
        3403
      ],
      "op": "JUMP",
      "path": "209"
    },
    "535": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3380,
        3403
      ],
      "op": "JUMPDEST",
      "path": "209"
    },
    "536": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3373,
        3403
      ],
      "op": "SWAP4",
      "path": "209"
    },
    "537": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3373,
        3403
      ],
      "op": "POP",
      "path": "209"
    },
    "538": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3373,
        3403
      ],
      "op": "SWAP4",
      "path": "209"
    },
    "539": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3373,
        3403
      ],
      "op": "POP",
      "path": "209"
    },
    "540": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3373,
        3403
      ],
      "op": "POP",
      "path": "209"
    },
    "541": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3373,
        3403
      ],
      "op": "POP",
      "path": "209"
    },
    "542": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3373,
        3403
      ],
      "op": "PUSH2",
      "path": "209",
      "value": "0x22A"
    },
    "545": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3373,
        3403
      ],
      "op": "JUMP",
      "path": "209"
    },
    "546": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3017,
        3501
      ],
      "op": "JUMPDEST",
      "path": "209"
    },
    "547": {
      "op": "POP"
    },
    "548": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3450,
        3451
      ],
      "op": "PUSH1",
      "path": "209",
      "statement": 5,
      "value": "0x0"
    },
    "550": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3450,
        3451
      ],
      "op": "SWAP1",
      "path": "209"
    },
    "551": {
      "op": "POP"
    },
    "552": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3454,
        3489
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x2"
    },
    "554": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3017,
        3501
      ],
      "op": "JUMPDEST",
      "path": "209"
    },
    "555": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2228,
        3507
      ],
      "op": "SWAP3",
      "path": "209"
    },
    "556": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2228,
        3507
      ],
      "op": "POP",
      "path": "209"
    },
    "557": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2228,
        3507
      ],
      "op": "SWAP3",
      "path": "209"
    },
    "558": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2228,
        3507
      ],
      "op": "SWAP1",
      "path": "209"
    },
    "559": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2228,
        3507
      ],
      "op": "POP",
      "path": "209"
    },
    "560": {
      "fn": "ECDSA.tryRecover",
      "jump": "o",
      "offset": [
        2228,
        3507
      ],
      "op": "JUMP",
      "path": "209"
    },
    "561": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5701,
        7301
      ],
      "op": "JUMPDEST",
      "path": "209"
    },
    "562": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5827,
        5834
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x0"
    },
    "564": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5827,
        5834
      ],
      "op": "DUP1",
      "path": "209"
    },
    "565": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6748,
        6814
      ],
      "op": "PUSH32",
      "path": "209",
      "value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
    },
    "598": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6735,
        6814
      ],
      "op": "DUP4",
      "path": "209"
    },
    "599": {
      "branch": 13,
      "fn": "ECDSA.tryRecover",
      "offset": [
        6735,
        6814
      ],
      "op": "GT",
      "path": "209"
    },
    "600": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6731,
        6892
      ],
      "op": "ISZERO",
      "path": "209"
    },
    "601": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6731,
        6892
      ],
      "op": "PUSH2",
      "path": "209",
      "value": "0x268"
    },
    "604": {
      "branch": 13,
      "fn": "ECDSA.tryRecover",
      "offset": [
        6731,
        6892
      ],
      "op": "JUMPI",
      "path": "209"
    },
    "605": {
      "op": "POP"
    },
    "606": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6846,
        6847
      ],
      "op": "PUSH1",
      "path": "209",
      "statement": 6,
      "value": "0x0"
    },
    "608": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6846,
        6847
      ],
      "op": "SWAP1",
      "path": "209"
    },
    "609": {
      "op": "POP"
    },
    "610": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6850,
        6880
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x3"
    },
    "612": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6830,
        6881
      ],
      "op": "PUSH2",
      "path": "209",
      "value": "0x315"
    },
    "615": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6830,
        6881
      ],
      "op": "JUMP",
      "path": "209"
    },
    "616": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6731,
        6892
      ],
      "op": "JUMPDEST",
      "path": "209"
    },
    "617": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6905,
        6906
      ],
      "op": "DUP5",
      "path": "209"
    },
    "618": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6905,
        6912
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0xFF"
    },
    "620": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6905,
        6912
      ],
      "op": "AND",
      "path": "209"
    },
    "621": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6910,
        6912
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x1B"
    },
    "623": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6905,
        6912
      ],
      "op": "EQ",
      "path": "209"
    },
    "624": {
      "branch": 14,
      "fn": "ECDSA.tryRecover",
      "offset": [
        6905,
        6912
      ],
      "op": "ISZERO",
      "path": "209"
    },
    "625": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6905,
        6923
      ],
      "op": "DUP1",
      "path": "209"
    },
    "626": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6905,
        6923
      ],
      "op": "ISZERO",
      "path": "209"
    },
    "627": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6905,
        6923
      ],
      "op": "PUSH2",
      "path": "209",
      "value": "0x280"
    },
    "630": {
      "branch": 14,
      "fn": "ECDSA.tryRecover",
      "offset": [
        6905,
        6923
      ],
      "op": "JUMPI",
      "path": "209"
    },
    "631": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6905,
        6923
      ],
      "op": "POP",
      "path": "209"
    },
    "632": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6916,
        6917
      ],
      "op": "DUP5",
      "path": "209"
    },
    "633": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6916,
        6923
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0xFF"
    },
    "635": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6916,
        6923
      ],
      "op": "AND",
      "path": "209"
    },
    "636": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6921,
        6923
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x1C"
    },
    "638": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6916,
        6923
      ],
      "op": "EQ",
      "path": "209"
    },
    "639": {
      "branch": 15,
      "fn": "ECDSA.tryRecover",
      "offset": [
        6916,
        6923
      ],
      "op": "ISZERO",
      "path": "209"
    },
    "640": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6905,
        6923
      ],
      "op": "JUMPDEST",
      "path": "209"
    },
    "641": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6901,
        7001
      ],
      "op": "ISZERO",
      "path": "209"
    },
    "642": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6901,
        7001
      ],
      "op": "PUSH2",
      "path": "209",
      "value": "0x291"
    },
    "645": {
      "branch": 15,
      "fn": "ECDSA.tryRecover",
      "offset": [
        6901,
        7001
      ],
      "op": "JUMPI",
      "path": "209"
    },
    "646": {
      "op": "POP"
    },
    "647": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6955,
        6956
      ],
      "op": "PUSH1",
      "path": "209",
      "statement": 7,
      "value": "0x0"
    },
    "649": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6955,
        6956
      ],
      "op": "SWAP1",
      "path": "209"
    },
    "650": {
      "op": "POP"
    },
    "651": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6959,
        6989
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x4"
    },
    "653": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6939,
        6990
      ],
      "op": "PUSH2",
      "path": "209",
      "value": "0x315"
    },
    "656": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6939,
        6990
      ],
      "op": "JUMP",
      "path": "209"
    },
    "657": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6901,
        7001
      ],
      "op": "JUMPDEST",
      "path": "209"
    },
    "658": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x40"
    },
    "660": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "DUP1",
      "path": "209"
    },
    "661": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "MLOAD",
      "path": "209"
    },
    "662": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7095,
        7109
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x0"
    },
    "664": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "DUP1",
      "path": "209"
    },
    "665": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "DUP3",
      "path": "209"
    },
    "666": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "MSTORE",
      "path": "209"
    },
    "667": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x20"
    },
    "669": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "DUP3",
      "path": "209"
    },
    "670": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "ADD",
      "path": "209"
    },
    "671": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "DUP1",
      "path": "209"
    },
    "672": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "DUP5",
      "path": "209"
    },
    "673": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "MSTORE",
      "path": "209"
    },
    "674": {
      "op": "DUP10"
    },
    "675": {
      "op": "SWAP1"
    },
    "676": {
      "op": "MSTORE"
    },
    "677": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "679": {
      "op": "DUP9"
    },
    "680": {
      "op": "AND"
    },
    "681": {
      "op": "SWAP3"
    },
    "682": {
      "op": "DUP3"
    },
    "683": {
      "op": "ADD"
    },
    "684": {
      "op": "SWAP3"
    },
    "685": {
      "op": "SWAP1"
    },
    "686": {
      "op": "SWAP3"
    },
    "687": {
      "op": "MSTORE"
    },
    "688": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "690": {
      "op": "DUP2"
    },
    "691": {
      "op": "ADD"
    },
    "692": {
      "op": "DUP7"
    },
    "693": {
      "op": "SWAP1"
    },
    "694": {
      "op": "MSTORE"
    },
    "695": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "697": {
      "op": "DUP2"
    },
    "698": {
      "op": "ADD"
    },
    "699": {
      "op": "DUP6"
    },
    "700": {
      "op": "SWAP1"
    },
    "701": {
      "op": "MSTORE"
    },
    "702": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x1"
    },
    "704": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "SWAP1",
      "path": "209"
    },
    "705": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "707": {
      "op": "ADD"
    },
    "708": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x20"
    },
    "710": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x40"
    },
    "712": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "MLOAD",
      "path": "209"
    },
    "713": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x20"
    },
    "715": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "DUP2",
      "path": "209"
    },
    "716": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "SUB",
      "path": "209"
    },
    "717": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "SWAP1",
      "path": "209"
    },
    "718": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "DUP1",
      "path": "209"
    },
    "719": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "DUP5",
      "path": "209"
    },
    "720": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "SUB",
      "path": "209"
    },
    "721": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "SWAP1",
      "path": "209"
    },
    "722": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "DUP6",
      "path": "209"
    },
    "723": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "GAS",
      "path": "209"
    },
    "724": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "STATICCALL",
      "path": "209"
    },
    "725": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "ISZERO",
      "path": "209"
    },
    "726": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "DUP1",
      "path": "209"
    },
    "727": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "ISZERO",
      "path": "209"
    },
    "728": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "PUSH2",
      "path": "209",
      "value": "0x2E5"
    },
    "731": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "JUMPI",
      "path": "209"
    },
    "732": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "RETURNDATASIZE",
      "path": "209"
    },
    "733": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x0"
    },
    "735": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "DUP1",
      "path": "209"
    },
    "736": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "RETURNDATACOPY",
      "path": "209"
    },
    "737": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "RETURNDATASIZE",
      "path": "209"
    },
    "738": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x0"
    },
    "740": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "REVERT",
      "path": "209"
    },
    "741": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "JUMPDEST",
      "path": "209"
    },
    "742": {
      "op": "POP"
    },
    "743": {
      "op": "POP"
    },
    "744": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x40"
    },
    "746": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "MLOAD",
      "path": "209"
    },
    "747": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "749": {
      "op": "NOT"
    },
    "750": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "ADD",
      "path": "209"
    },
    "751": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "MLOAD",
      "path": "209"
    },
    "752": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "SWAP2",
      "path": "209"
    },
    "753": {
      "op": "POP"
    },
    "754": {
      "op": "POP"
    },
    "755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "759": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "761": {
      "op": "SHL"
    },
    "762": {
      "op": "SUB"
    },
    "763": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7150,
        7170
      ],
      "op": "DUP2",
      "path": "209"
    },
    "764": {
      "branch": 16,
      "fn": "ECDSA.tryRecover",
      "offset": [
        7150,
        7170
      ],
      "op": "AND",
      "path": "209"
    },
    "765": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7146,
        7247
      ],
      "op": "PUSH2",
      "path": "209",
      "value": "0x30E"
    },
    "768": {
      "branch": 16,
      "fn": "ECDSA.tryRecover",
      "offset": [
        7146,
        7247
      ],
      "op": "JUMPI",
      "path": "209"
    },
    "769": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7202,
        7203
      ],
      "op": "PUSH1",
      "path": "209",
      "statement": 8,
      "value": "0x0"
    },
    "771": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7206,
        7235
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x1"
    },
    "773": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7186,
        7236
      ],
      "op": "SWAP3",
      "path": "209"
    },
    "774": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7186,
        7236
      ],
      "op": "POP",
      "path": "209"
    },
    "775": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7186,
        7236
      ],
      "op": "SWAP3",
      "path": "209"
    },
    "776": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7186,
        7236
      ],
      "op": "POP",
      "path": "209"
    },
    "777": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7186,
        7236
      ],
      "op": "POP",
      "path": "209"
    },
    "778": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7186,
        7236
      ],
      "op": "PUSH2",
      "path": "209",
      "value": "0x315"
    },
    "781": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7186,
        7236
      ],
      "op": "JUMP",
      "path": "209"
    },
    "782": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7146,
        7247
      ],
      "op": "JUMPDEST",
      "path": "209"
    },
    "783": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7265,
        7271
      ],
      "op": "SWAP2",
      "path": "209",
      "statement": 9
    },
    "784": {
      "op": "POP"
    },
    "785": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7273,
        7293
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x0"
    },
    "787": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7273,
        7293
      ],
      "op": "SWAP1",
      "path": "209"
    },
    "788": {
      "op": "POP"
    },
    "789": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5701,
        7301
      ],
      "op": "JUMPDEST",
      "path": "209"
    },
    "790": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5701,
        7301
      ],
      "op": "SWAP5",
      "path": "209"
    },
    "791": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5701,
        7301
      ],
      "op": "POP",
      "path": "209"
    },
    "792": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5701,
        7301
      ],
      "op": "SWAP5",
      "path": "209"
    },
    "793": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5701,
        7301
      ],
      "op": "SWAP3",
      "path": "209"
    },
    "794": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5701,
        7301
      ],
      "op": "POP",
      "path": "209"
    },
    "795": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5701,
        7301
      ],
      "op": "POP",
      "path": "209"
    },
    "796": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5701,
        7301
      ],
      "op": "POP",
      "path": "209"
    },
    "797": {
      "fn": "ECDSA.tryRecover",
      "jump": "o",
      "offset": [
        5701,
        7301
      ],
      "op": "JUMP",
      "path": "209"
    },
    "798": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4774,
        5110
      ],
      "op": "JUMPDEST",
      "path": "209"
    },
    "799": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4884,
        4891
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x0"
    },
    "801": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4884,
        4891
      ],
      "op": "DUP1",
      "path": "209"
    },
    "802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "806": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "808": {
      "op": "SHL"
    },
    "809": {
      "op": "SUB"
    },
    "810": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4929,
        5009
      ],
      "op": "DUP4",
      "path": "209"
    },
    "811": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4929,
        5009
      ],
      "op": "AND",
      "path": "209"
    },
    "812": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4884,
        4891
      ],
      "op": "DUP2",
      "path": "209"
    },
    "813": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5035,
        5060
      ],
      "op": "PUSH2",
      "path": "209",
      "value": "0x33B"
    },
    "816": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5051,
        5054
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0xFF"
    },
    "818": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5036,
        5054
      ],
      "op": "DUP7",
      "path": "209"
    },
    "819": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5036,
        5054
      ],
      "op": "SWAP1",
      "path": "209"
    },
    "820": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5036,
        5054
      ],
      "op": "SHR",
      "path": "209"
    },
    "821": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5058,
        5060
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x1B"
    },
    "823": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5035,
        5060
      ],
      "op": "PUSH2",
      "path": "209",
      "value": "0x500"
    },
    "826": {
      "fn": "ECDSA.tryRecover",
      "jump": "i",
      "offset": [
        5035,
        5060
      ],
      "op": "JUMP",
      "path": "209"
    },
    "827": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5035,
        5060
      ],
      "op": "JUMPDEST",
      "path": "209"
    },
    "828": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5019,
        5061
      ],
      "op": "SWAP1",
      "path": "209"
    },
    "829": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5019,
        5061
      ],
      "op": "POP",
      "path": "209"
    },
    "830": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5078,
        5103
      ],
      "op": "PUSH2",
      "path": "209",
      "statement": 10,
      "value": "0x349"
    },
    "833": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5089,
        5093
      ],
      "op": "DUP8",
      "path": "209"
    },
    "834": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5095,
        5096
      ],
      "op": "DUP3",
      "path": "209"
    },
    "835": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5098,
        5099
      ],
      "op": "DUP9",
      "path": "209"
    },
    "836": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5101,
        5102
      ],
      "op": "DUP6",
      "path": "209"
    },
    "837": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5078,
        5088
      ],
      "op": "PUSH2",
      "path": "209",
      "value": "0x231"
    },
    "840": {
      "fn": "ECDSA.tryRecover",
      "jump": "i",
      "offset": [
        5078,
        5103
      ],
      "op": "JUMP",
      "path": "209"
    },
    "841": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5078,
        5103
      ],
      "op": "JUMPDEST",
      "path": "209"
    },
    "842": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5071,
        5103
      ],
      "op": "SWAP4",
      "path": "209"
    },
    "843": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5071,
        5103
      ],
      "op": "POP",
      "path": "209"
    },
    "844": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5071,
        5103
      ],
      "op": "SWAP4",
      "path": "209"
    },
    "845": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5071,
        5103
      ],
      "op": "POP",
      "path": "209"
    },
    "846": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5071,
        5103
      ],
      "op": "POP",
      "path": "209"
    },
    "847": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5071,
        5103
      ],
      "op": "POP",
      "path": "209"
    },
    "848": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4774,
        5110
      ],
      "op": "SWAP4",
      "path": "209"
    },
    "849": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4774,
        5110
      ],
      "op": "POP",
      "path": "209"
    },
    "850": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4774,
        5110
      ],
      "op": "SWAP4",
      "path": "209"
    },
    "851": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4774,
        5110
      ],
      "op": "SWAP2",
      "path": "209"
    },
    "852": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4774,
        5110
      ],
      "op": "POP",
      "path": "209"
    },
    "853": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4774,
        5110
      ],
      "op": "POP",
      "path": "209"
    },
    "854": {
      "fn": "ECDSA.tryRecover",
      "jump": "o",
      "offset": [
        4774,
        5110
      ],
      "op": "JUMP",
      "path": "209"
    },
    "855": {
      "op": "JUMPDEST"
    },
    "856": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "861": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "863": {
      "op": "SHL"
    },
    "864": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "866": {
      "op": "MSTORE"
    },
    "867": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "869": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "871": {
      "op": "MSTORE"
    },
    "872": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "874": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "876": {
      "op": "REVERT"
    },
    "877": {
      "op": "JUMPDEST"
    },
    "878": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "880": {
      "op": "DUP1"
    },
    "881": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "883": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "885": {
      "op": "DUP5"
    },
    "886": {
      "op": "DUP7"
    },
    "887": {
      "op": "SUB"
    },
    "888": {
      "op": "SLT"
    },
    "889": {
      "op": "ISZERO"
    },
    "890": {
      "op": "PUSH2",
      "value": "0x382"
    },
    "893": {
      "op": "JUMPI"
    },
    "894": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "896": {
      "op": "DUP1"
    },
    "897": {
      "op": "REVERT"
    },
    "898": {
      "op": "JUMPDEST"
    },
    "899": {
      "op": "DUP4"
    },
    "900": {
      "op": "CALLDATALOAD"
    },
    "901": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "903": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "905": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "907": {
      "op": "SHL"
    },
    "908": {
      "op": "SUB"
    },
    "909": {
      "op": "DUP2"
    },
    "910": {
      "op": "AND"
    },
    "911": {
      "op": "DUP2"
    },
    "912": {
      "op": "EQ"
    },
    "913": {
      "op": "PUSH2",
      "value": "0x399"
    },
    "916": {
      "op": "JUMPI"
    },
    "917": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "919": {
      "op": "DUP1"
    },
    "920": {
      "op": "REVERT"
    },
    "921": {
      "op": "JUMPDEST"
    },
    "922": {
      "op": "SWAP3"
    },
    "923": {
      "op": "POP"
    },
    "924": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "926": {
      "op": "DUP5"
    },
    "927": {
      "op": "ADD"
    },
    "928": {
      "op": "CALLDATALOAD"
    },
    "929": {
      "op": "SWAP2"
    },
    "930": {
      "op": "POP"
    },
    "931": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "933": {
      "op": "DUP5"
    },
    "934": {
      "op": "ADD"
    },
    "935": {
      "op": "CALLDATALOAD"
    },
    "936": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "945": {
      "op": "DUP1"
    },
    "946": {
      "op": "DUP3"
    },
    "947": {
      "op": "GT"
    },
    "948": {
      "op": "ISZERO"
    },
    "949": {
      "op": "PUSH2",
      "value": "0x3BD"
    },
    "952": {
      "op": "JUMPI"
    },
    "953": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "955": {
      "op": "DUP1"
    },
    "956": {
      "op": "REVERT"
    },
    "957": {
      "op": "JUMPDEST"
    },
    "958": {
      "op": "DUP2"
    },
    "959": {
      "op": "DUP7"
    },
    "960": {
      "op": "ADD"
    },
    "961": {
      "op": "SWAP2"
    },
    "962": {
      "op": "POP"
    },
    "963": {
      "op": "DUP7"
    },
    "964": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "966": {
      "op": "DUP4"
    },
    "967": {
      "op": "ADD"
    },
    "968": {
      "op": "SLT"
    },
    "969": {
      "op": "PUSH2",
      "value": "0x3D1"
    },
    "972": {
      "op": "JUMPI"
    },
    "973": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "975": {
      "op": "DUP1"
    },
    "976": {
      "op": "REVERT"
    },
    "977": {
      "op": "JUMPDEST"
    },
    "978": {
      "op": "DUP2"
    },
    "979": {
      "op": "CALLDATALOAD"
    },
    "980": {
      "op": "DUP2"
    },
    "981": {
      "op": "DUP2"
    },
    "982": {
      "op": "GT"
    },
    "983": {
      "op": "ISZERO"
    },
    "984": {
      "op": "PUSH2",
      "value": "0x3E3"
    },
    "987": {
      "op": "JUMPI"
    },
    "988": {
      "op": "PUSH2",
      "value": "0x3E3"
    },
    "991": {
      "op": "PUSH2",
      "value": "0x357"
    },
    "994": {
      "jump": "i",
      "op": "JUMP"
    },
    "995": {
      "op": "JUMPDEST"
    },
    "996": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "998": {
      "op": "MLOAD"
    },
    "999": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1001": {
      "op": "DUP3"
    },
    "1002": {
      "op": "ADD"
    },
    "1003": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1005": {
      "op": "NOT"
    },
    "1006": {
      "op": "SWAP1"
    },
    "1007": {
      "op": "DUP2"
    },
    "1008": {
      "op": "AND"
    },
    "1009": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "1011": {
      "op": "ADD"
    },
    "1012": {
      "op": "AND"
    },
    "1013": {
      "op": "DUP2"
    },
    "1014": {
      "op": "ADD"
    },
    "1015": {
      "op": "SWAP1"
    },
    "1016": {
      "op": "DUP4"
    },
    "1017": {
      "op": "DUP3"
    },
    "1018": {
      "op": "GT"
    },
    "1019": {
      "op": "DUP2"
    },
    "1020": {
      "op": "DUP4"
    },
    "1021": {
      "op": "LT"
    },
    "1022": {
      "op": "OR"
    },
    "1023": {
      "op": "ISZERO"
    },
    "1024": {
      "op": "PUSH2",
      "value": "0x40B"
    },
    "1027": {
      "op": "JUMPI"
    },
    "1028": {
      "op": "PUSH2",
      "value": "0x40B"
    },
    "1031": {
      "op": "PUSH2",
      "value": "0x357"
    },
    "1034": {
      "jump": "i",
      "op": "JUMP"
    },
    "1035": {
      "op": "JUMPDEST"
    },
    "1036": {
      "op": "DUP2"
    },
    "1037": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1039": {
      "op": "MSTORE"
    },
    "1040": {
      "op": "DUP3"
    },
    "1041": {
      "op": "DUP2"
    },
    "1042": {
      "op": "MSTORE"
    },
    "1043": {
      "op": "DUP10"
    },
    "1044": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1046": {
      "op": "DUP5"
    },
    "1047": {
      "op": "DUP8"
    },
    "1048": {
      "op": "ADD"
    },
    "1049": {
      "op": "ADD"
    },
    "1050": {
      "op": "GT"
    },
    "1051": {
      "op": "ISZERO"
    },
    "1052": {
      "op": "PUSH2",
      "value": "0x424"
    },
    "1055": {
      "op": "JUMPI"
    },
    "1056": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1058": {
      "op": "DUP1"
    },
    "1059": {
      "op": "REVERT"
    },
    "1060": {
      "op": "JUMPDEST"
    },
    "1061": {
      "op": "DUP3"
    },
    "1062": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1064": {
      "op": "DUP7"
    },
    "1065": {
      "op": "ADD"
    },
    "1066": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1068": {
      "op": "DUP4"
    },
    "1069": {
      "op": "ADD"
    },
    "1070": {
      "op": "CALLDATACOPY"
    },
    "1071": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1073": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1075": {
      "op": "DUP5"
    },
    "1076": {
      "op": "DUP4"
    },
    "1077": {
      "op": "ADD"
    },
    "1078": {
      "op": "ADD"
    },
    "1079": {
      "op": "MSTORE"
    },
    "1080": {
      "op": "DUP1"
    },
    "1081": {
      "op": "SWAP6"
    },
    "1082": {
      "op": "POP"
    },
    "1083": {
      "op": "POP"
    },
    "1084": {
      "op": "POP"
    },
    "1085": {
      "op": "POP"
    },
    "1086": {
      "op": "POP"
    },
    "1087": {
      "op": "POP"
    },
    "1088": {
      "op": "SWAP3"
    },
    "1089": {
      "op": "POP"
    },
    "1090": {
      "op": "SWAP3"
    },
    "1091": {
      "op": "POP"
    },
    "1092": {
      "op": "SWAP3"
    },
    "1093": {
      "jump": "o",
      "op": "JUMP"
    },
    "1094": {
      "op": "JUMPDEST"
    },
    "1095": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1100": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1102": {
      "op": "SHL"
    },
    "1103": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1105": {
      "op": "MSTORE"
    },
    "1106": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "1108": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1110": {
      "op": "MSTORE"
    },
    "1111": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1113": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1115": {
      "op": "REVERT"
    },
    "1116": {
      "op": "JUMPDEST"
    },
    "1117": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1119": {
      "op": "JUMPDEST"
    },
    "1120": {
      "op": "DUP4"
    },
    "1121": {
      "op": "DUP2"
    },
    "1122": {
      "op": "LT"
    },
    "1123": {
      "op": "ISZERO"
    },
    "1124": {
      "op": "PUSH2",
      "value": "0x477"
    },
    "1127": {
      "op": "JUMPI"
    },
    "1128": {
      "op": "DUP2"
    },
    "1129": {
      "op": "DUP2"
    },
    "1130": {
      "op": "ADD"
    },
    "1131": {
      "op": "MLOAD"
    },
    "1132": {
      "op": "DUP4"
    },
    "1133": {
      "op": "DUP3"
    },
    "1134": {
      "op": "ADD"
    },
    "1135": {
      "op": "MSTORE"
    },
    "1136": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1138": {
      "op": "ADD"
    },
    "1139": {
      "op": "PUSH2",
      "value": "0x45F"
    },
    "1142": {
      "op": "JUMP"
    },
    "1143": {
      "op": "JUMPDEST"
    },
    "1144": {
      "op": "POP"
    },
    "1145": {
      "op": "POP"
    },
    "1146": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1148": {
      "op": "SWAP2"
    },
    "1149": {
      "op": "ADD"
    },
    "1150": {
      "op": "MSTORE"
    },
    "1151": {
      "jump": "o",
      "op": "JUMP"
    },
    "1152": {
      "op": "JUMPDEST"
    },
    "1153": {
      "op": "DUP3"
    },
    "1154": {
      "op": "DUP2"
    },
    "1155": {
      "op": "MSTORE"
    },
    "1156": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1158": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1160": {
      "op": "DUP3"
    },
    "1161": {
      "op": "ADD"
    },
    "1162": {
      "op": "MSTORE"
    },
    "1163": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1165": {
      "op": "DUP3"
    },
    "1166": {
      "op": "MLOAD"
    },
    "1167": {
      "op": "DUP1"
    },
    "1168": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1170": {
      "op": "DUP5"
    },
    "1171": {
      "op": "ADD"
    },
    "1172": {
      "op": "MSTORE"
    },
    "1173": {
      "op": "PUSH2",
      "value": "0x4A5"
    },
    "1176": {
      "op": "DUP2"
    },
    "1177": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1179": {
      "op": "DUP6"
    },
    "1180": {
      "op": "ADD"
    },
    "1181": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1183": {
      "op": "DUP8"
    },
    "1184": {
      "op": "ADD"
    },
    "1185": {
      "op": "PUSH2",
      "value": "0x45C"
    },
    "1188": {
      "jump": "i",
      "op": "JUMP"
    },
    "1189": {
      "op": "JUMPDEST"
    },
    "1190": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1192": {
      "op": "ADD"
    },
    "1193": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1195": {
      "op": "NOT"
    },
    "1196": {
      "op": "AND"
    },
    "1197": {
      "op": "SWAP2"
    },
    "1198": {
      "op": "SWAP1"
    },
    "1199": {
      "op": "SWAP2"
    },
    "1200": {
      "op": "ADD"
    },
    "1201": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1203": {
      "op": "ADD"
    },
    "1204": {
      "op": "SWAP4"
    },
    "1205": {
      "op": "SWAP3"
    },
    "1206": {
      "op": "POP"
    },
    "1207": {
      "op": "POP"
    },
    "1208": {
      "op": "POP"
    },
    "1209": {
      "jump": "o",
      "op": "JUMP"
    },
    "1210": {
      "op": "JUMPDEST"
    },
    "1211": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1213": {
      "op": "DUP3"
    },
    "1214": {
      "op": "MLOAD"
    },
    "1215": {
      "op": "PUSH2",
      "value": "0x4CC"
    },
    "1218": {
      "op": "DUP2"
    },
    "1219": {
      "op": "DUP5"
    },
    "1220": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1222": {
      "op": "DUP8"
    },
    "1223": {
      "op": "ADD"
    },
    "1224": {
      "op": "PUSH2",
      "value": "0x45C"
    },
    "1227": {
      "jump": "i",
      "op": "JUMP"
    },
    "1228": {
      "op": "JUMPDEST"
    },
    "1229": {
      "op": "SWAP2"
    },
    "1230": {
      "op": "SWAP1"
    },
    "1231": {
      "op": "SWAP2"
    },
    "1232": {
      "op": "ADD"
    },
    "1233": {
      "op": "SWAP3"
    },
    "1234": {
      "op": "SWAP2"
    },
    "1235": {
      "op": "POP"
    },
    "1236": {
      "op": "POP"
    },
    "1237": {
      "jump": "o",
      "op": "JUMP"
    },
    "1238": {
      "op": "JUMPDEST"
    },
    "1239": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1241": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1243": {
      "op": "DUP3"
    },
    "1244": {
      "op": "DUP5"
    },
    "1245": {
      "op": "SUB"
    },
    "1246": {
      "op": "SLT"
    },
    "1247": {
      "op": "ISZERO"
    },
    "1248": {
      "op": "PUSH2",
      "value": "0x4E8"
    },
    "1251": {
      "op": "JUMPI"
    },
    "1252": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1254": {
      "op": "DUP1"
    },
    "1255": {
      "op": "REVERT"
    },
    "1256": {
      "op": "JUMPDEST"
    },
    "1257": {
      "op": "DUP2"
    },
    "1258": {
      "op": "MLOAD"
    },
    "1259": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1261": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1263": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1265": {
      "op": "SHL"
    },
    "1266": {
      "op": "SUB"
    },
    "1267": {
      "op": "NOT"
    },
    "1268": {
      "op": "DUP2"
    },
    "1269": {
      "op": "AND"
    },
    "1270": {
      "op": "DUP2"
    },
    "1271": {
      "op": "EQ"
    },
    "1272": {
      "op": "PUSH2",
      "value": "0x70"
    },
    "1275": {
      "op": "JUMPI"
    },
    "1276": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1278": {
      "op": "DUP1"
    },
    "1279": {
      "op": "REVERT"
    },
    "1280": {
      "op": "JUMPDEST"
    },
    "1281": {
      "op": "DUP1"
    },
    "1282": {
      "op": "DUP3"
    },
    "1283": {
      "op": "ADD"
    },
    "1284": {
      "op": "DUP1"
    },
    "1285": {
      "op": "DUP3"
    },
    "1286": {
      "op": "GT"
    },
    "1287": {
      "op": "ISZERO"
    },
    "1288": {
      "op": "PUSH2",
      "value": "0x521"
    },
    "1291": {
      "op": "JUMPI"
    },
    "1292": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1297": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1299": {
      "op": "SHL"
    },
    "1300": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1302": {
      "op": "MSTORE"
    },
    "1303": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1305": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1307": {
      "op": "MSTORE"
    },
    "1308": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1310": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1312": {
      "op": "REVERT"
    },
    "1313": {
      "op": "JUMPDEST"
    },
    "1314": {
      "op": "SWAP3"
    },
    "1315": {
      "op": "SWAP2"
    },
    "1316": {
      "op": "POP"
    },
    "1317": {
      "op": "POP"
    },
    "1318": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "9c65a2a647015c763080192c89b8da94a84e1af7",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../utils/cryptography/SignatureChecker.sol\";\n\ncontract SignatureCheckerMock {\n    using SignatureChecker for address;\n\n    function isValidSignatureNow(\n        address signer,\n        bytes32 hash,\n        bytes memory signature\n    ) public view returns (bool) {\n        return signer.isValidSignatureNow(hash, signature);\n    }\n}\n",
  "sourceMap": "112:286:125:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/openzeppelin-solidity/contracts/mocks/SignatureCheckerMock.sol",
  "type": "contract"
}