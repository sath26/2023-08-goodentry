{
  "abi": [
    {
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "50": "contracts/openzeppelin-solidity/contracts/mocks/BadBeacon.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin-solidity/contracts/mocks/BadBeacon.sol",
    "exportedSymbols": {
      "BadBeaconNoImpl": [
        11195
      ],
      "BadBeaconNotContract": [
        11207
      ]
    },
    "id": 11208,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11194,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:50"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "BadBeaconNoImpl",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 11195,
        "linearizedBaseContracts": [
          11195
        ],
        "name": "BadBeaconNoImpl",
        "nameLocation": "67:15:50",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 11208,
        "src": "58:27:50",
        "usedErrors": [],
        "usedEvents": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "BadBeaconNotContract",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 11207,
        "linearizedBaseContracts": [
          11207
        ],
        "name": "BadBeaconNotContract",
        "nameLocation": "96:20:50",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 11205,
              "nodeType": "Block",
              "src": "181:36:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "307831",
                        "id": 11202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "206:3:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "0x1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 11201,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "198:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 11200,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "198:7:50",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 11203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "198:12:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 11199,
                  "id": 11204,
                  "nodeType": "Return",
                  "src": "191:19:50"
                }
              ]
            },
            "functionSelector": "5c60da1b",
            "id": 11206,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "implementation",
            "nameLocation": "132:14:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11196,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "146:2:50"
            },
            "returnParameters": {
              "id": 11199,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11198,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11206,
                  "src": "172:7:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11197,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "172:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "171:9:50"
            },
            "scope": 11207,
            "src": "123:94:50",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 11208,
        "src": "87:132:50",
        "usedErrors": [],
        "usedEvents": []
      }
    ],
    "src": "33:187:50"
  },
  "bytecode": "6080604052348015600f57600080fd5b50607780601d6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80635c60da1b14602d575b600080fd5b604080516001815290519081900360200190f3fea26469706673582212201bf732b3ba9d159a1faf120e76540a4b09bf354d829a3688eb5bb96f57882e5d64736f6c63430008150033",
  "bytecodeSha1": "9526d086dcf16c271bd202a6215956325ae009ba",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.21+commit.d9974bed"
  },
  "contractName": "BadBeaconNotContract",
  "coverageMap": {
    "branches": {
      "50": {}
    },
    "statements": {
      "50": {
        "BadBeaconNotContract.implementation": {
          "0": [
            191,
            210
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "6080604052348015600f57600080fd5b506004361060285760003560e01c80635c60da1b14602d575b600080fd5b604080516001815290519081900360200190f3fea26469706673582212201bf732b3ba9d159a1faf120e76540a4b09bf354d829a3688eb5bb96f57882e5d64736f6c63430008150033",
  "deployedSourceMap": "87:132:50:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;123:94;;;;206:3;160:51:249;;123:94:50;;;;;;148:2:249;123:94:50;;",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    87,
    219
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C60DA1B EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP2 MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL 0xF7 ORIGIN 0xB3 0xBA SWAP14 ISZERO SWAP11 0x1F 0xAF SLT 0xE PUSH23 0x540A4B09BF354D829A3688EB5BB96F57882E5D64736F6C PUSH4 0x43000815 STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        87,
        219
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        87,
        219
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        87,
        219
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5": {
      "fn": null,
      "offset": [
        87,
        219
      ],
      "op": "CALLVALUE",
      "path": "50"
    },
    "6": {
      "fn": null,
      "offset": [
        87,
        219
      ],
      "op": "DUP1",
      "path": "50"
    },
    "7": {
      "fn": null,
      "offset": [
        87,
        219
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "8": {
      "fn": null,
      "offset": [
        87,
        219
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xF"
    },
    "10": {
      "fn": null,
      "offset": [
        87,
        219
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "11": {
      "fn": null,
      "offset": [
        87,
        219
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "13": {
      "fn": null,
      "offset": [
        87,
        219
      ],
      "op": "DUP1",
      "path": "50"
    },
    "14": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        87,
        219
      ],
      "op": "REVERT",
      "path": "50"
    },
    "15": {
      "fn": null,
      "offset": [
        87,
        219
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "16": {
      "fn": null,
      "offset": [
        87,
        219
      ],
      "op": "POP",
      "path": "50"
    },
    "17": {
      "fn": null,
      "offset": [
        87,
        219
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "19": {
      "fn": null,
      "offset": [
        87,
        219
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "20": {
      "fn": null,
      "offset": [
        87,
        219
      ],
      "op": "LT",
      "path": "50"
    },
    "21": {
      "fn": null,
      "offset": [
        87,
        219
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x28"
    },
    "23": {
      "fn": null,
      "offset": [
        87,
        219
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "24": {
      "fn": null,
      "offset": [
        87,
        219
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "26": {
      "fn": null,
      "offset": [
        87,
        219
      ],
      "op": "CALLDATALOAD",
      "path": "50"
    },
    "27": {
      "fn": null,
      "offset": [
        87,
        219
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xE0"
    },
    "29": {
      "fn": null,
      "offset": [
        87,
        219
      ],
      "op": "SHR",
      "path": "50"
    },
    "30": {
      "fn": null,
      "offset": [
        87,
        219
      ],
      "op": "DUP1",
      "path": "50"
    },
    "31": {
      "fn": null,
      "offset": [
        87,
        219
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x5C60DA1B"
    },
    "36": {
      "fn": null,
      "offset": [
        87,
        219
      ],
      "op": "EQ",
      "path": "50"
    },
    "37": {
      "fn": null,
      "offset": [
        87,
        219
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x2D"
    },
    "39": {
      "fn": null,
      "offset": [
        87,
        219
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "40": {
      "fn": null,
      "offset": [
        87,
        219
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "41": {
      "fn": null,
      "offset": [
        87,
        219
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "43": {
      "fn": null,
      "offset": [
        87,
        219
      ],
      "op": "DUP1",
      "path": "50"
    },
    "44": {
      "first_revert": true,
      "fn": null,
      "offset": [
        87,
        219
      ],
      "op": "REVERT",
      "path": "50"
    },
    "45": {
      "fn": "BadBeaconNotContract.implementation",
      "offset": [
        123,
        217
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "46": {
      "fn": "BadBeaconNotContract.implementation",
      "offset": [
        123,
        217
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "48": {
      "fn": "BadBeaconNotContract.implementation",
      "offset": [
        123,
        217
      ],
      "op": "DUP1",
      "path": "50"
    },
    "49": {
      "fn": "BadBeaconNotContract.implementation",
      "offset": [
        123,
        217
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "50": {
      "fn": "BadBeaconNotContract.implementation",
      "offset": [
        206,
        209
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 0,
      "value": "0x1"
    },
    "52": {
      "op": "DUP2"
    },
    "53": {
      "op": "MSTORE"
    },
    "54": {
      "fn": "BadBeaconNotContract.implementation",
      "offset": [
        123,
        217
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "55": {
      "fn": "BadBeaconNotContract.implementation",
      "offset": [
        123,
        217
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "56": {
      "fn": "BadBeaconNotContract.implementation",
      "offset": [
        123,
        217
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "57": {
      "fn": "BadBeaconNotContract.implementation",
      "offset": [
        123,
        217
      ],
      "op": "DUP2",
      "path": "50"
    },
    "58": {
      "fn": "BadBeaconNotContract.implementation",
      "offset": [
        123,
        217
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "59": {
      "fn": "BadBeaconNotContract.implementation",
      "offset": [
        123,
        217
      ],
      "op": "SUB",
      "path": "50"
    },
    "60": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "62": {
      "fn": "BadBeaconNotContract.implementation",
      "offset": [
        123,
        217
      ],
      "op": "ADD",
      "path": "50"
    },
    "63": {
      "fn": "BadBeaconNotContract.implementation",
      "offset": [
        123,
        217
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "64": {
      "fn": "BadBeaconNotContract.implementation",
      "offset": [
        123,
        217
      ],
      "op": "RETURN",
      "path": "50"
    }
  },
  "sha1": "0e4e557df7e18eda99369ccd6569644533c8b887",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\ncontract BadBeaconNoImpl {}\n\ncontract BadBeaconNotContract {\n    function implementation() external pure returns (address) {\n        return address(0x1);\n    }\n}\n",
  "sourceMap": "87:132:50:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/openzeppelin-solidity/contracts/mocks/BadBeacon.sol",
  "type": "contract"
}