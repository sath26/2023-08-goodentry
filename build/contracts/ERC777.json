{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        },
        {
          "internalType": "address[]",
          "name": "defaultOperators_",
          "type": "address[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "AuthorizedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "Burned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "Minted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "RevokedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "Sent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "authorizeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultOperators",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "granularity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "isOperatorFor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "operatorBurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "operatorSend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "revokeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "send",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "44": "contracts/openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
    "63": "contracts/openzeppelin-solidity/contracts/token/ERC777/ERC777.sol",
    "64": "contracts/openzeppelin-solidity/contracts/token/ERC777/IERC777.sol",
    "65": "contracts/openzeppelin-solidity/contracts/token/ERC777/IERC777Recipient.sol",
    "66": "contracts/openzeppelin-solidity/contracts/token/ERC777/IERC777Sender.sol",
    "68": "contracts/openzeppelin-solidity/contracts/utils/Address.sol",
    "70": "contracts/openzeppelin-solidity/contracts/utils/Context.sol",
    "79": "contracts/openzeppelin-solidity/contracts/utils/introspection/IERC1820Registry.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin-solidity/contracts/token/ERC777/ERC777.sol",
    "exportedSymbols": {
      "Address": [
        12471
      ],
      "Context": [
        12493
      ],
      "ERC777": [
        8702
      ],
      "IERC1820Registry": [
        13993
      ],
      "IERC20": [
        5407
      ],
      "IERC777": [
        13863
      ],
      "IERC777Recipient": [
        13883
      ],
      "IERC777Sender": [
        13903
      ]
    },
    "id": 8703,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7567,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "92:23:63"
      },
      {
        "absolutePath": "contracts/openzeppelin-solidity/contracts/token/ERC777/IERC777.sol",
        "file": "./IERC777.sol",
        "id": 7568,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8703,
        "sourceUnit": 13864,
        "src": "117:23:63",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-solidity/contracts/token/ERC777/IERC777Recipient.sol",
        "file": "./IERC777Recipient.sol",
        "id": 7569,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8703,
        "sourceUnit": 13884,
        "src": "141:32:63",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-solidity/contracts/token/ERC777/IERC777Sender.sol",
        "file": "./IERC777Sender.sol",
        "id": 7570,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8703,
        "sourceUnit": 13904,
        "src": "174:29:63",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "../ERC20/IERC20.sol",
        "id": 7571,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8703,
        "sourceUnit": 5408,
        "src": "204:29:63",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-solidity/contracts/utils/Address.sol",
        "file": "../../utils/Address.sol",
        "id": 7572,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8703,
        "sourceUnit": 12472,
        "src": "234:33:63",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-solidity/contracts/utils/Context.sol",
        "file": "../../utils/Context.sol",
        "id": 7573,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8703,
        "sourceUnit": 12494,
        "src": "268:33:63",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-solidity/contracts/utils/introspection/IERC1820Registry.sol",
        "file": "../../utils/introspection/IERC1820Registry.sol",
        "id": 7574,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8703,
        "sourceUnit": 13994,
        "src": "302:56:63",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7576,
              "name": "Context",
              "nameLocations": [
                "1092:7:63"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12493,
              "src": "1092:7:63"
            },
            "id": 7577,
            "nodeType": "InheritanceSpecifier",
            "src": "1092:7:63"
          },
          {
            "baseName": {
              "id": 7578,
              "name": "IERC777",
              "nameLocations": [
                "1101:7:63"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13863,
              "src": "1101:7:63"
            },
            "id": 7579,
            "nodeType": "InheritanceSpecifier",
            "src": "1101:7:63"
          },
          {
            "baseName": {
              "id": 7580,
              "name": "IERC20",
              "nameLocations": [
                "1110:6:63"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5407,
              "src": "1110:6:63"
            },
            "id": 7581,
            "nodeType": "InheritanceSpecifier",
            "src": "1110:6:63"
          }
        ],
        "canonicalName": "ERC777",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 7575,
          "nodeType": "StructuredDocumentation",
          "src": "360:712:63",
          "text": " @dev Implementation of the {IERC777} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n Support for ERC20 is included in this contract, as specified by the EIP: both\n the ERC777 and ERC20 interfaces can be safely used when interacting with it.\n Both {IERC777-Sent} and {IERC20-Transfer} events are emitted on token\n movements.\n Additionally, the {IERC777-granularity} value is hard-coded to `1`, meaning that there\n are no special restrictions in the amount of tokens that created, moved, or\n destroyed. This makes integration with ERC20 applications seamless."
        },
        "fullyImplemented": true,
        "id": 8702,
        "linearizedBaseContracts": [
          8702,
          5407,
          13863,
          12493
        ],
        "name": "ERC777",
        "nameLocation": "1082:6:63",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 7584,
            "libraryName": {
              "id": 7582,
              "name": "Address",
              "nameLocations": [
                "1129:7:63"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12471,
              "src": "1129:7:63"
            },
            "nodeType": "UsingForDirective",
            "src": "1123:26:63",
            "typeName": {
              "id": 7583,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1141:7:63",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "constant": true,
            "id": 7590,
            "mutability": "constant",
            "name": "_ERC1820_REGISTRY",
            "nameLocation": "1190:17:63",
            "nodeType": "VariableDeclaration",
            "scope": 8702,
            "src": "1155:115:63",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC1820Registry_$13993",
              "typeString": "contract IERC1820Registry"
            },
            "typeName": {
              "id": 7586,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7585,
                "name": "IERC1820Registry",
                "nameLocations": [
                  "1155:16:63"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 13993,
                "src": "1155:16:63"
              },
              "referencedDeclaration": 13993,
              "src": "1155:16:63",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC1820Registry_$13993",
                "typeString": "contract IERC1820Registry"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307831383230613442373631384264453731446365386364633733614142364339353930356661443234",
                  "id": 7588,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1227:42:63",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 7587,
                "name": "IERC1820Registry",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 13993,
                "src": "1210:16:63",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IERC1820Registry_$13993_$",
                  "typeString": "type(contract IERC1820Registry)"
                }
              },
              "id": 7589,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1210:60:63",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC1820Registry_$13993",
                "typeString": "contract IERC1820Registry"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7594,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "1313:9:63",
            "nodeType": "VariableDeclaration",
            "scope": 8702,
            "src": "1277:45:63",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 7593,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 7591,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1285:7:63",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1277:27:63",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 7592,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1296:7:63",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 7596,
            "mutability": "mutable",
            "name": "_totalSupply",
            "nameLocation": "1345:12:63",
            "nodeType": "VariableDeclaration",
            "scope": 8702,
            "src": "1329:28:63",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7595,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1329:7:63",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 7598,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "1379:5:63",
            "nodeType": "VariableDeclaration",
            "scope": 8702,
            "src": "1364:20:63",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 7597,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1364:6:63",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 7600,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "1405:7:63",
            "nodeType": "VariableDeclaration",
            "scope": 8702,
            "src": "1390:22:63",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 7599,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1390:6:63",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 7605,
            "mutability": "constant",
            "name": "_TOKENS_SENDER_INTERFACE_HASH",
            "nameLocation": "1444:29:63",
            "nodeType": "VariableDeclaration",
            "scope": 8702,
            "src": "1419:88:63",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 7601,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1419:7:63",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "455243373737546f6b656e7353656e646572",
                  "id": 7603,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1486:20:63",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe895",
                    "typeString": "literal_string \"ERC777TokensSender\""
                  },
                  "value": "ERC777TokensSender"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe895",
                    "typeString": "literal_string \"ERC777TokensSender\""
                  }
                ],
                "id": 7602,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1476:9:63",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 7604,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1476:31:63",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 7610,
            "mutability": "constant",
            "name": "_TOKENS_RECIPIENT_INTERFACE_HASH",
            "nameLocation": "1538:32:63",
            "nodeType": "VariableDeclaration",
            "scope": 8702,
            "src": "1513:94:63",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 7606,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1513:7:63",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "455243373737546f6b656e73526563697069656e74",
                  "id": 7608,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1583:23:63",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_b281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b",
                    "typeString": "literal_string \"ERC777TokensRecipient\""
                  },
                  "value": "ERC777TokensRecipient"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_b281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b",
                    "typeString": "literal_string \"ERC777TokensRecipient\""
                  }
                ],
                "id": 7607,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1573:9:63",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 7609,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1573:34:63",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 7613,
            "mutability": "mutable",
            "name": "_defaultOperatorsArray",
            "nameLocation": "1724:22:63",
            "nodeType": "VariableDeclaration",
            "scope": 8702,
            "src": "1706:40:63",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 7611,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1706:7:63",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 7612,
              "nodeType": "ArrayTypeName",
              "src": "1706:9:63",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 7617,
            "mutability": "mutable",
            "name": "_defaultOperators",
            "nameLocation": "1873:17:63",
            "nodeType": "VariableDeclaration",
            "scope": 8702,
            "src": "1840:50:63",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 7616,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 7614,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1848:7:63",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1840:24:63",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 7615,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1859:4:63",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 7623,
            "mutability": "mutable",
            "name": "_operators",
            "nameLocation": "2033:10:63",
            "nodeType": "VariableDeclaration",
            "scope": 8702,
            "src": "1980:63:63",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 7622,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 7618,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1988:7:63",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1980:44:63",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 7621,
                "keyName": "",
                "keyNameLocation": "-1:-1:-1",
                "keyType": {
                  "id": 7619,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2007:7:63",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1999:24:63",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueName": "",
                "valueNameLocation": "-1:-1:-1",
                "valueType": {
                  "id": 7620,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2018:4:63",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 7629,
            "mutability": "mutable",
            "name": "_revokedDefaultOperators",
            "nameLocation": "2102:24:63",
            "nodeType": "VariableDeclaration",
            "scope": 8702,
            "src": "2049:77:63",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 7628,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 7624,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2057:7:63",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2049:44:63",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 7627,
                "keyName": "",
                "keyNameLocation": "-1:-1:-1",
                "keyType": {
                  "id": 7625,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2076:7:63",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "2068:24:63",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueName": "",
                "valueNameLocation": "-1:-1:-1",
                "valueType": {
                  "id": 7626,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2087:4:63",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 7635,
            "mutability": "mutable",
            "name": "_allowances",
            "nameLocation": "2213:11:63",
            "nodeType": "VariableDeclaration",
            "scope": 8702,
            "src": "2157:67:63",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 7634,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 7630,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2165:7:63",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2157:47:63",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 7633,
                "keyName": "",
                "keyNameLocation": "-1:-1:-1",
                "keyType": {
                  "id": 7631,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2184:7:63",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "2176:27:63",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueName": "",
                "valueNameLocation": "-1:-1:-1",
                "valueType": {
                  "id": 7632,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2195:7:63",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 7711,
              "nodeType": "Block",
              "src": "2423:490:63",
              "statements": [
                {
                  "expression": {
                    "id": 7648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7646,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7598,
                      "src": "2433:5:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7647,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7638,
                      "src": "2441:5:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2433:13:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 7649,
                  "nodeType": "ExpressionStatement",
                  "src": "2433:13:63"
                },
                {
                  "expression": {
                    "id": 7652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7650,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7600,
                      "src": "2456:7:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7651,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7640,
                      "src": "2466:7:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2456:17:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 7653,
                  "nodeType": "ExpressionStatement",
                  "src": "2456:17:63"
                },
                {
                  "expression": {
                    "id": 7656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7654,
                      "name": "_defaultOperatorsArray",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7613,
                      "src": "2484:22:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7655,
                      "name": "defaultOperators_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7643,
                      "src": "2509:17:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "2484:42:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 7657,
                  "nodeType": "ExpressionStatement",
                  "src": "2484:42:63"
                },
                {
                  "body": {
                    "id": 7677,
                    "nodeType": "Block",
                    "src": "2591:71:63",
                    "statements": [
                      {
                        "expression": {
                          "id": 7675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 7669,
                              "name": "_defaultOperators",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7617,
                              "src": "2605:17:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 7673,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 7670,
                                "name": "defaultOperators_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7643,
                                "src": "2623:17:63",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 7672,
                              "indexExpression": {
                                "id": 7671,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7659,
                                "src": "2641:1:63",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2623:20:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2605:39:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 7674,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2647:4:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2605:46:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 7676,
                        "nodeType": "ExpressionStatement",
                        "src": "2605:46:63"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7662,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7659,
                      "src": "2556:1:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 7663,
                        "name": "defaultOperators_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7643,
                        "src": "2560:17:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 7664,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2578:6:63",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2560:24:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2556:28:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7678,
                  "initializationExpression": {
                    "assignments": [
                      7659
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 7659,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2549:1:63",
                        "nodeType": "VariableDeclaration",
                        "scope": 7678,
                        "src": "2541:9:63",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 7658,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2541:7:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 7661,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 7660,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2553:1:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2541:13:63"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 7667,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2586:3:63",
                      "subExpression": {
                        "id": 7666,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7659,
                        "src": "2586:1:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7668,
                    "nodeType": "ExpressionStatement",
                    "src": "2586:3:63"
                  },
                  "nodeType": "ForStatement",
                  "src": "2536:126:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 7684,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2753:4:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC777_$8702",
                              "typeString": "contract ERC777"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC777_$8702",
                              "typeString": "contract ERC777"
                            }
                          ],
                          "id": 7683,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2745:7:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7682,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2745:7:63",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2745:13:63",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "455243373737546f6b656e",
                            "id": 7687,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2770:13:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_ac7fbab5f54a3ca8194167523c6753bfeb96a445279294b6125b68cce2177054",
                              "typeString": "literal_string \"ERC777Token\""
                            },
                            "value": "ERC777Token"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_ac7fbab5f54a3ca8194167523c6753bfeb96a445279294b6125b68cce2177054",
                              "typeString": "literal_string \"ERC777Token\""
                            }
                          ],
                          "id": 7686,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "2760:9:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 7688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2760:24:63",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 7691,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2794:4:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC777_$8702",
                              "typeString": "contract ERC777"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC777_$8702",
                              "typeString": "contract ERC777"
                            }
                          ],
                          "id": 7690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2786:7:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7689,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2786:7:63",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2786:13:63",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 7679,
                        "name": "_ERC1820_REGISTRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7590,
                        "src": "2703:17:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1820Registry_$13993",
                          "typeString": "contract IERC1820Registry"
                        }
                      },
                      "id": 7681,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2721:23:63",
                      "memberName": "setInterfaceImplementer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13932,
                      "src": "2703:41:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (address,bytes32,address) external"
                      }
                    },
                    "id": 7693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2703:97:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7694,
                  "nodeType": "ExpressionStatement",
                  "src": "2703:97:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 7700,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2860:4:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC777_$8702",
                              "typeString": "contract ERC777"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC777_$8702",
                              "typeString": "contract ERC777"
                            }
                          ],
                          "id": 7699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2852:7:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7698,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2852:7:63",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2852:13:63",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "4552433230546f6b656e",
                            "id": 7703,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2877:12:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_aea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a",
                              "typeString": "literal_string \"ERC20Token\""
                            },
                            "value": "ERC20Token"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_aea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a",
                              "typeString": "literal_string \"ERC20Token\""
                            }
                          ],
                          "id": 7702,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "2867:9:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 7704,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2867:23:63",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 7707,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2900:4:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC777_$8702",
                              "typeString": "contract ERC777"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC777_$8702",
                              "typeString": "contract ERC777"
                            }
                          ],
                          "id": 7706,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2892:7:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7705,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2892:7:63",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2892:13:63",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 7695,
                        "name": "_ERC1820_REGISTRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7590,
                        "src": "2810:17:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1820Registry_$13993",
                          "typeString": "contract IERC1820Registry"
                        }
                      },
                      "id": 7697,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2828:23:63",
                      "memberName": "setInterfaceImplementer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13932,
                      "src": "2810:41:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (address,bytes32,address) external"
                      }
                    },
                    "id": 7709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2810:96:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7710,
                  "nodeType": "ExpressionStatement",
                  "src": "2810:96:63"
                }
              ]
            },
            "documentation": {
              "id": 7636,
              "nodeType": "StructuredDocumentation",
              "src": "2231:65:63",
              "text": " @dev `defaultOperators` may be an empty array."
            },
            "id": 7712,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7644,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7638,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "2336:5:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 7712,
                  "src": "2322:19:63",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7637,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2322:6:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7640,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "2365:7:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 7712,
                  "src": "2351:21:63",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7639,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2351:6:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7643,
                  "mutability": "mutable",
                  "name": "defaultOperators_",
                  "nameLocation": "2399:17:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 7712,
                  "src": "2382:34:63",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7641,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2382:7:63",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 7642,
                    "nodeType": "ArrayTypeName",
                    "src": "2382:9:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2312:110:63"
            },
            "returnParameters": {
              "id": 7645,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2423:0:63"
            },
            "scope": 8702,
            "src": "2301:612:63",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              13713
            ],
            "body": {
              "id": 7721,
              "nodeType": "Block",
              "src": "3036:29:63",
              "statements": [
                {
                  "expression": {
                    "id": 7719,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7598,
                    "src": "3053:5:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 7718,
                  "id": 7720,
                  "nodeType": "Return",
                  "src": "3046:12:63"
                }
              ]
            },
            "documentation": {
              "id": 7713,
              "nodeType": "StructuredDocumentation",
              "src": "2919:43:63",
              "text": " @dev See {IERC777-name}."
            },
            "functionSelector": "06fdde03",
            "id": 7722,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "2976:4:63",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7715,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3003:8:63"
            },
            "parameters": {
              "id": 7714,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2980:2:63"
            },
            "returnParameters": {
              "id": 7718,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7717,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7722,
                  "src": "3021:13:63",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7716,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3021:6:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3020:15:63"
            },
            "scope": 8702,
            "src": "2967:98:63",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              13719
            ],
            "body": {
              "id": 7731,
              "nodeType": "Block",
              "src": "3192:31:63",
              "statements": [
                {
                  "expression": {
                    "id": 7729,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7600,
                    "src": "3209:7:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 7728,
                  "id": 7730,
                  "nodeType": "Return",
                  "src": "3202:14:63"
                }
              ]
            },
            "documentation": {
              "id": 7723,
              "nodeType": "StructuredDocumentation",
              "src": "3071:45:63",
              "text": " @dev See {IERC777-symbol}."
            },
            "functionSelector": "95d89b41",
            "id": 7732,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "3130:6:63",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7725,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3159:8:63"
            },
            "parameters": {
              "id": 7724,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3136:2:63"
            },
            "returnParameters": {
              "id": 7728,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7727,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7732,
                  "src": "3177:13:63",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7726,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3177:6:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3176:15:63"
            },
            "scope": 8702,
            "src": "3121:102:63",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7740,
              "nodeType": "Block",
              "src": "3463:26:63",
              "statements": [
                {
                  "expression": {
                    "hexValue": "3138",
                    "id": 7738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3480:2:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  "functionReturnParameters": 7737,
                  "id": 7739,
                  "nodeType": "Return",
                  "src": "3473:9:63"
                }
              ]
            },
            "documentation": {
              "id": 7733,
              "nodeType": "StructuredDocumentation",
              "src": "3229:173:63",
              "text": " @dev See {ERC20-decimals}.\n Always returns 18, as per the\n [ERC777 EIP](https://eips.ethereum.org/EIPS/eip-777#backward-compatibility)."
            },
            "functionSelector": "313ce567",
            "id": 7741,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "3416:8:63",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7734,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3424:2:63"
            },
            "returnParameters": {
              "id": 7737,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7736,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7741,
                  "src": "3456:5:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 7735,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3456:5:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3455:7:63"
            },
            "scope": 8702,
            "src": "3407:82:63",
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              13725
            ],
            "body": {
              "id": 7750,
              "nodeType": "Block",
              "src": "3674:25:63",
              "statements": [
                {
                  "expression": {
                    "hexValue": "31",
                    "id": 7748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3691:1:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "functionReturnParameters": 7747,
                  "id": 7749,
                  "nodeType": "Return",
                  "src": "3684:8:63"
                }
              ]
            },
            "documentation": {
              "id": 7742,
              "nodeType": "StructuredDocumentation",
              "src": "3495:104:63",
              "text": " @dev See {IERC777-granularity}.\n This implementation always returns `1`."
            },
            "functionSelector": "556f0dc7",
            "id": 7751,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "granularity",
            "nameLocation": "3613:11:63",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7744,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3647:8:63"
            },
            "parameters": {
              "id": 7743,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3624:2:63"
            },
            "returnParameters": {
              "id": 7747,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7746,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7751,
                  "src": "3665:7:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7745,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3665:7:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3664:9:63"
            },
            "scope": 8702,
            "src": "3604:95:63",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5338,
              13731
            ],
            "body": {
              "id": 7762,
              "nodeType": "Block",
              "src": "3847:36:63",
              "statements": [
                {
                  "expression": {
                    "id": 7760,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7596,
                    "src": "3864:12:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7759,
                  "id": 7761,
                  "nodeType": "Return",
                  "src": "3857:19:63"
                }
              ]
            },
            "documentation": {
              "id": 7752,
              "nodeType": "StructuredDocumentation",
              "src": "3705:50:63",
              "text": " @dev See {IERC777-totalSupply}."
            },
            "functionSelector": "18160ddd",
            "id": 7763,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "3769:11:63",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7756,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 7754,
                  "name": "IERC20",
                  "nameLocations": [
                    "3812:6:63"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5407,
                  "src": "3812:6:63"
                },
                {
                  "id": 7755,
                  "name": "IERC777",
                  "nameLocations": [
                    "3820:7:63"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13863,
                  "src": "3820:7:63"
                }
              ],
              "src": "3803:25:63"
            },
            "parameters": {
              "id": 7753,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3780:2:63"
            },
            "returnParameters": {
              "id": 7759,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7758,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7763,
                  "src": "3838:7:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7757,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3838:7:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3837:9:63"
            },
            "scope": 8702,
            "src": "3760:123:63",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5346,
              13739
            ],
            "body": {
              "id": 7778,
              "nodeType": "Block",
              "src": "4087:46:63",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 7774,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7594,
                      "src": "4104:9:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 7776,
                    "indexExpression": {
                      "id": 7775,
                      "name": "tokenHolder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7766,
                      "src": "4114:11:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4104:22:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7773,
                  "id": 7777,
                  "nodeType": "Return",
                  "src": "4097:29:63"
                }
              ]
            },
            "documentation": {
              "id": 7764,
              "nodeType": "StructuredDocumentation",
              "src": "3889:89:63",
              "text": " @dev Returns the amount of tokens owned by an account (`tokenHolder`)."
            },
            "functionSelector": "70a08231",
            "id": 7779,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "3992:9:63",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7770,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 7768,
                  "name": "IERC20",
                  "nameLocations": [
                    "4052:6:63"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5407,
                  "src": "4052:6:63"
                },
                {
                  "id": 7769,
                  "name": "IERC777",
                  "nameLocations": [
                    "4060:7:63"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13863,
                  "src": "4060:7:63"
                }
              ],
              "src": "4043:25:63"
            },
            "parameters": {
              "id": 7767,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7766,
                  "mutability": "mutable",
                  "name": "tokenHolder",
                  "nameLocation": "4010:11:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 7779,
                  "src": "4002:19:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7765,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4002:7:63",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4001:21:63"
            },
            "returnParameters": {
              "id": 7773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7772,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7779,
                  "src": "4078:7:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7771,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4078:7:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4077:9:63"
            },
            "scope": 8702,
            "src": "3983:150:63",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              13749
            ],
            "body": {
              "id": 7800,
              "nodeType": "Block",
              "src": "4385:71:63",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 7791,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12483,
                          "src": "4401:10:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 7792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4401:12:63",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7793,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7782,
                        "src": "4415:9:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7794,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7784,
                        "src": "4426:6:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7795,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7786,
                        "src": "4434:4:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 7796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4440:2:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "74727565",
                        "id": 7797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4444:4:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7790,
                      "name": "_send",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8381,
                      "src": "4395:5:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory,bytes memory,bool)"
                      }
                    },
                    "id": 7798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4395:54:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7799,
                  "nodeType": "ExpressionStatement",
                  "src": "4395:54:63"
                }
              ]
            },
            "documentation": {
              "id": 7780,
              "nodeType": "StructuredDocumentation",
              "src": "4139:119:63",
              "text": " @dev See {IERC777-send}.\n Also emits a {IERC20-Transfer} event for ERC20 compatibility."
            },
            "functionSelector": "9bd9bbc6",
            "id": 7801,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "send",
            "nameLocation": "4272:4:63",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7788,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4376:8:63"
            },
            "parameters": {
              "id": 7787,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7782,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "4294:9:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 7801,
                  "src": "4286:17:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7781,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4286:7:63",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7784,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4321:6:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 7801,
                  "src": "4313:14:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7783,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4313:7:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7786,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "4350:4:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 7801,
                  "src": "4337:17:63",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7785,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4337:5:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4276:84:63"
            },
            "returnParameters": {
              "id": 7789,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4385:0:63"
            },
            "scope": 8702,
            "src": "4263:193:63",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5356
            ],
            "body": {
              "id": 7857,
              "nodeType": "Block",
              "src": "4779:347:63",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7813,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7804,
                          "src": "4797:9:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 7816,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4818:1:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 7815,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4810:7:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 7814,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4810:7:63",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 7817,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4810:10:63",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4797:23:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 7819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4822:38:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ad1e0a820fe2a50167f341463ad5f6754fad4cf77d809141bc408c516e69c59a",
                          "typeString": "literal_string \"ERC777: transfer to the zero address\""
                        },
                        "value": "ERC777: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ad1e0a820fe2a50167f341463ad5f6754fad4cf77d809141bc408c516e69c59a",
                          "typeString": "literal_string \"ERC777: transfer to the zero address\""
                        }
                      ],
                      "id": 7812,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4789:7:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4789:72:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7821,
                  "nodeType": "ExpressionStatement",
                  "src": "4789:72:63"
                },
                {
                  "assignments": [
                    7823
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7823,
                      "mutability": "mutable",
                      "name": "from",
                      "nameLocation": "4880:4:63",
                      "nodeType": "VariableDeclaration",
                      "scope": 7857,
                      "src": "4872:12:63",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 7822,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4872:7:63",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7826,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7824,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12483,
                      "src": "4887:10:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 7825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4887:12:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4872:27:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7828,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7823,
                        "src": "4928:4:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7829,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7823,
                        "src": "4934:4:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7830,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7804,
                        "src": "4940:9:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7831,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7806,
                        "src": "4951:6:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 7832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4959:2:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "",
                        "id": 7833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4963:2:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 7827,
                      "name": "_callTokensToSend",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8630,
                      "src": "4910:17:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 7834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4910:56:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7835,
                  "nodeType": "ExpressionStatement",
                  "src": "4910:56:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7837,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7823,
                        "src": "4983:4:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7838,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7823,
                        "src": "4989:4:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7839,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7804,
                        "src": "4995:9:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7840,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7806,
                        "src": "5006:6:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 7841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5014:2:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "",
                        "id": 7842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5018:2:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 7836,
                      "name": "_move",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8540,
                      "src": "4977:5:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 7843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4977:44:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7844,
                  "nodeType": "ExpressionStatement",
                  "src": "4977:44:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7846,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7823,
                        "src": "5052:4:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7847,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7823,
                        "src": "5058:4:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7848,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7804,
                        "src": "5064:9:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7849,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7806,
                        "src": "5075:6:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 7850,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5083:2:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "",
                        "id": 7851,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5087:2:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 7852,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5091:5:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7845,
                      "name": "_callTokensReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8688,
                      "src": "5032:19:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory,bool)"
                      }
                    },
                    "id": 7853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5032:65:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7854,
                  "nodeType": "ExpressionStatement",
                  "src": "5032:65:63"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 7855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5115:4:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7811,
                  "id": 7856,
                  "nodeType": "Return",
                  "src": "5108:11:63"
                }
              ]
            },
            "documentation": {
              "id": 7802,
              "nodeType": "StructuredDocumentation",
              "src": "4462:220:63",
              "text": " @dev See {IERC20-transfer}.\n Unlike `send`, `recipient` is _not_ required to implement the {IERC777Recipient}\n interface if it is a contract.\n Also emits a {Sent} event."
            },
            "functionSelector": "a9059cbb",
            "id": 7858,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "4696:8:63",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7808,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4755:8:63"
            },
            "parameters": {
              "id": 7807,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7804,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "4713:9:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 7858,
                  "src": "4705:17:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7803,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4705:7:63",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7806,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4732:6:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 7858,
                  "src": "4724:14:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7805,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4724:7:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4704:35:63"
            },
            "returnParameters": {
              "id": 7811,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7810,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7858,
                  "src": "4773:4:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7809,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4773:4:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4772:6:63"
            },
            "scope": 8702,
            "src": "4687:439:63",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              13757
            ],
            "body": {
              "id": 7875,
              "nodeType": "Block",
              "src": "5329:54:63",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 7868,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12483,
                          "src": "5345:10:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 7869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5345:12:63",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7870,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7861,
                        "src": "5359:6:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7871,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7863,
                        "src": "5367:4:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 7872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5373:2:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 7867,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8474,
                      "src": "5339:5:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 7873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5339:37:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7874,
                  "nodeType": "ExpressionStatement",
                  "src": "5339:37:63"
                }
              ]
            },
            "documentation": {
              "id": 7859,
              "nodeType": "StructuredDocumentation",
              "src": "5132:119:63",
              "text": " @dev See {IERC777-burn}.\n Also emits a {IERC20-Transfer} event for ERC20 compatibility."
            },
            "functionSelector": "fe9d9303",
            "id": 7876,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "5265:4:63",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7865,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5320:8:63"
            },
            "parameters": {
              "id": 7864,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7861,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5278:6:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 7876,
                  "src": "5270:14:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7860,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5270:7:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7863,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "5299:4:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 7876,
                  "src": "5286:17:63",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7862,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5286:5:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5269:35:63"
            },
            "returnParameters": {
              "id": 7866,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5329:0:63"
            },
            "scope": 8702,
            "src": "5256:127:63",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              13767
            ],
            "body": {
              "id": 7909,
              "nodeType": "Block",
              "src": "5552:205:63",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 7907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 7901,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7887,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7879,
                          "src": "5581:8:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 7888,
                          "name": "tokenHolder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7881,
                          "src": "5593:11:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5581:23:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 7899,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 7890,
                                "name": "_defaultOperators",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7617,
                                "src": "5621:17:63",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 7892,
                              "indexExpression": {
                                "id": 7891,
                                "name": "operator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7879,
                                "src": "5639:8:63",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5621:27:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "id": 7898,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "5652:48:63",
                              "subExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 7893,
                                    "name": "_revokedDefaultOperators",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7629,
                                    "src": "5653:24:63",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                      "typeString": "mapping(address => mapping(address => bool))"
                                    }
                                  },
                                  "id": 7895,
                                  "indexExpression": {
                                    "id": 7894,
                                    "name": "tokenHolder",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7881,
                                    "src": "5678:11:63",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5653:37:63",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 7897,
                                "indexExpression": {
                                  "id": 7896,
                                  "name": "operator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7879,
                                  "src": "5691:8:63",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5653:47:63",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "5621:79:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "id": 7900,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "5620:81:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "5581:120:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 7902,
                          "name": "_operators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7623,
                          "src": "5717:10:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 7904,
                        "indexExpression": {
                          "id": 7903,
                          "name": "tokenHolder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7881,
                          "src": "5728:11:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5717:23:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 7906,
                      "indexExpression": {
                        "id": 7905,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7879,
                        "src": "5741:8:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5717:33:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5581:169:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 7886,
                  "id": 7908,
                  "nodeType": "Return",
                  "src": "5562:188:63"
                }
              ]
            },
            "documentation": {
              "id": 7877,
              "nodeType": "StructuredDocumentation",
              "src": "5389:52:63",
              "text": " @dev See {IERC777-isOperatorFor}."
            },
            "functionSelector": "d95b6371",
            "id": 7910,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isOperatorFor",
            "nameLocation": "5455:13:63",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7883,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5528:8:63"
            },
            "parameters": {
              "id": 7882,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7879,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "5477:8:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 7910,
                  "src": "5469:16:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7878,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5469:7:63",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7881,
                  "mutability": "mutable",
                  "name": "tokenHolder",
                  "nameLocation": "5495:11:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 7910,
                  "src": "5487:19:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7880,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5487:7:63",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5468:39:63"
            },
            "returnParameters": {
              "id": 7886,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7885,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7910,
                  "src": "5546:4:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7884,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5546:4:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5545:6:63"
            },
            "scope": 8702,
            "src": "5446:311:63",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              13773
            ],
            "body": {
              "id": 7954,
              "nodeType": "Block",
              "src": "5893:343:63",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7921,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 7918,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12483,
                            "src": "5911:10:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 7919,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5911:12:63",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 7920,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7913,
                          "src": "5927:8:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5911:24:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a20617574686f72697a696e672073656c66206173206f70657261746f72",
                        "id": 7922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5937:38:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4682b297c30e70ba17ae545f9c27f948e3607c0cc7dd469250dfcf8daa94218c",
                          "typeString": "literal_string \"ERC777: authorizing self as operator\""
                        },
                        "value": "ERC777: authorizing self as operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4682b297c30e70ba17ae545f9c27f948e3607c0cc7dd469250dfcf8daa94218c",
                          "typeString": "literal_string \"ERC777: authorizing self as operator\""
                        }
                      ],
                      "id": 7917,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5903:7:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5903:73:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7924,
                  "nodeType": "ExpressionStatement",
                  "src": "5903:73:63"
                },
                {
                  "condition": {
                    "baseExpression": {
                      "id": 7925,
                      "name": "_defaultOperators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7617,
                      "src": "5991:17:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 7927,
                    "indexExpression": {
                      "id": 7926,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7913,
                      "src": "6009:8:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5991:27:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 7946,
                    "nodeType": "Block",
                    "src": "6106:66:63",
                    "statements": [
                      {
                        "expression": {
                          "id": 7944,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 7937,
                                "name": "_operators",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7623,
                                "src": "6120:10:63",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                  "typeString": "mapping(address => mapping(address => bool))"
                                }
                              },
                              "id": 7941,
                              "indexExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 7938,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12483,
                                  "src": "6131:10:63",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 7939,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6131:12:63",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6120:24:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 7942,
                            "indexExpression": {
                              "id": 7940,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7913,
                              "src": "6145:8:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6120:34:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 7943,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6157:4:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "6120:41:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 7945,
                        "nodeType": "ExpressionStatement",
                        "src": "6120:41:63"
                      }
                    ]
                  },
                  "id": 7947,
                  "nodeType": "IfStatement",
                  "src": "5987:185:63",
                  "trueBody": {
                    "id": 7936,
                    "nodeType": "Block",
                    "src": "6020:80:63",
                    "statements": [
                      {
                        "expression": {
                          "id": 7934,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "6034:55:63",
                          "subExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 7928,
                                "name": "_revokedDefaultOperators",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7629,
                                "src": "6041:24:63",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                  "typeString": "mapping(address => mapping(address => bool))"
                                }
                              },
                              "id": 7931,
                              "indexExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 7929,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12483,
                                  "src": "6066:10:63",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 7930,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6066:12:63",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6041:38:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 7933,
                            "indexExpression": {
                              "id": 7932,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7913,
                              "src": "6080:8:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6041:48:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7935,
                        "nodeType": "ExpressionStatement",
                        "src": "6034:55:63"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 7949,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7913,
                        "src": "6206:8:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 7950,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12483,
                          "src": "6216:10:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 7951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6216:12:63",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7948,
                      "name": "AuthorizedOperator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13856,
                      "src": "6187:18:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 7952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6187:42:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7953,
                  "nodeType": "EmitStatement",
                  "src": "6182:47:63"
                }
              ]
            },
            "documentation": {
              "id": 7911,
              "nodeType": "StructuredDocumentation",
              "src": "5763:56:63",
              "text": " @dev See {IERC777-authorizeOperator}."
            },
            "functionSelector": "959b8c3f",
            "id": 7955,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "authorizeOperator",
            "nameLocation": "5833:17:63",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7915,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5884:8:63"
            },
            "parameters": {
              "id": 7914,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7913,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "5859:8:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 7955,
                  "src": "5851:16:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7912,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5851:7:63",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5850:18:63"
            },
            "returnParameters": {
              "id": 7916,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5893:0:63"
            },
            "scope": 8702,
            "src": "5824:412:63",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              13779
            ],
            "body": {
              "id": 7999,
              "nodeType": "Block",
              "src": "6366:337:63",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7966,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7963,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7958,
                          "src": "6384:8:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 7964,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12483,
                            "src": "6396:10:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 7965,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6396:12:63",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6384:24:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a207265766f6b696e672073656c66206173206f70657261746f72",
                        "id": 7967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6410:35:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_67ce503bd3a359eb530c6f3a909afa9e71899e0352d883198e721fd5fceefab5",
                          "typeString": "literal_string \"ERC777: revoking self as operator\""
                        },
                        "value": "ERC777: revoking self as operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_67ce503bd3a359eb530c6f3a909afa9e71899e0352d883198e721fd5fceefab5",
                          "typeString": "literal_string \"ERC777: revoking self as operator\""
                        }
                      ],
                      "id": 7962,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6376:7:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6376:70:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7969,
                  "nodeType": "ExpressionStatement",
                  "src": "6376:70:63"
                },
                {
                  "condition": {
                    "baseExpression": {
                      "id": 7970,
                      "name": "_defaultOperators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7617,
                      "src": "6461:17:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 7972,
                    "indexExpression": {
                      "id": 7971,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7958,
                      "src": "6479:8:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6461:27:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 7991,
                    "nodeType": "Block",
                    "src": "6576:66:63",
                    "statements": [
                      {
                        "expression": {
                          "id": 7989,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "6590:41:63",
                          "subExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 7983,
                                "name": "_operators",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7623,
                                "src": "6597:10:63",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                  "typeString": "mapping(address => mapping(address => bool))"
                                }
                              },
                              "id": 7986,
                              "indexExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 7984,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12483,
                                  "src": "6608:10:63",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 7985,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6608:12:63",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6597:24:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 7988,
                            "indexExpression": {
                              "id": 7987,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7958,
                              "src": "6622:8:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6597:34:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7990,
                        "nodeType": "ExpressionStatement",
                        "src": "6590:41:63"
                      }
                    ]
                  },
                  "id": 7992,
                  "nodeType": "IfStatement",
                  "src": "6457:185:63",
                  "trueBody": {
                    "id": 7982,
                    "nodeType": "Block",
                    "src": "6490:80:63",
                    "statements": [
                      {
                        "expression": {
                          "id": 7980,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 7973,
                                "name": "_revokedDefaultOperators",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7629,
                                "src": "6504:24:63",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                  "typeString": "mapping(address => mapping(address => bool))"
                                }
                              },
                              "id": 7977,
                              "indexExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 7974,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12483,
                                  "src": "6529:10:63",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 7975,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6529:12:63",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6504:38:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 7978,
                            "indexExpression": {
                              "id": 7976,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7958,
                              "src": "6543:8:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6504:48:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 7979,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6555:4:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "6504:55:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 7981,
                        "nodeType": "ExpressionStatement",
                        "src": "6504:55:63"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 7994,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7958,
                        "src": "6673:8:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 7995,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12483,
                          "src": "6683:10:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 7996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6683:12:63",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7993,
                      "name": "RevokedOperator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13862,
                      "src": "6657:15:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 7997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6657:39:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7998,
                  "nodeType": "EmitStatement",
                  "src": "6652:44:63"
                }
              ]
            },
            "documentation": {
              "id": 7956,
              "nodeType": "StructuredDocumentation",
              "src": "6242:53:63",
              "text": " @dev See {IERC777-revokeOperator}."
            },
            "functionSelector": "fad8b32a",
            "id": 8000,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "revokeOperator",
            "nameLocation": "6309:14:63",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7960,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6357:8:63"
            },
            "parameters": {
              "id": 7959,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7958,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "6332:8:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 8000,
                  "src": "6324:16:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7957,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6324:7:63",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6323:18:63"
            },
            "returnParameters": {
              "id": 7961,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6366:0:63"
            },
            "scope": 8702,
            "src": "6300:403:63",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              13786
            ],
            "body": {
              "id": 8010,
              "nodeType": "Block",
              "src": "6853:46:63",
              "statements": [
                {
                  "expression": {
                    "id": 8008,
                    "name": "_defaultOperatorsArray",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7613,
                    "src": "6870:22:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 8007,
                  "id": 8009,
                  "nodeType": "Return",
                  "src": "6863:29:63"
                }
              ]
            },
            "documentation": {
              "id": 8001,
              "nodeType": "StructuredDocumentation",
              "src": "6709:55:63",
              "text": " @dev See {IERC777-defaultOperators}."
            },
            "functionSelector": "06e48538",
            "id": 8011,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "defaultOperators",
            "nameLocation": "6778:16:63",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8003,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6817:8:63"
            },
            "parameters": {
              "id": 8002,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6794:2:63"
            },
            "returnParameters": {
              "id": 8007,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8006,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8011,
                  "src": "6835:16:63",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 8004,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "6835:7:63",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 8005,
                    "nodeType": "ArrayTypeName",
                    "src": "6835:9:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6834:18:63"
            },
            "scope": 8702,
            "src": "6769:130:63",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              13800
            ],
            "body": {
              "id": 8044,
              "nodeType": "Block",
              "src": "7207:177:63",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 8028,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12483,
                              "src": "7239:10:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 8029,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7239:12:63",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 8030,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8014,
                            "src": "7253:6:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8027,
                          "name": "isOperatorFor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7910,
                          "src": "7225:13:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address,address) view returns (bool)"
                          }
                        },
                        "id": 8031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7225:35:63",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a2063616c6c6572206973206e6f7420616e206f70657261746f7220666f7220686f6c646572",
                        "id": 8032,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7262:46:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235",
                          "typeString": "literal_string \"ERC777: caller is not an operator for holder\""
                        },
                        "value": "ERC777: caller is not an operator for holder"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235",
                          "typeString": "literal_string \"ERC777: caller is not an operator for holder\""
                        }
                      ],
                      "id": 8026,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7217:7:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7217:92:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8034,
                  "nodeType": "ExpressionStatement",
                  "src": "7217:92:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8036,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8014,
                        "src": "7325:6:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8037,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8016,
                        "src": "7333:9:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8038,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8018,
                        "src": "7344:6:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8039,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8020,
                        "src": "7352:4:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 8040,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8022,
                        "src": "7358:12:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 8041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7372:4:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 8035,
                      "name": "_send",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8381,
                      "src": "7319:5:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory,bytes memory,bool)"
                      }
                    },
                    "id": 8042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7319:58:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8043,
                  "nodeType": "ExpressionStatement",
                  "src": "7319:58:63"
                }
              ]
            },
            "documentation": {
              "id": 8012,
              "nodeType": "StructuredDocumentation",
              "src": "6905:108:63",
              "text": " @dev See {IERC777-operatorSend}.\n Emits {Sent} and {IERC20-Transfer} events."
            },
            "functionSelector": "62ad1b83",
            "id": 8045,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "operatorSend",
            "nameLocation": "7027:12:63",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8024,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7198:8:63"
            },
            "parameters": {
              "id": 8023,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8014,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "7057:6:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 8045,
                  "src": "7049:14:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8013,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7049:7:63",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8016,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "7081:9:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 8045,
                  "src": "7073:17:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8015,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7073:7:63",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8018,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7108:6:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 8045,
                  "src": "7100:14:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8017,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7100:7:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8020,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "7137:4:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 8045,
                  "src": "7124:17:63",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8019,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7124:5:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8022,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "7164:12:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 8045,
                  "src": "7151:25:63",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8021,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7151:5:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7039:143:63"
            },
            "returnParameters": {
              "id": 8025,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7207:0:63"
            },
            "scope": 8702,
            "src": "7018:366:63",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              13812
            ],
            "body": {
              "id": 8074,
              "nodeType": "Block",
              "src": "7668:162:63",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 8060,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12483,
                              "src": "7700:10:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 8061,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7700:12:63",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 8062,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8048,
                            "src": "7714:7:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8059,
                          "name": "isOperatorFor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7910,
                          "src": "7686:13:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address,address) view returns (bool)"
                          }
                        },
                        "id": 8063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7686:36:63",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a2063616c6c6572206973206e6f7420616e206f70657261746f7220666f7220686f6c646572",
                        "id": 8064,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7724:46:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235",
                          "typeString": "literal_string \"ERC777: caller is not an operator for holder\""
                        },
                        "value": "ERC777: caller is not an operator for holder"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235",
                          "typeString": "literal_string \"ERC777: caller is not an operator for holder\""
                        }
                      ],
                      "id": 8058,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7678:7:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7678:93:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8066,
                  "nodeType": "ExpressionStatement",
                  "src": "7678:93:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8068,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8048,
                        "src": "7787:7:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8069,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8050,
                        "src": "7796:6:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8070,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8052,
                        "src": "7804:4:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 8071,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8054,
                        "src": "7810:12:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 8067,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8474,
                      "src": "7781:5:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 8072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7781:42:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8073,
                  "nodeType": "ExpressionStatement",
                  "src": "7781:42:63"
                }
              ]
            },
            "documentation": {
              "id": 8046,
              "nodeType": "StructuredDocumentation",
              "src": "7390:110:63",
              "text": " @dev See {IERC777-operatorBurn}.\n Emits {Burned} and {IERC20-Transfer} events."
            },
            "functionSelector": "fc673c4f",
            "id": 8075,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "operatorBurn",
            "nameLocation": "7514:12:63",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8056,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7659:8:63"
            },
            "parameters": {
              "id": 8055,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8048,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "7544:7:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 8075,
                  "src": "7536:15:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8047,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7536:7:63",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8050,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7569:6:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 8075,
                  "src": "7561:14:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8049,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7561:7:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8052,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "7598:4:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 8075,
                  "src": "7585:17:63",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8051,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7585:5:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8054,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "7625:12:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 8075,
                  "src": "7612:25:63",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8053,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7612:5:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7526:117:63"
            },
            "returnParameters": {
              "id": 8057,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7668:0:63"
            },
            "scope": 8702,
            "src": "7505:325:63",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5366
            ],
            "body": {
              "id": 8092,
              "nodeType": "Block",
              "src": "8168:52:63",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 8086,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7635,
                        "src": "8185:11:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 8088,
                      "indexExpression": {
                        "id": 8087,
                        "name": "holder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8078,
                        "src": "8197:6:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8185:19:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 8090,
                    "indexExpression": {
                      "id": 8089,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8080,
                      "src": "8205:7:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8185:28:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 8085,
                  "id": 8091,
                  "nodeType": "Return",
                  "src": "8178:35:63"
                }
              ]
            },
            "documentation": {
              "id": 8076,
              "nodeType": "StructuredDocumentation",
              "src": "7836:228:63",
              "text": " @dev See {IERC20-allowance}.\n Note that operator and allowance concepts are orthogonal: operators may\n not have allowance, and accounts with allowance may not be operators\n themselves."
            },
            "functionSelector": "dd62ed3e",
            "id": 8093,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "8078:9:63",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8082,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8141:8:63"
            },
            "parameters": {
              "id": 8081,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8078,
                  "mutability": "mutable",
                  "name": "holder",
                  "nameLocation": "8096:6:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 8093,
                  "src": "8088:14:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8077,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8088:7:63",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8080,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "8112:7:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 8093,
                  "src": "8104:15:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8079,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8104:7:63",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8087:33:63"
            },
            "returnParameters": {
              "id": 8085,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8084,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8093,
                  "src": "8159:7:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8083,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8159:7:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8158:9:63"
            },
            "scope": 8702,
            "src": "8069:151:63",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5376
            ],
            "body": {
              "id": 8117,
              "nodeType": "Block",
              "src": "8446:109:63",
              "statements": [
                {
                  "assignments": [
                    8105
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8105,
                      "mutability": "mutable",
                      "name": "holder",
                      "nameLocation": "8464:6:63",
                      "nodeType": "VariableDeclaration",
                      "scope": 8117,
                      "src": "8456:14:63",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 8104,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8456:7:63",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8108,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 8106,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12483,
                      "src": "8473:10:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 8107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8473:12:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8456:29:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8110,
                        "name": "holder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8105,
                        "src": "8504:6:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8111,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8096,
                        "src": "8512:7:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8112,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8098,
                        "src": "8521:5:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8109,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8585,
                      "src": "8495:8:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 8113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8495:32:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8114,
                  "nodeType": "ExpressionStatement",
                  "src": "8495:32:63"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 8115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8544:4:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 8103,
                  "id": 8116,
                  "nodeType": "Return",
                  "src": "8537:11:63"
                }
              ]
            },
            "documentation": {
              "id": 8094,
              "nodeType": "StructuredDocumentation",
              "src": "8226:127:63",
              "text": " @dev See {IERC20-approve}.\n Note that accounts cannot have allowance issued by their operators."
            },
            "functionSelector": "095ea7b3",
            "id": 8118,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "8367:7:63",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8100,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8422:8:63"
            },
            "parameters": {
              "id": 8099,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8096,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "8383:7:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 8118,
                  "src": "8375:15:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8095,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8375:7:63",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8098,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "8400:5:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 8118,
                  "src": "8392:13:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8097,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8392:7:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8374:32:63"
            },
            "returnParameters": {
              "id": 8103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8102,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8118,
                  "src": "8440:4:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8101,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8440:4:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8439:6:63"
            },
            "scope": 8702,
            "src": "8358:197:63",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5388
            ],
            "body": {
              "id": 8209,
              "nodeType": "Block",
              "src": "9071:664:63",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8132,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8123,
                          "src": "9089:9:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 8135,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9110:1:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8134,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9102:7:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 8133,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9102:7:63",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 8136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9102:10:63",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9089:23:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 8138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9114:38:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ad1e0a820fe2a50167f341463ad5f6754fad4cf77d809141bc408c516e69c59a",
                          "typeString": "literal_string \"ERC777: transfer to the zero address\""
                        },
                        "value": "ERC777: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ad1e0a820fe2a50167f341463ad5f6754fad4cf77d809141bc408c516e69c59a",
                          "typeString": "literal_string \"ERC777: transfer to the zero address\""
                        }
                      ],
                      "id": 8131,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9081:7:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9081:72:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8140,
                  "nodeType": "ExpressionStatement",
                  "src": "9081:72:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8142,
                          "name": "holder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8121,
                          "src": "9171:6:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 8145,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9189:1:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8144,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9181:7:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 8143,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9181:7:63",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 8146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9181:10:63",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9171:20:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a207472616e736665722066726f6d20746865207a65726f2061646472657373",
                        "id": 8148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9193:40:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e354b0408f2a1e89707ec9f6aaa5427ceb97704ace0785924c7421e8f577dc7a",
                          "typeString": "literal_string \"ERC777: transfer from the zero address\""
                        },
                        "value": "ERC777: transfer from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e354b0408f2a1e89707ec9f6aaa5427ceb97704ace0785924c7421e8f577dc7a",
                          "typeString": "literal_string \"ERC777: transfer from the zero address\""
                        }
                      ],
                      "id": 8141,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9163:7:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9163:71:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8150,
                  "nodeType": "ExpressionStatement",
                  "src": "9163:71:63"
                },
                {
                  "assignments": [
                    8152
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8152,
                      "mutability": "mutable",
                      "name": "spender",
                      "nameLocation": "9253:7:63",
                      "nodeType": "VariableDeclaration",
                      "scope": 8209,
                      "src": "9245:15:63",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 8151,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9245:7:63",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8155,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 8153,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12483,
                      "src": "9263:10:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 8154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9263:12:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9245:30:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8157,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8152,
                        "src": "9304:7:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8158,
                        "name": "holder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8121,
                        "src": "9313:6:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8159,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8123,
                        "src": "9321:9:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8160,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8125,
                        "src": "9332:6:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 8161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9340:2:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "",
                        "id": 8162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9344:2:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 8156,
                      "name": "_callTokensToSend",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8630,
                      "src": "9286:17:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 8163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9286:61:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8164,
                  "nodeType": "ExpressionStatement",
                  "src": "9286:61:63"
                },
                {
                  "assignments": [
                    8166
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8166,
                      "mutability": "mutable",
                      "name": "currentAllowance",
                      "nameLocation": "9366:16:63",
                      "nodeType": "VariableDeclaration",
                      "scope": 8209,
                      "src": "9358:24:63",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8165,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9358:7:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8172,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 8167,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7635,
                        "src": "9385:11:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 8169,
                      "indexExpression": {
                        "id": 8168,
                        "name": "holder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8121,
                        "src": "9397:6:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9385:19:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 8171,
                    "indexExpression": {
                      "id": 8170,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8152,
                      "src": "9405:7:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9385:28:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9358:55:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8174,
                          "name": "currentAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8166,
                          "src": "9431:16:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 8175,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8125,
                          "src": "9451:6:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9431:26:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
                        "id": 8177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9459:43:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d8bf23f1408d4800b3aee66cb36df9b55f0e49735257afe214dda2085ed7cd5c",
                          "typeString": "literal_string \"ERC777: transfer amount exceeds allowance\""
                        },
                        "value": "ERC777: transfer amount exceeds allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d8bf23f1408d4800b3aee66cb36df9b55f0e49735257afe214dda2085ed7cd5c",
                          "typeString": "literal_string \"ERC777: transfer amount exceeds allowance\""
                        }
                      ],
                      "id": 8173,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9423:7:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9423:80:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8179,
                  "nodeType": "ExpressionStatement",
                  "src": "9423:80:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8181,
                        "name": "holder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8121,
                        "src": "9522:6:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8182,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8152,
                        "src": "9530:7:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8183,
                          "name": "currentAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8166,
                          "src": "9539:16:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 8184,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8125,
                          "src": "9558:6:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9539:25:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8180,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8585,
                      "src": "9513:8:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 8186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9513:52:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8187,
                  "nodeType": "ExpressionStatement",
                  "src": "9513:52:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8189,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8152,
                        "src": "9582:7:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8190,
                        "name": "holder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8121,
                        "src": "9591:6:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8191,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8123,
                        "src": "9599:9:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8192,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8125,
                        "src": "9610:6:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 8193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9618:2:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "",
                        "id": 8194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9622:2:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 8188,
                      "name": "_move",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8540,
                      "src": "9576:5:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 8195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9576:49:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8196,
                  "nodeType": "ExpressionStatement",
                  "src": "9576:49:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8198,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8152,
                        "src": "9656:7:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8199,
                        "name": "holder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8121,
                        "src": "9665:6:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8200,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8123,
                        "src": "9673:9:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8201,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8125,
                        "src": "9684:6:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 8202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9692:2:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "",
                        "id": 8203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9696:2:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 8204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9700:5:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 8197,
                      "name": "_callTokensReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8688,
                      "src": "9636:19:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory,bool)"
                      }
                    },
                    "id": 8205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9636:70:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8206,
                  "nodeType": "ExpressionStatement",
                  "src": "9636:70:63"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 8207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9724:4:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 8130,
                  "id": 8208,
                  "nodeType": "Return",
                  "src": "9717:11:63"
                }
              ]
            },
            "documentation": {
              "id": 8119,
              "nodeType": "StructuredDocumentation",
              "src": "8561:363:63",
              "text": " @dev See {IERC20-transferFrom}.\n Note that operator and allowance concepts are orthogonal: operators cannot\n call `transferFrom` (unless they have allowance), and accounts with\n allowance cannot call `operatorSend` (unless they are operators).\n Emits {Sent}, {IERC20-Transfer} and {IERC20-Approval} events."
            },
            "functionSelector": "23b872dd",
            "id": 8210,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "8938:12:63",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8127,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9047:8:63"
            },
            "parameters": {
              "id": 8126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8121,
                  "mutability": "mutable",
                  "name": "holder",
                  "nameLocation": "8968:6:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 8210,
                  "src": "8960:14:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8120,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8960:7:63",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8123,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "8992:9:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 8210,
                  "src": "8984:17:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8122,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8984:7:63",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8125,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9019:6:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 8210,
                  "src": "9011:14:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8124,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9011:7:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8950:81:63"
            },
            "returnParameters": {
              "id": 8130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8129,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8210,
                  "src": "9065:4:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8128,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9065:4:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9064:6:63"
            },
            "scope": 8702,
            "src": "8929:806:63",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8230,
              "nodeType": "Block",
              "src": "10458:69:63",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8223,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8213,
                        "src": "10474:7:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8224,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8215,
                        "src": "10483:6:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8225,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8217,
                        "src": "10491:8:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 8226,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8219,
                        "src": "10501:12:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 8227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10515:4:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 8222,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8231,
                        8311
                      ],
                      "referencedDeclaration": 8311,
                      "src": "10468:5:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory,bytes memory,bool)"
                      }
                    },
                    "id": 8228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10468:52:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8229,
                  "nodeType": "ExpressionStatement",
                  "src": "10468:52:63"
                }
              ]
            },
            "documentation": {
              "id": 8211,
              "nodeType": "StructuredDocumentation",
              "src": "9741:559:63",
              "text": " @dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n If a send hook is registered for `account`, the corresponding function\n will be called with `operator`, `data` and `operatorData`.\n See {IERC777Sender} and {IERC777Recipient}.\n Emits {Minted} and {IERC20-Transfer} events.\n Requirements\n - `account` cannot be the zero address.\n - if `account` is a contract, it must implement the {IERC777Recipient}\n interface."
            },
            "id": 8231,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "10314:5:63",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8220,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8213,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "10337:7:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 8231,
                  "src": "10329:15:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8212,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10329:7:63",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8215,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10362:6:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 8231,
                  "src": "10354:14:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8214,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10354:7:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8217,
                  "mutability": "mutable",
                  "name": "userData",
                  "nameLocation": "10391:8:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 8231,
                  "src": "10378:21:63",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8216,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10378:5:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8219,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "10422:12:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 8231,
                  "src": "10409:25:63",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8218,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10409:5:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10319:121:63"
            },
            "returnParameters": {
              "id": 8221,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10458:0:63"
            },
            "scope": 8702,
            "src": "10305:222:63",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8310,
              "nodeType": "Block",
              "src": "11336:539:63",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8246,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8234,
                          "src": "11354:7:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 8249,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11373:1:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8248,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11365:7:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 8247,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11365:7:63",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 8250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11365:10:63",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11354:21:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 8252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11377:34:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8ce4f759423d0a519cbdf8529f47ad13e03ab9baec6702bc39e1fd5147c7e080",
                          "typeString": "literal_string \"ERC777: mint to the zero address\""
                        },
                        "value": "ERC777: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8ce4f759423d0a519cbdf8529f47ad13e03ab9baec6702bc39e1fd5147c7e080",
                          "typeString": "literal_string \"ERC777: mint to the zero address\""
                        }
                      ],
                      "id": 8245,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11346:7:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11346:66:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8254,
                  "nodeType": "ExpressionStatement",
                  "src": "11346:66:63"
                },
                {
                  "assignments": [
                    8256
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8256,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "11431:8:63",
                      "nodeType": "VariableDeclaration",
                      "scope": 8310,
                      "src": "11423:16:63",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 8255,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11423:7:63",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8259,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 8257,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12483,
                      "src": "11442:10:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 8258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11442:12:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11423:31:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8261,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8256,
                        "src": "11486:8:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 8264,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11504:1:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 8263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11496:7:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 8262,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11496:7:63",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 8265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11496:10:63",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8266,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8234,
                        "src": "11508:7:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8267,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8236,
                        "src": "11517:6:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8260,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8701,
                      "src": "11465:20:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 8268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11465:59:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8269,
                  "nodeType": "ExpressionStatement",
                  "src": "11465:59:63"
                },
                {
                  "expression": {
                    "id": 8272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8270,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7596,
                      "src": "11569:12:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 8271,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8236,
                      "src": "11585:6:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11569:22:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8273,
                  "nodeType": "ExpressionStatement",
                  "src": "11569:22:63"
                },
                {
                  "expression": {
                    "id": 8278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 8274,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7594,
                        "src": "11601:9:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 8276,
                      "indexExpression": {
                        "id": 8275,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8234,
                        "src": "11611:7:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11601:18:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 8277,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8236,
                      "src": "11623:6:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11601:28:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8279,
                  "nodeType": "ExpressionStatement",
                  "src": "11601:28:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8281,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8256,
                        "src": "11660:8:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 8284,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11678:1:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 8283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11670:7:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 8282,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11670:7:63",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 8285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11670:10:63",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8286,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8234,
                        "src": "11682:7:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8287,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8236,
                        "src": "11691:6:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8288,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8238,
                        "src": "11699:8:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 8289,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8240,
                        "src": "11709:12:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 8290,
                        "name": "requireReceptionAck",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8242,
                        "src": "11723:19:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 8280,
                      "name": "_callTokensReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8688,
                      "src": "11640:19:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory,bool)"
                      }
                    },
                    "id": 8291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11640:103:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8292,
                  "nodeType": "ExpressionStatement",
                  "src": "11640:103:63"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 8294,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8256,
                        "src": "11766:8:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8295,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8234,
                        "src": "11776:7:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8296,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8236,
                        "src": "11785:6:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8297,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8238,
                        "src": "11793:8:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 8298,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8240,
                        "src": "11803:12:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 8293,
                      "name": "Minted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13838,
                      "src": "11759:6:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 8299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11759:57:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8300,
                  "nodeType": "EmitStatement",
                  "src": "11754:62:63"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 8304,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11848:1:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 8303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11840:7:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 8302,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11840:7:63",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 8305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11840:10:63",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8306,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8234,
                        "src": "11852:7:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8307,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8236,
                        "src": "11861:6:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8301,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5397,
                      "src": "11831:8:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 8308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11831:37:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8309,
                  "nodeType": "EmitStatement",
                  "src": "11826:42:63"
                }
              ]
            },
            "documentation": {
              "id": 8232,
              "nodeType": "StructuredDocumentation",
              "src": "10533:611:63",
              "text": " @dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n If `requireReceptionAck` is set to true, and if a send hook is\n registered for `account`, the corresponding function will be called with\n `operator`, `data` and `operatorData`.\n See {IERC777Sender} and {IERC777Recipient}.\n Emits {Minted} and {IERC20-Transfer} events.\n Requirements\n - `account` cannot be the zero address.\n - if `account` is a contract, it must implement the {IERC777Recipient}\n interface."
            },
            "id": 8311,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "11158:5:63",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8243,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8234,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "11181:7:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 8311,
                  "src": "11173:15:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8233,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11173:7:63",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8236,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "11206:6:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 8311,
                  "src": "11198:14:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8235,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11198:7:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8238,
                  "mutability": "mutable",
                  "name": "userData",
                  "nameLocation": "11235:8:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 8311,
                  "src": "11222:21:63",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8237,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11222:5:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8240,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "11266:12:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 8311,
                  "src": "11253:25:63",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8239,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11253:5:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8242,
                  "mutability": "mutable",
                  "name": "requireReceptionAck",
                  "nameLocation": "11293:19:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 8311,
                  "src": "11288:24:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8241,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11288:4:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11163:155:63"
            },
            "returnParameters": {
              "id": 8244,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11336:0:63"
            },
            "scope": 8702,
            "src": "11149:726:63",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8380,
              "nodeType": "Block",
              "src": "12555:446:63",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8328,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8314,
                          "src": "12573:4:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 8331,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12589:1:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8330,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12581:7:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 8329,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12581:7:63",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 8332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12581:10:63",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "12573:18:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a2073656e642066726f6d20746865207a65726f2061646472657373",
                        "id": 8334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12593:36:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_14f76295ace7a8386ec01140ee9cd688544ad4113a371d47f5a5fb46ac01c401",
                          "typeString": "literal_string \"ERC777: send from the zero address\""
                        },
                        "value": "ERC777: send from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_14f76295ace7a8386ec01140ee9cd688544ad4113a371d47f5a5fb46ac01c401",
                          "typeString": "literal_string \"ERC777: send from the zero address\""
                        }
                      ],
                      "id": 8327,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12565:7:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12565:65:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8336,
                  "nodeType": "ExpressionStatement",
                  "src": "12565:65:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8338,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8316,
                          "src": "12648:2:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 8341,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12662:1:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8340,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12654:7:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 8339,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12654:7:63",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 8342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12654:10:63",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "12648:16:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a2073656e6420746f20746865207a65726f2061646472657373",
                        "id": 8344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12666:34:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ed80ea5132cda6a72ccf7da466e28cf5f3b5c217583b1b7e92c137a9f3d6b4c3",
                          "typeString": "literal_string \"ERC777: send to the zero address\""
                        },
                        "value": "ERC777: send to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ed80ea5132cda6a72ccf7da466e28cf5f3b5c217583b1b7e92c137a9f3d6b4c3",
                          "typeString": "literal_string \"ERC777: send to the zero address\""
                        }
                      ],
                      "id": 8337,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12640:7:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12640:61:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8346,
                  "nodeType": "ExpressionStatement",
                  "src": "12640:61:63"
                },
                {
                  "assignments": [
                    8348
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8348,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "12720:8:63",
                      "nodeType": "VariableDeclaration",
                      "scope": 8380,
                      "src": "12712:16:63",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 8347,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "12712:7:63",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8351,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 8349,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12483,
                      "src": "12731:10:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 8350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12731:12:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12712:31:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8353,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8348,
                        "src": "12772:8:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8354,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8314,
                        "src": "12782:4:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8355,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8316,
                        "src": "12788:2:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8356,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8318,
                        "src": "12792:6:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8357,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8320,
                        "src": "12800:8:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 8358,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8322,
                        "src": "12810:12:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 8352,
                      "name": "_callTokensToSend",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8630,
                      "src": "12754:17:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 8359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12754:69:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8360,
                  "nodeType": "ExpressionStatement",
                  "src": "12754:69:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8362,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8348,
                        "src": "12840:8:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8363,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8314,
                        "src": "12850:4:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8364,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8316,
                        "src": "12856:2:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8365,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8318,
                        "src": "12860:6:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8366,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8320,
                        "src": "12868:8:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 8367,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8322,
                        "src": "12878:12:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 8361,
                      "name": "_move",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8540,
                      "src": "12834:5:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 8368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12834:57:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8369,
                  "nodeType": "ExpressionStatement",
                  "src": "12834:57:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8371,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8348,
                        "src": "12922:8:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8372,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8314,
                        "src": "12932:4:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8373,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8316,
                        "src": "12938:2:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8374,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8318,
                        "src": "12942:6:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8375,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8320,
                        "src": "12950:8:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 8376,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8322,
                        "src": "12960:12:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 8377,
                        "name": "requireReceptionAck",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8324,
                        "src": "12974:19:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 8370,
                      "name": "_callTokensReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8688,
                      "src": "12902:19:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory,bool)"
                      }
                    },
                    "id": 8378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12902:92:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8379,
                  "nodeType": "ExpressionStatement",
                  "src": "12902:92:63"
                }
              ]
            },
            "documentation": {
              "id": 8312,
              "nodeType": "StructuredDocumentation",
              "src": "11881:465:63",
              "text": " @dev Send tokens\n @param from address token holder address\n @param to address recipient address\n @param amount uint256 amount of tokens to transfer\n @param userData bytes extra information provided by the token holder (if any)\n @param operatorData bytes extra information provided by the operator (if any)\n @param requireReceptionAck if true, contract recipients are required to implement ERC777TokensRecipient"
            },
            "id": 8381,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_send",
            "nameLocation": "12360:5:63",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8325,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8314,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "12383:4:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 8381,
                  "src": "12375:12:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8313,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12375:7:63",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8316,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "12405:2:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 8381,
                  "src": "12397:10:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8315,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12397:7:63",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8318,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "12425:6:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 8381,
                  "src": "12417:14:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8317,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12417:7:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8320,
                  "mutability": "mutable",
                  "name": "userData",
                  "nameLocation": "12454:8:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 8381,
                  "src": "12441:21:63",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8319,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12441:5:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8322,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "12485:12:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 8381,
                  "src": "12472:25:63",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8321,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12472:5:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8324,
                  "mutability": "mutable",
                  "name": "requireReceptionAck",
                  "nameLocation": "12512:19:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 8381,
                  "src": "12507:24:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8323,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12507:4:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12365:172:63"
            },
            "returnParameters": {
              "id": 8326,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12555:0:63"
            },
            "scope": 8702,
            "src": "12351:650:63",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8473,
              "nodeType": "Block",
              "src": "13452:665:63",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8394,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8384,
                          "src": "13470:4:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 8397,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13486:1:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8396,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13478:7:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 8395,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13478:7:63",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 8398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13478:10:63",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "13470:18:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a206275726e2066726f6d20746865207a65726f2061646472657373",
                        "id": 8400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13490:36:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_37e8d125f24ef45023ef8033e82467f588cec434263b3a6b98bcdb3eca4b768c",
                          "typeString": "literal_string \"ERC777: burn from the zero address\""
                        },
                        "value": "ERC777: burn from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_37e8d125f24ef45023ef8033e82467f588cec434263b3a6b98bcdb3eca4b768c",
                          "typeString": "literal_string \"ERC777: burn from the zero address\""
                        }
                      ],
                      "id": 8393,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13462:7:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13462:65:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8402,
                  "nodeType": "ExpressionStatement",
                  "src": "13462:65:63"
                },
                {
                  "assignments": [
                    8404
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8404,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "13546:8:63",
                      "nodeType": "VariableDeclaration",
                      "scope": 8473,
                      "src": "13538:16:63",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 8403,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "13538:7:63",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8407,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 8405,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12483,
                      "src": "13557:10:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 8406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13557:12:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13538:31:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8409,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8404,
                        "src": "13598:8:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8410,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8384,
                        "src": "13608:4:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 8413,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13622:1:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 8412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13614:7:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 8411,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13614:7:63",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 8414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13614:10:63",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8415,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8386,
                        "src": "13626:6:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8416,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8388,
                        "src": "13634:4:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 8417,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8390,
                        "src": "13640:12:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 8408,
                      "name": "_callTokensToSend",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8630,
                      "src": "13580:17:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 8418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13580:73:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8419,
                  "nodeType": "ExpressionStatement",
                  "src": "13580:73:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8421,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8404,
                        "src": "13685:8:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8422,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8384,
                        "src": "13695:4:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 8425,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13709:1:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 8424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13701:7:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 8423,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13701:7:63",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 8426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13701:10:63",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8427,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8386,
                        "src": "13713:6:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8420,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8701,
                      "src": "13664:20:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 8428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13664:56:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8429,
                  "nodeType": "ExpressionStatement",
                  "src": "13664:56:63"
                },
                {
                  "assignments": [
                    8431
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8431,
                      "mutability": "mutable",
                      "name": "fromBalance",
                      "nameLocation": "13773:11:63",
                      "nodeType": "VariableDeclaration",
                      "scope": 8473,
                      "src": "13765:19:63",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8430,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13765:7:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8435,
                  "initialValue": {
                    "baseExpression": {
                      "id": 8432,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7594,
                      "src": "13787:9:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 8434,
                    "indexExpression": {
                      "id": 8433,
                      "name": "from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8384,
                      "src": "13797:4:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13787:15:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13765:37:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8437,
                          "name": "fromBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8431,
                          "src": "13820:11:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 8438,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8386,
                          "src": "13835:6:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13820:21:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a206275726e20616d6f756e7420657863656564732062616c616e6365",
                        "id": 8440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13843:37:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ecdeb627d2306b8b9bb34685df56bbf05cde6b7bc6e45e0248ca50c1b0bd3ebe",
                          "typeString": "literal_string \"ERC777: burn amount exceeds balance\""
                        },
                        "value": "ERC777: burn amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ecdeb627d2306b8b9bb34685df56bbf05cde6b7bc6e45e0248ca50c1b0bd3ebe",
                          "typeString": "literal_string \"ERC777: burn amount exceeds balance\""
                        }
                      ],
                      "id": 8436,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13812:7:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13812:69:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8442,
                  "nodeType": "ExpressionStatement",
                  "src": "13812:69:63"
                },
                {
                  "id": 8451,
                  "nodeType": "UncheckedBlock",
                  "src": "13891:73:63",
                  "statements": [
                    {
                      "expression": {
                        "id": 8449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 8443,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7594,
                            "src": "13915:9:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 8445,
                          "indexExpression": {
                            "id": 8444,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8384,
                            "src": "13925:4:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "13915:15:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 8448,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 8446,
                            "name": "fromBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8431,
                            "src": "13933:11:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 8447,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8386,
                            "src": "13947:6:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13933:20:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13915:38:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 8450,
                      "nodeType": "ExpressionStatement",
                      "src": "13915:38:63"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 8454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8452,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7596,
                      "src": "13973:12:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 8453,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8386,
                      "src": "13989:6:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13973:22:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8455,
                  "nodeType": "ExpressionStatement",
                  "src": "13973:22:63"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 8457,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8404,
                        "src": "14018:8:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8458,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8384,
                        "src": "14028:4:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8459,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8386,
                        "src": "14034:6:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8460,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8388,
                        "src": "14042:4:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 8461,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8390,
                        "src": "14048:12:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 8456,
                      "name": "Burned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13850,
                      "src": "14011:6:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 8462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14011:50:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8463,
                  "nodeType": "EmitStatement",
                  "src": "14006:55:63"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 8465,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8384,
                        "src": "14085:4:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 8468,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14099:1:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 8467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14091:7:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 8466,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14091:7:63",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 8469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14091:10:63",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8470,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8386,
                        "src": "14103:6:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8464,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5397,
                      "src": "14076:8:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 8471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14076:34:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8472,
                  "nodeType": "EmitStatement",
                  "src": "14071:39:63"
                }
              ]
            },
            "documentation": {
              "id": 8382,
              "nodeType": "StructuredDocumentation",
              "src": "13007:294:63",
              "text": " @dev Burn tokens\n @param from address token holder address\n @param amount uint256 amount of tokens to burn\n @param data bytes extra information provided by the token holder\n @param operatorData bytes extra information provided by the operator (if any)"
            },
            "id": 8474,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "13315:5:63",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8391,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8384,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "13338:4:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 8474,
                  "src": "13330:12:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8383,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13330:7:63",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8386,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "13360:6:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 8474,
                  "src": "13352:14:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8385,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13352:7:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8388,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "13389:4:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 8474,
                  "src": "13376:17:63",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8387,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13376:5:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8390,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "13416:12:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 8474,
                  "src": "13403:25:63",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8389,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13403:5:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13320:114:63"
            },
            "returnParameters": {
              "id": 8392,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13452:0:63"
            },
            "scope": 8702,
            "src": "13306:811:63",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8539,
              "nodeType": "Block",
              "src": "14310:424:63",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8490,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8476,
                        "src": "14341:8:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8491,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8478,
                        "src": "14351:4:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8492,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8480,
                        "src": "14357:2:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8493,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8482,
                        "src": "14361:6:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8489,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8701,
                      "src": "14320:20:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 8494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14320:48:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8495,
                  "nodeType": "ExpressionStatement",
                  "src": "14320:48:63"
                },
                {
                  "assignments": [
                    8497
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8497,
                      "mutability": "mutable",
                      "name": "fromBalance",
                      "nameLocation": "14387:11:63",
                      "nodeType": "VariableDeclaration",
                      "scope": 8539,
                      "src": "14379:19:63",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8496,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14379:7:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8501,
                  "initialValue": {
                    "baseExpression": {
                      "id": 8498,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7594,
                      "src": "14401:9:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 8500,
                    "indexExpression": {
                      "id": 8499,
                      "name": "from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8478,
                      "src": "14411:4:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "14401:15:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14379:37:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8503,
                          "name": "fromBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8497,
                          "src": "14434:11:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 8504,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8482,
                          "src": "14449:6:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14434:21:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
                        "id": 8506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14457:41:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f1c21f7056055b190ca6c77528b11af9437bed324def87929bb64fac4d57e6b",
                          "typeString": "literal_string \"ERC777: transfer amount exceeds balance\""
                        },
                        "value": "ERC777: transfer amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f1c21f7056055b190ca6c77528b11af9437bed324def87929bb64fac4d57e6b",
                          "typeString": "literal_string \"ERC777: transfer amount exceeds balance\""
                        }
                      ],
                      "id": 8502,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14426:7:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14426:73:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8508,
                  "nodeType": "ExpressionStatement",
                  "src": "14426:73:63"
                },
                {
                  "id": 8517,
                  "nodeType": "UncheckedBlock",
                  "src": "14509:73:63",
                  "statements": [
                    {
                      "expression": {
                        "id": 8515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 8509,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7594,
                            "src": "14533:9:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 8511,
                          "indexExpression": {
                            "id": 8510,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8478,
                            "src": "14543:4:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "14533:15:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 8514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 8512,
                            "name": "fromBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8497,
                            "src": "14551:11:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 8513,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8482,
                            "src": "14565:6:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14551:20:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14533:38:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 8516,
                      "nodeType": "ExpressionStatement",
                      "src": "14533:38:63"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 8522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 8518,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7594,
                        "src": "14591:9:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 8520,
                      "indexExpression": {
                        "id": 8519,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8480,
                        "src": "14601:2:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "14591:13:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 8521,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8482,
                      "src": "14608:6:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14591:23:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8523,
                  "nodeType": "ExpressionStatement",
                  "src": "14591:23:63"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 8525,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8476,
                        "src": "14635:8:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8526,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8478,
                        "src": "14645:4:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8527,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8480,
                        "src": "14651:2:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8528,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8482,
                        "src": "14655:6:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8529,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8484,
                        "src": "14663:8:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 8530,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8486,
                        "src": "14673:12:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 8524,
                      "name": "Sent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13826,
                      "src": "14630:4:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 8531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14630:56:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8532,
                  "nodeType": "EmitStatement",
                  "src": "14625:61:63"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 8534,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8478,
                        "src": "14710:4:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8535,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8480,
                        "src": "14716:2:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8536,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8482,
                        "src": "14720:6:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8533,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5397,
                      "src": "14701:8:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 8537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14701:26:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8538,
                  "nodeType": "EmitStatement",
                  "src": "14696:31:63"
                }
              ]
            },
            "id": 8540,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_move",
            "nameLocation": "14132:5:63",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8487,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8476,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "14155:8:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 8540,
                  "src": "14147:16:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8475,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14147:7:63",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8478,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "14181:4:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 8540,
                  "src": "14173:12:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8477,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14173:7:63",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8480,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "14203:2:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 8540,
                  "src": "14195:10:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8479,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14195:7:63",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8482,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "14223:6:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 8540,
                  "src": "14215:14:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8481,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14215:7:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8484,
                  "mutability": "mutable",
                  "name": "userData",
                  "nameLocation": "14252:8:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 8540,
                  "src": "14239:21:63",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8483,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14239:5:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8486,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "14283:12:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 8540,
                  "src": "14270:25:63",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8485,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14270:5:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14137:164:63"
            },
            "returnParameters": {
              "id": 8488,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14310:0:63"
            },
            "scope": 8702,
            "src": "14123:611:63",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 8584,
              "nodeType": "Block",
              "src": "14977:260:63",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8551,
                          "name": "holder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8543,
                          "src": "14995:6:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 8554,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15013:1:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8553,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "15005:7:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 8552,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "15005:7:63",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 8555,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15005:10:63",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "14995:20:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a20617070726f76652066726f6d20746865207a65726f2061646472657373",
                        "id": 8557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15017:39:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0e27915827f7e9aa1f9e706fa48897705bd51fdbb8c4e17f0dcc074873455ca7",
                          "typeString": "literal_string \"ERC777: approve from the zero address\""
                        },
                        "value": "ERC777: approve from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0e27915827f7e9aa1f9e706fa48897705bd51fdbb8c4e17f0dcc074873455ca7",
                          "typeString": "literal_string \"ERC777: approve from the zero address\""
                        }
                      ],
                      "id": 8550,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14987:7:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14987:70:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8559,
                  "nodeType": "ExpressionStatement",
                  "src": "14987:70:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8561,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8545,
                          "src": "15075:7:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 8564,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15094:1:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8563,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "15086:7:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 8562,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "15086:7:63",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 8565,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15086:10:63",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "15075:21:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a20617070726f766520746f20746865207a65726f2061646472657373",
                        "id": 8567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15098:37:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f96aab14690ac2986315360e71dcbe877ff7fb69d13c692db6f39f8c2c01f20d",
                          "typeString": "literal_string \"ERC777: approve to the zero address\""
                        },
                        "value": "ERC777: approve to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f96aab14690ac2986315360e71dcbe877ff7fb69d13c692db6f39f8c2c01f20d",
                          "typeString": "literal_string \"ERC777: approve to the zero address\""
                        }
                      ],
                      "id": 8560,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15067:7:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15067:69:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8569,
                  "nodeType": "ExpressionStatement",
                  "src": "15067:69:63"
                },
                {
                  "expression": {
                    "id": 8576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 8570,
                          "name": "_allowances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7635,
                          "src": "15147:11:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 8573,
                        "indexExpression": {
                          "id": 8571,
                          "name": "holder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8543,
                          "src": "15159:6:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "15147:19:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 8574,
                      "indexExpression": {
                        "id": 8572,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8545,
                        "src": "15167:7:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "15147:28:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8575,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8547,
                      "src": "15178:5:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15147:36:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8577,
                  "nodeType": "ExpressionStatement",
                  "src": "15147:36:63"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 8579,
                        "name": "holder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8543,
                        "src": "15207:6:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8580,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8545,
                        "src": "15215:7:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8581,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8547,
                        "src": "15224:5:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8578,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5406,
                      "src": "15198:8:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 8582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15198:32:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8583,
                  "nodeType": "EmitStatement",
                  "src": "15193:37:63"
                }
              ]
            },
            "documentation": {
              "id": 8541,
              "nodeType": "StructuredDocumentation",
              "src": "14740:127:63",
              "text": " @dev See {ERC20-_approve}.\n Note that accounts cannot have allowance issued by their operators."
            },
            "id": 8585,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "14881:8:63",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8548,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8543,
                  "mutability": "mutable",
                  "name": "holder",
                  "nameLocation": "14907:6:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 8585,
                  "src": "14899:14:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8542,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14899:7:63",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8545,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "14931:7:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 8585,
                  "src": "14923:15:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8544,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14923:7:63",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8547,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "14956:5:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 8585,
                  "src": "14948:13:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8546,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14948:7:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14889:78:63"
            },
            "returnParameters": {
              "id": 8549,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14977:0:63"
            },
            "scope": 8702,
            "src": "14872:365:63",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8629,
              "nodeType": "Block",
              "src": "15909:273:63",
              "statements": [
                {
                  "assignments": [
                    8602
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8602,
                      "mutability": "mutable",
                      "name": "implementer",
                      "nameLocation": "15927:11:63",
                      "nodeType": "VariableDeclaration",
                      "scope": 8629,
                      "src": "15919:19:63",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 8601,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "15919:7:63",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8608,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 8605,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8590,
                        "src": "15983:4:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8606,
                        "name": "_TOKENS_SENDER_INTERFACE_HASH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7605,
                        "src": "15989:29:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 8603,
                        "name": "_ERC1820_REGISTRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7590,
                        "src": "15941:17:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1820Registry_$13993",
                          "typeString": "contract IERC1820Registry"
                        }
                      },
                      "id": 8604,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15959:23:63",
                      "memberName": "getInterfaceImplementer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13942,
                      "src": "15941:41:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (address,bytes32) view external returns (address)"
                      }
                    },
                    "id": 8607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15941:78:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15919:100:63"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 8614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8609,
                      "name": "implementer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8602,
                      "src": "16033:11:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 8612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16056:1:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 8611,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "16048:7:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 8610,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "16048:7:63",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 8613,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16048:10:63",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "16033:25:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8628,
                  "nodeType": "IfStatement",
                  "src": "16029:147:63",
                  "trueBody": {
                    "id": 8627,
                    "nodeType": "Block",
                    "src": "16060:116:63",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 8619,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8588,
                              "src": "16114:8:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 8620,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8590,
                              "src": "16124:4:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 8621,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8592,
                              "src": "16130:2:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 8622,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8594,
                              "src": "16134:6:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 8623,
                              "name": "userData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8596,
                              "src": "16142:8:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 8624,
                              "name": "operatorData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8598,
                              "src": "16152:12:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 8616,
                                  "name": "implementer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8602,
                                  "src": "16088:11:63",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 8615,
                                "name": "IERC777Sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13903,
                                "src": "16074:13:63",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC777Sender_$13903_$",
                                  "typeString": "type(contract IERC777Sender)"
                                }
                              },
                              "id": 8617,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16074:26:63",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC777Sender_$13903",
                                "typeString": "contract IERC777Sender"
                              }
                            },
                            "id": 8618,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "16101:12:63",
                            "memberName": "tokensToSend",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13902,
                            "src": "16074:39:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,address,uint256,bytes memory,bytes memory) external"
                            }
                          },
                          "id": 8625,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16074:91:63",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8626,
                        "nodeType": "ExpressionStatement",
                        "src": "16074:91:63"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 8586,
              "nodeType": "StructuredDocumentation",
              "src": "15243:462:63",
              "text": " @dev Call from.tokensToSend() if the interface is registered\n @param operator address operator requesting the transfer\n @param from address token holder address\n @param to address recipient address\n @param amount uint256 amount of tokens to transfer\n @param userData bytes extra information provided by the token holder (if any)\n @param operatorData bytes extra information provided by the operator (if any)"
            },
            "id": 8630,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_callTokensToSend",
            "nameLocation": "15719:17:63",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8599,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8588,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "15754:8:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 8630,
                  "src": "15746:16:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8587,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15746:7:63",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8590,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "15780:4:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 8630,
                  "src": "15772:12:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8589,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15772:7:63",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8592,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "15802:2:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 8630,
                  "src": "15794:10:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8591,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15794:7:63",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8594,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "15822:6:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 8630,
                  "src": "15814:14:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8593,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15814:7:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8596,
                  "mutability": "mutable",
                  "name": "userData",
                  "nameLocation": "15851:8:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 8630,
                  "src": "15838:21:63",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8595,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "15838:5:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8598,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "15882:12:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 8630,
                  "src": "15869:25:63",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8597,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "15869:5:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15736:164:63"
            },
            "returnParameters": {
              "id": 8600,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15909:0:63"
            },
            "scope": 8702,
            "src": "15710:472:63",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 8687,
              "nodeType": "Block",
              "src": "17106:441:63",
              "statements": [
                {
                  "assignments": [
                    8649
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8649,
                      "mutability": "mutable",
                      "name": "implementer",
                      "nameLocation": "17124:11:63",
                      "nodeType": "VariableDeclaration",
                      "scope": 8687,
                      "src": "17116:19:63",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 8648,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "17116:7:63",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8655,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 8652,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8637,
                        "src": "17180:2:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8653,
                        "name": "_TOKENS_RECIPIENT_INTERFACE_HASH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7610,
                        "src": "17184:32:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 8650,
                        "name": "_ERC1820_REGISTRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7590,
                        "src": "17138:17:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1820Registry_$13993",
                          "typeString": "contract IERC1820Registry"
                        }
                      },
                      "id": 8651,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17156:23:63",
                      "memberName": "getInterfaceImplementer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13942,
                      "src": "17138:41:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (address,bytes32) view external returns (address)"
                      }
                    },
                    "id": 8654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17138:79:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17116:101:63"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 8661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8656,
                      "name": "implementer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8649,
                      "src": "17231:11:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 8659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17254:1:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 8658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "17246:7:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 8657,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "17246:7:63",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 8660,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17246:10:63",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "17231:25:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "id": 8675,
                      "name": "requireReceptionAck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8645,
                      "src": "17389:19:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 8685,
                    "nodeType": "IfStatement",
                    "src": "17385:156:63",
                    "trueBody": {
                      "id": 8684,
                      "nodeType": "Block",
                      "src": "17410:131:63",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 8680,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "17432:16:63",
                                "subExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 8677,
                                      "name": "to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 8637,
                                      "src": "17433:2:63",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 8678,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "17436:10:63",
                                    "memberName": "isContract",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 12194,
                                    "src": "17433:13:63",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
                                      "typeString": "function (address) view returns (bool)"
                                    }
                                  },
                                  "id": 8679,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "17433:15:63",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "4552433737373a20746f6b656e20726563697069656e7420636f6e747261637420686173206e6f20696d706c656d656e74657220666f7220455243373737546f6b656e73526563697069656e74",
                                "id": 8681,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "17450:79:63",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_9ee9d43e266ccfb7408c78038627d2c5b376a4a82e9fcfbfea2a9c63dc07fa80",
                                  "typeString": "literal_string \"ERC777: token recipient contract has no implementer for ERC777TokensRecipient\""
                                },
                                "value": "ERC777: token recipient contract has no implementer for ERC777TokensRecipient"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_9ee9d43e266ccfb7408c78038627d2c5b376a4a82e9fcfbfea2a9c63dc07fa80",
                                  "typeString": "literal_string \"ERC777: token recipient contract has no implementer for ERC777TokensRecipient\""
                                }
                              ],
                              "id": 8676,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "17424:7:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 8682,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17424:106:63",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 8683,
                          "nodeType": "ExpressionStatement",
                          "src": "17424:106:63"
                        }
                      ]
                    }
                  },
                  "id": 8686,
                  "nodeType": "IfStatement",
                  "src": "17227:314:63",
                  "trueBody": {
                    "id": 8674,
                    "nodeType": "Block",
                    "src": "17258:121:63",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 8666,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8633,
                              "src": "17317:8:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 8667,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8635,
                              "src": "17327:4:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 8668,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8637,
                              "src": "17333:2:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 8669,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8639,
                              "src": "17337:6:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 8670,
                              "name": "userData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8641,
                              "src": "17345:8:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 8671,
                              "name": "operatorData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8643,
                              "src": "17355:12:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 8663,
                                  "name": "implementer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8649,
                                  "src": "17289:11:63",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 8662,
                                "name": "IERC777Recipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13883,
                                "src": "17272:16:63",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC777Recipient_$13883_$",
                                  "typeString": "type(contract IERC777Recipient)"
                                }
                              },
                              "id": 8664,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17272:29:63",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC777Recipient_$13883",
                                "typeString": "contract IERC777Recipient"
                              }
                            },
                            "id": 8665,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "17302:14:63",
                            "memberName": "tokensReceived",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13882,
                            "src": "17272:44:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,address,uint256,bytes memory,bytes memory) external"
                            }
                          },
                          "id": 8672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17272:96:63",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8673,
                        "nodeType": "ExpressionStatement",
                        "src": "17272:96:63"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 8631,
              "nodeType": "StructuredDocumentation",
              "src": "16188:678:63",
              "text": " @dev Call to.tokensReceived() if the interface is registered. Reverts if the recipient is a contract but\n tokensReceived() was not registered for the recipient\n @param operator address operator requesting the transfer\n @param from address token holder address\n @param to address recipient address\n @param amount uint256 amount of tokens to transfer\n @param userData bytes extra information provided by the token holder (if any)\n @param operatorData bytes extra information provided by the operator (if any)\n @param requireReceptionAck if true, contract recipients are required to implement ERC777TokensRecipient"
            },
            "id": 8688,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_callTokensReceived",
            "nameLocation": "16880:19:63",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8646,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8633,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "16917:8:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 8688,
                  "src": "16909:16:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8632,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16909:7:63",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8635,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "16943:4:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 8688,
                  "src": "16935:12:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8634,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16935:7:63",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8637,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "16965:2:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 8688,
                  "src": "16957:10:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8636,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16957:7:63",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8639,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "16985:6:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 8688,
                  "src": "16977:14:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8638,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16977:7:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8641,
                  "mutability": "mutable",
                  "name": "userData",
                  "nameLocation": "17014:8:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 8688,
                  "src": "17001:21:63",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8640,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "17001:5:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8643,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "17045:12:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 8688,
                  "src": "17032:25:63",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8642,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "17032:5:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8645,
                  "mutability": "mutable",
                  "name": "requireReceptionAck",
                  "nameLocation": "17072:19:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 8688,
                  "src": "17067:24:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8644,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "17067:4:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16899:198:63"
            },
            "returnParameters": {
              "id": 8647,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17106:0:63"
            },
            "scope": 8702,
            "src": "16871:676:63",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 8700,
              "nodeType": "Block",
              "src": "18320:2:63",
              "statements": []
            },
            "documentation": {
              "id": 8689,
              "nodeType": "StructuredDocumentation",
              "src": "17553:617:63",
              "text": " @dev Hook that is called before any token transfer. This includes\n calls to {send}, {transfer}, {operatorSend}, minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 8701,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "18184:20:63",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8698,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8691,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "18222:8:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 8701,
                  "src": "18214:16:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8690,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18214:7:63",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8693,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "18248:4:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 8701,
                  "src": "18240:12:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8692,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18240:7:63",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8695,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "18270:2:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 8701,
                  "src": "18262:10:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8694,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18262:7:63",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8697,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "18290:6:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 8701,
                  "src": "18282:14:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8696,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18282:7:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18204:98:63"
            },
            "returnParameters": {
              "id": 8699,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18320:0:63"
            },
            "scope": 8702,
            "src": "18175:147:63",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 8703,
        "src": "1073:17251:63",
        "usedErrors": [],
        "usedEvents": [
          5397,
          5406,
          13826,
          13838,
          13850,
          13856,
          13862
        ]
      }
    ],
    "src": "92:18233:63"
  },
  "bytecode": "60806040523480156200001157600080fd5b5060405162001dbe38038062001dbe83398101604081905262000034916200035e565b600262000042848262000504565b50600362000051838262000504565b5080516200006790600490602084019062000207565b5060005b8151811015620000d757600160056000848481518110620000905762000090620005d0565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580620000ce81620005e6565b9150506200006b565b506040516329965a1d60e01b815230600482018190527fac7fbab5f54a3ca8194167523c6753bfeb96a445279294b6125b68cce217705460248301526044820152731820a4b7618bde71dce8cdc73aab6c95905fad24906329965a1d90606401600060405180830381600087803b1580156200015257600080fd5b505af115801562000167573d6000803e3d6000fd5b50506040516329965a1d60e01b815230600482018190527faea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a60248301526044820152731820a4b7618bde71dce8cdc73aab6c95905fad2492506329965a1d9150606401600060405180830381600087803b158015620001e557600080fd5b505af1158015620001fa573d6000803e3d6000fd5b505050505050506200060e565b8280548282559060005260206000209081019282156200025f579160200282015b828111156200025f57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000228565b506200026d92915062000271565b5090565b5b808211156200026d576000815560010162000272565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715620002c957620002c962000288565b604052919050565b600082601f830112620002e357600080fd5b81516001600160401b03811115620002ff57620002ff62000288565b602062000315601f8301601f191682016200029e565b82815285828487010111156200032a57600080fd5b60005b838110156200034a5785810183015182820184015282016200032d565b506000928101909101919091529392505050565b6000806000606084860312156200037457600080fd5b83516001600160401b03808211156200038c57600080fd5b6200039a87838801620002d1565b9450602091508186015181811115620003b257600080fd5b620003c088828901620002d1565b945050604086015181811115620003d657600080fd5b8601601f81018813620003e857600080fd5b805182811115620003fd57620003fd62000288565b8060051b9250620004108484016200029e565b818152928201840192848101908a8511156200042b57600080fd5b928501925b848410156200046557835192506001600160a01b0383168314620004545760008081fd5b828252928501929085019062000430565b8096505050505050509250925092565b600181811c908216806200048a57607f821691505b602082108103620004ab57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620004ff57600081815260208120601f850160051c81016020861015620004da5750805b601f850160051c820191505b81811015620004fb57828155600101620004e6565b5050505b505050565b81516001600160401b0381111562000520576200052062000288565b620005388162000531845462000475565b84620004b1565b602080601f831160018114620005705760008415620005575750858301515b600019600386901b1c1916600185901b178555620004fb565b600085815260208120601f198616915b82811015620005a15788860151825594840194600190910190840162000580565b5085821015620005c05787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b6000600182016200060757634e487b7160e01b600052601160045260246000fd5b5060010190565b6117a0806200061e6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063959b8c3f116100a2578063d95b637111610071578063d95b63711461022b578063dd62ed3e1461023e578063fad8b32a14610277578063fc673c4f1461028a578063fe9d93031461029d57600080fd5b8063959b8c3f146101ea57806395d89b41146101fd5780639bd9bbc614610205578063a9059cbb1461021857600080fd5b806323b872dd116100e957806323b872dd14610183578063313ce56714610196578063556f0dc7146101a557806362ad1b83146101ac57806370a08231146101c157600080fd5b806306e485381461011b57806306fdde0314610139578063095ea7b31461014e57806318160ddd14610171575b600080fd5b6101236102b0565b60405161013091906111e1565b60405180910390f35b610141610312565b6040516101309190611274565b61016161015c36600461129f565b61039b565b6040519015158152602001610130565b6001545b604051908152602001610130565b6101616101913660046112cb565b6103b5565b60405160128152602001610130565b6001610175565b6101bf6101ba3660046113af565b61057e565b005b6101756101cf366004611442565b6001600160a01b031660009081526020819052604090205490565b6101bf6101f8366004611442565b6105ba565b6101416106d7565b6101bf61021336600461145f565b6106e6565b61016161022636600461129f565b610709565b6101616102393660046114b8565b6107bc565b61017561024c3660046114b8565b6001600160a01b03918216600090815260086020908152604080832093909416825291909152205490565b6101bf610285366004611442565b61085e565b6101bf6102983660046114f1565b610979565b6101bf6102ab366004611571565b6109b1565b6060600480548060200260200160405190810160405280929190818152602001828054801561030857602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116102ea575b5050505050905090565b606060028054610321906115b8565b80601f016020809104026020016040519081016040528092919081815260200182805461034d906115b8565b80156103085780601f1061036f57610100808354040283529160200191610308565b820191906000526020600020905b81548152906001019060200180831161037d57509395945050505050565b6000336103a98185856109d0565b60019150505b92915050565b60006001600160a01b0383166103e65760405162461bcd60e51b81526004016103dd906115f2565b60405180910390fd5b6001600160a01b03841661044b5760405162461bcd60e51b815260206004820152602660248201527f4552433737373a207472616e736665722066726f6d20746865207a65726f206160448201526564647265737360d01b60648201526084016103dd565b600033905061047c818686866040518060200160405280600081525060405180602001604052806000815250610af7565b6001600160a01b03808616600090815260086020908152604080832093851683529290522054838110156105045760405162461bcd60e51b815260206004820152602960248201527f4552433737373a207472616e7366657220616d6f756e74206578636565647320604482015268616c6c6f77616e636560b81b60648201526084016103dd565b6105188683610513878561164c565b6109d0565b610544828787876040518060200160405280600081525060405180602001604052806000815250610c1f565b6105728287878760405180602001604052806000815250604051806020016040528060008152506000610d85565b50600195945050505050565b61058833866107bc565b6105a45760405162461bcd60e51b81526004016103dd9061165f565b6105b385858585856001610f4a565b5050505050565b6001600160a01b038116330361061e5760405162461bcd60e51b8152602060048201526024808201527f4552433737373a20617574686f72697a696e672073656c66206173206f70657260448201526330ba37b960e11b60648201526084016103dd565b6001600160a01b03811660009081526005602052604090205460ff161561066f573360009081526007602090815260408083206001600160a01b03851684529091529020805460ff1916905561069e565b3360009081526006602090815260408083206001600160a01b03851684529091529020805460ff191660011790555b60405133906001600160a01b038316907ff4caeb2d6ca8932a215a353d0703c326ec2d81fc68170f320eb2ab49e9df61f990600090a350565b606060038054610321906115b8565b61070433848484604051806020016040528060008152506001610f4a565b505050565b60006001600160a01b0383166107315760405162461bcd60e51b81526004016103dd906115f2565b6000339050610762818286866040518060200160405280600081525060405180602001604052806000815250610af7565b61078e818286866040518060200160405280600081525060405180602001604052806000815250610c1f565b6103a98182868660405180602001604052806000815250604051806020016040528060008152506000610d85565b6000816001600160a01b0316836001600160a01b0316148061082757506001600160a01b03831660009081526005602052604090205460ff16801561082757506001600160a01b0380831660009081526007602090815260408083209387168352929052205460ff16155b8061085757506001600160a01b0380831660009081526006602090815260408083209387168352929052205460ff165b9392505050565b336001600160a01b038216036108c05760405162461bcd60e51b815260206004820152602160248201527f4552433737373a207265766f6b696e672073656c66206173206f70657261746f6044820152603960f91b60648201526084016103dd565b6001600160a01b03811660009081526005602052604090205460ff1615610914573360009081526007602090815260408083206001600160a01b03851684529091529020805460ff19166001179055610940565b3360009081526006602090815260408083206001600160a01b03851684529091529020805460ff191690555b60405133906001600160a01b038316907f50546e66e5f44d728365dc3908c63bc5cfeeab470722c1677e3073a6ac294aa190600090a350565b61098333856107bc565b61099f5760405162461bcd60e51b81526004016103dd9061165f565b6109ab8484848461102d565b50505050565b6109cc3383836040518060200160405280600081525061102d565b5050565b6001600160a01b038316610a345760405162461bcd60e51b815260206004820152602560248201527f4552433737373a20617070726f76652066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103dd565b6001600160a01b038216610a965760405162461bcd60e51b815260206004820152602360248201527f4552433737373a20617070726f766520746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103dd565b6001600160a01b0383811660008181526008602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60405163555ddc6560e11b81526001600160a01b03861660048201527f29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe8956024820152600090731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca90604401602060405180830381865afa158015610b78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9c91906116ab565b90506001600160a01b03811615610c1657604051633ad5cbc160e11b81526001600160a01b038216906375ab978290610be3908a908a908a908a908a908a906004016116c8565b600060405180830381600087803b158015610bfd57600080fd5b505af1158015610c11573d6000803e3d6000fd5b505050505b50505050505050565b6001600160a01b03851660009081526020819052604090205483811015610c985760405162461bcd60e51b815260206004820152602760248201527f4552433737373a207472616e7366657220616d6f756e7420657863656564732060448201526662616c616e636560c81b60648201526084016103dd565b6001600160a01b03808716600090815260208190526040808220878503905591871681529081208054869290610ccf908490611722565b92505081905550846001600160a01b0316866001600160a01b0316886001600160a01b03167f06b541ddaa720db2b10a4d0cdac39b8d360425fc073085fac19bc82614677987878787604051610d2793929190611735565b60405180910390a4846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef86604051610d7491815260200190565b60405180910390a350505050505050565b60405163555ddc6560e11b81526001600160a01b03861660048201527fb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b6024820152600090731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca90604401602060405180830381865afa158015610e06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2a91906116ab565b90506001600160a01b03811615610ea6576040516223de2960e01b81526001600160a01b038216906223de2990610e6f908b908b908b908b908b908b906004016116c8565b600060405180830381600087803b158015610e8957600080fd5b505af1158015610e9d573d6000803e3d6000fd5b50505050610f40565b8115610f40576001600160a01b0386163b15610f405760405162461bcd60e51b815260206004820152604d60248201527f4552433737373a20746f6b656e20726563697069656e7420636f6e747261637460448201527f20686173206e6f20696d706c656d656e74657220666f7220455243373737546f60648201526c1ad95b9cd49958da5c1a595b9d609a1b608482015260a4016103dd565b5050505050505050565b6001600160a01b038616610fab5760405162461bcd60e51b815260206004820152602260248201527f4552433737373a2073656e642066726f6d20746865207a65726f206164647265604482015261737360f01b60648201526084016103dd565b6001600160a01b0385166110015760405162461bcd60e51b815260206004820181905260248201527f4552433737373a2073656e6420746f20746865207a65726f206164647265737360448201526064016103dd565b33611010818888888888610af7565b61101e818888888888610c1f565b610c1681888888888888610d85565b6001600160a01b03841661108e5760405162461bcd60e51b815260206004820152602260248201527f4552433737373a206275726e2066726f6d20746865207a65726f206164647265604482015261737360f01b60648201526084016103dd565b3361109e81866000878787610af7565b6001600160a01b038516600090815260208190526040902054848110156111135760405162461bcd60e51b815260206004820152602360248201527f4552433737373a206275726e20616d6f756e7420657863656564732062616c616044820152626e636560e81b60648201526084016103dd565b6001600160a01b038616600090815260208190526040812086830390556001805487929061114290849061164c565b92505081905550856001600160a01b0316826001600160a01b03167fa78a9be3a7b862d26933ad85fb11d80ef66b8f972d7cbba06621d583943a409887878760405161119093929190611735565b60405180910390a36040518581526000906001600160a01b038816907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050505050565b6020808252825182820181905260009190848201906040850190845b818110156112225783516001600160a01b0316835292840192918401916001016111fd565b50909695505050505050565b6000815180845260005b8181101561125457602081850181015186830182015201611238565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610857602083018461122e565b6001600160a01b038116811461129c57600080fd5b50565b600080604083850312156112b257600080fd5b82356112bd81611287565b946020939093013593505050565b6000806000606084860312156112e057600080fd5b83356112eb81611287565b925060208401356112fb81611287565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261133357600080fd5b813567ffffffffffffffff8082111561134e5761134e61130c565b604051601f8301601f19908116603f011681019082821181831017156113765761137661130c565b8160405283815286602085880101111561138f57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600060a086880312156113c757600080fd5b85356113d281611287565b945060208601356113e281611287565b935060408601359250606086013567ffffffffffffffff8082111561140657600080fd5b61141289838a01611322565b9350608088013591508082111561142857600080fd5b5061143588828901611322565b9150509295509295909350565b60006020828403121561145457600080fd5b813561085781611287565b60008060006060848603121561147457600080fd5b833561147f81611287565b925060208401359150604084013567ffffffffffffffff8111156114a257600080fd5b6114ae86828701611322565b9150509250925092565b600080604083850312156114cb57600080fd5b82356114d681611287565b915060208301356114e681611287565b809150509250929050565b6000806000806080858703121561150757600080fd5b843561151281611287565b935060208501359250604085013567ffffffffffffffff8082111561153657600080fd5b61154288838901611322565b9350606087013591508082111561155857600080fd5b5061156587828801611322565b91505092959194509250565b6000806040838503121561158457600080fd5b82359150602083013567ffffffffffffffff8111156115a257600080fd5b6115ae85828601611322565b9150509250929050565b600181811c908216806115cc57607f821691505b6020821081036115ec57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526024908201527f4552433737373a207472616e7366657220746f20746865207a65726f206164646040820152637265737360e01b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b818103818111156103af576103af611636565b6020808252602c908201527f4552433737373a2063616c6c6572206973206e6f7420616e206f70657261746f60408201526b39103337b9103437b63232b960a11b606082015260800190565b6000602082840312156116bd57600080fd5b815161085781611287565b6001600160a01b0387811682528681166020830152851660408201526060810184905260c0608082018190526000906117039083018561122e565b82810360a0840152611715818561122e565b9998505050505050505050565b808201808211156103af576103af611636565b83815260606020820152600061174e606083018561122e565b8281036040840152611760818561122e565b969550505050505056fea2646970667358221220bb91b89e2fefdfb370e93621db563bde3062327eec33b5a088e6da3c6291658864736f6c63430008150033",
  "bytecodeSha1": "e13e6d1c319f95e370fbd779691691ea3dd70aea",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.21+commit.d9974bed"
  },
  "contractName": "ERC777",
  "coverageMap": {
    "branches": {
      "44": {},
      "63": {
        "ERC777._approve": {
          "73": [
            14995,
            15015,
            true
          ],
          "74": [
            15075,
            15096,
            true
          ]
        },
        "ERC777._burn": {
          "81": [
            13470,
            13488,
            true
          ],
          "82": [
            13820,
            13841,
            true
          ]
        },
        "ERC777._callTokensReceived": {
          "77": [
            17231,
            17256,
            false
          ],
          "78": [
            17389,
            17408,
            false
          ]
        },
        "ERC777._callTokensToSend": {
          "75": [
            16033,
            16058,
            false
          ]
        },
        "ERC777._move": {
          "76": [
            14434,
            14455,
            true
          ]
        },
        "ERC777._send": {
          "79": [
            12573,
            12591,
            true
          ],
          "80": [
            12648,
            12664,
            true
          ]
        },
        "ERC777.authorizeOperator": {
          "67": [
            5911,
            5935,
            true
          ],
          "68": [
            5991,
            6018,
            false
          ]
        },
        "ERC777.operatorBurn": {
          "72": [
            7686,
            7722,
            true
          ]
        },
        "ERC777.operatorSend": {
          "66": [
            7225,
            7260,
            true
          ]
        },
        "ERC777.revokeOperator": {
          "70": [
            6384,
            6408,
            true
          ],
          "71": [
            6461,
            6488,
            false
          ]
        },
        "ERC777.transfer": {
          "69": [
            4797,
            4820,
            true
          ]
        },
        "ERC777.transferFrom": {
          "63": [
            9089,
            9112,
            true
          ],
          "64": [
            9171,
            9191,
            true
          ],
          "65": [
            9431,
            9457,
            true
          ]
        }
      },
      "64": {},
      "65": {},
      "66": {},
      "68": {},
      "70": {},
      "79": {}
    },
    "statements": {
      "44": {},
      "63": {
        "ERC777._approve": {
          "38": [
            14987,
            15057
          ],
          "39": [
            15067,
            15136
          ],
          "40": [
            15147,
            15183
          ],
          "41": [
            15193,
            15230
          ]
        },
        "ERC777._burn": {
          "56": [
            13462,
            13527
          ],
          "57": [
            13580,
            13653
          ],
          "58": [
            13812,
            13881
          ],
          "59": [
            13915,
            13953
          ],
          "60": [
            13973,
            13995
          ],
          "61": [
            14006,
            14061
          ],
          "62": [
            14071,
            14110
          ]
        },
        "ERC777._callTokensReceived": {
          "48": [
            17272,
            17368
          ],
          "49": [
            17424,
            17530
          ]
        },
        "ERC777._callTokensToSend": {
          "42": [
            16074,
            16165
          ]
        },
        "ERC777._move": {
          "43": [
            14426,
            14499
          ],
          "44": [
            14533,
            14571
          ],
          "45": [
            14591,
            14614
          ],
          "46": [
            14625,
            14686
          ],
          "47": [
            14696,
            14727
          ]
        },
        "ERC777._send": {
          "51": [
            12565,
            12630
          ],
          "52": [
            12640,
            12701
          ],
          "53": [
            12754,
            12823
          ],
          "54": [
            12834,
            12891
          ],
          "55": [
            12902,
            12994
          ]
        },
        "ERC777.allowance": {
          "4": [
            8178,
            8213
          ]
        },
        "ERC777.approve": {
          "8": [
            8495,
            8527
          ],
          "9": [
            8537,
            8548
          ]
        },
        "ERC777.authorizeOperator": {
          "20": [
            5903,
            5976
          ],
          "21": [
            6034,
            6089
          ],
          "22": [
            6120,
            6161
          ],
          "23": [
            6182,
            6229
          ]
        },
        "ERC777.balanceOf": {
          "3": [
            4097,
            4126
          ]
        },
        "ERC777.burn": {
          "37": [
            5339,
            5376
          ]
        },
        "ERC777.decimals": {
          "1": [
            3473,
            3482
          ]
        },
        "ERC777.defaultOperators": {
          "5": [
            6863,
            6892
          ]
        },
        "ERC777.granularity": {
          "2": [
            3684,
            3692
          ]
        },
        "ERC777.isOperatorFor": {
          "30": [
            5562,
            5750
          ]
        },
        "ERC777.name": {
          "6": [
            3046,
            3058
          ]
        },
        "ERC777.operatorBurn": {
          "35": [
            7678,
            7771
          ],
          "36": [
            7781,
            7823
          ]
        },
        "ERC777.operatorSend": {
          "18": [
            7217,
            7309
          ],
          "19": [
            7319,
            7377
          ]
        },
        "ERC777.revokeOperator": {
          "31": [
            6376,
            6446
          ],
          "32": [
            6504,
            6559
          ],
          "33": [
            6590,
            6631
          ],
          "34": [
            6652,
            6696
          ]
        },
        "ERC777.send": {
          "25": [
            4395,
            4449
          ]
        },
        "ERC777.symbol": {
          "24": [
            3202,
            3216
          ]
        },
        "ERC777.totalSupply": {
          "0": [
            3857,
            3876
          ]
        },
        "ERC777.transfer": {
          "26": [
            4789,
            4861
          ],
          "27": [
            4910,
            4966
          ],
          "28": [
            4977,
            5021
          ],
          "29": [
            5032,
            5097
          ]
        },
        "ERC777.transferFrom": {
          "10": [
            9081,
            9153
          ],
          "11": [
            9163,
            9234
          ],
          "12": [
            9286,
            9347
          ],
          "13": [
            9423,
            9503
          ],
          "14": [
            9513,
            9565
          ],
          "15": [
            9576,
            9625
          ],
          "16": [
            9636,
            9706
          ],
          "17": [
            9717,
            9728
          ]
        }
      },
      "64": {},
      "65": {},
      "66": {},
      "68": {
        "Address.isContract": {
          "50": [
            1443,
            1473
          ]
        }
      },
      "70": {
        "Context._msgSender": {
          "7": [
            712,
            729
          ]
        }
      },
      "79": {}
    }
  },
  "dependencies": [
    "Address",
    "Context",
    "IERC1820Registry",
    "IERC20",
    "IERC777",
    "IERC777Recipient",
    "IERC777Sender"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101165760003560e01c8063959b8c3f116100a2578063d95b637111610071578063d95b63711461022b578063dd62ed3e1461023e578063fad8b32a14610277578063fc673c4f1461028a578063fe9d93031461029d57600080fd5b8063959b8c3f146101ea57806395d89b41146101fd5780639bd9bbc614610205578063a9059cbb1461021857600080fd5b806323b872dd116100e957806323b872dd14610183578063313ce56714610196578063556f0dc7146101a557806362ad1b83146101ac57806370a08231146101c157600080fd5b806306e485381461011b57806306fdde0314610139578063095ea7b31461014e57806318160ddd14610171575b600080fd5b6101236102b0565b60405161013091906111e1565b60405180910390f35b610141610312565b6040516101309190611274565b61016161015c36600461129f565b61039b565b6040519015158152602001610130565b6001545b604051908152602001610130565b6101616101913660046112cb565b6103b5565b60405160128152602001610130565b6001610175565b6101bf6101ba3660046113af565b61057e565b005b6101756101cf366004611442565b6001600160a01b031660009081526020819052604090205490565b6101bf6101f8366004611442565b6105ba565b6101416106d7565b6101bf61021336600461145f565b6106e6565b61016161022636600461129f565b610709565b6101616102393660046114b8565b6107bc565b61017561024c3660046114b8565b6001600160a01b03918216600090815260086020908152604080832093909416825291909152205490565b6101bf610285366004611442565b61085e565b6101bf6102983660046114f1565b610979565b6101bf6102ab366004611571565b6109b1565b6060600480548060200260200160405190810160405280929190818152602001828054801561030857602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116102ea575b5050505050905090565b606060028054610321906115b8565b80601f016020809104026020016040519081016040528092919081815260200182805461034d906115b8565b80156103085780601f1061036f57610100808354040283529160200191610308565b820191906000526020600020905b81548152906001019060200180831161037d57509395945050505050565b6000336103a98185856109d0565b60019150505b92915050565b60006001600160a01b0383166103e65760405162461bcd60e51b81526004016103dd906115f2565b60405180910390fd5b6001600160a01b03841661044b5760405162461bcd60e51b815260206004820152602660248201527f4552433737373a207472616e736665722066726f6d20746865207a65726f206160448201526564647265737360d01b60648201526084016103dd565b600033905061047c818686866040518060200160405280600081525060405180602001604052806000815250610af7565b6001600160a01b03808616600090815260086020908152604080832093851683529290522054838110156105045760405162461bcd60e51b815260206004820152602960248201527f4552433737373a207472616e7366657220616d6f756e74206578636565647320604482015268616c6c6f77616e636560b81b60648201526084016103dd565b6105188683610513878561164c565b6109d0565b610544828787876040518060200160405280600081525060405180602001604052806000815250610c1f565b6105728287878760405180602001604052806000815250604051806020016040528060008152506000610d85565b50600195945050505050565b61058833866107bc565b6105a45760405162461bcd60e51b81526004016103dd9061165f565b6105b385858585856001610f4a565b5050505050565b6001600160a01b038116330361061e5760405162461bcd60e51b8152602060048201526024808201527f4552433737373a20617574686f72697a696e672073656c66206173206f70657260448201526330ba37b960e11b60648201526084016103dd565b6001600160a01b03811660009081526005602052604090205460ff161561066f573360009081526007602090815260408083206001600160a01b03851684529091529020805460ff1916905561069e565b3360009081526006602090815260408083206001600160a01b03851684529091529020805460ff191660011790555b60405133906001600160a01b038316907ff4caeb2d6ca8932a215a353d0703c326ec2d81fc68170f320eb2ab49e9df61f990600090a350565b606060038054610321906115b8565b61070433848484604051806020016040528060008152506001610f4a565b505050565b60006001600160a01b0383166107315760405162461bcd60e51b81526004016103dd906115f2565b6000339050610762818286866040518060200160405280600081525060405180602001604052806000815250610af7565b61078e818286866040518060200160405280600081525060405180602001604052806000815250610c1f565b6103a98182868660405180602001604052806000815250604051806020016040528060008152506000610d85565b6000816001600160a01b0316836001600160a01b0316148061082757506001600160a01b03831660009081526005602052604090205460ff16801561082757506001600160a01b0380831660009081526007602090815260408083209387168352929052205460ff16155b8061085757506001600160a01b0380831660009081526006602090815260408083209387168352929052205460ff165b9392505050565b336001600160a01b038216036108c05760405162461bcd60e51b815260206004820152602160248201527f4552433737373a207265766f6b696e672073656c66206173206f70657261746f6044820152603960f91b60648201526084016103dd565b6001600160a01b03811660009081526005602052604090205460ff1615610914573360009081526007602090815260408083206001600160a01b03851684529091529020805460ff19166001179055610940565b3360009081526006602090815260408083206001600160a01b03851684529091529020805460ff191690555b60405133906001600160a01b038316907f50546e66e5f44d728365dc3908c63bc5cfeeab470722c1677e3073a6ac294aa190600090a350565b61098333856107bc565b61099f5760405162461bcd60e51b81526004016103dd9061165f565b6109ab8484848461102d565b50505050565b6109cc3383836040518060200160405280600081525061102d565b5050565b6001600160a01b038316610a345760405162461bcd60e51b815260206004820152602560248201527f4552433737373a20617070726f76652066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103dd565b6001600160a01b038216610a965760405162461bcd60e51b815260206004820152602360248201527f4552433737373a20617070726f766520746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103dd565b6001600160a01b0383811660008181526008602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60405163555ddc6560e11b81526001600160a01b03861660048201527f29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe8956024820152600090731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca90604401602060405180830381865afa158015610b78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9c91906116ab565b90506001600160a01b03811615610c1657604051633ad5cbc160e11b81526001600160a01b038216906375ab978290610be3908a908a908a908a908a908a906004016116c8565b600060405180830381600087803b158015610bfd57600080fd5b505af1158015610c11573d6000803e3d6000fd5b505050505b50505050505050565b6001600160a01b03851660009081526020819052604090205483811015610c985760405162461bcd60e51b815260206004820152602760248201527f4552433737373a207472616e7366657220616d6f756e7420657863656564732060448201526662616c616e636560c81b60648201526084016103dd565b6001600160a01b03808716600090815260208190526040808220878503905591871681529081208054869290610ccf908490611722565b92505081905550846001600160a01b0316866001600160a01b0316886001600160a01b03167f06b541ddaa720db2b10a4d0cdac39b8d360425fc073085fac19bc82614677987878787604051610d2793929190611735565b60405180910390a4846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef86604051610d7491815260200190565b60405180910390a350505050505050565b60405163555ddc6560e11b81526001600160a01b03861660048201527fb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b6024820152600090731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca90604401602060405180830381865afa158015610e06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2a91906116ab565b90506001600160a01b03811615610ea6576040516223de2960e01b81526001600160a01b038216906223de2990610e6f908b908b908b908b908b908b906004016116c8565b600060405180830381600087803b158015610e8957600080fd5b505af1158015610e9d573d6000803e3d6000fd5b50505050610f40565b8115610f40576001600160a01b0386163b15610f405760405162461bcd60e51b815260206004820152604d60248201527f4552433737373a20746f6b656e20726563697069656e7420636f6e747261637460448201527f20686173206e6f20696d706c656d656e74657220666f7220455243373737546f60648201526c1ad95b9cd49958da5c1a595b9d609a1b608482015260a4016103dd565b5050505050505050565b6001600160a01b038616610fab5760405162461bcd60e51b815260206004820152602260248201527f4552433737373a2073656e642066726f6d20746865207a65726f206164647265604482015261737360f01b60648201526084016103dd565b6001600160a01b0385166110015760405162461bcd60e51b815260206004820181905260248201527f4552433737373a2073656e6420746f20746865207a65726f206164647265737360448201526064016103dd565b33611010818888888888610af7565b61101e818888888888610c1f565b610c1681888888888888610d85565b6001600160a01b03841661108e5760405162461bcd60e51b815260206004820152602260248201527f4552433737373a206275726e2066726f6d20746865207a65726f206164647265604482015261737360f01b60648201526084016103dd565b3361109e81866000878787610af7565b6001600160a01b038516600090815260208190526040902054848110156111135760405162461bcd60e51b815260206004820152602360248201527f4552433737373a206275726e20616d6f756e7420657863656564732062616c616044820152626e636560e81b60648201526084016103dd565b6001600160a01b038616600090815260208190526040812086830390556001805487929061114290849061164c565b92505081905550856001600160a01b0316826001600160a01b03167fa78a9be3a7b862d26933ad85fb11d80ef66b8f972d7cbba06621d583943a409887878760405161119093929190611735565b60405180910390a36040518581526000906001600160a01b038816907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050505050565b6020808252825182820181905260009190848201906040850190845b818110156112225783516001600160a01b0316835292840192918401916001016111fd565b50909695505050505050565b6000815180845260005b8181101561125457602081850181015186830182015201611238565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610857602083018461122e565b6001600160a01b038116811461129c57600080fd5b50565b600080604083850312156112b257600080fd5b82356112bd81611287565b946020939093013593505050565b6000806000606084860312156112e057600080fd5b83356112eb81611287565b925060208401356112fb81611287565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261133357600080fd5b813567ffffffffffffffff8082111561134e5761134e61130c565b604051601f8301601f19908116603f011681019082821181831017156113765761137661130c565b8160405283815286602085880101111561138f57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600060a086880312156113c757600080fd5b85356113d281611287565b945060208601356113e281611287565b935060408601359250606086013567ffffffffffffffff8082111561140657600080fd5b61141289838a01611322565b9350608088013591508082111561142857600080fd5b5061143588828901611322565b9150509295509295909350565b60006020828403121561145457600080fd5b813561085781611287565b60008060006060848603121561147457600080fd5b833561147f81611287565b925060208401359150604084013567ffffffffffffffff8111156114a257600080fd5b6114ae86828701611322565b9150509250925092565b600080604083850312156114cb57600080fd5b82356114d681611287565b915060208301356114e681611287565b809150509250929050565b6000806000806080858703121561150757600080fd5b843561151281611287565b935060208501359250604085013567ffffffffffffffff8082111561153657600080fd5b61154288838901611322565b9350606087013591508082111561155857600080fd5b5061156587828801611322565b91505092959194509250565b6000806040838503121561158457600080fd5b82359150602083013567ffffffffffffffff8111156115a257600080fd5b6115ae85828601611322565b9150509250929050565b600181811c908216806115cc57607f821691505b6020821081036115ec57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526024908201527f4552433737373a207472616e7366657220746f20746865207a65726f206164646040820152637265737360e01b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b818103818111156103af576103af611636565b6020808252602c908201527f4552433737373a2063616c6c6572206973206e6f7420616e206f70657261746f60408201526b39103337b9103437b63232b960a11b606082015260800190565b6000602082840312156116bd57600080fd5b815161085781611287565b6001600160a01b0387811682528681166020830152851660408201526060810184905260c0608082018190526000906117039083018561122e565b82810360a0840152611715818561122e565b9998505050505050505050565b808201808211156103af576103af611636565b83815260606020820152600061174e606083018561122e565b8281036040840152611760818561122e565b969550505050505056fea2646970667358221220bb91b89e2fefdfb370e93621db563bde3062327eec33b5a088e6da3c6291658864736f6c63430008150033",
  "deployedSourceMap": "1073:17251:63:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6769:130;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2967:98;;;:::i;:::-;;;;;;;:::i;8358:197::-;;;;;;:::i;:::-;;:::i;:::-;;;1951:14:102;;1944:22;1926:41;;1914:2;1899:18;8358:197:63;1786:187:102;3760:123:63;3864:12;;3760:123;;;2124:25:102;;;2112:2;2097:18;3760:123:63;1978:177:102;8929:806:63;;;;;;:::i;:::-;;:::i;3407:82::-;;;3480:2;2763:36:102;;2751:2;2736:18;3407:82:63;2621:184:102;3604:95:63;3691:1;3604:95;;7018:366;;;;;;:::i;:::-;;:::i;:::-;;3983:150;;;;;;:::i;:::-;-1:-1:-1;;;;;4104:22:63;4078:7;4104:22;;;;;;;;;;;;3983:150;5824:412;;;;;;:::i;:::-;;:::i;3121:102::-;;;:::i;4263:193::-;;;;;;:::i;:::-;;:::i;4687:439::-;;;;;;:::i;:::-;;:::i;5446:311::-;;;;;;:::i;:::-;;:::i;8069:151::-;;;;;;:::i;:::-;-1:-1:-1;;;;;8185:19:63;;;8159:7;8185:19;;;:11;:19;;;;;;;;:28;;;;;;;;;;;;;8069:151;6300:403;;;;;;:::i;:::-;;:::i;7505:325::-;;;;;;:::i;:::-;;:::i;5256:127::-;;;;;;:::i;:::-;;:::i;6769:130::-;6835:16;6870:22;6863:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6863:29:63;;;;;;;;;;;;;;;;;;;;;;;6769:130;:::o;2967:98::-;3021:13;3053:5;3046:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3046:12:63;;2967:98;-1:-1:-1;;;;;2967:98:63:o;8358:197::-;8440:4;719:10:70;8495:32:63;719:10:70;8512:7:63;8521:5;8495:8;:32::i;:::-;8544:4;8537:11;;;8358:197;;;;;:::o;8929:806::-;9065:4;-1:-1:-1;;;;;9089:23:63;;9081:72;;;;-1:-1:-1;;;9081:72:63;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;9171:20:63;;9163:71;;;;-1:-1:-1;;;9163:71:63;;7861:2:102;9163:71:63;;;7843:21:102;7900:2;7880:18;;;7873:30;7939:34;7919:18;;;7912:62;-1:-1:-1;;;7990:18:102;;;7983:36;8036:19;;9163:71:63;7659:402:102;9163:71:63;9245:15;719:10:70;9245:30:63;;9286:61;9304:7;9313:6;9321:9;9332:6;9286:61;;;;;;;;;;;;;;;;;;;;;;;;:17;:61::i;:::-;-1:-1:-1;;;;;9385:19:63;;;9358:24;9385:19;;;:11;:19;;;;;;;;:28;;;;;;;;;;9431:26;;;;9423:80;;;;-1:-1:-1;;;9423:80:63;;8268:2:102;9423:80:63;;;8250:21:102;8307:2;8287:18;;;8280:30;8346:34;8326:18;;;8319:62;-1:-1:-1;;;8397:18:102;;;8390:39;8446:19;;9423:80:63;8066:405:102;9423:80:63;9513:52;9522:6;9530:7;9539:25;9558:6;9539:16;:25;:::i;:::-;9513:8;:52::i;:::-;9576:49;9582:7;9591:6;9599:9;9610:6;9576:49;;;;;;;;;;;;;;;;;;;;;;;;:5;:49::i;:::-;9636:70;9656:7;9665:6;9673:9;9684:6;9636:70;;;;;;;;;;;;;;;;;;;;;;;;9700:5;9636:19;:70::i;:::-;-1:-1:-1;9724:4:63;;8929:806;-1:-1:-1;;;;;8929:806:63:o;7018:366::-;7225:35;719:10:70;7253:6:63;7225:13;:35::i;:::-;7217:92;;;;-1:-1:-1;;;7217:92:63;;;;;;;:::i;:::-;7319:58;7325:6;7333:9;7344:6;7352:4;7358:12;7372:4;7319:5;:58::i;:::-;7018:366;;;;;:::o;5824:412::-;-1:-1:-1;;;;;5911:24:63;;719:10:70;5911:24:63;5903:73;;;;-1:-1:-1;;;5903:73:63;;9356:2:102;5903:73:63;;;9338:21:102;9395:2;9375:18;;;9368:30;9434:34;9414:18;;;9407:62;-1:-1:-1;;;9485:18:102;;;9478:34;9529:19;;5903:73:63;9154:400:102;5903:73:63;-1:-1:-1;;;;;5991:27:63;;;;;;:17;:27;;;;;;;;5987:185;;;719:10:70;6041:38:63;;;;:24;:38;;;;;;;;-1:-1:-1;;;;;6041:48:63;;;;;;;;;6034:55;;-1:-1:-1;;6034:55:63;;;5987:185;;;719:10:70;6120:24:63;;;;:10;:24;;;;;;;;-1:-1:-1;;;;;6120:34:63;;;;;;;;;:41;;-1:-1:-1;;6120:41:63;6157:4;6120:41;;;5987:185;6187:42;;719:10:70;;-1:-1:-1;;;;;6187:42:63;;;;;;;;5824:412;:::o;3121:102::-;3177:13;3209:7;3202:14;;;;;:::i;4263:193::-;4395:54;719:10:70;4415:9:63;4426:6;4434:4;4395:54;;;;;;;;;;;;4444:4;4395:5;:54::i;:::-;4263:193;;;:::o;4687:439::-;4773:4;-1:-1:-1;;;;;4797:23:63;;4789:72;;;;-1:-1:-1;;;4789:72:63;;;;;;;:::i;:::-;4872:12;719:10:70;4872:27:63;;4910:56;4928:4;4934;4940:9;4951:6;4910:56;;;;;;;;;;;;;;;;;;;;;;;;:17;:56::i;:::-;4977:44;4983:4;4989;4995:9;5006:6;4977:44;;;;;;;;;;;;;;;;;;;;;;;;:5;:44::i;:::-;5032:65;5052:4;5058;5064:9;5075:6;5032:65;;;;;;;;;;;;;;;;;;;;;;;;5091:5;5032:19;:65::i;5446:311::-;5546:4;5593:11;-1:-1:-1;;;;;5581:23:63;:8;-1:-1:-1;;;;;5581:23:63;;:120;;;-1:-1:-1;;;;;;5621:27:63;;;;;;:17;:27;;;;;;;;:79;;;;-1:-1:-1;;;;;;5653:37:63;;;;;;;:24;:37;;;;;;;;:47;;;;;;;;;;;;5652:48;5621:79;5581:169;;;-1:-1:-1;;;;;;5717:23:63;;;;;;;:10;:23;;;;;;;;:33;;;;;;;;;;;;5581:169;5562:188;5446:311;-1:-1:-1;;;5446:311:63:o;6300:403::-;719:10:70;-1:-1:-1;;;;;6384:24:63;;;6376:70;;;;-1:-1:-1;;;6376:70:63;;9761:2:102;6376:70:63;;;9743:21:102;9800:2;9780:18;;;9773:30;9839:34;9819:18;;;9812:62;-1:-1:-1;;;9890:18:102;;;9883:31;9931:19;;6376:70:63;9559:397:102;6376:70:63;-1:-1:-1;;;;;6461:27:63;;;;;;:17;:27;;;;;;;;6457:185;;;719:10:70;6504:38:63;;;;:24;:38;;;;;;;;-1:-1:-1;;;;;6504:48:63;;;;;;;;;:55;;-1:-1:-1;;6504:55:63;6555:4;6504:55;;;6457:185;;;719:10:70;6597:24:63;;;;:10;:24;;;;;;;;-1:-1:-1;;;;;6597:34:63;;;;;;;;;6590:41;;-1:-1:-1;;6590:41:63;;;6457:185;6657:39;;719:10:70;;-1:-1:-1;;;;;6657:39:63;;;;;;;;6300:403;:::o;7505:325::-;7686:36;719:10:70;7714:7:63;7686:13;:36::i;:::-;7678:93;;;;-1:-1:-1;;;7678:93:63;;;;;;;:::i;:::-;7781:42;7787:7;7796:6;7804:4;7810:12;7781:5;:42::i;:::-;7505:325;;;;:::o;5256:127::-;5339:37;719:10:70;5359:6:63;5367:4;5339:37;;;;;;;;;;;;:5;:37::i;:::-;5256:127;;:::o;14872:365::-;-1:-1:-1;;;;;14995:20:63;;14987:70;;;;-1:-1:-1;;;14987:70:63;;10163:2:102;14987:70:63;;;10145:21:102;10202:2;10182:18;;;10175:30;10241:34;10221:18;;;10214:62;-1:-1:-1;;;10292:18:102;;;10285:35;10337:19;;14987:70:63;9961:401:102;14987:70:63;-1:-1:-1;;;;;15075:21:63;;15067:69;;;;-1:-1:-1;;;15067:69:63;;10569:2:102;15067:69:63;;;10551:21:102;10608:2;10588:18;;;10581:30;10647:34;10627:18;;;10620:62;-1:-1:-1;;;10698:18:102;;;10691:33;10741:19;;15067:69:63;10367:399:102;15067:69:63;-1:-1:-1;;;;;15147:19:63;;;;;;;:11;:19;;;;;;;;:28;;;;;;;;;;;;;:36;;;15198:32;;2124:25:102;;;15198:32:63;;2097:18:102;15198:32:63;;;;;;;14872:365;;;:::o;15710:472::-;15941:78;;-1:-1:-1;;;15941:78:63;;-1:-1:-1;;;;;10963:32:102;;15941:78:63;;;10945:51:102;1476:31:63;11012:18:102;;;11005:34;15919:19:63;;1227:42;;15941:41;;10918:18:102;;15941:78:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15919:100;-1:-1:-1;;;;;;16033:25:63;;;16029:147;;16074:91;;-1:-1:-1;;;16074:91:63;;-1:-1:-1;;;;;16074:39:63;;;;;:91;;16114:8;;16124:4;;16130:2;;16134:6;;16142:8;;16152:12;;16074:91;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16029:147;15909:273;15710:472;;;;;;:::o;14123:611::-;-1:-1:-1;;;;;14401:15:63;;14379:19;14401:15;;;;;;;;;;;14434:21;;;;14426:73;;;;-1:-1:-1;;;14426:73:63;;12245:2:102;14426:73:63;;;12227:21:102;12284:2;12264:18;;;12257:30;12323:34;12303:18;;;12296:62;-1:-1:-1;;;12374:18:102;;;12367:37;12421:19;;14426:73:63;12043:403:102;14426:73:63;-1:-1:-1;;;;;14533:15:63;;;:9;:15;;;;;;;;;;;14551:20;;;14533:38;;14591:13;;;;;;;;:23;;14565:6;;14533:9;14591:23;;14565:6;;14591:23;:::i;:::-;;;;;;;;14651:2;-1:-1:-1;;;;;14630:56:63;14645:4;-1:-1:-1;;;;;14630:56:63;14635:8;-1:-1:-1;;;;;14630:56:63;;14655:6;14663:8;14673:12;14630:56;;;;;;;;:::i;:::-;;;;;;;;14716:2;-1:-1:-1;;;;;14701:26:63;14710:4;-1:-1:-1;;;;;14701:26:63;;14720:6;14701:26;;;;2124:25:102;;2112:2;2097:18;;1978:177;14701:26:63;;;;;;;;14310:424;14123:611;;;;;;:::o;16871:676::-;17138:79;;-1:-1:-1;;;17138:79:63;;-1:-1:-1;;;;;10963:32:102;;17138:79:63;;;10945:51:102;1573:34:63;11012:18:102;;;11005:34;17116:19:63;;1227:42;;17138:41;;10918:18:102;;17138:79:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17116:101;-1:-1:-1;;;;;;17231:25:63;;;17227:314;;17272:96;;-1:-1:-1;;;17272:96:63;;-1:-1:-1;;;;;17272:44:63;;;;;:96;;17317:8;;17327:4;;17333:2;;17337:6;;17345:8;;17355:12;;17272:96;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17227:314;;;17389:19;17385:156;;;-1:-1:-1;;;;;17433:13:63;;1450:19:68;:23;17424:106:63;;;;-1:-1:-1;;;17424:106:63;;13238:2:102;17424:106:63;;;13220:21:102;13277:2;13257:18;;;13250:30;13316:34;13296:18;;;13289:62;13387:34;13367:18;;;13360:62;-1:-1:-1;;;13438:19:102;;;13431:44;13492:19;;17424:106:63;13036:481:102;17424:106:63;17106:441;16871:676;;;;;;;:::o;12351:650::-;-1:-1:-1;;;;;12573:18:63;;12565:65;;;;-1:-1:-1;;;12565:65:63;;13724:2:102;12565:65:63;;;13706:21:102;13763:2;13743:18;;;13736:30;13802:34;13782:18;;;13775:62;-1:-1:-1;;;13853:18:102;;;13846:32;13895:19;;12565:65:63;13522:398:102;12565:65:63;-1:-1:-1;;;;;12648:16:63;;12640:61;;;;-1:-1:-1;;;12640:61:63;;14127:2:102;12640:61:63;;;14109:21:102;;;14146:18;;;14139:30;14205:34;14185:18;;;14178:62;14257:18;;12640:61:63;13925:356:102;12640:61:63;719:10:70;12754:69:63;719:10:70;12782:4:63;12788:2;12792:6;12800:8;12810:12;12754:17;:69::i;:::-;12834:57;12840:8;12850:4;12856:2;12860:6;12868:8;12878:12;12834:5;:57::i;:::-;12902:92;12922:8;12932:4;12938:2;12942:6;12950:8;12960:12;12974:19;12902;:92::i;13306:811::-;-1:-1:-1;;;;;13470:18:63;;13462:65;;;;-1:-1:-1;;;13462:65:63;;14488:2:102;13462:65:63;;;14470:21:102;14527:2;14507:18;;;14500:30;14566:34;14546:18;;;14539:62;-1:-1:-1;;;14617:18:102;;;14610:32;14659:19;;13462:65:63;14286:398:102;13462:65:63;719:10:70;13580:73:63;719:10:70;13608:4:63;13538:16;13626:6;13634:4;13640:12;13580:17;:73::i;:::-;-1:-1:-1;;;;;13787:15:63;;13765:19;13787:15;;;;;;;;;;;13820:21;;;;13812:69;;;;-1:-1:-1;;;13812:69:63;;14891:2:102;13812:69:63;;;14873:21:102;14930:2;14910:18;;;14903:30;14969:34;14949:18;;;14942:62;-1:-1:-1;;;15020:18:102;;;15013:33;15063:19;;13812:69:63;14689:399:102;13812:69:63;-1:-1:-1;;;;;13915:15:63;;:9;:15;;;;;;;;;;13933:20;;;13915:38;;13973:12;:22;;13947:6;;13915:9;13973:22;;13947:6;;13973:22;:::i;:::-;;;;;;;;14028:4;-1:-1:-1;;;;;14011:50:63;14018:8;-1:-1:-1;;;;;14011:50:63;;14034:6;14042:4;14048:12;14011:50;;;;;;;;:::i;:::-;;;;;;;;14076:34;;2124:25:102;;;14099:1:63;;-1:-1:-1;;;;;14076:34:63;;;;;2112:2:102;2097:18;14076:34:63;;;;;;;13452:665;;13306:811;;;;:::o;14:658:102:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:195;465:6;462:1;459:13;451:195;;;530:13;;-1:-1:-1;;;;;526:39:102;514:52;;621:15;;;;586:12;;;;562:1;480:9;451:195;;;-1:-1:-1;663:3:102;;14:658;-1:-1:-1;;;;;;14:658:102:o;677:423::-;719:3;757:5;751:12;784:6;779:3;772:19;809:1;819:162;833:6;830:1;827:13;819:162;;;895:4;951:13;;;947:22;;941:29;923:11;;;919:20;;912:59;848:12;819:162;;;823:3;1026:1;1019:4;1010:6;1005:3;1001:16;997:27;990:38;1089:4;1082:2;1078:7;1073:2;1065:6;1061:15;1057:29;1052:3;1048:39;1044:50;1037:57;;;677:423;;;;:::o;1105:220::-;1254:2;1243:9;1236:21;1217:4;1274:45;1315:2;1304:9;1300:18;1292:6;1274:45;:::i;1330:131::-;-1:-1:-1;;;;;1405:31:102;;1395:42;;1385:70;;1451:1;1448;1441:12;1385:70;1330:131;:::o;1466:315::-;1534:6;1542;1595:2;1583:9;1574:7;1570:23;1566:32;1563:52;;;1611:1;1608;1601:12;1563:52;1650:9;1637:23;1669:31;1694:5;1669:31;:::i;:::-;1719:5;1771:2;1756:18;;;;1743:32;;-1:-1:-1;;;1466:315:102:o;2160:456::-;2237:6;2245;2253;2306:2;2294:9;2285:7;2281:23;2277:32;2274:52;;;2322:1;2319;2312:12;2274:52;2361:9;2348:23;2380:31;2405:5;2380:31;:::i;:::-;2430:5;-1:-1:-1;2487:2:102;2472:18;;2459:32;2500:33;2459:32;2500:33;:::i;:::-;2160:456;;2552:7;;-1:-1:-1;;;2606:2:102;2591:18;;;;2578:32;;2160:456::o;2810:127::-;2871:10;2866:3;2862:20;2859:1;2852:31;2902:4;2899:1;2892:15;2926:4;2923:1;2916:15;2942:718;2984:5;3037:3;3030:4;3022:6;3018:17;3014:27;3004:55;;3055:1;3052;3045:12;3004:55;3091:6;3078:20;3117:18;3154:2;3150;3147:10;3144:36;;;3160:18;;:::i;:::-;3235:2;3229:9;3203:2;3289:13;;-1:-1:-1;;3285:22:102;;;3309:2;3281:31;3277:40;3265:53;;;3333:18;;;3353:22;;;3330:46;3327:72;;;3379:18;;:::i;:::-;3419:10;3415:2;3408:22;3454:2;3446:6;3439:18;3500:3;3493:4;3488:2;3480:6;3476:15;3472:26;3469:35;3466:55;;;3517:1;3514;3507:12;3466:55;3581:2;3574:4;3566:6;3562:17;3555:4;3547:6;3543:17;3530:54;3628:1;3621:4;3616:2;3608:6;3604:15;3600:26;3593:37;3648:6;3639:15;;;;;;2942:718;;;;:::o;3665:885::-;3778:6;3786;3794;3802;3810;3863:3;3851:9;3842:7;3838:23;3834:33;3831:53;;;3880:1;3877;3870:12;3831:53;3919:9;3906:23;3938:31;3963:5;3938:31;:::i;:::-;3988:5;-1:-1:-1;4045:2:102;4030:18;;4017:32;4058:33;4017:32;4058:33;:::i;:::-;4110:7;-1:-1:-1;4164:2:102;4149:18;;4136:32;;-1:-1:-1;4219:2:102;4204:18;;4191:32;4242:18;4272:14;;;4269:34;;;4299:1;4296;4289:12;4269:34;4322:49;4363:7;4354:6;4343:9;4339:22;4322:49;:::i;:::-;4312:59;;4424:3;4413:9;4409:19;4396:33;4380:49;;4454:2;4444:8;4441:16;4438:36;;;4470:1;4467;4460:12;4438:36;;4493:51;4536:7;4525:8;4514:9;4510:24;4493:51;:::i;:::-;4483:61;;;3665:885;;;;;;;;:::o;4555:247::-;4614:6;4667:2;4655:9;4646:7;4642:23;4638:32;4635:52;;;4683:1;4680;4673:12;4635:52;4722:9;4709:23;4741:31;4766:5;4741:31;:::i;4807:523::-;4893:6;4901;4909;4962:2;4950:9;4941:7;4937:23;4933:32;4930:52;;;4978:1;4975;4968:12;4930:52;5017:9;5004:23;5036:31;5061:5;5036:31;:::i;:::-;5086:5;-1:-1:-1;5138:2:102;5123:18;;5110:32;;-1:-1:-1;5193:2:102;5178:18;;5165:32;5220:18;5209:30;;5206:50;;;5252:1;5249;5242:12;5206:50;5275:49;5316:7;5307:6;5296:9;5292:22;5275:49;:::i;:::-;5265:59;;;4807:523;;;;;:::o;5335:388::-;5403:6;5411;5464:2;5452:9;5443:7;5439:23;5435:32;5432:52;;;5480:1;5477;5470:12;5432:52;5519:9;5506:23;5538:31;5563:5;5538:31;:::i;:::-;5588:5;-1:-1:-1;5645:2:102;5630:18;;5617:32;5658:33;5617:32;5658:33;:::i;:::-;5710:7;5700:17;;;5335:388;;;;;:::o;5728:743::-;5832:6;5840;5848;5856;5909:3;5897:9;5888:7;5884:23;5880:33;5877:53;;;5926:1;5923;5916:12;5877:53;5965:9;5952:23;5984:31;6009:5;5984:31;:::i;:::-;6034:5;-1:-1:-1;6086:2:102;6071:18;;6058:32;;-1:-1:-1;6141:2:102;6126:18;;6113:32;6164:18;6194:14;;;6191:34;;;6221:1;6218;6211:12;6191:34;6244:49;6285:7;6276:6;6265:9;6261:22;6244:49;:::i;:::-;6234:59;;6346:2;6335:9;6331:18;6318:32;6302:48;;6375:2;6365:8;6362:16;6359:36;;;6391:1;6388;6381:12;6359:36;;6414:51;6457:7;6446:8;6435:9;6431:24;6414:51;:::i;:::-;6404:61;;;5728:743;;;;;;;:::o;6476:388::-;6553:6;6561;6614:2;6602:9;6593:7;6589:23;6585:32;6582:52;;;6630:1;6627;6620:12;6582:52;6666:9;6653:23;6643:33;;6727:2;6716:9;6712:18;6699:32;6754:18;6746:6;6743:30;6740:50;;;6786:1;6783;6776:12;6740:50;6809:49;6850:7;6841:6;6830:9;6826:22;6809:49;:::i;:::-;6799:59;;;6476:388;;;;;:::o;6869:380::-;6948:1;6944:12;;;;6991;;;7012:61;;7066:4;7058:6;7054:17;7044:27;;7012:61;7119:2;7111:6;7108:14;7088:18;7085:38;7082:161;;7165:10;7160:3;7156:20;7153:1;7146:31;7200:4;7197:1;7190:15;7228:4;7225:1;7218:15;7082:161;;6869:380;;;:::o;7254:400::-;7456:2;7438:21;;;7495:2;7475:18;;;7468:30;7534:34;7529:2;7514:18;;7507:62;-1:-1:-1;;;7600:2:102;7585:18;;7578:34;7644:3;7629:19;;7254:400::o;8476:127::-;8537:10;8532:3;8528:20;8525:1;8518:31;8568:4;8565:1;8558:15;8592:4;8589:1;8582:15;8608:128;8675:9;;;8696:11;;;8693:37;;;8710:18;;:::i;8741:408::-;8943:2;8925:21;;;8982:2;8962:18;;;8955:30;9021:34;9016:2;9001:18;;8994:62;-1:-1:-1;;;9087:2:102;9072:18;;9065:42;9139:3;9124:19;;8741:408::o;11050:251::-;11120:6;11173:2;11161:9;11152:7;11148:23;11144:32;11141:52;;;11189:1;11186;11179:12;11141:52;11221:9;11215:16;11240:31;11265:5;11240:31;:::i;11306:732::-;-1:-1:-1;;;;;11649:15:102;;;11631:34;;11701:15;;;11696:2;11681:18;;11674:43;11753:15;;11748:2;11733:18;;11726:43;11800:2;11785:18;;11778:34;;;11849:3;11843;11828:19;;11821:32;;;11574:4;;11876:46;;11902:19;;11894:6;11876:46;:::i;:::-;11971:9;11963:6;11959:22;11953:3;11942:9;11938:19;11931:51;11999:33;12025:6;12017;11999:33;:::i;:::-;11991:41;11306:732;-1:-1:-1;;;;;;;;;11306:732:102:o;12451:125::-;12516:9;;;12537:10;;;12534:36;;;12550:18;;:::i;12581:450::-;12802:6;12791:9;12784:25;12845:2;12840;12829:9;12825:18;12818:30;12765:4;12871:45;12912:2;12901:9;12897:18;12889:6;12871:45;:::i;:::-;12964:9;12956:6;12952:22;12947:2;12936:9;12932:18;12925:50;12992:33;13018:6;13010;12992:33;:::i;:::-;12984:41;12581:450;-1:-1:-1;;;;;;12581:450:102:o",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of the {IERC777} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. Support for ERC20 is included in this contract, as specified by the EIP: both the ERC777 and ERC20 interfaces can be safely used when interacting with it. Both {IERC777-Sent} and {IERC20-Transfer} events are emitted on token movements. Additionally, the {IERC777-granularity} value is hard-coded to `1`, meaning that there are no special restrictions in the amount of tokens that created, moved, or destroyed. This makes integration with ERC20 applications seamless.",
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      }
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}. Note that operator and allowance concepts are orthogonal: operators may not have allowance, and accounts with allowance may not be operators themselves."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Note that accounts cannot have allowance issued by their operators."
      },
      "authorizeOperator(address)": {
        "details": "See {IERC777-authorizeOperator}."
      },
      "balanceOf(address)": {
        "details": "Returns the amount of tokens owned by an account (`tokenHolder`)."
      },
      "burn(uint256,bytes)": {
        "details": "See {IERC777-burn}. Also emits a {IERC20-Transfer} event for ERC20 compatibility."
      },
      "constructor": {
        "details": "`defaultOperators` may be an empty array."
      },
      "decimals()": {
        "details": "See {ERC20-decimals}. Always returns 18, as per the [ERC777 EIP](https://eips.ethereum.org/EIPS/eip-777#backward-compatibility)."
      },
      "defaultOperators()": {
        "details": "See {IERC777-defaultOperators}."
      },
      "granularity()": {
        "details": "See {IERC777-granularity}. This implementation always returns `1`."
      },
      "isOperatorFor(address,address)": {
        "details": "See {IERC777-isOperatorFor}."
      },
      "name()": {
        "details": "See {IERC777-name}."
      },
      "operatorBurn(address,uint256,bytes,bytes)": {
        "details": "See {IERC777-operatorBurn}. Emits {Burned} and {IERC20-Transfer} events."
      },
      "operatorSend(address,address,uint256,bytes,bytes)": {
        "details": "See {IERC777-operatorSend}. Emits {Sent} and {IERC20-Transfer} events."
      },
      "revokeOperator(address)": {
        "details": "See {IERC777-revokeOperator}."
      },
      "send(address,uint256,bytes)": {
        "details": "See {IERC777-send}. Also emits a {IERC20-Transfer} event for ERC20 compatibility."
      },
      "symbol()": {
        "details": "See {IERC777-symbol}."
      },
      "totalSupply()": {
        "details": "See {IERC777-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Unlike `send`, `recipient` is _not_ required to implement the {IERC777Recipient} interface if it is a contract. Also emits a {Sent} event."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Note that operator and allowance concepts are orthogonal: operators cannot call `transferFrom` (unless they have allowance), and accounts with allowance cannot call `operatorSend` (unless they are operators). Emits {Sent}, {IERC20-Transfer} and {IERC20-Approval} events."
      }
    },
    "version": 1
  },
  "offset": [
    1073,
    18324
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x959B8C3F GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD95B6371 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD95B6371 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0xFAD8B32A EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0xFC673C4F EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0xFE9D9303 EQ PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x959B8C3F EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x9BD9BBC6 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x218 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x556F0DC7 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x62AD1B83 EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6E48538 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x171 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x123 PUSH2 0x2B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x11E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x141 PUSH2 0x312 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x1274 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x15C CALLDATASIZE PUSH1 0x4 PUSH2 0x129F JUMP JUMPDEST PUSH2 0x39B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x130 JUMP JUMPDEST PUSH1 0x1 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x130 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x191 CALLDATASIZE PUSH1 0x4 PUSH2 0x12CB JUMP JUMPDEST PUSH2 0x3B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x130 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x175 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x1BA CALLDATASIZE PUSH1 0x4 PUSH2 0x13AF JUMP JUMPDEST PUSH2 0x57E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x175 PUSH2 0x1CF CALLDATASIZE PUSH1 0x4 PUSH2 0x1442 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x1F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1442 JUMP JUMPDEST PUSH2 0x5BA JUMP JUMPDEST PUSH2 0x141 PUSH2 0x6D7 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x213 CALLDATASIZE PUSH1 0x4 PUSH2 0x145F JUMP JUMPDEST PUSH2 0x6E6 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x226 CALLDATASIZE PUSH1 0x4 PUSH2 0x129F JUMP JUMPDEST PUSH2 0x709 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x239 CALLDATASIZE PUSH1 0x4 PUSH2 0x14B8 JUMP JUMPDEST PUSH2 0x7BC JUMP JUMPDEST PUSH2 0x175 PUSH2 0x24C CALLDATASIZE PUSH1 0x4 PUSH2 0x14B8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x285 CALLDATASIZE PUSH1 0x4 PUSH2 0x1442 JUMP JUMPDEST PUSH2 0x85E JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x298 CALLDATASIZE PUSH1 0x4 PUSH2 0x14F1 JUMP JUMPDEST PUSH2 0x979 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x2AB CALLDATASIZE PUSH1 0x4 PUSH2 0x1571 JUMP JUMPDEST PUSH2 0x9B1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x308 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2EA JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x321 SWAP1 PUSH2 0x15B8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x34D SWAP1 PUSH2 0x15B8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x308 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x36F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x308 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x37D JUMPI POP SWAP4 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3A9 DUP2 DUP6 DUP6 PUSH2 0x9D0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DD SWAP1 PUSH2 0x15F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x44B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A207472616E736665722066726F6D20746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH2 0x47C DUP2 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xAF7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP6 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0x504 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A207472616E7366657220616D6F756E74206578636565647320 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x616C6C6F77616E6365 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DD JUMP JUMPDEST PUSH2 0x518 DUP7 DUP4 PUSH2 0x513 DUP8 DUP6 PUSH2 0x164C JUMP JUMPDEST PUSH2 0x9D0 JUMP JUMPDEST PUSH2 0x544 DUP3 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xC1F JUMP JUMPDEST PUSH2 0x572 DUP3 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x0 PUSH2 0xD85 JUMP JUMPDEST POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x588 CALLER DUP7 PUSH2 0x7BC JUMP JUMPDEST PUSH2 0x5A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DD SWAP1 PUSH2 0x165F JUMP JUMPDEST PUSH2 0x5B3 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH1 0x1 PUSH2 0xF4A JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER SUB PUSH2 0x61E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433737373A20617574686F72697A696E672073656C66206173206F706572 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x30BA37B9 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x66F JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x69E JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xF4CAEB2D6CA8932A215A353D0703C326EC2D81FC68170F320EB2AB49E9DF61F9 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x321 SWAP1 PUSH2 0x15B8 JUMP JUMPDEST PUSH2 0x704 CALLER DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x1 PUSH2 0xF4A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x731 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DD SWAP1 PUSH2 0x15F2 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH2 0x762 DUP2 DUP3 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xAF7 JUMP JUMPDEST PUSH2 0x78E DUP2 DUP3 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xC1F JUMP JUMPDEST PUSH2 0x3A9 DUP2 DUP3 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x0 PUSH2 0xD85 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x827 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x827 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST DUP1 PUSH2 0x857 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x8C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A207265766F6B696E672073656C66206173206F70657261746F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x914 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x940 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x50546E66E5F44D728365DC3908C63BC5CFEEAB470722C1677E3073A6AC294AA1 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0x983 CALLER DUP6 PUSH2 0x7BC JUMP JUMPDEST PUSH2 0x99F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DD SWAP1 PUSH2 0x165F JUMP JUMPDEST PUSH2 0x9AB DUP5 DUP5 DUP5 DUP5 PUSH2 0x102D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x9CC CALLER DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x102D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA34 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A20617070726F76652066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA96 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A20617070726F766520746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x555DDC65 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x29DDB589B1FB5FC7CF394961C1ADF5F8C6454761ADF795E67FE149F658ABE895 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH20 0x1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24 SWAP1 PUSH4 0xAABBB8CA SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB78 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB9C SWAP2 SWAP1 PUSH2 0x16AB JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xC16 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3AD5CBC1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x75AB9782 SWAP1 PUSH2 0xBE3 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x16C8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC11 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0xC98 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A207472616E7366657220616D6F756E74206578636565647320 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x62616C616E6365 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP8 DUP6 SUB SWAP1 SSTORE SWAP2 DUP8 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0xCCF SWAP1 DUP5 SWAP1 PUSH2 0x1722 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x6B541DDAA720DB2B10A4D0CDAC39B8D360425FC073085FAC19BC82614677987 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xD27 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1735 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP7 PUSH1 0x40 MLOAD PUSH2 0xD74 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x555DDC65 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0xB281FC8C12954D22544DB45DE3159A39272895B169A852B314F9CC762E44C53B PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH20 0x1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24 SWAP1 PUSH4 0xAABBB8CA SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE06 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE2A SWAP2 SWAP1 PUSH2 0x16AB JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xEA6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x23DE29 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH3 0x23DE29 SWAP1 PUSH2 0xE6F SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x16C8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE9D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0xF40 JUMP JUMPDEST DUP2 ISZERO PUSH2 0xF40 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND EXTCODESIZE ISZERO PUSH2 0xF40 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A20746F6B656E20726563697069656E7420636F6E7472616374 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20686173206E6F20696D706C656D656E74657220666F7220455243373737546F PUSH1 0x64 DUP3 ADD MSTORE PUSH13 0x1AD95B9CD49958DA5C1A595B9D PUSH1 0x9A SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x3DD JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH2 0xFAB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A2073656E642066726F6D20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x1001 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A2073656E6420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DD JUMP JUMPDEST CALLER PUSH2 0x1010 DUP2 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xAF7 JUMP JUMPDEST PUSH2 0x101E DUP2 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xC1F JUMP JUMPDEST PUSH2 0xC16 DUP2 DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xD85 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x108E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A206275726E2066726F6D20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DD JUMP JUMPDEST CALLER PUSH2 0x109E DUP2 DUP7 PUSH1 0x0 DUP8 DUP8 DUP8 PUSH2 0xAF7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP5 DUP2 LT ISZERO PUSH2 0x1113 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A206275726E20616D6F756E7420657863656564732062616C61 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6E6365 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP7 DUP4 SUB SWAP1 SSTORE PUSH1 0x1 DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0x1142 SWAP1 DUP5 SWAP1 PUSH2 0x164C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA78A9BE3A7B862D26933AD85FB11D80EF66B8F972D7CBBA06621D583943A4098 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1190 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1735 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1222 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x11FD JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1254 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1238 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x857 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x122E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x129C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x12BD DUP2 PUSH2 0x1287 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x12E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x12EB DUP2 PUSH2 0x1287 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x12FB DUP2 PUSH2 0x1287 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x134E JUMPI PUSH2 0x134E PUSH2 0x130C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1376 JUMPI PUSH2 0x1376 PUSH2 0x130C JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x138F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x13C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x13D2 DUP2 PUSH2 0x1287 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x13E2 DUP2 PUSH2 0x1287 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1406 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1412 DUP10 DUP4 DUP11 ADD PUSH2 0x1322 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1428 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1435 DUP9 DUP3 DUP10 ADD PUSH2 0x1322 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1454 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x857 DUP2 PUSH2 0x1287 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1474 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x147F DUP2 PUSH2 0x1287 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14AE DUP7 DUP3 DUP8 ADD PUSH2 0x1322 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x14D6 DUP2 PUSH2 0x1287 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x14E6 DUP2 PUSH2 0x1287 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1507 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x1512 DUP2 PUSH2 0x1287 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1536 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1542 DUP9 DUP4 DUP10 ADD PUSH2 0x1322 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1558 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1565 DUP8 DUP3 DUP9 ADD PUSH2 0x1322 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1584 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15AE DUP6 DUP3 DUP7 ADD PUSH2 0x1322 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x15CC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x15EC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433737373A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x3AF JUMPI PUSH2 0x3AF PUSH2 0x1636 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433737373A2063616C6C6572206973206E6F7420616E206F70657261746F PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x39103337B9103437B63232B9 PUSH1 0xA1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x857 DUP2 PUSH2 0x1287 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP3 MSTORE DUP7 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP6 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xC0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1703 SWAP1 DUP4 ADD DUP6 PUSH2 0x122E JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0xA0 DUP5 ADD MSTORE PUSH2 0x1715 DUP2 DUP6 PUSH2 0x122E JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3AF JUMPI PUSH2 0x3AF PUSH2 0x1636 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x174E PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x122E JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x1760 DUP2 DUP6 PUSH2 0x122E JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB SWAP2 0xB8 SWAP15 0x2F 0xEF 0xDF 0xB3 PUSH17 0xE93621DB563BDE3062327EEC33B5A088E6 0xDA EXTCODECOPY PUSH3 0x916588 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "5": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "CALLVALUE",
      "path": "63"
    },
    "6": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "DUP1",
      "path": "63"
    },
    "7": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "8": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "12": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "DUP1",
      "path": "63"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "REVERT",
      "path": "63"
    },
    "16": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "17": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "POP",
      "path": "63"
    },
    "18": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "CALLDATASIZE",
      "path": "63"
    },
    "21": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "LT",
      "path": "63"
    },
    "22": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x116"
    },
    "25": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "26": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "CALLDATALOAD",
      "path": "63"
    },
    "29": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "SHR",
      "path": "63"
    },
    "32": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "DUP1",
      "path": "63"
    },
    "33": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH4",
      "path": "63",
      "value": "0x959B8C3F"
    },
    "38": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "GT",
      "path": "63"
    },
    "39": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0xA2"
    },
    "42": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "43": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "DUP1",
      "path": "63"
    },
    "44": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH4",
      "path": "63",
      "value": "0xD95B6371"
    },
    "49": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "GT",
      "path": "63"
    },
    "50": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x71"
    },
    "53": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "54": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "DUP1",
      "path": "63"
    },
    "55": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH4",
      "path": "63",
      "value": "0xD95B6371"
    },
    "60": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "EQ",
      "path": "63"
    },
    "61": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x22B"
    },
    "64": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "65": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "DUP1",
      "path": "63"
    },
    "66": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH4",
      "path": "63",
      "value": "0xDD62ED3E"
    },
    "71": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "EQ",
      "path": "63"
    },
    "72": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x23E"
    },
    "75": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "76": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "DUP1",
      "path": "63"
    },
    "77": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH4",
      "path": "63",
      "value": "0xFAD8B32A"
    },
    "82": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "EQ",
      "path": "63"
    },
    "83": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x277"
    },
    "86": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "87": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "DUP1",
      "path": "63"
    },
    "88": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH4",
      "path": "63",
      "value": "0xFC673C4F"
    },
    "93": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "EQ",
      "path": "63"
    },
    "94": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x28A"
    },
    "97": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "98": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "DUP1",
      "path": "63"
    },
    "99": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH4",
      "path": "63",
      "value": "0xFE9D9303"
    },
    "104": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "EQ",
      "path": "63"
    },
    "105": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x29D"
    },
    "108": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "109": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "DUP1",
      "path": "63"
    },
    "112": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "REVERT",
      "path": "63"
    },
    "113": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "114": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "DUP1",
      "path": "63"
    },
    "115": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH4",
      "path": "63",
      "value": "0x959B8C3F"
    },
    "120": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "EQ",
      "path": "63"
    },
    "121": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x1EA"
    },
    "124": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "125": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "DUP1",
      "path": "63"
    },
    "126": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH4",
      "path": "63",
      "value": "0x95D89B41"
    },
    "131": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "EQ",
      "path": "63"
    },
    "132": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x1FD"
    },
    "135": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "136": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "DUP1",
      "path": "63"
    },
    "137": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH4",
      "path": "63",
      "value": "0x9BD9BBC6"
    },
    "142": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "EQ",
      "path": "63"
    },
    "143": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x205"
    },
    "146": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "147": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "DUP1",
      "path": "63"
    },
    "148": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH4",
      "path": "63",
      "value": "0xA9059CBB"
    },
    "153": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "EQ",
      "path": "63"
    },
    "154": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x218"
    },
    "157": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "158": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "160": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "DUP1",
      "path": "63"
    },
    "161": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "REVERT",
      "path": "63"
    },
    "162": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "163": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "DUP1",
      "path": "63"
    },
    "164": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH4",
      "path": "63",
      "value": "0x23B872DD"
    },
    "169": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "GT",
      "path": "63"
    },
    "170": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0xE9"
    },
    "173": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "174": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "DUP1",
      "path": "63"
    },
    "175": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH4",
      "path": "63",
      "value": "0x23B872DD"
    },
    "180": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "EQ",
      "path": "63"
    },
    "181": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x183"
    },
    "184": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "185": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "DUP1",
      "path": "63"
    },
    "186": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH4",
      "path": "63",
      "value": "0x313CE567"
    },
    "191": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "EQ",
      "path": "63"
    },
    "192": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x196"
    },
    "195": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "196": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "DUP1",
      "path": "63"
    },
    "197": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH4",
      "path": "63",
      "value": "0x556F0DC7"
    },
    "202": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "EQ",
      "path": "63"
    },
    "203": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x1A5"
    },
    "206": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "207": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "DUP1",
      "path": "63"
    },
    "208": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH4",
      "path": "63",
      "value": "0x62AD1B83"
    },
    "213": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "EQ",
      "path": "63"
    },
    "214": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x1AC"
    },
    "217": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "218": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "DUP1",
      "path": "63"
    },
    "219": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH4",
      "path": "63",
      "value": "0x70A08231"
    },
    "224": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "EQ",
      "path": "63"
    },
    "225": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x1C1"
    },
    "228": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "229": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "231": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "DUP1",
      "path": "63"
    },
    "232": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "REVERT",
      "path": "63"
    },
    "233": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "234": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "DUP1",
      "path": "63"
    },
    "235": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH4",
      "path": "63",
      "value": "0x6E48538"
    },
    "240": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "EQ",
      "path": "63"
    },
    "241": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x11B"
    },
    "244": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "245": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "DUP1",
      "path": "63"
    },
    "246": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH4",
      "path": "63",
      "value": "0x6FDDE03"
    },
    "251": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "EQ",
      "path": "63"
    },
    "252": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x139"
    },
    "255": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "256": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "DUP1",
      "path": "63"
    },
    "257": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH4",
      "path": "63",
      "value": "0x95EA7B3"
    },
    "262": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "EQ",
      "path": "63"
    },
    "263": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x14E"
    },
    "266": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "267": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "DUP1",
      "path": "63"
    },
    "268": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH4",
      "path": "63",
      "value": "0x18160DDD"
    },
    "273": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "EQ",
      "path": "63"
    },
    "274": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x171"
    },
    "277": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "278": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "279": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "281": {
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "DUP1",
      "path": "63"
    },
    "282": {
      "first_revert": true,
      "fn": null,
      "offset": [
        1073,
        18324
      ],
      "op": "REVERT",
      "path": "63"
    },
    "283": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6769,
        6899
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "284": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6769,
        6899
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x123"
    },
    "287": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6769,
        6899
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x2B0"
    },
    "290": {
      "fn": "ERC777.defaultOperators",
      "jump": "i",
      "offset": [
        6769,
        6899
      ],
      "op": "JUMP",
      "path": "63"
    },
    "291": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6769,
        6899
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "292": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6769,
        6899
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "294": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6769,
        6899
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "295": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6769,
        6899
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x130"
    },
    "298": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6769,
        6899
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "299": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6769,
        6899
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "300": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6769,
        6899
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x11E1"
    },
    "303": {
      "fn": "ERC777.defaultOperators",
      "jump": "i",
      "offset": [
        6769,
        6899
      ],
      "op": "JUMP",
      "path": "63"
    },
    "304": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6769,
        6899
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "305": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6769,
        6899
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "307": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6769,
        6899
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "308": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6769,
        6899
      ],
      "op": "DUP1",
      "path": "63"
    },
    "309": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6769,
        6899
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "310": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6769,
        6899
      ],
      "op": "SUB",
      "path": "63"
    },
    "311": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6769,
        6899
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "312": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6769,
        6899
      ],
      "op": "RETURN",
      "path": "63"
    },
    "313": {
      "fn": "ERC777.name",
      "offset": [
        2967,
        3065
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "314": {
      "fn": "ERC777.name",
      "offset": [
        2967,
        3065
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x141"
    },
    "317": {
      "fn": "ERC777.name",
      "offset": [
        2967,
        3065
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x312"
    },
    "320": {
      "fn": "ERC777.name",
      "jump": "i",
      "offset": [
        2967,
        3065
      ],
      "op": "JUMP",
      "path": "63"
    },
    "321": {
      "fn": "ERC777.name",
      "offset": [
        2967,
        3065
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "322": {
      "fn": "ERC777.name",
      "offset": [
        2967,
        3065
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "324": {
      "fn": "ERC777.name",
      "offset": [
        2967,
        3065
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "325": {
      "fn": "ERC777.name",
      "offset": [
        2967,
        3065
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x130"
    },
    "328": {
      "fn": "ERC777.name",
      "offset": [
        2967,
        3065
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "329": {
      "fn": "ERC777.name",
      "offset": [
        2967,
        3065
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "330": {
      "fn": "ERC777.name",
      "offset": [
        2967,
        3065
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x1274"
    },
    "333": {
      "fn": "ERC777.name",
      "jump": "i",
      "offset": [
        2967,
        3065
      ],
      "op": "JUMP",
      "path": "63"
    },
    "334": {
      "fn": "ERC777.approve",
      "offset": [
        8358,
        8555
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "335": {
      "fn": "ERC777.approve",
      "offset": [
        8358,
        8555
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x161"
    },
    "338": {
      "fn": "ERC777.approve",
      "offset": [
        8358,
        8555
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x15C"
    },
    "341": {
      "fn": "ERC777.approve",
      "offset": [
        8358,
        8555
      ],
      "op": "CALLDATASIZE",
      "path": "63"
    },
    "342": {
      "fn": "ERC777.approve",
      "offset": [
        8358,
        8555
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x4"
    },
    "344": {
      "fn": "ERC777.approve",
      "offset": [
        8358,
        8555
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x129F"
    },
    "347": {
      "fn": "ERC777.approve",
      "jump": "i",
      "offset": [
        8358,
        8555
      ],
      "op": "JUMP",
      "path": "63"
    },
    "348": {
      "fn": "ERC777.approve",
      "offset": [
        8358,
        8555
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "349": {
      "fn": "ERC777.approve",
      "offset": [
        8358,
        8555
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x39B"
    },
    "352": {
      "fn": "ERC777.approve",
      "jump": "i",
      "offset": [
        8358,
        8555
      ],
      "op": "JUMP",
      "path": "63"
    },
    "353": {
      "fn": "ERC777.approve",
      "offset": [
        8358,
        8555
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "354": {
      "fn": "ERC777.approve",
      "offset": [
        8358,
        8555
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "356": {
      "fn": "ERC777.approve",
      "offset": [
        8358,
        8555
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "357": {
      "op": "SWAP1"
    },
    "358": {
      "op": "ISZERO"
    },
    "359": {
      "op": "ISZERO"
    },
    "360": {
      "op": "DUP2"
    },
    "361": {
      "op": "MSTORE"
    },
    "362": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "364": {
      "op": "ADD"
    },
    "365": {
      "fn": "ERC777.approve",
      "offset": [
        8358,
        8555
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x130"
    },
    "368": {
      "op": "JUMP"
    },
    "369": {
      "fn": "ERC777.totalSupply",
      "offset": [
        3760,
        3883
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "370": {
      "fn": "ERC777.totalSupply",
      "offset": [
        3864,
        3876
      ],
      "op": "PUSH1",
      "path": "63",
      "statement": 0,
      "value": "0x1"
    },
    "372": {
      "fn": "ERC777.totalSupply",
      "offset": [
        3864,
        3876
      ],
      "op": "SLOAD",
      "path": "63"
    },
    "373": {
      "fn": "ERC777.totalSupply",
      "offset": [
        3760,
        3883
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "374": {
      "fn": "ERC777.totalSupply",
      "offset": [
        3760,
        3883
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "376": {
      "fn": "ERC777.totalSupply",
      "offset": [
        3760,
        3883
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "377": {
      "op": "SWAP1"
    },
    "378": {
      "op": "DUP2"
    },
    "379": {
      "op": "MSTORE"
    },
    "380": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "382": {
      "op": "ADD"
    },
    "383": {
      "fn": "ERC777.totalSupply",
      "offset": [
        3760,
        3883
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x130"
    },
    "386": {
      "op": "JUMP"
    },
    "387": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8929,
        9735
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "388": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8929,
        9735
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x161"
    },
    "391": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8929,
        9735
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x191"
    },
    "394": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8929,
        9735
      ],
      "op": "CALLDATASIZE",
      "path": "63"
    },
    "395": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8929,
        9735
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x4"
    },
    "397": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8929,
        9735
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x12CB"
    },
    "400": {
      "fn": "ERC777.transferFrom",
      "jump": "i",
      "offset": [
        8929,
        9735
      ],
      "op": "JUMP",
      "path": "63"
    },
    "401": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8929,
        9735
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "402": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8929,
        9735
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x3B5"
    },
    "405": {
      "fn": "ERC777.transferFrom",
      "jump": "i",
      "offset": [
        8929,
        9735
      ],
      "op": "JUMP",
      "path": "63"
    },
    "406": {
      "fn": "ERC777.decimals",
      "offset": [
        3407,
        3489
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "407": {
      "fn": "ERC777.decimals",
      "offset": [
        3407,
        3489
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "409": {
      "fn": "ERC777.decimals",
      "offset": [
        3407,
        3489
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "410": {
      "fn": "ERC777.decimals",
      "offset": [
        3480,
        3482
      ],
      "op": "PUSH1",
      "path": "63",
      "statement": 1,
      "value": "0x12"
    },
    "412": {
      "op": "DUP2"
    },
    "413": {
      "op": "MSTORE"
    },
    "414": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "416": {
      "op": "ADD"
    },
    "417": {
      "fn": "ERC777.decimals",
      "offset": [
        3407,
        3489
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x130"
    },
    "420": {
      "op": "JUMP"
    },
    "421": {
      "fn": "ERC777.granularity",
      "offset": [
        3604,
        3699
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "422": {
      "fn": "ERC777.granularity",
      "offset": [
        3691,
        3692
      ],
      "op": "PUSH1",
      "path": "63",
      "statement": 2,
      "value": "0x1"
    },
    "424": {
      "fn": "ERC777.granularity",
      "offset": [
        3604,
        3699
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x175"
    },
    "427": {
      "fn": "ERC777.granularity",
      "offset": [
        3604,
        3699
      ],
      "op": "JUMP",
      "path": "63"
    },
    "428": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7018,
        7384
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "429": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7018,
        7384
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x1BF"
    },
    "432": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7018,
        7384
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x1BA"
    },
    "435": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7018,
        7384
      ],
      "op": "CALLDATASIZE",
      "path": "63"
    },
    "436": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7018,
        7384
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x4"
    },
    "438": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7018,
        7384
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x13AF"
    },
    "441": {
      "fn": "ERC777.operatorSend",
      "jump": "i",
      "offset": [
        7018,
        7384
      ],
      "op": "JUMP",
      "path": "63"
    },
    "442": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7018,
        7384
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "443": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7018,
        7384
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x57E"
    },
    "446": {
      "fn": "ERC777.operatorSend",
      "jump": "i",
      "offset": [
        7018,
        7384
      ],
      "op": "JUMP",
      "path": "63"
    },
    "447": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7018,
        7384
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "448": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7018,
        7384
      ],
      "op": "STOP",
      "path": "63"
    },
    "449": {
      "fn": "ERC777.balanceOf",
      "offset": [
        3983,
        4133
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "450": {
      "fn": "ERC777.balanceOf",
      "offset": [
        3983,
        4133
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x175"
    },
    "453": {
      "fn": "ERC777.balanceOf",
      "offset": [
        3983,
        4133
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x1CF"
    },
    "456": {
      "fn": "ERC777.balanceOf",
      "offset": [
        3983,
        4133
      ],
      "op": "CALLDATASIZE",
      "path": "63"
    },
    "457": {
      "fn": "ERC777.balanceOf",
      "offset": [
        3983,
        4133
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x4"
    },
    "459": {
      "fn": "ERC777.balanceOf",
      "offset": [
        3983,
        4133
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x1442"
    },
    "462": {
      "fn": "ERC777.balanceOf",
      "jump": "i",
      "offset": [
        3983,
        4133
      ],
      "op": "JUMP",
      "path": "63"
    },
    "463": {
      "fn": "ERC777.balanceOf",
      "offset": [
        3983,
        4133
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "468": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "470": {
      "op": "SHL"
    },
    "471": {
      "op": "SUB"
    },
    "472": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4104,
        4126
      ],
      "op": "AND",
      "path": "63",
      "statement": 3
    },
    "473": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4078,
        4085
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "475": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4104,
        4126
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "476": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4104,
        4126
      ],
      "op": "DUP2",
      "path": "63"
    },
    "477": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4104,
        4126
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "478": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4104,
        4126
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "480": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4104,
        4126
      ],
      "op": "DUP2",
      "path": "63"
    },
    "481": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4104,
        4126
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "482": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4104,
        4126
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "483": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4104,
        4126
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "485": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4104,
        4126
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "486": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4104,
        4126
      ],
      "op": "KECCAK256",
      "path": "63"
    },
    "487": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4104,
        4126
      ],
      "op": "SLOAD",
      "path": "63"
    },
    "488": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4104,
        4126
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "489": {
      "fn": "ERC777.balanceOf",
      "offset": [
        3983,
        4133
      ],
      "op": "JUMP",
      "path": "63"
    },
    "490": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5824,
        6236
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "491": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5824,
        6236
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x1BF"
    },
    "494": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5824,
        6236
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x1F8"
    },
    "497": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5824,
        6236
      ],
      "op": "CALLDATASIZE",
      "path": "63"
    },
    "498": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5824,
        6236
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x4"
    },
    "500": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5824,
        6236
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x1442"
    },
    "503": {
      "fn": "ERC777.authorizeOperator",
      "jump": "i",
      "offset": [
        5824,
        6236
      ],
      "op": "JUMP",
      "path": "63"
    },
    "504": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5824,
        6236
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "505": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5824,
        6236
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x5BA"
    },
    "508": {
      "fn": "ERC777.authorizeOperator",
      "jump": "i",
      "offset": [
        5824,
        6236
      ],
      "op": "JUMP",
      "path": "63"
    },
    "509": {
      "fn": "ERC777.symbol",
      "offset": [
        3121,
        3223
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "510": {
      "fn": "ERC777.symbol",
      "offset": [
        3121,
        3223
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x141"
    },
    "513": {
      "fn": "ERC777.symbol",
      "offset": [
        3121,
        3223
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x6D7"
    },
    "516": {
      "fn": "ERC777.symbol",
      "jump": "i",
      "offset": [
        3121,
        3223
      ],
      "op": "JUMP",
      "path": "63"
    },
    "517": {
      "fn": "ERC777.send",
      "offset": [
        4263,
        4456
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "518": {
      "fn": "ERC777.send",
      "offset": [
        4263,
        4456
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x1BF"
    },
    "521": {
      "fn": "ERC777.send",
      "offset": [
        4263,
        4456
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x213"
    },
    "524": {
      "fn": "ERC777.send",
      "offset": [
        4263,
        4456
      ],
      "op": "CALLDATASIZE",
      "path": "63"
    },
    "525": {
      "fn": "ERC777.send",
      "offset": [
        4263,
        4456
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x4"
    },
    "527": {
      "fn": "ERC777.send",
      "offset": [
        4263,
        4456
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x145F"
    },
    "530": {
      "fn": "ERC777.send",
      "jump": "i",
      "offset": [
        4263,
        4456
      ],
      "op": "JUMP",
      "path": "63"
    },
    "531": {
      "fn": "ERC777.send",
      "offset": [
        4263,
        4456
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "532": {
      "fn": "ERC777.send",
      "offset": [
        4263,
        4456
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x6E6"
    },
    "535": {
      "fn": "ERC777.send",
      "jump": "i",
      "offset": [
        4263,
        4456
      ],
      "op": "JUMP",
      "path": "63"
    },
    "536": {
      "fn": "ERC777.transfer",
      "offset": [
        4687,
        5126
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "537": {
      "fn": "ERC777.transfer",
      "offset": [
        4687,
        5126
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x161"
    },
    "540": {
      "fn": "ERC777.transfer",
      "offset": [
        4687,
        5126
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x226"
    },
    "543": {
      "fn": "ERC777.transfer",
      "offset": [
        4687,
        5126
      ],
      "op": "CALLDATASIZE",
      "path": "63"
    },
    "544": {
      "fn": "ERC777.transfer",
      "offset": [
        4687,
        5126
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x4"
    },
    "546": {
      "fn": "ERC777.transfer",
      "offset": [
        4687,
        5126
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x129F"
    },
    "549": {
      "fn": "ERC777.transfer",
      "jump": "i",
      "offset": [
        4687,
        5126
      ],
      "op": "JUMP",
      "path": "63"
    },
    "550": {
      "fn": "ERC777.transfer",
      "offset": [
        4687,
        5126
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "551": {
      "fn": "ERC777.transfer",
      "offset": [
        4687,
        5126
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x709"
    },
    "554": {
      "fn": "ERC777.transfer",
      "jump": "i",
      "offset": [
        4687,
        5126
      ],
      "op": "JUMP",
      "path": "63"
    },
    "555": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5446,
        5757
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "556": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5446,
        5757
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x161"
    },
    "559": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5446,
        5757
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x239"
    },
    "562": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5446,
        5757
      ],
      "op": "CALLDATASIZE",
      "path": "63"
    },
    "563": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5446,
        5757
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x4"
    },
    "565": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5446,
        5757
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x14B8"
    },
    "568": {
      "fn": "ERC777.isOperatorFor",
      "jump": "i",
      "offset": [
        5446,
        5757
      ],
      "op": "JUMP",
      "path": "63"
    },
    "569": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5446,
        5757
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "570": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5446,
        5757
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x7BC"
    },
    "573": {
      "fn": "ERC777.isOperatorFor",
      "jump": "i",
      "offset": [
        5446,
        5757
      ],
      "op": "JUMP",
      "path": "63"
    },
    "574": {
      "fn": "ERC777.allowance",
      "offset": [
        8069,
        8220
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "575": {
      "fn": "ERC777.allowance",
      "offset": [
        8069,
        8220
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x175"
    },
    "578": {
      "fn": "ERC777.allowance",
      "offset": [
        8069,
        8220
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x24C"
    },
    "581": {
      "fn": "ERC777.allowance",
      "offset": [
        8069,
        8220
      ],
      "op": "CALLDATASIZE",
      "path": "63"
    },
    "582": {
      "fn": "ERC777.allowance",
      "offset": [
        8069,
        8220
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x4"
    },
    "584": {
      "fn": "ERC777.allowance",
      "offset": [
        8069,
        8220
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x14B8"
    },
    "587": {
      "fn": "ERC777.allowance",
      "jump": "i",
      "offset": [
        8069,
        8220
      ],
      "op": "JUMP",
      "path": "63"
    },
    "588": {
      "fn": "ERC777.allowance",
      "offset": [
        8069,
        8220
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "593": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "595": {
      "op": "SHL"
    },
    "596": {
      "op": "SUB"
    },
    "597": {
      "fn": "ERC777.allowance",
      "offset": [
        8185,
        8204
      ],
      "op": "SWAP2",
      "path": "63",
      "statement": 4
    },
    "598": {
      "fn": "ERC777.allowance",
      "offset": [
        8185,
        8204
      ],
      "op": "DUP3",
      "path": "63"
    },
    "599": {
      "fn": "ERC777.allowance",
      "offset": [
        8185,
        8204
      ],
      "op": "AND",
      "path": "63"
    },
    "600": {
      "fn": "ERC777.allowance",
      "offset": [
        8159,
        8166
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "602": {
      "fn": "ERC777.allowance",
      "offset": [
        8185,
        8204
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "603": {
      "fn": "ERC777.allowance",
      "offset": [
        8185,
        8204
      ],
      "op": "DUP2",
      "path": "63"
    },
    "604": {
      "fn": "ERC777.allowance",
      "offset": [
        8185,
        8204
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "605": {
      "fn": "ERC777.allowance",
      "offset": [
        8185,
        8196
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x8"
    },
    "607": {
      "fn": "ERC777.allowance",
      "offset": [
        8185,
        8204
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "609": {
      "fn": "ERC777.allowance",
      "offset": [
        8185,
        8204
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "610": {
      "fn": "ERC777.allowance",
      "offset": [
        8185,
        8204
      ],
      "op": "DUP2",
      "path": "63"
    },
    "611": {
      "fn": "ERC777.allowance",
      "offset": [
        8185,
        8204
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "612": {
      "fn": "ERC777.allowance",
      "offset": [
        8185,
        8204
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "614": {
      "fn": "ERC777.allowance",
      "offset": [
        8185,
        8204
      ],
      "op": "DUP1",
      "path": "63"
    },
    "615": {
      "fn": "ERC777.allowance",
      "offset": [
        8185,
        8204
      ],
      "op": "DUP4",
      "path": "63"
    },
    "616": {
      "fn": "ERC777.allowance",
      "offset": [
        8185,
        8204
      ],
      "op": "KECCAK256",
      "path": "63"
    },
    "617": {
      "fn": "ERC777.allowance",
      "offset": [
        8185,
        8213
      ],
      "op": "SWAP4",
      "path": "63"
    },
    "618": {
      "fn": "ERC777.allowance",
      "offset": [
        8185,
        8213
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "619": {
      "fn": "ERC777.allowance",
      "offset": [
        8185,
        8213
      ],
      "op": "SWAP5",
      "path": "63"
    },
    "620": {
      "fn": "ERC777.allowance",
      "offset": [
        8185,
        8213
      ],
      "op": "AND",
      "path": "63"
    },
    "621": {
      "fn": "ERC777.allowance",
      "offset": [
        8185,
        8213
      ],
      "op": "DUP3",
      "path": "63"
    },
    "622": {
      "fn": "ERC777.allowance",
      "offset": [
        8185,
        8213
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "623": {
      "fn": "ERC777.allowance",
      "offset": [
        8185,
        8213
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "624": {
      "fn": "ERC777.allowance",
      "offset": [
        8185,
        8213
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "625": {
      "fn": "ERC777.allowance",
      "offset": [
        8185,
        8213
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "626": {
      "fn": "ERC777.allowance",
      "offset": [
        8185,
        8213
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "627": {
      "fn": "ERC777.allowance",
      "offset": [
        8185,
        8213
      ],
      "op": "KECCAK256",
      "path": "63"
    },
    "628": {
      "fn": "ERC777.allowance",
      "offset": [
        8185,
        8213
      ],
      "op": "SLOAD",
      "path": "63"
    },
    "629": {
      "fn": "ERC777.allowance",
      "offset": [
        8185,
        8213
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "630": {
      "fn": "ERC777.allowance",
      "offset": [
        8069,
        8220
      ],
      "op": "JUMP",
      "path": "63"
    },
    "631": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6300,
        6703
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "632": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6300,
        6703
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x1BF"
    },
    "635": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6300,
        6703
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x285"
    },
    "638": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6300,
        6703
      ],
      "op": "CALLDATASIZE",
      "path": "63"
    },
    "639": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6300,
        6703
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x4"
    },
    "641": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6300,
        6703
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x1442"
    },
    "644": {
      "fn": "ERC777.revokeOperator",
      "jump": "i",
      "offset": [
        6300,
        6703
      ],
      "op": "JUMP",
      "path": "63"
    },
    "645": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6300,
        6703
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "646": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6300,
        6703
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x85E"
    },
    "649": {
      "fn": "ERC777.revokeOperator",
      "jump": "i",
      "offset": [
        6300,
        6703
      ],
      "op": "JUMP",
      "path": "63"
    },
    "650": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7505,
        7830
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "651": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7505,
        7830
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x1BF"
    },
    "654": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7505,
        7830
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x298"
    },
    "657": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7505,
        7830
      ],
      "op": "CALLDATASIZE",
      "path": "63"
    },
    "658": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7505,
        7830
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x4"
    },
    "660": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7505,
        7830
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x14F1"
    },
    "663": {
      "fn": "ERC777.operatorBurn",
      "jump": "i",
      "offset": [
        7505,
        7830
      ],
      "op": "JUMP",
      "path": "63"
    },
    "664": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7505,
        7830
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "665": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7505,
        7830
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x979"
    },
    "668": {
      "fn": "ERC777.operatorBurn",
      "jump": "i",
      "offset": [
        7505,
        7830
      ],
      "op": "JUMP",
      "path": "63"
    },
    "669": {
      "fn": "ERC777.burn",
      "offset": [
        5256,
        5383
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "670": {
      "fn": "ERC777.burn",
      "offset": [
        5256,
        5383
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x1BF"
    },
    "673": {
      "fn": "ERC777.burn",
      "offset": [
        5256,
        5383
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x2AB"
    },
    "676": {
      "fn": "ERC777.burn",
      "offset": [
        5256,
        5383
      ],
      "op": "CALLDATASIZE",
      "path": "63"
    },
    "677": {
      "fn": "ERC777.burn",
      "offset": [
        5256,
        5383
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x4"
    },
    "679": {
      "fn": "ERC777.burn",
      "offset": [
        5256,
        5383
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x1571"
    },
    "682": {
      "fn": "ERC777.burn",
      "jump": "i",
      "offset": [
        5256,
        5383
      ],
      "op": "JUMP",
      "path": "63"
    },
    "683": {
      "fn": "ERC777.burn",
      "offset": [
        5256,
        5383
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "684": {
      "fn": "ERC777.burn",
      "offset": [
        5256,
        5383
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x9B1"
    },
    "687": {
      "fn": "ERC777.burn",
      "jump": "i",
      "offset": [
        5256,
        5383
      ],
      "op": "JUMP",
      "path": "63"
    },
    "688": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6769,
        6899
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "689": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6835,
        6851
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x60"
    },
    "691": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6870,
        6892
      ],
      "op": "PUSH1",
      "path": "63",
      "statement": 5,
      "value": "0x4"
    },
    "693": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "DUP1",
      "path": "63"
    },
    "694": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "SLOAD",
      "path": "63"
    },
    "695": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "DUP1",
      "path": "63"
    },
    "696": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "698": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "MUL",
      "path": "63"
    },
    "699": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "701": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "ADD",
      "path": "63"
    },
    "702": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "704": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "705": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "706": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "DUP2",
      "path": "63"
    },
    "707": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "ADD",
      "path": "63"
    },
    "708": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "710": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "711": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "DUP1",
      "path": "63"
    },
    "712": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "SWAP3",
      "path": "63"
    },
    "713": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "714": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "715": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "DUP2",
      "path": "63"
    },
    "716": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "DUP2",
      "path": "63"
    },
    "717": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "718": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "720": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "ADD",
      "path": "63"
    },
    "721": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "DUP3",
      "path": "63"
    },
    "722": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "DUP1",
      "path": "63"
    },
    "723": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "SLOAD",
      "path": "63"
    },
    "724": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "DUP1",
      "path": "63"
    },
    "725": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "726": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x308"
    },
    "729": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "730": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "732": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "MUL",
      "path": "63"
    },
    "733": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "DUP3",
      "path": "63"
    },
    "734": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "ADD",
      "path": "63"
    },
    "735": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "736": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "737": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "739": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "740": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "742": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "744": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "KECCAK256",
      "path": "63"
    },
    "745": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "746": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "747": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "DUP2",
      "path": "63"
    },
    "748": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "SLOAD",
      "path": "63"
    },
    "749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "753": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "755": {
      "op": "SHL"
    },
    "756": {
      "op": "SUB"
    },
    "757": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "AND",
      "path": "63"
    },
    "758": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "DUP2",
      "path": "63"
    },
    "759": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "760": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x1"
    },
    "762": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "763": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "764": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "ADD",
      "path": "63"
    },
    "765": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "766": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "768": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "ADD",
      "path": "63"
    },
    "769": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "DUP1",
      "path": "63"
    },
    "770": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "DUP4",
      "path": "63"
    },
    "771": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "GT",
      "path": "63"
    },
    "772": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x2EA"
    },
    "775": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "776": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "777": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "POP",
      "path": "63"
    },
    "778": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "POP",
      "path": "63"
    },
    "779": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "POP",
      "path": "63"
    },
    "780": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "POP",
      "path": "63"
    },
    "781": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "POP",
      "path": "63"
    },
    "782": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "783": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6863,
        6892
      ],
      "op": "POP",
      "path": "63"
    },
    "784": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6769,
        6899
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "785": {
      "fn": "ERC777.defaultOperators",
      "jump": "o",
      "offset": [
        6769,
        6899
      ],
      "op": "JUMP",
      "path": "63"
    },
    "786": {
      "fn": "ERC777.name",
      "offset": [
        2967,
        3065
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "787": {
      "fn": "ERC777.name",
      "offset": [
        3021,
        3034
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x60"
    },
    "789": {
      "fn": "ERC777.name",
      "offset": [
        3053,
        3058
      ],
      "op": "PUSH1",
      "path": "63",
      "statement": 6,
      "value": "0x2"
    },
    "791": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "DUP1",
      "path": "63"
    },
    "792": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "SLOAD",
      "path": "63"
    },
    "793": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x321"
    },
    "796": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "797": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x15B8"
    },
    "800": {
      "fn": "ERC777.name",
      "jump": "i",
      "offset": [
        3046,
        3058
      ],
      "op": "JUMP",
      "path": "63"
    },
    "801": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "802": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "DUP1",
      "path": "63"
    },
    "803": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x1F"
    },
    "805": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "ADD",
      "path": "63"
    },
    "806": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "808": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "DUP1",
      "path": "63"
    },
    "809": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "810": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "DIV",
      "path": "63"
    },
    "811": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "MUL",
      "path": "63"
    },
    "812": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "814": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "ADD",
      "path": "63"
    },
    "815": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "817": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "818": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "819": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "DUP2",
      "path": "63"
    },
    "820": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "ADD",
      "path": "63"
    },
    "821": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "823": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "824": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "DUP1",
      "path": "63"
    },
    "825": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "SWAP3",
      "path": "63"
    },
    "826": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "827": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "828": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "DUP2",
      "path": "63"
    },
    "829": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "DUP2",
      "path": "63"
    },
    "830": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "831": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "833": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "ADD",
      "path": "63"
    },
    "834": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "DUP3",
      "path": "63"
    },
    "835": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "DUP1",
      "path": "63"
    },
    "836": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "SLOAD",
      "path": "63"
    },
    "837": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x34D"
    },
    "840": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "841": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x15B8"
    },
    "844": {
      "fn": "ERC777.name",
      "jump": "i",
      "offset": [
        3046,
        3058
      ],
      "op": "JUMP",
      "path": "63"
    },
    "845": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "846": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "DUP1",
      "path": "63"
    },
    "847": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "848": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x308"
    },
    "851": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "852": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "DUP1",
      "path": "63"
    },
    "853": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x1F"
    },
    "855": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "LT",
      "path": "63"
    },
    "856": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x36F"
    },
    "859": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "860": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x100"
    },
    "863": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "DUP1",
      "path": "63"
    },
    "864": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "DUP4",
      "path": "63"
    },
    "865": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "SLOAD",
      "path": "63"
    },
    "866": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "DIV",
      "path": "63"
    },
    "867": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "MUL",
      "path": "63"
    },
    "868": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "DUP4",
      "path": "63"
    },
    "869": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "870": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "871": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "873": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "ADD",
      "path": "63"
    },
    "874": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "875": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x308"
    },
    "878": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "JUMP",
      "path": "63"
    },
    "879": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "880": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "DUP3",
      "path": "63"
    },
    "881": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "ADD",
      "path": "63"
    },
    "882": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "883": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "884": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "886": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "887": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "889": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "891": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "KECCAK256",
      "path": "63"
    },
    "892": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "893": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "894": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "DUP2",
      "path": "63"
    },
    "895": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "SLOAD",
      "path": "63"
    },
    "896": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "DUP2",
      "path": "63"
    },
    "897": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "898": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "899": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x1"
    },
    "901": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "ADD",
      "path": "63"
    },
    "902": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "903": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "905": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "ADD",
      "path": "63"
    },
    "906": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "DUP1",
      "path": "63"
    },
    "907": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "DUP4",
      "path": "63"
    },
    "908": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "GT",
      "path": "63"
    },
    "909": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x37D"
    },
    "912": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "913": {
      "op": "POP"
    },
    "914": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "SWAP4",
      "path": "63"
    },
    "915": {
      "fn": "ERC777.name",
      "offset": [
        3046,
        3058
      ],
      "op": "SWAP6",
      "path": "63"
    },
    "916": {
      "fn": "ERC777.name",
      "offset": [
        2967,
        3065
      ],
      "op": "SWAP5",
      "path": "63"
    },
    "917": {
      "op": "POP"
    },
    "918": {
      "op": "POP"
    },
    "919": {
      "op": "POP"
    },
    "920": {
      "op": "POP"
    },
    "921": {
      "op": "POP"
    },
    "922": {
      "fn": "ERC777.name",
      "jump": "o",
      "offset": [
        2967,
        3065
      ],
      "op": "JUMP",
      "path": "63"
    },
    "923": {
      "fn": "ERC777.approve",
      "offset": [
        8358,
        8555
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "924": {
      "fn": "ERC777.approve",
      "offset": [
        8440,
        8444
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "926": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "70",
      "statement": 7
    },
    "927": {
      "fn": "ERC777.approve",
      "offset": [
        8495,
        8527
      ],
      "op": "PUSH2",
      "path": "63",
      "statement": 8,
      "value": "0x3A9"
    },
    "930": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP2",
      "path": "70"
    },
    "931": {
      "fn": "ERC777.approve",
      "offset": [
        8512,
        8519
      ],
      "op": "DUP6",
      "path": "63"
    },
    "932": {
      "fn": "ERC777.approve",
      "offset": [
        8521,
        8526
      ],
      "op": "DUP6",
      "path": "63"
    },
    "933": {
      "fn": "ERC777.approve",
      "offset": [
        8495,
        8503
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x9D0"
    },
    "936": {
      "fn": "ERC777.approve",
      "jump": "i",
      "offset": [
        8495,
        8527
      ],
      "op": "JUMP",
      "path": "63"
    },
    "937": {
      "fn": "ERC777.approve",
      "offset": [
        8495,
        8527
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "938": {
      "fn": "ERC777.approve",
      "offset": [
        8544,
        8548
      ],
      "op": "PUSH1",
      "path": "63",
      "statement": 9,
      "value": "0x1"
    },
    "940": {
      "fn": "ERC777.approve",
      "offset": [
        8537,
        8548
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "941": {
      "fn": "ERC777.approve",
      "offset": [
        8537,
        8548
      ],
      "op": "POP",
      "path": "63"
    },
    "942": {
      "fn": "ERC777.approve",
      "offset": [
        8537,
        8548
      ],
      "op": "POP",
      "path": "63"
    },
    "943": {
      "fn": "ERC777.approve",
      "offset": [
        8358,
        8555
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "944": {
      "fn": "ERC777.approve",
      "offset": [
        8358,
        8555
      ],
      "op": "SWAP3",
      "path": "63"
    },
    "945": {
      "fn": "ERC777.approve",
      "offset": [
        8358,
        8555
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "946": {
      "fn": "ERC777.approve",
      "offset": [
        8358,
        8555
      ],
      "op": "POP",
      "path": "63"
    },
    "947": {
      "fn": "ERC777.approve",
      "offset": [
        8358,
        8555
      ],
      "op": "POP",
      "path": "63"
    },
    "948": {
      "fn": "ERC777.approve",
      "jump": "o",
      "offset": [
        8358,
        8555
      ],
      "op": "JUMP",
      "path": "63"
    },
    "949": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8929,
        9735
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "950": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9065,
        9069
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "954": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "956": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "958": {
      "op": "SHL"
    },
    "959": {
      "op": "SUB"
    },
    "960": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9089,
        9112
      ],
      "op": "DUP4",
      "path": "63",
      "statement": 10
    },
    "961": {
      "branch": 63,
      "fn": "ERC777.transferFrom",
      "offset": [
        9089,
        9112
      ],
      "op": "AND",
      "path": "63"
    },
    "962": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9081,
        9153
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x3E6"
    },
    "965": {
      "branch": 63,
      "fn": "ERC777.transferFrom",
      "offset": [
        9081,
        9153
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "966": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9081,
        9153
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "968": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9081,
        9153
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "969": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "973": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "975": {
      "op": "SHL"
    },
    "976": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9081,
        9153
      ],
      "op": "DUP2",
      "path": "63"
    },
    "977": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9081,
        9153
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "978": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9081,
        9153
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x4"
    },
    "980": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9081,
        9153
      ],
      "op": "ADD",
      "path": "63"
    },
    "981": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9081,
        9153
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x3DD"
    },
    "984": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9081,
        9153
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "985": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9081,
        9153
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x15F2"
    },
    "988": {
      "fn": "ERC777.transferFrom",
      "jump": "i",
      "offset": [
        9081,
        9153
      ],
      "op": "JUMP",
      "path": "63"
    },
    "989": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9081,
        9153
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "990": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9081,
        9153
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "992": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9081,
        9153
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "993": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9081,
        9153
      ],
      "op": "DUP1",
      "path": "63"
    },
    "994": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9081,
        9153
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "995": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9081,
        9153
      ],
      "op": "SUB",
      "path": "63"
    },
    "996": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9081,
        9153
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "997": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9081,
        9153
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "63"
    },
    "998": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9081,
        9153
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "999": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1003": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1005": {
      "op": "SHL"
    },
    "1006": {
      "op": "SUB"
    },
    "1007": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9171,
        9191
      ],
      "op": "DUP5",
      "path": "63",
      "statement": 11
    },
    "1008": {
      "branch": 64,
      "fn": "ERC777.transferFrom",
      "offset": [
        9171,
        9191
      ],
      "op": "AND",
      "path": "63"
    },
    "1009": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9163,
        9234
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x44B"
    },
    "1012": {
      "branch": 64,
      "fn": "ERC777.transferFrom",
      "offset": [
        9163,
        9234
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "1013": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9163,
        9234
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "1015": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9163,
        9234
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "1016": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1020": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1022": {
      "op": "SHL"
    },
    "1023": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9163,
        9234
      ],
      "op": "DUP2",
      "path": "63"
    },
    "1024": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9163,
        9234
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "1025": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1027": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9163,
        9234
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x4"
    },
    "1029": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9163,
        9234
      ],
      "op": "DUP3",
      "path": "63"
    },
    "1030": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9163,
        9234
      ],
      "op": "ADD",
      "path": "63"
    },
    "1031": {
      "op": "MSTORE"
    },
    "1032": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1034": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1036": {
      "op": "DUP3"
    },
    "1037": {
      "op": "ADD"
    },
    "1038": {
      "op": "MSTORE"
    },
    "1039": {
      "op": "PUSH32",
      "value": "0x4552433737373A207472616E736665722066726F6D20746865207A65726F2061"
    },
    "1072": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1074": {
      "op": "DUP3"
    },
    "1075": {
      "op": "ADD"
    },
    "1076": {
      "op": "MSTORE"
    },
    "1077": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "1084": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "1086": {
      "op": "SHL"
    },
    "1087": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1089": {
      "op": "DUP3"
    },
    "1090": {
      "op": "ADD"
    },
    "1091": {
      "op": "MSTORE"
    },
    "1092": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1094": {
      "op": "ADD"
    },
    "1095": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9163,
        9234
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x3DD"
    },
    "1098": {
      "op": "JUMP"
    },
    "1099": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9163,
        9234
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "1100": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9245,
        9260
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "1102": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "70"
    },
    "1103": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9245,
        9275
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "1104": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9245,
        9275
      ],
      "op": "POP",
      "path": "63"
    },
    "1105": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9286,
        9347
      ],
      "op": "PUSH2",
      "path": "63",
      "statement": 12,
      "value": "0x47C"
    },
    "1108": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9304,
        9311
      ],
      "op": "DUP2",
      "path": "63"
    },
    "1109": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9313,
        9319
      ],
      "op": "DUP7",
      "path": "63"
    },
    "1110": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9321,
        9330
      ],
      "op": "DUP7",
      "path": "63"
    },
    "1111": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9332,
        9338
      ],
      "op": "DUP7",
      "path": "63"
    },
    "1112": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9286,
        9347
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "1114": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9286,
        9347
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "1115": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9286,
        9347
      ],
      "op": "DUP1",
      "path": "63"
    },
    "1116": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9286,
        9347
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "1118": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9286,
        9347
      ],
      "op": "ADD",
      "path": "63"
    },
    "1119": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9286,
        9347
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "1121": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9286,
        9347
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "1122": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9286,
        9347
      ],
      "op": "DUP1",
      "path": "63"
    },
    "1123": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9286,
        9347
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "1125": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9286,
        9347
      ],
      "op": "DUP2",
      "path": "63"
    },
    "1126": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9286,
        9347
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "1127": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9286,
        9347
      ],
      "op": "POP",
      "path": "63"
    },
    "1128": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9286,
        9347
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "1130": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9286,
        9347
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "1131": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9286,
        9347
      ],
      "op": "DUP1",
      "path": "63"
    },
    "1132": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9286,
        9347
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "1134": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9286,
        9347
      ],
      "op": "ADD",
      "path": "63"
    },
    "1135": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9286,
        9347
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "1137": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9286,
        9347
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "1138": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9286,
        9347
      ],
      "op": "DUP1",
      "path": "63"
    },
    "1139": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9286,
        9347
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "1141": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9286,
        9347
      ],
      "op": "DUP2",
      "path": "63"
    },
    "1142": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9286,
        9347
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "1143": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9286,
        9347
      ],
      "op": "POP",
      "path": "63"
    },
    "1144": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9286,
        9303
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0xAF7"
    },
    "1147": {
      "fn": "ERC777.transferFrom",
      "jump": "i",
      "offset": [
        9286,
        9347
      ],
      "op": "JUMP",
      "path": "63"
    },
    "1148": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9286,
        9347
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "1149": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1151": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1153": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1155": {
      "op": "SHL"
    },
    "1156": {
      "op": "SUB"
    },
    "1157": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9385,
        9404
      ],
      "op": "DUP1",
      "path": "63"
    },
    "1158": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9385,
        9404
      ],
      "op": "DUP7",
      "path": "63"
    },
    "1159": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9385,
        9404
      ],
      "op": "AND",
      "path": "63"
    },
    "1160": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9358,
        9382
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "1162": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9385,
        9404
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "1163": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9385,
        9404
      ],
      "op": "DUP2",
      "path": "63"
    },
    "1164": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9385,
        9404
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "1165": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9385,
        9396
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x8"
    },
    "1167": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9385,
        9404
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "1169": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9385,
        9404
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "1170": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9385,
        9404
      ],
      "op": "DUP2",
      "path": "63"
    },
    "1171": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9385,
        9404
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "1172": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9385,
        9404
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "1174": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9385,
        9404
      ],
      "op": "DUP1",
      "path": "63"
    },
    "1175": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9385,
        9404
      ],
      "op": "DUP4",
      "path": "63"
    },
    "1176": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9385,
        9404
      ],
      "op": "KECCAK256",
      "path": "63"
    },
    "1177": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9385,
        9413
      ],
      "op": "SWAP4",
      "path": "63"
    },
    "1178": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9385,
        9413
      ],
      "op": "DUP6",
      "path": "63"
    },
    "1179": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9385,
        9413
      ],
      "op": "AND",
      "path": "63"
    },
    "1180": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9385,
        9413
      ],
      "op": "DUP4",
      "path": "63"
    },
    "1181": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9385,
        9413
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "1182": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9385,
        9413
      ],
      "op": "SWAP3",
      "path": "63"
    },
    "1183": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9385,
        9413
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "1184": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9385,
        9413
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "1185": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9385,
        9413
      ],
      "op": "KECCAK256",
      "path": "63"
    },
    "1186": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9385,
        9413
      ],
      "op": "SLOAD",
      "path": "63"
    },
    "1187": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9431,
        9457
      ],
      "op": "DUP4",
      "path": "63",
      "statement": 13
    },
    "1188": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9431,
        9457
      ],
      "op": "DUP2",
      "path": "63"
    },
    "1189": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9431,
        9457
      ],
      "op": "LT",
      "path": "63"
    },
    "1190": {
      "branch": 65,
      "fn": "ERC777.transferFrom",
      "offset": [
        9431,
        9457
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "1191": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9423,
        9503
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x504"
    },
    "1194": {
      "branch": 65,
      "fn": "ERC777.transferFrom",
      "offset": [
        9423,
        9503
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "1195": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9423,
        9503
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "1197": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9423,
        9503
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "1198": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1202": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1204": {
      "op": "SHL"
    },
    "1205": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9423,
        9503
      ],
      "op": "DUP2",
      "path": "63"
    },
    "1206": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9423,
        9503
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "1207": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1209": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9423,
        9503
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x4"
    },
    "1211": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9423,
        9503
      ],
      "op": "DUP3",
      "path": "63"
    },
    "1212": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9423,
        9503
      ],
      "op": "ADD",
      "path": "63"
    },
    "1213": {
      "op": "MSTORE"
    },
    "1214": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "1216": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1218": {
      "op": "DUP3"
    },
    "1219": {
      "op": "ADD"
    },
    "1220": {
      "op": "MSTORE"
    },
    "1221": {
      "op": "PUSH32",
      "value": "0x4552433737373A207472616E7366657220616D6F756E74206578636565647320"
    },
    "1254": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1256": {
      "op": "DUP3"
    },
    "1257": {
      "op": "ADD"
    },
    "1258": {
      "op": "MSTORE"
    },
    "1259": {
      "op": "PUSH9",
      "value": "0x616C6C6F77616E6365"
    },
    "1269": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "1271": {
      "op": "SHL"
    },
    "1272": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1274": {
      "op": "DUP3"
    },
    "1275": {
      "op": "ADD"
    },
    "1276": {
      "op": "MSTORE"
    },
    "1277": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1279": {
      "op": "ADD"
    },
    "1280": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9423,
        9503
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x3DD"
    },
    "1283": {
      "op": "JUMP"
    },
    "1284": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9423,
        9503
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "1285": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9513,
        9565
      ],
      "op": "PUSH2",
      "path": "63",
      "statement": 14,
      "value": "0x518"
    },
    "1288": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9522,
        9528
      ],
      "op": "DUP7",
      "path": "63"
    },
    "1289": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9530,
        9537
      ],
      "op": "DUP4",
      "path": "63"
    },
    "1290": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9539,
        9564
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x513"
    },
    "1293": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9558,
        9564
      ],
      "op": "DUP8",
      "path": "63"
    },
    "1294": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9539,
        9555
      ],
      "op": "DUP6",
      "path": "63"
    },
    "1295": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9539,
        9564
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x164C"
    },
    "1298": {
      "fn": "ERC777.transferFrom",
      "jump": "i",
      "offset": [
        9539,
        9564
      ],
      "op": "JUMP",
      "path": "63"
    },
    "1299": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9539,
        9564
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "1300": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9513,
        9521
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x9D0"
    },
    "1303": {
      "fn": "ERC777.transferFrom",
      "jump": "i",
      "offset": [
        9513,
        9565
      ],
      "op": "JUMP",
      "path": "63"
    },
    "1304": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9513,
        9565
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "1305": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9576,
        9625
      ],
      "op": "PUSH2",
      "path": "63",
      "statement": 15,
      "value": "0x544"
    },
    "1308": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9582,
        9589
      ],
      "op": "DUP3",
      "path": "63"
    },
    "1309": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9591,
        9597
      ],
      "op": "DUP8",
      "path": "63"
    },
    "1310": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9599,
        9608
      ],
      "op": "DUP8",
      "path": "63"
    },
    "1311": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9610,
        9616
      ],
      "op": "DUP8",
      "path": "63"
    },
    "1312": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9576,
        9625
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "1314": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9576,
        9625
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "1315": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9576,
        9625
      ],
      "op": "DUP1",
      "path": "63"
    },
    "1316": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9576,
        9625
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "1318": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9576,
        9625
      ],
      "op": "ADD",
      "path": "63"
    },
    "1319": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9576,
        9625
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "1321": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9576,
        9625
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "1322": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9576,
        9625
      ],
      "op": "DUP1",
      "path": "63"
    },
    "1323": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9576,
        9625
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "1325": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9576,
        9625
      ],
      "op": "DUP2",
      "path": "63"
    },
    "1326": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9576,
        9625
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "1327": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9576,
        9625
      ],
      "op": "POP",
      "path": "63"
    },
    "1328": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9576,
        9625
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "1330": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9576,
        9625
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "1331": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9576,
        9625
      ],
      "op": "DUP1",
      "path": "63"
    },
    "1332": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9576,
        9625
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "1334": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9576,
        9625
      ],
      "op": "ADD",
      "path": "63"
    },
    "1335": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9576,
        9625
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "1337": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9576,
        9625
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "1338": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9576,
        9625
      ],
      "op": "DUP1",
      "path": "63"
    },
    "1339": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9576,
        9625
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "1341": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9576,
        9625
      ],
      "op": "DUP2",
      "path": "63"
    },
    "1342": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9576,
        9625
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "1343": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9576,
        9625
      ],
      "op": "POP",
      "path": "63"
    },
    "1344": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9576,
        9581
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0xC1F"
    },
    "1347": {
      "fn": "ERC777.transferFrom",
      "jump": "i",
      "offset": [
        9576,
        9625
      ],
      "op": "JUMP",
      "path": "63"
    },
    "1348": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9576,
        9625
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "1349": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9636,
        9706
      ],
      "op": "PUSH2",
      "path": "63",
      "statement": 16,
      "value": "0x572"
    },
    "1352": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9656,
        9663
      ],
      "op": "DUP3",
      "path": "63"
    },
    "1353": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9665,
        9671
      ],
      "op": "DUP8",
      "path": "63"
    },
    "1354": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9673,
        9682
      ],
      "op": "DUP8",
      "path": "63"
    },
    "1355": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9684,
        9690
      ],
      "op": "DUP8",
      "path": "63"
    },
    "1356": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9636,
        9706
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "1358": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9636,
        9706
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "1359": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9636,
        9706
      ],
      "op": "DUP1",
      "path": "63"
    },
    "1360": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9636,
        9706
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "1362": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9636,
        9706
      ],
      "op": "ADD",
      "path": "63"
    },
    "1363": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9636,
        9706
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "1365": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9636,
        9706
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "1366": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9636,
        9706
      ],
      "op": "DUP1",
      "path": "63"
    },
    "1367": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9636,
        9706
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "1369": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9636,
        9706
      ],
      "op": "DUP2",
      "path": "63"
    },
    "1370": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9636,
        9706
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "1371": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9636,
        9706
      ],
      "op": "POP",
      "path": "63"
    },
    "1372": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9636,
        9706
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "1374": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9636,
        9706
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "1375": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9636,
        9706
      ],
      "op": "DUP1",
      "path": "63"
    },
    "1376": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9636,
        9706
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "1378": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9636,
        9706
      ],
      "op": "ADD",
      "path": "63"
    },
    "1379": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9636,
        9706
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "1381": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9636,
        9706
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "1382": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9636,
        9706
      ],
      "op": "DUP1",
      "path": "63"
    },
    "1383": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9636,
        9706
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "1385": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9636,
        9706
      ],
      "op": "DUP2",
      "path": "63"
    },
    "1386": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9636,
        9706
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "1387": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9636,
        9706
      ],
      "op": "POP",
      "path": "63"
    },
    "1388": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9700,
        9705
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "1390": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9636,
        9655
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0xD85"
    },
    "1393": {
      "fn": "ERC777.transferFrom",
      "jump": "i",
      "offset": [
        9636,
        9706
      ],
      "op": "JUMP",
      "path": "63"
    },
    "1394": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9636,
        9706
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "1395": {
      "op": "POP"
    },
    "1396": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9724,
        9728
      ],
      "op": "PUSH1",
      "path": "63",
      "statement": 17,
      "value": "0x1"
    },
    "1398": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9724,
        9728
      ],
      "op": "SWAP6",
      "path": "63"
    },
    "1399": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8929,
        9735
      ],
      "op": "SWAP5",
      "path": "63"
    },
    "1400": {
      "op": "POP"
    },
    "1401": {
      "op": "POP"
    },
    "1402": {
      "op": "POP"
    },
    "1403": {
      "op": "POP"
    },
    "1404": {
      "op": "POP"
    },
    "1405": {
      "fn": "ERC777.transferFrom",
      "jump": "o",
      "offset": [
        8929,
        9735
      ],
      "op": "JUMP",
      "path": "63"
    },
    "1406": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7018,
        7384
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "1407": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7225,
        7260
      ],
      "op": "PUSH2",
      "path": "63",
      "statement": 18,
      "value": "0x588"
    },
    "1410": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "70"
    },
    "1411": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7253,
        7259
      ],
      "op": "DUP7",
      "path": "63"
    },
    "1412": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7225,
        7238
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x7BC"
    },
    "1415": {
      "fn": "ERC777.operatorSend",
      "jump": "i",
      "offset": [
        7225,
        7260
      ],
      "op": "JUMP",
      "path": "63"
    },
    "1416": {
      "branch": 66,
      "fn": "ERC777.operatorSend",
      "offset": [
        7225,
        7260
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "1417": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7217,
        7309
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x5A4"
    },
    "1420": {
      "branch": 66,
      "fn": "ERC777.operatorSend",
      "offset": [
        7217,
        7309
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "1421": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7217,
        7309
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "1423": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7217,
        7309
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "1424": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1428": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1430": {
      "op": "SHL"
    },
    "1431": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7217,
        7309
      ],
      "op": "DUP2",
      "path": "63"
    },
    "1432": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7217,
        7309
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "1433": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7217,
        7309
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x4"
    },
    "1435": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7217,
        7309
      ],
      "op": "ADD",
      "path": "63"
    },
    "1436": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7217,
        7309
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x3DD"
    },
    "1439": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7217,
        7309
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "1440": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7217,
        7309
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x165F"
    },
    "1443": {
      "fn": "ERC777.operatorSend",
      "jump": "i",
      "offset": [
        7217,
        7309
      ],
      "op": "JUMP",
      "path": "63"
    },
    "1444": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7217,
        7309
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "1445": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7319,
        7377
      ],
      "op": "PUSH2",
      "path": "63",
      "statement": 19,
      "value": "0x5B3"
    },
    "1448": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7325,
        7331
      ],
      "op": "DUP6",
      "path": "63"
    },
    "1449": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7333,
        7342
      ],
      "op": "DUP6",
      "path": "63"
    },
    "1450": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7344,
        7350
      ],
      "op": "DUP6",
      "path": "63"
    },
    "1451": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7352,
        7356
      ],
      "op": "DUP6",
      "path": "63"
    },
    "1452": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7358,
        7370
      ],
      "op": "DUP6",
      "path": "63"
    },
    "1453": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7372,
        7376
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x1"
    },
    "1455": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7319,
        7324
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0xF4A"
    },
    "1458": {
      "fn": "ERC777.operatorSend",
      "jump": "i",
      "offset": [
        7319,
        7377
      ],
      "op": "JUMP",
      "path": "63"
    },
    "1459": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7319,
        7377
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "1460": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7018,
        7384
      ],
      "op": "POP",
      "path": "63"
    },
    "1461": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7018,
        7384
      ],
      "op": "POP",
      "path": "63"
    },
    "1462": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7018,
        7384
      ],
      "op": "POP",
      "path": "63"
    },
    "1463": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7018,
        7384
      ],
      "op": "POP",
      "path": "63"
    },
    "1464": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7018,
        7384
      ],
      "op": "POP",
      "path": "63"
    },
    "1465": {
      "fn": "ERC777.operatorSend",
      "jump": "o",
      "offset": [
        7018,
        7384
      ],
      "op": "JUMP",
      "path": "63"
    },
    "1466": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5824,
        6236
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "1467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1471": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1473": {
      "op": "SHL"
    },
    "1474": {
      "op": "SUB"
    },
    "1475": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5911,
        5935
      ],
      "op": "DUP2",
      "path": "63",
      "statement": 20
    },
    "1476": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5911,
        5935
      ],
      "op": "AND",
      "path": "63"
    },
    "1477": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "70"
    },
    "1478": {
      "branch": 67,
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5911,
        5935
      ],
      "op": "SUB",
      "path": "63"
    },
    "1479": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5903,
        5976
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x61E"
    },
    "1482": {
      "branch": 67,
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5903,
        5976
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "1483": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5903,
        5976
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "1485": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5903,
        5976
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "1486": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1490": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1492": {
      "op": "SHL"
    },
    "1493": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5903,
        5976
      ],
      "op": "DUP2",
      "path": "63"
    },
    "1494": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5903,
        5976
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "1495": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1497": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5903,
        5976
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x4"
    },
    "1499": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5903,
        5976
      ],
      "op": "DUP3",
      "path": "63"
    },
    "1500": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5903,
        5976
      ],
      "op": "ADD",
      "path": "63"
    },
    "1501": {
      "op": "MSTORE"
    },
    "1502": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1504": {
      "op": "DUP1"
    },
    "1505": {
      "op": "DUP3"
    },
    "1506": {
      "op": "ADD"
    },
    "1507": {
      "op": "MSTORE"
    },
    "1508": {
      "op": "PUSH32",
      "value": "0x4552433737373A20617574686F72697A696E672073656C66206173206F706572"
    },
    "1541": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1543": {
      "op": "DUP3"
    },
    "1544": {
      "op": "ADD"
    },
    "1545": {
      "op": "MSTORE"
    },
    "1546": {
      "op": "PUSH4",
      "value": "0x30BA37B9"
    },
    "1551": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1553": {
      "op": "SHL"
    },
    "1554": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1556": {
      "op": "DUP3"
    },
    "1557": {
      "op": "ADD"
    },
    "1558": {
      "op": "MSTORE"
    },
    "1559": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1561": {
      "op": "ADD"
    },
    "1562": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5903,
        5976
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x3DD"
    },
    "1565": {
      "op": "JUMP"
    },
    "1566": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5903,
        5976
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "1567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1571": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1573": {
      "op": "SHL"
    },
    "1574": {
      "op": "SUB"
    },
    "1575": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5991,
        6018
      ],
      "op": "DUP2",
      "path": "63"
    },
    "1576": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5991,
        6018
      ],
      "op": "AND",
      "path": "63"
    },
    "1577": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5991,
        6018
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "1579": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5991,
        6018
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "1580": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5991,
        6018
      ],
      "op": "DUP2",
      "path": "63"
    },
    "1581": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5991,
        6018
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "1582": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5991,
        6008
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x5"
    },
    "1584": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5991,
        6018
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "1586": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5991,
        6018
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "1587": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5991,
        6018
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "1589": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5991,
        6018
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "1590": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5991,
        6018
      ],
      "op": "KECCAK256",
      "path": "63"
    },
    "1591": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5991,
        6018
      ],
      "op": "SLOAD",
      "path": "63"
    },
    "1592": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5991,
        6018
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0xFF"
    },
    "1594": {
      "branch": 68,
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5991,
        6018
      ],
      "op": "AND",
      "path": "63"
    },
    "1595": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5987,
        6172
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "1596": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5987,
        6172
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x66F"
    },
    "1599": {
      "branch": 68,
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5987,
        6172
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "1600": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "70"
    },
    "1601": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6041,
        6079
      ],
      "op": "PUSH1",
      "path": "63",
      "statement": 21,
      "value": "0x0"
    },
    "1603": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6041,
        6079
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "1604": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6041,
        6079
      ],
      "op": "DUP2",
      "path": "63"
    },
    "1605": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6041,
        6079
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "1606": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6041,
        6065
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x7"
    },
    "1608": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6041,
        6079
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "1610": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6041,
        6079
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "1611": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6041,
        6079
      ],
      "op": "DUP2",
      "path": "63"
    },
    "1612": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6041,
        6079
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "1613": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6041,
        6079
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "1615": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6041,
        6079
      ],
      "op": "DUP1",
      "path": "63"
    },
    "1616": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6041,
        6079
      ],
      "op": "DUP4",
      "path": "63"
    },
    "1617": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6041,
        6079
      ],
      "op": "KECCAK256",
      "path": "63"
    },
    "1618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1622": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1624": {
      "op": "SHL"
    },
    "1625": {
      "op": "SUB"
    },
    "1626": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6041,
        6089
      ],
      "op": "DUP6",
      "path": "63"
    },
    "1627": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6041,
        6089
      ],
      "op": "AND",
      "path": "63"
    },
    "1628": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6041,
        6089
      ],
      "op": "DUP5",
      "path": "63"
    },
    "1629": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6041,
        6089
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "1630": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6041,
        6089
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "1631": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6041,
        6089
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "1632": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6041,
        6089
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "1633": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6041,
        6089
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "1634": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6041,
        6089
      ],
      "op": "KECCAK256",
      "path": "63"
    },
    "1635": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6034,
        6089
      ],
      "op": "DUP1",
      "path": "63"
    },
    "1636": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6034,
        6089
      ],
      "op": "SLOAD",
      "path": "63"
    },
    "1637": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1639": {
      "op": "NOT"
    },
    "1640": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6034,
        6089
      ],
      "op": "AND",
      "path": "63"
    },
    "1641": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6034,
        6089
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "1642": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6034,
        6089
      ],
      "op": "SSTORE",
      "path": "63"
    },
    "1643": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5987,
        6172
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x69E"
    },
    "1646": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5987,
        6172
      ],
      "op": "JUMP",
      "path": "63"
    },
    "1647": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5987,
        6172
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "1648": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "70"
    },
    "1649": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6120,
        6144
      ],
      "op": "PUSH1",
      "path": "63",
      "statement": 22,
      "value": "0x0"
    },
    "1651": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6120,
        6144
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "1652": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6120,
        6144
      ],
      "op": "DUP2",
      "path": "63"
    },
    "1653": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6120,
        6144
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "1654": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6120,
        6130
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x6"
    },
    "1656": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6120,
        6144
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "1658": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6120,
        6144
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "1659": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6120,
        6144
      ],
      "op": "DUP2",
      "path": "63"
    },
    "1660": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6120,
        6144
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "1661": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6120,
        6144
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "1663": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6120,
        6144
      ],
      "op": "DUP1",
      "path": "63"
    },
    "1664": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6120,
        6144
      ],
      "op": "DUP4",
      "path": "63"
    },
    "1665": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6120,
        6144
      ],
      "op": "KECCAK256",
      "path": "63"
    },
    "1666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1668": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1670": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1672": {
      "op": "SHL"
    },
    "1673": {
      "op": "SUB"
    },
    "1674": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6120,
        6154
      ],
      "op": "DUP6",
      "path": "63"
    },
    "1675": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6120,
        6154
      ],
      "op": "AND",
      "path": "63"
    },
    "1676": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6120,
        6154
      ],
      "op": "DUP5",
      "path": "63"
    },
    "1677": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6120,
        6154
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "1678": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6120,
        6154
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "1679": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6120,
        6154
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "1680": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6120,
        6154
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "1681": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6120,
        6154
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "1682": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6120,
        6154
      ],
      "op": "KECCAK256",
      "path": "63"
    },
    "1683": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6120,
        6161
      ],
      "op": "DUP1",
      "path": "63"
    },
    "1684": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6120,
        6161
      ],
      "op": "SLOAD",
      "path": "63"
    },
    "1685": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1687": {
      "op": "NOT"
    },
    "1688": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6120,
        6161
      ],
      "op": "AND",
      "path": "63"
    },
    "1689": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6157,
        6161
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x1"
    },
    "1691": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6120,
        6161
      ],
      "op": "OR",
      "path": "63"
    },
    "1692": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6120,
        6161
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "1693": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6120,
        6161
      ],
      "op": "SSTORE",
      "path": "63"
    },
    "1694": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5987,
        6172
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "1695": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6187,
        6229
      ],
      "op": "PUSH1",
      "path": "63",
      "statement": 23,
      "value": "0x40"
    },
    "1697": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6187,
        6229
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "1698": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "70"
    },
    "1699": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "70"
    },
    "1700": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1702": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1704": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1706": {
      "op": "SHL"
    },
    "1707": {
      "op": "SUB"
    },
    "1708": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6187,
        6229
      ],
      "op": "DUP4",
      "path": "63"
    },
    "1709": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6187,
        6229
      ],
      "op": "AND",
      "path": "63"
    },
    "1710": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6187,
        6229
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "1711": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6187,
        6229
      ],
      "op": "PUSH32",
      "path": "63",
      "value": "0xF4CAEB2D6CA8932A215A353D0703C326EC2D81FC68170F320EB2AB49E9DF61F9"
    },
    "1744": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6187,
        6229
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "1745": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6187,
        6229
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "1747": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6187,
        6229
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "1748": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        6187,
        6229
      ],
      "op": "LOG3",
      "path": "63"
    },
    "1749": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5824,
        6236
      ],
      "op": "POP",
      "path": "63"
    },
    "1750": {
      "fn": "ERC777.authorizeOperator",
      "jump": "o",
      "offset": [
        5824,
        6236
      ],
      "op": "JUMP",
      "path": "63"
    },
    "1751": {
      "fn": "ERC777.symbol",
      "offset": [
        3121,
        3223
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "1752": {
      "fn": "ERC777.symbol",
      "offset": [
        3177,
        3190
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x60"
    },
    "1754": {
      "fn": "ERC777.symbol",
      "offset": [
        3209,
        3216
      ],
      "op": "PUSH1",
      "path": "63",
      "statement": 24,
      "value": "0x3"
    },
    "1756": {
      "fn": "ERC777.symbol",
      "offset": [
        3202,
        3216
      ],
      "op": "DUP1",
      "path": "63"
    },
    "1757": {
      "fn": "ERC777.symbol",
      "offset": [
        3202,
        3216
      ],
      "op": "SLOAD",
      "path": "63"
    },
    "1758": {
      "fn": "ERC777.symbol",
      "offset": [
        3202,
        3216
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x321"
    },
    "1761": {
      "fn": "ERC777.symbol",
      "offset": [
        3202,
        3216
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "1762": {
      "fn": "ERC777.symbol",
      "offset": [
        3202,
        3216
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x15B8"
    },
    "1765": {
      "fn": "ERC777.symbol",
      "jump": "i",
      "offset": [
        3202,
        3216
      ],
      "op": "JUMP",
      "path": "63"
    },
    "1766": {
      "fn": "ERC777.send",
      "offset": [
        4263,
        4456
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "1767": {
      "fn": "ERC777.send",
      "offset": [
        4395,
        4449
      ],
      "op": "PUSH2",
      "path": "63",
      "statement": 25,
      "value": "0x704"
    },
    "1770": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "70"
    },
    "1771": {
      "fn": "ERC777.send",
      "offset": [
        4415,
        4424
      ],
      "op": "DUP5",
      "path": "63"
    },
    "1772": {
      "fn": "ERC777.send",
      "offset": [
        4426,
        4432
      ],
      "op": "DUP5",
      "path": "63"
    },
    "1773": {
      "fn": "ERC777.send",
      "offset": [
        4434,
        4438
      ],
      "op": "DUP5",
      "path": "63"
    },
    "1774": {
      "fn": "ERC777.send",
      "offset": [
        4395,
        4449
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "1776": {
      "fn": "ERC777.send",
      "offset": [
        4395,
        4449
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "1777": {
      "fn": "ERC777.send",
      "offset": [
        4395,
        4449
      ],
      "op": "DUP1",
      "path": "63"
    },
    "1778": {
      "fn": "ERC777.send",
      "offset": [
        4395,
        4449
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "1780": {
      "fn": "ERC777.send",
      "offset": [
        4395,
        4449
      ],
      "op": "ADD",
      "path": "63"
    },
    "1781": {
      "fn": "ERC777.send",
      "offset": [
        4395,
        4449
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "1783": {
      "fn": "ERC777.send",
      "offset": [
        4395,
        4449
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "1784": {
      "fn": "ERC777.send",
      "offset": [
        4395,
        4449
      ],
      "op": "DUP1",
      "path": "63"
    },
    "1785": {
      "fn": "ERC777.send",
      "offset": [
        4395,
        4449
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "1787": {
      "fn": "ERC777.send",
      "offset": [
        4395,
        4449
      ],
      "op": "DUP2",
      "path": "63"
    },
    "1788": {
      "fn": "ERC777.send",
      "offset": [
        4395,
        4449
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "1789": {
      "fn": "ERC777.send",
      "offset": [
        4395,
        4449
      ],
      "op": "POP",
      "path": "63"
    },
    "1790": {
      "fn": "ERC777.send",
      "offset": [
        4444,
        4448
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x1"
    },
    "1792": {
      "fn": "ERC777.send",
      "offset": [
        4395,
        4400
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0xF4A"
    },
    "1795": {
      "fn": "ERC777.send",
      "jump": "i",
      "offset": [
        4395,
        4449
      ],
      "op": "JUMP",
      "path": "63"
    },
    "1796": {
      "fn": "ERC777.send",
      "offset": [
        4395,
        4449
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "1797": {
      "fn": "ERC777.send",
      "offset": [
        4263,
        4456
      ],
      "op": "POP",
      "path": "63"
    },
    "1798": {
      "fn": "ERC777.send",
      "offset": [
        4263,
        4456
      ],
      "op": "POP",
      "path": "63"
    },
    "1799": {
      "fn": "ERC777.send",
      "offset": [
        4263,
        4456
      ],
      "op": "POP",
      "path": "63"
    },
    "1800": {
      "fn": "ERC777.send",
      "jump": "o",
      "offset": [
        4263,
        4456
      ],
      "op": "JUMP",
      "path": "63"
    },
    "1801": {
      "fn": "ERC777.transfer",
      "offset": [
        4687,
        5126
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "1802": {
      "fn": "ERC777.transfer",
      "offset": [
        4773,
        4777
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "1804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1806": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1808": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1810": {
      "op": "SHL"
    },
    "1811": {
      "op": "SUB"
    },
    "1812": {
      "fn": "ERC777.transfer",
      "offset": [
        4797,
        4820
      ],
      "op": "DUP4",
      "path": "63",
      "statement": 26
    },
    "1813": {
      "branch": 69,
      "fn": "ERC777.transfer",
      "offset": [
        4797,
        4820
      ],
      "op": "AND",
      "path": "63"
    },
    "1814": {
      "fn": "ERC777.transfer",
      "offset": [
        4789,
        4861
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x731"
    },
    "1817": {
      "branch": 69,
      "fn": "ERC777.transfer",
      "offset": [
        4789,
        4861
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "1818": {
      "fn": "ERC777.transfer",
      "offset": [
        4789,
        4861
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "1820": {
      "fn": "ERC777.transfer",
      "offset": [
        4789,
        4861
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "1821": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1825": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1827": {
      "op": "SHL"
    },
    "1828": {
      "fn": "ERC777.transfer",
      "offset": [
        4789,
        4861
      ],
      "op": "DUP2",
      "path": "63"
    },
    "1829": {
      "fn": "ERC777.transfer",
      "offset": [
        4789,
        4861
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "1830": {
      "fn": "ERC777.transfer",
      "offset": [
        4789,
        4861
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x4"
    },
    "1832": {
      "fn": "ERC777.transfer",
      "offset": [
        4789,
        4861
      ],
      "op": "ADD",
      "path": "63"
    },
    "1833": {
      "fn": "ERC777.transfer",
      "offset": [
        4789,
        4861
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x3DD"
    },
    "1836": {
      "fn": "ERC777.transfer",
      "offset": [
        4789,
        4861
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "1837": {
      "fn": "ERC777.transfer",
      "offset": [
        4789,
        4861
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x15F2"
    },
    "1840": {
      "fn": "ERC777.transfer",
      "jump": "i",
      "offset": [
        4789,
        4861
      ],
      "op": "JUMP",
      "path": "63"
    },
    "1841": {
      "fn": "ERC777.transfer",
      "offset": [
        4789,
        4861
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "1842": {
      "fn": "ERC777.transfer",
      "offset": [
        4872,
        4884
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "1844": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "70"
    },
    "1845": {
      "fn": "ERC777.transfer",
      "offset": [
        4872,
        4899
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "1846": {
      "fn": "ERC777.transfer",
      "offset": [
        4872,
        4899
      ],
      "op": "POP",
      "path": "63"
    },
    "1847": {
      "fn": "ERC777.transfer",
      "offset": [
        4910,
        4966
      ],
      "op": "PUSH2",
      "path": "63",
      "statement": 27,
      "value": "0x762"
    },
    "1850": {
      "fn": "ERC777.transfer",
      "offset": [
        4928,
        4932
      ],
      "op": "DUP2",
      "path": "63"
    },
    "1851": {
      "fn": "ERC777.transfer",
      "offset": [
        4934,
        4938
      ],
      "op": "DUP3",
      "path": "63"
    },
    "1852": {
      "fn": "ERC777.transfer",
      "offset": [
        4940,
        4949
      ],
      "op": "DUP7",
      "path": "63"
    },
    "1853": {
      "fn": "ERC777.transfer",
      "offset": [
        4951,
        4957
      ],
      "op": "DUP7",
      "path": "63"
    },
    "1854": {
      "fn": "ERC777.transfer",
      "offset": [
        4910,
        4966
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "1856": {
      "fn": "ERC777.transfer",
      "offset": [
        4910,
        4966
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "1857": {
      "fn": "ERC777.transfer",
      "offset": [
        4910,
        4966
      ],
      "op": "DUP1",
      "path": "63"
    },
    "1858": {
      "fn": "ERC777.transfer",
      "offset": [
        4910,
        4966
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "1860": {
      "fn": "ERC777.transfer",
      "offset": [
        4910,
        4966
      ],
      "op": "ADD",
      "path": "63"
    },
    "1861": {
      "fn": "ERC777.transfer",
      "offset": [
        4910,
        4966
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "1863": {
      "fn": "ERC777.transfer",
      "offset": [
        4910,
        4966
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "1864": {
      "fn": "ERC777.transfer",
      "offset": [
        4910,
        4966
      ],
      "op": "DUP1",
      "path": "63"
    },
    "1865": {
      "fn": "ERC777.transfer",
      "offset": [
        4910,
        4966
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "1867": {
      "fn": "ERC777.transfer",
      "offset": [
        4910,
        4966
      ],
      "op": "DUP2",
      "path": "63"
    },
    "1868": {
      "fn": "ERC777.transfer",
      "offset": [
        4910,
        4966
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "1869": {
      "fn": "ERC777.transfer",
      "offset": [
        4910,
        4966
      ],
      "op": "POP",
      "path": "63"
    },
    "1870": {
      "fn": "ERC777.transfer",
      "offset": [
        4910,
        4966
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "1872": {
      "fn": "ERC777.transfer",
      "offset": [
        4910,
        4966
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "1873": {
      "fn": "ERC777.transfer",
      "offset": [
        4910,
        4966
      ],
      "op": "DUP1",
      "path": "63"
    },
    "1874": {
      "fn": "ERC777.transfer",
      "offset": [
        4910,
        4966
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "1876": {
      "fn": "ERC777.transfer",
      "offset": [
        4910,
        4966
      ],
      "op": "ADD",
      "path": "63"
    },
    "1877": {
      "fn": "ERC777.transfer",
      "offset": [
        4910,
        4966
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "1879": {
      "fn": "ERC777.transfer",
      "offset": [
        4910,
        4966
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "1880": {
      "fn": "ERC777.transfer",
      "offset": [
        4910,
        4966
      ],
      "op": "DUP1",
      "path": "63"
    },
    "1881": {
      "fn": "ERC777.transfer",
      "offset": [
        4910,
        4966
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "1883": {
      "fn": "ERC777.transfer",
      "offset": [
        4910,
        4966
      ],
      "op": "DUP2",
      "path": "63"
    },
    "1884": {
      "fn": "ERC777.transfer",
      "offset": [
        4910,
        4966
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "1885": {
      "fn": "ERC777.transfer",
      "offset": [
        4910,
        4966
      ],
      "op": "POP",
      "path": "63"
    },
    "1886": {
      "fn": "ERC777.transfer",
      "offset": [
        4910,
        4927
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0xAF7"
    },
    "1889": {
      "fn": "ERC777.transfer",
      "jump": "i",
      "offset": [
        4910,
        4966
      ],
      "op": "JUMP",
      "path": "63"
    },
    "1890": {
      "fn": "ERC777.transfer",
      "offset": [
        4910,
        4966
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "1891": {
      "fn": "ERC777.transfer",
      "offset": [
        4977,
        5021
      ],
      "op": "PUSH2",
      "path": "63",
      "statement": 28,
      "value": "0x78E"
    },
    "1894": {
      "fn": "ERC777.transfer",
      "offset": [
        4983,
        4987
      ],
      "op": "DUP2",
      "path": "63"
    },
    "1895": {
      "fn": "ERC777.transfer",
      "offset": [
        4989,
        4993
      ],
      "op": "DUP3",
      "path": "63"
    },
    "1896": {
      "fn": "ERC777.transfer",
      "offset": [
        4995,
        5004
      ],
      "op": "DUP7",
      "path": "63"
    },
    "1897": {
      "fn": "ERC777.transfer",
      "offset": [
        5006,
        5012
      ],
      "op": "DUP7",
      "path": "63"
    },
    "1898": {
      "fn": "ERC777.transfer",
      "offset": [
        4977,
        5021
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "1900": {
      "fn": "ERC777.transfer",
      "offset": [
        4977,
        5021
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "1901": {
      "fn": "ERC777.transfer",
      "offset": [
        4977,
        5021
      ],
      "op": "DUP1",
      "path": "63"
    },
    "1902": {
      "fn": "ERC777.transfer",
      "offset": [
        4977,
        5021
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "1904": {
      "fn": "ERC777.transfer",
      "offset": [
        4977,
        5021
      ],
      "op": "ADD",
      "path": "63"
    },
    "1905": {
      "fn": "ERC777.transfer",
      "offset": [
        4977,
        5021
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "1907": {
      "fn": "ERC777.transfer",
      "offset": [
        4977,
        5021
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "1908": {
      "fn": "ERC777.transfer",
      "offset": [
        4977,
        5021
      ],
      "op": "DUP1",
      "path": "63"
    },
    "1909": {
      "fn": "ERC777.transfer",
      "offset": [
        4977,
        5021
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "1911": {
      "fn": "ERC777.transfer",
      "offset": [
        4977,
        5021
      ],
      "op": "DUP2",
      "path": "63"
    },
    "1912": {
      "fn": "ERC777.transfer",
      "offset": [
        4977,
        5021
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "1913": {
      "fn": "ERC777.transfer",
      "offset": [
        4977,
        5021
      ],
      "op": "POP",
      "path": "63"
    },
    "1914": {
      "fn": "ERC777.transfer",
      "offset": [
        4977,
        5021
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "1916": {
      "fn": "ERC777.transfer",
      "offset": [
        4977,
        5021
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "1917": {
      "fn": "ERC777.transfer",
      "offset": [
        4977,
        5021
      ],
      "op": "DUP1",
      "path": "63"
    },
    "1918": {
      "fn": "ERC777.transfer",
      "offset": [
        4977,
        5021
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "1920": {
      "fn": "ERC777.transfer",
      "offset": [
        4977,
        5021
      ],
      "op": "ADD",
      "path": "63"
    },
    "1921": {
      "fn": "ERC777.transfer",
      "offset": [
        4977,
        5021
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "1923": {
      "fn": "ERC777.transfer",
      "offset": [
        4977,
        5021
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "1924": {
      "fn": "ERC777.transfer",
      "offset": [
        4977,
        5021
      ],
      "op": "DUP1",
      "path": "63"
    },
    "1925": {
      "fn": "ERC777.transfer",
      "offset": [
        4977,
        5021
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "1927": {
      "fn": "ERC777.transfer",
      "offset": [
        4977,
        5021
      ],
      "op": "DUP2",
      "path": "63"
    },
    "1928": {
      "fn": "ERC777.transfer",
      "offset": [
        4977,
        5021
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "1929": {
      "fn": "ERC777.transfer",
      "offset": [
        4977,
        5021
      ],
      "op": "POP",
      "path": "63"
    },
    "1930": {
      "fn": "ERC777.transfer",
      "offset": [
        4977,
        4982
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0xC1F"
    },
    "1933": {
      "fn": "ERC777.transfer",
      "jump": "i",
      "offset": [
        4977,
        5021
      ],
      "op": "JUMP",
      "path": "63"
    },
    "1934": {
      "fn": "ERC777.transfer",
      "offset": [
        4977,
        5021
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "1935": {
      "fn": "ERC777.transfer",
      "offset": [
        5032,
        5097
      ],
      "op": "PUSH2",
      "path": "63",
      "statement": 29,
      "value": "0x3A9"
    },
    "1938": {
      "fn": "ERC777.transfer",
      "offset": [
        5052,
        5056
      ],
      "op": "DUP2",
      "path": "63"
    },
    "1939": {
      "fn": "ERC777.transfer",
      "offset": [
        5058,
        5062
      ],
      "op": "DUP3",
      "path": "63"
    },
    "1940": {
      "fn": "ERC777.transfer",
      "offset": [
        5064,
        5073
      ],
      "op": "DUP7",
      "path": "63"
    },
    "1941": {
      "fn": "ERC777.transfer",
      "offset": [
        5075,
        5081
      ],
      "op": "DUP7",
      "path": "63"
    },
    "1942": {
      "fn": "ERC777.transfer",
      "offset": [
        5032,
        5097
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "1944": {
      "fn": "ERC777.transfer",
      "offset": [
        5032,
        5097
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "1945": {
      "fn": "ERC777.transfer",
      "offset": [
        5032,
        5097
      ],
      "op": "DUP1",
      "path": "63"
    },
    "1946": {
      "fn": "ERC777.transfer",
      "offset": [
        5032,
        5097
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "1948": {
      "fn": "ERC777.transfer",
      "offset": [
        5032,
        5097
      ],
      "op": "ADD",
      "path": "63"
    },
    "1949": {
      "fn": "ERC777.transfer",
      "offset": [
        5032,
        5097
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "1951": {
      "fn": "ERC777.transfer",
      "offset": [
        5032,
        5097
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "1952": {
      "fn": "ERC777.transfer",
      "offset": [
        5032,
        5097
      ],
      "op": "DUP1",
      "path": "63"
    },
    "1953": {
      "fn": "ERC777.transfer",
      "offset": [
        5032,
        5097
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "1955": {
      "fn": "ERC777.transfer",
      "offset": [
        5032,
        5097
      ],
      "op": "DUP2",
      "path": "63"
    },
    "1956": {
      "fn": "ERC777.transfer",
      "offset": [
        5032,
        5097
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "1957": {
      "fn": "ERC777.transfer",
      "offset": [
        5032,
        5097
      ],
      "op": "POP",
      "path": "63"
    },
    "1958": {
      "fn": "ERC777.transfer",
      "offset": [
        5032,
        5097
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "1960": {
      "fn": "ERC777.transfer",
      "offset": [
        5032,
        5097
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "1961": {
      "fn": "ERC777.transfer",
      "offset": [
        5032,
        5097
      ],
      "op": "DUP1",
      "path": "63"
    },
    "1962": {
      "fn": "ERC777.transfer",
      "offset": [
        5032,
        5097
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "1964": {
      "fn": "ERC777.transfer",
      "offset": [
        5032,
        5097
      ],
      "op": "ADD",
      "path": "63"
    },
    "1965": {
      "fn": "ERC777.transfer",
      "offset": [
        5032,
        5097
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "1967": {
      "fn": "ERC777.transfer",
      "offset": [
        5032,
        5097
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "1968": {
      "fn": "ERC777.transfer",
      "offset": [
        5032,
        5097
      ],
      "op": "DUP1",
      "path": "63"
    },
    "1969": {
      "fn": "ERC777.transfer",
      "offset": [
        5032,
        5097
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "1971": {
      "fn": "ERC777.transfer",
      "offset": [
        5032,
        5097
      ],
      "op": "DUP2",
      "path": "63"
    },
    "1972": {
      "fn": "ERC777.transfer",
      "offset": [
        5032,
        5097
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "1973": {
      "fn": "ERC777.transfer",
      "offset": [
        5032,
        5097
      ],
      "op": "POP",
      "path": "63"
    },
    "1974": {
      "fn": "ERC777.transfer",
      "offset": [
        5091,
        5096
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "1976": {
      "fn": "ERC777.transfer",
      "offset": [
        5032,
        5051
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0xD85"
    },
    "1979": {
      "fn": "ERC777.transfer",
      "jump": "i",
      "offset": [
        5032,
        5097
      ],
      "op": "JUMP",
      "path": "63"
    },
    "1980": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5446,
        5757
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "1981": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5546,
        5550
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "1983": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5593,
        5604
      ],
      "op": "DUP2",
      "path": "63",
      "statement": 30
    },
    "1984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1986": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1988": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1990": {
      "op": "SHL"
    },
    "1991": {
      "op": "SUB"
    },
    "1992": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5581,
        5604
      ],
      "op": "AND",
      "path": "63"
    },
    "1993": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5581,
        5589
      ],
      "op": "DUP4",
      "path": "63"
    },
    "1994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1996": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1998": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2000": {
      "op": "SHL"
    },
    "2001": {
      "op": "SUB"
    },
    "2002": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5581,
        5604
      ],
      "op": "AND",
      "path": "63"
    },
    "2003": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5581,
        5604
      ],
      "op": "EQ",
      "path": "63"
    },
    "2004": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5581,
        5701
      ],
      "op": "DUP1",
      "path": "63"
    },
    "2005": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5581,
        5701
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x827"
    },
    "2008": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5581,
        5701
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "2009": {
      "op": "POP"
    },
    "2010": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2012": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2014": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2016": {
      "op": "SHL"
    },
    "2017": {
      "op": "SUB"
    },
    "2018": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5621,
        5648
      ],
      "op": "DUP4",
      "path": "63"
    },
    "2019": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5621,
        5648
      ],
      "op": "AND",
      "path": "63"
    },
    "2020": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5621,
        5648
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "2022": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5621,
        5648
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "2023": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5621,
        5648
      ],
      "op": "DUP2",
      "path": "63"
    },
    "2024": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5621,
        5648
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "2025": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5621,
        5638
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x5"
    },
    "2027": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5621,
        5648
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "2029": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5621,
        5648
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "2030": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5621,
        5648
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "2032": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5621,
        5648
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "2033": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5621,
        5648
      ],
      "op": "KECCAK256",
      "path": "63"
    },
    "2034": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5621,
        5648
      ],
      "op": "SLOAD",
      "path": "63"
    },
    "2035": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5621,
        5648
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0xFF"
    },
    "2037": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5621,
        5648
      ],
      "op": "AND",
      "path": "63"
    },
    "2038": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5621,
        5700
      ],
      "op": "DUP1",
      "path": "63"
    },
    "2039": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5621,
        5700
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "2040": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5621,
        5700
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x827"
    },
    "2043": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5621,
        5700
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "2044": {
      "op": "POP"
    },
    "2045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2047": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2049": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2051": {
      "op": "SHL"
    },
    "2052": {
      "op": "SUB"
    },
    "2053": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5653,
        5690
      ],
      "op": "DUP1",
      "path": "63"
    },
    "2054": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5653,
        5690
      ],
      "op": "DUP4",
      "path": "63"
    },
    "2055": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5653,
        5690
      ],
      "op": "AND",
      "path": "63"
    },
    "2056": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5653,
        5690
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "2058": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5653,
        5690
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "2059": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5653,
        5690
      ],
      "op": "DUP2",
      "path": "63"
    },
    "2060": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5653,
        5690
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "2061": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5653,
        5677
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x7"
    },
    "2063": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5653,
        5690
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "2065": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5653,
        5690
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "2066": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5653,
        5690
      ],
      "op": "DUP2",
      "path": "63"
    },
    "2067": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5653,
        5690
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "2068": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5653,
        5690
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "2070": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5653,
        5690
      ],
      "op": "DUP1",
      "path": "63"
    },
    "2071": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5653,
        5690
      ],
      "op": "DUP4",
      "path": "63"
    },
    "2072": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5653,
        5690
      ],
      "op": "KECCAK256",
      "path": "63"
    },
    "2073": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5653,
        5700
      ],
      "op": "SWAP4",
      "path": "63"
    },
    "2074": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5653,
        5700
      ],
      "op": "DUP8",
      "path": "63"
    },
    "2075": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5653,
        5700
      ],
      "op": "AND",
      "path": "63"
    },
    "2076": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5653,
        5700
      ],
      "op": "DUP4",
      "path": "63"
    },
    "2077": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5653,
        5700
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "2078": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5653,
        5700
      ],
      "op": "SWAP3",
      "path": "63"
    },
    "2079": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5653,
        5700
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "2080": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5653,
        5700
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "2081": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5653,
        5700
      ],
      "op": "KECCAK256",
      "path": "63"
    },
    "2082": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5653,
        5700
      ],
      "op": "SLOAD",
      "path": "63"
    },
    "2083": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5653,
        5700
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0xFF"
    },
    "2085": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5653,
        5700
      ],
      "op": "AND",
      "path": "63"
    },
    "2086": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5652,
        5700
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "2087": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5621,
        5700
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "2088": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5581,
        5750
      ],
      "op": "DUP1",
      "path": "63"
    },
    "2089": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5581,
        5750
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x857"
    },
    "2092": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5581,
        5750
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "2093": {
      "op": "POP"
    },
    "2094": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2096": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2098": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2100": {
      "op": "SHL"
    },
    "2101": {
      "op": "SUB"
    },
    "2102": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5717,
        5740
      ],
      "op": "DUP1",
      "path": "63"
    },
    "2103": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5717,
        5740
      ],
      "op": "DUP4",
      "path": "63"
    },
    "2104": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5717,
        5740
      ],
      "op": "AND",
      "path": "63"
    },
    "2105": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5717,
        5740
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "2107": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5717,
        5740
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "2108": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5717,
        5740
      ],
      "op": "DUP2",
      "path": "63"
    },
    "2109": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5717,
        5740
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "2110": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5717,
        5727
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x6"
    },
    "2112": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5717,
        5740
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "2114": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5717,
        5740
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "2115": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5717,
        5740
      ],
      "op": "DUP2",
      "path": "63"
    },
    "2116": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5717,
        5740
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "2117": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5717,
        5740
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "2119": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5717,
        5740
      ],
      "op": "DUP1",
      "path": "63"
    },
    "2120": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5717,
        5740
      ],
      "op": "DUP4",
      "path": "63"
    },
    "2121": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5717,
        5740
      ],
      "op": "KECCAK256",
      "path": "63"
    },
    "2122": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5717,
        5750
      ],
      "op": "SWAP4",
      "path": "63"
    },
    "2123": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5717,
        5750
      ],
      "op": "DUP8",
      "path": "63"
    },
    "2124": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5717,
        5750
      ],
      "op": "AND",
      "path": "63"
    },
    "2125": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5717,
        5750
      ],
      "op": "DUP4",
      "path": "63"
    },
    "2126": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5717,
        5750
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "2127": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5717,
        5750
      ],
      "op": "SWAP3",
      "path": "63"
    },
    "2128": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5717,
        5750
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "2129": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5717,
        5750
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "2130": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5717,
        5750
      ],
      "op": "KECCAK256",
      "path": "63"
    },
    "2131": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5717,
        5750
      ],
      "op": "SLOAD",
      "path": "63"
    },
    "2132": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5717,
        5750
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0xFF"
    },
    "2134": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5717,
        5750
      ],
      "op": "AND",
      "path": "63"
    },
    "2135": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5581,
        5750
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "2136": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5562,
        5750
      ],
      "op": "SWAP4",
      "path": "63"
    },
    "2137": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5446,
        5757
      ],
      "op": "SWAP3",
      "path": "63"
    },
    "2138": {
      "op": "POP"
    },
    "2139": {
      "op": "POP"
    },
    "2140": {
      "op": "POP"
    },
    "2141": {
      "fn": "ERC777.isOperatorFor",
      "jump": "o",
      "offset": [
        5446,
        5757
      ],
      "op": "JUMP",
      "path": "63"
    },
    "2142": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6300,
        6703
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "2143": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "70"
    },
    "2144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2146": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2148": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2150": {
      "op": "SHL"
    },
    "2151": {
      "op": "SUB"
    },
    "2152": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6384,
        6408
      ],
      "op": "DUP3",
      "path": "63",
      "statement": 31
    },
    "2153": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6384,
        6408
      ],
      "op": "AND",
      "path": "63"
    },
    "2154": {
      "branch": 70,
      "fn": "ERC777.revokeOperator",
      "offset": [
        6384,
        6408
      ],
      "op": "SUB",
      "path": "63"
    },
    "2155": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6376,
        6446
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x8C0"
    },
    "2158": {
      "branch": 70,
      "fn": "ERC777.revokeOperator",
      "offset": [
        6376,
        6446
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "2159": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6376,
        6446
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "2161": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6376,
        6446
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "2162": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2166": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2168": {
      "op": "SHL"
    },
    "2169": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6376,
        6446
      ],
      "op": "DUP2",
      "path": "63"
    },
    "2170": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6376,
        6446
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "2171": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2173": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6376,
        6446
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x4"
    },
    "2175": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6376,
        6446
      ],
      "op": "DUP3",
      "path": "63"
    },
    "2176": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6376,
        6446
      ],
      "op": "ADD",
      "path": "63"
    },
    "2177": {
      "op": "MSTORE"
    },
    "2178": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "2180": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2182": {
      "op": "DUP3"
    },
    "2183": {
      "op": "ADD"
    },
    "2184": {
      "op": "MSTORE"
    },
    "2185": {
      "op": "PUSH32",
      "value": "0x4552433737373A207265766F6B696E672073656C66206173206F70657261746F"
    },
    "2218": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2220": {
      "op": "DUP3"
    },
    "2221": {
      "op": "ADD"
    },
    "2222": {
      "op": "MSTORE"
    },
    "2223": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "2225": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "2227": {
      "op": "SHL"
    },
    "2228": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2230": {
      "op": "DUP3"
    },
    "2231": {
      "op": "ADD"
    },
    "2232": {
      "op": "MSTORE"
    },
    "2233": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2235": {
      "op": "ADD"
    },
    "2236": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6376,
        6446
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x3DD"
    },
    "2239": {
      "op": "JUMP"
    },
    "2240": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6376,
        6446
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "2241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2245": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2247": {
      "op": "SHL"
    },
    "2248": {
      "op": "SUB"
    },
    "2249": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6461,
        6488
      ],
      "op": "DUP2",
      "path": "63"
    },
    "2250": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6461,
        6488
      ],
      "op": "AND",
      "path": "63"
    },
    "2251": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6461,
        6488
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "2253": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6461,
        6488
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "2254": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6461,
        6488
      ],
      "op": "DUP2",
      "path": "63"
    },
    "2255": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6461,
        6488
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "2256": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6461,
        6478
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x5"
    },
    "2258": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6461,
        6488
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "2260": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6461,
        6488
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "2261": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6461,
        6488
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "2263": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6461,
        6488
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "2264": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6461,
        6488
      ],
      "op": "KECCAK256",
      "path": "63"
    },
    "2265": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6461,
        6488
      ],
      "op": "SLOAD",
      "path": "63"
    },
    "2266": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6461,
        6488
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0xFF"
    },
    "2268": {
      "branch": 71,
      "fn": "ERC777.revokeOperator",
      "offset": [
        6461,
        6488
      ],
      "op": "AND",
      "path": "63"
    },
    "2269": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6457,
        6642
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "2270": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6457,
        6642
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x914"
    },
    "2273": {
      "branch": 71,
      "fn": "ERC777.revokeOperator",
      "offset": [
        6457,
        6642
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "2274": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "70"
    },
    "2275": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6504,
        6542
      ],
      "op": "PUSH1",
      "path": "63",
      "statement": 32,
      "value": "0x0"
    },
    "2277": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6504,
        6542
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "2278": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6504,
        6542
      ],
      "op": "DUP2",
      "path": "63"
    },
    "2279": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6504,
        6542
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "2280": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6504,
        6528
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x7"
    },
    "2282": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6504,
        6542
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "2284": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6504,
        6542
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "2285": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6504,
        6542
      ],
      "op": "DUP2",
      "path": "63"
    },
    "2286": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6504,
        6542
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "2287": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6504,
        6542
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "2289": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6504,
        6542
      ],
      "op": "DUP1",
      "path": "63"
    },
    "2290": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6504,
        6542
      ],
      "op": "DUP4",
      "path": "63"
    },
    "2291": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6504,
        6542
      ],
      "op": "KECCAK256",
      "path": "63"
    },
    "2292": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2294": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2296": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2298": {
      "op": "SHL"
    },
    "2299": {
      "op": "SUB"
    },
    "2300": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6504,
        6552
      ],
      "op": "DUP6",
      "path": "63"
    },
    "2301": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6504,
        6552
      ],
      "op": "AND",
      "path": "63"
    },
    "2302": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6504,
        6552
      ],
      "op": "DUP5",
      "path": "63"
    },
    "2303": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6504,
        6552
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "2304": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6504,
        6552
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "2305": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6504,
        6552
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "2306": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6504,
        6552
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "2307": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6504,
        6552
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "2308": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6504,
        6552
      ],
      "op": "KECCAK256",
      "path": "63"
    },
    "2309": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6504,
        6559
      ],
      "op": "DUP1",
      "path": "63"
    },
    "2310": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6504,
        6559
      ],
      "op": "SLOAD",
      "path": "63"
    },
    "2311": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2313": {
      "op": "NOT"
    },
    "2314": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6504,
        6559
      ],
      "op": "AND",
      "path": "63"
    },
    "2315": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6555,
        6559
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x1"
    },
    "2317": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6504,
        6559
      ],
      "op": "OR",
      "path": "63"
    },
    "2318": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6504,
        6559
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "2319": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6504,
        6559
      ],
      "op": "SSTORE",
      "path": "63"
    },
    "2320": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6457,
        6642
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x940"
    },
    "2323": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6457,
        6642
      ],
      "op": "JUMP",
      "path": "63"
    },
    "2324": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6457,
        6642
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "2325": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "70"
    },
    "2326": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6597,
        6621
      ],
      "op": "PUSH1",
      "path": "63",
      "statement": 33,
      "value": "0x0"
    },
    "2328": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6597,
        6621
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "2329": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6597,
        6621
      ],
      "op": "DUP2",
      "path": "63"
    },
    "2330": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6597,
        6621
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "2331": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6597,
        6607
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x6"
    },
    "2333": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6597,
        6621
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "2335": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6597,
        6621
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "2336": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6597,
        6621
      ],
      "op": "DUP2",
      "path": "63"
    },
    "2337": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6597,
        6621
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "2338": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6597,
        6621
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "2340": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6597,
        6621
      ],
      "op": "DUP1",
      "path": "63"
    },
    "2341": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6597,
        6621
      ],
      "op": "DUP4",
      "path": "63"
    },
    "2342": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6597,
        6621
      ],
      "op": "KECCAK256",
      "path": "63"
    },
    "2343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2345": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2347": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2349": {
      "op": "SHL"
    },
    "2350": {
      "op": "SUB"
    },
    "2351": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6597,
        6631
      ],
      "op": "DUP6",
      "path": "63"
    },
    "2352": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6597,
        6631
      ],
      "op": "AND",
      "path": "63"
    },
    "2353": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6597,
        6631
      ],
      "op": "DUP5",
      "path": "63"
    },
    "2354": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6597,
        6631
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "2355": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6597,
        6631
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "2356": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6597,
        6631
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "2357": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6597,
        6631
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "2358": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6597,
        6631
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "2359": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6597,
        6631
      ],
      "op": "KECCAK256",
      "path": "63"
    },
    "2360": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6590,
        6631
      ],
      "op": "DUP1",
      "path": "63"
    },
    "2361": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6590,
        6631
      ],
      "op": "SLOAD",
      "path": "63"
    },
    "2362": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2364": {
      "op": "NOT"
    },
    "2365": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6590,
        6631
      ],
      "op": "AND",
      "path": "63"
    },
    "2366": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6590,
        6631
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "2367": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6590,
        6631
      ],
      "op": "SSTORE",
      "path": "63"
    },
    "2368": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6457,
        6642
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "2369": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6657,
        6696
      ],
      "op": "PUSH1",
      "path": "63",
      "statement": 34,
      "value": "0x40"
    },
    "2371": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6657,
        6696
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "2372": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "70"
    },
    "2373": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "70"
    },
    "2374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2376": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2378": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2380": {
      "op": "SHL"
    },
    "2381": {
      "op": "SUB"
    },
    "2382": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6657,
        6696
      ],
      "op": "DUP4",
      "path": "63"
    },
    "2383": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6657,
        6696
      ],
      "op": "AND",
      "path": "63"
    },
    "2384": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6657,
        6696
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "2385": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6657,
        6696
      ],
      "op": "PUSH32",
      "path": "63",
      "value": "0x50546E66E5F44D728365DC3908C63BC5CFEEAB470722C1677E3073A6AC294AA1"
    },
    "2418": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6657,
        6696
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "2419": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6657,
        6696
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "2421": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6657,
        6696
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "2422": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6657,
        6696
      ],
      "op": "LOG3",
      "path": "63"
    },
    "2423": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6300,
        6703
      ],
      "op": "POP",
      "path": "63"
    },
    "2424": {
      "fn": "ERC777.revokeOperator",
      "jump": "o",
      "offset": [
        6300,
        6703
      ],
      "op": "JUMP",
      "path": "63"
    },
    "2425": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7505,
        7830
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "2426": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7686,
        7722
      ],
      "op": "PUSH2",
      "path": "63",
      "statement": 35,
      "value": "0x983"
    },
    "2429": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "70"
    },
    "2430": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7714,
        7721
      ],
      "op": "DUP6",
      "path": "63"
    },
    "2431": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7686,
        7699
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x7BC"
    },
    "2434": {
      "fn": "ERC777.operatorBurn",
      "jump": "i",
      "offset": [
        7686,
        7722
      ],
      "op": "JUMP",
      "path": "63"
    },
    "2435": {
      "branch": 72,
      "fn": "ERC777.operatorBurn",
      "offset": [
        7686,
        7722
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "2436": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7678,
        7771
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x99F"
    },
    "2439": {
      "branch": 72,
      "fn": "ERC777.operatorBurn",
      "offset": [
        7678,
        7771
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "2440": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7678,
        7771
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "2442": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7678,
        7771
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "2443": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2447": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2449": {
      "op": "SHL"
    },
    "2450": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7678,
        7771
      ],
      "op": "DUP2",
      "path": "63"
    },
    "2451": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7678,
        7771
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "2452": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7678,
        7771
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x4"
    },
    "2454": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7678,
        7771
      ],
      "op": "ADD",
      "path": "63"
    },
    "2455": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7678,
        7771
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x3DD"
    },
    "2458": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7678,
        7771
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "2459": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7678,
        7771
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x165F"
    },
    "2462": {
      "fn": "ERC777.operatorBurn",
      "jump": "i",
      "offset": [
        7678,
        7771
      ],
      "op": "JUMP",
      "path": "63"
    },
    "2463": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7678,
        7771
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "2464": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7781,
        7823
      ],
      "op": "PUSH2",
      "path": "63",
      "statement": 36,
      "value": "0x9AB"
    },
    "2467": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7787,
        7794
      ],
      "op": "DUP5",
      "path": "63"
    },
    "2468": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7796,
        7802
      ],
      "op": "DUP5",
      "path": "63"
    },
    "2469": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7804,
        7808
      ],
      "op": "DUP5",
      "path": "63"
    },
    "2470": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7810,
        7822
      ],
      "op": "DUP5",
      "path": "63"
    },
    "2471": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7781,
        7786
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x102D"
    },
    "2474": {
      "fn": "ERC777.operatorBurn",
      "jump": "i",
      "offset": [
        7781,
        7823
      ],
      "op": "JUMP",
      "path": "63"
    },
    "2475": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7781,
        7823
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "2476": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7505,
        7830
      ],
      "op": "POP",
      "path": "63"
    },
    "2477": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7505,
        7830
      ],
      "op": "POP",
      "path": "63"
    },
    "2478": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7505,
        7830
      ],
      "op": "POP",
      "path": "63"
    },
    "2479": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7505,
        7830
      ],
      "op": "POP",
      "path": "63"
    },
    "2480": {
      "fn": "ERC777.operatorBurn",
      "jump": "o",
      "offset": [
        7505,
        7830
      ],
      "op": "JUMP",
      "path": "63"
    },
    "2481": {
      "fn": "ERC777.burn",
      "offset": [
        5256,
        5383
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "2482": {
      "fn": "ERC777.burn",
      "offset": [
        5339,
        5376
      ],
      "op": "PUSH2",
      "path": "63",
      "statement": 37,
      "value": "0x9CC"
    },
    "2485": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "70"
    },
    "2486": {
      "fn": "ERC777.burn",
      "offset": [
        5359,
        5365
      ],
      "op": "DUP4",
      "path": "63"
    },
    "2487": {
      "fn": "ERC777.burn",
      "offset": [
        5367,
        5371
      ],
      "op": "DUP4",
      "path": "63"
    },
    "2488": {
      "fn": "ERC777.burn",
      "offset": [
        5339,
        5376
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "2490": {
      "fn": "ERC777.burn",
      "offset": [
        5339,
        5376
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "2491": {
      "fn": "ERC777.burn",
      "offset": [
        5339,
        5376
      ],
      "op": "DUP1",
      "path": "63"
    },
    "2492": {
      "fn": "ERC777.burn",
      "offset": [
        5339,
        5376
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "2494": {
      "fn": "ERC777.burn",
      "offset": [
        5339,
        5376
      ],
      "op": "ADD",
      "path": "63"
    },
    "2495": {
      "fn": "ERC777.burn",
      "offset": [
        5339,
        5376
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "2497": {
      "fn": "ERC777.burn",
      "offset": [
        5339,
        5376
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "2498": {
      "fn": "ERC777.burn",
      "offset": [
        5339,
        5376
      ],
      "op": "DUP1",
      "path": "63"
    },
    "2499": {
      "fn": "ERC777.burn",
      "offset": [
        5339,
        5376
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "2501": {
      "fn": "ERC777.burn",
      "offset": [
        5339,
        5376
      ],
      "op": "DUP2",
      "path": "63"
    },
    "2502": {
      "fn": "ERC777.burn",
      "offset": [
        5339,
        5376
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "2503": {
      "fn": "ERC777.burn",
      "offset": [
        5339,
        5376
      ],
      "op": "POP",
      "path": "63"
    },
    "2504": {
      "fn": "ERC777.burn",
      "offset": [
        5339,
        5344
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x102D"
    },
    "2507": {
      "fn": "ERC777.burn",
      "jump": "i",
      "offset": [
        5339,
        5376
      ],
      "op": "JUMP",
      "path": "63"
    },
    "2508": {
      "fn": "ERC777.burn",
      "offset": [
        5339,
        5376
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "2509": {
      "fn": "ERC777.burn",
      "offset": [
        5256,
        5383
      ],
      "op": "POP",
      "path": "63"
    },
    "2510": {
      "fn": "ERC777.burn",
      "offset": [
        5256,
        5383
      ],
      "op": "POP",
      "path": "63"
    },
    "2511": {
      "fn": "ERC777.burn",
      "jump": "o",
      "offset": [
        5256,
        5383
      ],
      "op": "JUMP",
      "path": "63"
    },
    "2512": {
      "fn": "ERC777._approve",
      "offset": [
        14872,
        15237
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "2513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2515": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2517": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2519": {
      "op": "SHL"
    },
    "2520": {
      "op": "SUB"
    },
    "2521": {
      "fn": "ERC777._approve",
      "offset": [
        14995,
        15015
      ],
      "op": "DUP4",
      "path": "63",
      "statement": 38
    },
    "2522": {
      "branch": 73,
      "fn": "ERC777._approve",
      "offset": [
        14995,
        15015
      ],
      "op": "AND",
      "path": "63"
    },
    "2523": {
      "fn": "ERC777._approve",
      "offset": [
        14987,
        15057
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0xA34"
    },
    "2526": {
      "branch": 73,
      "fn": "ERC777._approve",
      "offset": [
        14987,
        15057
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "2527": {
      "fn": "ERC777._approve",
      "offset": [
        14987,
        15057
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "2529": {
      "fn": "ERC777._approve",
      "offset": [
        14987,
        15057
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "2530": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2534": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2536": {
      "op": "SHL"
    },
    "2537": {
      "fn": "ERC777._approve",
      "offset": [
        14987,
        15057
      ],
      "op": "DUP2",
      "path": "63"
    },
    "2538": {
      "fn": "ERC777._approve",
      "offset": [
        14987,
        15057
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "2539": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2541": {
      "fn": "ERC777._approve",
      "offset": [
        14987,
        15057
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x4"
    },
    "2543": {
      "fn": "ERC777._approve",
      "offset": [
        14987,
        15057
      ],
      "op": "DUP3",
      "path": "63"
    },
    "2544": {
      "fn": "ERC777._approve",
      "offset": [
        14987,
        15057
      ],
      "op": "ADD",
      "path": "63"
    },
    "2545": {
      "op": "MSTORE"
    },
    "2546": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "2548": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2550": {
      "op": "DUP3"
    },
    "2551": {
      "op": "ADD"
    },
    "2552": {
      "op": "MSTORE"
    },
    "2553": {
      "op": "PUSH32",
      "value": "0x4552433737373A20617070726F76652066726F6D20746865207A65726F206164"
    },
    "2586": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2588": {
      "op": "DUP3"
    },
    "2589": {
      "op": "ADD"
    },
    "2590": {
      "op": "MSTORE"
    },
    "2591": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "2597": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "2599": {
      "op": "SHL"
    },
    "2600": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2602": {
      "op": "DUP3"
    },
    "2603": {
      "op": "ADD"
    },
    "2604": {
      "op": "MSTORE"
    },
    "2605": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2607": {
      "op": "ADD"
    },
    "2608": {
      "fn": "ERC777._approve",
      "offset": [
        14987,
        15057
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x3DD"
    },
    "2611": {
      "op": "JUMP"
    },
    "2612": {
      "fn": "ERC777._approve",
      "offset": [
        14987,
        15057
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "2613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2617": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2619": {
      "op": "SHL"
    },
    "2620": {
      "op": "SUB"
    },
    "2621": {
      "fn": "ERC777._approve",
      "offset": [
        15075,
        15096
      ],
      "op": "DUP3",
      "path": "63",
      "statement": 39
    },
    "2622": {
      "branch": 74,
      "fn": "ERC777._approve",
      "offset": [
        15075,
        15096
      ],
      "op": "AND",
      "path": "63"
    },
    "2623": {
      "fn": "ERC777._approve",
      "offset": [
        15067,
        15136
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0xA96"
    },
    "2626": {
      "branch": 74,
      "fn": "ERC777._approve",
      "offset": [
        15067,
        15136
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "2627": {
      "fn": "ERC777._approve",
      "offset": [
        15067,
        15136
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "2629": {
      "fn": "ERC777._approve",
      "offset": [
        15067,
        15136
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "2630": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2634": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2636": {
      "op": "SHL"
    },
    "2637": {
      "fn": "ERC777._approve",
      "offset": [
        15067,
        15136
      ],
      "op": "DUP2",
      "path": "63"
    },
    "2638": {
      "fn": "ERC777._approve",
      "offset": [
        15067,
        15136
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "2639": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2641": {
      "fn": "ERC777._approve",
      "offset": [
        15067,
        15136
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x4"
    },
    "2643": {
      "fn": "ERC777._approve",
      "offset": [
        15067,
        15136
      ],
      "op": "DUP3",
      "path": "63"
    },
    "2644": {
      "fn": "ERC777._approve",
      "offset": [
        15067,
        15136
      ],
      "op": "ADD",
      "path": "63"
    },
    "2645": {
      "op": "MSTORE"
    },
    "2646": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "2648": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2650": {
      "op": "DUP3"
    },
    "2651": {
      "op": "ADD"
    },
    "2652": {
      "op": "MSTORE"
    },
    "2653": {
      "op": "PUSH32",
      "value": "0x4552433737373A20617070726F766520746F20746865207A65726F2061646472"
    },
    "2686": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2688": {
      "op": "DUP3"
    },
    "2689": {
      "op": "ADD"
    },
    "2690": {
      "op": "MSTORE"
    },
    "2691": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "2695": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "2697": {
      "op": "SHL"
    },
    "2698": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2700": {
      "op": "DUP3"
    },
    "2701": {
      "op": "ADD"
    },
    "2702": {
      "op": "MSTORE"
    },
    "2703": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2705": {
      "op": "ADD"
    },
    "2706": {
      "fn": "ERC777._approve",
      "offset": [
        15067,
        15136
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x3DD"
    },
    "2709": {
      "op": "JUMP"
    },
    "2710": {
      "fn": "ERC777._approve",
      "offset": [
        15067,
        15136
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "2711": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2715": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2717": {
      "op": "SHL"
    },
    "2718": {
      "op": "SUB"
    },
    "2719": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15166
      ],
      "op": "DUP4",
      "path": "63",
      "statement": 40
    },
    "2720": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15166
      ],
      "op": "DUP2",
      "path": "63"
    },
    "2721": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15166
      ],
      "op": "AND",
      "path": "63"
    },
    "2722": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15166
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "2724": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15166
      ],
      "op": "DUP2",
      "path": "63"
    },
    "2725": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15166
      ],
      "op": "DUP2",
      "path": "63"
    },
    "2726": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15166
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "2727": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15158
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x8"
    },
    "2729": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15166
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "2731": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15166
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "2732": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15166
      ],
      "op": "DUP2",
      "path": "63"
    },
    "2733": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15166
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "2734": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15166
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "2736": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15166
      ],
      "op": "DUP1",
      "path": "63"
    },
    "2737": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15166
      ],
      "op": "DUP4",
      "path": "63"
    },
    "2738": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15166
      ],
      "op": "KECCAK256",
      "path": "63"
    },
    "2739": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15175
      ],
      "op": "SWAP5",
      "path": "63"
    },
    "2740": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15175
      ],
      "op": "DUP8",
      "path": "63"
    },
    "2741": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15175
      ],
      "op": "AND",
      "path": "63"
    },
    "2742": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15175
      ],
      "op": "DUP1",
      "path": "63"
    },
    "2743": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15175
      ],
      "op": "DUP5",
      "path": "63"
    },
    "2744": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15175
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "2745": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15175
      ],
      "op": "SWAP5",
      "path": "63"
    },
    "2746": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15175
      ],
      "op": "DUP3",
      "path": "63"
    },
    "2747": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15175
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "2748": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15175
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "2749": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15175
      ],
      "op": "DUP3",
      "path": "63"
    },
    "2750": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15175
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "2751": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15175
      ],
      "op": "KECCAK256",
      "path": "63"
    },
    "2752": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15183
      ],
      "op": "DUP6",
      "path": "63"
    },
    "2753": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15183
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "2754": {
      "fn": "ERC777._approve",
      "offset": [
        15147,
        15183
      ],
      "op": "SSTORE",
      "path": "63"
    },
    "2755": {
      "fn": "ERC777._approve",
      "offset": [
        15198,
        15230
      ],
      "op": "SWAP1",
      "path": "63",
      "statement": 41
    },
    "2756": {
      "fn": "ERC777._approve",
      "offset": [
        15198,
        15230
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "2757": {
      "op": "DUP5"
    },
    "2758": {
      "op": "DUP2"
    },
    "2759": {
      "op": "MSTORE"
    },
    "2760": {
      "fn": "ERC777._approve",
      "offset": [
        15198,
        15230
      ],
      "op": "PUSH32",
      "path": "63",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "2793": {
      "fn": "ERC777._approve",
      "offset": [
        15198,
        15230
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "2794": {
      "op": "ADD"
    },
    "2795": {
      "fn": "ERC777._approve",
      "offset": [
        15198,
        15230
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "2797": {
      "fn": "ERC777._approve",
      "offset": [
        15198,
        15230
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "2798": {
      "fn": "ERC777._approve",
      "offset": [
        15198,
        15230
      ],
      "op": "DUP1",
      "path": "63"
    },
    "2799": {
      "fn": "ERC777._approve",
      "offset": [
        15198,
        15230
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "2800": {
      "fn": "ERC777._approve",
      "offset": [
        15198,
        15230
      ],
      "op": "SUB",
      "path": "63"
    },
    "2801": {
      "fn": "ERC777._approve",
      "offset": [
        15198,
        15230
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "2802": {
      "fn": "ERC777._approve",
      "offset": [
        15198,
        15230
      ],
      "op": "LOG3",
      "path": "63"
    },
    "2803": {
      "fn": "ERC777._approve",
      "offset": [
        14872,
        15237
      ],
      "op": "POP",
      "path": "63"
    },
    "2804": {
      "fn": "ERC777._approve",
      "offset": [
        14872,
        15237
      ],
      "op": "POP",
      "path": "63"
    },
    "2805": {
      "fn": "ERC777._approve",
      "offset": [
        14872,
        15237
      ],
      "op": "POP",
      "path": "63"
    },
    "2806": {
      "fn": "ERC777._approve",
      "jump": "o",
      "offset": [
        14872,
        15237
      ],
      "op": "JUMP",
      "path": "63"
    },
    "2807": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15710,
        16182
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "2808": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "2810": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "2811": {
      "op": "PUSH4",
      "value": "0x555DDC65"
    },
    "2816": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2818": {
      "op": "SHL"
    },
    "2819": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "DUP2",
      "path": "63"
    },
    "2820": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "2821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2823": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2825": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2827": {
      "op": "SHL"
    },
    "2828": {
      "op": "SUB"
    },
    "2829": {
      "op": "DUP7"
    },
    "2830": {
      "op": "AND"
    },
    "2831": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x4"
    },
    "2833": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "DUP3",
      "path": "63"
    },
    "2834": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "ADD",
      "path": "63"
    },
    "2835": {
      "op": "MSTORE"
    },
    "2836": {
      "offset": [
        1476,
        1507
      ],
      "op": "PUSH32",
      "path": "63",
      "value": "0x29DDB589B1FB5FC7CF394961C1ADF5F8C6454761ADF795E67FE149F658ABE895"
    },
    "2869": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2871": {
      "op": "DUP3"
    },
    "2872": {
      "op": "ADD"
    },
    "2873": {
      "op": "MSTORE"
    },
    "2874": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15919,
        15938
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "2876": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15919,
        15938
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "2877": {
      "offset": [
        1227,
        1269
      ],
      "op": "PUSH20",
      "path": "63",
      "value": "0x1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24"
    },
    "2898": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        1227,
        1269
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "2899": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        15982
      ],
      "op": "PUSH4",
      "path": "63",
      "value": "0xAABBB8CA"
    },
    "2904": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        15982
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "2905": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2907": {
      "op": "ADD"
    },
    "2908": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "2910": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "2912": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "2913": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "DUP1",
      "path": "63"
    },
    "2914": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "DUP4",
      "path": "63"
    },
    "2915": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "SUB",
      "path": "63"
    },
    "2916": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "DUP2",
      "path": "63"
    },
    "2917": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "DUP7",
      "path": "63"
    },
    "2918": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "GAS",
      "path": "63"
    },
    "2919": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "STATICCALL",
      "path": "63"
    },
    "2920": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "2921": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "DUP1",
      "path": "63"
    },
    "2922": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "2923": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0xB78"
    },
    "2926": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "2927": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "RETURNDATASIZE",
      "path": "63"
    },
    "2928": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "2930": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "DUP1",
      "path": "63"
    },
    "2931": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "RETURNDATACOPY",
      "path": "63"
    },
    "2932": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "RETURNDATASIZE",
      "path": "63"
    },
    "2933": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "2935": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "REVERT",
      "path": "63"
    },
    "2936": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "2937": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "POP",
      "path": "63"
    },
    "2938": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "POP",
      "path": "63"
    },
    "2939": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "POP",
      "path": "63"
    },
    "2940": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "POP",
      "path": "63"
    },
    "2941": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "2943": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "2944": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "RETURNDATASIZE",
      "path": "63"
    },
    "2945": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x1F"
    },
    "2947": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "NOT",
      "path": "63"
    },
    "2948": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x1F"
    },
    "2950": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "DUP3",
      "path": "63"
    },
    "2951": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "ADD",
      "path": "63"
    },
    "2952": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "AND",
      "path": "63"
    },
    "2953": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "DUP3",
      "path": "63"
    },
    "2954": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "ADD",
      "path": "63"
    },
    "2955": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "DUP1",
      "path": "63"
    },
    "2956": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "2958": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "2959": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "POP",
      "path": "63"
    },
    "2960": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "DUP2",
      "path": "63"
    },
    "2961": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "ADD",
      "path": "63"
    },
    "2962": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "2963": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0xB9C"
    },
    "2966": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "2967": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "2968": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x16AB"
    },
    "2971": {
      "fn": "ERC777._callTokensToSend",
      "jump": "i",
      "offset": [
        15941,
        16019
      ],
      "op": "JUMP",
      "path": "63"
    },
    "2972": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15941,
        16019
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "2973": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15919,
        16019
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "2974": {
      "op": "POP"
    },
    "2975": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2977": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2979": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2981": {
      "op": "SHL"
    },
    "2982": {
      "op": "SUB"
    },
    "2983": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16033,
        16058
      ],
      "op": "DUP2",
      "path": "63"
    },
    "2984": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16033,
        16058
      ],
      "op": "AND",
      "path": "63"
    },
    "2985": {
      "branch": 75,
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16033,
        16058
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "2986": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16029,
        16176
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0xC16"
    },
    "2989": {
      "branch": 75,
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16029,
        16176
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "2990": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "PUSH1",
      "path": "63",
      "statement": 42,
      "value": "0x40"
    },
    "2992": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "2993": {
      "op": "PUSH4",
      "value": "0x3AD5CBC1"
    },
    "2998": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3000": {
      "op": "SHL"
    },
    "3001": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "DUP2",
      "path": "63"
    },
    "3002": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "3003": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3005": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3007": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3009": {
      "op": "SHL"
    },
    "3010": {
      "op": "SUB"
    },
    "3011": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16113
      ],
      "op": "DUP3",
      "path": "63"
    },
    "3012": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16113
      ],
      "op": "AND",
      "path": "63"
    },
    "3013": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16113
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "3014": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16113
      ],
      "op": "PUSH4",
      "path": "63",
      "value": "0x75AB9782"
    },
    "3019": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16113
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "3020": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0xBE3"
    },
    "3023": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "3024": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16114,
        16122
      ],
      "op": "DUP11",
      "path": "63"
    },
    "3025": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16114,
        16122
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "3026": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16124,
        16128
      ],
      "op": "DUP11",
      "path": "63"
    },
    "3027": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16124,
        16128
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "3028": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16130,
        16132
      ],
      "op": "DUP11",
      "path": "63"
    },
    "3029": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16130,
        16132
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "3030": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16134,
        16140
      ],
      "op": "DUP11",
      "path": "63"
    },
    "3031": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16134,
        16140
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "3032": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16142,
        16150
      ],
      "op": "DUP11",
      "path": "63"
    },
    "3033": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16142,
        16150
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "3034": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16152,
        16164
      ],
      "op": "DUP11",
      "path": "63"
    },
    "3035": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16152,
        16164
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "3036": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x4"
    },
    "3038": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "ADD",
      "path": "63"
    },
    "3039": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x16C8"
    },
    "3042": {
      "fn": "ERC777._callTokensToSend",
      "jump": "i",
      "offset": [
        16074,
        16165
      ],
      "op": "JUMP",
      "path": "63"
    },
    "3043": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "3044": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "3046": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "3048": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "3049": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "DUP1",
      "path": "63"
    },
    "3050": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "DUP4",
      "path": "63"
    },
    "3051": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "SUB",
      "path": "63"
    },
    "3052": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "DUP2",
      "path": "63"
    },
    "3053": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "3055": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "DUP8",
      "path": "63"
    },
    "3056": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "DUP1",
      "path": "63"
    },
    "3057": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "EXTCODESIZE",
      "path": "63"
    },
    "3058": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "3059": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "DUP1",
      "path": "63"
    },
    "3060": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "3061": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0xBFD"
    },
    "3064": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "3065": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "3067": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "DUP1",
      "path": "63"
    },
    "3068": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "REVERT",
      "path": "63"
    },
    "3069": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "3070": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "POP",
      "path": "63"
    },
    "3071": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "GAS",
      "path": "63"
    },
    "3072": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "CALL",
      "path": "63"
    },
    "3073": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "3074": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "DUP1",
      "path": "63"
    },
    "3075": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "3076": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0xC11"
    },
    "3079": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "3080": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "RETURNDATASIZE",
      "path": "63"
    },
    "3081": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "3083": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "DUP1",
      "path": "63"
    },
    "3084": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "RETURNDATACOPY",
      "path": "63"
    },
    "3085": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "RETURNDATASIZE",
      "path": "63"
    },
    "3086": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "3088": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "REVERT",
      "path": "63"
    },
    "3089": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "3090": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "POP",
      "path": "63"
    },
    "3091": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "POP",
      "path": "63"
    },
    "3092": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "POP",
      "path": "63"
    },
    "3093": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16074,
        16165
      ],
      "op": "POP",
      "path": "63"
    },
    "3094": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        16029,
        16176
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "3095": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15909,
        16182
      ],
      "op": "POP",
      "path": "63"
    },
    "3096": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15710,
        16182
      ],
      "op": "POP",
      "path": "63"
    },
    "3097": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15710,
        16182
      ],
      "op": "POP",
      "path": "63"
    },
    "3098": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15710,
        16182
      ],
      "op": "POP",
      "path": "63"
    },
    "3099": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15710,
        16182
      ],
      "op": "POP",
      "path": "63"
    },
    "3100": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15710,
        16182
      ],
      "op": "POP",
      "path": "63"
    },
    "3101": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15710,
        16182
      ],
      "op": "POP",
      "path": "63"
    },
    "3102": {
      "fn": "ERC777._callTokensToSend",
      "jump": "o",
      "offset": [
        15710,
        16182
      ],
      "op": "JUMP",
      "path": "63"
    },
    "3103": {
      "fn": "ERC777._move",
      "offset": [
        14123,
        14734
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "3104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3108": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3110": {
      "op": "SHL"
    },
    "3111": {
      "op": "SUB"
    },
    "3112": {
      "fn": "ERC777._move",
      "offset": [
        14401,
        14416
      ],
      "op": "DUP6",
      "path": "63"
    },
    "3113": {
      "fn": "ERC777._move",
      "offset": [
        14401,
        14416
      ],
      "op": "AND",
      "path": "63"
    },
    "3114": {
      "fn": "ERC777._move",
      "offset": [
        14379,
        14398
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "3116": {
      "fn": "ERC777._move",
      "offset": [
        14401,
        14416
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "3117": {
      "fn": "ERC777._move",
      "offset": [
        14401,
        14416
      ],
      "op": "DUP2",
      "path": "63"
    },
    "3118": {
      "fn": "ERC777._move",
      "offset": [
        14401,
        14416
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "3119": {
      "fn": "ERC777._move",
      "offset": [
        14401,
        14416
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "3121": {
      "fn": "ERC777._move",
      "offset": [
        14401,
        14416
      ],
      "op": "DUP2",
      "path": "63"
    },
    "3122": {
      "fn": "ERC777._move",
      "offset": [
        14401,
        14416
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "3123": {
      "fn": "ERC777._move",
      "offset": [
        14401,
        14416
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "3124": {
      "fn": "ERC777._move",
      "offset": [
        14401,
        14416
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "3126": {
      "fn": "ERC777._move",
      "offset": [
        14401,
        14416
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "3127": {
      "fn": "ERC777._move",
      "offset": [
        14401,
        14416
      ],
      "op": "KECCAK256",
      "path": "63"
    },
    "3128": {
      "fn": "ERC777._move",
      "offset": [
        14401,
        14416
      ],
      "op": "SLOAD",
      "path": "63"
    },
    "3129": {
      "fn": "ERC777._move",
      "offset": [
        14434,
        14455
      ],
      "op": "DUP4",
      "path": "63",
      "statement": 43
    },
    "3130": {
      "fn": "ERC777._move",
      "offset": [
        14434,
        14455
      ],
      "op": "DUP2",
      "path": "63"
    },
    "3131": {
      "fn": "ERC777._move",
      "offset": [
        14434,
        14455
      ],
      "op": "LT",
      "path": "63"
    },
    "3132": {
      "branch": 76,
      "fn": "ERC777._move",
      "offset": [
        14434,
        14455
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "3133": {
      "fn": "ERC777._move",
      "offset": [
        14426,
        14499
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0xC98"
    },
    "3136": {
      "branch": 76,
      "fn": "ERC777._move",
      "offset": [
        14426,
        14499
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "3137": {
      "fn": "ERC777._move",
      "offset": [
        14426,
        14499
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "3139": {
      "fn": "ERC777._move",
      "offset": [
        14426,
        14499
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "3140": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3144": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3146": {
      "op": "SHL"
    },
    "3147": {
      "fn": "ERC777._move",
      "offset": [
        14426,
        14499
      ],
      "op": "DUP2",
      "path": "63"
    },
    "3148": {
      "fn": "ERC777._move",
      "offset": [
        14426,
        14499
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "3149": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3151": {
      "fn": "ERC777._move",
      "offset": [
        14426,
        14499
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x4"
    },
    "3153": {
      "fn": "ERC777._move",
      "offset": [
        14426,
        14499
      ],
      "op": "DUP3",
      "path": "63"
    },
    "3154": {
      "fn": "ERC777._move",
      "offset": [
        14426,
        14499
      ],
      "op": "ADD",
      "path": "63"
    },
    "3155": {
      "op": "MSTORE"
    },
    "3156": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "3158": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3160": {
      "op": "DUP3"
    },
    "3161": {
      "op": "ADD"
    },
    "3162": {
      "op": "MSTORE"
    },
    "3163": {
      "op": "PUSH32",
      "value": "0x4552433737373A207472616E7366657220616D6F756E74206578636565647320"
    },
    "3196": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3198": {
      "op": "DUP3"
    },
    "3199": {
      "op": "ADD"
    },
    "3200": {
      "op": "MSTORE"
    },
    "3201": {
      "op": "PUSH7",
      "value": "0x62616C616E6365"
    },
    "3209": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "3211": {
      "op": "SHL"
    },
    "3212": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3214": {
      "op": "DUP3"
    },
    "3215": {
      "op": "ADD"
    },
    "3216": {
      "op": "MSTORE"
    },
    "3217": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3219": {
      "op": "ADD"
    },
    "3220": {
      "fn": "ERC777._move",
      "offset": [
        14426,
        14499
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x3DD"
    },
    "3223": {
      "op": "JUMP"
    },
    "3224": {
      "fn": "ERC777._move",
      "offset": [
        14426,
        14499
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "3225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3227": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3229": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3231": {
      "op": "SHL"
    },
    "3232": {
      "op": "SUB"
    },
    "3233": {
      "fn": "ERC777._move",
      "offset": [
        14533,
        14548
      ],
      "op": "DUP1",
      "path": "63",
      "statement": 44
    },
    "3234": {
      "fn": "ERC777._move",
      "offset": [
        14533,
        14548
      ],
      "op": "DUP8",
      "path": "63"
    },
    "3235": {
      "fn": "ERC777._move",
      "offset": [
        14533,
        14548
      ],
      "op": "AND",
      "path": "63"
    },
    "3236": {
      "fn": "ERC777._move",
      "offset": [
        14533,
        14542
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "3238": {
      "fn": "ERC777._move",
      "offset": [
        14533,
        14548
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "3239": {
      "fn": "ERC777._move",
      "offset": [
        14533,
        14548
      ],
      "op": "DUP2",
      "path": "63"
    },
    "3240": {
      "fn": "ERC777._move",
      "offset": [
        14533,
        14548
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "3241": {
      "fn": "ERC777._move",
      "offset": [
        14533,
        14548
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "3243": {
      "fn": "ERC777._move",
      "offset": [
        14533,
        14548
      ],
      "op": "DUP2",
      "path": "63"
    },
    "3244": {
      "fn": "ERC777._move",
      "offset": [
        14533,
        14548
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "3245": {
      "fn": "ERC777._move",
      "offset": [
        14533,
        14548
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "3246": {
      "fn": "ERC777._move",
      "offset": [
        14533,
        14548
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "3248": {
      "fn": "ERC777._move",
      "offset": [
        14533,
        14548
      ],
      "op": "DUP1",
      "path": "63"
    },
    "3249": {
      "fn": "ERC777._move",
      "offset": [
        14533,
        14548
      ],
      "op": "DUP3",
      "path": "63"
    },
    "3250": {
      "fn": "ERC777._move",
      "offset": [
        14533,
        14548
      ],
      "op": "KECCAK256",
      "path": "63"
    },
    "3251": {
      "fn": "ERC777._move",
      "offset": [
        14551,
        14571
      ],
      "op": "DUP8",
      "path": "63"
    },
    "3252": {
      "fn": "ERC777._move",
      "offset": [
        14551,
        14571
      ],
      "op": "DUP6",
      "path": "63"
    },
    "3253": {
      "fn": "ERC777._move",
      "offset": [
        14551,
        14571
      ],
      "op": "SUB",
      "path": "63"
    },
    "3254": {
      "fn": "ERC777._move",
      "offset": [
        14533,
        14571
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "3255": {
      "fn": "ERC777._move",
      "offset": [
        14533,
        14571
      ],
      "op": "SSTORE",
      "path": "63"
    },
    "3256": {
      "fn": "ERC777._move",
      "offset": [
        14591,
        14604
      ],
      "op": "SWAP2",
      "path": "63",
      "statement": 45
    },
    "3257": {
      "fn": "ERC777._move",
      "offset": [
        14591,
        14604
      ],
      "op": "DUP8",
      "path": "63"
    },
    "3258": {
      "fn": "ERC777._move",
      "offset": [
        14591,
        14604
      ],
      "op": "AND",
      "path": "63"
    },
    "3259": {
      "fn": "ERC777._move",
      "offset": [
        14591,
        14604
      ],
      "op": "DUP2",
      "path": "63"
    },
    "3260": {
      "fn": "ERC777._move",
      "offset": [
        14591,
        14604
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "3261": {
      "fn": "ERC777._move",
      "offset": [
        14591,
        14604
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "3262": {
      "fn": "ERC777._move",
      "offset": [
        14591,
        14604
      ],
      "op": "DUP2",
      "path": "63"
    },
    "3263": {
      "fn": "ERC777._move",
      "offset": [
        14591,
        14604
      ],
      "op": "KECCAK256",
      "path": "63"
    },
    "3264": {
      "fn": "ERC777._move",
      "offset": [
        14591,
        14614
      ],
      "op": "DUP1",
      "path": "63"
    },
    "3265": {
      "fn": "ERC777._move",
      "offset": [
        14591,
        14614
      ],
      "op": "SLOAD",
      "path": "63"
    },
    "3266": {
      "fn": "ERC777._move",
      "offset": [
        14565,
        14571
      ],
      "op": "DUP7",
      "path": "63"
    },
    "3267": {
      "fn": "ERC777._move",
      "offset": [
        14565,
        14571
      ],
      "op": "SWAP3",
      "path": "63"
    },
    "3268": {
      "fn": "ERC777._move",
      "offset": [
        14533,
        14542
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "3269": {
      "fn": "ERC777._move",
      "offset": [
        14591,
        14614
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0xCCF"
    },
    "3272": {
      "fn": "ERC777._move",
      "offset": [
        14591,
        14614
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "3273": {
      "fn": "ERC777._move",
      "offset": [
        14565,
        14571
      ],
      "op": "DUP5",
      "path": "63"
    },
    "3274": {
      "fn": "ERC777._move",
      "offset": [
        14565,
        14571
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "3275": {
      "fn": "ERC777._move",
      "offset": [
        14591,
        14614
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x1722"
    },
    "3278": {
      "fn": "ERC777._move",
      "jump": "i",
      "offset": [
        14591,
        14614
      ],
      "op": "JUMP",
      "path": "63"
    },
    "3279": {
      "fn": "ERC777._move",
      "offset": [
        14591,
        14614
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "3280": {
      "fn": "ERC777._move",
      "offset": [
        14591,
        14614
      ],
      "op": "SWAP3",
      "path": "63"
    },
    "3281": {
      "fn": "ERC777._move",
      "offset": [
        14591,
        14614
      ],
      "op": "POP",
      "path": "63"
    },
    "3282": {
      "fn": "ERC777._move",
      "offset": [
        14591,
        14614
      ],
      "op": "POP",
      "path": "63"
    },
    "3283": {
      "fn": "ERC777._move",
      "offset": [
        14591,
        14614
      ],
      "op": "DUP2",
      "path": "63"
    },
    "3284": {
      "fn": "ERC777._move",
      "offset": [
        14591,
        14614
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "3285": {
      "fn": "ERC777._move",
      "offset": [
        14591,
        14614
      ],
      "op": "SSTORE",
      "path": "63"
    },
    "3286": {
      "fn": "ERC777._move",
      "offset": [
        14591,
        14614
      ],
      "op": "POP",
      "path": "63"
    },
    "3287": {
      "fn": "ERC777._move",
      "offset": [
        14651,
        14653
      ],
      "op": "DUP5",
      "path": "63",
      "statement": 46
    },
    "3288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3290": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3292": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3294": {
      "op": "SHL"
    },
    "3295": {
      "op": "SUB"
    },
    "3296": {
      "fn": "ERC777._move",
      "offset": [
        14630,
        14686
      ],
      "op": "AND",
      "path": "63"
    },
    "3297": {
      "fn": "ERC777._move",
      "offset": [
        14645,
        14649
      ],
      "op": "DUP7",
      "path": "63"
    },
    "3298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3302": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3304": {
      "op": "SHL"
    },
    "3305": {
      "op": "SUB"
    },
    "3306": {
      "fn": "ERC777._move",
      "offset": [
        14630,
        14686
      ],
      "op": "AND",
      "path": "63"
    },
    "3307": {
      "fn": "ERC777._move",
      "offset": [
        14635,
        14643
      ],
      "op": "DUP9",
      "path": "63"
    },
    "3308": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3312": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3314": {
      "op": "SHL"
    },
    "3315": {
      "op": "SUB"
    },
    "3316": {
      "fn": "ERC777._move",
      "offset": [
        14630,
        14686
      ],
      "op": "AND",
      "path": "63"
    },
    "3317": {
      "fn": "ERC777._move",
      "offset": [
        14630,
        14686
      ],
      "op": "PUSH32",
      "path": "63",
      "value": "0x6B541DDAA720DB2B10A4D0CDAC39B8D360425FC073085FAC19BC82614677987"
    },
    "3350": {
      "fn": "ERC777._move",
      "offset": [
        14655,
        14661
      ],
      "op": "DUP8",
      "path": "63"
    },
    "3351": {
      "fn": "ERC777._move",
      "offset": [
        14663,
        14671
      ],
      "op": "DUP8",
      "path": "63"
    },
    "3352": {
      "fn": "ERC777._move",
      "offset": [
        14673,
        14685
      ],
      "op": "DUP8",
      "path": "63"
    },
    "3353": {
      "fn": "ERC777._move",
      "offset": [
        14630,
        14686
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "3355": {
      "fn": "ERC777._move",
      "offset": [
        14630,
        14686
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "3356": {
      "fn": "ERC777._move",
      "offset": [
        14630,
        14686
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0xD27"
    },
    "3359": {
      "fn": "ERC777._move",
      "offset": [
        14630,
        14686
      ],
      "op": "SWAP4",
      "path": "63"
    },
    "3360": {
      "fn": "ERC777._move",
      "offset": [
        14630,
        14686
      ],
      "op": "SWAP3",
      "path": "63"
    },
    "3361": {
      "fn": "ERC777._move",
      "offset": [
        14630,
        14686
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "3362": {
      "fn": "ERC777._move",
      "offset": [
        14630,
        14686
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "3363": {
      "fn": "ERC777._move",
      "offset": [
        14630,
        14686
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x1735"
    },
    "3366": {
      "fn": "ERC777._move",
      "jump": "i",
      "offset": [
        14630,
        14686
      ],
      "op": "JUMP",
      "path": "63"
    },
    "3367": {
      "fn": "ERC777._move",
      "offset": [
        14630,
        14686
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "3368": {
      "fn": "ERC777._move",
      "offset": [
        14630,
        14686
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "3370": {
      "fn": "ERC777._move",
      "offset": [
        14630,
        14686
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "3371": {
      "fn": "ERC777._move",
      "offset": [
        14630,
        14686
      ],
      "op": "DUP1",
      "path": "63"
    },
    "3372": {
      "fn": "ERC777._move",
      "offset": [
        14630,
        14686
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "3373": {
      "fn": "ERC777._move",
      "offset": [
        14630,
        14686
      ],
      "op": "SUB",
      "path": "63"
    },
    "3374": {
      "fn": "ERC777._move",
      "offset": [
        14630,
        14686
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "3375": {
      "fn": "ERC777._move",
      "offset": [
        14630,
        14686
      ],
      "op": "LOG4",
      "path": "63"
    },
    "3376": {
      "fn": "ERC777._move",
      "offset": [
        14716,
        14718
      ],
      "op": "DUP5",
      "path": "63",
      "statement": 47
    },
    "3377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3381": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3383": {
      "op": "SHL"
    },
    "3384": {
      "op": "SUB"
    },
    "3385": {
      "fn": "ERC777._move",
      "offset": [
        14701,
        14727
      ],
      "op": "AND",
      "path": "63"
    },
    "3386": {
      "fn": "ERC777._move",
      "offset": [
        14710,
        14714
      ],
      "op": "DUP7",
      "path": "63"
    },
    "3387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3391": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3393": {
      "op": "SHL"
    },
    "3394": {
      "op": "SUB"
    },
    "3395": {
      "fn": "ERC777._move",
      "offset": [
        14701,
        14727
      ],
      "op": "AND",
      "path": "63"
    },
    "3396": {
      "fn": "ERC777._move",
      "offset": [
        14701,
        14727
      ],
      "op": "PUSH32",
      "path": "63",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "3429": {
      "fn": "ERC777._move",
      "offset": [
        14720,
        14726
      ],
      "op": "DUP7",
      "path": "63"
    },
    "3430": {
      "fn": "ERC777._move",
      "offset": [
        14701,
        14727
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "3432": {
      "fn": "ERC777._move",
      "offset": [
        14701,
        14727
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "3433": {
      "fn": "ERC777._move",
      "offset": [
        14701,
        14727
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0xD74"
    },
    "3436": {
      "fn": "ERC777._move",
      "offset": [
        14701,
        14727
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "3437": {
      "op": "DUP2"
    },
    "3438": {
      "op": "MSTORE"
    },
    "3439": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3441": {
      "op": "ADD"
    },
    "3442": {
      "op": "SWAP1"
    },
    "3443": {
      "op": "JUMP"
    },
    "3444": {
      "fn": "ERC777._move",
      "offset": [
        14701,
        14727
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "3445": {
      "fn": "ERC777._move",
      "offset": [
        14701,
        14727
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "3447": {
      "fn": "ERC777._move",
      "offset": [
        14701,
        14727
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "3448": {
      "fn": "ERC777._move",
      "offset": [
        14701,
        14727
      ],
      "op": "DUP1",
      "path": "63"
    },
    "3449": {
      "fn": "ERC777._move",
      "offset": [
        14701,
        14727
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "3450": {
      "fn": "ERC777._move",
      "offset": [
        14701,
        14727
      ],
      "op": "SUB",
      "path": "63"
    },
    "3451": {
      "fn": "ERC777._move",
      "offset": [
        14701,
        14727
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "3452": {
      "fn": "ERC777._move",
      "offset": [
        14701,
        14727
      ],
      "op": "LOG3",
      "path": "63"
    },
    "3453": {
      "fn": "ERC777._move",
      "offset": [
        14310,
        14734
      ],
      "op": "POP",
      "path": "63"
    },
    "3454": {
      "fn": "ERC777._move",
      "offset": [
        14123,
        14734
      ],
      "op": "POP",
      "path": "63"
    },
    "3455": {
      "fn": "ERC777._move",
      "offset": [
        14123,
        14734
      ],
      "op": "POP",
      "path": "63"
    },
    "3456": {
      "fn": "ERC777._move",
      "offset": [
        14123,
        14734
      ],
      "op": "POP",
      "path": "63"
    },
    "3457": {
      "fn": "ERC777._move",
      "offset": [
        14123,
        14734
      ],
      "op": "POP",
      "path": "63"
    },
    "3458": {
      "fn": "ERC777._move",
      "offset": [
        14123,
        14734
      ],
      "op": "POP",
      "path": "63"
    },
    "3459": {
      "fn": "ERC777._move",
      "offset": [
        14123,
        14734
      ],
      "op": "POP",
      "path": "63"
    },
    "3460": {
      "fn": "ERC777._move",
      "jump": "o",
      "offset": [
        14123,
        14734
      ],
      "op": "JUMP",
      "path": "63"
    },
    "3461": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16871,
        17547
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "3462": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "3464": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "3465": {
      "op": "PUSH4",
      "value": "0x555DDC65"
    },
    "3470": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3472": {
      "op": "SHL"
    },
    "3473": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "DUP2",
      "path": "63"
    },
    "3474": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "3475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3479": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3481": {
      "op": "SHL"
    },
    "3482": {
      "op": "SUB"
    },
    "3483": {
      "op": "DUP7"
    },
    "3484": {
      "op": "AND"
    },
    "3485": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x4"
    },
    "3487": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "DUP3",
      "path": "63"
    },
    "3488": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "ADD",
      "path": "63"
    },
    "3489": {
      "op": "MSTORE"
    },
    "3490": {
      "offset": [
        1573,
        1607
      ],
      "op": "PUSH32",
      "path": "63",
      "value": "0xB281FC8C12954D22544DB45DE3159A39272895B169A852B314F9CC762E44C53B"
    },
    "3523": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3525": {
      "op": "DUP3"
    },
    "3526": {
      "op": "ADD"
    },
    "3527": {
      "op": "MSTORE"
    },
    "3528": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17116,
        17135
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "3530": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17116,
        17135
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "3531": {
      "offset": [
        1227,
        1269
      ],
      "op": "PUSH20",
      "path": "63",
      "value": "0x1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24"
    },
    "3552": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        1227,
        1269
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "3553": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17179
      ],
      "op": "PUSH4",
      "path": "63",
      "value": "0xAABBB8CA"
    },
    "3558": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17179
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "3559": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3561": {
      "op": "ADD"
    },
    "3562": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "3564": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "3566": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "3567": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "DUP1",
      "path": "63"
    },
    "3568": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "DUP4",
      "path": "63"
    },
    "3569": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "SUB",
      "path": "63"
    },
    "3570": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "DUP2",
      "path": "63"
    },
    "3571": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "DUP7",
      "path": "63"
    },
    "3572": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "GAS",
      "path": "63"
    },
    "3573": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "STATICCALL",
      "path": "63"
    },
    "3574": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "3575": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "DUP1",
      "path": "63"
    },
    "3576": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "3577": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0xE06"
    },
    "3580": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "3581": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "RETURNDATASIZE",
      "path": "63"
    },
    "3582": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "3584": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "DUP1",
      "path": "63"
    },
    "3585": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "RETURNDATACOPY",
      "path": "63"
    },
    "3586": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "RETURNDATASIZE",
      "path": "63"
    },
    "3587": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "3589": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "REVERT",
      "path": "63"
    },
    "3590": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "3591": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "POP",
      "path": "63"
    },
    "3592": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "POP",
      "path": "63"
    },
    "3593": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "POP",
      "path": "63"
    },
    "3594": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "POP",
      "path": "63"
    },
    "3595": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "3597": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "3598": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "RETURNDATASIZE",
      "path": "63"
    },
    "3599": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x1F"
    },
    "3601": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "NOT",
      "path": "63"
    },
    "3602": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x1F"
    },
    "3604": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "DUP3",
      "path": "63"
    },
    "3605": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "ADD",
      "path": "63"
    },
    "3606": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "AND",
      "path": "63"
    },
    "3607": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "DUP3",
      "path": "63"
    },
    "3608": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "ADD",
      "path": "63"
    },
    "3609": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "DUP1",
      "path": "63"
    },
    "3610": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "3612": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "3613": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "POP",
      "path": "63"
    },
    "3614": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "DUP2",
      "path": "63"
    },
    "3615": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "ADD",
      "path": "63"
    },
    "3616": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "3617": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0xE2A"
    },
    "3620": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "3621": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "3622": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x16AB"
    },
    "3625": {
      "fn": "ERC777._callTokensReceived",
      "jump": "i",
      "offset": [
        17138,
        17217
      ],
      "op": "JUMP",
      "path": "63"
    },
    "3626": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17138,
        17217
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "3627": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17116,
        17217
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "3628": {
      "op": "POP"
    },
    "3629": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3633": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3635": {
      "op": "SHL"
    },
    "3636": {
      "op": "SUB"
    },
    "3637": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17231,
        17256
      ],
      "op": "DUP2",
      "path": "63"
    },
    "3638": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17231,
        17256
      ],
      "op": "AND",
      "path": "63"
    },
    "3639": {
      "branch": 77,
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17231,
        17256
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "3640": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17227,
        17541
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0xEA6"
    },
    "3643": {
      "branch": 77,
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17227,
        17541
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "3644": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "PUSH1",
      "path": "63",
      "statement": 48,
      "value": "0x40"
    },
    "3646": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "3647": {
      "op": "PUSH3",
      "value": "0x23DE29"
    },
    "3651": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3653": {
      "op": "SHL"
    },
    "3654": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "DUP2",
      "path": "63"
    },
    "3655": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "3656": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3658": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3660": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3662": {
      "op": "SHL"
    },
    "3663": {
      "op": "SUB"
    },
    "3664": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17316
      ],
      "op": "DUP3",
      "path": "63"
    },
    "3665": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17316
      ],
      "op": "AND",
      "path": "63"
    },
    "3666": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17316
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "3667": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17316
      ],
      "op": "PUSH3",
      "path": "63",
      "value": "0x23DE29"
    },
    "3671": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17316
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "3672": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0xE6F"
    },
    "3675": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "3676": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17317,
        17325
      ],
      "op": "DUP12",
      "path": "63"
    },
    "3677": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17317,
        17325
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "3678": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17327,
        17331
      ],
      "op": "DUP12",
      "path": "63"
    },
    "3679": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17327,
        17331
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "3680": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17333,
        17335
      ],
      "op": "DUP12",
      "path": "63"
    },
    "3681": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17333,
        17335
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "3682": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17337,
        17343
      ],
      "op": "DUP12",
      "path": "63"
    },
    "3683": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17337,
        17343
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "3684": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17345,
        17353
      ],
      "op": "DUP12",
      "path": "63"
    },
    "3685": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17345,
        17353
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "3686": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17355,
        17367
      ],
      "op": "DUP12",
      "path": "63"
    },
    "3687": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17355,
        17367
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "3688": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x4"
    },
    "3690": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "ADD",
      "path": "63"
    },
    "3691": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x16C8"
    },
    "3694": {
      "fn": "ERC777._callTokensReceived",
      "jump": "i",
      "offset": [
        17272,
        17368
      ],
      "op": "JUMP",
      "path": "63"
    },
    "3695": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "3696": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "3698": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "3700": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "3701": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "DUP1",
      "path": "63"
    },
    "3702": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "DUP4",
      "path": "63"
    },
    "3703": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "SUB",
      "path": "63"
    },
    "3704": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "DUP2",
      "path": "63"
    },
    "3705": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "3707": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "DUP8",
      "path": "63"
    },
    "3708": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "DUP1",
      "path": "63"
    },
    "3709": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "EXTCODESIZE",
      "path": "63"
    },
    "3710": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "3711": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "DUP1",
      "path": "63"
    },
    "3712": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "3713": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0xE89"
    },
    "3716": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "3717": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "3719": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "DUP1",
      "path": "63"
    },
    "3720": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "REVERT",
      "path": "63"
    },
    "3721": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "3722": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "POP",
      "path": "63"
    },
    "3723": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "GAS",
      "path": "63"
    },
    "3724": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "CALL",
      "path": "63"
    },
    "3725": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "3726": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "DUP1",
      "path": "63"
    },
    "3727": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "3728": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0xE9D"
    },
    "3731": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "3732": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "RETURNDATASIZE",
      "path": "63"
    },
    "3733": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "3735": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "DUP1",
      "path": "63"
    },
    "3736": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "RETURNDATACOPY",
      "path": "63"
    },
    "3737": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "RETURNDATASIZE",
      "path": "63"
    },
    "3738": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "3740": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "REVERT",
      "path": "63"
    },
    "3741": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "3742": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "POP",
      "path": "63"
    },
    "3743": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "POP",
      "path": "63"
    },
    "3744": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "POP",
      "path": "63"
    },
    "3745": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17272,
        17368
      ],
      "op": "POP",
      "path": "63"
    },
    "3746": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17227,
        17541
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0xF40"
    },
    "3749": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17227,
        17541
      ],
      "op": "JUMP",
      "path": "63"
    },
    "3750": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17227,
        17541
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "3751": {
      "branch": 78,
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17389,
        17408
      ],
      "op": "DUP2",
      "path": "63"
    },
    "3752": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17385,
        17541
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "3753": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17385,
        17541
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0xF40"
    },
    "3756": {
      "branch": 78,
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17385,
        17541
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "3757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3761": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3763": {
      "op": "SHL"
    },
    "3764": {
      "op": "SUB"
    },
    "3765": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17433,
        17446
      ],
      "op": "DUP7",
      "path": "63",
      "statement": 49
    },
    "3766": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17433,
        17446
      ],
      "op": "AND",
      "path": "63"
    },
    "3767": {
      "fn": "Address.isContract",
      "offset": [
        1450,
        1469
      ],
      "op": "EXTCODESIZE",
      "path": "68",
      "statement": 50
    },
    "3768": {
      "fn": "Address.isContract",
      "offset": [
        1450,
        1473
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "3769": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17424,
        17530
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0xF40"
    },
    "3772": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17424,
        17530
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "3773": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17424,
        17530
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "3775": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17424,
        17530
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "3776": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3780": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3782": {
      "op": "SHL"
    },
    "3783": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17424,
        17530
      ],
      "op": "DUP2",
      "path": "63"
    },
    "3784": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17424,
        17530
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "3785": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3787": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17424,
        17530
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x4"
    },
    "3789": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17424,
        17530
      ],
      "op": "DUP3",
      "path": "63"
    },
    "3790": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17424,
        17530
      ],
      "op": "ADD",
      "path": "63"
    },
    "3791": {
      "op": "MSTORE"
    },
    "3792": {
      "op": "PUSH1",
      "value": "0x4D"
    },
    "3794": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3796": {
      "op": "DUP3"
    },
    "3797": {
      "op": "ADD"
    },
    "3798": {
      "op": "MSTORE"
    },
    "3799": {
      "op": "PUSH32",
      "value": "0x4552433737373A20746F6B656E20726563697069656E7420636F6E7472616374"
    },
    "3832": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3834": {
      "op": "DUP3"
    },
    "3835": {
      "op": "ADD"
    },
    "3836": {
      "op": "MSTORE"
    },
    "3837": {
      "op": "PUSH32",
      "value": "0x20686173206E6F20696D706C656D656E74657220666F7220455243373737546F"
    },
    "3870": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3872": {
      "op": "DUP3"
    },
    "3873": {
      "op": "ADD"
    },
    "3874": {
      "op": "MSTORE"
    },
    "3875": {
      "op": "PUSH13",
      "value": "0x1AD95B9CD49958DA5C1A595B9D"
    },
    "3889": {
      "op": "PUSH1",
      "value": "0x9A"
    },
    "3891": {
      "op": "SHL"
    },
    "3892": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3894": {
      "op": "DUP3"
    },
    "3895": {
      "op": "ADD"
    },
    "3896": {
      "op": "MSTORE"
    },
    "3897": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "3899": {
      "op": "ADD"
    },
    "3900": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17424,
        17530
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x3DD"
    },
    "3903": {
      "op": "JUMP"
    },
    "3904": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17424,
        17530
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "3905": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        17106,
        17547
      ],
      "op": "POP",
      "path": "63"
    },
    "3906": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16871,
        17547
      ],
      "op": "POP",
      "path": "63"
    },
    "3907": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16871,
        17547
      ],
      "op": "POP",
      "path": "63"
    },
    "3908": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16871,
        17547
      ],
      "op": "POP",
      "path": "63"
    },
    "3909": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16871,
        17547
      ],
      "op": "POP",
      "path": "63"
    },
    "3910": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16871,
        17547
      ],
      "op": "POP",
      "path": "63"
    },
    "3911": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16871,
        17547
      ],
      "op": "POP",
      "path": "63"
    },
    "3912": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16871,
        17547
      ],
      "op": "POP",
      "path": "63"
    },
    "3913": {
      "fn": "ERC777._callTokensReceived",
      "jump": "o",
      "offset": [
        16871,
        17547
      ],
      "op": "JUMP",
      "path": "63"
    },
    "3914": {
      "fn": "ERC777._send",
      "offset": [
        12351,
        13001
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "3915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3919": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3921": {
      "op": "SHL"
    },
    "3922": {
      "op": "SUB"
    },
    "3923": {
      "fn": "ERC777._send",
      "offset": [
        12573,
        12591
      ],
      "op": "DUP7",
      "path": "63",
      "statement": 51
    },
    "3924": {
      "branch": 79,
      "fn": "ERC777._send",
      "offset": [
        12573,
        12591
      ],
      "op": "AND",
      "path": "63"
    },
    "3925": {
      "fn": "ERC777._send",
      "offset": [
        12565,
        12630
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0xFAB"
    },
    "3928": {
      "branch": 79,
      "fn": "ERC777._send",
      "offset": [
        12565,
        12630
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "3929": {
      "fn": "ERC777._send",
      "offset": [
        12565,
        12630
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "3931": {
      "fn": "ERC777._send",
      "offset": [
        12565,
        12630
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "3932": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3936": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3938": {
      "op": "SHL"
    },
    "3939": {
      "fn": "ERC777._send",
      "offset": [
        12565,
        12630
      ],
      "op": "DUP2",
      "path": "63"
    },
    "3940": {
      "fn": "ERC777._send",
      "offset": [
        12565,
        12630
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "3941": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3943": {
      "fn": "ERC777._send",
      "offset": [
        12565,
        12630
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x4"
    },
    "3945": {
      "fn": "ERC777._send",
      "offset": [
        12565,
        12630
      ],
      "op": "DUP3",
      "path": "63"
    },
    "3946": {
      "fn": "ERC777._send",
      "offset": [
        12565,
        12630
      ],
      "op": "ADD",
      "path": "63"
    },
    "3947": {
      "op": "MSTORE"
    },
    "3948": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "3950": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3952": {
      "op": "DUP3"
    },
    "3953": {
      "op": "ADD"
    },
    "3954": {
      "op": "MSTORE"
    },
    "3955": {
      "op": "PUSH32",
      "value": "0x4552433737373A2073656E642066726F6D20746865207A65726F206164647265"
    },
    "3988": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3990": {
      "op": "DUP3"
    },
    "3991": {
      "op": "ADD"
    },
    "3992": {
      "op": "MSTORE"
    },
    "3993": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "3996": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "3998": {
      "op": "SHL"
    },
    "3999": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4001": {
      "op": "DUP3"
    },
    "4002": {
      "op": "ADD"
    },
    "4003": {
      "op": "MSTORE"
    },
    "4004": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4006": {
      "op": "ADD"
    },
    "4007": {
      "fn": "ERC777._send",
      "offset": [
        12565,
        12630
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x3DD"
    },
    "4010": {
      "op": "JUMP"
    },
    "4011": {
      "fn": "ERC777._send",
      "offset": [
        12565,
        12630
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "4012": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4016": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4018": {
      "op": "SHL"
    },
    "4019": {
      "op": "SUB"
    },
    "4020": {
      "fn": "ERC777._send",
      "offset": [
        12648,
        12664
      ],
      "op": "DUP6",
      "path": "63",
      "statement": 52
    },
    "4021": {
      "branch": 80,
      "fn": "ERC777._send",
      "offset": [
        12648,
        12664
      ],
      "op": "AND",
      "path": "63"
    },
    "4022": {
      "fn": "ERC777._send",
      "offset": [
        12640,
        12701
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x1001"
    },
    "4025": {
      "branch": 80,
      "fn": "ERC777._send",
      "offset": [
        12640,
        12701
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "4026": {
      "fn": "ERC777._send",
      "offset": [
        12640,
        12701
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "4028": {
      "fn": "ERC777._send",
      "offset": [
        12640,
        12701
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "4029": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4033": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4035": {
      "op": "SHL"
    },
    "4036": {
      "fn": "ERC777._send",
      "offset": [
        12640,
        12701
      ],
      "op": "DUP2",
      "path": "63"
    },
    "4037": {
      "fn": "ERC777._send",
      "offset": [
        12640,
        12701
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "4038": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4040": {
      "fn": "ERC777._send",
      "offset": [
        12640,
        12701
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x4"
    },
    "4042": {
      "fn": "ERC777._send",
      "offset": [
        12640,
        12701
      ],
      "op": "DUP3",
      "path": "63"
    },
    "4043": {
      "fn": "ERC777._send",
      "offset": [
        12640,
        12701
      ],
      "op": "ADD",
      "path": "63"
    },
    "4044": {
      "op": "DUP2"
    },
    "4045": {
      "op": "SWAP1"
    },
    "4046": {
      "op": "MSTORE"
    },
    "4047": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4049": {
      "op": "DUP3"
    },
    "4050": {
      "op": "ADD"
    },
    "4051": {
      "op": "MSTORE"
    },
    "4052": {
      "op": "PUSH32",
      "value": "0x4552433737373A2073656E6420746F20746865207A65726F2061646472657373"
    },
    "4085": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4087": {
      "op": "DUP3"
    },
    "4088": {
      "op": "ADD"
    },
    "4089": {
      "op": "MSTORE"
    },
    "4090": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4092": {
      "op": "ADD"
    },
    "4093": {
      "fn": "ERC777._send",
      "offset": [
        12640,
        12701
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x3DD"
    },
    "4096": {
      "op": "JUMP"
    },
    "4097": {
      "fn": "ERC777._send",
      "offset": [
        12640,
        12701
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "4098": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "70"
    },
    "4099": {
      "fn": "ERC777._send",
      "offset": [
        12754,
        12823
      ],
      "op": "PUSH2",
      "path": "63",
      "statement": 53,
      "value": "0x1010"
    },
    "4102": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP2",
      "path": "70"
    },
    "4103": {
      "fn": "ERC777._send",
      "offset": [
        12782,
        12786
      ],
      "op": "DUP9",
      "path": "63"
    },
    "4104": {
      "fn": "ERC777._send",
      "offset": [
        12788,
        12790
      ],
      "op": "DUP9",
      "path": "63"
    },
    "4105": {
      "fn": "ERC777._send",
      "offset": [
        12792,
        12798
      ],
      "op": "DUP9",
      "path": "63"
    },
    "4106": {
      "fn": "ERC777._send",
      "offset": [
        12800,
        12808
      ],
      "op": "DUP9",
      "path": "63"
    },
    "4107": {
      "fn": "ERC777._send",
      "offset": [
        12810,
        12822
      ],
      "op": "DUP9",
      "path": "63"
    },
    "4108": {
      "fn": "ERC777._send",
      "offset": [
        12754,
        12771
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0xAF7"
    },
    "4111": {
      "fn": "ERC777._send",
      "jump": "i",
      "offset": [
        12754,
        12823
      ],
      "op": "JUMP",
      "path": "63"
    },
    "4112": {
      "fn": "ERC777._send",
      "offset": [
        12754,
        12823
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "4113": {
      "fn": "ERC777._send",
      "offset": [
        12834,
        12891
      ],
      "op": "PUSH2",
      "path": "63",
      "statement": 54,
      "value": "0x101E"
    },
    "4116": {
      "fn": "ERC777._send",
      "offset": [
        12840,
        12848
      ],
      "op": "DUP2",
      "path": "63"
    },
    "4117": {
      "fn": "ERC777._send",
      "offset": [
        12850,
        12854
      ],
      "op": "DUP9",
      "path": "63"
    },
    "4118": {
      "fn": "ERC777._send",
      "offset": [
        12856,
        12858
      ],
      "op": "DUP9",
      "path": "63"
    },
    "4119": {
      "fn": "ERC777._send",
      "offset": [
        12860,
        12866
      ],
      "op": "DUP9",
      "path": "63"
    },
    "4120": {
      "fn": "ERC777._send",
      "offset": [
        12868,
        12876
      ],
      "op": "DUP9",
      "path": "63"
    },
    "4121": {
      "fn": "ERC777._send",
      "offset": [
        12878,
        12890
      ],
      "op": "DUP9",
      "path": "63"
    },
    "4122": {
      "fn": "ERC777._send",
      "offset": [
        12834,
        12839
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0xC1F"
    },
    "4125": {
      "fn": "ERC777._send",
      "jump": "i",
      "offset": [
        12834,
        12891
      ],
      "op": "JUMP",
      "path": "63"
    },
    "4126": {
      "fn": "ERC777._send",
      "offset": [
        12834,
        12891
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "4127": {
      "fn": "ERC777._send",
      "offset": [
        12902,
        12994
      ],
      "op": "PUSH2",
      "path": "63",
      "statement": 55,
      "value": "0xC16"
    },
    "4130": {
      "fn": "ERC777._send",
      "offset": [
        12922,
        12930
      ],
      "op": "DUP2",
      "path": "63"
    },
    "4131": {
      "fn": "ERC777._send",
      "offset": [
        12932,
        12936
      ],
      "op": "DUP9",
      "path": "63"
    },
    "4132": {
      "fn": "ERC777._send",
      "offset": [
        12938,
        12940
      ],
      "op": "DUP9",
      "path": "63"
    },
    "4133": {
      "fn": "ERC777._send",
      "offset": [
        12942,
        12948
      ],
      "op": "DUP9",
      "path": "63"
    },
    "4134": {
      "fn": "ERC777._send",
      "offset": [
        12950,
        12958
      ],
      "op": "DUP9",
      "path": "63"
    },
    "4135": {
      "fn": "ERC777._send",
      "offset": [
        12960,
        12972
      ],
      "op": "DUP9",
      "path": "63"
    },
    "4136": {
      "fn": "ERC777._send",
      "offset": [
        12974,
        12993
      ],
      "op": "DUP9",
      "path": "63"
    },
    "4137": {
      "fn": "ERC777._send",
      "offset": [
        12902,
        12921
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0xD85"
    },
    "4140": {
      "fn": "ERC777._send",
      "jump": "i",
      "offset": [
        12902,
        12994
      ],
      "op": "JUMP",
      "path": "63"
    },
    "4141": {
      "fn": "ERC777._burn",
      "offset": [
        13306,
        14117
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "4142": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4146": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4148": {
      "op": "SHL"
    },
    "4149": {
      "op": "SUB"
    },
    "4150": {
      "fn": "ERC777._burn",
      "offset": [
        13470,
        13488
      ],
      "op": "DUP5",
      "path": "63",
      "statement": 56
    },
    "4151": {
      "branch": 81,
      "fn": "ERC777._burn",
      "offset": [
        13470,
        13488
      ],
      "op": "AND",
      "path": "63"
    },
    "4152": {
      "fn": "ERC777._burn",
      "offset": [
        13462,
        13527
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x108E"
    },
    "4155": {
      "branch": 81,
      "fn": "ERC777._burn",
      "offset": [
        13462,
        13527
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "4156": {
      "fn": "ERC777._burn",
      "offset": [
        13462,
        13527
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "4158": {
      "fn": "ERC777._burn",
      "offset": [
        13462,
        13527
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "4159": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4163": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4165": {
      "op": "SHL"
    },
    "4166": {
      "fn": "ERC777._burn",
      "offset": [
        13462,
        13527
      ],
      "op": "DUP2",
      "path": "63"
    },
    "4167": {
      "fn": "ERC777._burn",
      "offset": [
        13462,
        13527
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "4168": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4170": {
      "fn": "ERC777._burn",
      "offset": [
        13462,
        13527
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x4"
    },
    "4172": {
      "fn": "ERC777._burn",
      "offset": [
        13462,
        13527
      ],
      "op": "DUP3",
      "path": "63"
    },
    "4173": {
      "fn": "ERC777._burn",
      "offset": [
        13462,
        13527
      ],
      "op": "ADD",
      "path": "63"
    },
    "4174": {
      "op": "MSTORE"
    },
    "4175": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "4177": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4179": {
      "op": "DUP3"
    },
    "4180": {
      "op": "ADD"
    },
    "4181": {
      "op": "MSTORE"
    },
    "4182": {
      "op": "PUSH32",
      "value": "0x4552433737373A206275726E2066726F6D20746865207A65726F206164647265"
    },
    "4215": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4217": {
      "op": "DUP3"
    },
    "4218": {
      "op": "ADD"
    },
    "4219": {
      "op": "MSTORE"
    },
    "4220": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "4223": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "4225": {
      "op": "SHL"
    },
    "4226": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4228": {
      "op": "DUP3"
    },
    "4229": {
      "op": "ADD"
    },
    "4230": {
      "op": "MSTORE"
    },
    "4231": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4233": {
      "op": "ADD"
    },
    "4234": {
      "fn": "ERC777._burn",
      "offset": [
        13462,
        13527
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x3DD"
    },
    "4237": {
      "op": "JUMP"
    },
    "4238": {
      "fn": "ERC777._burn",
      "offset": [
        13462,
        13527
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "4239": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "70"
    },
    "4240": {
      "fn": "ERC777._burn",
      "offset": [
        13580,
        13653
      ],
      "op": "PUSH2",
      "path": "63",
      "statement": 57,
      "value": "0x109E"
    },
    "4243": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP2",
      "path": "70"
    },
    "4244": {
      "fn": "ERC777._burn",
      "offset": [
        13608,
        13612
      ],
      "op": "DUP7",
      "path": "63"
    },
    "4245": {
      "fn": "ERC777._burn",
      "offset": [
        13538,
        13554
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "4247": {
      "fn": "ERC777._burn",
      "offset": [
        13626,
        13632
      ],
      "op": "DUP8",
      "path": "63"
    },
    "4248": {
      "fn": "ERC777._burn",
      "offset": [
        13634,
        13638
      ],
      "op": "DUP8",
      "path": "63"
    },
    "4249": {
      "fn": "ERC777._burn",
      "offset": [
        13640,
        13652
      ],
      "op": "DUP8",
      "path": "63"
    },
    "4250": {
      "fn": "ERC777._burn",
      "offset": [
        13580,
        13597
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0xAF7"
    },
    "4253": {
      "fn": "ERC777._burn",
      "jump": "i",
      "offset": [
        13580,
        13653
      ],
      "op": "JUMP",
      "path": "63"
    },
    "4254": {
      "fn": "ERC777._burn",
      "offset": [
        13580,
        13653
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "4255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4259": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4261": {
      "op": "SHL"
    },
    "4262": {
      "op": "SUB"
    },
    "4263": {
      "fn": "ERC777._burn",
      "offset": [
        13787,
        13802
      ],
      "op": "DUP6",
      "path": "63"
    },
    "4264": {
      "fn": "ERC777._burn",
      "offset": [
        13787,
        13802
      ],
      "op": "AND",
      "path": "63"
    },
    "4265": {
      "fn": "ERC777._burn",
      "offset": [
        13765,
        13784
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "4267": {
      "fn": "ERC777._burn",
      "offset": [
        13787,
        13802
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "4268": {
      "fn": "ERC777._burn",
      "offset": [
        13787,
        13802
      ],
      "op": "DUP2",
      "path": "63"
    },
    "4269": {
      "fn": "ERC777._burn",
      "offset": [
        13787,
        13802
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "4270": {
      "fn": "ERC777._burn",
      "offset": [
        13787,
        13802
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "4272": {
      "fn": "ERC777._burn",
      "offset": [
        13787,
        13802
      ],
      "op": "DUP2",
      "path": "63"
    },
    "4273": {
      "fn": "ERC777._burn",
      "offset": [
        13787,
        13802
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "4274": {
      "fn": "ERC777._burn",
      "offset": [
        13787,
        13802
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "4275": {
      "fn": "ERC777._burn",
      "offset": [
        13787,
        13802
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "4277": {
      "fn": "ERC777._burn",
      "offset": [
        13787,
        13802
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "4278": {
      "fn": "ERC777._burn",
      "offset": [
        13787,
        13802
      ],
      "op": "KECCAK256",
      "path": "63"
    },
    "4279": {
      "fn": "ERC777._burn",
      "offset": [
        13787,
        13802
      ],
      "op": "SLOAD",
      "path": "63"
    },
    "4280": {
      "fn": "ERC777._burn",
      "offset": [
        13820,
        13841
      ],
      "op": "DUP5",
      "path": "63",
      "statement": 58
    },
    "4281": {
      "fn": "ERC777._burn",
      "offset": [
        13820,
        13841
      ],
      "op": "DUP2",
      "path": "63"
    },
    "4282": {
      "fn": "ERC777._burn",
      "offset": [
        13820,
        13841
      ],
      "op": "LT",
      "path": "63"
    },
    "4283": {
      "branch": 82,
      "fn": "ERC777._burn",
      "offset": [
        13820,
        13841
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "4284": {
      "fn": "ERC777._burn",
      "offset": [
        13812,
        13881
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x1113"
    },
    "4287": {
      "branch": 82,
      "fn": "ERC777._burn",
      "offset": [
        13812,
        13881
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "4288": {
      "fn": "ERC777._burn",
      "offset": [
        13812,
        13881
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "4290": {
      "fn": "ERC777._burn",
      "offset": [
        13812,
        13881
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "4291": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4295": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4297": {
      "op": "SHL"
    },
    "4298": {
      "fn": "ERC777._burn",
      "offset": [
        13812,
        13881
      ],
      "op": "DUP2",
      "path": "63"
    },
    "4299": {
      "fn": "ERC777._burn",
      "offset": [
        13812,
        13881
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "4300": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4302": {
      "fn": "ERC777._burn",
      "offset": [
        13812,
        13881
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x4"
    },
    "4304": {
      "fn": "ERC777._burn",
      "offset": [
        13812,
        13881
      ],
      "op": "DUP3",
      "path": "63"
    },
    "4305": {
      "fn": "ERC777._burn",
      "offset": [
        13812,
        13881
      ],
      "op": "ADD",
      "path": "63"
    },
    "4306": {
      "op": "MSTORE"
    },
    "4307": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "4309": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4311": {
      "op": "DUP3"
    },
    "4312": {
      "op": "ADD"
    },
    "4313": {
      "op": "MSTORE"
    },
    "4314": {
      "op": "PUSH32",
      "value": "0x4552433737373A206275726E20616D6F756E7420657863656564732062616C61"
    },
    "4347": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4349": {
      "op": "DUP3"
    },
    "4350": {
      "op": "ADD"
    },
    "4351": {
      "op": "MSTORE"
    },
    "4352": {
      "op": "PUSH3",
      "value": "0x6E6365"
    },
    "4356": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "4358": {
      "op": "SHL"
    },
    "4359": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4361": {
      "op": "DUP3"
    },
    "4362": {
      "op": "ADD"
    },
    "4363": {
      "op": "MSTORE"
    },
    "4364": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4366": {
      "op": "ADD"
    },
    "4367": {
      "fn": "ERC777._burn",
      "offset": [
        13812,
        13881
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x3DD"
    },
    "4370": {
      "op": "JUMP"
    },
    "4371": {
      "fn": "ERC777._burn",
      "offset": [
        13812,
        13881
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "4372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4376": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4378": {
      "op": "SHL"
    },
    "4379": {
      "op": "SUB"
    },
    "4380": {
      "fn": "ERC777._burn",
      "offset": [
        13915,
        13930
      ],
      "op": "DUP7",
      "path": "63",
      "statement": 59
    },
    "4381": {
      "fn": "ERC777._burn",
      "offset": [
        13915,
        13930
      ],
      "op": "AND",
      "path": "63"
    },
    "4382": {
      "fn": "ERC777._burn",
      "offset": [
        13915,
        13924
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "4384": {
      "fn": "ERC777._burn",
      "offset": [
        13915,
        13930
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "4385": {
      "fn": "ERC777._burn",
      "offset": [
        13915,
        13930
      ],
      "op": "DUP2",
      "path": "63"
    },
    "4386": {
      "fn": "ERC777._burn",
      "offset": [
        13915,
        13930
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "4387": {
      "fn": "ERC777._burn",
      "offset": [
        13915,
        13930
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "4389": {
      "fn": "ERC777._burn",
      "offset": [
        13915,
        13930
      ],
      "op": "DUP2",
      "path": "63"
    },
    "4390": {
      "fn": "ERC777._burn",
      "offset": [
        13915,
        13930
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "4391": {
      "fn": "ERC777._burn",
      "offset": [
        13915,
        13930
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "4392": {
      "fn": "ERC777._burn",
      "offset": [
        13915,
        13930
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "4394": {
      "fn": "ERC777._burn",
      "offset": [
        13915,
        13930
      ],
      "op": "DUP2",
      "path": "63"
    },
    "4395": {
      "fn": "ERC777._burn",
      "offset": [
        13915,
        13930
      ],
      "op": "KECCAK256",
      "path": "63"
    },
    "4396": {
      "fn": "ERC777._burn",
      "offset": [
        13933,
        13953
      ],
      "op": "DUP7",
      "path": "63"
    },
    "4397": {
      "fn": "ERC777._burn",
      "offset": [
        13933,
        13953
      ],
      "op": "DUP4",
      "path": "63"
    },
    "4398": {
      "fn": "ERC777._burn",
      "offset": [
        13933,
        13953
      ],
      "op": "SUB",
      "path": "63"
    },
    "4399": {
      "fn": "ERC777._burn",
      "offset": [
        13915,
        13953
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "4400": {
      "fn": "ERC777._burn",
      "offset": [
        13915,
        13953
      ],
      "op": "SSTORE",
      "path": "63"
    },
    "4401": {
      "fn": "ERC777._burn",
      "offset": [
        13973,
        13985
      ],
      "op": "PUSH1",
      "path": "63",
      "statement": 60,
      "value": "0x1"
    },
    "4403": {
      "fn": "ERC777._burn",
      "offset": [
        13973,
        13995
      ],
      "op": "DUP1",
      "path": "63"
    },
    "4404": {
      "fn": "ERC777._burn",
      "offset": [
        13973,
        13995
      ],
      "op": "SLOAD",
      "path": "63"
    },
    "4405": {
      "fn": "ERC777._burn",
      "offset": [
        13947,
        13953
      ],
      "op": "DUP8",
      "path": "63"
    },
    "4406": {
      "fn": "ERC777._burn",
      "offset": [
        13947,
        13953
      ],
      "op": "SWAP3",
      "path": "63"
    },
    "4407": {
      "fn": "ERC777._burn",
      "offset": [
        13915,
        13924
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "4408": {
      "fn": "ERC777._burn",
      "offset": [
        13973,
        13995
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x1142"
    },
    "4411": {
      "fn": "ERC777._burn",
      "offset": [
        13973,
        13995
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "4412": {
      "fn": "ERC777._burn",
      "offset": [
        13947,
        13953
      ],
      "op": "DUP5",
      "path": "63"
    },
    "4413": {
      "fn": "ERC777._burn",
      "offset": [
        13947,
        13953
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "4414": {
      "fn": "ERC777._burn",
      "offset": [
        13973,
        13995
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x164C"
    },
    "4417": {
      "fn": "ERC777._burn",
      "jump": "i",
      "offset": [
        13973,
        13995
      ],
      "op": "JUMP",
      "path": "63"
    },
    "4418": {
      "fn": "ERC777._burn",
      "offset": [
        13973,
        13995
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "4419": {
      "fn": "ERC777._burn",
      "offset": [
        13973,
        13995
      ],
      "op": "SWAP3",
      "path": "63"
    },
    "4420": {
      "fn": "ERC777._burn",
      "offset": [
        13973,
        13995
      ],
      "op": "POP",
      "path": "63"
    },
    "4421": {
      "fn": "ERC777._burn",
      "offset": [
        13973,
        13995
      ],
      "op": "POP",
      "path": "63"
    },
    "4422": {
      "fn": "ERC777._burn",
      "offset": [
        13973,
        13995
      ],
      "op": "DUP2",
      "path": "63"
    },
    "4423": {
      "fn": "ERC777._burn",
      "offset": [
        13973,
        13995
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "4424": {
      "fn": "ERC777._burn",
      "offset": [
        13973,
        13995
      ],
      "op": "SSTORE",
      "path": "63"
    },
    "4425": {
      "fn": "ERC777._burn",
      "offset": [
        13973,
        13995
      ],
      "op": "POP",
      "path": "63"
    },
    "4426": {
      "fn": "ERC777._burn",
      "offset": [
        14028,
        14032
      ],
      "op": "DUP6",
      "path": "63",
      "statement": 61
    },
    "4427": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4429": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4431": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4433": {
      "op": "SHL"
    },
    "4434": {
      "op": "SUB"
    },
    "4435": {
      "fn": "ERC777._burn",
      "offset": [
        14011,
        14061
      ],
      "op": "AND",
      "path": "63"
    },
    "4436": {
      "fn": "ERC777._burn",
      "offset": [
        14018,
        14026
      ],
      "op": "DUP3",
      "path": "63"
    },
    "4437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4441": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4443": {
      "op": "SHL"
    },
    "4444": {
      "op": "SUB"
    },
    "4445": {
      "fn": "ERC777._burn",
      "offset": [
        14011,
        14061
      ],
      "op": "AND",
      "path": "63"
    },
    "4446": {
      "fn": "ERC777._burn",
      "offset": [
        14011,
        14061
      ],
      "op": "PUSH32",
      "path": "63",
      "value": "0xA78A9BE3A7B862D26933AD85FB11D80EF66B8F972D7CBBA06621D583943A4098"
    },
    "4479": {
      "fn": "ERC777._burn",
      "offset": [
        14034,
        14040
      ],
      "op": "DUP8",
      "path": "63"
    },
    "4480": {
      "fn": "ERC777._burn",
      "offset": [
        14042,
        14046
      ],
      "op": "DUP8",
      "path": "63"
    },
    "4481": {
      "fn": "ERC777._burn",
      "offset": [
        14048,
        14060
      ],
      "op": "DUP8",
      "path": "63"
    },
    "4482": {
      "fn": "ERC777._burn",
      "offset": [
        14011,
        14061
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "4484": {
      "fn": "ERC777._burn",
      "offset": [
        14011,
        14061
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "4485": {
      "fn": "ERC777._burn",
      "offset": [
        14011,
        14061
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x1190"
    },
    "4488": {
      "fn": "ERC777._burn",
      "offset": [
        14011,
        14061
      ],
      "op": "SWAP4",
      "path": "63"
    },
    "4489": {
      "fn": "ERC777._burn",
      "offset": [
        14011,
        14061
      ],
      "op": "SWAP3",
      "path": "63"
    },
    "4490": {
      "fn": "ERC777._burn",
      "offset": [
        14011,
        14061
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "4491": {
      "fn": "ERC777._burn",
      "offset": [
        14011,
        14061
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "4492": {
      "fn": "ERC777._burn",
      "offset": [
        14011,
        14061
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x1735"
    },
    "4495": {
      "fn": "ERC777._burn",
      "jump": "i",
      "offset": [
        14011,
        14061
      ],
      "op": "JUMP",
      "path": "63"
    },
    "4496": {
      "fn": "ERC777._burn",
      "offset": [
        14011,
        14061
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "4497": {
      "fn": "ERC777._burn",
      "offset": [
        14011,
        14061
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "4499": {
      "fn": "ERC777._burn",
      "offset": [
        14011,
        14061
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "4500": {
      "fn": "ERC777._burn",
      "offset": [
        14011,
        14061
      ],
      "op": "DUP1",
      "path": "63"
    },
    "4501": {
      "fn": "ERC777._burn",
      "offset": [
        14011,
        14061
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "4502": {
      "fn": "ERC777._burn",
      "offset": [
        14011,
        14061
      ],
      "op": "SUB",
      "path": "63"
    },
    "4503": {
      "fn": "ERC777._burn",
      "offset": [
        14011,
        14061
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "4504": {
      "fn": "ERC777._burn",
      "offset": [
        14011,
        14061
      ],
      "op": "LOG3",
      "path": "63"
    },
    "4505": {
      "fn": "ERC777._burn",
      "offset": [
        14076,
        14110
      ],
      "op": "PUSH1",
      "path": "63",
      "statement": 62,
      "value": "0x40"
    },
    "4507": {
      "fn": "ERC777._burn",
      "offset": [
        14076,
        14110
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "4508": {
      "op": "DUP6"
    },
    "4509": {
      "op": "DUP2"
    },
    "4510": {
      "op": "MSTORE"
    },
    "4511": {
      "fn": "ERC777._burn",
      "offset": [
        14099,
        14100
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "4513": {
      "fn": "ERC777._burn",
      "offset": [
        14099,
        14100
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "4514": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4516": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4518": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4520": {
      "op": "SHL"
    },
    "4521": {
      "op": "SUB"
    },
    "4522": {
      "fn": "ERC777._burn",
      "offset": [
        14076,
        14110
      ],
      "op": "DUP9",
      "path": "63"
    },
    "4523": {
      "fn": "ERC777._burn",
      "offset": [
        14076,
        14110
      ],
      "op": "AND",
      "path": "63"
    },
    "4524": {
      "fn": "ERC777._burn",
      "offset": [
        14076,
        14110
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "4525": {
      "fn": "ERC777._burn",
      "offset": [
        14076,
        14110
      ],
      "op": "PUSH32",
      "path": "63",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "4558": {
      "fn": "ERC777._burn",
      "offset": [
        14076,
        14110
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "4559": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4561": {
      "op": "ADD"
    },
    "4562": {
      "fn": "ERC777._burn",
      "offset": [
        14076,
        14110
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "4564": {
      "fn": "ERC777._burn",
      "offset": [
        14076,
        14110
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "4565": {
      "fn": "ERC777._burn",
      "offset": [
        14076,
        14110
      ],
      "op": "DUP1",
      "path": "63"
    },
    "4566": {
      "fn": "ERC777._burn",
      "offset": [
        14076,
        14110
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "4567": {
      "fn": "ERC777._burn",
      "offset": [
        14076,
        14110
      ],
      "op": "SUB",
      "path": "63"
    },
    "4568": {
      "fn": "ERC777._burn",
      "offset": [
        14076,
        14110
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "4569": {
      "fn": "ERC777._burn",
      "offset": [
        14076,
        14110
      ],
      "op": "LOG3",
      "path": "63"
    },
    "4570": {
      "fn": "ERC777._burn",
      "offset": [
        13452,
        14117
      ],
      "op": "POP",
      "path": "63"
    },
    "4571": {
      "fn": "ERC777._burn",
      "offset": [
        13452,
        14117
      ],
      "op": "POP",
      "path": "63"
    },
    "4572": {
      "fn": "ERC777._burn",
      "offset": [
        13306,
        14117
      ],
      "op": "POP",
      "path": "63"
    },
    "4573": {
      "fn": "ERC777._burn",
      "offset": [
        13306,
        14117
      ],
      "op": "POP",
      "path": "63"
    },
    "4574": {
      "fn": "ERC777._burn",
      "offset": [
        13306,
        14117
      ],
      "op": "POP",
      "path": "63"
    },
    "4575": {
      "fn": "ERC777._burn",
      "offset": [
        13306,
        14117
      ],
      "op": "POP",
      "path": "63"
    },
    "4576": {
      "fn": "ERC777._burn",
      "jump": "o",
      "offset": [
        13306,
        14117
      ],
      "op": "JUMP",
      "path": "63"
    },
    "4577": {
      "op": "JUMPDEST"
    },
    "4578": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4580": {
      "op": "DUP1"
    },
    "4581": {
      "op": "DUP3"
    },
    "4582": {
      "op": "MSTORE"
    },
    "4583": {
      "op": "DUP3"
    },
    "4584": {
      "op": "MLOAD"
    },
    "4585": {
      "op": "DUP3"
    },
    "4586": {
      "op": "DUP3"
    },
    "4587": {
      "op": "ADD"
    },
    "4588": {
      "op": "DUP2"
    },
    "4589": {
      "op": "SWAP1"
    },
    "4590": {
      "op": "MSTORE"
    },
    "4591": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4593": {
      "op": "SWAP2"
    },
    "4594": {
      "op": "SWAP1"
    },
    "4595": {
      "op": "DUP5"
    },
    "4596": {
      "op": "DUP3"
    },
    "4597": {
      "op": "ADD"
    },
    "4598": {
      "op": "SWAP1"
    },
    "4599": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4601": {
      "op": "DUP6"
    },
    "4602": {
      "op": "ADD"
    },
    "4603": {
      "op": "SWAP1"
    },
    "4604": {
      "op": "DUP5"
    },
    "4605": {
      "op": "JUMPDEST"
    },
    "4606": {
      "op": "DUP2"
    },
    "4607": {
      "op": "DUP2"
    },
    "4608": {
      "op": "LT"
    },
    "4609": {
      "op": "ISZERO"
    },
    "4610": {
      "op": "PUSH2",
      "value": "0x1222"
    },
    "4613": {
      "op": "JUMPI"
    },
    "4614": {
      "op": "DUP4"
    },
    "4615": {
      "op": "MLOAD"
    },
    "4616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4620": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4622": {
      "op": "SHL"
    },
    "4623": {
      "op": "SUB"
    },
    "4624": {
      "op": "AND"
    },
    "4625": {
      "op": "DUP4"
    },
    "4626": {
      "op": "MSTORE"
    },
    "4627": {
      "op": "SWAP3"
    },
    "4628": {
      "op": "DUP5"
    },
    "4629": {
      "op": "ADD"
    },
    "4630": {
      "op": "SWAP3"
    },
    "4631": {
      "op": "SWAP2"
    },
    "4632": {
      "op": "DUP5"
    },
    "4633": {
      "op": "ADD"
    },
    "4634": {
      "op": "SWAP2"
    },
    "4635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4637": {
      "op": "ADD"
    },
    "4638": {
      "op": "PUSH2",
      "value": "0x11FD"
    },
    "4641": {
      "op": "JUMP"
    },
    "4642": {
      "op": "JUMPDEST"
    },
    "4643": {
      "op": "POP"
    },
    "4644": {
      "op": "SWAP1"
    },
    "4645": {
      "op": "SWAP7"
    },
    "4646": {
      "op": "SWAP6"
    },
    "4647": {
      "op": "POP"
    },
    "4648": {
      "op": "POP"
    },
    "4649": {
      "op": "POP"
    },
    "4650": {
      "op": "POP"
    },
    "4651": {
      "op": "POP"
    },
    "4652": {
      "op": "POP"
    },
    "4653": {
      "jump": "o",
      "op": "JUMP"
    },
    "4654": {
      "op": "JUMPDEST"
    },
    "4655": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4657": {
      "op": "DUP2"
    },
    "4658": {
      "op": "MLOAD"
    },
    "4659": {
      "op": "DUP1"
    },
    "4660": {
      "op": "DUP5"
    },
    "4661": {
      "op": "MSTORE"
    },
    "4662": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4664": {
      "op": "JUMPDEST"
    },
    "4665": {
      "op": "DUP2"
    },
    "4666": {
      "op": "DUP2"
    },
    "4667": {
      "op": "LT"
    },
    "4668": {
      "op": "ISZERO"
    },
    "4669": {
      "op": "PUSH2",
      "value": "0x1254"
    },
    "4672": {
      "op": "JUMPI"
    },
    "4673": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4675": {
      "op": "DUP2"
    },
    "4676": {
      "op": "DUP6"
    },
    "4677": {
      "op": "ADD"
    },
    "4678": {
      "op": "DUP2"
    },
    "4679": {
      "op": "ADD"
    },
    "4680": {
      "op": "MLOAD"
    },
    "4681": {
      "op": "DUP7"
    },
    "4682": {
      "op": "DUP4"
    },
    "4683": {
      "op": "ADD"
    },
    "4684": {
      "op": "DUP3"
    },
    "4685": {
      "op": "ADD"
    },
    "4686": {
      "op": "MSTORE"
    },
    "4687": {
      "op": "ADD"
    },
    "4688": {
      "op": "PUSH2",
      "value": "0x1238"
    },
    "4691": {
      "op": "JUMP"
    },
    "4692": {
      "op": "JUMPDEST"
    },
    "4693": {
      "op": "POP"
    },
    "4694": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4696": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4698": {
      "op": "DUP3"
    },
    "4699": {
      "op": "DUP7"
    },
    "4700": {
      "op": "ADD"
    },
    "4701": {
      "op": "ADD"
    },
    "4702": {
      "op": "MSTORE"
    },
    "4703": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4705": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4707": {
      "op": "NOT"
    },
    "4708": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4710": {
      "op": "DUP4"
    },
    "4711": {
      "op": "ADD"
    },
    "4712": {
      "op": "AND"
    },
    "4713": {
      "op": "DUP6"
    },
    "4714": {
      "op": "ADD"
    },
    "4715": {
      "op": "ADD"
    },
    "4716": {
      "op": "SWAP2"
    },
    "4717": {
      "op": "POP"
    },
    "4718": {
      "op": "POP"
    },
    "4719": {
      "op": "SWAP3"
    },
    "4720": {
      "op": "SWAP2"
    },
    "4721": {
      "op": "POP"
    },
    "4722": {
      "op": "POP"
    },
    "4723": {
      "jump": "o",
      "op": "JUMP"
    },
    "4724": {
      "op": "JUMPDEST"
    },
    "4725": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4727": {
      "op": "DUP2"
    },
    "4728": {
      "op": "MSTORE"
    },
    "4729": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4731": {
      "op": "PUSH2",
      "value": "0x857"
    },
    "4734": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4736": {
      "op": "DUP4"
    },
    "4737": {
      "op": "ADD"
    },
    "4738": {
      "op": "DUP5"
    },
    "4739": {
      "op": "PUSH2",
      "value": "0x122E"
    },
    "4742": {
      "jump": "i",
      "op": "JUMP"
    },
    "4743": {
      "op": "JUMPDEST"
    },
    "4744": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4746": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4748": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4750": {
      "op": "SHL"
    },
    "4751": {
      "op": "SUB"
    },
    "4752": {
      "op": "DUP2"
    },
    "4753": {
      "op": "AND"
    },
    "4754": {
      "op": "DUP2"
    },
    "4755": {
      "op": "EQ"
    },
    "4756": {
      "op": "PUSH2",
      "value": "0x129C"
    },
    "4759": {
      "op": "JUMPI"
    },
    "4760": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4762": {
      "op": "DUP1"
    },
    "4763": {
      "op": "REVERT"
    },
    "4764": {
      "op": "JUMPDEST"
    },
    "4765": {
      "op": "POP"
    },
    "4766": {
      "jump": "o",
      "op": "JUMP"
    },
    "4767": {
      "op": "JUMPDEST"
    },
    "4768": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4770": {
      "op": "DUP1"
    },
    "4771": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4773": {
      "op": "DUP4"
    },
    "4774": {
      "op": "DUP6"
    },
    "4775": {
      "op": "SUB"
    },
    "4776": {
      "op": "SLT"
    },
    "4777": {
      "op": "ISZERO"
    },
    "4778": {
      "op": "PUSH2",
      "value": "0x12B2"
    },
    "4781": {
      "op": "JUMPI"
    },
    "4782": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4784": {
      "op": "DUP1"
    },
    "4785": {
      "op": "REVERT"
    },
    "4786": {
      "op": "JUMPDEST"
    },
    "4787": {
      "op": "DUP3"
    },
    "4788": {
      "op": "CALLDATALOAD"
    },
    "4789": {
      "op": "PUSH2",
      "value": "0x12BD"
    },
    "4792": {
      "op": "DUP2"
    },
    "4793": {
      "op": "PUSH2",
      "value": "0x1287"
    },
    "4796": {
      "jump": "i",
      "op": "JUMP"
    },
    "4797": {
      "op": "JUMPDEST"
    },
    "4798": {
      "op": "SWAP5"
    },
    "4799": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4801": {
      "op": "SWAP4"
    },
    "4802": {
      "op": "SWAP1"
    },
    "4803": {
      "op": "SWAP4"
    },
    "4804": {
      "op": "ADD"
    },
    "4805": {
      "op": "CALLDATALOAD"
    },
    "4806": {
      "op": "SWAP4"
    },
    "4807": {
      "op": "POP"
    },
    "4808": {
      "op": "POP"
    },
    "4809": {
      "op": "POP"
    },
    "4810": {
      "jump": "o",
      "op": "JUMP"
    },
    "4811": {
      "op": "JUMPDEST"
    },
    "4812": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4814": {
      "op": "DUP1"
    },
    "4815": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4817": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4819": {
      "op": "DUP5"
    },
    "4820": {
      "op": "DUP7"
    },
    "4821": {
      "op": "SUB"
    },
    "4822": {
      "op": "SLT"
    },
    "4823": {
      "op": "ISZERO"
    },
    "4824": {
      "op": "PUSH2",
      "value": "0x12E0"
    },
    "4827": {
      "op": "JUMPI"
    },
    "4828": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4830": {
      "op": "DUP1"
    },
    "4831": {
      "op": "REVERT"
    },
    "4832": {
      "op": "JUMPDEST"
    },
    "4833": {
      "op": "DUP4"
    },
    "4834": {
      "op": "CALLDATALOAD"
    },
    "4835": {
      "op": "PUSH2",
      "value": "0x12EB"
    },
    "4838": {
      "op": "DUP2"
    },
    "4839": {
      "op": "PUSH2",
      "value": "0x1287"
    },
    "4842": {
      "jump": "i",
      "op": "JUMP"
    },
    "4843": {
      "op": "JUMPDEST"
    },
    "4844": {
      "op": "SWAP3"
    },
    "4845": {
      "op": "POP"
    },
    "4846": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4848": {
      "op": "DUP5"
    },
    "4849": {
      "op": "ADD"
    },
    "4850": {
      "op": "CALLDATALOAD"
    },
    "4851": {
      "op": "PUSH2",
      "value": "0x12FB"
    },
    "4854": {
      "op": "DUP2"
    },
    "4855": {
      "op": "PUSH2",
      "value": "0x1287"
    },
    "4858": {
      "jump": "i",
      "op": "JUMP"
    },
    "4859": {
      "op": "JUMPDEST"
    },
    "4860": {
      "op": "SWAP3"
    },
    "4861": {
      "op": "SWAP6"
    },
    "4862": {
      "op": "SWAP3"
    },
    "4863": {
      "op": "SWAP5"
    },
    "4864": {
      "op": "POP"
    },
    "4865": {
      "op": "POP"
    },
    "4866": {
      "op": "POP"
    },
    "4867": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4869": {
      "op": "SWAP2"
    },
    "4870": {
      "op": "SWAP1"
    },
    "4871": {
      "op": "SWAP2"
    },
    "4872": {
      "op": "ADD"
    },
    "4873": {
      "op": "CALLDATALOAD"
    },
    "4874": {
      "op": "SWAP1"
    },
    "4875": {
      "jump": "o",
      "op": "JUMP"
    },
    "4876": {
      "op": "JUMPDEST"
    },
    "4877": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4882": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4884": {
      "op": "SHL"
    },
    "4885": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4887": {
      "op": "MSTORE"
    },
    "4888": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "4890": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4892": {
      "op": "MSTORE"
    },
    "4893": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4895": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4897": {
      "op": "REVERT"
    },
    "4898": {
      "op": "JUMPDEST"
    },
    "4899": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4901": {
      "op": "DUP3"
    },
    "4902": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4904": {
      "op": "DUP4"
    },
    "4905": {
      "op": "ADD"
    },
    "4906": {
      "op": "SLT"
    },
    "4907": {
      "op": "PUSH2",
      "value": "0x1333"
    },
    "4910": {
      "op": "JUMPI"
    },
    "4911": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4913": {
      "op": "DUP1"
    },
    "4914": {
      "op": "REVERT"
    },
    "4915": {
      "op": "JUMPDEST"
    },
    "4916": {
      "op": "DUP2"
    },
    "4917": {
      "op": "CALLDATALOAD"
    },
    "4918": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4927": {
      "op": "DUP1"
    },
    "4928": {
      "op": "DUP3"
    },
    "4929": {
      "op": "GT"
    },
    "4930": {
      "op": "ISZERO"
    },
    "4931": {
      "op": "PUSH2",
      "value": "0x134E"
    },
    "4934": {
      "op": "JUMPI"
    },
    "4935": {
      "op": "PUSH2",
      "value": "0x134E"
    },
    "4938": {
      "op": "PUSH2",
      "value": "0x130C"
    },
    "4941": {
      "jump": "i",
      "op": "JUMP"
    },
    "4942": {
      "op": "JUMPDEST"
    },
    "4943": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4945": {
      "op": "MLOAD"
    },
    "4946": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4948": {
      "op": "DUP4"
    },
    "4949": {
      "op": "ADD"
    },
    "4950": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4952": {
      "op": "NOT"
    },
    "4953": {
      "op": "SWAP1"
    },
    "4954": {
      "op": "DUP2"
    },
    "4955": {
      "op": "AND"
    },
    "4956": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "4958": {
      "op": "ADD"
    },
    "4959": {
      "op": "AND"
    },
    "4960": {
      "op": "DUP2"
    },
    "4961": {
      "op": "ADD"
    },
    "4962": {
      "op": "SWAP1"
    },
    "4963": {
      "op": "DUP3"
    },
    "4964": {
      "op": "DUP3"
    },
    "4965": {
      "op": "GT"
    },
    "4966": {
      "op": "DUP2"
    },
    "4967": {
      "op": "DUP4"
    },
    "4968": {
      "op": "LT"
    },
    "4969": {
      "op": "OR"
    },
    "4970": {
      "op": "ISZERO"
    },
    "4971": {
      "op": "PUSH2",
      "value": "0x1376"
    },
    "4974": {
      "op": "JUMPI"
    },
    "4975": {
      "op": "PUSH2",
      "value": "0x1376"
    },
    "4978": {
      "op": "PUSH2",
      "value": "0x130C"
    },
    "4981": {
      "jump": "i",
      "op": "JUMP"
    },
    "4982": {
      "op": "JUMPDEST"
    },
    "4983": {
      "op": "DUP2"
    },
    "4984": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4986": {
      "op": "MSTORE"
    },
    "4987": {
      "op": "DUP4"
    },
    "4988": {
      "op": "DUP2"
    },
    "4989": {
      "op": "MSTORE"
    },
    "4990": {
      "op": "DUP7"
    },
    "4991": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4993": {
      "op": "DUP6"
    },
    "4994": {
      "op": "DUP9"
    },
    "4995": {
      "op": "ADD"
    },
    "4996": {
      "op": "ADD"
    },
    "4997": {
      "op": "GT"
    },
    "4998": {
      "op": "ISZERO"
    },
    "4999": {
      "op": "PUSH2",
      "value": "0x138F"
    },
    "5002": {
      "op": "JUMPI"
    },
    "5003": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5005": {
      "op": "DUP1"
    },
    "5006": {
      "op": "REVERT"
    },
    "5007": {
      "op": "JUMPDEST"
    },
    "5008": {
      "op": "DUP4"
    },
    "5009": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5011": {
      "op": "DUP8"
    },
    "5012": {
      "op": "ADD"
    },
    "5013": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5015": {
      "op": "DUP4"
    },
    "5016": {
      "op": "ADD"
    },
    "5017": {
      "op": "CALLDATACOPY"
    },
    "5018": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5020": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5022": {
      "op": "DUP6"
    },
    "5023": {
      "op": "DUP4"
    },
    "5024": {
      "op": "ADD"
    },
    "5025": {
      "op": "ADD"
    },
    "5026": {
      "op": "MSTORE"
    },
    "5027": {
      "op": "DUP1"
    },
    "5028": {
      "op": "SWAP5"
    },
    "5029": {
      "op": "POP"
    },
    "5030": {
      "op": "POP"
    },
    "5031": {
      "op": "POP"
    },
    "5032": {
      "op": "POP"
    },
    "5033": {
      "op": "POP"
    },
    "5034": {
      "op": "SWAP3"
    },
    "5035": {
      "op": "SWAP2"
    },
    "5036": {
      "op": "POP"
    },
    "5037": {
      "op": "POP"
    },
    "5038": {
      "jump": "o",
      "op": "JUMP"
    },
    "5039": {
      "op": "JUMPDEST"
    },
    "5040": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5042": {
      "op": "DUP1"
    },
    "5043": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5045": {
      "op": "DUP1"
    },
    "5046": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5048": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5050": {
      "op": "DUP7"
    },
    "5051": {
      "op": "DUP9"
    },
    "5052": {
      "op": "SUB"
    },
    "5053": {
      "op": "SLT"
    },
    "5054": {
      "op": "ISZERO"
    },
    "5055": {
      "op": "PUSH2",
      "value": "0x13C7"
    },
    "5058": {
      "op": "JUMPI"
    },
    "5059": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5061": {
      "op": "DUP1"
    },
    "5062": {
      "op": "REVERT"
    },
    "5063": {
      "op": "JUMPDEST"
    },
    "5064": {
      "op": "DUP6"
    },
    "5065": {
      "op": "CALLDATALOAD"
    },
    "5066": {
      "op": "PUSH2",
      "value": "0x13D2"
    },
    "5069": {
      "op": "DUP2"
    },
    "5070": {
      "op": "PUSH2",
      "value": "0x1287"
    },
    "5073": {
      "jump": "i",
      "op": "JUMP"
    },
    "5074": {
      "op": "JUMPDEST"
    },
    "5075": {
      "op": "SWAP5"
    },
    "5076": {
      "op": "POP"
    },
    "5077": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5079": {
      "op": "DUP7"
    },
    "5080": {
      "op": "ADD"
    },
    "5081": {
      "op": "CALLDATALOAD"
    },
    "5082": {
      "op": "PUSH2",
      "value": "0x13E2"
    },
    "5085": {
      "op": "DUP2"
    },
    "5086": {
      "op": "PUSH2",
      "value": "0x1287"
    },
    "5089": {
      "jump": "i",
      "op": "JUMP"
    },
    "5090": {
      "op": "JUMPDEST"
    },
    "5091": {
      "op": "SWAP4"
    },
    "5092": {
      "op": "POP"
    },
    "5093": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5095": {
      "op": "DUP7"
    },
    "5096": {
      "op": "ADD"
    },
    "5097": {
      "op": "CALLDATALOAD"
    },
    "5098": {
      "op": "SWAP3"
    },
    "5099": {
      "op": "POP"
    },
    "5100": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5102": {
      "op": "DUP7"
    },
    "5103": {
      "op": "ADD"
    },
    "5104": {
      "op": "CALLDATALOAD"
    },
    "5105": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5114": {
      "op": "DUP1"
    },
    "5115": {
      "op": "DUP3"
    },
    "5116": {
      "op": "GT"
    },
    "5117": {
      "op": "ISZERO"
    },
    "5118": {
      "op": "PUSH2",
      "value": "0x1406"
    },
    "5121": {
      "op": "JUMPI"
    },
    "5122": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5124": {
      "op": "DUP1"
    },
    "5125": {
      "op": "REVERT"
    },
    "5126": {
      "op": "JUMPDEST"
    },
    "5127": {
      "op": "PUSH2",
      "value": "0x1412"
    },
    "5130": {
      "op": "DUP10"
    },
    "5131": {
      "op": "DUP4"
    },
    "5132": {
      "op": "DUP11"
    },
    "5133": {
      "op": "ADD"
    },
    "5134": {
      "op": "PUSH2",
      "value": "0x1322"
    },
    "5137": {
      "jump": "i",
      "op": "JUMP"
    },
    "5138": {
      "op": "JUMPDEST"
    },
    "5139": {
      "op": "SWAP4"
    },
    "5140": {
      "op": "POP"
    },
    "5141": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5143": {
      "op": "DUP9"
    },
    "5144": {
      "op": "ADD"
    },
    "5145": {
      "op": "CALLDATALOAD"
    },
    "5146": {
      "op": "SWAP2"
    },
    "5147": {
      "op": "POP"
    },
    "5148": {
      "op": "DUP1"
    },
    "5149": {
      "op": "DUP3"
    },
    "5150": {
      "op": "GT"
    },
    "5151": {
      "op": "ISZERO"
    },
    "5152": {
      "op": "PUSH2",
      "value": "0x1428"
    },
    "5155": {
      "op": "JUMPI"
    },
    "5156": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5158": {
      "op": "DUP1"
    },
    "5159": {
      "op": "REVERT"
    },
    "5160": {
      "op": "JUMPDEST"
    },
    "5161": {
      "op": "POP"
    },
    "5162": {
      "op": "PUSH2",
      "value": "0x1435"
    },
    "5165": {
      "op": "DUP9"
    },
    "5166": {
      "op": "DUP3"
    },
    "5167": {
      "op": "DUP10"
    },
    "5168": {
      "op": "ADD"
    },
    "5169": {
      "op": "PUSH2",
      "value": "0x1322"
    },
    "5172": {
      "jump": "i",
      "op": "JUMP"
    },
    "5173": {
      "op": "JUMPDEST"
    },
    "5174": {
      "op": "SWAP2"
    },
    "5175": {
      "op": "POP"
    },
    "5176": {
      "op": "POP"
    },
    "5177": {
      "op": "SWAP3"
    },
    "5178": {
      "op": "SWAP6"
    },
    "5179": {
      "op": "POP"
    },
    "5180": {
      "op": "SWAP3"
    },
    "5181": {
      "op": "SWAP6"
    },
    "5182": {
      "op": "SWAP1"
    },
    "5183": {
      "op": "SWAP4"
    },
    "5184": {
      "op": "POP"
    },
    "5185": {
      "jump": "o",
      "op": "JUMP"
    },
    "5186": {
      "op": "JUMPDEST"
    },
    "5187": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5189": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5191": {
      "op": "DUP3"
    },
    "5192": {
      "op": "DUP5"
    },
    "5193": {
      "op": "SUB"
    },
    "5194": {
      "op": "SLT"
    },
    "5195": {
      "op": "ISZERO"
    },
    "5196": {
      "op": "PUSH2",
      "value": "0x1454"
    },
    "5199": {
      "op": "JUMPI"
    },
    "5200": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5202": {
      "op": "DUP1"
    },
    "5203": {
      "op": "REVERT"
    },
    "5204": {
      "op": "JUMPDEST"
    },
    "5205": {
      "op": "DUP2"
    },
    "5206": {
      "op": "CALLDATALOAD"
    },
    "5207": {
      "op": "PUSH2",
      "value": "0x857"
    },
    "5210": {
      "op": "DUP2"
    },
    "5211": {
      "op": "PUSH2",
      "value": "0x1287"
    },
    "5214": {
      "jump": "i",
      "op": "JUMP"
    },
    "5215": {
      "op": "JUMPDEST"
    },
    "5216": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5218": {
      "op": "DUP1"
    },
    "5219": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5221": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5223": {
      "op": "DUP5"
    },
    "5224": {
      "op": "DUP7"
    },
    "5225": {
      "op": "SUB"
    },
    "5226": {
      "op": "SLT"
    },
    "5227": {
      "op": "ISZERO"
    },
    "5228": {
      "op": "PUSH2",
      "value": "0x1474"
    },
    "5231": {
      "op": "JUMPI"
    },
    "5232": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5234": {
      "op": "DUP1"
    },
    "5235": {
      "op": "REVERT"
    },
    "5236": {
      "op": "JUMPDEST"
    },
    "5237": {
      "op": "DUP4"
    },
    "5238": {
      "op": "CALLDATALOAD"
    },
    "5239": {
      "op": "PUSH2",
      "value": "0x147F"
    },
    "5242": {
      "op": "DUP2"
    },
    "5243": {
      "op": "PUSH2",
      "value": "0x1287"
    },
    "5246": {
      "jump": "i",
      "op": "JUMP"
    },
    "5247": {
      "op": "JUMPDEST"
    },
    "5248": {
      "op": "SWAP3"
    },
    "5249": {
      "op": "POP"
    },
    "5250": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5252": {
      "op": "DUP5"
    },
    "5253": {
      "op": "ADD"
    },
    "5254": {
      "op": "CALLDATALOAD"
    },
    "5255": {
      "op": "SWAP2"
    },
    "5256": {
      "op": "POP"
    },
    "5257": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5259": {
      "op": "DUP5"
    },
    "5260": {
      "op": "ADD"
    },
    "5261": {
      "op": "CALLDATALOAD"
    },
    "5262": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5271": {
      "op": "DUP2"
    },
    "5272": {
      "op": "GT"
    },
    "5273": {
      "op": "ISZERO"
    },
    "5274": {
      "op": "PUSH2",
      "value": "0x14A2"
    },
    "5277": {
      "op": "JUMPI"
    },
    "5278": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5280": {
      "op": "DUP1"
    },
    "5281": {
      "op": "REVERT"
    },
    "5282": {
      "op": "JUMPDEST"
    },
    "5283": {
      "op": "PUSH2",
      "value": "0x14AE"
    },
    "5286": {
      "op": "DUP7"
    },
    "5287": {
      "op": "DUP3"
    },
    "5288": {
      "op": "DUP8"
    },
    "5289": {
      "op": "ADD"
    },
    "5290": {
      "op": "PUSH2",
      "value": "0x1322"
    },
    "5293": {
      "jump": "i",
      "op": "JUMP"
    },
    "5294": {
      "op": "JUMPDEST"
    },
    "5295": {
      "op": "SWAP2"
    },
    "5296": {
      "op": "POP"
    },
    "5297": {
      "op": "POP"
    },
    "5298": {
      "op": "SWAP3"
    },
    "5299": {
      "op": "POP"
    },
    "5300": {
      "op": "SWAP3"
    },
    "5301": {
      "op": "POP"
    },
    "5302": {
      "op": "SWAP3"
    },
    "5303": {
      "jump": "o",
      "op": "JUMP"
    },
    "5304": {
      "op": "JUMPDEST"
    },
    "5305": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5307": {
      "op": "DUP1"
    },
    "5308": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5310": {
      "op": "DUP4"
    },
    "5311": {
      "op": "DUP6"
    },
    "5312": {
      "op": "SUB"
    },
    "5313": {
      "op": "SLT"
    },
    "5314": {
      "op": "ISZERO"
    },
    "5315": {
      "op": "PUSH2",
      "value": "0x14CB"
    },
    "5318": {
      "op": "JUMPI"
    },
    "5319": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5321": {
      "op": "DUP1"
    },
    "5322": {
      "op": "REVERT"
    },
    "5323": {
      "op": "JUMPDEST"
    },
    "5324": {
      "op": "DUP3"
    },
    "5325": {
      "op": "CALLDATALOAD"
    },
    "5326": {
      "op": "PUSH2",
      "value": "0x14D6"
    },
    "5329": {
      "op": "DUP2"
    },
    "5330": {
      "op": "PUSH2",
      "value": "0x1287"
    },
    "5333": {
      "jump": "i",
      "op": "JUMP"
    },
    "5334": {
      "op": "JUMPDEST"
    },
    "5335": {
      "op": "SWAP2"
    },
    "5336": {
      "op": "POP"
    },
    "5337": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5339": {
      "op": "DUP4"
    },
    "5340": {
      "op": "ADD"
    },
    "5341": {
      "op": "CALLDATALOAD"
    },
    "5342": {
      "op": "PUSH2",
      "value": "0x14E6"
    },
    "5345": {
      "op": "DUP2"
    },
    "5346": {
      "op": "PUSH2",
      "value": "0x1287"
    },
    "5349": {
      "jump": "i",
      "op": "JUMP"
    },
    "5350": {
      "op": "JUMPDEST"
    },
    "5351": {
      "op": "DUP1"
    },
    "5352": {
      "op": "SWAP2"
    },
    "5353": {
      "op": "POP"
    },
    "5354": {
      "op": "POP"
    },
    "5355": {
      "op": "SWAP3"
    },
    "5356": {
      "op": "POP"
    },
    "5357": {
      "op": "SWAP3"
    },
    "5358": {
      "op": "SWAP1"
    },
    "5359": {
      "op": "POP"
    },
    "5360": {
      "jump": "o",
      "op": "JUMP"
    },
    "5361": {
      "op": "JUMPDEST"
    },
    "5362": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5364": {
      "op": "DUP1"
    },
    "5365": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5367": {
      "op": "DUP1"
    },
    "5368": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5370": {
      "op": "DUP6"
    },
    "5371": {
      "op": "DUP8"
    },
    "5372": {
      "op": "SUB"
    },
    "5373": {
      "op": "SLT"
    },
    "5374": {
      "op": "ISZERO"
    },
    "5375": {
      "op": "PUSH2",
      "value": "0x1507"
    },
    "5378": {
      "op": "JUMPI"
    },
    "5379": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5381": {
      "op": "DUP1"
    },
    "5382": {
      "op": "REVERT"
    },
    "5383": {
      "op": "JUMPDEST"
    },
    "5384": {
      "op": "DUP5"
    },
    "5385": {
      "op": "CALLDATALOAD"
    },
    "5386": {
      "op": "PUSH2",
      "value": "0x1512"
    },
    "5389": {
      "op": "DUP2"
    },
    "5390": {
      "op": "PUSH2",
      "value": "0x1287"
    },
    "5393": {
      "jump": "i",
      "op": "JUMP"
    },
    "5394": {
      "op": "JUMPDEST"
    },
    "5395": {
      "op": "SWAP4"
    },
    "5396": {
      "op": "POP"
    },
    "5397": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5399": {
      "op": "DUP6"
    },
    "5400": {
      "op": "ADD"
    },
    "5401": {
      "op": "CALLDATALOAD"
    },
    "5402": {
      "op": "SWAP3"
    },
    "5403": {
      "op": "POP"
    },
    "5404": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5406": {
      "op": "DUP6"
    },
    "5407": {
      "op": "ADD"
    },
    "5408": {
      "op": "CALLDATALOAD"
    },
    "5409": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5418": {
      "op": "DUP1"
    },
    "5419": {
      "op": "DUP3"
    },
    "5420": {
      "op": "GT"
    },
    "5421": {
      "op": "ISZERO"
    },
    "5422": {
      "op": "PUSH2",
      "value": "0x1536"
    },
    "5425": {
      "op": "JUMPI"
    },
    "5426": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5428": {
      "op": "DUP1"
    },
    "5429": {
      "op": "REVERT"
    },
    "5430": {
      "op": "JUMPDEST"
    },
    "5431": {
      "op": "PUSH2",
      "value": "0x1542"
    },
    "5434": {
      "op": "DUP9"
    },
    "5435": {
      "op": "DUP4"
    },
    "5436": {
      "op": "DUP10"
    },
    "5437": {
      "op": "ADD"
    },
    "5438": {
      "op": "PUSH2",
      "value": "0x1322"
    },
    "5441": {
      "jump": "i",
      "op": "JUMP"
    },
    "5442": {
      "op": "JUMPDEST"
    },
    "5443": {
      "op": "SWAP4"
    },
    "5444": {
      "op": "POP"
    },
    "5445": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5447": {
      "op": "DUP8"
    },
    "5448": {
      "op": "ADD"
    },
    "5449": {
      "op": "CALLDATALOAD"
    },
    "5450": {
      "op": "SWAP2"
    },
    "5451": {
      "op": "POP"
    },
    "5452": {
      "op": "DUP1"
    },
    "5453": {
      "op": "DUP3"
    },
    "5454": {
      "op": "GT"
    },
    "5455": {
      "op": "ISZERO"
    },
    "5456": {
      "op": "PUSH2",
      "value": "0x1558"
    },
    "5459": {
      "op": "JUMPI"
    },
    "5460": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5462": {
      "op": "DUP1"
    },
    "5463": {
      "op": "REVERT"
    },
    "5464": {
      "op": "JUMPDEST"
    },
    "5465": {
      "op": "POP"
    },
    "5466": {
      "op": "PUSH2",
      "value": "0x1565"
    },
    "5469": {
      "op": "DUP8"
    },
    "5470": {
      "op": "DUP3"
    },
    "5471": {
      "op": "DUP9"
    },
    "5472": {
      "op": "ADD"
    },
    "5473": {
      "op": "PUSH2",
      "value": "0x1322"
    },
    "5476": {
      "jump": "i",
      "op": "JUMP"
    },
    "5477": {
      "op": "JUMPDEST"
    },
    "5478": {
      "op": "SWAP2"
    },
    "5479": {
      "op": "POP"
    },
    "5480": {
      "op": "POP"
    },
    "5481": {
      "op": "SWAP3"
    },
    "5482": {
      "op": "SWAP6"
    },
    "5483": {
      "op": "SWAP2"
    },
    "5484": {
      "op": "SWAP5"
    },
    "5485": {
      "op": "POP"
    },
    "5486": {
      "op": "SWAP3"
    },
    "5487": {
      "op": "POP"
    },
    "5488": {
      "jump": "o",
      "op": "JUMP"
    },
    "5489": {
      "op": "JUMPDEST"
    },
    "5490": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5492": {
      "op": "DUP1"
    },
    "5493": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5495": {
      "op": "DUP4"
    },
    "5496": {
      "op": "DUP6"
    },
    "5497": {
      "op": "SUB"
    },
    "5498": {
      "op": "SLT"
    },
    "5499": {
      "op": "ISZERO"
    },
    "5500": {
      "op": "PUSH2",
      "value": "0x1584"
    },
    "5503": {
      "op": "JUMPI"
    },
    "5504": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5506": {
      "op": "DUP1"
    },
    "5507": {
      "op": "REVERT"
    },
    "5508": {
      "op": "JUMPDEST"
    },
    "5509": {
      "op": "DUP3"
    },
    "5510": {
      "op": "CALLDATALOAD"
    },
    "5511": {
      "op": "SWAP2"
    },
    "5512": {
      "op": "POP"
    },
    "5513": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5515": {
      "op": "DUP4"
    },
    "5516": {
      "op": "ADD"
    },
    "5517": {
      "op": "CALLDATALOAD"
    },
    "5518": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5527": {
      "op": "DUP2"
    },
    "5528": {
      "op": "GT"
    },
    "5529": {
      "op": "ISZERO"
    },
    "5530": {
      "op": "PUSH2",
      "value": "0x15A2"
    },
    "5533": {
      "op": "JUMPI"
    },
    "5534": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5536": {
      "op": "DUP1"
    },
    "5537": {
      "op": "REVERT"
    },
    "5538": {
      "op": "JUMPDEST"
    },
    "5539": {
      "op": "PUSH2",
      "value": "0x15AE"
    },
    "5542": {
      "op": "DUP6"
    },
    "5543": {
      "op": "DUP3"
    },
    "5544": {
      "op": "DUP7"
    },
    "5545": {
      "op": "ADD"
    },
    "5546": {
      "op": "PUSH2",
      "value": "0x1322"
    },
    "5549": {
      "jump": "i",
      "op": "JUMP"
    },
    "5550": {
      "op": "JUMPDEST"
    },
    "5551": {
      "op": "SWAP2"
    },
    "5552": {
      "op": "POP"
    },
    "5553": {
      "op": "POP"
    },
    "5554": {
      "op": "SWAP3"
    },
    "5555": {
      "op": "POP"
    },
    "5556": {
      "op": "SWAP3"
    },
    "5557": {
      "op": "SWAP1"
    },
    "5558": {
      "op": "POP"
    },
    "5559": {
      "jump": "o",
      "op": "JUMP"
    },
    "5560": {
      "op": "JUMPDEST"
    },
    "5561": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5563": {
      "op": "DUP2"
    },
    "5564": {
      "op": "DUP2"
    },
    "5565": {
      "op": "SHR"
    },
    "5566": {
      "op": "SWAP1"
    },
    "5567": {
      "op": "DUP3"
    },
    "5568": {
      "op": "AND"
    },
    "5569": {
      "op": "DUP1"
    },
    "5570": {
      "op": "PUSH2",
      "value": "0x15CC"
    },
    "5573": {
      "op": "JUMPI"
    },
    "5574": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "5576": {
      "op": "DUP3"
    },
    "5577": {
      "op": "AND"
    },
    "5578": {
      "op": "SWAP2"
    },
    "5579": {
      "op": "POP"
    },
    "5580": {
      "op": "JUMPDEST"
    },
    "5581": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5583": {
      "op": "DUP3"
    },
    "5584": {
      "op": "LT"
    },
    "5585": {
      "op": "DUP2"
    },
    "5586": {
      "op": "SUB"
    },
    "5587": {
      "op": "PUSH2",
      "value": "0x15EC"
    },
    "5590": {
      "op": "JUMPI"
    },
    "5591": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5596": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5598": {
      "op": "SHL"
    },
    "5599": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5601": {
      "op": "MSTORE"
    },
    "5602": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "5604": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5606": {
      "op": "MSTORE"
    },
    "5607": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5609": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5611": {
      "op": "REVERT"
    },
    "5612": {
      "op": "JUMPDEST"
    },
    "5613": {
      "op": "POP"
    },
    "5614": {
      "op": "SWAP2"
    },
    "5615": {
      "op": "SWAP1"
    },
    "5616": {
      "op": "POP"
    },
    "5617": {
      "jump": "o",
      "op": "JUMP"
    },
    "5618": {
      "op": "JUMPDEST"
    },
    "5619": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5621": {
      "op": "DUP1"
    },
    "5622": {
      "op": "DUP3"
    },
    "5623": {
      "op": "MSTORE"
    },
    "5624": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5626": {
      "op": "SWAP1"
    },
    "5627": {
      "op": "DUP3"
    },
    "5628": {
      "op": "ADD"
    },
    "5629": {
      "op": "MSTORE"
    },
    "5630": {
      "op": "PUSH32",
      "value": "0x4552433737373A207472616E7366657220746F20746865207A65726F20616464"
    },
    "5663": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5665": {
      "op": "DUP3"
    },
    "5666": {
      "op": "ADD"
    },
    "5667": {
      "op": "MSTORE"
    },
    "5668": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "5673": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5675": {
      "op": "SHL"
    },
    "5676": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5678": {
      "op": "DUP3"
    },
    "5679": {
      "op": "ADD"
    },
    "5680": {
      "op": "MSTORE"
    },
    "5681": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5683": {
      "op": "ADD"
    },
    "5684": {
      "op": "SWAP1"
    },
    "5685": {
      "jump": "o",
      "op": "JUMP"
    },
    "5686": {
      "op": "JUMPDEST"
    },
    "5687": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5692": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5694": {
      "op": "SHL"
    },
    "5695": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5697": {
      "op": "MSTORE"
    },
    "5698": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "5700": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5702": {
      "op": "MSTORE"
    },
    "5703": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5705": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5707": {
      "op": "REVERT"
    },
    "5708": {
      "op": "JUMPDEST"
    },
    "5709": {
      "op": "DUP2"
    },
    "5710": {
      "op": "DUP2"
    },
    "5711": {
      "op": "SUB"
    },
    "5712": {
      "op": "DUP2"
    },
    "5713": {
      "op": "DUP2"
    },
    "5714": {
      "op": "GT"
    },
    "5715": {
      "op": "ISZERO"
    },
    "5716": {
      "op": "PUSH2",
      "value": "0x3AF"
    },
    "5719": {
      "op": "JUMPI"
    },
    "5720": {
      "op": "PUSH2",
      "value": "0x3AF"
    },
    "5723": {
      "op": "PUSH2",
      "value": "0x1636"
    },
    "5726": {
      "jump": "i",
      "op": "JUMP"
    },
    "5727": {
      "op": "JUMPDEST"
    },
    "5728": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5730": {
      "op": "DUP1"
    },
    "5731": {
      "op": "DUP3"
    },
    "5732": {
      "op": "MSTORE"
    },
    "5733": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "5735": {
      "op": "SWAP1"
    },
    "5736": {
      "op": "DUP3"
    },
    "5737": {
      "op": "ADD"
    },
    "5738": {
      "op": "MSTORE"
    },
    "5739": {
      "op": "PUSH32",
      "value": "0x4552433737373A2063616C6C6572206973206E6F7420616E206F70657261746F"
    },
    "5772": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5774": {
      "op": "DUP3"
    },
    "5775": {
      "op": "ADD"
    },
    "5776": {
      "op": "MSTORE"
    },
    "5777": {
      "op": "PUSH12",
      "value": "0x39103337B9103437B63232B9"
    },
    "5790": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "5792": {
      "op": "SHL"
    },
    "5793": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5795": {
      "op": "DUP3"
    },
    "5796": {
      "op": "ADD"
    },
    "5797": {
      "op": "MSTORE"
    },
    "5798": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5800": {
      "op": "ADD"
    },
    "5801": {
      "op": "SWAP1"
    },
    "5802": {
      "jump": "o",
      "op": "JUMP"
    },
    "5803": {
      "op": "JUMPDEST"
    },
    "5804": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5806": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5808": {
      "op": "DUP3"
    },
    "5809": {
      "op": "DUP5"
    },
    "5810": {
      "op": "SUB"
    },
    "5811": {
      "op": "SLT"
    },
    "5812": {
      "op": "ISZERO"
    },
    "5813": {
      "op": "PUSH2",
      "value": "0x16BD"
    },
    "5816": {
      "op": "JUMPI"
    },
    "5817": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5819": {
      "op": "DUP1"
    },
    "5820": {
      "op": "REVERT"
    },
    "5821": {
      "op": "JUMPDEST"
    },
    "5822": {
      "op": "DUP2"
    },
    "5823": {
      "op": "MLOAD"
    },
    "5824": {
      "op": "PUSH2",
      "value": "0x857"
    },
    "5827": {
      "op": "DUP2"
    },
    "5828": {
      "op": "PUSH2",
      "value": "0x1287"
    },
    "5831": {
      "jump": "i",
      "op": "JUMP"
    },
    "5832": {
      "op": "JUMPDEST"
    },
    "5833": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5837": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5839": {
      "op": "SHL"
    },
    "5840": {
      "op": "SUB"
    },
    "5841": {
      "op": "DUP8"
    },
    "5842": {
      "op": "DUP2"
    },
    "5843": {
      "op": "AND"
    },
    "5844": {
      "op": "DUP3"
    },
    "5845": {
      "op": "MSTORE"
    },
    "5846": {
      "op": "DUP7"
    },
    "5847": {
      "op": "DUP2"
    },
    "5848": {
      "op": "AND"
    },
    "5849": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5851": {
      "op": "DUP4"
    },
    "5852": {
      "op": "ADD"
    },
    "5853": {
      "op": "MSTORE"
    },
    "5854": {
      "op": "DUP6"
    },
    "5855": {
      "op": "AND"
    },
    "5856": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5858": {
      "op": "DUP3"
    },
    "5859": {
      "op": "ADD"
    },
    "5860": {
      "op": "MSTORE"
    },
    "5861": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5863": {
      "op": "DUP2"
    },
    "5864": {
      "op": "ADD"
    },
    "5865": {
      "op": "DUP5"
    },
    "5866": {
      "op": "SWAP1"
    },
    "5867": {
      "op": "MSTORE"
    },
    "5868": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5870": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5872": {
      "op": "DUP3"
    },
    "5873": {
      "op": "ADD"
    },
    "5874": {
      "op": "DUP2"
    },
    "5875": {
      "op": "SWAP1"
    },
    "5876": {
      "op": "MSTORE"
    },
    "5877": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5879": {
      "op": "SWAP1"
    },
    "5880": {
      "op": "PUSH2",
      "value": "0x1703"
    },
    "5883": {
      "op": "SWAP1"
    },
    "5884": {
      "op": "DUP4"
    },
    "5885": {
      "op": "ADD"
    },
    "5886": {
      "op": "DUP6"
    },
    "5887": {
      "op": "PUSH2",
      "value": "0x122E"
    },
    "5890": {
      "jump": "i",
      "op": "JUMP"
    },
    "5891": {
      "op": "JUMPDEST"
    },
    "5892": {
      "op": "DUP3"
    },
    "5893": {
      "op": "DUP2"
    },
    "5894": {
      "op": "SUB"
    },
    "5895": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5897": {
      "op": "DUP5"
    },
    "5898": {
      "op": "ADD"
    },
    "5899": {
      "op": "MSTORE"
    },
    "5900": {
      "op": "PUSH2",
      "value": "0x1715"
    },
    "5903": {
      "op": "DUP2"
    },
    "5904": {
      "op": "DUP6"
    },
    "5905": {
      "op": "PUSH2",
      "value": "0x122E"
    },
    "5908": {
      "jump": "i",
      "op": "JUMP"
    },
    "5909": {
      "op": "JUMPDEST"
    },
    "5910": {
      "op": "SWAP10"
    },
    "5911": {
      "op": "SWAP9"
    },
    "5912": {
      "op": "POP"
    },
    "5913": {
      "op": "POP"
    },
    "5914": {
      "op": "POP"
    },
    "5915": {
      "op": "POP"
    },
    "5916": {
      "op": "POP"
    },
    "5917": {
      "op": "POP"
    },
    "5918": {
      "op": "POP"
    },
    "5919": {
      "op": "POP"
    },
    "5920": {
      "op": "POP"
    },
    "5921": {
      "jump": "o",
      "op": "JUMP"
    },
    "5922": {
      "op": "JUMPDEST"
    },
    "5923": {
      "op": "DUP1"
    },
    "5924": {
      "op": "DUP3"
    },
    "5925": {
      "op": "ADD"
    },
    "5926": {
      "op": "DUP1"
    },
    "5927": {
      "op": "DUP3"
    },
    "5928": {
      "op": "GT"
    },
    "5929": {
      "op": "ISZERO"
    },
    "5930": {
      "op": "PUSH2",
      "value": "0x3AF"
    },
    "5933": {
      "op": "JUMPI"
    },
    "5934": {
      "op": "PUSH2",
      "value": "0x3AF"
    },
    "5937": {
      "op": "PUSH2",
      "value": "0x1636"
    },
    "5940": {
      "jump": "i",
      "op": "JUMP"
    },
    "5941": {
      "op": "JUMPDEST"
    },
    "5942": {
      "op": "DUP4"
    },
    "5943": {
      "op": "DUP2"
    },
    "5944": {
      "op": "MSTORE"
    },
    "5945": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5947": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5949": {
      "op": "DUP3"
    },
    "5950": {
      "op": "ADD"
    },
    "5951": {
      "op": "MSTORE"
    },
    "5952": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5954": {
      "op": "PUSH2",
      "value": "0x174E"
    },
    "5957": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5959": {
      "op": "DUP4"
    },
    "5960": {
      "op": "ADD"
    },
    "5961": {
      "op": "DUP6"
    },
    "5962": {
      "op": "PUSH2",
      "value": "0x122E"
    },
    "5965": {
      "jump": "i",
      "op": "JUMP"
    },
    "5966": {
      "op": "JUMPDEST"
    },
    "5967": {
      "op": "DUP3"
    },
    "5968": {
      "op": "DUP2"
    },
    "5969": {
      "op": "SUB"
    },
    "5970": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5972": {
      "op": "DUP5"
    },
    "5973": {
      "op": "ADD"
    },
    "5974": {
      "op": "MSTORE"
    },
    "5975": {
      "op": "PUSH2",
      "value": "0x1760"
    },
    "5978": {
      "op": "DUP2"
    },
    "5979": {
      "op": "DUP6"
    },
    "5980": {
      "op": "PUSH2",
      "value": "0x122E"
    },
    "5983": {
      "jump": "i",
      "op": "JUMP"
    },
    "5984": {
      "op": "JUMPDEST"
    },
    "5985": {
      "op": "SWAP7"
    },
    "5986": {
      "op": "SWAP6"
    },
    "5987": {
      "op": "POP"
    },
    "5988": {
      "op": "POP"
    },
    "5989": {
      "op": "POP"
    },
    "5990": {
      "op": "POP"
    },
    "5991": {
      "op": "POP"
    },
    "5992": {
      "op": "POP"
    },
    "5993": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "35f29b19c76c0f8b29e709dc46a5ac3167355b69",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC777/ERC777.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC777.sol\";\nimport \"./IERC777Recipient.sol\";\nimport \"./IERC777Sender.sol\";\nimport \"../ERC20/IERC20.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/introspection/IERC1820Registry.sol\";\n\n/**\n * @dev Implementation of the {IERC777} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * Support for ERC20 is included in this contract, as specified by the EIP: both\n * the ERC777 and ERC20 interfaces can be safely used when interacting with it.\n * Both {IERC777-Sent} and {IERC20-Transfer} events are emitted on token\n * movements.\n *\n * Additionally, the {IERC777-granularity} value is hard-coded to `1`, meaning that there\n * are no special restrictions in the amount of tokens that created, moved, or\n * destroyed. This makes integration with ERC20 applications seamless.\n */\ncontract ERC777 is Context, IERC777, IERC20 {\n    using Address for address;\n\n    IERC1820Registry internal constant _ERC1820_REGISTRY = IERC1820Registry(0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24);\n\n    mapping(address => uint256) private _balances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    bytes32 private constant _TOKENS_SENDER_INTERFACE_HASH = keccak256(\"ERC777TokensSender\");\n    bytes32 private constant _TOKENS_RECIPIENT_INTERFACE_HASH = keccak256(\"ERC777TokensRecipient\");\n\n    // This isn't ever read from - it's only used to respond to the defaultOperators query.\n    address[] private _defaultOperatorsArray;\n\n    // Immutable, but accounts may revoke them (tracked in __revokedDefaultOperators).\n    mapping(address => bool) private _defaultOperators;\n\n    // For each account, a mapping of its operators and revoked default operators.\n    mapping(address => mapping(address => bool)) private _operators;\n    mapping(address => mapping(address => bool)) private _revokedDefaultOperators;\n\n    // ERC20-allowances\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    /**\n     * @dev `defaultOperators` may be an empty array.\n     */\n    constructor(\n        string memory name_,\n        string memory symbol_,\n        address[] memory defaultOperators_\n    ) {\n        _name = name_;\n        _symbol = symbol_;\n\n        _defaultOperatorsArray = defaultOperators_;\n        for (uint256 i = 0; i < defaultOperators_.length; i++) {\n            _defaultOperators[defaultOperators_[i]] = true;\n        }\n\n        // register interfaces\n        _ERC1820_REGISTRY.setInterfaceImplementer(address(this), keccak256(\"ERC777Token\"), address(this));\n        _ERC1820_REGISTRY.setInterfaceImplementer(address(this), keccak256(\"ERC20Token\"), address(this));\n    }\n\n    /**\n     * @dev See {IERC777-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC777-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {ERC20-decimals}.\n     *\n     * Always returns 18, as per the\n     * [ERC777 EIP](https://eips.ethereum.org/EIPS/eip-777#backward-compatibility).\n     */\n    function decimals() public pure virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC777-granularity}.\n     *\n     * This implementation always returns `1`.\n     */\n    function granularity() public view virtual override returns (uint256) {\n        return 1;\n    }\n\n    /**\n     * @dev See {IERC777-totalSupply}.\n     */\n    function totalSupply() public view virtual override(IERC20, IERC777) returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev Returns the amount of tokens owned by an account (`tokenHolder`).\n     */\n    function balanceOf(address tokenHolder) public view virtual override(IERC20, IERC777) returns (uint256) {\n        return _balances[tokenHolder];\n    }\n\n    /**\n     * @dev See {IERC777-send}.\n     *\n     * Also emits a {IERC20-Transfer} event for ERC20 compatibility.\n     */\n    function send(\n        address recipient,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        _send(_msgSender(), recipient, amount, data, \"\", true);\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Unlike `send`, `recipient` is _not_ required to implement the {IERC777Recipient}\n     * interface if it is a contract.\n     *\n     * Also emits a {Sent} event.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        require(recipient != address(0), \"ERC777: transfer to the zero address\");\n\n        address from = _msgSender();\n\n        _callTokensToSend(from, from, recipient, amount, \"\", \"\");\n\n        _move(from, from, recipient, amount, \"\", \"\");\n\n        _callTokensReceived(from, from, recipient, amount, \"\", \"\", false);\n\n        return true;\n    }\n\n    /**\n     * @dev See {IERC777-burn}.\n     *\n     * Also emits a {IERC20-Transfer} event for ERC20 compatibility.\n     */\n    function burn(uint256 amount, bytes memory data) public virtual override {\n        _burn(_msgSender(), amount, data, \"\");\n    }\n\n    /**\n     * @dev See {IERC777-isOperatorFor}.\n     */\n    function isOperatorFor(address operator, address tokenHolder) public view virtual override returns (bool) {\n        return\n            operator == tokenHolder ||\n            (_defaultOperators[operator] && !_revokedDefaultOperators[tokenHolder][operator]) ||\n            _operators[tokenHolder][operator];\n    }\n\n    /**\n     * @dev See {IERC777-authorizeOperator}.\n     */\n    function authorizeOperator(address operator) public virtual override {\n        require(_msgSender() != operator, \"ERC777: authorizing self as operator\");\n\n        if (_defaultOperators[operator]) {\n            delete _revokedDefaultOperators[_msgSender()][operator];\n        } else {\n            _operators[_msgSender()][operator] = true;\n        }\n\n        emit AuthorizedOperator(operator, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC777-revokeOperator}.\n     */\n    function revokeOperator(address operator) public virtual override {\n        require(operator != _msgSender(), \"ERC777: revoking self as operator\");\n\n        if (_defaultOperators[operator]) {\n            _revokedDefaultOperators[_msgSender()][operator] = true;\n        } else {\n            delete _operators[_msgSender()][operator];\n        }\n\n        emit RevokedOperator(operator, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC777-defaultOperators}.\n     */\n    function defaultOperators() public view virtual override returns (address[] memory) {\n        return _defaultOperatorsArray;\n    }\n\n    /**\n     * @dev See {IERC777-operatorSend}.\n     *\n     * Emits {Sent} and {IERC20-Transfer} events.\n     */\n    function operatorSend(\n        address sender,\n        address recipient,\n        uint256 amount,\n        bytes memory data,\n        bytes memory operatorData\n    ) public virtual override {\n        require(isOperatorFor(_msgSender(), sender), \"ERC777: caller is not an operator for holder\");\n        _send(sender, recipient, amount, data, operatorData, true);\n    }\n\n    /**\n     * @dev See {IERC777-operatorBurn}.\n     *\n     * Emits {Burned} and {IERC20-Transfer} events.\n     */\n    function operatorBurn(\n        address account,\n        uint256 amount,\n        bytes memory data,\n        bytes memory operatorData\n    ) public virtual override {\n        require(isOperatorFor(_msgSender(), account), \"ERC777: caller is not an operator for holder\");\n        _burn(account, amount, data, operatorData);\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     *\n     * Note that operator and allowance concepts are orthogonal: operators may\n     * not have allowance, and accounts with allowance may not be operators\n     * themselves.\n     */\n    function allowance(address holder, address spender) public view virtual override returns (uint256) {\n        return _allowances[holder][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Note that accounts cannot have allowance issued by their operators.\n     */\n    function approve(address spender, uint256 value) public virtual override returns (bool) {\n        address holder = _msgSender();\n        _approve(holder, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Note that operator and allowance concepts are orthogonal: operators cannot\n     * call `transferFrom` (unless they have allowance), and accounts with\n     * allowance cannot call `operatorSend` (unless they are operators).\n     *\n     * Emits {Sent}, {IERC20-Transfer} and {IERC20-Approval} events.\n     */\n    function transferFrom(\n        address holder,\n        address recipient,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        require(recipient != address(0), \"ERC777: transfer to the zero address\");\n        require(holder != address(0), \"ERC777: transfer from the zero address\");\n\n        address spender = _msgSender();\n\n        _callTokensToSend(spender, holder, recipient, amount, \"\", \"\");\n\n        uint256 currentAllowance = _allowances[holder][spender];\n        require(currentAllowance >= amount, \"ERC777: transfer amount exceeds allowance\");\n        _approve(holder, spender, currentAllowance - amount);\n\n        _move(spender, holder, recipient, amount, \"\", \"\");\n\n        _callTokensReceived(spender, holder, recipient, amount, \"\", \"\", false);\n\n        return true;\n    }\n\n    /**\n     * @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * If a send hook is registered for `account`, the corresponding function\n     * will be called with `operator`, `data` and `operatorData`.\n     *\n     * See {IERC777Sender} and {IERC777Recipient}.\n     *\n     * Emits {Minted} and {IERC20-Transfer} events.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - if `account` is a contract, it must implement the {IERC777Recipient}\n     * interface.\n     */\n    function _mint(\n        address account,\n        uint256 amount,\n        bytes memory userData,\n        bytes memory operatorData\n    ) internal virtual {\n        _mint(account, amount, userData, operatorData, true);\n    }\n\n    /**\n     * @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * If `requireReceptionAck` is set to true, and if a send hook is\n     * registered for `account`, the corresponding function will be called with\n     * `operator`, `data` and `operatorData`.\n     *\n     * See {IERC777Sender} and {IERC777Recipient}.\n     *\n     * Emits {Minted} and {IERC20-Transfer} events.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - if `account` is a contract, it must implement the {IERC777Recipient}\n     * interface.\n     */\n    function _mint(\n        address account,\n        uint256 amount,\n        bytes memory userData,\n        bytes memory operatorData,\n        bool requireReceptionAck\n    ) internal virtual {\n        require(account != address(0), \"ERC777: mint to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), account, amount);\n\n        // Update state variables\n        _totalSupply += amount;\n        _balances[account] += amount;\n\n        _callTokensReceived(operator, address(0), account, amount, userData, operatorData, requireReceptionAck);\n\n        emit Minted(operator, account, amount, userData, operatorData);\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Send tokens\n     * @param from address token holder address\n     * @param to address recipient address\n     * @param amount uint256 amount of tokens to transfer\n     * @param userData bytes extra information provided by the token holder (if any)\n     * @param operatorData bytes extra information provided by the operator (if any)\n     * @param requireReceptionAck if true, contract recipients are required to implement ERC777TokensRecipient\n     */\n    function _send(\n        address from,\n        address to,\n        uint256 amount,\n        bytes memory userData,\n        bytes memory operatorData,\n        bool requireReceptionAck\n    ) internal virtual {\n        require(from != address(0), \"ERC777: send from the zero address\");\n        require(to != address(0), \"ERC777: send to the zero address\");\n\n        address operator = _msgSender();\n\n        _callTokensToSend(operator, from, to, amount, userData, operatorData);\n\n        _move(operator, from, to, amount, userData, operatorData);\n\n        _callTokensReceived(operator, from, to, amount, userData, operatorData, requireReceptionAck);\n    }\n\n    /**\n     * @dev Burn tokens\n     * @param from address token holder address\n     * @param amount uint256 amount of tokens to burn\n     * @param data bytes extra information provided by the token holder\n     * @param operatorData bytes extra information provided by the operator (if any)\n     */\n    function _burn(\n        address from,\n        uint256 amount,\n        bytes memory data,\n        bytes memory operatorData\n    ) internal virtual {\n        require(from != address(0), \"ERC777: burn from the zero address\");\n\n        address operator = _msgSender();\n\n        _callTokensToSend(operator, from, address(0), amount, data, operatorData);\n\n        _beforeTokenTransfer(operator, from, address(0), amount);\n\n        // Update state variables\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC777: burn amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Burned(operator, from, amount, data, operatorData);\n        emit Transfer(from, address(0), amount);\n    }\n\n    function _move(\n        address operator,\n        address from,\n        address to,\n        uint256 amount,\n        bytes memory userData,\n        bytes memory operatorData\n    ) private {\n        _beforeTokenTransfer(operator, from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC777: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _balances[to] += amount;\n\n        emit Sent(operator, from, to, amount, userData, operatorData);\n        emit Transfer(from, to, amount);\n    }\n\n    /**\n     * @dev See {ERC20-_approve}.\n     *\n     * Note that accounts cannot have allowance issued by their operators.\n     */\n    function _approve(\n        address holder,\n        address spender,\n        uint256 value\n    ) internal {\n        require(holder != address(0), \"ERC777: approve from the zero address\");\n        require(spender != address(0), \"ERC777: approve to the zero address\");\n\n        _allowances[holder][spender] = value;\n        emit Approval(holder, spender, value);\n    }\n\n    /**\n     * @dev Call from.tokensToSend() if the interface is registered\n     * @param operator address operator requesting the transfer\n     * @param from address token holder address\n     * @param to address recipient address\n     * @param amount uint256 amount of tokens to transfer\n     * @param userData bytes extra information provided by the token holder (if any)\n     * @param operatorData bytes extra information provided by the operator (if any)\n     */\n    function _callTokensToSend(\n        address operator,\n        address from,\n        address to,\n        uint256 amount,\n        bytes memory userData,\n        bytes memory operatorData\n    ) private {\n        address implementer = _ERC1820_REGISTRY.getInterfaceImplementer(from, _TOKENS_SENDER_INTERFACE_HASH);\n        if (implementer != address(0)) {\n            IERC777Sender(implementer).tokensToSend(operator, from, to, amount, userData, operatorData);\n        }\n    }\n\n    /**\n     * @dev Call to.tokensReceived() if the interface is registered. Reverts if the recipient is a contract but\n     * tokensReceived() was not registered for the recipient\n     * @param operator address operator requesting the transfer\n     * @param from address token holder address\n     * @param to address recipient address\n     * @param amount uint256 amount of tokens to transfer\n     * @param userData bytes extra information provided by the token holder (if any)\n     * @param operatorData bytes extra information provided by the operator (if any)\n     * @param requireReceptionAck if true, contract recipients are required to implement ERC777TokensRecipient\n     */\n    function _callTokensReceived(\n        address operator,\n        address from,\n        address to,\n        uint256 amount,\n        bytes memory userData,\n        bytes memory operatorData,\n        bool requireReceptionAck\n    ) private {\n        address implementer = _ERC1820_REGISTRY.getInterfaceImplementer(to, _TOKENS_RECIPIENT_INTERFACE_HASH);\n        if (implementer != address(0)) {\n            IERC777Recipient(implementer).tokensReceived(operator, from, to, amount, userData, operatorData);\n        } else if (requireReceptionAck) {\n            require(!to.isContract(), \"ERC777: token recipient contract has no implementer for ERC777TokensRecipient\");\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes\n     * calls to {send}, {transfer}, {operatorSend}, minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be to transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n",
  "sourceMap": "1073:17251:63:-:0;;;2301:612;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2433:5;:13;2441:5;2433;:13;:::i;:::-;-1:-1:-1;2456:7:63;:17;2466:7;2456;:17;:::i;:::-;-1:-1:-1;2484:42:63;;;;:22;;:42;;;;;:::i;:::-;;2541:9;2536:126;2560:17;:24;2556:1;:28;2536:126;;;2647:4;2605:17;:39;2623:17;2641:1;2623:20;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;2605:39:63;;;;;;;;;;;-1:-1:-1;2605:39:63;:46;;-1:-1:-1;;2605:46:63;;;;;;;;;;2586:3;;;;:::i;:::-;;;;2536:126;;;-1:-1:-1;2703:97:63;;-1:-1:-1;;;2703:97:63;;2753:4;2703:97;;;5812:34:102;;;2760:24:63;5862:18:102;;;5855:34;5905:18;;;5898:43;1227:42:63;;2703:41;;5747:18:102;;2703:97:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2810:96:63;;-1:-1:-1;;;2810:96:63;;2860:4;2810:96;;;5812:34:102;;;2867:23:63;5862:18:102;;;5855:34;5905:18;;;5898:43;1227:42:63;;-1:-1:-1;2810:41:63;;-1:-1:-1;5747:18:102;;2810:96:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2301:612;;;1073:17251;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1073:17251:63;-1:-1:-1;;;;;1073:17251:63;;;;;;;;;;;-1:-1:-1;1073:17251:63;;;;;;;-1:-1:-1;1073:17251:63;;;-1:-1:-1;1073:17251:63;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:102;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:275;217:2;211:9;282:2;263:13;;-1:-1:-1;;259:27:102;247:40;;-1:-1:-1;;;;;302:34:102;;338:22;;;299:62;296:88;;;364:18;;:::i;:::-;400:2;393:22;146:275;;-1:-1:-1;146:275:102:o;426:650::-;480:5;533:3;526:4;518:6;514:17;510:27;500:55;;551:1;548;541:12;500:55;574:13;;-1:-1:-1;;;;;599:26:102;;596:52;;;628:18;;:::i;:::-;667:4;695:53;738:2;719:13;;-1:-1:-1;;715:27:102;711:36;;695:53;:::i;:::-;773:2;764:7;757:19;817:3;812:2;807;799:6;795:15;791:24;788:33;785:53;;;834:1;831;824:12;785:53;856:1;866:134;880:2;877:1;874:9;866:134;;;969:14;;;965:23;;959:30;937:15;;;933:24;;926:64;891:10;;866:134;;;-1:-1:-1;1043:1:102;1020:16;;;1016:25;;;1009:36;;;;1024:7;426:650;-1:-1:-1;;;426:650:102:o;1081:1528::-;1214:6;1222;1230;1283:2;1271:9;1262:7;1258:23;1254:32;1251:52;;;1299:1;1296;1289:12;1251:52;1326:16;;-1:-1:-1;;;;;1391:14:102;;;1388:34;;;1418:1;1415;1408:12;1388:34;1441:61;1494:7;1485:6;1474:9;1470:22;1441:61;:::i;:::-;1431:71;;1521:2;1511:12;;1569:2;1558:9;1554:18;1548:25;1598:2;1588:8;1585:16;1582:36;;;1614:1;1611;1604:12;1582:36;1637:63;1692:7;1681:8;1670:9;1666:24;1637:63;:::i;:::-;1627:73;;;1746:2;1735:9;1731:18;1725:25;1775:2;1765:8;1762:16;1759:36;;;1791:1;1788;1781:12;1759:36;1814:24;;1869:4;1861:13;;1857:27;-1:-1:-1;1847:55:102;;1898:1;1895;1888:12;1847:55;1927:2;1921:9;1949:2;1945;1942:10;1939:36;;;1955:18;;:::i;:::-;2001:2;1998:1;1994:10;1984:20;;2024:28;2048:2;2044;2040:11;2024:28;:::i;:::-;2086:15;;;2156:11;;;2152:20;;;2117:12;;;;2184:19;;;2181:39;;;2216:1;2213;2206:12;2181:39;2240:11;;;;2260:319;2276:6;2271:3;2268:15;2260:319;;;2343:10;;;-1:-1:-1;;;;;;2386:31:102;;2376:42;;2366:140;;2460:1;2489:2;2485;2478:14;2366:140;2519:18;;;2293:12;;;;2557;;;;2260:319;;;2598:5;2588:15;;;;;;;;1081:1528;;;;;:::o;2614:380::-;2693:1;2689:12;;;;2736;;;2757:61;;2811:4;2803:6;2799:17;2789:27;;2757:61;2864:2;2856:6;2853:14;2833:18;2830:38;2827:161;;2910:10;2905:3;2901:20;2898:1;2891:31;2945:4;2942:1;2935:15;2973:4;2970:1;2963:15;2827:161;;2614:380;;;:::o;3125:545::-;3227:2;3222:3;3219:11;3216:448;;;3263:1;3288:5;3284:2;3277:17;3333:4;3329:2;3319:19;3403:2;3391:10;3387:19;3384:1;3380:27;3374:4;3370:38;3439:4;3427:10;3424:20;3421:47;;;-1:-1:-1;3462:4:102;3421:47;3517:2;3512:3;3508:12;3505:1;3501:20;3495:4;3491:31;3481:41;;3572:82;3590:2;3583:5;3580:13;3572:82;;;3635:17;;;3616:1;3605:13;3572:82;;;3576:3;;;3216:448;3125:545;;;:::o;3846:1352::-;3966:10;;-1:-1:-1;;;;;3988:30:102;;3985:56;;;4021:18;;:::i;:::-;4050:97;4140:6;4100:38;4132:4;4126:11;4100:38;:::i;:::-;4094:4;4050:97;:::i;:::-;4202:4;;4266:2;4255:14;;4283:1;4278:663;;;;4985:1;5002:6;4999:89;;;-1:-1:-1;5054:19:102;;;5048:26;4999:89;-1:-1:-1;;3803:1:102;3799:11;;;3795:24;3791:29;3781:40;3827:1;3823:11;;;3778:57;5101:81;;4248:944;;4278:663;3072:1;3065:14;;;3109:4;3096:18;;-1:-1:-1;;4314:20:102;;;4432:236;4446:7;4443:1;4440:14;4432:236;;;4535:19;;;4529:26;4514:42;;4627:27;;;;4595:1;4583:14;;;;4462:19;;4432:236;;;4436:3;4696:6;4687:7;4684:19;4681:201;;;4757:19;;;4751:26;-1:-1:-1;;4840:1:102;4836:14;;;4852:3;4832:24;4828:37;4824:42;4809:58;4794:74;;4681:201;-1:-1:-1;;;;;4928:1:102;4912:14;;;4908:22;4895:36;;-1:-1:-1;3846:1352:102:o;5203:127::-;5264:10;5259:3;5255:20;5252:1;5245:31;5295:4;5292:1;5285:15;5319:4;5316:1;5309:15;5335:232;5374:3;5395:17;;;5392:140;;5454:10;5449:3;5445:20;5442:1;5435:31;5489:4;5486:1;5479:15;5517:4;5514:1;5507:15;5392:140;-1:-1:-1;5559:1:102;5548:13;;5335:232::o;5572:375::-;1073:17251:63;;;;;;",
  "sourcePath": "contracts/openzeppelin-solidity/contracts/token/ERC777/ERC777.sol",
  "type": "contract"
}