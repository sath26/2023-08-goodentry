{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "43": "contracts/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
    "44": "contracts/openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
    "53": "contracts/openzeppelin-solidity/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "70": "contracts/openzeppelin-solidity/contracts/utils/Context.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
    "exportedSymbols": {
      "Context": [
        12493
      ],
      "ERC20": [
        5329
      ],
      "IERC20": [
        5407
      ],
      "IERC20Metadata": [
        6892
      ]
    },
    "id": 5330,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4785,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "90:23:43"
      },
      {
        "absolutePath": "contracts/openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "./IERC20.sol",
        "id": 4786,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5330,
        "sourceUnit": 5408,
        "src": "115:22:43",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-solidity/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "file": "./extensions/IERC20Metadata.sol",
        "id": 4787,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5330,
        "sourceUnit": 6893,
        "src": "138:41:43",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-solidity/contracts/utils/Context.sol",
        "file": "../../utils/Context.sol",
        "id": 4788,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5330,
        "sourceUnit": 12494,
        "src": "180:33:43",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4790,
              "name": "Context",
              "nameLocations": [
                "1406:7:43"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12493,
              "src": "1406:7:43"
            },
            "id": 4791,
            "nodeType": "InheritanceSpecifier",
            "src": "1406:7:43"
          },
          {
            "baseName": {
              "id": 4792,
              "name": "IERC20",
              "nameLocations": [
                "1415:6:43"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5407,
              "src": "1415:6:43"
            },
            "id": 4793,
            "nodeType": "InheritanceSpecifier",
            "src": "1415:6:43"
          },
          {
            "baseName": {
              "id": 4794,
              "name": "IERC20Metadata",
              "nameLocations": [
                "1423:14:43"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6892,
              "src": "1423:14:43"
            },
            "id": 4795,
            "nodeType": "InheritanceSpecifier",
            "src": "1423:14:43"
          }
        ],
        "canonicalName": "ERC20",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 4789,
          "nodeType": "StructuredDocumentation",
          "src": "215:1172:43",
          "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
        },
        "fullyImplemented": true,
        "id": 5329,
        "linearizedBaseContracts": [
          5329,
          6892,
          5407,
          12493
        ],
        "name": "ERC20",
        "nameLocation": "1397:5:43",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4799,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "1480:9:43",
            "nodeType": "VariableDeclaration",
            "scope": 5329,
            "src": "1444:45:43",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 4798,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 4796,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1452:7:43",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1444:27:43",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 4797,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1463:7:43",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 4805,
            "mutability": "mutable",
            "name": "_allowances",
            "nameLocation": "1552:11:43",
            "nodeType": "VariableDeclaration",
            "scope": 5329,
            "src": "1496:67:43",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 4804,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 4800,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1504:7:43",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1496:47:43",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 4803,
                "keyName": "",
                "keyNameLocation": "-1:-1:-1",
                "keyType": {
                  "id": 4801,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1523:7:43",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1515:27:43",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueName": "",
                "valueNameLocation": "-1:-1:-1",
                "valueType": {
                  "id": 4802,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1534:7:43",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 4807,
            "mutability": "mutable",
            "name": "_totalSupply",
            "nameLocation": "1586:12:43",
            "nodeType": "VariableDeclaration",
            "scope": 5329,
            "src": "1570:28:43",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4806,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1570:7:43",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 4809,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "1620:5:43",
            "nodeType": "VariableDeclaration",
            "scope": 5329,
            "src": "1605:20:43",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 4808,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1605:6:43",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 4811,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "1646:7:43",
            "nodeType": "VariableDeclaration",
            "scope": 5329,
            "src": "1631:22:43",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 4810,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1631:6:43",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 4827,
              "nodeType": "Block",
              "src": "2019:57:43",
              "statements": [
                {
                  "expression": {
                    "id": 4821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4819,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4809,
                      "src": "2029:5:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4820,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4814,
                      "src": "2037:5:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2029:13:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 4822,
                  "nodeType": "ExpressionStatement",
                  "src": "2029:13:43"
                },
                {
                  "expression": {
                    "id": 4825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4823,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4811,
                      "src": "2052:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4824,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4816,
                      "src": "2062:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2052:17:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 4826,
                  "nodeType": "ExpressionStatement",
                  "src": "2052:17:43"
                }
              ]
            },
            "documentation": {
              "id": 4812,
              "nodeType": "StructuredDocumentation",
              "src": "1660:298:43",
              "text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
            },
            "id": 4828,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4817,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4814,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "1989:5:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 4828,
                  "src": "1975:19:43",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4813,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1975:6:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4816,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "2010:7:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 4828,
                  "src": "1996:21:43",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4815,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1996:6:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1974:44:43"
            },
            "returnParameters": {
              "id": 4818,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2019:0:43"
            },
            "scope": 5329,
            "src": "1963:113:43",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              6879
            ],
            "body": {
              "id": 4837,
              "nodeType": "Block",
              "src": "2210:29:43",
              "statements": [
                {
                  "expression": {
                    "id": 4835,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4809,
                    "src": "2227:5:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 4834,
                  "id": 4836,
                  "nodeType": "Return",
                  "src": "2220:12:43"
                }
              ]
            },
            "documentation": {
              "id": 4829,
              "nodeType": "StructuredDocumentation",
              "src": "2082:54:43",
              "text": " @dev Returns the name of the token."
            },
            "functionSelector": "06fdde03",
            "id": 4838,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "2150:4:43",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4831,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2177:8:43"
            },
            "parameters": {
              "id": 4830,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2154:2:43"
            },
            "returnParameters": {
              "id": 4834,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4833,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4838,
                  "src": "2195:13:43",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4832,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2195:6:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2194:15:43"
            },
            "scope": 5329,
            "src": "2141:98:43",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              6885
            ],
            "body": {
              "id": 4847,
              "nodeType": "Block",
              "src": "2423:31:43",
              "statements": [
                {
                  "expression": {
                    "id": 4845,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4811,
                    "src": "2440:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 4844,
                  "id": 4846,
                  "nodeType": "Return",
                  "src": "2433:14:43"
                }
              ]
            },
            "documentation": {
              "id": 4839,
              "nodeType": "StructuredDocumentation",
              "src": "2245:102:43",
              "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
            },
            "functionSelector": "95d89b41",
            "id": 4848,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "2361:6:43",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4841,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2390:8:43"
            },
            "parameters": {
              "id": 4840,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2367:2:43"
            },
            "returnParameters": {
              "id": 4844,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4843,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4848,
                  "src": "2408:13:43",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4842,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2408:6:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2407:15:43"
            },
            "scope": 5329,
            "src": "2352:102:43",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              6891
            ],
            "body": {
              "id": 4857,
              "nodeType": "Block",
              "src": "3143:26:43",
              "statements": [
                {
                  "expression": {
                    "hexValue": "3138",
                    "id": 4855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3160:2:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  "functionReturnParameters": 4854,
                  "id": 4856,
                  "nodeType": "Return",
                  "src": "3153:9:43"
                }
              ]
            },
            "documentation": {
              "id": 4849,
              "nodeType": "StructuredDocumentation",
              "src": "2460:613:43",
              "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
            },
            "functionSelector": "313ce567",
            "id": 4858,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "3087:8:43",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4851,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3118:8:43"
            },
            "parameters": {
              "id": 4850,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3095:2:43"
            },
            "returnParameters": {
              "id": 4854,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4853,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4858,
                  "src": "3136:5:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 4852,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3136:5:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3135:7:43"
            },
            "scope": 5329,
            "src": "3078:91:43",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5338
            ],
            "body": {
              "id": 4867,
              "nodeType": "Block",
              "src": "3299:36:43",
              "statements": [
                {
                  "expression": {
                    "id": 4865,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4807,
                    "src": "3316:12:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4864,
                  "id": 4866,
                  "nodeType": "Return",
                  "src": "3309:19:43"
                }
              ]
            },
            "documentation": {
              "id": 4859,
              "nodeType": "StructuredDocumentation",
              "src": "3175:49:43",
              "text": " @dev See {IERC20-totalSupply}."
            },
            "functionSelector": "18160ddd",
            "id": 4868,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "3238:11:43",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4861,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3272:8:43"
            },
            "parameters": {
              "id": 4860,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3249:2:43"
            },
            "returnParameters": {
              "id": 4864,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4863,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4868,
                  "src": "3290:7:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4862,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3290:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3289:9:43"
            },
            "scope": 5329,
            "src": "3229:106:43",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5346
            ],
            "body": {
              "id": 4881,
              "nodeType": "Block",
              "src": "3476:42:43",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 4877,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4799,
                      "src": "3493:9:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 4879,
                    "indexExpression": {
                      "id": 4878,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4871,
                      "src": "3503:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3493:18:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4876,
                  "id": 4880,
                  "nodeType": "Return",
                  "src": "3486:25:43"
                }
              ]
            },
            "documentation": {
              "id": 4869,
              "nodeType": "StructuredDocumentation",
              "src": "3341:47:43",
              "text": " @dev See {IERC20-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 4882,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "3402:9:43",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4873,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3449:8:43"
            },
            "parameters": {
              "id": 4872,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4871,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3420:7:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 4882,
                  "src": "3412:15:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4870,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3412:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3411:17:43"
            },
            "returnParameters": {
              "id": 4876,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4875,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4882,
                  "src": "3467:7:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4874,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3467:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3466:9:43"
            },
            "scope": 5329,
            "src": "3393:125:43",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5356
            ],
            "body": {
              "id": 4902,
              "nodeType": "Block",
              "src": "3813:80:43",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 4894,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12483,
                          "src": "3833:10:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 4895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3833:12:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4896,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4885,
                        "src": "3847:9:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4897,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4887,
                        "src": "3858:6:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4893,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5133,
                      "src": "3823:9:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3823:42:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4899,
                  "nodeType": "ExpressionStatement",
                  "src": "3823:42:43"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 4900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3882:4:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 4892,
                  "id": 4901,
                  "nodeType": "Return",
                  "src": "3875:11:43"
                }
              ]
            },
            "documentation": {
              "id": 4883,
              "nodeType": "StructuredDocumentation",
              "src": "3524:192:43",
              "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
            },
            "functionSelector": "a9059cbb",
            "id": 4903,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "3730:8:43",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4889,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3789:8:43"
            },
            "parameters": {
              "id": 4888,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4885,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "3747:9:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 4903,
                  "src": "3739:17:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4884,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3739:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4887,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3766:6:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 4903,
                  "src": "3758:14:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4886,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3758:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3738:35:43"
            },
            "returnParameters": {
              "id": 4892,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4891,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4903,
                  "src": "3807:4:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4890,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3807:4:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3806:6:43"
            },
            "scope": 5329,
            "src": "3721:172:43",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5366
            ],
            "body": {
              "id": 4920,
              "nodeType": "Block",
              "src": "4049:51:43",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 4914,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4805,
                        "src": "4066:11:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 4916,
                      "indexExpression": {
                        "id": 4915,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4906,
                        "src": "4078:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4066:18:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 4918,
                    "indexExpression": {
                      "id": 4917,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4908,
                      "src": "4085:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4066:27:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4913,
                  "id": 4919,
                  "nodeType": "Return",
                  "src": "4059:34:43"
                }
              ]
            },
            "documentation": {
              "id": 4904,
              "nodeType": "StructuredDocumentation",
              "src": "3899:47:43",
              "text": " @dev See {IERC20-allowance}."
            },
            "functionSelector": "dd62ed3e",
            "id": 4921,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "3960:9:43",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4910,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4022:8:43"
            },
            "parameters": {
              "id": 4909,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4906,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "3978:5:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 4921,
                  "src": "3970:13:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4905,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3970:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4908,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "3993:7:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 4921,
                  "src": "3985:15:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4907,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3985:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3969:32:43"
            },
            "returnParameters": {
              "id": 4913,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4912,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4921,
                  "src": "4040:7:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4911,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4040:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4039:9:43"
            },
            "scope": 5329,
            "src": "3951:149:43",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5376
            ],
            "body": {
              "id": 4941,
              "nodeType": "Block",
              "src": "4327:77:43",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 4933,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12483,
                          "src": "4346:10:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 4934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4346:12:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4935,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4924,
                        "src": "4360:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4936,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4926,
                        "src": "4369:6:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4932,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5306,
                      "src": "4337:8:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4337:39:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4938,
                  "nodeType": "ExpressionStatement",
                  "src": "4337:39:43"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 4939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4393:4:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 4931,
                  "id": 4940,
                  "nodeType": "Return",
                  "src": "4386:11:43"
                }
              ]
            },
            "documentation": {
              "id": 4922,
              "nodeType": "StructuredDocumentation",
              "src": "4106:127:43",
              "text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "095ea7b3",
            "id": 4942,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "4247:7:43",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4928,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4303:8:43"
            },
            "parameters": {
              "id": 4927,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4924,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "4263:7:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 4942,
                  "src": "4255:15:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4923,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4255:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4926,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4280:6:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 4942,
                  "src": "4272:14:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4925,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4272:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4254:33:43"
            },
            "returnParameters": {
              "id": 4931,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4930,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4942,
                  "src": "4321:4:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4929,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4321:4:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4320:6:43"
            },
            "scope": 5329,
            "src": "4238:166:43",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5388
            ],
            "body": {
              "id": 4989,
              "nodeType": "Block",
              "src": "5013:336:43",
              "statements": [
                {
                  "assignments": [
                    4956
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4956,
                      "mutability": "mutable",
                      "name": "currentAllowance",
                      "nameLocation": "5031:16:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 4989,
                      "src": "5023:24:43",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4955,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5023:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4963,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 4957,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4805,
                        "src": "5050:11:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 4959,
                      "indexExpression": {
                        "id": 4958,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4945,
                        "src": "5062:6:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5050:19:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 4962,
                    "indexExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 4960,
                        "name": "_msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12483,
                        "src": "5070:10:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 4961,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5070:12:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5050:33:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5023:60:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4965,
                          "name": "currentAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4956,
                          "src": "5101:16:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 4966,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4949,
                          "src": "5121:6:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5101:26:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
                        "id": 4968,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5129:42:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
                        },
                        "value": "ERC20: transfer amount exceeds allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
                        }
                      ],
                      "id": 4964,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5093:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5093:79:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4970,
                  "nodeType": "ExpressionStatement",
                  "src": "5093:79:43"
                },
                {
                  "id": 4980,
                  "nodeType": "UncheckedBlock",
                  "src": "5182:92:43",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 4972,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4945,
                            "src": "5215:6:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 4973,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12483,
                              "src": "5223:10:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 4974,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5223:12:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 4977,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 4975,
                              "name": "currentAllowance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4956,
                              "src": "5237:16:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 4976,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4949,
                              "src": "5256:6:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5237:25:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 4971,
                          "name": "_approve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5306,
                          "src": "5206:8:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 4978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5206:57:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 4979,
                      "nodeType": "ExpressionStatement",
                      "src": "5206:57:43"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4982,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4945,
                        "src": "5294:6:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4983,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4947,
                        "src": "5302:9:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4984,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4949,
                        "src": "5313:6:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4981,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5133,
                      "src": "5284:9:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5284:36:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4986,
                  "nodeType": "ExpressionStatement",
                  "src": "5284:36:43"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 4987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5338:4:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 4954,
                  "id": 4988,
                  "nodeType": "Return",
                  "src": "5331:11:43"
                }
              ]
            },
            "documentation": {
              "id": 4943,
              "nodeType": "StructuredDocumentation",
              "src": "4410:456:43",
              "text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
            },
            "functionSelector": "23b872dd",
            "id": 4990,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "4880:12:43",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4951,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4989:8:43"
            },
            "parameters": {
              "id": 4950,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4945,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "4910:6:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 4990,
                  "src": "4902:14:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4944,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4902:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4947,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "4934:9:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 4990,
                  "src": "4926:17:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4946,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4926:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4949,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4961:6:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 4990,
                  "src": "4953:14:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4948,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4953:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4892:81:43"
            },
            "returnParameters": {
              "id": 4954,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4953,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4990,
                  "src": "5007:4:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4952,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5007:4:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5006:6:43"
            },
            "scope": 5329,
            "src": "4871:478:43",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5016,
              "nodeType": "Block",
              "src": "5838:118:43",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 5001,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12483,
                          "src": "5857:10:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 5002,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5857:12:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5003,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4993,
                        "src": "5871:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 5004,
                              "name": "_allowances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4805,
                              "src": "5880:11:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 5007,
                            "indexExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 5005,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12483,
                                "src": "5892:10:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 5006,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5892:12:43",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5880:25:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 5009,
                          "indexExpression": {
                            "id": 5008,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4993,
                            "src": "5906:7:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5880:34:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 5010,
                          "name": "addedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4995,
                          "src": "5917:10:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5880:47:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5000,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5306,
                      "src": "5848:8:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 5012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5848:80:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5013,
                  "nodeType": "ExpressionStatement",
                  "src": "5848:80:43"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 5014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5945:4:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 4999,
                  "id": 5015,
                  "nodeType": "Return",
                  "src": "5938:11:43"
                }
              ]
            },
            "documentation": {
              "id": 4991,
              "nodeType": "StructuredDocumentation",
              "src": "5355:384:43",
              "text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "39509351",
            "id": 5017,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increaseAllowance",
            "nameLocation": "5753:17:43",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4996,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4993,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "5779:7:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 5017,
                  "src": "5771:15:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4992,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5771:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4995,
                  "mutability": "mutable",
                  "name": "addedValue",
                  "nameLocation": "5796:10:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 5017,
                  "src": "5788:18:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4994,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5788:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5770:37:43"
            },
            "returnParameters": {
              "id": 4999,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4998,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5017,
                  "src": "5832:4:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4997,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5832:4:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5831:6:43"
            },
            "scope": 5329,
            "src": "5744:212:43",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5055,
              "nodeType": "Block",
              "src": "6542:306:43",
              "statements": [
                {
                  "assignments": [
                    5028
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5028,
                      "mutability": "mutable",
                      "name": "currentAllowance",
                      "nameLocation": "6560:16:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 5055,
                      "src": "6552:24:43",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5027,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6552:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5035,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 5029,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4805,
                        "src": "6579:11:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 5032,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 5030,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12483,
                          "src": "6591:10:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 5031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6591:12:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6579:25:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 5034,
                    "indexExpression": {
                      "id": 5033,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5020,
                      "src": "6605:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6579:34:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6552:61:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5037,
                          "name": "currentAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5028,
                          "src": "6631:16:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 5038,
                          "name": "subtractedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5022,
                          "src": "6651:15:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6631:35:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
                        "id": 5040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6668:39:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                          "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                        },
                        "value": "ERC20: decreased allowance below zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                          "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                        }
                      ],
                      "id": 5036,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6623:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6623:85:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5042,
                  "nodeType": "ExpressionStatement",
                  "src": "6623:85:43"
                },
                {
                  "id": 5052,
                  "nodeType": "UncheckedBlock",
                  "src": "6718:102:43",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 5044,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12483,
                              "src": "6751:10:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 5045,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6751:12:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 5046,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5020,
                            "src": "6765:7:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 5049,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 5047,
                              "name": "currentAllowance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5028,
                              "src": "6774:16:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 5048,
                              "name": "subtractedValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5022,
                              "src": "6793:15:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6774:34:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 5043,
                          "name": "_approve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5306,
                          "src": "6742:8:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 5050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6742:67:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 5051,
                      "nodeType": "ExpressionStatement",
                      "src": "6742:67:43"
                    }
                  ]
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 5053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6837:4:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 5026,
                  "id": 5054,
                  "nodeType": "Return",
                  "src": "6830:11:43"
                }
              ]
            },
            "documentation": {
              "id": 5018,
              "nodeType": "StructuredDocumentation",
              "src": "5962:476:43",
              "text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
            },
            "functionSelector": "a457c2d7",
            "id": 5056,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decreaseAllowance",
            "nameLocation": "6452:17:43",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5023,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5020,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "6478:7:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 5056,
                  "src": "6470:15:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5019,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6470:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5022,
                  "mutability": "mutable",
                  "name": "subtractedValue",
                  "nameLocation": "6495:15:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 5056,
                  "src": "6487:23:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5021,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6487:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6469:42:43"
            },
            "returnParameters": {
              "id": 5026,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5025,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5056,
                  "src": "6536:4:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5024,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6536:4:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6535:6:43"
            },
            "scope": 5329,
            "src": "6443:405:43",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5132,
              "nodeType": "Block",
              "src": "7439:596:43",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5067,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5059,
                          "src": "7457:6:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 5070,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7475:1:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5069,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7467:7:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5068,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7467:7:43",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5071,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7467:10:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7457:20:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
                        "id": 5073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7479:39:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        },
                        "value": "ERC20: transfer from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        }
                      ],
                      "id": 5066,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7449:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7449:70:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5075,
                  "nodeType": "ExpressionStatement",
                  "src": "7449:70:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5077,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5061,
                          "src": "7537:9:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 5080,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7558:1:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5079,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7550:7:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5078,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7550:7:43",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5081,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7550:10:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7537:23:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 5083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7562:37:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        },
                        "value": "ERC20: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        }
                      ],
                      "id": 5076,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7529:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7529:71:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5085,
                  "nodeType": "ExpressionStatement",
                  "src": "7529:71:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5087,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5059,
                        "src": "7632:6:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5088,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5061,
                        "src": "7640:9:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5089,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5063,
                        "src": "7651:6:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5086,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5317,
                      "src": "7611:20:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 5090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7611:47:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5091,
                  "nodeType": "ExpressionStatement",
                  "src": "7611:47:43"
                },
                {
                  "assignments": [
                    5093
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5093,
                      "mutability": "mutable",
                      "name": "senderBalance",
                      "nameLocation": "7677:13:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 5132,
                      "src": "7669:21:43",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5092,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7669:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5097,
                  "initialValue": {
                    "baseExpression": {
                      "id": 5094,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4799,
                      "src": "7693:9:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 5096,
                    "indexExpression": {
                      "id": 5095,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5059,
                      "src": "7703:6:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7693:17:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7669:41:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5099,
                          "name": "senderBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5093,
                          "src": "7728:13:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 5100,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5063,
                          "src": "7745:6:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7728:23:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
                        "id": 5102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7753:40:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                        },
                        "value": "ERC20: transfer amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                        }
                      ],
                      "id": 5098,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7720:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7720:74:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5104,
                  "nodeType": "ExpressionStatement",
                  "src": "7720:74:43"
                },
                {
                  "id": 5113,
                  "nodeType": "UncheckedBlock",
                  "src": "7804:77:43",
                  "statements": [
                    {
                      "expression": {
                        "id": 5111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 5105,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4799,
                            "src": "7828:9:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 5107,
                          "indexExpression": {
                            "id": 5106,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5059,
                            "src": "7838:6:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "7828:17:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 5108,
                            "name": "senderBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5093,
                            "src": "7848:13:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 5109,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5063,
                            "src": "7864:6:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7848:22:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7828:42:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 5112,
                      "nodeType": "ExpressionStatement",
                      "src": "7828:42:43"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 5118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 5114,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4799,
                        "src": "7890:9:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 5116,
                      "indexExpression": {
                        "id": 5115,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5061,
                        "src": "7900:9:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7890:20:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 5117,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5063,
                      "src": "7914:6:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7890:30:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5119,
                  "nodeType": "ExpressionStatement",
                  "src": "7890:30:43"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 5121,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5059,
                        "src": "7945:6:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5122,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5061,
                        "src": "7953:9:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5123,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5063,
                        "src": "7964:6:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5120,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5397,
                      "src": "7936:8:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 5124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7936:35:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5125,
                  "nodeType": "EmitStatement",
                  "src": "7931:40:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5127,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5059,
                        "src": "8002:6:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5128,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5061,
                        "src": "8010:9:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5129,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5063,
                        "src": "8021:6:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5126,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5328,
                      "src": "7982:19:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 5130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7982:46:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5131,
                  "nodeType": "ExpressionStatement",
                  "src": "7982:46:43"
                }
              ]
            },
            "documentation": {
              "id": 5057,
              "nodeType": "StructuredDocumentation",
              "src": "6854:463:43",
              "text": " @dev Moves `amount` of tokens from `sender` to `recipient`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
            },
            "id": 5133,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "7331:9:43",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5064,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5059,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "7358:6:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 5133,
                  "src": "7350:14:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5058,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7350:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5061,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "7382:9:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 5133,
                  "src": "7374:17:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5060,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7374:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5063,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7409:6:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 5133,
                  "src": "7401:14:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5062,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7401:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7340:81:43"
            },
            "returnParameters": {
              "id": 5065,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7439:0:43"
            },
            "scope": 5329,
            "src": "7322:713:43",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5188,
              "nodeType": "Block",
              "src": "8376:324:43",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5142,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5136,
                          "src": "8394:7:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 5145,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8413:1:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5144,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8405:7:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5143,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8405:7:43",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8405:10:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8394:21:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 5148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8417:33:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        },
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        }
                      ],
                      "id": 5141,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8386:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8386:65:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5150,
                  "nodeType": "ExpressionStatement",
                  "src": "8386:65:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 5154,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8491:1:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 5153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8483:7:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5152,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8483:7:43",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8483:10:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5156,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5136,
                        "src": "8495:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5157,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5138,
                        "src": "8504:6:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5151,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5317,
                      "src": "8462:20:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 5158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8462:49:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5159,
                  "nodeType": "ExpressionStatement",
                  "src": "8462:49:43"
                },
                {
                  "expression": {
                    "id": 5162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5160,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4807,
                      "src": "8522:12:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 5161,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5138,
                      "src": "8538:6:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8522:22:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5163,
                  "nodeType": "ExpressionStatement",
                  "src": "8522:22:43"
                },
                {
                  "expression": {
                    "id": 5168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 5164,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4799,
                        "src": "8554:9:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 5166,
                      "indexExpression": {
                        "id": 5165,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5136,
                        "src": "8564:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8554:18:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 5167,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5138,
                      "src": "8576:6:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8554:28:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5169,
                  "nodeType": "ExpressionStatement",
                  "src": "8554:28:43"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 5173,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8614:1:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 5172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8606:7:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5171,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8606:7:43",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8606:10:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5175,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5136,
                        "src": "8618:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5176,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5138,
                        "src": "8627:6:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5170,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5397,
                      "src": "8597:8:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 5177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8597:37:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5178,
                  "nodeType": "EmitStatement",
                  "src": "8592:42:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 5182,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8673:1:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 5181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8665:7:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5180,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8665:7:43",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8665:10:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5184,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5136,
                        "src": "8677:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5185,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5138,
                        "src": "8686:6:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5179,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5328,
                      "src": "8645:19:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 5186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8645:48:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5187,
                  "nodeType": "ExpressionStatement",
                  "src": "8645:48:43"
                }
              ]
            },
            "documentation": {
              "id": 5134,
              "nodeType": "StructuredDocumentation",
              "src": "8041:265:43",
              "text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
            },
            "id": 5189,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "8320:5:43",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5136,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "8334:7:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 5189,
                  "src": "8326:15:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5135,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8326:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5138,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8351:6:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 5189,
                  "src": "8343:14:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5137,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8343:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8325:33:43"
            },
            "returnParameters": {
              "id": 5140,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8376:0:43"
            },
            "scope": 5329,
            "src": "8311:389:43",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5260,
              "nodeType": "Block",
              "src": "9085:511:43",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5198,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5192,
                          "src": "9103:7:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 5201,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9122:1:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5200,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9114:7:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5199,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9114:7:43",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9114:10:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9103:21:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
                        "id": 5204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9126:35:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        },
                        "value": "ERC20: burn from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        }
                      ],
                      "id": 5197,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9095:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9095:67:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5206,
                  "nodeType": "ExpressionStatement",
                  "src": "9095:67:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5208,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5192,
                        "src": "9194:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 5211,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9211:1:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 5210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9203:7:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5209,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9203:7:43",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9203:10:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5213,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5194,
                        "src": "9215:6:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5207,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5317,
                      "src": "9173:20:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 5214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9173:49:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5215,
                  "nodeType": "ExpressionStatement",
                  "src": "9173:49:43"
                },
                {
                  "assignments": [
                    5217
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5217,
                      "mutability": "mutable",
                      "name": "accountBalance",
                      "nameLocation": "9241:14:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 5260,
                      "src": "9233:22:43",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5216,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9233:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5221,
                  "initialValue": {
                    "baseExpression": {
                      "id": 5218,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4799,
                      "src": "9258:9:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 5220,
                    "indexExpression": {
                      "id": 5219,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5192,
                      "src": "9268:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9258:18:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9233:43:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5223,
                          "name": "accountBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5217,
                          "src": "9294:14:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 5224,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5194,
                          "src": "9312:6:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9294:24:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
                        "id": 5226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9320:36:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                          "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                        },
                        "value": "ERC20: burn amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                          "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                        }
                      ],
                      "id": 5222,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9286:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9286:71:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5228,
                  "nodeType": "ExpressionStatement",
                  "src": "9286:71:43"
                },
                {
                  "id": 5237,
                  "nodeType": "UncheckedBlock",
                  "src": "9367:79:43",
                  "statements": [
                    {
                      "expression": {
                        "id": 5235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 5229,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4799,
                            "src": "9391:9:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 5231,
                          "indexExpression": {
                            "id": 5230,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5192,
                            "src": "9401:7:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "9391:18:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 5232,
                            "name": "accountBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5217,
                            "src": "9412:14:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 5233,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5194,
                            "src": "9429:6:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9412:23:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9391:44:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 5236,
                      "nodeType": "ExpressionStatement",
                      "src": "9391:44:43"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 5240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5238,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4807,
                      "src": "9455:12:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 5239,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5194,
                      "src": "9471:6:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9455:22:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5241,
                  "nodeType": "ExpressionStatement",
                  "src": "9455:22:43"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 5243,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5192,
                        "src": "9502:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 5246,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9519:1:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 5245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9511:7:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5244,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9511:7:43",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9511:10:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5248,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5194,
                        "src": "9523:6:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5242,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5397,
                      "src": "9493:8:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 5249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9493:37:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5250,
                  "nodeType": "EmitStatement",
                  "src": "9488:42:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5252,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5192,
                        "src": "9561:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 5255,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9578:1:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 5254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9570:7:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5253,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9570:7:43",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9570:10:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5257,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5194,
                        "src": "9582:6:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5251,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5328,
                      "src": "9541:19:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 5258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9541:48:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5259,
                  "nodeType": "ExpressionStatement",
                  "src": "9541:48:43"
                }
              ]
            },
            "documentation": {
              "id": 5190,
              "nodeType": "StructuredDocumentation",
              "src": "8706:309:43",
              "text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
            },
            "id": 5261,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "9029:5:43",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5192,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "9043:7:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 5261,
                  "src": "9035:15:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5191,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9035:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5194,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9060:6:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 5261,
                  "src": "9052:14:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5193,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9052:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9034:33:43"
            },
            "returnParameters": {
              "id": 5196,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9085:0:43"
            },
            "scope": 5329,
            "src": "9020:576:43",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5305,
              "nodeType": "Block",
              "src": "10132:257:43",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5272,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5264,
                          "src": "10150:5:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 5275,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10167:1:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5274,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10159:7:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5273,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10159:7:43",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10159:10:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10150:19:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
                        "id": 5278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10171:38:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                          "typeString": "literal_string \"ERC20: approve from the zero address\""
                        },
                        "value": "ERC20: approve from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                          "typeString": "literal_string \"ERC20: approve from the zero address\""
                        }
                      ],
                      "id": 5271,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10142:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10142:68:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5280,
                  "nodeType": "ExpressionStatement",
                  "src": "10142:68:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5282,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5266,
                          "src": "10228:7:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 5285,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10247:1:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5284,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10239:7:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5283,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10239:7:43",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10239:10:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10228:21:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
                        "id": 5288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10251:36:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        },
                        "value": "ERC20: approve to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        }
                      ],
                      "id": 5281,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10220:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10220:68:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5290,
                  "nodeType": "ExpressionStatement",
                  "src": "10220:68:43"
                },
                {
                  "expression": {
                    "id": 5297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 5291,
                          "name": "_allowances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4805,
                          "src": "10299:11:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 5294,
                        "indexExpression": {
                          "id": 5292,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5264,
                          "src": "10311:5:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10299:18:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 5295,
                      "indexExpression": {
                        "id": 5293,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5266,
                        "src": "10318:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10299:27:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5296,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5268,
                      "src": "10329:6:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10299:36:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5298,
                  "nodeType": "ExpressionStatement",
                  "src": "10299:36:43"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 5300,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5264,
                        "src": "10359:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5301,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5266,
                        "src": "10366:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5302,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5268,
                        "src": "10375:6:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5299,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5406,
                      "src": "10350:8:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 5303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10350:32:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5304,
                  "nodeType": "EmitStatement",
                  "src": "10345:37:43"
                }
              ]
            },
            "documentation": {
              "id": 5262,
              "nodeType": "StructuredDocumentation",
              "src": "9602:412:43",
              "text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
            },
            "id": 5306,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "10028:8:43",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5269,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5264,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "10054:5:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 5306,
                  "src": "10046:13:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5263,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10046:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5266,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "10077:7:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 5306,
                  "src": "10069:15:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5265,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10069:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5268,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10102:6:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 5306,
                  "src": "10094:14:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5267,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10094:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10036:78:43"
            },
            "returnParameters": {
              "id": 5270,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10132:0:43"
            },
            "scope": 5329,
            "src": "10019:370:43",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5316,
              "nodeType": "Block",
              "src": "11092:2:43",
              "statements": []
            },
            "documentation": {
              "id": 5307,
              "nodeType": "StructuredDocumentation",
              "src": "10395:573:43",
              "text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 5317,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "10982:20:43",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5314,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5309,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "11020:4:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 5317,
                  "src": "11012:12:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5308,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11012:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5311,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11042:2:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 5317,
                  "src": "11034:10:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5310,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11034:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5313,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "11062:6:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 5317,
                  "src": "11054:14:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5312,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11054:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11002:72:43"
            },
            "returnParameters": {
              "id": 5315,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11092:0:43"
            },
            "scope": 5329,
            "src": "10973:121:43",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5327,
              "nodeType": "Block",
              "src": "11800:2:43",
              "statements": []
            },
            "documentation": {
              "id": 5318,
              "nodeType": "StructuredDocumentation",
              "src": "11100:577:43",
              "text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 5328,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterTokenTransfer",
            "nameLocation": "11691:19:43",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5325,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5320,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "11728:4:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 5328,
                  "src": "11720:12:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5319,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11720:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5322,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11750:2:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 5328,
                  "src": "11742:10:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5321,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11742:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5324,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "11770:6:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 5328,
                  "src": "11762:14:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5323,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11762:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11710:72:43"
            },
            "returnParameters": {
              "id": 5326,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11800:0:43"
            },
            "scope": 5329,
            "src": "11682:120:43",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 5330,
        "src": "1388:10416:43",
        "usedErrors": [],
        "usedEvents": [
          5397,
          5406
        ]
      }
    ],
    "src": "90:11715:43"
  },
  "bytecode": "60806040523480156200001157600080fd5b5060405162000baa38038062000baa83398101604081905262000034916200011f565b600362000042838262000218565b50600462000051828262000218565b505050620002e4565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008257600080fd5b81516001600160401b03808211156200009f576200009f6200005a565b604051601f8301601f19908116603f01168101908282118183101715620000ca57620000ca6200005a565b81604052838152602092508683858801011115620000e757600080fd5b600091505b838210156200010b5785820183015181830184015290820190620000ec565b600093810190920192909252949350505050565b600080604083850312156200013357600080fd5b82516001600160401b03808211156200014b57600080fd5b620001598683870162000070565b935060208501519150808211156200017057600080fd5b506200017f8582860162000070565b9150509250929050565b600181811c908216806200019e57607f821691505b602082108103620001bf57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021357600081815260208120601f850160051c81016020861015620001ee5750805b601f850160051c820191505b818110156200020f57828155600101620001fa565b5050505b505050565b81516001600160401b038111156200023457620002346200005a565b6200024c8162000245845462000189565b84620001c5565b602080601f8311600181146200028457600084156200026b5750858301515b600019600386901b1c1916600185901b1785556200020f565b600085815260208120601f198616915b82811015620002b55788860151825594840194600190910190840162000294565b5085821015620002d45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6108b680620002f46000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c39190610700565b60405180910390f35b6100df6100da36600461076a565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610794565b61026f565b604051601281526020016100c3565b6100df61013136600461076a565b61031c565b6100f36101443660046107d0565b6001600160a01b031660009081526020819052604090205490565b6100b6610358565b6100df61017536600461076a565b610367565b6100df61018836600461076a565b610400565b6100f361019b3660046107f2565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d590610825565b80601f016020809104026020016040519081016040528092919081815260200182805461020190610825565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b600061026533848461040d565b5060015b92915050565b6001600160a01b0383166000908152600160209081526040808320338452909152812054828110156102f95760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b610306853385840361040d565b610311858585610531565b506001949350505050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161026591859061035390869061085f565b61040d565b6060600480546101d590610825565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156103e95760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102f0565b6103f6338585840361040d565b5060019392505050565b6000610265338484610531565b6001600160a01b03831661046f5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102f0565b6001600160a01b0382166104d05760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102f0565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105955760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102f0565b6001600160a01b0382166105f75760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102f0565b6001600160a01b0383166000908152602081905260409020548181101561066f5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102f0565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106a690849061085f565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106f291815260200190565b60405180910390a350505050565b600060208083528351808285015260005b8181101561072d57858101830151858201604001528201610711565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461076557600080fd5b919050565b6000806040838503121561077d57600080fd5b6107868361074e565b946020939093013593505050565b6000806000606084860312156107a957600080fd5b6107b28461074e565b92506107c06020850161074e565b9150604084013590509250925092565b6000602082840312156107e257600080fd5b6107eb8261074e565b9392505050565b6000806040838503121561080557600080fd5b61080e8361074e565b915061081c6020840161074e565b90509250929050565b600181811c9082168061083957607f821691505b60208210810361085957634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561026957634e487b7160e01b600052601160045260246000fdfea2646970667358221220359098177329c1a9937c4eec9a197ea0aac2d239b4120c1e854c26a59ae0d87464736f6c63430008150033",
  "bytecodeSha1": "2edccab655a963ffc3d72eb25d11dff41e422207",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.21+commit.d9974bed"
  },
  "contractName": "ERC20",
  "coverageMap": {
    "branches": {
      "43": {
        "ERC20._approve": {
          "30": [
            10150,
            10169,
            true
          ],
          "31": [
            10228,
            10249,
            true
          ]
        },
        "ERC20._transfer": {
          "32": [
            7457,
            7477,
            true
          ],
          "33": [
            7537,
            7560,
            true
          ],
          "34": [
            7728,
            7751,
            true
          ]
        },
        "ERC20.decreaseAllowance": {
          "29": [
            6631,
            6666,
            true
          ]
        },
        "ERC20.transferFrom": {
          "28": [
            5101,
            5127,
            true
          ]
        }
      },
      "44": {},
      "53": {},
      "70": {}
    },
    "statements": {
      "43": {
        "ERC20._approve": {
          "18": [
            10142,
            10210
          ],
          "19": [
            10220,
            10288
          ],
          "20": [
            10299,
            10335
          ],
          "21": [
            10345,
            10382
          ]
        },
        "ERC20._transfer": {
          "22": [
            7449,
            7519
          ],
          "23": [
            7529,
            7600
          ],
          "24": [
            7720,
            7794
          ],
          "25": [
            7828,
            7870
          ],
          "26": [
            7890,
            7920
          ],
          "27": [
            7931,
            7971
          ]
        },
        "ERC20.allowance": {
          "3": [
            4059,
            4093
          ]
        },
        "ERC20.approve": {
          "5": [
            4337,
            4376
          ],
          "7": [
            4386,
            4397
          ]
        },
        "ERC20.balanceOf": {
          "2": [
            3486,
            3511
          ]
        },
        "ERC20.decimals": {
          "1": [
            3153,
            3162
          ]
        },
        "ERC20.decreaseAllowance": {
          "14": [
            6623,
            6708
          ],
          "15": [
            6742,
            6809
          ],
          "16": [
            6830,
            6841
          ]
        },
        "ERC20.increaseAllowance": {
          "12": [
            5848,
            5928
          ]
        },
        "ERC20.name": {
          "4": [
            2220,
            2232
          ]
        },
        "ERC20.symbol": {
          "13": [
            2433,
            2447
          ]
        },
        "ERC20.totalSupply": {
          "0": [
            3309,
            3328
          ]
        },
        "ERC20.transfer": {
          "17": [
            3823,
            3865
          ]
        },
        "ERC20.transferFrom": {
          "8": [
            5093,
            5172
          ],
          "9": [
            5206,
            5263
          ],
          "10": [
            5284,
            5320
          ],
          "11": [
            5331,
            5342
          ]
        }
      },
      "44": {},
      "53": {},
      "70": {
        "Context._msgSender": {
          "6": [
            712,
            729
          ]
        }
      }
    }
  },
  "dependencies": [
    "Context",
    "IERC20",
    "IERC20Metadata"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c39190610700565b60405180910390f35b6100df6100da36600461076a565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610794565b61026f565b604051601281526020016100c3565b6100df61013136600461076a565b61031c565b6100f36101443660046107d0565b6001600160a01b031660009081526020819052604090205490565b6100b6610358565b6100df61017536600461076a565b610367565b6100df61018836600461076a565b610400565b6100f361019b3660046107f2565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d590610825565b80601f016020809104026020016040519081016040528092919081815260200182805461020190610825565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b600061026533848461040d565b5060015b92915050565b6001600160a01b0383166000908152600160209081526040808320338452909152812054828110156102f95760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b610306853385840361040d565b610311858585610531565b506001949350505050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161026591859061035390869061085f565b61040d565b6060600480546101d590610825565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156103e95760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102f0565b6103f6338585840361040d565b5060019392505050565b6000610265338484610531565b6001600160a01b03831661046f5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102f0565b6001600160a01b0382166104d05760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102f0565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105955760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102f0565b6001600160a01b0382166105f75760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102f0565b6001600160a01b0383166000908152602081905260409020548181101561066f5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102f0565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106a690849061085f565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106f291815260200190565b60405180910390a350505050565b600060208083528351808285015260005b8181101561072d57858101830151858201604001528201610711565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461076557600080fd5b919050565b6000806040838503121561077d57600080fd5b6107868361074e565b946020939093013593505050565b6000806000606084860312156107a957600080fd5b6107b28461074e565b92506107c06020850161074e565b9150604084013590509250925092565b6000602082840312156107e257600080fd5b6107eb8261074e565b9392505050565b6000806040838503121561080557600080fd5b61080e8361074e565b915061081c6020840161074e565b90509250929050565b600181811c9082168061083957607f821691505b60208210810361085957634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561026957634e487b7160e01b600052601160045260246000fdfea2646970667358221220359098177329c1a9937c4eec9a197ea0aac2d239b4120c1e854c26a59ae0d87464736f6c63430008150033",
  "deployedSourceMap": "1388:10416:43:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2141:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4238:166;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:102;;1162:22;1144:41;;1132:2;1117:18;4238:166:43;1004:187:102;3229:106:43;3316:12;;3229:106;;;1342:25:102;;;1330:2;1315:18;3229:106:43;1196:177:102;4871:478:43;;;;;;:::i;:::-;;:::i;3078:91::-;;;3160:2;1853:36:102;;1841:2;1826:18;3078:91:43;1711:184:102;5744:212:43;;;;;;:::i;:::-;;:::i;3393:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3493:18:43;3467:7;3493:18;;;;;;;;;;;;3393:125;2352:102;;;:::i;6443:405::-;;;;;;:::i;:::-;;:::i;3721:172::-;;;;;;:::i;:::-;;:::i;3951:149::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4066:18:43;;;4040:7;4066:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3951:149;2141:98;2195:13;2227:5;2220:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2141:98;:::o;4238:166::-;4321:4;4337:39;719:10:70;4360:7:43;4369:6;4337:8;:39::i;:::-;-1:-1:-1;4393:4:43;4238:166;;;;;:::o;4871:478::-;-1:-1:-1;;;;;5050:19:43;;5007:4;5050:19;;;:11;:19;;;;;;;;719:10:70;5050:33:43;;;;;;;;5101:26;;;;5093:79;;;;-1:-1:-1;;;5093:79:43;;2943:2:102;5093:79:43;;;2925:21:102;2982:2;2962:18;;;2955:30;3021:34;3001:18;;;2994:62;-1:-1:-1;;;3072:18:102;;;3065:38;3120:19;;5093:79:43;;;;;;;;;5206:57;5215:6;719:10:70;5256:6:43;5237:16;:25;5206:8;:57::i;:::-;5284:36;5294:6;5302:9;5313:6;5284:9;:36::i;:::-;-1:-1:-1;5338:4:43;;4871:478;-1:-1:-1;;;;4871:478:43:o;5744:212::-;719:10:70;5832:4:43;5880:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5880:34:43;;;;;;;;;;5832:4;;5848:80;;5871:7;;5880:47;;5917:10;;5880:47;:::i;:::-;5848:8;:80::i;2352:102::-;2408:13;2440:7;2433:14;;;;;:::i;6443:405::-;719:10:70;6536:4:43;6579:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6579:34:43;;;;;;;;;;6631:35;;;;6623:85;;;;-1:-1:-1;;;6623:85:43;;3579:2:102;6623:85:43;;;3561:21:102;3618:2;3598:18;;;3591:30;3657:34;3637:18;;;3630:62;-1:-1:-1;;;3708:18:102;;;3701:35;3753:19;;6623:85:43;3377:401:102;6623:85:43;6742:67;719:10:70;6765:7:43;6793:15;6774:16;:34;6742:8;:67::i;:::-;-1:-1:-1;6837:4:43;;6443:405;-1:-1:-1;;;6443:405:43:o;3721:172::-;3807:4;3823:42;719:10:70;3847:9:43;3858:6;3823:9;:42::i;10019:370::-;-1:-1:-1;;;;;10150:19:43;;10142:68;;;;-1:-1:-1;;;10142:68:43;;3985:2:102;10142:68:43;;;3967:21:102;4024:2;4004:18;;;3997:30;4063:34;4043:18;;;4036:62;-1:-1:-1;;;4114:18:102;;;4107:34;4158:19;;10142:68:43;3783:400:102;10142:68:43;-1:-1:-1;;;;;10228:21:43;;10220:68;;;;-1:-1:-1;;;10220:68:43;;4390:2:102;10220:68:43;;;4372:21:102;4429:2;4409:18;;;4402:30;4468:34;4448:18;;;4441:62;-1:-1:-1;;;4519:18:102;;;4512:32;4561:19;;10220:68:43;4188:398:102;10220:68:43;-1:-1:-1;;;;;10299:18:43;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10350:32;;1342:25:102;;;10350:32:43;;1315:18:102;10350:32:43;;;;;;;10019:370;;;:::o;7322:713::-;-1:-1:-1;;;;;7457:20:43;;7449:70;;;;-1:-1:-1;;;7449:70:43;;4793:2:102;7449:70:43;;;4775:21:102;4832:2;4812:18;;;4805:30;4871:34;4851:18;;;4844:62;-1:-1:-1;;;4922:18:102;;;4915:35;4967:19;;7449:70:43;4591:401:102;7449:70:43;-1:-1:-1;;;;;7537:23:43;;7529:71;;;;-1:-1:-1;;;7529:71:43;;5199:2:102;7529:71:43;;;5181:21:102;5238:2;5218:18;;;5211:30;5277:34;5257:18;;;5250:62;-1:-1:-1;;;5328:18:102;;;5321:33;5371:19;;7529:71:43;4997:399:102;7529:71:43;-1:-1:-1;;;;;7693:17:43;;7669:21;7693:17;;;;;;;;;;;7728:23;;;;7720:74;;;;-1:-1:-1;;;7720:74:43;;5603:2:102;7720:74:43;;;5585:21:102;5642:2;5622:18;;;5615:30;5681:34;5661:18;;;5654:62;-1:-1:-1;;;5732:18:102;;;5725:36;5778:19;;7720:74:43;5401:402:102;7720:74:43;-1:-1:-1;;;;;7828:17:43;;;:9;:17;;;;;;;;;;;7848:22;;;7828:42;;7890:20;;;;;;;;:30;;7864:6;;7828:9;7890:30;;7864:6;;7890:30;:::i;:::-;;;;;;;;7953:9;-1:-1:-1;;;;;7936:35:43;7945:6;-1:-1:-1;;;;;7936:35:43;;7964:6;7936:35;;;;1342:25:102;;1330:2;1315:18;;1196:177;7936:35:43;;;;;;;;7439:596;7322:713;;;:::o;14:548:102:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:102;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:102:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:102:o;2091:260::-;2159:6;2167;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;;2307:38;2341:2;2330:9;2326:18;2307:38;:::i;:::-;2297:48;;2091:260;;;;;:::o;2356:380::-;2435:1;2431:12;;;;2478;;;2499:61;;2553:4;2545:6;2541:17;2531:27;;2499:61;2606:2;2598:6;2595:14;2575:18;2572:38;2569:161;;2652:10;2647:3;2643:20;2640:1;2633:31;2687:4;2684:1;2677:15;2715:4;2712:1;2705:15;2569:161;;2356:380;;;:::o;3150:222::-;3215:9;;;3236:10;;;3233:133;;;3288:10;3283:3;3279:20;3276:1;3269:31;3323:4;3320:1;3313:15;3351:4;3348:1;3341:15",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      }
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "constructor": {
        "details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "offset": [
    1388,
    11804
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x700 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x76A JUMP JUMPDEST PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x794 JUMP JUMPDEST PUSH2 0x26F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x76A JUMP JUMPDEST PUSH2 0x31C JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x7D0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x358 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x76A JUMP JUMPDEST PUSH2 0x367 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x76A JUMP JUMPDEST PUSH2 0x400 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x7F2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x825 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x201 SWAP1 PUSH2 0x825 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x223 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x231 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x40D JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x2F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x306 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x40D JUMP JUMPDEST PUSH2 0x311 DUP6 DUP6 DUP6 PUSH2 0x531 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x265 SWAP2 DUP6 SWAP1 PUSH2 0x353 SWAP1 DUP7 SWAP1 PUSH2 0x85F JUMP JUMPDEST PUSH2 0x40D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x825 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x3E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F0 JUMP JUMPDEST PUSH2 0x3F6 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x40D JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x531 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x46F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x595 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x66F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6A6 SWAP1 DUP5 SWAP1 PUSH2 0x85F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6F2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x72D JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x711 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x765 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x77D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x786 DUP4 PUSH2 0x74E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x7A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B2 DUP5 PUSH2 0x74E JUMP JUMPDEST SWAP3 POP PUSH2 0x7C0 PUSH1 0x20 DUP6 ADD PUSH2 0x74E JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7EB DUP3 PUSH2 0x74E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x805 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x80E DUP4 PUSH2 0x74E JUMP JUMPDEST SWAP2 POP PUSH2 0x81C PUSH1 0x20 DUP5 ADD PUSH2 0x74E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x839 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x859 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x269 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD SWAP1 SWAP9 OR PUSH20 0x29C1A9937C4EEC9A197EA0AAC2D239B4120C1E85 0x4C 0x26 0xA5 SWAP11 0xE0 0xD8 PUSH21 0x64736F6C6343000815003300000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        1388,
        11804
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "5": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "CALLVALUE",
      "path": "43"
    },
    "6": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "DUP1",
      "path": "43"
    },
    "7": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "ISZERO",
      "path": "43"
    },
    "8": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "JUMPI",
      "path": "43"
    },
    "12": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "DUP1",
      "path": "43"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "REVERT",
      "path": "43"
    },
    "16": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "17": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "POP",
      "path": "43"
    },
    "18": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "CALLDATASIZE",
      "path": "43"
    },
    "21": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "LT",
      "path": "43"
    },
    "22": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0xA9"
    },
    "25": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "JUMPI",
      "path": "43"
    },
    "26": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "CALLDATALOAD",
      "path": "43"
    },
    "29": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "SHR",
      "path": "43"
    },
    "32": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "DUP1",
      "path": "43"
    },
    "33": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "PUSH4",
      "path": "43",
      "value": "0x39509351"
    },
    "38": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "GT",
      "path": "43"
    },
    "39": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x71"
    },
    "42": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "JUMPI",
      "path": "43"
    },
    "43": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "DUP1",
      "path": "43"
    },
    "44": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "PUSH4",
      "path": "43",
      "value": "0x39509351"
    },
    "49": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "EQ",
      "path": "43"
    },
    "50": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x123"
    },
    "53": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "JUMPI",
      "path": "43"
    },
    "54": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "DUP1",
      "path": "43"
    },
    "55": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "PUSH4",
      "path": "43",
      "value": "0x70A08231"
    },
    "60": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "EQ",
      "path": "43"
    },
    "61": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x136"
    },
    "64": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "JUMPI",
      "path": "43"
    },
    "65": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "DUP1",
      "path": "43"
    },
    "66": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "PUSH4",
      "path": "43",
      "value": "0x95D89B41"
    },
    "71": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "EQ",
      "path": "43"
    },
    "72": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x15F"
    },
    "75": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "JUMPI",
      "path": "43"
    },
    "76": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "DUP1",
      "path": "43"
    },
    "77": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "PUSH4",
      "path": "43",
      "value": "0xA457C2D7"
    },
    "82": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "EQ",
      "path": "43"
    },
    "83": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x167"
    },
    "86": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "JUMPI",
      "path": "43"
    },
    "87": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "DUP1",
      "path": "43"
    },
    "88": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "PUSH4",
      "path": "43",
      "value": "0xA9059CBB"
    },
    "93": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "EQ",
      "path": "43"
    },
    "94": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x17A"
    },
    "97": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "JUMPI",
      "path": "43"
    },
    "98": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "DUP1",
      "path": "43"
    },
    "99": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "PUSH4",
      "path": "43",
      "value": "0xDD62ED3E"
    },
    "104": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "EQ",
      "path": "43"
    },
    "105": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x18D"
    },
    "108": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "JUMPI",
      "path": "43"
    },
    "109": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "DUP1",
      "path": "43"
    },
    "112": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "REVERT",
      "path": "43"
    },
    "113": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "114": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "DUP1",
      "path": "43"
    },
    "115": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "PUSH4",
      "path": "43",
      "value": "0x6FDDE03"
    },
    "120": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "EQ",
      "path": "43"
    },
    "121": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0xAE"
    },
    "124": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "JUMPI",
      "path": "43"
    },
    "125": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "DUP1",
      "path": "43"
    },
    "126": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "PUSH4",
      "path": "43",
      "value": "0x95EA7B3"
    },
    "131": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "EQ",
      "path": "43"
    },
    "132": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0xCC"
    },
    "135": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "JUMPI",
      "path": "43"
    },
    "136": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "DUP1",
      "path": "43"
    },
    "137": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "PUSH4",
      "path": "43",
      "value": "0x18160DDD"
    },
    "142": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "EQ",
      "path": "43"
    },
    "143": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0xEF"
    },
    "146": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "JUMPI",
      "path": "43"
    },
    "147": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "DUP1",
      "path": "43"
    },
    "148": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "PUSH4",
      "path": "43",
      "value": "0x23B872DD"
    },
    "153": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "EQ",
      "path": "43"
    },
    "154": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x101"
    },
    "157": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "JUMPI",
      "path": "43"
    },
    "158": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "DUP1",
      "path": "43"
    },
    "159": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "PUSH4",
      "path": "43",
      "value": "0x313CE567"
    },
    "164": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "EQ",
      "path": "43"
    },
    "165": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x114"
    },
    "168": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "JUMPI",
      "path": "43"
    },
    "169": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "170": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x0"
    },
    "172": {
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "DUP1",
      "path": "43"
    },
    "173": {
      "first_revert": true,
      "fn": null,
      "offset": [
        1388,
        11804
      ],
      "op": "REVERT",
      "path": "43"
    },
    "174": {
      "fn": "ERC20.name",
      "offset": [
        2141,
        2239
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "175": {
      "fn": "ERC20.name",
      "offset": [
        2141,
        2239
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0xB6"
    },
    "178": {
      "fn": "ERC20.name",
      "offset": [
        2141,
        2239
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x1C6"
    },
    "181": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2141,
        2239
      ],
      "op": "JUMP",
      "path": "43"
    },
    "182": {
      "fn": "ERC20.name",
      "offset": [
        2141,
        2239
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "183": {
      "fn": "ERC20.name",
      "offset": [
        2141,
        2239
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "185": {
      "fn": "ERC20.name",
      "offset": [
        2141,
        2239
      ],
      "op": "MLOAD",
      "path": "43"
    },
    "186": {
      "fn": "ERC20.name",
      "offset": [
        2141,
        2239
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0xC3"
    },
    "189": {
      "fn": "ERC20.name",
      "offset": [
        2141,
        2239
      ],
      "op": "SWAP2",
      "path": "43"
    },
    "190": {
      "fn": "ERC20.name",
      "offset": [
        2141,
        2239
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "191": {
      "fn": "ERC20.name",
      "offset": [
        2141,
        2239
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x700"
    },
    "194": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2141,
        2239
      ],
      "op": "JUMP",
      "path": "43"
    },
    "195": {
      "fn": "ERC20.name",
      "offset": [
        2141,
        2239
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "196": {
      "fn": "ERC20.name",
      "offset": [
        2141,
        2239
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "198": {
      "fn": "ERC20.name",
      "offset": [
        2141,
        2239
      ],
      "op": "MLOAD",
      "path": "43"
    },
    "199": {
      "fn": "ERC20.name",
      "offset": [
        2141,
        2239
      ],
      "op": "DUP1",
      "path": "43"
    },
    "200": {
      "fn": "ERC20.name",
      "offset": [
        2141,
        2239
      ],
      "op": "SWAP2",
      "path": "43"
    },
    "201": {
      "fn": "ERC20.name",
      "offset": [
        2141,
        2239
      ],
      "op": "SUB",
      "path": "43"
    },
    "202": {
      "fn": "ERC20.name",
      "offset": [
        2141,
        2239
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "203": {
      "fn": "ERC20.name",
      "offset": [
        2141,
        2239
      ],
      "op": "RETURN",
      "path": "43"
    },
    "204": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "205": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0xDF"
    },
    "208": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0xDA"
    },
    "211": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "CALLDATASIZE",
      "path": "43"
    },
    "212": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x4"
    },
    "214": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x76A"
    },
    "217": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4238,
        4404
      ],
      "op": "JUMP",
      "path": "43"
    },
    "218": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "219": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x258"
    },
    "222": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4238,
        4404
      ],
      "op": "JUMP",
      "path": "43"
    },
    "223": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "224": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "226": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "MLOAD",
      "path": "43"
    },
    "227": {
      "op": "SWAP1"
    },
    "228": {
      "op": "ISZERO"
    },
    "229": {
      "op": "ISZERO"
    },
    "230": {
      "op": "DUP2"
    },
    "231": {
      "op": "MSTORE"
    },
    "232": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "234": {
      "op": "ADD"
    },
    "235": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0xC3"
    },
    "238": {
      "op": "JUMP"
    },
    "239": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3229,
        3335
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "240": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3316,
        3328
      ],
      "op": "PUSH1",
      "path": "43",
      "statement": 0,
      "value": "0x2"
    },
    "242": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3316,
        3328
      ],
      "op": "SLOAD",
      "path": "43"
    },
    "243": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3229,
        3335
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "244": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3229,
        3335
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "246": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3229,
        3335
      ],
      "op": "MLOAD",
      "path": "43"
    },
    "247": {
      "op": "SWAP1"
    },
    "248": {
      "op": "DUP2"
    },
    "249": {
      "op": "MSTORE"
    },
    "250": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "252": {
      "op": "ADD"
    },
    "253": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3229,
        3335
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0xC3"
    },
    "256": {
      "op": "JUMP"
    },
    "257": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4871,
        5349
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "258": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4871,
        5349
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0xDF"
    },
    "261": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4871,
        5349
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x10F"
    },
    "264": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4871,
        5349
      ],
      "op": "CALLDATASIZE",
      "path": "43"
    },
    "265": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4871,
        5349
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x4"
    },
    "267": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4871,
        5349
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x794"
    },
    "270": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4871,
        5349
      ],
      "op": "JUMP",
      "path": "43"
    },
    "271": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4871,
        5349
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "272": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4871,
        5349
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x26F"
    },
    "275": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4871,
        5349
      ],
      "op": "JUMP",
      "path": "43"
    },
    "276": {
      "fn": "ERC20.decimals",
      "offset": [
        3078,
        3169
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "277": {
      "fn": "ERC20.decimals",
      "offset": [
        3078,
        3169
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "279": {
      "fn": "ERC20.decimals",
      "offset": [
        3078,
        3169
      ],
      "op": "MLOAD",
      "path": "43"
    },
    "280": {
      "fn": "ERC20.decimals",
      "offset": [
        3160,
        3162
      ],
      "op": "PUSH1",
      "path": "43",
      "statement": 1,
      "value": "0x12"
    },
    "282": {
      "op": "DUP2"
    },
    "283": {
      "op": "MSTORE"
    },
    "284": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "286": {
      "op": "ADD"
    },
    "287": {
      "fn": "ERC20.decimals",
      "offset": [
        3078,
        3169
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0xC3"
    },
    "290": {
      "op": "JUMP"
    },
    "291": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5744,
        5956
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "292": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5744,
        5956
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0xDF"
    },
    "295": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5744,
        5956
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x131"
    },
    "298": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5744,
        5956
      ],
      "op": "CALLDATASIZE",
      "path": "43"
    },
    "299": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5744,
        5956
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x4"
    },
    "301": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5744,
        5956
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x76A"
    },
    "304": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5744,
        5956
      ],
      "op": "JUMP",
      "path": "43"
    },
    "305": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5744,
        5956
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "306": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5744,
        5956
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x31C"
    },
    "309": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5744,
        5956
      ],
      "op": "JUMP",
      "path": "43"
    },
    "310": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3393,
        3518
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "311": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3393,
        3518
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0xF3"
    },
    "314": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3393,
        3518
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x144"
    },
    "317": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3393,
        3518
      ],
      "op": "CALLDATASIZE",
      "path": "43"
    },
    "318": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3393,
        3518
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x4"
    },
    "320": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3393,
        3518
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x7D0"
    },
    "323": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3393,
        3518
      ],
      "op": "JUMP",
      "path": "43"
    },
    "324": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3393,
        3518
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "329": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "331": {
      "op": "SHL"
    },
    "332": {
      "op": "SUB"
    },
    "333": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "AND",
      "path": "43",
      "statement": 2
    },
    "334": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3467,
        3474
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x0"
    },
    "336": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "337": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "DUP2",
      "path": "43"
    },
    "338": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "339": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x20"
    },
    "341": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "DUP2",
      "path": "43"
    },
    "342": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "343": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "344": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "346": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "347": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "KECCAK256",
      "path": "43"
    },
    "348": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "SLOAD",
      "path": "43"
    },
    "349": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "350": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3393,
        3518
      ],
      "op": "JUMP",
      "path": "43"
    },
    "351": {
      "fn": "ERC20.symbol",
      "offset": [
        2352,
        2454
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "352": {
      "fn": "ERC20.symbol",
      "offset": [
        2352,
        2454
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0xB6"
    },
    "355": {
      "fn": "ERC20.symbol",
      "offset": [
        2352,
        2454
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x358"
    },
    "358": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2352,
        2454
      ],
      "op": "JUMP",
      "path": "43"
    },
    "359": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6443,
        6848
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "360": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6443,
        6848
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0xDF"
    },
    "363": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6443,
        6848
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x175"
    },
    "366": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6443,
        6848
      ],
      "op": "CALLDATASIZE",
      "path": "43"
    },
    "367": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6443,
        6848
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x4"
    },
    "369": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6443,
        6848
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x76A"
    },
    "372": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6443,
        6848
      ],
      "op": "JUMP",
      "path": "43"
    },
    "373": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6443,
        6848
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "374": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6443,
        6848
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x367"
    },
    "377": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6443,
        6848
      ],
      "op": "JUMP",
      "path": "43"
    },
    "378": {
      "fn": "ERC20.transfer",
      "offset": [
        3721,
        3893
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "379": {
      "fn": "ERC20.transfer",
      "offset": [
        3721,
        3893
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0xDF"
    },
    "382": {
      "fn": "ERC20.transfer",
      "offset": [
        3721,
        3893
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x188"
    },
    "385": {
      "fn": "ERC20.transfer",
      "offset": [
        3721,
        3893
      ],
      "op": "CALLDATASIZE",
      "path": "43"
    },
    "386": {
      "fn": "ERC20.transfer",
      "offset": [
        3721,
        3893
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x4"
    },
    "388": {
      "fn": "ERC20.transfer",
      "offset": [
        3721,
        3893
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x76A"
    },
    "391": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3721,
        3893
      ],
      "op": "JUMP",
      "path": "43"
    },
    "392": {
      "fn": "ERC20.transfer",
      "offset": [
        3721,
        3893
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "393": {
      "fn": "ERC20.transfer",
      "offset": [
        3721,
        3893
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x400"
    },
    "396": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3721,
        3893
      ],
      "op": "JUMP",
      "path": "43"
    },
    "397": {
      "fn": "ERC20.allowance",
      "offset": [
        3951,
        4100
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "398": {
      "fn": "ERC20.allowance",
      "offset": [
        3951,
        4100
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0xF3"
    },
    "401": {
      "fn": "ERC20.allowance",
      "offset": [
        3951,
        4100
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x19B"
    },
    "404": {
      "fn": "ERC20.allowance",
      "offset": [
        3951,
        4100
      ],
      "op": "CALLDATASIZE",
      "path": "43"
    },
    "405": {
      "fn": "ERC20.allowance",
      "offset": [
        3951,
        4100
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x4"
    },
    "407": {
      "fn": "ERC20.allowance",
      "offset": [
        3951,
        4100
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x7F2"
    },
    "410": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        3951,
        4100
      ],
      "op": "JUMP",
      "path": "43"
    },
    "411": {
      "fn": "ERC20.allowance",
      "offset": [
        3951,
        4100
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "416": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "418": {
      "op": "SHL"
    },
    "419": {
      "op": "SUB"
    },
    "420": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4084
      ],
      "op": "SWAP2",
      "path": "43",
      "statement": 3
    },
    "421": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4084
      ],
      "op": "DUP3",
      "path": "43"
    },
    "422": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4084
      ],
      "op": "AND",
      "path": "43"
    },
    "423": {
      "fn": "ERC20.allowance",
      "offset": [
        4040,
        4047
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x0"
    },
    "425": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4084
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "426": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4084
      ],
      "op": "DUP2",
      "path": "43"
    },
    "427": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4084
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "428": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4077
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x1"
    },
    "430": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4084
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x20"
    },
    "432": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4084
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "433": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4084
      ],
      "op": "DUP2",
      "path": "43"
    },
    "434": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4084
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "435": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4084
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "437": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4084
      ],
      "op": "DUP1",
      "path": "43"
    },
    "438": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4084
      ],
      "op": "DUP4",
      "path": "43"
    },
    "439": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4084
      ],
      "op": "KECCAK256",
      "path": "43"
    },
    "440": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4093
      ],
      "op": "SWAP4",
      "path": "43"
    },
    "441": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4093
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "442": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4093
      ],
      "op": "SWAP5",
      "path": "43"
    },
    "443": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4093
      ],
      "op": "AND",
      "path": "43"
    },
    "444": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4093
      ],
      "op": "DUP3",
      "path": "43"
    },
    "445": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4093
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "446": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4093
      ],
      "op": "SWAP2",
      "path": "43"
    },
    "447": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4093
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "448": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4093
      ],
      "op": "SWAP2",
      "path": "43"
    },
    "449": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4093
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "450": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4093
      ],
      "op": "KECCAK256",
      "path": "43"
    },
    "451": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4093
      ],
      "op": "SLOAD",
      "path": "43"
    },
    "452": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4093
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "453": {
      "fn": "ERC20.allowance",
      "offset": [
        3951,
        4100
      ],
      "op": "JUMP",
      "path": "43"
    },
    "454": {
      "fn": "ERC20.name",
      "offset": [
        2141,
        2239
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "455": {
      "fn": "ERC20.name",
      "offset": [
        2195,
        2208
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x60"
    },
    "457": {
      "fn": "ERC20.name",
      "offset": [
        2227,
        2232
      ],
      "op": "PUSH1",
      "path": "43",
      "statement": 4,
      "value": "0x3"
    },
    "459": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP1",
      "path": "43"
    },
    "460": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SLOAD",
      "path": "43"
    },
    "461": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x1D5"
    },
    "464": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "465": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x825"
    },
    "468": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2220,
        2232
      ],
      "op": "JUMP",
      "path": "43"
    },
    "469": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "470": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP1",
      "path": "43"
    },
    "471": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x1F"
    },
    "473": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "ADD",
      "path": "43"
    },
    "474": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x20"
    },
    "476": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP1",
      "path": "43"
    },
    "477": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SWAP2",
      "path": "43"
    },
    "478": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DIV",
      "path": "43"
    },
    "479": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "MUL",
      "path": "43"
    },
    "480": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x20"
    },
    "482": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "ADD",
      "path": "43"
    },
    "483": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "485": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "MLOAD",
      "path": "43"
    },
    "486": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "487": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP2",
      "path": "43"
    },
    "488": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "ADD",
      "path": "43"
    },
    "489": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "491": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "492": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP1",
      "path": "43"
    },
    "493": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SWAP3",
      "path": "43"
    },
    "494": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SWAP2",
      "path": "43"
    },
    "495": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "496": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP2",
      "path": "43"
    },
    "497": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP2",
      "path": "43"
    },
    "498": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "499": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x20"
    },
    "501": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "ADD",
      "path": "43"
    },
    "502": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP3",
      "path": "43"
    },
    "503": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP1",
      "path": "43"
    },
    "504": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SLOAD",
      "path": "43"
    },
    "505": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x201"
    },
    "508": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "509": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x825"
    },
    "512": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2220,
        2232
      ],
      "op": "JUMP",
      "path": "43"
    },
    "513": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "514": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP1",
      "path": "43"
    },
    "515": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "ISZERO",
      "path": "43"
    },
    "516": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x24E"
    },
    "519": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "JUMPI",
      "path": "43"
    },
    "520": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP1",
      "path": "43"
    },
    "521": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x1F"
    },
    "523": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "LT",
      "path": "43"
    },
    "524": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x223"
    },
    "527": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "JUMPI",
      "path": "43"
    },
    "528": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x100"
    },
    "531": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP1",
      "path": "43"
    },
    "532": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP4",
      "path": "43"
    },
    "533": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SLOAD",
      "path": "43"
    },
    "534": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DIV",
      "path": "43"
    },
    "535": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "MUL",
      "path": "43"
    },
    "536": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP4",
      "path": "43"
    },
    "537": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "538": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SWAP2",
      "path": "43"
    },
    "539": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x20"
    },
    "541": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "ADD",
      "path": "43"
    },
    "542": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SWAP2",
      "path": "43"
    },
    "543": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x24E"
    },
    "546": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "JUMP",
      "path": "43"
    },
    "547": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "548": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP3",
      "path": "43"
    },
    "549": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "ADD",
      "path": "43"
    },
    "550": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SWAP2",
      "path": "43"
    },
    "551": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "552": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x0"
    },
    "554": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "555": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x20"
    },
    "557": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x0"
    },
    "559": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "KECCAK256",
      "path": "43"
    },
    "560": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "561": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "562": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP2",
      "path": "43"
    },
    "563": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SLOAD",
      "path": "43"
    },
    "564": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP2",
      "path": "43"
    },
    "565": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "566": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "567": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x1"
    },
    "569": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "ADD",
      "path": "43"
    },
    "570": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "571": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x20"
    },
    "573": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "ADD",
      "path": "43"
    },
    "574": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP1",
      "path": "43"
    },
    "575": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP4",
      "path": "43"
    },
    "576": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "GT",
      "path": "43"
    },
    "577": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x231"
    },
    "580": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "JUMPI",
      "path": "43"
    },
    "581": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP3",
      "path": "43"
    },
    "582": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "583": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SUB",
      "path": "43"
    },
    "584": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x1F"
    },
    "586": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "AND",
      "path": "43"
    },
    "587": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP3",
      "path": "43"
    },
    "588": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "ADD",
      "path": "43"
    },
    "589": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SWAP2",
      "path": "43"
    },
    "590": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "591": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "POP",
      "path": "43"
    },
    "592": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "POP",
      "path": "43"
    },
    "593": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "POP",
      "path": "43"
    },
    "594": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "POP",
      "path": "43"
    },
    "595": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "POP",
      "path": "43"
    },
    "596": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "597": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "POP",
      "path": "43"
    },
    "598": {
      "fn": "ERC20.name",
      "offset": [
        2141,
        2239
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "599": {
      "fn": "ERC20.name",
      "jump": "o",
      "offset": [
        2141,
        2239
      ],
      "op": "JUMP",
      "path": "43"
    },
    "600": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "601": {
      "fn": "ERC20.approve",
      "offset": [
        4321,
        4325
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x0"
    },
    "603": {
      "fn": "ERC20.approve",
      "offset": [
        4337,
        4376
      ],
      "op": "PUSH2",
      "path": "43",
      "statement": 5,
      "value": "0x265"
    },
    "606": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "70",
      "statement": 6
    },
    "607": {
      "fn": "ERC20.approve",
      "offset": [
        4360,
        4367
      ],
      "op": "DUP5",
      "path": "43"
    },
    "608": {
      "fn": "ERC20.approve",
      "offset": [
        4369,
        4375
      ],
      "op": "DUP5",
      "path": "43"
    },
    "609": {
      "fn": "ERC20.approve",
      "offset": [
        4337,
        4345
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x40D"
    },
    "612": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4337,
        4376
      ],
      "op": "JUMP",
      "path": "43"
    },
    "613": {
      "fn": "ERC20.approve",
      "offset": [
        4337,
        4376
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "614": {
      "op": "POP"
    },
    "615": {
      "fn": "ERC20.approve",
      "offset": [
        4393,
        4397
      ],
      "op": "PUSH1",
      "path": "43",
      "statement": 7,
      "value": "0x1"
    },
    "617": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "618": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "SWAP3",
      "path": "43"
    },
    "619": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "SWAP2",
      "path": "43"
    },
    "620": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "POP",
      "path": "43"
    },
    "621": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "POP",
      "path": "43"
    },
    "622": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        4238,
        4404
      ],
      "op": "JUMP",
      "path": "43"
    },
    "623": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4871,
        5349
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "624": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "626": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "628": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "630": {
      "op": "SHL"
    },
    "631": {
      "op": "SUB"
    },
    "632": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5069
      ],
      "op": "DUP4",
      "path": "43"
    },
    "633": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5069
      ],
      "op": "AND",
      "path": "43"
    },
    "634": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5007,
        5011
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x0"
    },
    "636": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5069
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "637": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5069
      ],
      "op": "DUP2",
      "path": "43"
    },
    "638": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5069
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "639": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5061
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x1"
    },
    "641": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5069
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x20"
    },
    "643": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5069
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "644": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5069
      ],
      "op": "DUP2",
      "path": "43"
    },
    "645": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5069
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "646": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5069
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "648": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5069
      ],
      "op": "DUP1",
      "path": "43"
    },
    "649": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5069
      ],
      "op": "DUP4",
      "path": "43"
    },
    "650": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5069
      ],
      "op": "KECCAK256",
      "path": "43"
    },
    "651": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "70"
    },
    "652": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5083
      ],
      "op": "DUP5",
      "path": "43"
    },
    "653": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5083
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "654": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5083
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "655": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5083
      ],
      "op": "SWAP2",
      "path": "43"
    },
    "656": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5083
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "657": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5083
      ],
      "op": "DUP2",
      "path": "43"
    },
    "658": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5083
      ],
      "op": "KECCAK256",
      "path": "43"
    },
    "659": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5050,
        5083
      ],
      "op": "SLOAD",
      "path": "43"
    },
    "660": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5101,
        5127
      ],
      "op": "DUP3",
      "path": "43",
      "statement": 8
    },
    "661": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5101,
        5127
      ],
      "op": "DUP2",
      "path": "43"
    },
    "662": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5101,
        5127
      ],
      "op": "LT",
      "path": "43"
    },
    "663": {
      "branch": 28,
      "fn": "ERC20.transferFrom",
      "offset": [
        5101,
        5127
      ],
      "op": "ISZERO",
      "path": "43"
    },
    "664": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5093,
        5172
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x2F9"
    },
    "667": {
      "branch": 28,
      "fn": "ERC20.transferFrom",
      "offset": [
        5093,
        5172
      ],
      "op": "JUMPI",
      "path": "43"
    },
    "668": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5093,
        5172
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "670": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5093,
        5172
      ],
      "op": "MLOAD",
      "path": "43"
    },
    "671": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "675": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "677": {
      "op": "SHL"
    },
    "678": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5093,
        5172
      ],
      "op": "DUP2",
      "path": "43"
    },
    "679": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5093,
        5172
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "680": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "682": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5093,
        5172
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x4"
    },
    "684": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5093,
        5172
      ],
      "op": "DUP3",
      "path": "43"
    },
    "685": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5093,
        5172
      ],
      "op": "ADD",
      "path": "43"
    },
    "686": {
      "op": "MSTORE"
    },
    "687": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "689": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "691": {
      "op": "DUP3"
    },
    "692": {
      "op": "ADD"
    },
    "693": {
      "op": "MSTORE"
    },
    "694": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732061"
    },
    "727": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "729": {
      "op": "DUP3"
    },
    "730": {
      "op": "ADD"
    },
    "731": {
      "op": "MSTORE"
    },
    "732": {
      "op": "PUSH8",
      "value": "0x6C6C6F77616E6365"
    },
    "741": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "743": {
      "op": "SHL"
    },
    "744": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "746": {
      "op": "DUP3"
    },
    "747": {
      "op": "ADD"
    },
    "748": {
      "op": "MSTORE"
    },
    "749": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "751": {
      "op": "ADD"
    },
    "752": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5093,
        5172
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "753": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5093,
        5172
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "755": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5093,
        5172
      ],
      "op": "MLOAD",
      "path": "43"
    },
    "756": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5093,
        5172
      ],
      "op": "DUP1",
      "path": "43"
    },
    "757": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5093,
        5172
      ],
      "op": "SWAP2",
      "path": "43"
    },
    "758": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5093,
        5172
      ],
      "op": "SUB",
      "path": "43"
    },
    "759": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5093,
        5172
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "760": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5093,
        5172
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "43"
    },
    "761": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5093,
        5172
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "762": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5206,
        5263
      ],
      "op": "PUSH2",
      "path": "43",
      "statement": 9,
      "value": "0x306"
    },
    "765": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5215,
        5221
      ],
      "op": "DUP6",
      "path": "43"
    },
    "766": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "70"
    },
    "767": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5256,
        5262
      ],
      "op": "DUP6",
      "path": "43"
    },
    "768": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5237,
        5253
      ],
      "op": "DUP5",
      "path": "43"
    },
    "769": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5237,
        5262
      ],
      "op": "SUB",
      "path": "43"
    },
    "770": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5206,
        5214
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x40D"
    },
    "773": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5206,
        5263
      ],
      "op": "JUMP",
      "path": "43"
    },
    "774": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5206,
        5263
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "775": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5284,
        5320
      ],
      "op": "PUSH2",
      "path": "43",
      "statement": 10,
      "value": "0x311"
    },
    "778": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5294,
        5300
      ],
      "op": "DUP6",
      "path": "43"
    },
    "779": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5302,
        5311
      ],
      "op": "DUP6",
      "path": "43"
    },
    "780": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5313,
        5319
      ],
      "op": "DUP6",
      "path": "43"
    },
    "781": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5284,
        5293
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x531"
    },
    "784": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5284,
        5320
      ],
      "op": "JUMP",
      "path": "43"
    },
    "785": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5284,
        5320
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "786": {
      "op": "POP"
    },
    "787": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5338,
        5342
      ],
      "op": "PUSH1",
      "path": "43",
      "statement": 11,
      "value": "0x1"
    },
    "789": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5338,
        5342
      ],
      "op": "SWAP5",
      "path": "43"
    },
    "790": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4871,
        5349
      ],
      "op": "SWAP4",
      "path": "43"
    },
    "791": {
      "op": "POP"
    },
    "792": {
      "op": "POP"
    },
    "793": {
      "op": "POP"
    },
    "794": {
      "op": "POP"
    },
    "795": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        4871,
        5349
      ],
      "op": "JUMP",
      "path": "43"
    },
    "796": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5744,
        5956
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "797": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "70"
    },
    "798": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5832,
        5836
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x0"
    },
    "800": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5905
      ],
      "op": "DUP2",
      "path": "43",
      "statement": 12
    },
    "801": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5905
      ],
      "op": "DUP2",
      "path": "43"
    },
    "802": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5905
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "803": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5891
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x1"
    },
    "805": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5905
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x20"
    },
    "807": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5905
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "808": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5905
      ],
      "op": "DUP2",
      "path": "43"
    },
    "809": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5905
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "810": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5905
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "812": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5905
      ],
      "op": "DUP1",
      "path": "43"
    },
    "813": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5905
      ],
      "op": "DUP4",
      "path": "43"
    },
    "814": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5905
      ],
      "op": "KECCAK256",
      "path": "43"
    },
    "815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "819": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "821": {
      "op": "SHL"
    },
    "822": {
      "op": "SUB"
    },
    "823": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5914
      ],
      "op": "DUP8",
      "path": "43"
    },
    "824": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5914
      ],
      "op": "AND",
      "path": "43"
    },
    "825": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5914
      ],
      "op": "DUP5",
      "path": "43"
    },
    "826": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5914
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "827": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5914
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "828": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5914
      ],
      "op": "SWAP2",
      "path": "43"
    },
    "829": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5914
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "830": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5914
      ],
      "op": "DUP2",
      "path": "43"
    },
    "831": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5914
      ],
      "op": "KECCAK256",
      "path": "43"
    },
    "832": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5914
      ],
      "op": "SLOAD",
      "path": "43"
    },
    "833": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5832,
        5836
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "834": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5832,
        5836
      ],
      "op": "SWAP2",
      "path": "43"
    },
    "835": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        5928
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x265"
    },
    "838": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        5928
      ],
      "op": "SWAP2",
      "path": "43"
    },
    "839": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5871,
        5878
      ],
      "op": "DUP6",
      "path": "43"
    },
    "840": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5871,
        5878
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "841": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5927
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x353"
    },
    "844": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5927
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "845": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5917,
        5927
      ],
      "op": "DUP7",
      "path": "43"
    },
    "846": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5917,
        5927
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "847": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5927
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x85F"
    },
    "850": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5880,
        5927
      ],
      "op": "JUMP",
      "path": "43"
    },
    "851": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5927
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "852": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        5856
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x40D"
    },
    "855": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5848,
        5928
      ],
      "op": "JUMP",
      "path": "43"
    },
    "856": {
      "fn": "ERC20.symbol",
      "offset": [
        2352,
        2454
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "857": {
      "fn": "ERC20.symbol",
      "offset": [
        2408,
        2421
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x60"
    },
    "859": {
      "fn": "ERC20.symbol",
      "offset": [
        2440,
        2447
      ],
      "op": "PUSH1",
      "path": "43",
      "statement": 13,
      "value": "0x4"
    },
    "861": {
      "fn": "ERC20.symbol",
      "offset": [
        2433,
        2447
      ],
      "op": "DUP1",
      "path": "43"
    },
    "862": {
      "fn": "ERC20.symbol",
      "offset": [
        2433,
        2447
      ],
      "op": "SLOAD",
      "path": "43"
    },
    "863": {
      "fn": "ERC20.symbol",
      "offset": [
        2433,
        2447
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x1D5"
    },
    "866": {
      "fn": "ERC20.symbol",
      "offset": [
        2433,
        2447
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "867": {
      "fn": "ERC20.symbol",
      "offset": [
        2433,
        2447
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x825"
    },
    "870": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2433,
        2447
      ],
      "op": "JUMP",
      "path": "43"
    },
    "871": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6443,
        6848
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "872": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "70"
    },
    "873": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6536,
        6540
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x0"
    },
    "875": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6604
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "876": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6604
      ],
      "op": "DUP2",
      "path": "43"
    },
    "877": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6604
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "878": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6590
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x1"
    },
    "880": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6604
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x20"
    },
    "882": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6604
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "883": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6604
      ],
      "op": "DUP2",
      "path": "43"
    },
    "884": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6604
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "885": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6604
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "887": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6604
      ],
      "op": "DUP1",
      "path": "43"
    },
    "888": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6604
      ],
      "op": "DUP4",
      "path": "43"
    },
    "889": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6604
      ],
      "op": "KECCAK256",
      "path": "43"
    },
    "890": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "894": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "896": {
      "op": "SHL"
    },
    "897": {
      "op": "SUB"
    },
    "898": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6613
      ],
      "op": "DUP7",
      "path": "43"
    },
    "899": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6613
      ],
      "op": "AND",
      "path": "43"
    },
    "900": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6613
      ],
      "op": "DUP5",
      "path": "43"
    },
    "901": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6613
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "902": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6613
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "903": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6613
      ],
      "op": "SWAP2",
      "path": "43"
    },
    "904": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6613
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "905": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6613
      ],
      "op": "DUP2",
      "path": "43"
    },
    "906": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6613
      ],
      "op": "KECCAK256",
      "path": "43"
    },
    "907": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6613
      ],
      "op": "SLOAD",
      "path": "43"
    },
    "908": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6631,
        6666
      ],
      "op": "DUP3",
      "path": "43",
      "statement": 14
    },
    "909": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6631,
        6666
      ],
      "op": "DUP2",
      "path": "43"
    },
    "910": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6631,
        6666
      ],
      "op": "LT",
      "path": "43"
    },
    "911": {
      "branch": 29,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6631,
        6666
      ],
      "op": "ISZERO",
      "path": "43"
    },
    "912": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6623,
        6708
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x3E9"
    },
    "915": {
      "branch": 29,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6623,
        6708
      ],
      "op": "JUMPI",
      "path": "43"
    },
    "916": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6623,
        6708
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "918": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6623,
        6708
      ],
      "op": "MLOAD",
      "path": "43"
    },
    "919": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "923": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "925": {
      "op": "SHL"
    },
    "926": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6623,
        6708
      ],
      "op": "DUP2",
      "path": "43"
    },
    "927": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6623,
        6708
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "928": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "930": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6623,
        6708
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x4"
    },
    "932": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6623,
        6708
      ],
      "op": "DUP3",
      "path": "43"
    },
    "933": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6623,
        6708
      ],
      "op": "ADD",
      "path": "43"
    },
    "934": {
      "op": "MSTORE"
    },
    "935": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "937": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "939": {
      "op": "DUP3"
    },
    "940": {
      "op": "ADD"
    },
    "941": {
      "op": "MSTORE"
    },
    "942": {
      "op": "PUSH32",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "975": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "977": {
      "op": "DUP3"
    },
    "978": {
      "op": "ADD"
    },
    "979": {
      "op": "MSTORE"
    },
    "980": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "986": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "988": {
      "op": "SHL"
    },
    "989": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "991": {
      "op": "DUP3"
    },
    "992": {
      "op": "ADD"
    },
    "993": {
      "op": "MSTORE"
    },
    "994": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "996": {
      "op": "ADD"
    },
    "997": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6623,
        6708
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x2F0"
    },
    "1000": {
      "op": "JUMP"
    },
    "1001": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6623,
        6708
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "1002": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6742,
        6809
      ],
      "op": "PUSH2",
      "path": "43",
      "statement": 15,
      "value": "0x3F6"
    },
    "1005": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "70"
    },
    "1006": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6765,
        6772
      ],
      "op": "DUP6",
      "path": "43"
    },
    "1007": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6793,
        6808
      ],
      "op": "DUP6",
      "path": "43"
    },
    "1008": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6774,
        6790
      ],
      "op": "DUP5",
      "path": "43"
    },
    "1009": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6774,
        6808
      ],
      "op": "SUB",
      "path": "43"
    },
    "1010": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6742,
        6750
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x40D"
    },
    "1013": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6742,
        6809
      ],
      "op": "JUMP",
      "path": "43"
    },
    "1014": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6742,
        6809
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "1015": {
      "op": "POP"
    },
    "1016": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6837,
        6841
      ],
      "op": "PUSH1",
      "path": "43",
      "statement": 16,
      "value": "0x1"
    },
    "1018": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6837,
        6841
      ],
      "op": "SWAP4",
      "path": "43"
    },
    "1019": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6443,
        6848
      ],
      "op": "SWAP3",
      "path": "43"
    },
    "1020": {
      "op": "POP"
    },
    "1021": {
      "op": "POP"
    },
    "1022": {
      "op": "POP"
    },
    "1023": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "o",
      "offset": [
        6443,
        6848
      ],
      "op": "JUMP",
      "path": "43"
    },
    "1024": {
      "fn": "ERC20.transfer",
      "offset": [
        3721,
        3893
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "1025": {
      "fn": "ERC20.transfer",
      "offset": [
        3807,
        3811
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x0"
    },
    "1027": {
      "fn": "ERC20.transfer",
      "offset": [
        3823,
        3865
      ],
      "op": "PUSH2",
      "path": "43",
      "statement": 17,
      "value": "0x265"
    },
    "1030": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "70"
    },
    "1031": {
      "fn": "ERC20.transfer",
      "offset": [
        3847,
        3856
      ],
      "op": "DUP5",
      "path": "43"
    },
    "1032": {
      "fn": "ERC20.transfer",
      "offset": [
        3858,
        3864
      ],
      "op": "DUP5",
      "path": "43"
    },
    "1033": {
      "fn": "ERC20.transfer",
      "offset": [
        3823,
        3832
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x531"
    },
    "1036": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3823,
        3865
      ],
      "op": "JUMP",
      "path": "43"
    },
    "1037": {
      "fn": "ERC20._approve",
      "offset": [
        10019,
        10389
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "1038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1040": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1042": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1044": {
      "op": "SHL"
    },
    "1045": {
      "op": "SUB"
    },
    "1046": {
      "fn": "ERC20._approve",
      "offset": [
        10150,
        10169
      ],
      "op": "DUP4",
      "path": "43",
      "statement": 18
    },
    "1047": {
      "branch": 30,
      "fn": "ERC20._approve",
      "offset": [
        10150,
        10169
      ],
      "op": "AND",
      "path": "43"
    },
    "1048": {
      "fn": "ERC20._approve",
      "offset": [
        10142,
        10210
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x46F"
    },
    "1051": {
      "branch": 30,
      "fn": "ERC20._approve",
      "offset": [
        10142,
        10210
      ],
      "op": "JUMPI",
      "path": "43"
    },
    "1052": {
      "fn": "ERC20._approve",
      "offset": [
        10142,
        10210
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "1054": {
      "fn": "ERC20._approve",
      "offset": [
        10142,
        10210
      ],
      "op": "MLOAD",
      "path": "43"
    },
    "1055": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1059": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1061": {
      "op": "SHL"
    },
    "1062": {
      "fn": "ERC20._approve",
      "offset": [
        10142,
        10210
      ],
      "op": "DUP2",
      "path": "43"
    },
    "1063": {
      "fn": "ERC20._approve",
      "offset": [
        10142,
        10210
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "1064": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1066": {
      "fn": "ERC20._approve",
      "offset": [
        10142,
        10210
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x4"
    },
    "1068": {
      "fn": "ERC20._approve",
      "offset": [
        10142,
        10210
      ],
      "op": "DUP3",
      "path": "43"
    },
    "1069": {
      "fn": "ERC20._approve",
      "offset": [
        10142,
        10210
      ],
      "op": "ADD",
      "path": "43"
    },
    "1070": {
      "op": "MSTORE"
    },
    "1071": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1073": {
      "op": "DUP1"
    },
    "1074": {
      "op": "DUP3"
    },
    "1075": {
      "op": "ADD"
    },
    "1076": {
      "op": "MSTORE"
    },
    "1077": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "1110": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1112": {
      "op": "DUP3"
    },
    "1113": {
      "op": "ADD"
    },
    "1114": {
      "op": "MSTORE"
    },
    "1115": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "1120": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1122": {
      "op": "SHL"
    },
    "1123": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1125": {
      "op": "DUP3"
    },
    "1126": {
      "op": "ADD"
    },
    "1127": {
      "op": "MSTORE"
    },
    "1128": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1130": {
      "op": "ADD"
    },
    "1131": {
      "fn": "ERC20._approve",
      "offset": [
        10142,
        10210
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x2F0"
    },
    "1134": {
      "op": "JUMP"
    },
    "1135": {
      "fn": "ERC20._approve",
      "offset": [
        10142,
        10210
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "1136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1140": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1142": {
      "op": "SHL"
    },
    "1143": {
      "op": "SUB"
    },
    "1144": {
      "fn": "ERC20._approve",
      "offset": [
        10228,
        10249
      ],
      "op": "DUP3",
      "path": "43",
      "statement": 19
    },
    "1145": {
      "branch": 31,
      "fn": "ERC20._approve",
      "offset": [
        10228,
        10249
      ],
      "op": "AND",
      "path": "43"
    },
    "1146": {
      "fn": "ERC20._approve",
      "offset": [
        10220,
        10288
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x4D0"
    },
    "1149": {
      "branch": 31,
      "fn": "ERC20._approve",
      "offset": [
        10220,
        10288
      ],
      "op": "JUMPI",
      "path": "43"
    },
    "1150": {
      "fn": "ERC20._approve",
      "offset": [
        10220,
        10288
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "1152": {
      "fn": "ERC20._approve",
      "offset": [
        10220,
        10288
      ],
      "op": "MLOAD",
      "path": "43"
    },
    "1153": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1157": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1159": {
      "op": "SHL"
    },
    "1160": {
      "fn": "ERC20._approve",
      "offset": [
        10220,
        10288
      ],
      "op": "DUP2",
      "path": "43"
    },
    "1161": {
      "fn": "ERC20._approve",
      "offset": [
        10220,
        10288
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "1162": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1164": {
      "fn": "ERC20._approve",
      "offset": [
        10220,
        10288
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x4"
    },
    "1166": {
      "fn": "ERC20._approve",
      "offset": [
        10220,
        10288
      ],
      "op": "DUP3",
      "path": "43"
    },
    "1167": {
      "fn": "ERC20._approve",
      "offset": [
        10220,
        10288
      ],
      "op": "ADD",
      "path": "43"
    },
    "1168": {
      "op": "MSTORE"
    },
    "1169": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "1171": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1173": {
      "op": "DUP3"
    },
    "1174": {
      "op": "ADD"
    },
    "1175": {
      "op": "MSTORE"
    },
    "1176": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "1209": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1211": {
      "op": "DUP3"
    },
    "1212": {
      "op": "ADD"
    },
    "1213": {
      "op": "MSTORE"
    },
    "1214": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "1217": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "1219": {
      "op": "SHL"
    },
    "1220": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1222": {
      "op": "DUP3"
    },
    "1223": {
      "op": "ADD"
    },
    "1224": {
      "op": "MSTORE"
    },
    "1225": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1227": {
      "op": "ADD"
    },
    "1228": {
      "fn": "ERC20._approve",
      "offset": [
        10220,
        10288
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x2F0"
    },
    "1231": {
      "op": "JUMP"
    },
    "1232": {
      "fn": "ERC20._approve",
      "offset": [
        10220,
        10288
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "1233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1237": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1239": {
      "op": "SHL"
    },
    "1240": {
      "op": "SUB"
    },
    "1241": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10317
      ],
      "op": "DUP4",
      "path": "43",
      "statement": 20
    },
    "1242": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10317
      ],
      "op": "DUP2",
      "path": "43"
    },
    "1243": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10317
      ],
      "op": "AND",
      "path": "43"
    },
    "1244": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10317
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x0"
    },
    "1246": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10317
      ],
      "op": "DUP2",
      "path": "43"
    },
    "1247": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10317
      ],
      "op": "DUP2",
      "path": "43"
    },
    "1248": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10317
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "1249": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10310
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x1"
    },
    "1251": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10317
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x20"
    },
    "1253": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10317
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "1254": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10317
      ],
      "op": "DUP2",
      "path": "43"
    },
    "1255": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10317
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "1256": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10317
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "1258": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10317
      ],
      "op": "DUP1",
      "path": "43"
    },
    "1259": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10317
      ],
      "op": "DUP4",
      "path": "43"
    },
    "1260": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10317
      ],
      "op": "KECCAK256",
      "path": "43"
    },
    "1261": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10326
      ],
      "op": "SWAP5",
      "path": "43"
    },
    "1262": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10326
      ],
      "op": "DUP8",
      "path": "43"
    },
    "1263": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10326
      ],
      "op": "AND",
      "path": "43"
    },
    "1264": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10326
      ],
      "op": "DUP1",
      "path": "43"
    },
    "1265": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10326
      ],
      "op": "DUP5",
      "path": "43"
    },
    "1266": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10326
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "1267": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10326
      ],
      "op": "SWAP5",
      "path": "43"
    },
    "1268": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10326
      ],
      "op": "DUP3",
      "path": "43"
    },
    "1269": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10326
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "1270": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10326
      ],
      "op": "SWAP2",
      "path": "43"
    },
    "1271": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10326
      ],
      "op": "DUP3",
      "path": "43"
    },
    "1272": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10326
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "1273": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10326
      ],
      "op": "KECCAK256",
      "path": "43"
    },
    "1274": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10335
      ],
      "op": "DUP6",
      "path": "43"
    },
    "1275": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10335
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "1276": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10335
      ],
      "op": "SSTORE",
      "path": "43"
    },
    "1277": {
      "fn": "ERC20._approve",
      "offset": [
        10350,
        10382
      ],
      "op": "SWAP1",
      "path": "43",
      "statement": 21
    },
    "1278": {
      "fn": "ERC20._approve",
      "offset": [
        10350,
        10382
      ],
      "op": "MLOAD",
      "path": "43"
    },
    "1279": {
      "op": "DUP5"
    },
    "1280": {
      "op": "DUP2"
    },
    "1281": {
      "op": "MSTORE"
    },
    "1282": {
      "fn": "ERC20._approve",
      "offset": [
        10350,
        10382
      ],
      "op": "PUSH32",
      "path": "43",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "1315": {
      "fn": "ERC20._approve",
      "offset": [
        10350,
        10382
      ],
      "op": "SWAP2",
      "path": "43"
    },
    "1316": {
      "op": "ADD"
    },
    "1317": {
      "fn": "ERC20._approve",
      "offset": [
        10350,
        10382
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "1319": {
      "fn": "ERC20._approve",
      "offset": [
        10350,
        10382
      ],
      "op": "MLOAD",
      "path": "43"
    },
    "1320": {
      "fn": "ERC20._approve",
      "offset": [
        10350,
        10382
      ],
      "op": "DUP1",
      "path": "43"
    },
    "1321": {
      "fn": "ERC20._approve",
      "offset": [
        10350,
        10382
      ],
      "op": "SWAP2",
      "path": "43"
    },
    "1322": {
      "fn": "ERC20._approve",
      "offset": [
        10350,
        10382
      ],
      "op": "SUB",
      "path": "43"
    },
    "1323": {
      "fn": "ERC20._approve",
      "offset": [
        10350,
        10382
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "1324": {
      "fn": "ERC20._approve",
      "offset": [
        10350,
        10382
      ],
      "op": "LOG3",
      "path": "43"
    },
    "1325": {
      "fn": "ERC20._approve",
      "offset": [
        10019,
        10389
      ],
      "op": "POP",
      "path": "43"
    },
    "1326": {
      "fn": "ERC20._approve",
      "offset": [
        10019,
        10389
      ],
      "op": "POP",
      "path": "43"
    },
    "1327": {
      "fn": "ERC20._approve",
      "offset": [
        10019,
        10389
      ],
      "op": "POP",
      "path": "43"
    },
    "1328": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        10019,
        10389
      ],
      "op": "JUMP",
      "path": "43"
    },
    "1329": {
      "fn": "ERC20._transfer",
      "offset": [
        7322,
        8035
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "1330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1334": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1336": {
      "op": "SHL"
    },
    "1337": {
      "op": "SUB"
    },
    "1338": {
      "fn": "ERC20._transfer",
      "offset": [
        7457,
        7477
      ],
      "op": "DUP4",
      "path": "43",
      "statement": 22
    },
    "1339": {
      "branch": 32,
      "fn": "ERC20._transfer",
      "offset": [
        7457,
        7477
      ],
      "op": "AND",
      "path": "43"
    },
    "1340": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7519
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x595"
    },
    "1343": {
      "branch": 32,
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7519
      ],
      "op": "JUMPI",
      "path": "43"
    },
    "1344": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7519
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "1346": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7519
      ],
      "op": "MLOAD",
      "path": "43"
    },
    "1347": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1351": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1353": {
      "op": "SHL"
    },
    "1354": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7519
      ],
      "op": "DUP2",
      "path": "43"
    },
    "1355": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7519
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "1356": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1358": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7519
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x4"
    },
    "1360": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7519
      ],
      "op": "DUP3",
      "path": "43"
    },
    "1361": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7519
      ],
      "op": "ADD",
      "path": "43"
    },
    "1362": {
      "op": "MSTORE"
    },
    "1363": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "1365": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1367": {
      "op": "DUP3"
    },
    "1368": {
      "op": "ADD"
    },
    "1369": {
      "op": "MSTORE"
    },
    "1370": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "1403": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1405": {
      "op": "DUP3"
    },
    "1406": {
      "op": "ADD"
    },
    "1407": {
      "op": "MSTORE"
    },
    "1408": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "1414": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "1416": {
      "op": "SHL"
    },
    "1417": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1419": {
      "op": "DUP3"
    },
    "1420": {
      "op": "ADD"
    },
    "1421": {
      "op": "MSTORE"
    },
    "1422": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1424": {
      "op": "ADD"
    },
    "1425": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7519
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x2F0"
    },
    "1428": {
      "op": "JUMP"
    },
    "1429": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7519
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "1430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1434": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1436": {
      "op": "SHL"
    },
    "1437": {
      "op": "SUB"
    },
    "1438": {
      "fn": "ERC20._transfer",
      "offset": [
        7537,
        7560
      ],
      "op": "DUP3",
      "path": "43",
      "statement": 23
    },
    "1439": {
      "branch": 33,
      "fn": "ERC20._transfer",
      "offset": [
        7537,
        7560
      ],
      "op": "AND",
      "path": "43"
    },
    "1440": {
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7600
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x5F7"
    },
    "1443": {
      "branch": 33,
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7600
      ],
      "op": "JUMPI",
      "path": "43"
    },
    "1444": {
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7600
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "1446": {
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7600
      ],
      "op": "MLOAD",
      "path": "43"
    },
    "1447": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1451": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1453": {
      "op": "SHL"
    },
    "1454": {
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7600
      ],
      "op": "DUP2",
      "path": "43"
    },
    "1455": {
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7600
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "1456": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1458": {
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7600
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x4"
    },
    "1460": {
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7600
      ],
      "op": "DUP3",
      "path": "43"
    },
    "1461": {
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7600
      ],
      "op": "ADD",
      "path": "43"
    },
    "1462": {
      "op": "MSTORE"
    },
    "1463": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "1465": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1467": {
      "op": "DUP3"
    },
    "1468": {
      "op": "ADD"
    },
    "1469": {
      "op": "MSTORE"
    },
    "1470": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "1503": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1505": {
      "op": "DUP3"
    },
    "1506": {
      "op": "ADD"
    },
    "1507": {
      "op": "MSTORE"
    },
    "1508": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "1512": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "1514": {
      "op": "SHL"
    },
    "1515": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1517": {
      "op": "DUP3"
    },
    "1518": {
      "op": "ADD"
    },
    "1519": {
      "op": "MSTORE"
    },
    "1520": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1522": {
      "op": "ADD"
    },
    "1523": {
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7600
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x2F0"
    },
    "1526": {
      "op": "JUMP"
    },
    "1527": {
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7600
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "1528": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1530": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1532": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1534": {
      "op": "SHL"
    },
    "1535": {
      "op": "SUB"
    },
    "1536": {
      "fn": "ERC20._transfer",
      "offset": [
        7693,
        7710
      ],
      "op": "DUP4",
      "path": "43"
    },
    "1537": {
      "fn": "ERC20._transfer",
      "offset": [
        7693,
        7710
      ],
      "op": "AND",
      "path": "43"
    },
    "1538": {
      "fn": "ERC20._transfer",
      "offset": [
        7669,
        7690
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x0"
    },
    "1540": {
      "fn": "ERC20._transfer",
      "offset": [
        7693,
        7710
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "1541": {
      "fn": "ERC20._transfer",
      "offset": [
        7693,
        7710
      ],
      "op": "DUP2",
      "path": "43"
    },
    "1542": {
      "fn": "ERC20._transfer",
      "offset": [
        7693,
        7710
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "1543": {
      "fn": "ERC20._transfer",
      "offset": [
        7693,
        7710
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x20"
    },
    "1545": {
      "fn": "ERC20._transfer",
      "offset": [
        7693,
        7710
      ],
      "op": "DUP2",
      "path": "43"
    },
    "1546": {
      "fn": "ERC20._transfer",
      "offset": [
        7693,
        7710
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "1547": {
      "fn": "ERC20._transfer",
      "offset": [
        7693,
        7710
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "1548": {
      "fn": "ERC20._transfer",
      "offset": [
        7693,
        7710
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "1550": {
      "fn": "ERC20._transfer",
      "offset": [
        7693,
        7710
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "1551": {
      "fn": "ERC20._transfer",
      "offset": [
        7693,
        7710
      ],
      "op": "KECCAK256",
      "path": "43"
    },
    "1552": {
      "fn": "ERC20._transfer",
      "offset": [
        7693,
        7710
      ],
      "op": "SLOAD",
      "path": "43"
    },
    "1553": {
      "fn": "ERC20._transfer",
      "offset": [
        7728,
        7751
      ],
      "op": "DUP2",
      "path": "43",
      "statement": 24
    },
    "1554": {
      "fn": "ERC20._transfer",
      "offset": [
        7728,
        7751
      ],
      "op": "DUP2",
      "path": "43"
    },
    "1555": {
      "fn": "ERC20._transfer",
      "offset": [
        7728,
        7751
      ],
      "op": "LT",
      "path": "43"
    },
    "1556": {
      "branch": 34,
      "fn": "ERC20._transfer",
      "offset": [
        7728,
        7751
      ],
      "op": "ISZERO",
      "path": "43"
    },
    "1557": {
      "fn": "ERC20._transfer",
      "offset": [
        7720,
        7794
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x66F"
    },
    "1560": {
      "branch": 34,
      "fn": "ERC20._transfer",
      "offset": [
        7720,
        7794
      ],
      "op": "JUMPI",
      "path": "43"
    },
    "1561": {
      "fn": "ERC20._transfer",
      "offset": [
        7720,
        7794
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "1563": {
      "fn": "ERC20._transfer",
      "offset": [
        7720,
        7794
      ],
      "op": "MLOAD",
      "path": "43"
    },
    "1564": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1568": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1570": {
      "op": "SHL"
    },
    "1571": {
      "fn": "ERC20._transfer",
      "offset": [
        7720,
        7794
      ],
      "op": "DUP2",
      "path": "43"
    },
    "1572": {
      "fn": "ERC20._transfer",
      "offset": [
        7720,
        7794
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "1573": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1575": {
      "fn": "ERC20._transfer",
      "offset": [
        7720,
        7794
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x4"
    },
    "1577": {
      "fn": "ERC20._transfer",
      "offset": [
        7720,
        7794
      ],
      "op": "DUP3",
      "path": "43"
    },
    "1578": {
      "fn": "ERC20._transfer",
      "offset": [
        7720,
        7794
      ],
      "op": "ADD",
      "path": "43"
    },
    "1579": {
      "op": "MSTORE"
    },
    "1580": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1582": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1584": {
      "op": "DUP3"
    },
    "1585": {
      "op": "ADD"
    },
    "1586": {
      "op": "MSTORE"
    },
    "1587": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "1620": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1622": {
      "op": "DUP3"
    },
    "1623": {
      "op": "ADD"
    },
    "1624": {
      "op": "MSTORE"
    },
    "1625": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "1632": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "1634": {
      "op": "SHL"
    },
    "1635": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1637": {
      "op": "DUP3"
    },
    "1638": {
      "op": "ADD"
    },
    "1639": {
      "op": "MSTORE"
    },
    "1640": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1642": {
      "op": "ADD"
    },
    "1643": {
      "fn": "ERC20._transfer",
      "offset": [
        7720,
        7794
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x2F0"
    },
    "1646": {
      "op": "JUMP"
    },
    "1647": {
      "fn": "ERC20._transfer",
      "offset": [
        7720,
        7794
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "1648": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1650": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1652": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1654": {
      "op": "SHL"
    },
    "1655": {
      "op": "SUB"
    },
    "1656": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7845
      ],
      "op": "DUP1",
      "path": "43",
      "statement": 25
    },
    "1657": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7845
      ],
      "op": "DUP6",
      "path": "43"
    },
    "1658": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7845
      ],
      "op": "AND",
      "path": "43"
    },
    "1659": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7837
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x0"
    },
    "1661": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7845
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "1662": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7845
      ],
      "op": "DUP2",
      "path": "43"
    },
    "1663": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7845
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "1664": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7845
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x20"
    },
    "1666": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7845
      ],
      "op": "DUP2",
      "path": "43"
    },
    "1667": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7845
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "1668": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7845
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "1669": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7845
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "1671": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7845
      ],
      "op": "DUP1",
      "path": "43"
    },
    "1672": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7845
      ],
      "op": "DUP3",
      "path": "43"
    },
    "1673": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7845
      ],
      "op": "KECCAK256",
      "path": "43"
    },
    "1674": {
      "fn": "ERC20._transfer",
      "offset": [
        7848,
        7870
      ],
      "op": "DUP6",
      "path": "43"
    },
    "1675": {
      "fn": "ERC20._transfer",
      "offset": [
        7848,
        7870
      ],
      "op": "DUP6",
      "path": "43"
    },
    "1676": {
      "fn": "ERC20._transfer",
      "offset": [
        7848,
        7870
      ],
      "op": "SUB",
      "path": "43"
    },
    "1677": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7870
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "1678": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7870
      ],
      "op": "SSTORE",
      "path": "43"
    },
    "1679": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7910
      ],
      "op": "SWAP2",
      "path": "43",
      "statement": 26
    },
    "1680": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7910
      ],
      "op": "DUP6",
      "path": "43"
    },
    "1681": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7910
      ],
      "op": "AND",
      "path": "43"
    },
    "1682": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7910
      ],
      "op": "DUP2",
      "path": "43"
    },
    "1683": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7910
      ],
      "op": "MSTORE",
      "path": "43"
    },
    "1684": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7910
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "1685": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7910
      ],
      "op": "DUP2",
      "path": "43"
    },
    "1686": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7910
      ],
      "op": "KECCAK256",
      "path": "43"
    },
    "1687": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7920
      ],
      "op": "DUP1",
      "path": "43"
    },
    "1688": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7920
      ],
      "op": "SLOAD",
      "path": "43"
    },
    "1689": {
      "fn": "ERC20._transfer",
      "offset": [
        7864,
        7870
      ],
      "op": "DUP5",
      "path": "43"
    },
    "1690": {
      "fn": "ERC20._transfer",
      "offset": [
        7864,
        7870
      ],
      "op": "SWAP3",
      "path": "43"
    },
    "1691": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7837
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "1692": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7920
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x6A6"
    },
    "1695": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7920
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "1696": {
      "fn": "ERC20._transfer",
      "offset": [
        7864,
        7870
      ],
      "op": "DUP5",
      "path": "43"
    },
    "1697": {
      "fn": "ERC20._transfer",
      "offset": [
        7864,
        7870
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "1698": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7920
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x85F"
    },
    "1701": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7890,
        7920
      ],
      "op": "JUMP",
      "path": "43"
    },
    "1702": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7920
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "1703": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7920
      ],
      "op": "SWAP3",
      "path": "43"
    },
    "1704": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7920
      ],
      "op": "POP",
      "path": "43"
    },
    "1705": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7920
      ],
      "op": "POP",
      "path": "43"
    },
    "1706": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7920
      ],
      "op": "DUP2",
      "path": "43"
    },
    "1707": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7920
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "1708": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7920
      ],
      "op": "SSTORE",
      "path": "43"
    },
    "1709": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7920
      ],
      "op": "POP",
      "path": "43"
    },
    "1710": {
      "fn": "ERC20._transfer",
      "offset": [
        7953,
        7962
      ],
      "op": "DUP3",
      "path": "43",
      "statement": 27
    },
    "1711": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1715": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1717": {
      "op": "SHL"
    },
    "1718": {
      "op": "SUB"
    },
    "1719": {
      "fn": "ERC20._transfer",
      "offset": [
        7936,
        7971
      ],
      "op": "AND",
      "path": "43"
    },
    "1720": {
      "fn": "ERC20._transfer",
      "offset": [
        7945,
        7951
      ],
      "op": "DUP5",
      "path": "43"
    },
    "1721": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1725": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1727": {
      "op": "SHL"
    },
    "1728": {
      "op": "SUB"
    },
    "1729": {
      "fn": "ERC20._transfer",
      "offset": [
        7936,
        7971
      ],
      "op": "AND",
      "path": "43"
    },
    "1730": {
      "fn": "ERC20._transfer",
      "offset": [
        7936,
        7971
      ],
      "op": "PUSH32",
      "path": "43",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "1763": {
      "fn": "ERC20._transfer",
      "offset": [
        7964,
        7970
      ],
      "op": "DUP5",
      "path": "43"
    },
    "1764": {
      "fn": "ERC20._transfer",
      "offset": [
        7936,
        7971
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "1766": {
      "fn": "ERC20._transfer",
      "offset": [
        7936,
        7971
      ],
      "op": "MLOAD",
      "path": "43"
    },
    "1767": {
      "fn": "ERC20._transfer",
      "offset": [
        7936,
        7971
      ],
      "op": "PUSH2",
      "path": "43",
      "value": "0x6F2"
    },
    "1770": {
      "fn": "ERC20._transfer",
      "offset": [
        7936,
        7971
      ],
      "op": "SWAP2",
      "path": "43"
    },
    "1771": {
      "op": "DUP2"
    },
    "1772": {
      "op": "MSTORE"
    },
    "1773": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1775": {
      "op": "ADD"
    },
    "1776": {
      "op": "SWAP1"
    },
    "1777": {
      "op": "JUMP"
    },
    "1778": {
      "fn": "ERC20._transfer",
      "offset": [
        7936,
        7971
      ],
      "op": "JUMPDEST",
      "path": "43"
    },
    "1779": {
      "fn": "ERC20._transfer",
      "offset": [
        7936,
        7971
      ],
      "op": "PUSH1",
      "path": "43",
      "value": "0x40"
    },
    "1781": {
      "fn": "ERC20._transfer",
      "offset": [
        7936,
        7971
      ],
      "op": "MLOAD",
      "path": "43"
    },
    "1782": {
      "fn": "ERC20._transfer",
      "offset": [
        7936,
        7971
      ],
      "op": "DUP1",
      "path": "43"
    },
    "1783": {
      "fn": "ERC20._transfer",
      "offset": [
        7936,
        7971
      ],
      "op": "SWAP2",
      "path": "43"
    },
    "1784": {
      "fn": "ERC20._transfer",
      "offset": [
        7936,
        7971
      ],
      "op": "SUB",
      "path": "43"
    },
    "1785": {
      "fn": "ERC20._transfer",
      "offset": [
        7936,
        7971
      ],
      "op": "SWAP1",
      "path": "43"
    },
    "1786": {
      "fn": "ERC20._transfer",
      "offset": [
        7936,
        7971
      ],
      "op": "LOG3",
      "path": "43"
    },
    "1787": {
      "fn": "ERC20._transfer",
      "offset": [
        7439,
        8035
      ],
      "op": "POP",
      "path": "43"
    },
    "1788": {
      "fn": "ERC20._transfer",
      "offset": [
        7322,
        8035
      ],
      "op": "POP",
      "path": "43"
    },
    "1789": {
      "fn": "ERC20._transfer",
      "offset": [
        7322,
        8035
      ],
      "op": "POP",
      "path": "43"
    },
    "1790": {
      "fn": "ERC20._transfer",
      "offset": [
        7322,
        8035
      ],
      "op": "POP",
      "path": "43"
    },
    "1791": {
      "fn": "ERC20._transfer",
      "jump": "o",
      "offset": [
        7322,
        8035
      ],
      "op": "JUMP",
      "path": "43"
    },
    "1792": {
      "op": "JUMPDEST"
    },
    "1793": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1795": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1797": {
      "op": "DUP1"
    },
    "1798": {
      "op": "DUP4"
    },
    "1799": {
      "op": "MSTORE"
    },
    "1800": {
      "op": "DUP4"
    },
    "1801": {
      "op": "MLOAD"
    },
    "1802": {
      "op": "DUP1"
    },
    "1803": {
      "op": "DUP3"
    },
    "1804": {
      "op": "DUP6"
    },
    "1805": {
      "op": "ADD"
    },
    "1806": {
      "op": "MSTORE"
    },
    "1807": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1809": {
      "op": "JUMPDEST"
    },
    "1810": {
      "op": "DUP2"
    },
    "1811": {
      "op": "DUP2"
    },
    "1812": {
      "op": "LT"
    },
    "1813": {
      "op": "ISZERO"
    },
    "1814": {
      "op": "PUSH2",
      "value": "0x72D"
    },
    "1817": {
      "op": "JUMPI"
    },
    "1818": {
      "op": "DUP6"
    },
    "1819": {
      "op": "DUP2"
    },
    "1820": {
      "op": "ADD"
    },
    "1821": {
      "op": "DUP4"
    },
    "1822": {
      "op": "ADD"
    },
    "1823": {
      "op": "MLOAD"
    },
    "1824": {
      "op": "DUP6"
    },
    "1825": {
      "op": "DUP3"
    },
    "1826": {
      "op": "ADD"
    },
    "1827": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1829": {
      "op": "ADD"
    },
    "1830": {
      "op": "MSTORE"
    },
    "1831": {
      "op": "DUP3"
    },
    "1832": {
      "op": "ADD"
    },
    "1833": {
      "op": "PUSH2",
      "value": "0x711"
    },
    "1836": {
      "op": "JUMP"
    },
    "1837": {
      "op": "JUMPDEST"
    },
    "1838": {
      "op": "POP"
    },
    "1839": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1841": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1843": {
      "op": "DUP3"
    },
    "1844": {
      "op": "DUP7"
    },
    "1845": {
      "op": "ADD"
    },
    "1846": {
      "op": "ADD"
    },
    "1847": {
      "op": "MSTORE"
    },
    "1848": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1850": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1852": {
      "op": "NOT"
    },
    "1853": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1855": {
      "op": "DUP4"
    },
    "1856": {
      "op": "ADD"
    },
    "1857": {
      "op": "AND"
    },
    "1858": {
      "op": "DUP6"
    },
    "1859": {
      "op": "ADD"
    },
    "1860": {
      "op": "ADD"
    },
    "1861": {
      "op": "SWAP3"
    },
    "1862": {
      "op": "POP"
    },
    "1863": {
      "op": "POP"
    },
    "1864": {
      "op": "POP"
    },
    "1865": {
      "op": "SWAP3"
    },
    "1866": {
      "op": "SWAP2"
    },
    "1867": {
      "op": "POP"
    },
    "1868": {
      "op": "POP"
    },
    "1869": {
      "jump": "o",
      "op": "JUMP"
    },
    "1870": {
      "op": "JUMPDEST"
    },
    "1871": {
      "op": "DUP1"
    },
    "1872": {
      "op": "CALLDATALOAD"
    },
    "1873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1877": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1879": {
      "op": "SHL"
    },
    "1880": {
      "op": "SUB"
    },
    "1881": {
      "op": "DUP2"
    },
    "1882": {
      "op": "AND"
    },
    "1883": {
      "op": "DUP2"
    },
    "1884": {
      "op": "EQ"
    },
    "1885": {
      "op": "PUSH2",
      "value": "0x765"
    },
    "1888": {
      "op": "JUMPI"
    },
    "1889": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1891": {
      "op": "DUP1"
    },
    "1892": {
      "op": "REVERT"
    },
    "1893": {
      "op": "JUMPDEST"
    },
    "1894": {
      "op": "SWAP2"
    },
    "1895": {
      "op": "SWAP1"
    },
    "1896": {
      "op": "POP"
    },
    "1897": {
      "jump": "o",
      "op": "JUMP"
    },
    "1898": {
      "op": "JUMPDEST"
    },
    "1899": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1901": {
      "op": "DUP1"
    },
    "1902": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1904": {
      "op": "DUP4"
    },
    "1905": {
      "op": "DUP6"
    },
    "1906": {
      "op": "SUB"
    },
    "1907": {
      "op": "SLT"
    },
    "1908": {
      "op": "ISZERO"
    },
    "1909": {
      "op": "PUSH2",
      "value": "0x77D"
    },
    "1912": {
      "op": "JUMPI"
    },
    "1913": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1915": {
      "op": "DUP1"
    },
    "1916": {
      "op": "REVERT"
    },
    "1917": {
      "op": "JUMPDEST"
    },
    "1918": {
      "op": "PUSH2",
      "value": "0x786"
    },
    "1921": {
      "op": "DUP4"
    },
    "1922": {
      "op": "PUSH2",
      "value": "0x74E"
    },
    "1925": {
      "jump": "i",
      "op": "JUMP"
    },
    "1926": {
      "op": "JUMPDEST"
    },
    "1927": {
      "op": "SWAP5"
    },
    "1928": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1930": {
      "op": "SWAP4"
    },
    "1931": {
      "op": "SWAP1"
    },
    "1932": {
      "op": "SWAP4"
    },
    "1933": {
      "op": "ADD"
    },
    "1934": {
      "op": "CALLDATALOAD"
    },
    "1935": {
      "op": "SWAP4"
    },
    "1936": {
      "op": "POP"
    },
    "1937": {
      "op": "POP"
    },
    "1938": {
      "op": "POP"
    },
    "1939": {
      "jump": "o",
      "op": "JUMP"
    },
    "1940": {
      "op": "JUMPDEST"
    },
    "1941": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1943": {
      "op": "DUP1"
    },
    "1944": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1946": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1948": {
      "op": "DUP5"
    },
    "1949": {
      "op": "DUP7"
    },
    "1950": {
      "op": "SUB"
    },
    "1951": {
      "op": "SLT"
    },
    "1952": {
      "op": "ISZERO"
    },
    "1953": {
      "op": "PUSH2",
      "value": "0x7A9"
    },
    "1956": {
      "op": "JUMPI"
    },
    "1957": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1959": {
      "op": "DUP1"
    },
    "1960": {
      "op": "REVERT"
    },
    "1961": {
      "op": "JUMPDEST"
    },
    "1962": {
      "op": "PUSH2",
      "value": "0x7B2"
    },
    "1965": {
      "op": "DUP5"
    },
    "1966": {
      "op": "PUSH2",
      "value": "0x74E"
    },
    "1969": {
      "jump": "i",
      "op": "JUMP"
    },
    "1970": {
      "op": "JUMPDEST"
    },
    "1971": {
      "op": "SWAP3"
    },
    "1972": {
      "op": "POP"
    },
    "1973": {
      "op": "PUSH2",
      "value": "0x7C0"
    },
    "1976": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1978": {
      "op": "DUP6"
    },
    "1979": {
      "op": "ADD"
    },
    "1980": {
      "op": "PUSH2",
      "value": "0x74E"
    },
    "1983": {
      "jump": "i",
      "op": "JUMP"
    },
    "1984": {
      "op": "JUMPDEST"
    },
    "1985": {
      "op": "SWAP2"
    },
    "1986": {
      "op": "POP"
    },
    "1987": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1989": {
      "op": "DUP5"
    },
    "1990": {
      "op": "ADD"
    },
    "1991": {
      "op": "CALLDATALOAD"
    },
    "1992": {
      "op": "SWAP1"
    },
    "1993": {
      "op": "POP"
    },
    "1994": {
      "op": "SWAP3"
    },
    "1995": {
      "op": "POP"
    },
    "1996": {
      "op": "SWAP3"
    },
    "1997": {
      "op": "POP"
    },
    "1998": {
      "op": "SWAP3"
    },
    "1999": {
      "jump": "o",
      "op": "JUMP"
    },
    "2000": {
      "op": "JUMPDEST"
    },
    "2001": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2003": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2005": {
      "op": "DUP3"
    },
    "2006": {
      "op": "DUP5"
    },
    "2007": {
      "op": "SUB"
    },
    "2008": {
      "op": "SLT"
    },
    "2009": {
      "op": "ISZERO"
    },
    "2010": {
      "op": "PUSH2",
      "value": "0x7E2"
    },
    "2013": {
      "op": "JUMPI"
    },
    "2014": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2016": {
      "op": "DUP1"
    },
    "2017": {
      "op": "REVERT"
    },
    "2018": {
      "op": "JUMPDEST"
    },
    "2019": {
      "op": "PUSH2",
      "value": "0x7EB"
    },
    "2022": {
      "op": "DUP3"
    },
    "2023": {
      "op": "PUSH2",
      "value": "0x74E"
    },
    "2026": {
      "jump": "i",
      "op": "JUMP"
    },
    "2027": {
      "op": "JUMPDEST"
    },
    "2028": {
      "op": "SWAP4"
    },
    "2029": {
      "op": "SWAP3"
    },
    "2030": {
      "op": "POP"
    },
    "2031": {
      "op": "POP"
    },
    "2032": {
      "op": "POP"
    },
    "2033": {
      "jump": "o",
      "op": "JUMP"
    },
    "2034": {
      "op": "JUMPDEST"
    },
    "2035": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2037": {
      "op": "DUP1"
    },
    "2038": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2040": {
      "op": "DUP4"
    },
    "2041": {
      "op": "DUP6"
    },
    "2042": {
      "op": "SUB"
    },
    "2043": {
      "op": "SLT"
    },
    "2044": {
      "op": "ISZERO"
    },
    "2045": {
      "op": "PUSH2",
      "value": "0x805"
    },
    "2048": {
      "op": "JUMPI"
    },
    "2049": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2051": {
      "op": "DUP1"
    },
    "2052": {
      "op": "REVERT"
    },
    "2053": {
      "op": "JUMPDEST"
    },
    "2054": {
      "op": "PUSH2",
      "value": "0x80E"
    },
    "2057": {
      "op": "DUP4"
    },
    "2058": {
      "op": "PUSH2",
      "value": "0x74E"
    },
    "2061": {
      "jump": "i",
      "op": "JUMP"
    },
    "2062": {
      "op": "JUMPDEST"
    },
    "2063": {
      "op": "SWAP2"
    },
    "2064": {
      "op": "POP"
    },
    "2065": {
      "op": "PUSH2",
      "value": "0x81C"
    },
    "2068": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2070": {
      "op": "DUP5"
    },
    "2071": {
      "op": "ADD"
    },
    "2072": {
      "op": "PUSH2",
      "value": "0x74E"
    },
    "2075": {
      "jump": "i",
      "op": "JUMP"
    },
    "2076": {
      "op": "JUMPDEST"
    },
    "2077": {
      "op": "SWAP1"
    },
    "2078": {
      "op": "POP"
    },
    "2079": {
      "op": "SWAP3"
    },
    "2080": {
      "op": "POP"
    },
    "2081": {
      "op": "SWAP3"
    },
    "2082": {
      "op": "SWAP1"
    },
    "2083": {
      "op": "POP"
    },
    "2084": {
      "jump": "o",
      "op": "JUMP"
    },
    "2085": {
      "op": "JUMPDEST"
    },
    "2086": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2088": {
      "op": "DUP2"
    },
    "2089": {
      "op": "DUP2"
    },
    "2090": {
      "op": "SHR"
    },
    "2091": {
      "op": "SWAP1"
    },
    "2092": {
      "op": "DUP3"
    },
    "2093": {
      "op": "AND"
    },
    "2094": {
      "op": "DUP1"
    },
    "2095": {
      "op": "PUSH2",
      "value": "0x839"
    },
    "2098": {
      "op": "JUMPI"
    },
    "2099": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "2101": {
      "op": "DUP3"
    },
    "2102": {
      "op": "AND"
    },
    "2103": {
      "op": "SWAP2"
    },
    "2104": {
      "op": "POP"
    },
    "2105": {
      "op": "JUMPDEST"
    },
    "2106": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2108": {
      "op": "DUP3"
    },
    "2109": {
      "op": "LT"
    },
    "2110": {
      "op": "DUP2"
    },
    "2111": {
      "op": "SUB"
    },
    "2112": {
      "op": "PUSH2",
      "value": "0x859"
    },
    "2115": {
      "op": "JUMPI"
    },
    "2116": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2121": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2123": {
      "op": "SHL"
    },
    "2124": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2126": {
      "op": "MSTORE"
    },
    "2127": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "2129": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2131": {
      "op": "MSTORE"
    },
    "2132": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2134": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2136": {
      "op": "REVERT"
    },
    "2137": {
      "op": "JUMPDEST"
    },
    "2138": {
      "op": "POP"
    },
    "2139": {
      "op": "SWAP2"
    },
    "2140": {
      "op": "SWAP1"
    },
    "2141": {
      "op": "POP"
    },
    "2142": {
      "jump": "o",
      "op": "JUMP"
    },
    "2143": {
      "op": "JUMPDEST"
    },
    "2144": {
      "op": "DUP1"
    },
    "2145": {
      "op": "DUP3"
    },
    "2146": {
      "op": "ADD"
    },
    "2147": {
      "op": "DUP1"
    },
    "2148": {
      "op": "DUP3"
    },
    "2149": {
      "op": "GT"
    },
    "2150": {
      "op": "ISZERO"
    },
    "2151": {
      "op": "PUSH2",
      "value": "0x269"
    },
    "2154": {
      "op": "JUMPI"
    },
    "2155": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2160": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2162": {
      "op": "SHL"
    },
    "2163": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2165": {
      "op": "MSTORE"
    },
    "2166": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2168": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2170": {
      "op": "MSTORE"
    },
    "2171": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2173": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2175": {
      "op": "REVERT"
    }
  },
  "sha1": "426b22432a28e98c1843c740195758ae96ad2d4b",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\n        require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\");\n        unchecked {\n            _approve(sender, _msgSender(), currentAllowance - amount);\n        }\n\n        _transfer(sender, recipient, amount);\n\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        uint256 senderBalance = _balances[sender];\n        require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[sender] = senderBalance - amount;\n        }\n        _balances[recipient] += amount;\n\n        emit Transfer(sender, recipient, amount);\n\n        _afterTokenTransfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n",
  "sourceMap": "1388:10416:43:-:0;;;1963:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2029:5;:13;2037:5;2029;:13;:::i;:::-;-1:-1:-1;2052:7:43;:17;2062:7;2052;:17;:::i;:::-;;1963:113;;1388:10416;;14:127:102;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:102;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:102;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:102:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:102;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:102;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:102;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:102;;;3992:26;3943:89;-1:-1:-1;;2747:1:102;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:102;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:102;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:102;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:102:o;:::-;1388:10416:43;;;;;;",
  "sourcePath": "contracts/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
  "type": "contract"
}