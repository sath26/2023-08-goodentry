{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        }
      ],
      "name": "BeaconUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "current",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decrement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "increment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "upgradeToAndCall",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "132": "contracts/openzeppelin-solidity/contracts/mocks/UUPS/TestInProd.sol",
    "140": "contracts/openzeppelin-solidity/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
    "148": "contracts/openzeppelin-solidity/contracts/proxy/utils/UUPSUpgradeable.sol",
    "59": "contracts/openzeppelin-solidity/contracts/mocks/CountersImpl.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin-solidity/contracts/mocks/UUPS/TestInProd.sol",
    "exportedSymbols": {
      "Address": [
        29802
      ],
      "Counters": [
        30264
      ],
      "CountersImpl": [
        11697
      ],
      "ERC1967Upgrade": [
        20537
      ],
      "IBeacon": [
        20681
      ],
      "StorageSlot": [
        30490
      ],
      "UUPSUpgradeable": [
        21216
      ],
      "UUPSUpgradeableBrokenMock": [
        18778
      ],
      "UUPSUpgradeableMock": [
        18721
      ],
      "UUPSUpgradeableUnsafeMock": [
        18759
      ]
    },
    "id": 18779,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 18707,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:132"
      },
      {
        "absolutePath": "contracts/openzeppelin-solidity/contracts/mocks/CountersImpl.sol",
        "file": "../CountersImpl.sol",
        "id": 18708,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 18779,
        "sourceUnit": 11698,
        "src": "58:29:132",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-solidity/contracts/proxy/utils/UUPSUpgradeable.sol",
        "file": "../../proxy/utils/UUPSUpgradeable.sol",
        "id": 18709,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 18779,
        "sourceUnit": 21217,
        "src": "88:47:132",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 18710,
              "name": "CountersImpl",
              "nameLocations": [
                "169:12:132"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11697,
              "src": "169:12:132"
            },
            "id": 18711,
            "nodeType": "InheritanceSpecifier",
            "src": "169:12:132"
          },
          {
            "baseName": {
              "id": 18712,
              "name": "UUPSUpgradeable",
              "nameLocations": [
                "183:15:132"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21216,
              "src": "183:15:132"
            },
            "id": 18713,
            "nodeType": "InheritanceSpecifier",
            "src": "183:15:132"
          }
        ],
        "canonicalName": "UUPSUpgradeableMock",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 18721,
        "linearizedBaseContracts": [
          18721,
          21216,
          20537,
          11697
        ],
        "name": "UUPSUpgradeableMock",
        "nameLocation": "146:19:132",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              21215
            ],
            "body": {
              "id": 18719,
              "nodeType": "Block",
              "src": "357:2:132",
              "statements": []
            },
            "id": 18720,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_authorizeUpgrade",
            "nameLocation": "304:17:132",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 18717,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "348:8:132"
            },
            "parameters": {
              "id": 18716,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18715,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18720,
                  "src": "322:7:132",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18714,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "322:7:132",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "321:9:132"
            },
            "returnParameters": {
              "id": 18718,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "357:0:132"
            },
            "scope": 18721,
            "src": "295:64:132",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 18779,
        "src": "137:224:132",
        "usedErrors": [],
        "usedEvents": [
          20206,
          20384,
          20449
        ]
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 18722,
              "name": "UUPSUpgradeableMock",
              "nameLocations": [
                "401:19:132"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 18721,
              "src": "401:19:132"
            },
            "id": 18723,
            "nodeType": "InheritanceSpecifier",
            "src": "401:19:132"
          }
        ],
        "canonicalName": "UUPSUpgradeableUnsafeMock",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 18759,
        "linearizedBaseContracts": [
          18759,
          18721,
          21216,
          20537,
          11697
        ],
        "name": "UUPSUpgradeableUnsafeMock",
        "nameLocation": "372:25:132",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              21188
            ],
            "body": {
              "id": 18740,
              "nodeType": "Block",
              "src": "499:86:132",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 18732,
                        "name": "newImplementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18725,
                        "src": "542:17:132",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "",
                            "id": 18735,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "567:2:132",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "id": 18734,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "561:5:132",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 18733,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "561:5:132",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "561:9:132",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 18737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "572:5:132",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 18729,
                        "name": "ERC1967Upgrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20537,
                        "src": "509:14:132",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC1967Upgrade_$20537_$",
                          "typeString": "type(contract ERC1967Upgrade)"
                        }
                      },
                      "id": 18731,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "524:17:132",
                      "memberName": "_upgradeToAndCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20288,
                      "src": "509:32:132",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,bytes memory,bool)"
                      }
                    },
                    "id": 18738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "509:69:132",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18739,
                  "nodeType": "ExpressionStatement",
                  "src": "509:69:132"
                }
              ]
            },
            "functionSelector": "3659cfe6",
            "id": 18741,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "upgradeTo",
            "nameLocation": "436:9:132",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 18727,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "490:8:132"
            },
            "parameters": {
              "id": 18726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18725,
                  "mutability": "mutable",
                  "name": "newImplementation",
                  "nameLocation": "454:17:132",
                  "nodeType": "VariableDeclaration",
                  "scope": 18741,
                  "src": "446:25:132",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18724,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "446:7:132",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "445:27:132"
            },
            "returnParameters": {
              "id": 18728,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "499:0:132"
            },
            "scope": 18759,
            "src": "427:158:132",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              21209
            ],
            "body": {
              "id": 18757,
              "nodeType": "Block",
              "src": "697:81:132",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 18752,
                        "name": "newImplementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18743,
                        "src": "740:17:132",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18753,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18745,
                        "src": "759:4:132",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 18754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "765:5:132",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 18749,
                        "name": "ERC1967Upgrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20537,
                        "src": "707:14:132",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC1967Upgrade_$20537_$",
                          "typeString": "type(contract ERC1967Upgrade)"
                        }
                      },
                      "id": 18751,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "722:17:132",
                      "memberName": "_upgradeToAndCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20288,
                      "src": "707:32:132",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,bytes memory,bool)"
                      }
                    },
                    "id": 18755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "707:64:132",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18756,
                  "nodeType": "ExpressionStatement",
                  "src": "707:64:132"
                }
              ]
            },
            "functionSelector": "4f1ef286",
            "id": 18758,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "upgradeToAndCall",
            "nameLocation": "600:16:132",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 18747,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "688:8:132"
            },
            "parameters": {
              "id": 18746,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18743,
                  "mutability": "mutable",
                  "name": "newImplementation",
                  "nameLocation": "625:17:132",
                  "nodeType": "VariableDeclaration",
                  "scope": 18758,
                  "src": "617:25:132",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18742,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "617:7:132",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18745,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "657:4:132",
                  "nodeType": "VariableDeclaration",
                  "scope": 18758,
                  "src": "644:17:132",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 18744,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "644:5:132",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "616:46:132"
            },
            "returnParameters": {
              "id": 18748,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "697:0:132"
            },
            "scope": 18759,
            "src": "591:187:132",
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          }
        ],
        "scope": 18779,
        "src": "363:417:132",
        "usedErrors": [],
        "usedEvents": [
          20206,
          20384,
          20449
        ]
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 18760,
              "name": "UUPSUpgradeableMock",
              "nameLocations": [
                "820:19:132"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 18721,
              "src": "820:19:132"
            },
            "id": 18761,
            "nodeType": "InheritanceSpecifier",
            "src": "820:19:132"
          }
        ],
        "canonicalName": "UUPSUpgradeableBrokenMock",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 18778,
        "linearizedBaseContracts": [
          18778,
          18721,
          21216,
          20537,
          11697
        ],
        "name": "UUPSUpgradeableBrokenMock",
        "nameLocation": "791:25:132",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              21188
            ],
            "body": {
              "id": 18767,
              "nodeType": "Block",
              "src": "900:23:132",
              "statements": []
            },
            "functionSelector": "3659cfe6",
            "id": 18768,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "upgradeTo",
            "nameLocation": "855:9:132",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 18765,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "891:8:132"
            },
            "parameters": {
              "id": 18764,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18763,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18768,
                  "src": "865:7:132",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18762,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "865:7:132",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "864:9:132"
            },
            "returnParameters": {
              "id": 18766,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "900:0:132"
            },
            "scope": 18778,
            "src": "846:77:132",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              21209
            ],
            "body": {
              "id": 18776,
              "nodeType": "Block",
              "src": "1012:23:132",
              "statements": []
            },
            "functionSelector": "4f1ef286",
            "id": 18777,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "upgradeToAndCall",
            "nameLocation": "938:16:132",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 18774,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1003:8:132"
            },
            "parameters": {
              "id": 18773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18770,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18777,
                  "src": "955:7:132",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18769,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "955:7:132",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18772,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18777,
                  "src": "964:12:132",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 18771,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "964:5:132",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "954:23:132"
            },
            "returnParameters": {
              "id": 18775,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1012:0:132"
            },
            "scope": 18778,
            "src": "929:106:132",
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          }
        ],
        "scope": 18779,
        "src": "782:255:132",
        "usedErrors": [],
        "usedEvents": [
          20206,
          20384,
          20449
        ]
      }
    ],
    "src": "33:1005:132"
  },
  "bytecode": "60a06040523060805234801561001457600080fd5b506080516105d861002d600039600050506105d86000f3fe6080604052600436106100555760003560e01c80632baeceb71461005a5780633659cfe6146100715780634f1ef286146100915780639fa6a6e3146100a4578063d09de08a146100c6578063d826f88f146100db575b600080fd5b34801561006657600080fd5b5061006f6100f0565b005b34801561007d57600080fd5b5061006f61008c366004610415565b6100fc565b61006f61009f366004610446565b61011a565b3480156100b057600080fd5b5060005460405190815260200160405180910390f35b3480156100d257600080fd5b5061006f61012a565b3480156100e757600080fd5b5061006f610138565b6100fa6000610141565b565b6101178160405180602001604052806000815250600061019d565b50565b6101268282600061019d565b5050565b6100fa600080546001019055565b6100fa60008055565b8054806101955760405162461bcd60e51b815260206004820152601b60248201527f436f756e7465723a2064656372656d656e74206f766572666c6f77000000000060448201526064015b60405180910390fd5b600019019055565b6101a6836101c9565b6000825111806101b35750805b156101c4576101c28383610209565b505b505050565b6101d281610235565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b606061022e838360405180606001604052806027815260200161057c602791396102e3565b9392505050565b6001600160a01b0381163b6102a25760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b606482015260840161018c565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b60606001600160a01b0384163b61034b5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161018c565b600080856001600160a01b031685604051610366919061052c565b600060405180830381855af49150503d80600081146103a1576040519150601f19603f3d011682016040523d82523d6000602084013e6103a6565b606091505b50915091506103b68282866103c0565b9695505050505050565b606083156103cf57508161022e565b8251156103df5782518084602001fd5b8160405162461bcd60e51b815260040161018c9190610548565b80356001600160a01b038116811461041057600080fd5b919050565b60006020828403121561042757600080fd5b61022e826103f9565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561045957600080fd5b610462836103f9565b9150602083013567ffffffffffffffff8082111561047f57600080fd5b818501915085601f83011261049357600080fd5b8135818111156104a5576104a5610430565b604051601f8201601f19908116603f011681019083821181831017156104cd576104cd610430565b816040528281528860208487010111156104e657600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60005b8381101561052357818101518382015260200161050b565b50506000910152565b6000825161053e818460208701610508565b9190910192915050565b6020815260008251806020840152610567816040850160208701610508565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122091c17b1a6c9b7f7eca5ffee2e927baf2b725254115fa6b0bb7b36b814b88166a64736f6c63430008150033",
  "bytecodeSha1": "3c5289bb073c7770c8fd71ec8ceed2ccc3c22e13",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.21+commit.d9974bed"
  },
  "contractName": "UUPSUpgradeableUnsafeMock",
  "coverageMap": {
    "branches": {
      "132": {},
      "140": {
        "ERC1967Upgrade._upgradeToAndCall": {
          "11": [
            2303,
            2318,
            true
          ],
          "12": [
            2322,
            2331,
            false
          ]
        }
      },
      "148": {},
      "59": {}
    },
    "statements": {
      "132": {
        "UUPSUpgradeableUnsafeMock.upgradeTo": {
          "1": [
            509,
            578
          ]
        },
        "UUPSUpgradeableUnsafeMock.upgradeToAndCall": {
          "2": [
            707,
            771
          ]
        }
      },
      "140": {
        "ERC1967Upgrade._setImplementation": {
          "9": [
            1544,
            1639
          ],
          "10": [
            1649,
            1723
          ]
        },
        "ERC1967Upgrade._upgradeTo": {
          "7": [
            1902,
            1939
          ],
          "8": [
            1949,
            1981
          ]
        },
        "ERC1967Upgrade._upgradeToAndCall": {
          "5": [
            2260,
            2289
          ],
          "6": [
            2347,
            2400
          ]
        }
      },
      "148": {},
      "59": {
        "CountersImpl.decrement": {
          "0": [
            407,
            427
          ]
        },
        "CountersImpl.increment": {
          "3": [
            336,
            356
          ]
        },
        "CountersImpl.reset": {
          "4": [
            474,
            490
          ]
        }
      }
    }
  },
  "dependencies": [
    "CountersImpl",
    "ERC1967Upgrade",
    "UUPSUpgradeable",
    "UUPSUpgradeableMock"
  ],
  "deployedBytecode": "6080604052600436106100555760003560e01c80632baeceb71461005a5780633659cfe6146100715780634f1ef286146100915780639fa6a6e3146100a4578063d09de08a146100c6578063d826f88f146100db575b600080fd5b34801561006657600080fd5b5061006f6100f0565b005b34801561007d57600080fd5b5061006f61008c366004610415565b6100fc565b61006f61009f366004610446565b61011a565b3480156100b057600080fd5b5060005460405190815260200160405180910390f35b3480156100d257600080fd5b5061006f61012a565b3480156100e757600080fd5b5061006f610138565b6100fa6000610141565b565b6101178160405180602001604052806000815250600061019d565b50565b6101268282600061019d565b5050565b6100fa600080546001019055565b6100fa60008055565b8054806101955760405162461bcd60e51b815260206004820152601b60248201527f436f756e7465723a2064656372656d656e74206f766572666c6f77000000000060448201526064015b60405180910390fd5b600019019055565b6101a6836101c9565b6000825111806101b35750805b156101c4576101c28383610209565b505b505050565b6101d281610235565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b606061022e838360405180606001604052806027815260200161057c602791396102e3565b9392505050565b6001600160a01b0381163b6102a25760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b606482015260840161018c565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b60606001600160a01b0384163b61034b5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161018c565b600080856001600160a01b031685604051610366919061052c565b600060405180830381855af49150503d80600081146103a1576040519150601f19603f3d011682016040523d82523d6000602084013e6103a6565b606091505b50915091506103b68282866103c0565b9695505050505050565b606083156103cf57508161022e565b8251156103df5782518084602001fd5b8160405162461bcd60e51b815260040161018c9190610548565b80356001600160a01b038116811461041057600080fd5b919050565b60006020828403121561042757600080fd5b61022e826103f9565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561045957600080fd5b610462836103f9565b9150602083013567ffffffffffffffff8082111561047f57600080fd5b818501915085601f83011261049357600080fd5b8135818111156104a5576104a5610430565b604051601f8201601f19908116603f011681019083821181831017156104cd576104cd610430565b816040528281528860208487010111156104e657600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60005b8381101561052357818101518382015260200161050b565b50506000910152565b6000825161053e818460208701610508565b9190910192915050565b6020815260008251806020840152610567816040850160208701610508565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122091c17b1a6c9b7f7eca5ffee2e927baf2b725254115fa6b0bb7b36b814b88166a64736f6c63430008150033",
  "deployedSourceMap": "363:417:132:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;369:65:59;;;;;;;;;;;;;:::i;:::-;;427:158:132;;;;;;;;;;-1:-1:-1;427:158:132;;;;;:::i;:::-;;:::i;591:187::-;;;;;;:::i;:::-;;:::i;201:91:59:-;;;;;;;;;;-1:-1:-1;241:7:59;918:14:203;201:91:59;;1661:25:249;;;1649:2;1634:18;201:91:59;;;;;;;298:65;;;;;;;;;;;;;:::i;440:57::-;;;;;;;;;;;;;:::i;369:65::-;407:20;:8;:18;:20::i;:::-;369:65::o;427:158:132:-;509:69;542:17;561:9;;;;;;;;;;;;572:5;509:32;:69::i;:::-;427:158;:::o;591:187::-;707:64;740:17;759:4;765:5;707:32;:64::i;:::-;591:187;;:::o;298:65:59:-;336:20;:8;1032:19:203;;1050:1;1032:19;;;945:123;440:57:59;474:16;:8;1385:1:203;1368:18;1309:84;1074:229;1153:14;;1185:9;1177:49;;;;-1:-1:-1;;;1177:49:203;;1899:2:249;1177:49:203;;;1881:21:249;1938:2;1918:18;;;1911:30;1977:29;1957:18;;;1950:57;2024:18;;1177:49:203;;;;;;;;;-1:-1:-1;;1277:9:203;1260:26;;1074:229::o;2122:295:140:-;2260:29;2271:17;2260:10;:29::i;:::-;2317:1;2303:4;:11;:15;:28;;;;2322:9;2303:28;2299:112;;;2347:53;2376:17;2395:4;2347:28;:53::i;:::-;;2299:112;2122:295;;;:::o;1836:152::-;1902:37;1921:17;1902:18;:37::i;:::-;1954:27;;-1:-1:-1;;;;;1954:27:140;;;;;;;;1836:152;:::o;6555:198:198:-;6638:12;6669:77;6690:6;6698:4;6669:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6662:84;6555:198;-1:-1:-1;;;6555:198:198:o;1471:259:140:-;-1:-1:-1;;;;;1450:19:198;;;1544:95:140;;;;-1:-1:-1;;;1544:95:140;;2255:2:249;1544:95:140;;;2237:21:249;2294:2;2274:18;;;2267:30;2333:34;2313:18;;;2306:62;-1:-1:-1;;;2384:18:249;;;2377:43;2437:19;;1544:95:140;2053:409:249;1544:95:140;969:66;1649:74;;-1:-1:-1;;;;;;1649:74:140;-1:-1:-1;;;;;1649:74:140;;;;;;;;;;1471:259::o;6939:387:198:-;7080:12;-1:-1:-1;;;;;1450:19:198;;;7104:69;;;;-1:-1:-1;;;7104:69:198;;2669:2:249;7104:69:198;;;2651:21:249;2708:2;2688:18;;;2681:30;2747:34;2727:18;;;2720:62;-1:-1:-1;;;2798:18:249;;;2791:36;2844:19;;7104:69:198;2467:402:249;7104:69:198;7185:12;7199:23;7226:6;-1:-1:-1;;;;;7226:19:198;7246:4;7226:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7184:67;;;;7268:51;7285:7;7294:10;7306:12;7268:16;:51::i;:::-;7261:58;6939:387;-1:-1:-1;;;;;;6939:387:198:o;7546:692::-;7692:12;7720:7;7716:516;;;-1:-1:-1;7750:10:198;7743:17;;7716:516;7861:17;;:21;7857:365;;8055:10;8049:17;8115:15;8102:10;8098:2;8094:19;8087:44;7857:365;8194:12;8187:20;;-1:-1:-1;;;8187:20:198;;;;;;;;:::i;14:173:249:-;82:20;;-1:-1:-1;;;;;131:31:249;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;383:127::-;444:10;439:3;435:20;432:1;425:31;475:4;472:1;465:15;499:4;496:1;489:15;515:995;592:6;600;653:2;641:9;632:7;628:23;624:32;621:52;;;669:1;666;659:12;621:52;692:29;711:9;692:29;:::i;:::-;682:39;;772:2;761:9;757:18;744:32;795:18;836:2;828:6;825:14;822:34;;;852:1;849;842:12;822:34;890:6;879:9;875:22;865:32;;935:7;928:4;924:2;920:13;916:27;906:55;;957:1;954;947:12;906:55;993:2;980:16;1015:2;1011;1008:10;1005:36;;;1021:18;;:::i;:::-;1096:2;1090:9;1064:2;1150:13;;-1:-1:-1;;1146:22:249;;;1170:2;1142:31;1138:40;1126:53;;;1194:18;;;1214:22;;;1191:46;1188:72;;;1240:18;;:::i;:::-;1280:10;1276:2;1269:22;1315:2;1307:6;1300:18;1355:7;1350:2;1345;1341;1337:11;1333:20;1330:33;1327:53;;;1376:1;1373;1366:12;1327:53;1432:2;1427;1423;1419:11;1414:2;1406:6;1402:15;1389:46;1477:1;1472:2;1467;1459:6;1455:15;1451:24;1444:35;1498:6;1488:16;;;;;;;515:995;;;;;:::o;2874:250::-;2959:1;2969:113;2983:6;2980:1;2977:13;2969:113;;;3059:11;;;3053:18;3040:11;;;3033:39;3005:2;2998:10;2969:113;;;-1:-1:-1;;3116:1:249;3098:16;;3091:27;2874:250::o;3129:287::-;3258:3;3296:6;3290:13;3312:66;3371:6;3366:3;3359:4;3351:6;3347:17;3312:66;:::i;:::-;3394:16;;;;;3129:287;-1:-1:-1;;3129:287:249:o;3421:396::-;3570:2;3559:9;3552:21;3533:4;3602:6;3596:13;3645:6;3640:2;3629:9;3625:18;3618:34;3661:79;3733:6;3728:2;3717:9;3713:18;3708:2;3700:6;3696:15;3661:79;:::i;:::-;3801:2;3780:15;-1:-1:-1;;3776:29:249;3761:45;;;;3808:2;3757:54;;3421:396;-1:-1:-1;;3421:396:249:o",
  "language": "Solidity",
  "natspec": {
    "events": {
      "AdminChanged(address,address)": {
        "details": "Emitted when the admin account has changed."
      },
      "BeaconUpgraded(address)": {
        "details": "Emitted when the beacon is upgraded."
      },
      "Upgraded(address)": {
        "details": "Emitted when the implementation is upgraded."
      }
    },
    "kind": "dev",
    "methods": {
      "upgradeTo(address)": {
        "details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
      },
      "upgradeToAndCall(address,bytes)": {
        "details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
      }
    },
    "version": 1
  },
  "offset": [
    363,
    780
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2BAECEB7 EQ PUSH2 0x5A JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x91 JUMPI DUP1 PUSH4 0x9FA6A6E3 EQ PUSH2 0xA4 JUMPI DUP1 PUSH4 0xD09DE08A EQ PUSH2 0xC6 JUMPI DUP1 PUSH4 0xD826F88F EQ PUSH2 0xDB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0xF0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0x8C CALLDATASIZE PUSH1 0x4 PUSH2 0x415 JUMP JUMPDEST PUSH2 0xFC JUMP JUMPDEST PUSH2 0x6F PUSH2 0x9F CALLDATASIZE PUSH1 0x4 PUSH2 0x446 JUMP JUMPDEST PUSH2 0x11A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0x12A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0x138 JUMP JUMPDEST PUSH2 0xFA PUSH1 0x0 PUSH2 0x141 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x117 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x0 PUSH2 0x19D JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x126 DUP3 DUP3 PUSH1 0x0 PUSH2 0x19D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xFA PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xFA PUSH1 0x0 DUP1 SSTORE JUMP JUMPDEST DUP1 SLOAD DUP1 PUSH2 0x195 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F756E7465723A2064656372656D656E74206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT ADD SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1A6 DUP4 PUSH2 0x1C9 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x1B3 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x1C4 JUMPI PUSH2 0x1C2 DUP4 DUP4 PUSH2 0x209 JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1D2 DUP2 PUSH2 0x235 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x22E DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x57C PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x2E3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE PUSH2 0x2A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x18C JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE PUSH2 0x34B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1B9D1C9858DD PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x18C JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x52C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3A1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3A6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x3B6 DUP3 DUP3 DUP7 PUSH2 0x3C0 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x3CF JUMPI POP DUP2 PUSH2 0x22E JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x3DF JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18C SWAP2 SWAP1 PUSH2 0x548 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x410 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x427 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x22E DUP3 PUSH2 0x3F9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x459 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x462 DUP4 PUSH2 0x3F9 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x47F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x493 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x4A5 JUMPI PUSH2 0x4A5 PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x4CD JUMPI PUSH2 0x4CD PUSH2 0x430 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x4E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x523 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x50B JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x53E DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x508 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x567 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x508 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x7066735822122091C17B BYTE PUSH13 0x9B7F7ECA5FFEE2E927BAF2B725 0x25 COINBASE ISZERO STATICCALL PUSH12 0xBB7B36B814B88166A64736F PUSH13 0x63430008150033000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        363,
        780
      ],
      "op": "PUSH1",
      "path": "132",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "PUSH1",
      "path": "132",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "MSTORE",
      "path": "132"
    },
    "5": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "PUSH1",
      "path": "132",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "CALLDATASIZE",
      "path": "132"
    },
    "8": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "LT",
      "path": "132"
    },
    "9": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "PUSH2",
      "path": "132",
      "value": "0x55"
    },
    "12": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "JUMPI",
      "path": "132"
    },
    "13": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "PUSH1",
      "path": "132",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "CALLDATALOAD",
      "path": "132"
    },
    "16": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "PUSH1",
      "path": "132",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "SHR",
      "path": "132"
    },
    "19": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "DUP1",
      "path": "132"
    },
    "20": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "PUSH4",
      "path": "132",
      "value": "0x2BAECEB7"
    },
    "25": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "EQ",
      "path": "132"
    },
    "26": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "PUSH2",
      "path": "132",
      "value": "0x5A"
    },
    "29": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "JUMPI",
      "path": "132"
    },
    "30": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "DUP1",
      "path": "132"
    },
    "31": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "PUSH4",
      "path": "132",
      "value": "0x3659CFE6"
    },
    "36": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "EQ",
      "path": "132"
    },
    "37": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "PUSH2",
      "path": "132",
      "value": "0x71"
    },
    "40": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "JUMPI",
      "path": "132"
    },
    "41": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "DUP1",
      "path": "132"
    },
    "42": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "PUSH4",
      "path": "132",
      "value": "0x4F1EF286"
    },
    "47": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "EQ",
      "path": "132"
    },
    "48": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "PUSH2",
      "path": "132",
      "value": "0x91"
    },
    "51": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "JUMPI",
      "path": "132"
    },
    "52": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "DUP1",
      "path": "132"
    },
    "53": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "PUSH4",
      "path": "132",
      "value": "0x9FA6A6E3"
    },
    "58": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "EQ",
      "path": "132"
    },
    "59": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "PUSH2",
      "path": "132",
      "value": "0xA4"
    },
    "62": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "JUMPI",
      "path": "132"
    },
    "63": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "DUP1",
      "path": "132"
    },
    "64": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "PUSH4",
      "path": "132",
      "value": "0xD09DE08A"
    },
    "69": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "EQ",
      "path": "132"
    },
    "70": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "PUSH2",
      "path": "132",
      "value": "0xC6"
    },
    "73": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "JUMPI",
      "path": "132"
    },
    "74": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "DUP1",
      "path": "132"
    },
    "75": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "PUSH4",
      "path": "132",
      "value": "0xD826F88F"
    },
    "80": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "EQ",
      "path": "132"
    },
    "81": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "PUSH2",
      "path": "132",
      "value": "0xDB"
    },
    "84": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "JUMPI",
      "path": "132"
    },
    "85": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "JUMPDEST",
      "path": "132"
    },
    "86": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "PUSH1",
      "path": "132",
      "value": "0x0"
    },
    "88": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "DUP1",
      "path": "132"
    },
    "89": {
      "first_revert": true,
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "REVERT",
      "path": "132"
    },
    "90": {
      "fn": "CountersImpl.decrement",
      "offset": [
        369,
        434
      ],
      "op": "JUMPDEST",
      "path": "59"
    },
    "91": {
      "fn": "CountersImpl.decrement",
      "offset": [
        369,
        434
      ],
      "op": "CALLVALUE",
      "path": "59"
    },
    "92": {
      "fn": "CountersImpl.decrement",
      "offset": [
        369,
        434
      ],
      "op": "DUP1",
      "path": "59"
    },
    "93": {
      "fn": "CountersImpl.decrement",
      "offset": [
        369,
        434
      ],
      "op": "ISZERO",
      "path": "59"
    },
    "94": {
      "fn": "CountersImpl.decrement",
      "offset": [
        369,
        434
      ],
      "op": "PUSH2",
      "path": "59",
      "value": "0x66"
    },
    "97": {
      "fn": "CountersImpl.decrement",
      "offset": [
        369,
        434
      ],
      "op": "JUMPI",
      "path": "59"
    },
    "98": {
      "fn": "CountersImpl.decrement",
      "offset": [
        369,
        434
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x0"
    },
    "100": {
      "fn": "CountersImpl.decrement",
      "offset": [
        369,
        434
      ],
      "op": "DUP1",
      "path": "59"
    },
    "101": {
      "fn": "CountersImpl.decrement",
      "offset": [
        369,
        434
      ],
      "op": "REVERT",
      "path": "59"
    },
    "102": {
      "fn": "CountersImpl.decrement",
      "offset": [
        369,
        434
      ],
      "op": "JUMPDEST",
      "path": "59"
    },
    "103": {
      "fn": "CountersImpl.decrement",
      "offset": [
        369,
        434
      ],
      "op": "POP",
      "path": "59"
    },
    "104": {
      "fn": "CountersImpl.decrement",
      "offset": [
        369,
        434
      ],
      "op": "PUSH2",
      "path": "59",
      "value": "0x6F"
    },
    "107": {
      "fn": "CountersImpl.decrement",
      "offset": [
        369,
        434
      ],
      "op": "PUSH2",
      "path": "59",
      "value": "0xF0"
    },
    "110": {
      "fn": "CountersImpl.decrement",
      "jump": "i",
      "offset": [
        369,
        434
      ],
      "op": "JUMP",
      "path": "59"
    },
    "111": {
      "fn": "CountersImpl.decrement",
      "offset": [
        369,
        434
      ],
      "op": "JUMPDEST",
      "path": "59"
    },
    "112": {
      "fn": "CountersImpl.decrement",
      "offset": [
        369,
        434
      ],
      "op": "STOP",
      "path": "59"
    },
    "113": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        427,
        585
      ],
      "op": "JUMPDEST",
      "path": "132"
    },
    "114": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        427,
        585
      ],
      "op": "CALLVALUE",
      "path": "132"
    },
    "115": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        427,
        585
      ],
      "op": "DUP1",
      "path": "132"
    },
    "116": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        427,
        585
      ],
      "op": "ISZERO",
      "path": "132"
    },
    "117": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        427,
        585
      ],
      "op": "PUSH2",
      "path": "132",
      "value": "0x7D"
    },
    "120": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        427,
        585
      ],
      "op": "JUMPI",
      "path": "132"
    },
    "121": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        427,
        585
      ],
      "op": "PUSH1",
      "path": "132",
      "value": "0x0"
    },
    "123": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        427,
        585
      ],
      "op": "DUP1",
      "path": "132"
    },
    "124": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        427,
        585
      ],
      "op": "REVERT",
      "path": "132"
    },
    "125": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        427,
        585
      ],
      "op": "JUMPDEST",
      "path": "132"
    },
    "126": {
      "op": "POP"
    },
    "127": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        427,
        585
      ],
      "op": "PUSH2",
      "path": "132",
      "value": "0x6F"
    },
    "130": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        427,
        585
      ],
      "op": "PUSH2",
      "path": "132",
      "value": "0x8C"
    },
    "133": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        427,
        585
      ],
      "op": "CALLDATASIZE",
      "path": "132"
    },
    "134": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        427,
        585
      ],
      "op": "PUSH1",
      "path": "132",
      "value": "0x4"
    },
    "136": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        427,
        585
      ],
      "op": "PUSH2",
      "path": "132",
      "value": "0x415"
    },
    "139": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "jump": "i",
      "offset": [
        427,
        585
      ],
      "op": "JUMP",
      "path": "132"
    },
    "140": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        427,
        585
      ],
      "op": "JUMPDEST",
      "path": "132"
    },
    "141": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        427,
        585
      ],
      "op": "PUSH2",
      "path": "132",
      "value": "0xFC"
    },
    "144": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "jump": "i",
      "offset": [
        427,
        585
      ],
      "op": "JUMP",
      "path": "132"
    },
    "145": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeToAndCall",
      "offset": [
        591,
        778
      ],
      "op": "JUMPDEST",
      "path": "132"
    },
    "146": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeToAndCall",
      "offset": [
        591,
        778
      ],
      "op": "PUSH2",
      "path": "132",
      "value": "0x6F"
    },
    "149": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeToAndCall",
      "offset": [
        591,
        778
      ],
      "op": "PUSH2",
      "path": "132",
      "value": "0x9F"
    },
    "152": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeToAndCall",
      "offset": [
        591,
        778
      ],
      "op": "CALLDATASIZE",
      "path": "132"
    },
    "153": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeToAndCall",
      "offset": [
        591,
        778
      ],
      "op": "PUSH1",
      "path": "132",
      "value": "0x4"
    },
    "155": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeToAndCall",
      "offset": [
        591,
        778
      ],
      "op": "PUSH2",
      "path": "132",
      "value": "0x446"
    },
    "158": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeToAndCall",
      "jump": "i",
      "offset": [
        591,
        778
      ],
      "op": "JUMP",
      "path": "132"
    },
    "159": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeToAndCall",
      "offset": [
        591,
        778
      ],
      "op": "JUMPDEST",
      "path": "132"
    },
    "160": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeToAndCall",
      "offset": [
        591,
        778
      ],
      "op": "PUSH2",
      "path": "132",
      "value": "0x11A"
    },
    "163": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeToAndCall",
      "jump": "i",
      "offset": [
        591,
        778
      ],
      "op": "JUMP",
      "path": "132"
    },
    "164": {
      "fn": "CountersImpl.current",
      "offset": [
        201,
        292
      ],
      "op": "JUMPDEST",
      "path": "59"
    },
    "165": {
      "fn": "CountersImpl.current",
      "offset": [
        201,
        292
      ],
      "op": "CALLVALUE",
      "path": "59"
    },
    "166": {
      "fn": "CountersImpl.current",
      "offset": [
        201,
        292
      ],
      "op": "DUP1",
      "path": "59"
    },
    "167": {
      "fn": "CountersImpl.current",
      "offset": [
        201,
        292
      ],
      "op": "ISZERO",
      "path": "59"
    },
    "168": {
      "fn": "CountersImpl.current",
      "offset": [
        201,
        292
      ],
      "op": "PUSH2",
      "path": "59",
      "value": "0xB0"
    },
    "171": {
      "fn": "CountersImpl.current",
      "offset": [
        201,
        292
      ],
      "op": "JUMPI",
      "path": "59"
    },
    "172": {
      "fn": "CountersImpl.current",
      "offset": [
        201,
        292
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x0"
    },
    "174": {
      "fn": "CountersImpl.current",
      "offset": [
        201,
        292
      ],
      "op": "DUP1",
      "path": "59"
    },
    "175": {
      "fn": "CountersImpl.current",
      "offset": [
        201,
        292
      ],
      "op": "REVERT",
      "path": "59"
    },
    "176": {
      "fn": "CountersImpl.current",
      "offset": [
        201,
        292
      ],
      "op": "JUMPDEST",
      "path": "59"
    },
    "177": {
      "op": "POP"
    },
    "178": {
      "fn": "CountersImpl.current",
      "offset": [
        241,
        248
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x0"
    },
    "180": {
      "op": "SLOAD"
    },
    "181": {
      "fn": "CountersImpl.current",
      "offset": [
        201,
        292
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x40"
    },
    "183": {
      "fn": "CountersImpl.current",
      "offset": [
        201,
        292
      ],
      "op": "MLOAD",
      "path": "59"
    },
    "184": {
      "op": "SWAP1"
    },
    "185": {
      "op": "DUP2"
    },
    "186": {
      "op": "MSTORE"
    },
    "187": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "189": {
      "op": "ADD"
    },
    "190": {
      "fn": "CountersImpl.current",
      "offset": [
        201,
        292
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x40"
    },
    "192": {
      "fn": "CountersImpl.current",
      "offset": [
        201,
        292
      ],
      "op": "MLOAD",
      "path": "59"
    },
    "193": {
      "fn": "CountersImpl.current",
      "offset": [
        201,
        292
      ],
      "op": "DUP1",
      "path": "59"
    },
    "194": {
      "fn": "CountersImpl.current",
      "offset": [
        201,
        292
      ],
      "op": "SWAP2",
      "path": "59"
    },
    "195": {
      "fn": "CountersImpl.current",
      "offset": [
        201,
        292
      ],
      "op": "SUB",
      "path": "59"
    },
    "196": {
      "fn": "CountersImpl.current",
      "offset": [
        201,
        292
      ],
      "op": "SWAP1",
      "path": "59"
    },
    "197": {
      "fn": "CountersImpl.current",
      "offset": [
        201,
        292
      ],
      "op": "RETURN",
      "path": "59"
    },
    "198": {
      "fn": "CountersImpl.increment",
      "offset": [
        298,
        363
      ],
      "op": "JUMPDEST",
      "path": "59"
    },
    "199": {
      "fn": "CountersImpl.increment",
      "offset": [
        298,
        363
      ],
      "op": "CALLVALUE",
      "path": "59"
    },
    "200": {
      "fn": "CountersImpl.increment",
      "offset": [
        298,
        363
      ],
      "op": "DUP1",
      "path": "59"
    },
    "201": {
      "fn": "CountersImpl.increment",
      "offset": [
        298,
        363
      ],
      "op": "ISZERO",
      "path": "59"
    },
    "202": {
      "fn": "CountersImpl.increment",
      "offset": [
        298,
        363
      ],
      "op": "PUSH2",
      "path": "59",
      "value": "0xD2"
    },
    "205": {
      "fn": "CountersImpl.increment",
      "offset": [
        298,
        363
      ],
      "op": "JUMPI",
      "path": "59"
    },
    "206": {
      "fn": "CountersImpl.increment",
      "offset": [
        298,
        363
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x0"
    },
    "208": {
      "fn": "CountersImpl.increment",
      "offset": [
        298,
        363
      ],
      "op": "DUP1",
      "path": "59"
    },
    "209": {
      "fn": "CountersImpl.increment",
      "offset": [
        298,
        363
      ],
      "op": "REVERT",
      "path": "59"
    },
    "210": {
      "fn": "CountersImpl.increment",
      "offset": [
        298,
        363
      ],
      "op": "JUMPDEST",
      "path": "59"
    },
    "211": {
      "fn": "CountersImpl.increment",
      "offset": [
        298,
        363
      ],
      "op": "POP",
      "path": "59"
    },
    "212": {
      "fn": "CountersImpl.increment",
      "offset": [
        298,
        363
      ],
      "op": "PUSH2",
      "path": "59",
      "value": "0x6F"
    },
    "215": {
      "fn": "CountersImpl.increment",
      "offset": [
        298,
        363
      ],
      "op": "PUSH2",
      "path": "59",
      "value": "0x12A"
    },
    "218": {
      "fn": "CountersImpl.increment",
      "jump": "i",
      "offset": [
        298,
        363
      ],
      "op": "JUMP",
      "path": "59"
    },
    "219": {
      "fn": "CountersImpl.reset",
      "offset": [
        440,
        497
      ],
      "op": "JUMPDEST",
      "path": "59"
    },
    "220": {
      "fn": "CountersImpl.reset",
      "offset": [
        440,
        497
      ],
      "op": "CALLVALUE",
      "path": "59"
    },
    "221": {
      "fn": "CountersImpl.reset",
      "offset": [
        440,
        497
      ],
      "op": "DUP1",
      "path": "59"
    },
    "222": {
      "fn": "CountersImpl.reset",
      "offset": [
        440,
        497
      ],
      "op": "ISZERO",
      "path": "59"
    },
    "223": {
      "fn": "CountersImpl.reset",
      "offset": [
        440,
        497
      ],
      "op": "PUSH2",
      "path": "59",
      "value": "0xE7"
    },
    "226": {
      "fn": "CountersImpl.reset",
      "offset": [
        440,
        497
      ],
      "op": "JUMPI",
      "path": "59"
    },
    "227": {
      "fn": "CountersImpl.reset",
      "offset": [
        440,
        497
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x0"
    },
    "229": {
      "fn": "CountersImpl.reset",
      "offset": [
        440,
        497
      ],
      "op": "DUP1",
      "path": "59"
    },
    "230": {
      "fn": "CountersImpl.reset",
      "offset": [
        440,
        497
      ],
      "op": "REVERT",
      "path": "59"
    },
    "231": {
      "fn": "CountersImpl.reset",
      "offset": [
        440,
        497
      ],
      "op": "JUMPDEST",
      "path": "59"
    },
    "232": {
      "fn": "CountersImpl.reset",
      "offset": [
        440,
        497
      ],
      "op": "POP",
      "path": "59"
    },
    "233": {
      "fn": "CountersImpl.reset",
      "offset": [
        440,
        497
      ],
      "op": "PUSH2",
      "path": "59",
      "value": "0x6F"
    },
    "236": {
      "fn": "CountersImpl.reset",
      "offset": [
        440,
        497
      ],
      "op": "PUSH2",
      "path": "59",
      "value": "0x138"
    },
    "239": {
      "fn": "CountersImpl.reset",
      "jump": "i",
      "offset": [
        440,
        497
      ],
      "op": "JUMP",
      "path": "59"
    },
    "240": {
      "fn": "CountersImpl.decrement",
      "offset": [
        369,
        434
      ],
      "op": "JUMPDEST",
      "path": "59"
    },
    "241": {
      "fn": "CountersImpl.decrement",
      "offset": [
        407,
        427
      ],
      "op": "PUSH2",
      "path": "59",
      "statement": 0,
      "value": "0xFA"
    },
    "244": {
      "fn": "CountersImpl.decrement",
      "offset": [
        407,
        415
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x0"
    },
    "246": {
      "fn": "CountersImpl.decrement",
      "offset": [
        407,
        425
      ],
      "op": "PUSH2",
      "path": "59",
      "value": "0x141"
    },
    "249": {
      "fn": "CountersImpl.decrement",
      "jump": "i",
      "offset": [
        407,
        427
      ],
      "op": "JUMP",
      "path": "59"
    },
    "250": {
      "fn": "CountersImpl.decrement",
      "offset": [
        407,
        427
      ],
      "op": "JUMPDEST",
      "path": "59"
    },
    "251": {
      "fn": "CountersImpl.decrement",
      "jump": "o",
      "offset": [
        369,
        434
      ],
      "op": "JUMP",
      "path": "59"
    },
    "252": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        427,
        585
      ],
      "op": "JUMPDEST",
      "path": "132"
    },
    "253": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        509,
        578
      ],
      "op": "PUSH2",
      "path": "132",
      "statement": 1,
      "value": "0x117"
    },
    "256": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        542,
        559
      ],
      "op": "DUP2",
      "path": "132"
    },
    "257": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        561,
        570
      ],
      "op": "PUSH1",
      "path": "132",
      "value": "0x40"
    },
    "259": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        561,
        570
      ],
      "op": "MLOAD",
      "path": "132"
    },
    "260": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        561,
        570
      ],
      "op": "DUP1",
      "path": "132"
    },
    "261": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        561,
        570
      ],
      "op": "PUSH1",
      "path": "132",
      "value": "0x20"
    },
    "263": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        561,
        570
      ],
      "op": "ADD",
      "path": "132"
    },
    "264": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        561,
        570
      ],
      "op": "PUSH1",
      "path": "132",
      "value": "0x40"
    },
    "266": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        561,
        570
      ],
      "op": "MSTORE",
      "path": "132"
    },
    "267": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        561,
        570
      ],
      "op": "DUP1",
      "path": "132"
    },
    "268": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        561,
        570
      ],
      "op": "PUSH1",
      "path": "132",
      "value": "0x0"
    },
    "270": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        561,
        570
      ],
      "op": "DUP2",
      "path": "132"
    },
    "271": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        561,
        570
      ],
      "op": "MSTORE",
      "path": "132"
    },
    "272": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        561,
        570
      ],
      "op": "POP",
      "path": "132"
    },
    "273": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        572,
        577
      ],
      "op": "PUSH1",
      "path": "132",
      "value": "0x0"
    },
    "275": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        509,
        541
      ],
      "op": "PUSH2",
      "path": "132",
      "value": "0x19D"
    },
    "278": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "jump": "i",
      "offset": [
        509,
        578
      ],
      "op": "JUMP",
      "path": "132"
    },
    "279": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        509,
        578
      ],
      "op": "JUMPDEST",
      "path": "132"
    },
    "280": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        427,
        585
      ],
      "op": "POP",
      "path": "132"
    },
    "281": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "jump": "o",
      "offset": [
        427,
        585
      ],
      "op": "JUMP",
      "path": "132"
    },
    "282": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeToAndCall",
      "offset": [
        591,
        778
      ],
      "op": "JUMPDEST",
      "path": "132"
    },
    "283": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeToAndCall",
      "offset": [
        707,
        771
      ],
      "op": "PUSH2",
      "path": "132",
      "statement": 2,
      "value": "0x126"
    },
    "286": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeToAndCall",
      "offset": [
        740,
        757
      ],
      "op": "DUP3",
      "path": "132"
    },
    "287": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeToAndCall",
      "offset": [
        759,
        763
      ],
      "op": "DUP3",
      "path": "132"
    },
    "288": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeToAndCall",
      "offset": [
        765,
        770
      ],
      "op": "PUSH1",
      "path": "132",
      "value": "0x0"
    },
    "290": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeToAndCall",
      "offset": [
        707,
        739
      ],
      "op": "PUSH2",
      "path": "132",
      "value": "0x19D"
    },
    "293": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeToAndCall",
      "jump": "i",
      "offset": [
        707,
        771
      ],
      "op": "JUMP",
      "path": "132"
    },
    "294": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeToAndCall",
      "offset": [
        707,
        771
      ],
      "op": "JUMPDEST",
      "path": "132"
    },
    "295": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeToAndCall",
      "offset": [
        591,
        778
      ],
      "op": "POP",
      "path": "132"
    },
    "296": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeToAndCall",
      "offset": [
        591,
        778
      ],
      "op": "POP",
      "path": "132"
    },
    "297": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeToAndCall",
      "jump": "o",
      "offset": [
        591,
        778
      ],
      "op": "JUMP",
      "path": "132"
    },
    "298": {
      "fn": "CountersImpl.increment",
      "offset": [
        298,
        363
      ],
      "op": "JUMPDEST",
      "path": "59"
    },
    "299": {
      "fn": "CountersImpl.increment",
      "offset": [
        336,
        356
      ],
      "op": "PUSH2",
      "path": "59",
      "statement": 3,
      "value": "0xFA"
    },
    "302": {
      "fn": "CountersImpl.increment",
      "offset": [
        336,
        344
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x0"
    },
    "304": {
      "op": "DUP1"
    },
    "305": {
      "op": "SLOAD"
    },
    "306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "308": {
      "op": "ADD"
    },
    "309": {
      "op": "SWAP1"
    },
    "310": {
      "op": "SSTORE"
    },
    "311": {
      "op": "JUMP"
    },
    "312": {
      "fn": "CountersImpl.reset",
      "offset": [
        440,
        497
      ],
      "op": "JUMPDEST",
      "path": "59"
    },
    "313": {
      "fn": "CountersImpl.reset",
      "offset": [
        474,
        490
      ],
      "op": "PUSH2",
      "path": "59",
      "statement": 4,
      "value": "0xFA"
    },
    "316": {
      "fn": "CountersImpl.reset",
      "offset": [
        474,
        482
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x0"
    },
    "318": {
      "op": "DUP1"
    },
    "319": {
      "op": "SSTORE"
    },
    "320": {
      "op": "JUMP"
    },
    "321": {
      "op": "JUMPDEST"
    },
    "322": {
      "op": "DUP1"
    },
    "323": {
      "op": "SLOAD"
    },
    "324": {
      "op": "DUP1"
    },
    "325": {
      "op": "PUSH2",
      "value": "0x195"
    },
    "328": {
      "op": "JUMPI"
    },
    "329": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "331": {
      "op": "MLOAD"
    },
    "332": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "336": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "338": {
      "op": "SHL"
    },
    "339": {
      "op": "DUP2"
    },
    "340": {
      "op": "MSTORE"
    },
    "341": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "343": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "345": {
      "op": "DUP3"
    },
    "346": {
      "op": "ADD"
    },
    "347": {
      "op": "MSTORE"
    },
    "348": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "350": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "352": {
      "op": "DUP3"
    },
    "353": {
      "op": "ADD"
    },
    "354": {
      "op": "MSTORE"
    },
    "355": {
      "op": "PUSH32",
      "value": "0x436F756E7465723A2064656372656D656E74206F766572666C6F770000000000"
    },
    "388": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "390": {
      "op": "DUP3"
    },
    "391": {
      "op": "ADD"
    },
    "392": {
      "op": "MSTORE"
    },
    "393": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "395": {
      "op": "ADD"
    },
    "396": {
      "op": "JUMPDEST"
    },
    "397": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "399": {
      "op": "MLOAD"
    },
    "400": {
      "op": "DUP1"
    },
    "401": {
      "op": "SWAP2"
    },
    "402": {
      "op": "SUB"
    },
    "403": {
      "op": "SWAP1"
    },
    "404": {
      "op": "REVERT"
    },
    "405": {
      "op": "JUMPDEST"
    },
    "406": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "408": {
      "op": "NOT"
    },
    "409": {
      "op": "ADD"
    },
    "410": {
      "op": "SWAP1"
    },
    "411": {
      "op": "SSTORE"
    },
    "412": {
      "jump": "o",
      "op": "JUMP"
    },
    "413": {
      "fn": "ERC1967Upgrade._upgradeToAndCall",
      "offset": [
        2122,
        2417
      ],
      "op": "JUMPDEST",
      "path": "140"
    },
    "414": {
      "fn": "ERC1967Upgrade._upgradeToAndCall",
      "offset": [
        2260,
        2289
      ],
      "op": "PUSH2",
      "path": "140",
      "statement": 5,
      "value": "0x1A6"
    },
    "417": {
      "fn": "ERC1967Upgrade._upgradeToAndCall",
      "offset": [
        2271,
        2288
      ],
      "op": "DUP4",
      "path": "140"
    },
    "418": {
      "fn": "ERC1967Upgrade._upgradeToAndCall",
      "offset": [
        2260,
        2270
      ],
      "op": "PUSH2",
      "path": "140",
      "value": "0x1C9"
    },
    "421": {
      "fn": "ERC1967Upgrade._upgradeToAndCall",
      "jump": "i",
      "offset": [
        2260,
        2289
      ],
      "op": "JUMP",
      "path": "140"
    },
    "422": {
      "fn": "ERC1967Upgrade._upgradeToAndCall",
      "offset": [
        2260,
        2289
      ],
      "op": "JUMPDEST",
      "path": "140"
    },
    "423": {
      "fn": "ERC1967Upgrade._upgradeToAndCall",
      "offset": [
        2317,
        2318
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x0"
    },
    "425": {
      "fn": "ERC1967Upgrade._upgradeToAndCall",
      "offset": [
        2303,
        2307
      ],
      "op": "DUP3",
      "path": "140"
    },
    "426": {
      "fn": "ERC1967Upgrade._upgradeToAndCall",
      "offset": [
        2303,
        2314
      ],
      "op": "MLOAD",
      "path": "140"
    },
    "427": {
      "branch": 11,
      "fn": "ERC1967Upgrade._upgradeToAndCall",
      "offset": [
        2303,
        2318
      ],
      "op": "GT",
      "path": "140"
    },
    "428": {
      "fn": "ERC1967Upgrade._upgradeToAndCall",
      "offset": [
        2303,
        2331
      ],
      "op": "DUP1",
      "path": "140"
    },
    "429": {
      "fn": "ERC1967Upgrade._upgradeToAndCall",
      "offset": [
        2303,
        2331
      ],
      "op": "PUSH2",
      "path": "140",
      "value": "0x1B3"
    },
    "432": {
      "branch": 11,
      "fn": "ERC1967Upgrade._upgradeToAndCall",
      "offset": [
        2303,
        2331
      ],
      "op": "JUMPI",
      "path": "140"
    },
    "433": {
      "fn": "ERC1967Upgrade._upgradeToAndCall",
      "offset": [
        2303,
        2331
      ],
      "op": "POP",
      "path": "140"
    },
    "434": {
      "branch": 12,
      "fn": "ERC1967Upgrade._upgradeToAndCall",
      "offset": [
        2322,
        2331
      ],
      "op": "DUP1",
      "path": "140"
    },
    "435": {
      "fn": "ERC1967Upgrade._upgradeToAndCall",
      "offset": [
        2303,
        2331
      ],
      "op": "JUMPDEST",
      "path": "140"
    },
    "436": {
      "fn": "ERC1967Upgrade._upgradeToAndCall",
      "offset": [
        2299,
        2411
      ],
      "op": "ISZERO",
      "path": "140"
    },
    "437": {
      "fn": "ERC1967Upgrade._upgradeToAndCall",
      "offset": [
        2299,
        2411
      ],
      "op": "PUSH2",
      "path": "140",
      "value": "0x1C4"
    },
    "440": {
      "branch": 12,
      "fn": "ERC1967Upgrade._upgradeToAndCall",
      "offset": [
        2299,
        2411
      ],
      "op": "JUMPI",
      "path": "140"
    },
    "441": {
      "fn": "ERC1967Upgrade._upgradeToAndCall",
      "offset": [
        2347,
        2400
      ],
      "op": "PUSH2",
      "path": "140",
      "statement": 6,
      "value": "0x1C2"
    },
    "444": {
      "fn": "ERC1967Upgrade._upgradeToAndCall",
      "offset": [
        2376,
        2393
      ],
      "op": "DUP4",
      "path": "140"
    },
    "445": {
      "fn": "ERC1967Upgrade._upgradeToAndCall",
      "offset": [
        2395,
        2399
      ],
      "op": "DUP4",
      "path": "140"
    },
    "446": {
      "fn": "ERC1967Upgrade._upgradeToAndCall",
      "offset": [
        2347,
        2375
      ],
      "op": "PUSH2",
      "path": "140",
      "value": "0x209"
    },
    "449": {
      "fn": "ERC1967Upgrade._upgradeToAndCall",
      "jump": "i",
      "offset": [
        2347,
        2400
      ],
      "op": "JUMP",
      "path": "140"
    },
    "450": {
      "fn": "ERC1967Upgrade._upgradeToAndCall",
      "offset": [
        2347,
        2400
      ],
      "op": "JUMPDEST",
      "path": "140"
    },
    "451": {
      "fn": "ERC1967Upgrade._upgradeToAndCall",
      "offset": [
        2347,
        2400
      ],
      "op": "POP",
      "path": "140"
    },
    "452": {
      "fn": "ERC1967Upgrade._upgradeToAndCall",
      "offset": [
        2299,
        2411
      ],
      "op": "JUMPDEST",
      "path": "140"
    },
    "453": {
      "fn": "ERC1967Upgrade._upgradeToAndCall",
      "offset": [
        2122,
        2417
      ],
      "op": "POP",
      "path": "140"
    },
    "454": {
      "fn": "ERC1967Upgrade._upgradeToAndCall",
      "offset": [
        2122,
        2417
      ],
      "op": "POP",
      "path": "140"
    },
    "455": {
      "fn": "ERC1967Upgrade._upgradeToAndCall",
      "offset": [
        2122,
        2417
      ],
      "op": "POP",
      "path": "140"
    },
    "456": {
      "fn": "ERC1967Upgrade._upgradeToAndCall",
      "jump": "o",
      "offset": [
        2122,
        2417
      ],
      "op": "JUMP",
      "path": "140"
    },
    "457": {
      "fn": "ERC1967Upgrade._upgradeTo",
      "offset": [
        1836,
        1988
      ],
      "op": "JUMPDEST",
      "path": "140"
    },
    "458": {
      "fn": "ERC1967Upgrade._upgradeTo",
      "offset": [
        1902,
        1939
      ],
      "op": "PUSH2",
      "path": "140",
      "statement": 7,
      "value": "0x1D2"
    },
    "461": {
      "fn": "ERC1967Upgrade._upgradeTo",
      "offset": [
        1921,
        1938
      ],
      "op": "DUP2",
      "path": "140"
    },
    "462": {
      "fn": "ERC1967Upgrade._upgradeTo",
      "offset": [
        1902,
        1920
      ],
      "op": "PUSH2",
      "path": "140",
      "value": "0x235"
    },
    "465": {
      "fn": "ERC1967Upgrade._upgradeTo",
      "jump": "i",
      "offset": [
        1902,
        1939
      ],
      "op": "JUMP",
      "path": "140"
    },
    "466": {
      "fn": "ERC1967Upgrade._upgradeTo",
      "offset": [
        1902,
        1939
      ],
      "op": "JUMPDEST",
      "path": "140"
    },
    "467": {
      "fn": "ERC1967Upgrade._upgradeTo",
      "offset": [
        1954,
        1981
      ],
      "op": "PUSH1",
      "path": "140",
      "statement": 8,
      "value": "0x40"
    },
    "469": {
      "fn": "ERC1967Upgrade._upgradeTo",
      "offset": [
        1954,
        1981
      ],
      "op": "MLOAD",
      "path": "140"
    },
    "470": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "474": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "476": {
      "op": "SHL"
    },
    "477": {
      "op": "SUB"
    },
    "478": {
      "fn": "ERC1967Upgrade._upgradeTo",
      "offset": [
        1954,
        1981
      ],
      "op": "DUP3",
      "path": "140"
    },
    "479": {
      "fn": "ERC1967Upgrade._upgradeTo",
      "offset": [
        1954,
        1981
      ],
      "op": "AND",
      "path": "140"
    },
    "480": {
      "fn": "ERC1967Upgrade._upgradeTo",
      "offset": [
        1954,
        1981
      ],
      "op": "SWAP1",
      "path": "140"
    },
    "481": {
      "fn": "ERC1967Upgrade._upgradeTo",
      "offset": [
        1954,
        1981
      ],
      "op": "PUSH32",
      "path": "140",
      "value": "0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
    },
    "514": {
      "fn": "ERC1967Upgrade._upgradeTo",
      "offset": [
        1954,
        1981
      ],
      "op": "SWAP1",
      "path": "140"
    },
    "515": {
      "fn": "ERC1967Upgrade._upgradeTo",
      "offset": [
        1954,
        1981
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x0"
    },
    "517": {
      "fn": "ERC1967Upgrade._upgradeTo",
      "offset": [
        1954,
        1981
      ],
      "op": "SWAP1",
      "path": "140"
    },
    "518": {
      "fn": "ERC1967Upgrade._upgradeTo",
      "offset": [
        1954,
        1981
      ],
      "op": "LOG2",
      "path": "140"
    },
    "519": {
      "fn": "ERC1967Upgrade._upgradeTo",
      "offset": [
        1836,
        1988
      ],
      "op": "POP",
      "path": "140"
    },
    "520": {
      "fn": "ERC1967Upgrade._upgradeTo",
      "jump": "o",
      "offset": [
        1836,
        1988
      ],
      "op": "JUMP",
      "path": "140"
    },
    "521": {
      "op": "JUMPDEST"
    },
    "522": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "524": {
      "op": "PUSH2",
      "value": "0x22E"
    },
    "527": {
      "op": "DUP4"
    },
    "528": {
      "op": "DUP4"
    },
    "529": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "531": {
      "op": "MLOAD"
    },
    "532": {
      "op": "DUP1"
    },
    "533": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "535": {
      "op": "ADD"
    },
    "536": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "538": {
      "op": "MSTORE"
    },
    "539": {
      "op": "DUP1"
    },
    "540": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "542": {
      "op": "DUP2"
    },
    "543": {
      "op": "MSTORE"
    },
    "544": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "546": {
      "op": "ADD"
    },
    "547": {
      "op": "PUSH2",
      "value": "0x57C"
    },
    "550": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "552": {
      "op": "SWAP2"
    },
    "553": {
      "op": "CODECOPY"
    },
    "554": {
      "op": "PUSH2",
      "value": "0x2E3"
    },
    "557": {
      "jump": "i",
      "op": "JUMP"
    },
    "558": {
      "op": "JUMPDEST"
    },
    "559": {
      "op": "SWAP4"
    },
    "560": {
      "op": "SWAP3"
    },
    "561": {
      "op": "POP"
    },
    "562": {
      "op": "POP"
    },
    "563": {
      "op": "POP"
    },
    "564": {
      "jump": "o",
      "op": "JUMP"
    },
    "565": {
      "fn": "ERC1967Upgrade._setImplementation",
      "offset": [
        1471,
        1730
      ],
      "op": "JUMPDEST",
      "path": "140"
    },
    "566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "570": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "572": {
      "op": "SHL"
    },
    "573": {
      "op": "SUB"
    },
    "574": {
      "op": "DUP2"
    },
    "575": {
      "op": "AND"
    },
    "576": {
      "op": "EXTCODESIZE"
    },
    "577": {
      "fn": "ERC1967Upgrade._setImplementation",
      "offset": [
        1544,
        1639
      ],
      "op": "PUSH2",
      "path": "140",
      "statement": 9,
      "value": "0x2A2"
    },
    "580": {
      "fn": "ERC1967Upgrade._setImplementation",
      "offset": [
        1544,
        1639
      ],
      "op": "JUMPI",
      "path": "140"
    },
    "581": {
      "fn": "ERC1967Upgrade._setImplementation",
      "offset": [
        1544,
        1639
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x40"
    },
    "583": {
      "fn": "ERC1967Upgrade._setImplementation",
      "offset": [
        1544,
        1639
      ],
      "op": "MLOAD",
      "path": "140"
    },
    "584": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "588": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "590": {
      "op": "SHL"
    },
    "591": {
      "fn": "ERC1967Upgrade._setImplementation",
      "offset": [
        1544,
        1639
      ],
      "op": "DUP2",
      "path": "140"
    },
    "592": {
      "fn": "ERC1967Upgrade._setImplementation",
      "offset": [
        1544,
        1639
      ],
      "op": "MSTORE",
      "path": "140"
    },
    "593": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "595": {
      "fn": "ERC1967Upgrade._setImplementation",
      "offset": [
        1544,
        1639
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x4"
    },
    "597": {
      "fn": "ERC1967Upgrade._setImplementation",
      "offset": [
        1544,
        1639
      ],
      "op": "DUP3",
      "path": "140"
    },
    "598": {
      "fn": "ERC1967Upgrade._setImplementation",
      "offset": [
        1544,
        1639
      ],
      "op": "ADD",
      "path": "140"
    },
    "599": {
      "op": "MSTORE"
    },
    "600": {
      "op": "PUSH1",
      "value": "0x2D"
    },
    "602": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "604": {
      "op": "DUP3"
    },
    "605": {
      "op": "ADD"
    },
    "606": {
      "op": "MSTORE"
    },
    "607": {
      "op": "PUSH32",
      "value": "0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E"
    },
    "640": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "642": {
      "op": "DUP3"
    },
    "643": {
      "op": "ADD"
    },
    "644": {
      "op": "MSTORE"
    },
    "645": {
      "op": "PUSH13",
      "value": "0x1BDD08184818DBDB9D1C9858DD"
    },
    "659": {
      "op": "PUSH1",
      "value": "0x9A"
    },
    "661": {
      "op": "SHL"
    },
    "662": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "664": {
      "op": "DUP3"
    },
    "665": {
      "op": "ADD"
    },
    "666": {
      "op": "MSTORE"
    },
    "667": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "669": {
      "op": "ADD"
    },
    "670": {
      "fn": "ERC1967Upgrade._setImplementation",
      "offset": [
        1544,
        1639
      ],
      "op": "PUSH2",
      "path": "140",
      "value": "0x18C"
    },
    "673": {
      "op": "JUMP"
    },
    "674": {
      "fn": "ERC1967Upgrade._setImplementation",
      "offset": [
        1544,
        1639
      ],
      "op": "JUMPDEST",
      "path": "140"
    },
    "675": {
      "offset": [
        969,
        1035
      ],
      "op": "PUSH32",
      "path": "140",
      "value": "0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
    },
    "708": {
      "fn": "ERC1967Upgrade._setImplementation",
      "offset": [
        1649,
        1723
      ],
      "op": "DUP1",
      "path": "140",
      "statement": 10
    },
    "709": {
      "fn": "ERC1967Upgrade._setImplementation",
      "offset": [
        1649,
        1723
      ],
      "op": "SLOAD",
      "path": "140"
    },
    "710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "712": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "714": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "716": {
      "op": "SHL"
    },
    "717": {
      "op": "SUB"
    },
    "718": {
      "op": "NOT"
    },
    "719": {
      "fn": "ERC1967Upgrade._setImplementation",
      "offset": [
        1649,
        1723
      ],
      "op": "AND",
      "path": "140"
    },
    "720": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "722": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "724": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "726": {
      "op": "SHL"
    },
    "727": {
      "op": "SUB"
    },
    "728": {
      "fn": "ERC1967Upgrade._setImplementation",
      "offset": [
        1649,
        1723
      ],
      "op": "SWAP3",
      "path": "140"
    },
    "729": {
      "fn": "ERC1967Upgrade._setImplementation",
      "offset": [
        1649,
        1723
      ],
      "op": "SWAP1",
      "path": "140"
    },
    "730": {
      "fn": "ERC1967Upgrade._setImplementation",
      "offset": [
        1649,
        1723
      ],
      "op": "SWAP3",
      "path": "140"
    },
    "731": {
      "fn": "ERC1967Upgrade._setImplementation",
      "offset": [
        1649,
        1723
      ],
      "op": "AND",
      "path": "140"
    },
    "732": {
      "fn": "ERC1967Upgrade._setImplementation",
      "offset": [
        1649,
        1723
      ],
      "op": "SWAP2",
      "path": "140"
    },
    "733": {
      "fn": "ERC1967Upgrade._setImplementation",
      "offset": [
        1649,
        1723
      ],
      "op": "SWAP1",
      "path": "140"
    },
    "734": {
      "fn": "ERC1967Upgrade._setImplementation",
      "offset": [
        1649,
        1723
      ],
      "op": "SWAP2",
      "path": "140"
    },
    "735": {
      "fn": "ERC1967Upgrade._setImplementation",
      "offset": [
        1649,
        1723
      ],
      "op": "OR",
      "path": "140"
    },
    "736": {
      "fn": "ERC1967Upgrade._setImplementation",
      "offset": [
        1649,
        1723
      ],
      "op": "SWAP1",
      "path": "140"
    },
    "737": {
      "fn": "ERC1967Upgrade._setImplementation",
      "offset": [
        1649,
        1723
      ],
      "op": "SSTORE",
      "path": "140"
    },
    "738": {
      "fn": "ERC1967Upgrade._setImplementation",
      "jump": "o",
      "offset": [
        1471,
        1730
      ],
      "op": "JUMP",
      "path": "140"
    },
    "739": {
      "op": "JUMPDEST"
    },
    "740": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "742": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "744": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "746": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "748": {
      "op": "SHL"
    },
    "749": {
      "op": "SUB"
    },
    "750": {
      "op": "DUP5"
    },
    "751": {
      "op": "AND"
    },
    "752": {
      "op": "EXTCODESIZE"
    },
    "753": {
      "op": "PUSH2",
      "value": "0x34B"
    },
    "756": {
      "op": "JUMPI"
    },
    "757": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "759": {
      "op": "MLOAD"
    },
    "760": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "764": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "766": {
      "op": "SHL"
    },
    "767": {
      "op": "DUP2"
    },
    "768": {
      "op": "MSTORE"
    },
    "769": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "771": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "773": {
      "op": "DUP3"
    },
    "774": {
      "op": "ADD"
    },
    "775": {
      "op": "MSTORE"
    },
    "776": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "778": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "780": {
      "op": "DUP3"
    },
    "781": {
      "op": "ADD"
    },
    "782": {
      "op": "MSTORE"
    },
    "783": {
      "op": "PUSH32",
      "value": "0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F"
    },
    "816": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "818": {
      "op": "DUP3"
    },
    "819": {
      "op": "ADD"
    },
    "820": {
      "op": "MSTORE"
    },
    "821": {
      "op": "PUSH6",
      "value": "0x1B9D1C9858DD"
    },
    "828": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "830": {
      "op": "SHL"
    },
    "831": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "833": {
      "op": "DUP3"
    },
    "834": {
      "op": "ADD"
    },
    "835": {
      "op": "MSTORE"
    },
    "836": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "838": {
      "op": "ADD"
    },
    "839": {
      "op": "PUSH2",
      "value": "0x18C"
    },
    "842": {
      "op": "JUMP"
    },
    "843": {
      "op": "JUMPDEST"
    },
    "844": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "846": {
      "op": "DUP1"
    },
    "847": {
      "op": "DUP6"
    },
    "848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "852": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "854": {
      "op": "SHL"
    },
    "855": {
      "op": "SUB"
    },
    "856": {
      "op": "AND"
    },
    "857": {
      "op": "DUP6"
    },
    "858": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "860": {
      "op": "MLOAD"
    },
    "861": {
      "op": "PUSH2",
      "value": "0x366"
    },
    "864": {
      "op": "SWAP2"
    },
    "865": {
      "op": "SWAP1"
    },
    "866": {
      "op": "PUSH2",
      "value": "0x52C"
    },
    "869": {
      "jump": "i",
      "op": "JUMP"
    },
    "870": {
      "op": "JUMPDEST"
    },
    "871": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "873": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "875": {
      "op": "MLOAD"
    },
    "876": {
      "op": "DUP1"
    },
    "877": {
      "op": "DUP4"
    },
    "878": {
      "op": "SUB"
    },
    "879": {
      "op": "DUP2"
    },
    "880": {
      "op": "DUP6"
    },
    "881": {
      "op": "GAS"
    },
    "882": {
      "op": "DELEGATECALL"
    },
    "883": {
      "op": "SWAP2"
    },
    "884": {
      "op": "POP"
    },
    "885": {
      "op": "POP"
    },
    "886": {
      "op": "RETURNDATASIZE"
    },
    "887": {
      "op": "DUP1"
    },
    "888": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "890": {
      "op": "DUP2"
    },
    "891": {
      "op": "EQ"
    },
    "892": {
      "op": "PUSH2",
      "value": "0x3A1"
    },
    "895": {
      "op": "JUMPI"
    },
    "896": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "898": {
      "op": "MLOAD"
    },
    "899": {
      "op": "SWAP2"
    },
    "900": {
      "op": "POP"
    },
    "901": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "903": {
      "op": "NOT"
    },
    "904": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "906": {
      "op": "RETURNDATASIZE"
    },
    "907": {
      "op": "ADD"
    },
    "908": {
      "op": "AND"
    },
    "909": {
      "op": "DUP3"
    },
    "910": {
      "op": "ADD"
    },
    "911": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "913": {
      "op": "MSTORE"
    },
    "914": {
      "op": "RETURNDATASIZE"
    },
    "915": {
      "op": "DUP3"
    },
    "916": {
      "op": "MSTORE"
    },
    "917": {
      "op": "RETURNDATASIZE"
    },
    "918": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "920": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "922": {
      "op": "DUP5"
    },
    "923": {
      "op": "ADD"
    },
    "924": {
      "op": "RETURNDATACOPY"
    },
    "925": {
      "op": "PUSH2",
      "value": "0x3A6"
    },
    "928": {
      "op": "JUMP"
    },
    "929": {
      "op": "JUMPDEST"
    },
    "930": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "932": {
      "op": "SWAP2"
    },
    "933": {
      "op": "POP"
    },
    "934": {
      "op": "JUMPDEST"
    },
    "935": {
      "op": "POP"
    },
    "936": {
      "op": "SWAP2"
    },
    "937": {
      "op": "POP"
    },
    "938": {
      "op": "SWAP2"
    },
    "939": {
      "op": "POP"
    },
    "940": {
      "op": "PUSH2",
      "value": "0x3B6"
    },
    "943": {
      "op": "DUP3"
    },
    "944": {
      "op": "DUP3"
    },
    "945": {
      "op": "DUP7"
    },
    "946": {
      "op": "PUSH2",
      "value": "0x3C0"
    },
    "949": {
      "jump": "i",
      "op": "JUMP"
    },
    "950": {
      "op": "JUMPDEST"
    },
    "951": {
      "op": "SWAP7"
    },
    "952": {
      "op": "SWAP6"
    },
    "953": {
      "op": "POP"
    },
    "954": {
      "op": "POP"
    },
    "955": {
      "op": "POP"
    },
    "956": {
      "op": "POP"
    },
    "957": {
      "op": "POP"
    },
    "958": {
      "op": "POP"
    },
    "959": {
      "jump": "o",
      "op": "JUMP"
    },
    "960": {
      "op": "JUMPDEST"
    },
    "961": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "963": {
      "op": "DUP4"
    },
    "964": {
      "op": "ISZERO"
    },
    "965": {
      "op": "PUSH2",
      "value": "0x3CF"
    },
    "968": {
      "op": "JUMPI"
    },
    "969": {
      "op": "POP"
    },
    "970": {
      "op": "DUP2"
    },
    "971": {
      "op": "PUSH2",
      "value": "0x22E"
    },
    "974": {
      "op": "JUMP"
    },
    "975": {
      "op": "JUMPDEST"
    },
    "976": {
      "op": "DUP3"
    },
    "977": {
      "op": "MLOAD"
    },
    "978": {
      "op": "ISZERO"
    },
    "979": {
      "op": "PUSH2",
      "value": "0x3DF"
    },
    "982": {
      "op": "JUMPI"
    },
    "983": {
      "op": "DUP3"
    },
    "984": {
      "op": "MLOAD"
    },
    "985": {
      "op": "DUP1"
    },
    "986": {
      "op": "DUP5"
    },
    "987": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "989": {
      "op": "ADD"
    },
    "990": {
      "op": "REVERT"
    },
    "991": {
      "op": "JUMPDEST"
    },
    "992": {
      "op": "DUP2"
    },
    "993": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "995": {
      "op": "MLOAD"
    },
    "996": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1000": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1002": {
      "op": "SHL"
    },
    "1003": {
      "op": "DUP2"
    },
    "1004": {
      "op": "MSTORE"
    },
    "1005": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1007": {
      "op": "ADD"
    },
    "1008": {
      "op": "PUSH2",
      "value": "0x18C"
    },
    "1011": {
      "op": "SWAP2"
    },
    "1012": {
      "op": "SWAP1"
    },
    "1013": {
      "op": "PUSH2",
      "value": "0x548"
    },
    "1016": {
      "jump": "i",
      "op": "JUMP"
    },
    "1017": {
      "op": "JUMPDEST"
    },
    "1018": {
      "op": "DUP1"
    },
    "1019": {
      "op": "CALLDATALOAD"
    },
    "1020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1022": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1024": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1026": {
      "op": "SHL"
    },
    "1027": {
      "op": "SUB"
    },
    "1028": {
      "op": "DUP2"
    },
    "1029": {
      "op": "AND"
    },
    "1030": {
      "op": "DUP2"
    },
    "1031": {
      "op": "EQ"
    },
    "1032": {
      "op": "PUSH2",
      "value": "0x410"
    },
    "1035": {
      "op": "JUMPI"
    },
    "1036": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1038": {
      "op": "DUP1"
    },
    "1039": {
      "op": "REVERT"
    },
    "1040": {
      "op": "JUMPDEST"
    },
    "1041": {
      "op": "SWAP2"
    },
    "1042": {
      "op": "SWAP1"
    },
    "1043": {
      "op": "POP"
    },
    "1044": {
      "jump": "o",
      "op": "JUMP"
    },
    "1045": {
      "op": "JUMPDEST"
    },
    "1046": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1048": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1050": {
      "op": "DUP3"
    },
    "1051": {
      "op": "DUP5"
    },
    "1052": {
      "op": "SUB"
    },
    "1053": {
      "op": "SLT"
    },
    "1054": {
      "op": "ISZERO"
    },
    "1055": {
      "op": "PUSH2",
      "value": "0x427"
    },
    "1058": {
      "op": "JUMPI"
    },
    "1059": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1061": {
      "op": "DUP1"
    },
    "1062": {
      "op": "REVERT"
    },
    "1063": {
      "op": "JUMPDEST"
    },
    "1064": {
      "op": "PUSH2",
      "value": "0x22E"
    },
    "1067": {
      "op": "DUP3"
    },
    "1068": {
      "op": "PUSH2",
      "value": "0x3F9"
    },
    "1071": {
      "jump": "i",
      "op": "JUMP"
    },
    "1072": {
      "op": "JUMPDEST"
    },
    "1073": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1078": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1080": {
      "op": "SHL"
    },
    "1081": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1083": {
      "op": "MSTORE"
    },
    "1084": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "1086": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1088": {
      "op": "MSTORE"
    },
    "1089": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1091": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1093": {
      "op": "REVERT"
    },
    "1094": {
      "op": "JUMPDEST"
    },
    "1095": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1097": {
      "op": "DUP1"
    },
    "1098": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1100": {
      "op": "DUP4"
    },
    "1101": {
      "op": "DUP6"
    },
    "1102": {
      "op": "SUB"
    },
    "1103": {
      "op": "SLT"
    },
    "1104": {
      "op": "ISZERO"
    },
    "1105": {
      "op": "PUSH2",
      "value": "0x459"
    },
    "1108": {
      "op": "JUMPI"
    },
    "1109": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1111": {
      "op": "DUP1"
    },
    "1112": {
      "op": "REVERT"
    },
    "1113": {
      "op": "JUMPDEST"
    },
    "1114": {
      "op": "PUSH2",
      "value": "0x462"
    },
    "1117": {
      "op": "DUP4"
    },
    "1118": {
      "op": "PUSH2",
      "value": "0x3F9"
    },
    "1121": {
      "jump": "i",
      "op": "JUMP"
    },
    "1122": {
      "op": "JUMPDEST"
    },
    "1123": {
      "op": "SWAP2"
    },
    "1124": {
      "op": "POP"
    },
    "1125": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1127": {
      "op": "DUP4"
    },
    "1128": {
      "op": "ADD"
    },
    "1129": {
      "op": "CALLDATALOAD"
    },
    "1130": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1139": {
      "op": "DUP1"
    },
    "1140": {
      "op": "DUP3"
    },
    "1141": {
      "op": "GT"
    },
    "1142": {
      "op": "ISZERO"
    },
    "1143": {
      "op": "PUSH2",
      "value": "0x47F"
    },
    "1146": {
      "op": "JUMPI"
    },
    "1147": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1149": {
      "op": "DUP1"
    },
    "1150": {
      "op": "REVERT"
    },
    "1151": {
      "op": "JUMPDEST"
    },
    "1152": {
      "op": "DUP2"
    },
    "1153": {
      "op": "DUP6"
    },
    "1154": {
      "op": "ADD"
    },
    "1155": {
      "op": "SWAP2"
    },
    "1156": {
      "op": "POP"
    },
    "1157": {
      "op": "DUP6"
    },
    "1158": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1160": {
      "op": "DUP4"
    },
    "1161": {
      "op": "ADD"
    },
    "1162": {
      "op": "SLT"
    },
    "1163": {
      "op": "PUSH2",
      "value": "0x493"
    },
    "1166": {
      "op": "JUMPI"
    },
    "1167": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1169": {
      "op": "DUP1"
    },
    "1170": {
      "op": "REVERT"
    },
    "1171": {
      "op": "JUMPDEST"
    },
    "1172": {
      "op": "DUP2"
    },
    "1173": {
      "op": "CALLDATALOAD"
    },
    "1174": {
      "op": "DUP2"
    },
    "1175": {
      "op": "DUP2"
    },
    "1176": {
      "op": "GT"
    },
    "1177": {
      "op": "ISZERO"
    },
    "1178": {
      "op": "PUSH2",
      "value": "0x4A5"
    },
    "1181": {
      "op": "JUMPI"
    },
    "1182": {
      "op": "PUSH2",
      "value": "0x4A5"
    },
    "1185": {
      "op": "PUSH2",
      "value": "0x430"
    },
    "1188": {
      "jump": "i",
      "op": "JUMP"
    },
    "1189": {
      "op": "JUMPDEST"
    },
    "1190": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1192": {
      "op": "MLOAD"
    },
    "1193": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1195": {
      "op": "DUP3"
    },
    "1196": {
      "op": "ADD"
    },
    "1197": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1199": {
      "op": "NOT"
    },
    "1200": {
      "op": "SWAP1"
    },
    "1201": {
      "op": "DUP2"
    },
    "1202": {
      "op": "AND"
    },
    "1203": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "1205": {
      "op": "ADD"
    },
    "1206": {
      "op": "AND"
    },
    "1207": {
      "op": "DUP2"
    },
    "1208": {
      "op": "ADD"
    },
    "1209": {
      "op": "SWAP1"
    },
    "1210": {
      "op": "DUP4"
    },
    "1211": {
      "op": "DUP3"
    },
    "1212": {
      "op": "GT"
    },
    "1213": {
      "op": "DUP2"
    },
    "1214": {
      "op": "DUP4"
    },
    "1215": {
      "op": "LT"
    },
    "1216": {
      "op": "OR"
    },
    "1217": {
      "op": "ISZERO"
    },
    "1218": {
      "op": "PUSH2",
      "value": "0x4CD"
    },
    "1221": {
      "op": "JUMPI"
    },
    "1222": {
      "op": "PUSH2",
      "value": "0x4CD"
    },
    "1225": {
      "op": "PUSH2",
      "value": "0x430"
    },
    "1228": {
      "jump": "i",
      "op": "JUMP"
    },
    "1229": {
      "op": "JUMPDEST"
    },
    "1230": {
      "op": "DUP2"
    },
    "1231": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1233": {
      "op": "MSTORE"
    },
    "1234": {
      "op": "DUP3"
    },
    "1235": {
      "op": "DUP2"
    },
    "1236": {
      "op": "MSTORE"
    },
    "1237": {
      "op": "DUP9"
    },
    "1238": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1240": {
      "op": "DUP5"
    },
    "1241": {
      "op": "DUP8"
    },
    "1242": {
      "op": "ADD"
    },
    "1243": {
      "op": "ADD"
    },
    "1244": {
      "op": "GT"
    },
    "1245": {
      "op": "ISZERO"
    },
    "1246": {
      "op": "PUSH2",
      "value": "0x4E6"
    },
    "1249": {
      "op": "JUMPI"
    },
    "1250": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1252": {
      "op": "DUP1"
    },
    "1253": {
      "op": "REVERT"
    },
    "1254": {
      "op": "JUMPDEST"
    },
    "1255": {
      "op": "DUP3"
    },
    "1256": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1258": {
      "op": "DUP7"
    },
    "1259": {
      "op": "ADD"
    },
    "1260": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1262": {
      "op": "DUP4"
    },
    "1263": {
      "op": "ADD"
    },
    "1264": {
      "op": "CALLDATACOPY"
    },
    "1265": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1267": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1269": {
      "op": "DUP5"
    },
    "1270": {
      "op": "DUP4"
    },
    "1271": {
      "op": "ADD"
    },
    "1272": {
      "op": "ADD"
    },
    "1273": {
      "op": "MSTORE"
    },
    "1274": {
      "op": "DUP1"
    },
    "1275": {
      "op": "SWAP6"
    },
    "1276": {
      "op": "POP"
    },
    "1277": {
      "op": "POP"
    },
    "1278": {
      "op": "POP"
    },
    "1279": {
      "op": "POP"
    },
    "1280": {
      "op": "POP"
    },
    "1281": {
      "op": "POP"
    },
    "1282": {
      "op": "SWAP3"
    },
    "1283": {
      "op": "POP"
    },
    "1284": {
      "op": "SWAP3"
    },
    "1285": {
      "op": "SWAP1"
    },
    "1286": {
      "op": "POP"
    },
    "1287": {
      "jump": "o",
      "op": "JUMP"
    },
    "1288": {
      "op": "JUMPDEST"
    },
    "1289": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1291": {
      "op": "JUMPDEST"
    },
    "1292": {
      "op": "DUP4"
    },
    "1293": {
      "op": "DUP2"
    },
    "1294": {
      "op": "LT"
    },
    "1295": {
      "op": "ISZERO"
    },
    "1296": {
      "op": "PUSH2",
      "value": "0x523"
    },
    "1299": {
      "op": "JUMPI"
    },
    "1300": {
      "op": "DUP2"
    },
    "1301": {
      "op": "DUP2"
    },
    "1302": {
      "op": "ADD"
    },
    "1303": {
      "op": "MLOAD"
    },
    "1304": {
      "op": "DUP4"
    },
    "1305": {
      "op": "DUP3"
    },
    "1306": {
      "op": "ADD"
    },
    "1307": {
      "op": "MSTORE"
    },
    "1308": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1310": {
      "op": "ADD"
    },
    "1311": {
      "op": "PUSH2",
      "value": "0x50B"
    },
    "1314": {
      "op": "JUMP"
    },
    "1315": {
      "op": "JUMPDEST"
    },
    "1316": {
      "op": "POP"
    },
    "1317": {
      "op": "POP"
    },
    "1318": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1320": {
      "op": "SWAP2"
    },
    "1321": {
      "op": "ADD"
    },
    "1322": {
      "op": "MSTORE"
    },
    "1323": {
      "jump": "o",
      "op": "JUMP"
    },
    "1324": {
      "op": "JUMPDEST"
    },
    "1325": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1327": {
      "op": "DUP3"
    },
    "1328": {
      "op": "MLOAD"
    },
    "1329": {
      "op": "PUSH2",
      "value": "0x53E"
    },
    "1332": {
      "op": "DUP2"
    },
    "1333": {
      "op": "DUP5"
    },
    "1334": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1336": {
      "op": "DUP8"
    },
    "1337": {
      "op": "ADD"
    },
    "1338": {
      "op": "PUSH2",
      "value": "0x508"
    },
    "1341": {
      "jump": "i",
      "op": "JUMP"
    },
    "1342": {
      "op": "JUMPDEST"
    },
    "1343": {
      "op": "SWAP2"
    },
    "1344": {
      "op": "SWAP1"
    },
    "1345": {
      "op": "SWAP2"
    },
    "1346": {
      "op": "ADD"
    },
    "1347": {
      "op": "SWAP3"
    },
    "1348": {
      "op": "SWAP2"
    },
    "1349": {
      "op": "POP"
    },
    "1350": {
      "op": "POP"
    },
    "1351": {
      "jump": "o",
      "op": "JUMP"
    },
    "1352": {
      "op": "JUMPDEST"
    },
    "1353": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1355": {
      "op": "DUP2"
    },
    "1356": {
      "op": "MSTORE"
    },
    "1357": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1359": {
      "op": "DUP3"
    },
    "1360": {
      "op": "MLOAD"
    },
    "1361": {
      "op": "DUP1"
    },
    "1362": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1364": {
      "op": "DUP5"
    },
    "1365": {
      "op": "ADD"
    },
    "1366": {
      "op": "MSTORE"
    },
    "1367": {
      "op": "PUSH2",
      "value": "0x567"
    },
    "1370": {
      "op": "DUP2"
    },
    "1371": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1373": {
      "op": "DUP6"
    },
    "1374": {
      "op": "ADD"
    },
    "1375": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1377": {
      "op": "DUP8"
    },
    "1378": {
      "op": "ADD"
    },
    "1379": {
      "op": "PUSH2",
      "value": "0x508"
    },
    "1382": {
      "jump": "i",
      "op": "JUMP"
    },
    "1383": {
      "op": "JUMPDEST"
    },
    "1384": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1386": {
      "op": "ADD"
    },
    "1387": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1389": {
      "op": "NOT"
    },
    "1390": {
      "op": "AND"
    },
    "1391": {
      "op": "SWAP2"
    },
    "1392": {
      "op": "SWAP1"
    },
    "1393": {
      "op": "SWAP2"
    },
    "1394": {
      "op": "ADD"
    },
    "1395": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1397": {
      "op": "ADD"
    },
    "1398": {
      "op": "SWAP3"
    },
    "1399": {
      "op": "SWAP2"
    },
    "1400": {
      "op": "POP"
    },
    "1401": {
      "op": "POP"
    },
    "1402": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "c8a10b888a9c5a23274c596fd65f2208cf3de150",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../CountersImpl.sol\";\nimport \"../../proxy/utils/UUPSUpgradeable.sol\";\n\ncontract UUPSUpgradeableMock is CountersImpl, UUPSUpgradeable {\n    // Not having any checks in this function is dangerous! Do not do this outside tests!\n    function _authorizeUpgrade(address) internal virtual override {}\n}\n\ncontract UUPSUpgradeableUnsafeMock is UUPSUpgradeableMock {\n    function upgradeTo(address newImplementation) external virtual override {\n        ERC1967Upgrade._upgradeToAndCall(newImplementation, bytes(\"\"), false);\n    }\n\n    function upgradeToAndCall(address newImplementation, bytes memory data) external payable virtual override {\n        ERC1967Upgrade._upgradeToAndCall(newImplementation, data, false);\n    }\n}\n\ncontract UUPSUpgradeableBrokenMock is UUPSUpgradeableMock {\n    function upgradeTo(address) external virtual override {\n        // pass\n    }\n\n    function upgradeToAndCall(address, bytes memory) external payable virtual override {\n        // pass\n    }\n}\n",
  "sourceMap": "363:417:132:-:0;;;1008:4:148;965:48;;363:417:132;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/openzeppelin-solidity/contracts/mocks/UUPS/TestInProd.sol",
  "type": "contract"
}