{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "payee",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "weiAmount",
          "type": "uint256"
        }
      ],
      "name": "Deposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "payee",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "weiAmount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawn",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "payee",
          "type": "address"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "payee",
          "type": "address"
        }
      ],
      "name": "depositsOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "payee",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "payee",
          "type": "address"
        }
      ],
      "name": "withdrawalAllowed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "11": "contracts/openzeppelin-solidity/contracts/access/Ownable.sol",
    "202": "contracts/openzeppelin-solidity/contracts/utils/Context.sol",
    "213": "contracts/openzeppelin-solidity/contracts/utils/escrow/ConditionalEscrow.sol",
    "214": "contracts/openzeppelin-solidity/contracts/utils/escrow/Escrow.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin-solidity/contracts/utils/escrow/ConditionalEscrow.sol",
    "exportedSymbols": {
      "Address": [
        29802
      ],
      "ConditionalEscrow": [
        31675
      ],
      "Context": [
        30190
      ],
      "Escrow": [
        31771
      ],
      "Ownable": [
        4610
      ]
    },
    "id": 31676,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 31642,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "103:23:213"
      },
      {
        "absolutePath": "contracts/openzeppelin-solidity/contracts/utils/escrow/Escrow.sol",
        "file": "./Escrow.sol",
        "id": 31643,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 31676,
        "sourceUnit": 31772,
        "src": "128:22:213",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 31645,
              "name": "Escrow",
              "nameLocations": [
                "376:6:213"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31771,
              "src": "376:6:213"
            },
            "id": 31646,
            "nodeType": "InheritanceSpecifier",
            "src": "376:6:213"
          }
        ],
        "canonicalName": "ConditionalEscrow",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 31644,
          "nodeType": "StructuredDocumentation",
          "src": "152:184:213",
          "text": " @title ConditionalEscrow\n @dev Base abstract escrow to only allow withdrawal if a condition is met.\n @dev Intended usage: See {Escrow}. Same usage guidelines apply here."
        },
        "fullyImplemented": false,
        "id": 31675,
        "linearizedBaseContracts": [
          31675,
          31771,
          4610,
          30190
        ],
        "name": "ConditionalEscrow",
        "nameLocation": "355:17:213",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 31647,
              "nodeType": "StructuredDocumentation",
              "src": "389:191:213",
              "text": " @dev Returns whether an address is allowed to withdraw their funds. To be\n implemented by derived contracts.\n @param payee The destination address of the funds."
            },
            "functionSelector": "685ca194",
            "id": 31654,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawalAllowed",
            "nameLocation": "594:17:213",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 31650,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31649,
                  "mutability": "mutable",
                  "name": "payee",
                  "nameLocation": "620:5:213",
                  "nodeType": "VariableDeclaration",
                  "scope": 31654,
                  "src": "612:13:213",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31648,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "612:7:213",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "611:15:213"
            },
            "returnParameters": {
              "id": 31653,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31652,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 31654,
                  "src": "656:4:213",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 31651,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "656:4:213",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "655:6:213"
            },
            "scope": 31675,
            "src": "585:77:213",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              31770
            ],
            "body": {
              "id": 31673,
              "nodeType": "Block",
              "src": "733:136:213",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 31662,
                            "name": "payee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31656,
                            "src": "769:5:213",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 31661,
                          "name": "withdrawalAllowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31654,
                          "src": "751:17:213",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 31663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "751:24:213",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e646974696f6e616c457363726f773a207061796565206973206e6f7420616c6c6f77656420746f207769746864726177",
                        "id": 31664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "777:53:213",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8ab85541a5cdc1a44c30d5b8b58432efbc37ed9be825439a16d2e39ce610814a",
                          "typeString": "literal_string \"ConditionalEscrow: payee is not allowed to withdraw\""
                        },
                        "value": "ConditionalEscrow: payee is not allowed to withdraw"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8ab85541a5cdc1a44c30d5b8b58432efbc37ed9be825439a16d2e39ce610814a",
                          "typeString": "literal_string \"ConditionalEscrow: payee is not allowed to withdraw\""
                        }
                      ],
                      "id": 31660,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "743:7:213",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 31665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "743:88:213",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31666,
                  "nodeType": "ExpressionStatement",
                  "src": "743:88:213"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31670,
                        "name": "payee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31656,
                        "src": "856:5:213",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 31667,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "841:5:213",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ConditionalEscrow_$31675_$",
                          "typeString": "type(contract super ConditionalEscrow)"
                        }
                      },
                      "id": 31669,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "847:8:213",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31770,
                      "src": "841:14:213",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 31671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "841:21:213",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31672,
                  "nodeType": "ExpressionStatement",
                  "src": "841:21:213"
                }
              ]
            },
            "functionSelector": "51cff8d9",
            "id": 31674,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "677:8:213",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 31658,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "724:8:213"
            },
            "parameters": {
              "id": 31657,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31656,
                  "mutability": "mutable",
                  "name": "payee",
                  "nameLocation": "702:5:213",
                  "nodeType": "VariableDeclaration",
                  "scope": 31674,
                  "src": "686:21:213",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 31655,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "686:15:213",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "685:23:213"
            },
            "returnParameters": {
              "id": 31659,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "733:0:213"
            },
            "scope": 31675,
            "src": "668:201:213",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 31676,
        "src": "337:534:213",
        "usedErrors": [],
        "usedEvents": [
          4519,
          31691,
          31697
        ]
      }
    ],
    "src": "103:769:213"
  },
  "bytecode": "",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.21+commit.d9974bed"
  },
  "contractName": "ConditionalEscrow",
  "coverageMap": {
    "branches": {},
    "statements": {}
  },
  "dependencies": [
    "Context",
    "Escrow",
    "Ownable"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "",
  "language": "Solidity",
  "natspec": {
    "details": "Base abstract escrow to only allow withdrawal if a condition is met.Intended usage: See {Escrow}. Same usage guidelines apply here.",
    "kind": "dev",
    "methods": {
      "deposit(address)": {
        "details": "Stores the sent amount as credit to be withdrawn.",
        "params": {
          "payee": "The destination address of the funds."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "withdraw(address)": {
        "details": "Withdraw accumulated balance for a payee, forwarding all gas to the recipient. WARNING: Forwarding all gas opens the door to reentrancy vulnerabilities. Make sure you trust the recipient, or are either following the checks-effects-interactions pattern or using {ReentrancyGuard}.",
        "params": {
          "payee": "The address whose funds will be withdrawn and transferred to."
        }
      },
      "withdrawalAllowed(address)": {
        "details": "Returns whether an address is allowed to withdraw their funds. To be implemented by derived contracts.",
        "params": {
          "payee": "The destination address of the funds."
        }
      }
    },
    "title": "ConditionalEscrow",
    "version": 1
  },
  "offset": [
    337,
    871
  ],
  "opcodes": "",
  "pcMap": {},
  "sha1": "5e7b98f38f977dae49a30310d5a5fdd952afdf61",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/escrow/ConditionalEscrow.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./Escrow.sol\";\n\n/**\n * @title ConditionalEscrow\n * @dev Base abstract escrow to only allow withdrawal if a condition is met.\n * @dev Intended usage: See {Escrow}. Same usage guidelines apply here.\n */\nabstract contract ConditionalEscrow is Escrow {\n    /**\n     * @dev Returns whether an address is allowed to withdraw their funds. To be\n     * implemented by derived contracts.\n     * @param payee The destination address of the funds.\n     */\n    function withdrawalAllowed(address payee) public view virtual returns (bool);\n\n    function withdraw(address payable payee) public virtual override {\n        require(withdrawalAllowed(payee), \"ConditionalEscrow: payee is not allowed to withdraw\");\n        super.withdraw(payee);\n    }\n}\n",
  "sourceMap": "",
  "sourcePath": "contracts/openzeppelin-solidity/contracts/utils/escrow/ConditionalEscrow.sol",
  "type": "contract"
}