{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trustedForwarder",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "integerValue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "stringValue",
          "type": "string"
        }
      ],
      "name": "Data",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "Sender",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "integerValue",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "stringValue",
          "type": "string"
        }
      ],
      "name": "msgData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "msgSender",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "202": "contracts/openzeppelin-solidity/contracts/utils/Context.sol",
    "44": "contracts/openzeppelin-solidity/contracts/metatx/ERC2771Context.sol",
    "58": "contracts/openzeppelin-solidity/contracts/mocks/ContextMock.sol",
    "88": "contracts/openzeppelin-solidity/contracts/mocks/ERC2771ContextMock.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin-solidity/contracts/mocks/ERC2771ContextMock.sol",
    "exportedSymbols": {
      "Context": [
        30190
      ],
      "ContextMock": [
        11618
      ],
      "ContextMockCaller": [
        11649
      ],
      "ERC2771Context": [
        10761
      ],
      "ERC2771ContextMock": [
        13295
      ]
    },
    "id": 13296,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 13247,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:88"
      },
      {
        "absolutePath": "contracts/openzeppelin-solidity/contracts/mocks/ContextMock.sol",
        "file": "./ContextMock.sol",
        "id": 13248,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 13296,
        "sourceUnit": 11650,
        "src": "58:27:88",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-solidity/contracts/metatx/ERC2771Context.sol",
        "file": "../metatx/ERC2771Context.sol",
        "id": 13249,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 13296,
        "sourceUnit": 10762,
        "src": "86:38:88",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 13250,
              "name": "ContextMock",
              "nameLocations": [
                "253:11:88"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11618,
              "src": "253:11:88"
            },
            "id": 13251,
            "nodeType": "InheritanceSpecifier",
            "src": "253:11:88"
          },
          {
            "baseName": {
              "id": 13252,
              "name": "ERC2771Context",
              "nameLocations": [
                "266:14:88"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10761,
              "src": "266:14:88"
            },
            "id": 13253,
            "nodeType": "InheritanceSpecifier",
            "src": "266:14:88"
          }
        ],
        "canonicalName": "ERC2771ContextMock",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 13295,
        "linearizedBaseContracts": [
          13295,
          10761,
          11618,
          30190
        ],
        "name": "ERC2771ContextMock",
        "nameLocation": "231:18:88",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 13267,
              "nodeType": "Block",
              "src": "411:99:88",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 13263,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            13281
                          ],
                          "referencedDeclaration": 13281,
                          "src": "433:10:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 13264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "433:12:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 13262,
                      "name": "Sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11585,
                      "src": "426:6:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 13265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "426:20:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13266,
                  "nodeType": "EmitStatement",
                  "src": "421:25:88"
                }
              ]
            },
            "documentation": {
              "id": 13254,
              "nodeType": "StructuredDocumentation",
              "src": "287:48:88",
              "text": "@custom:oz-upgrades-unsafe-allow constructor"
            },
            "id": 13268,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 13259,
                    "name": "trustedForwarder",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13256,
                    "src": "393:16:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 13260,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 13258,
                  "name": "ERC2771Context",
                  "nameLocations": [
                    "378:14:88"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10761,
                  "src": "378:14:88"
                },
                "nodeType": "ModifierInvocation",
                "src": "378:32:88"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13257,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13256,
                  "mutability": "mutable",
                  "name": "trustedForwarder",
                  "nameLocation": "360:16:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 13268,
                  "src": "352:24:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13255,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "352:7:88",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "351:26:88"
            },
            "returnParameters": {
              "id": 13261,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "411:0:88"
            },
            "scope": 13295,
            "src": "340:170:88",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              10733,
              30180
            ],
            "body": {
              "id": 13280,
              "nodeType": "Block",
              "src": "612:51:88",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 13276,
                        "name": "ERC2771Context",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10761,
                        "src": "629:14:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771Context_$10761_$",
                          "typeString": "type(contract ERC2771Context)"
                        }
                      },
                      "id": 13277,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "644:10:88",
                      "memberName": "_msgSender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10733,
                      "src": "629:25:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 13278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "629:27:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 13275,
                  "id": 13279,
                  "nodeType": "Return",
                  "src": "622:34:88"
                }
              ]
            },
            "id": 13281,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "525:10:88",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 13272,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 13270,
                  "name": "Context",
                  "nameLocations": [
                    "569:7:88"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30190,
                  "src": "569:7:88"
                },
                {
                  "id": 13271,
                  "name": "ERC2771Context",
                  "nameLocations": [
                    "578:14:88"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10761,
                  "src": "578:14:88"
                }
              ],
              "src": "560:33:88"
            },
            "parameters": {
              "id": 13269,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "535:2:88"
            },
            "returnParameters": {
              "id": 13275,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13274,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13281,
                  "src": "603:7:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13273,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "603:7:88",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "602:9:88"
            },
            "scope": 13295,
            "src": "516:147:88",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              10760,
              30189
            ],
            "body": {
              "id": 13293,
              "nodeType": "Block",
              "src": "770:49:88",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 13289,
                        "name": "ERC2771Context",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10761,
                        "src": "787:14:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771Context_$10761_$",
                          "typeString": "type(contract ERC2771Context)"
                        }
                      },
                      "id": 13290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "802:8:88",
                      "memberName": "_msgData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10760,
                      "src": "787:23:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_calldata_ptr_$",
                        "typeString": "function () view returns (bytes calldata)"
                      }
                    },
                    "id": 13291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "787:25:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "functionReturnParameters": 13288,
                  "id": 13292,
                  "nodeType": "Return",
                  "src": "780:32:88"
                }
              ]
            },
            "id": 13294,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nameLocation": "678:8:88",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 13285,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 13283,
                  "name": "Context",
                  "nameLocations": [
                    "720:7:88"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30190,
                  "src": "720:7:88"
                },
                {
                  "id": 13284,
                  "name": "ERC2771Context",
                  "nameLocations": [
                    "729:14:88"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10761,
                  "src": "729:14:88"
                }
              ],
              "src": "711:33:88"
            },
            "parameters": {
              "id": 13282,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "686:2:88"
            },
            "returnParameters": {
              "id": 13288,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13287,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13294,
                  "src": "754:14:88",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 13286,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "754:5:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "753:16:88"
            },
            "scope": 13295,
            "src": "669:150:88",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 13296,
        "src": "222:599:88",
        "usedErrors": [],
        "usedEvents": [
          11585,
          11602
        ]
      }
    ],
    "src": "33:789:88"
  },
  "bytecode": "60a060405234801561001057600080fd5b506040516104d43803806104d483398101604081905261002f916100bc565b6001600160a01b0381166080527fd6558c3ed910d959271054471fd1c326679d9fece99c5091b00ed89627cf2bfc610065610086565b6040516001600160a01b03909116815260200160405180910390a1506100ec565b6000610090610095565b905090565b6080516000906001600160a01b031633036100b7575060131936013560601c90565b503390565b6000602082840312156100ce57600080fd5b81516001600160a01b03811681146100e557600080fd5b9392505050565b6080516103ce610106600039600060d301526103ce6000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063376bf26214610046578063572b6c051461005b578063d737d0c714610082575b600080fd5b6100596100543660046101d8565b61008a565b005b61006e610069366004610293565b6100d1565b604051901515815260200160405180910390f35b610059610103565b7faf235354a0a47c91ee171961326335cb2d1a8e55b8a89859b0e61eb049e50ea06100b3610149565b84846040516100c594939291906102c3565b60405180910390a15050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0390811691161490565b7fd6558c3ed910d959271054471fd1c326679d9fece99c5091b00ed89627cf2bfc61012c61015c565b6040516001600160a01b03909116815260200160405180910390a1565b36600061015461016b565b915091509091565b60006101666101a0565b905090565b366000610177336100d1565b15610198576000803661018b601482610347565b926101549392919061036e565b600036610154565b60006101ab336100d1565b156101bd575060131936013560601c90565b503390565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156101eb57600080fd5b82359150602083013567ffffffffffffffff8082111561020a57600080fd5b818501915085601f83011261021e57600080fd5b813581811115610230576102306101c2565b604051601f8201601f19908116603f01168101908382118183101715610258576102586101c2565b8160405282815288602084870101111561027157600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6000602082840312156102a557600080fd5b81356001600160a01b03811681146102bc57600080fd5b9392505050565b60608152836060820152838560808301376000608085830101526000601f1980601f8701168301602086818601526080858303016040860152855180608084015260005b818110156103235787810183015184820160a001528201610307565b50600060a0828501015260a084601f83011684010194505050505095945050505050565b8181038181111561036857634e487b7160e01b600052601160045260246000fd5b92915050565b6000808585111561037e57600080fd5b8386111561038b57600080fd5b505082019391909203915056fea26469706673582212201451ef6323a2a21c2f1476f56108b7d027c84768f129484575cb4945e160a5f864736f6c63430008150033",
  "bytecodeSha1": "ed7f478b1c38519427ae3f446ea656df294fab62",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.21+commit.d9974bed"
  },
  "contractName": "ERC2771ContextMock",
  "coverageMap": {
    "branches": {
      "202": {},
      "44": {
        "ERC2771Context._msgData": {
          "8": [
            1160,
            1190,
            false
          ]
        },
        "ERC2771Context._msgSender": {
          "9": [
            755,
            785,
            false
          ]
        }
      },
      "58": {},
      "88": {}
    },
    "statements": {
      "202": {
        "Context._msgSender": {
          "7": [
            712,
            729
          ]
        }
      },
      "44": {
        "ERC2771Context._msgData": {
          "5": [
            1206,
            1244
          ],
          "6": [
            1275,
            1298
          ]
        },
        "ERC2771Context.isTrustedForwarder": {
          "1": [
            613,
            650
          ]
        }
      },
      "58": {
        "ContextMock.msgData": {
          "0": [
            393,
            441
          ]
        },
        "ContextMock.msgSender": {
          "2": [
            201,
            226
          ]
        }
      },
      "88": {
        "ERC2771ContextMock._msgData": {
          "3": [
            780,
            812
          ]
        },
        "ERC2771ContextMock._msgSender": {
          "4": [
            622,
            656
          ]
        }
      }
    }
  },
  "dependencies": [
    "Context",
    "ContextMock",
    "ERC2771Context"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100415760003560e01c8063376bf26214610046578063572b6c051461005b578063d737d0c714610082575b600080fd5b6100596100543660046101d8565b61008a565b005b61006e610069366004610293565b6100d1565b604051901515815260200160405180910390f35b610059610103565b7faf235354a0a47c91ee171961326335cb2d1a8e55b8a89859b0e61eb049e50ea06100b3610149565b84846040516100c594939291906102c3565b60405180910390a15050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0390811691161490565b7fd6558c3ed910d959271054471fd1c326679d9fece99c5091b00ed89627cf2bfc61012c61015c565b6040516001600160a01b03909116815260200160405180910390a1565b36600061015461016b565b915091509091565b60006101666101a0565b905090565b366000610177336100d1565b15610198576000803661018b601482610347565b926101549392919061036e565b600036610154565b60006101ab336100d1565b156101bd575060131936013560601c90565b503390565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156101eb57600080fd5b82359150602083013567ffffffffffffffff8082111561020a57600080fd5b818501915085601f83011261021e57600080fd5b813581811115610230576102306101c2565b604051601f8201601f19908116603f01168101908382118183101715610258576102586101c2565b8160405282815288602084870101111561027157600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6000602082840312156102a557600080fd5b81356001600160a01b03811681146102bc57600080fd5b9392505050565b60608152836060820152838560808301376000608085830101526000601f1980601f8701168301602086818601526080858303016040860152855180608084015260005b818110156103235787810183015184820160a001528201610307565b50600060a0828501015260a084601f83011684010194505050505095945050505050565b8181038181111561036857634e487b7160e01b600052601160045260246000fd5b92915050565b6000808585111561037e57600080fd5b8386111561038b57600080fd5b505082019391909203915056fea26469706673582212201451ef6323a2a21c2f1476f56108b7d027c84768f129484575cb4945e160a5f864736f6c63430008150033",
  "deployedSourceMap": "222:599:88:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;310:138:58;;;;;;:::i;:::-;;:::i;:::-;;521:136:44;;;;;;:::i;:::-;;:::i;:::-;;;1597:14:249;;1590:22;1572:41;;1560:2;1545:18;521:136:44;;;;;;;163:70:58;;;:::i;310:138::-;398:43;403:10;:8;:10::i;:::-;415:12;429:11;398:43;;;;;;;;;:::i;:::-;;;;;;;;310:138;;:::o;521:136:44:-;633:17;-1:-1:-1;;;;;620:30:44;;;;;;;521:136::o;163:70:58:-;206:20;213:12;:10;:12::i;:::-;206:20;;-1:-1:-1;;;;;2744:32:249;;;2726:51;;2714:2;2699:18;206:20:58;;;;;;;163:70::o;669:150:88:-;754:14;;787:25;:23;:25::i;:::-;780:32;;;;669:150;;:::o;516:147::-;603:7;629:27;:25;:27::i;:::-;622:34;;516:147;:::o;1070:245:44:-;1130:14;;1160:30;1179:10;1160:18;:30::i;:::-;1156:153;;;1213:8;;;1223:20;1241:2;1213:8;1223:20;:::i;:::-;1213:31;;;;;;;:::i;1156:153::-;793:14:202;;1282:16:44;742:99:202;663:401:44;725:14;755:30;774:10;755:18;:30::i;:::-;751:307;;;-1:-1:-1;;;957:14:44;953:23;940:37;936:2;932:46;663:401;:::o;751:307::-;-1:-1:-1;719:10:202;;516:147:88:o;14:127:249:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:990;224:6;232;285:2;273:9;264:7;260:23;256:32;253:52;;;301:1;298;291:12;253:52;337:9;324:23;314:33;;398:2;387:9;383:18;370:32;421:18;462:2;454:6;451:14;448:34;;;478:1;475;468:12;448:34;516:6;505:9;501:22;491:32;;561:7;554:4;550:2;546:13;542:27;532:55;;583:1;580;573:12;532:55;619:2;606:16;641:2;637;634:10;631:36;;;647:18;;:::i;:::-;722:2;716:9;690:2;776:13;;-1:-1:-1;;772:22:249;;;796:2;768:31;764:40;752:53;;;820:18;;;840:22;;;817:46;814:72;;;866:18;;:::i;:::-;906:10;902:2;895:22;941:2;933:6;926:18;981:7;976:2;971;967;963:11;959:20;956:33;953:53;;;1002:1;999;992:12;953:53;1058:2;1053;1049;1045:11;1040:2;1032:6;1028:15;1015:46;1103:1;1098:2;1093;1085:6;1081:15;1077:24;1070:35;1124:6;1114:16;;;;;;;146:990;;;;;:::o;1141:286::-;1200:6;1253:2;1241:9;1232:7;1228:23;1224:32;1221:52;;;1269:1;1266;1259:12;1221:52;1295:23;;-1:-1:-1;;;;;1347:31:249;;1337:42;;1327:70;;1393:1;1390;1383:12;1327:70;1416:5;1141:286;-1:-1:-1;;;1141:286:249:o;1624:951::-;1857:2;1846:9;1839:21;1896:6;1891:2;1880:9;1876:18;1869:34;1954:6;1946;1940:3;1929:9;1925:19;1912:49;2011:1;2005:3;1996:6;1985:9;1981:22;1977:32;1970:43;1820:4;2036:2;2032:7;2094:2;2089;2081:6;2077:15;2073:24;2062:9;2058:40;2117:4;2157:6;2152:2;2141:9;2137:18;2130:34;2224:3;2212:9;2208:2;2204:18;2200:28;2195:2;2184:9;2180:18;2173:56;2258:6;2252:13;2295:6;2289:3;2285:2;2281:12;2274:28;2320:1;2330:134;2344:6;2341:1;2338:13;2330:134;;;2433:14;;;2429:23;;2423:30;2405:10;;;2417:3;2401:20;2394:60;2359:10;;2330:134;;;2334:3;2507:1;2501:3;2492:6;2488:2;2484:15;2480:25;2473:36;2565:3;2559:2;2554;2546:6;2542:15;2538:24;2534:2;2530:33;2526:43;2518:51;;;;;;1624:951;;;;;;;:::o;2788:225::-;2855:9;;;2876:11;;;2873:134;;;2929:10;2924:3;2920:20;2917:1;2910:31;2964:4;2961:1;2954:15;2992:4;2989:1;2982:15;2873:134;2788:225;;;;:::o;3018:331::-;3123:9;3134;3176:8;3164:10;3161:24;3158:44;;;3198:1;3195;3188:12;3158:44;3227:6;3217:8;3214:20;3211:40;;;3247:1;3244;3237:12;3211:40;-1:-1:-1;;3273:23:249;;;3318:25;;;;;-1:-1:-1;3018:331:249:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "constructor": {
        "custom:oz-upgrades-unsafe-allow": "constructor"
      }
    },
    "version": 1
  },
  "offset": [
    222,
    821
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x376BF262 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x572B6C05 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0xD737D0C7 EQ PUSH2 0x82 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x54 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D8 JUMP JUMPDEST PUSH2 0x8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6E PUSH2 0x69 CALLDATASIZE PUSH1 0x4 PUSH2 0x293 JUMP JUMPDEST PUSH2 0xD1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x59 PUSH2 0x103 JUMP JUMPDEST PUSH32 0xAF235354A0A47C91EE171961326335CB2D1A8E55B8A89859B0E61EB049E50EA0 PUSH2 0xB3 PUSH2 0x149 JUMP JUMPDEST DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0xC5 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ SWAP1 JUMP JUMPDEST PUSH32 0xD6558C3ED910D959271054471FD1C326679D9FECE99C5091B00ED89627CF2BFC PUSH2 0x12C PUSH2 0x15C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 PUSH2 0x154 PUSH2 0x16B JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x166 PUSH2 0x1A0 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 PUSH2 0x177 CALLER PUSH2 0xD1 JUMP JUMPDEST ISZERO PUSH2 0x198 JUMPI PUSH1 0x0 DUP1 CALLDATASIZE PUSH2 0x18B PUSH1 0x14 DUP3 PUSH2 0x347 JUMP JUMPDEST SWAP3 PUSH2 0x154 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x36E JUMP JUMPDEST PUSH1 0x0 CALLDATASIZE PUSH2 0x154 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AB CALLER PUSH2 0xD1 JUMP JUMPDEST ISZERO PUSH2 0x1BD JUMPI POP PUSH1 0x13 NOT CALLDATASIZE ADD CALLDATALOAD PUSH1 0x60 SHR SWAP1 JUMP JUMPDEST POP CALLER SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x20A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x21E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x230 JUMPI PUSH2 0x230 PUSH2 0x1C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x258 JUMPI PUSH2 0x258 PUSH2 0x1C2 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x271 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE DUP4 PUSH1 0x60 DUP3 ADD MSTORE DUP4 DUP6 PUSH1 0x80 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x80 DUP6 DUP4 ADD ADD MSTORE PUSH1 0x0 PUSH1 0x1F NOT DUP1 PUSH1 0x1F DUP8 ADD AND DUP4 ADD PUSH1 0x20 DUP7 DUP2 DUP7 ADD MSTORE PUSH1 0x80 DUP6 DUP4 SUB ADD PUSH1 0x40 DUP7 ADD MSTORE DUP6 MLOAD DUP1 PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x323 JUMPI DUP8 DUP2 ADD DUP4 ADD MLOAD DUP5 DUP3 ADD PUSH1 0xA0 ADD MSTORE DUP3 ADD PUSH2 0x307 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0xA0 DUP3 DUP6 ADD ADD MSTORE PUSH1 0xA0 DUP5 PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP5 POP POP POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x368 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 GT ISZERO PUSH2 0x37E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0x38B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP3 ADD SWAP4 SWAP2 SWAP1 SWAP3 SUB SWAP2 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ MLOAD 0xEF PUSH4 0x23A2A21C 0x2F EQ PUSH23 0xF56108B7D027C84768F129484575CB4945E160A5F86473 PUSH16 0x6C634300081500330000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        222,
        821
      ],
      "op": "PUSH1",
      "path": "88",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "PUSH1",
      "path": "88",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "MSTORE",
      "path": "88"
    },
    "5": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "CALLVALUE",
      "path": "88"
    },
    "6": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "DUP1",
      "path": "88"
    },
    "7": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "ISZERO",
      "path": "88"
    },
    "8": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "PUSH2",
      "path": "88",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "JUMPI",
      "path": "88"
    },
    "12": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "PUSH1",
      "path": "88",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "DUP1",
      "path": "88"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "REVERT",
      "path": "88"
    },
    "16": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "JUMPDEST",
      "path": "88"
    },
    "17": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "POP",
      "path": "88"
    },
    "18": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "PUSH1",
      "path": "88",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "CALLDATASIZE",
      "path": "88"
    },
    "21": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "LT",
      "path": "88"
    },
    "22": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "PUSH2",
      "path": "88",
      "value": "0x41"
    },
    "25": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "JUMPI",
      "path": "88"
    },
    "26": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "PUSH1",
      "path": "88",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "CALLDATALOAD",
      "path": "88"
    },
    "29": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "PUSH1",
      "path": "88",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "SHR",
      "path": "88"
    },
    "32": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "DUP1",
      "path": "88"
    },
    "33": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "PUSH4",
      "path": "88",
      "value": "0x376BF262"
    },
    "38": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "EQ",
      "path": "88"
    },
    "39": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "PUSH2",
      "path": "88",
      "value": "0x46"
    },
    "42": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "JUMPI",
      "path": "88"
    },
    "43": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "DUP1",
      "path": "88"
    },
    "44": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "PUSH4",
      "path": "88",
      "value": "0x572B6C05"
    },
    "49": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "EQ",
      "path": "88"
    },
    "50": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "PUSH2",
      "path": "88",
      "value": "0x5B"
    },
    "53": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "JUMPI",
      "path": "88"
    },
    "54": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "DUP1",
      "path": "88"
    },
    "55": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "PUSH4",
      "path": "88",
      "value": "0xD737D0C7"
    },
    "60": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "EQ",
      "path": "88"
    },
    "61": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "PUSH2",
      "path": "88",
      "value": "0x82"
    },
    "64": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "JUMPI",
      "path": "88"
    },
    "65": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "JUMPDEST",
      "path": "88"
    },
    "66": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "PUSH1",
      "path": "88",
      "value": "0x0"
    },
    "68": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "DUP1",
      "path": "88"
    },
    "69": {
      "first_revert": true,
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "REVERT",
      "path": "88"
    },
    "70": {
      "fn": "ContextMock.msgData",
      "offset": [
        310,
        448
      ],
      "op": "JUMPDEST",
      "path": "58"
    },
    "71": {
      "fn": "ContextMock.msgData",
      "offset": [
        310,
        448
      ],
      "op": "PUSH2",
      "path": "58",
      "value": "0x59"
    },
    "74": {
      "fn": "ContextMock.msgData",
      "offset": [
        310,
        448
      ],
      "op": "PUSH2",
      "path": "58",
      "value": "0x54"
    },
    "77": {
      "fn": "ContextMock.msgData",
      "offset": [
        310,
        448
      ],
      "op": "CALLDATASIZE",
      "path": "58"
    },
    "78": {
      "fn": "ContextMock.msgData",
      "offset": [
        310,
        448
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x4"
    },
    "80": {
      "fn": "ContextMock.msgData",
      "offset": [
        310,
        448
      ],
      "op": "PUSH2",
      "path": "58",
      "value": "0x1D8"
    },
    "83": {
      "fn": "ContextMock.msgData",
      "jump": "i",
      "offset": [
        310,
        448
      ],
      "op": "JUMP",
      "path": "58"
    },
    "84": {
      "fn": "ContextMock.msgData",
      "offset": [
        310,
        448
      ],
      "op": "JUMPDEST",
      "path": "58"
    },
    "85": {
      "fn": "ContextMock.msgData",
      "offset": [
        310,
        448
      ],
      "op": "PUSH2",
      "path": "58",
      "value": "0x8A"
    },
    "88": {
      "fn": "ContextMock.msgData",
      "jump": "i",
      "offset": [
        310,
        448
      ],
      "op": "JUMP",
      "path": "58"
    },
    "89": {
      "fn": "ContextMock.msgData",
      "offset": [
        310,
        448
      ],
      "op": "JUMPDEST",
      "path": "58"
    },
    "90": {
      "fn": "ContextMock.msgData",
      "offset": [
        310,
        448
      ],
      "op": "STOP",
      "path": "58"
    },
    "91": {
      "fn": "ERC2771Context.isTrustedForwarder",
      "offset": [
        521,
        657
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "92": {
      "fn": "ERC2771Context.isTrustedForwarder",
      "offset": [
        521,
        657
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x6E"
    },
    "95": {
      "fn": "ERC2771Context.isTrustedForwarder",
      "offset": [
        521,
        657
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x69"
    },
    "98": {
      "fn": "ERC2771Context.isTrustedForwarder",
      "offset": [
        521,
        657
      ],
      "op": "CALLDATASIZE",
      "path": "44"
    },
    "99": {
      "fn": "ERC2771Context.isTrustedForwarder",
      "offset": [
        521,
        657
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "101": {
      "fn": "ERC2771Context.isTrustedForwarder",
      "offset": [
        521,
        657
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x293"
    },
    "104": {
      "fn": "ERC2771Context.isTrustedForwarder",
      "jump": "i",
      "offset": [
        521,
        657
      ],
      "op": "JUMP",
      "path": "44"
    },
    "105": {
      "fn": "ERC2771Context.isTrustedForwarder",
      "offset": [
        521,
        657
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "106": {
      "fn": "ERC2771Context.isTrustedForwarder",
      "offset": [
        521,
        657
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xD1"
    },
    "109": {
      "fn": "ERC2771Context.isTrustedForwarder",
      "jump": "i",
      "offset": [
        521,
        657
      ],
      "op": "JUMP",
      "path": "44"
    },
    "110": {
      "fn": "ERC2771Context.isTrustedForwarder",
      "offset": [
        521,
        657
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "111": {
      "fn": "ERC2771Context.isTrustedForwarder",
      "offset": [
        521,
        657
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "113": {
      "fn": "ERC2771Context.isTrustedForwarder",
      "offset": [
        521,
        657
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "114": {
      "op": "SWAP1"
    },
    "115": {
      "op": "ISZERO"
    },
    "116": {
      "op": "ISZERO"
    },
    "117": {
      "op": "DUP2"
    },
    "118": {
      "op": "MSTORE"
    },
    "119": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "121": {
      "op": "ADD"
    },
    "122": {
      "fn": "ERC2771Context.isTrustedForwarder",
      "offset": [
        521,
        657
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "124": {
      "fn": "ERC2771Context.isTrustedForwarder",
      "offset": [
        521,
        657
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "125": {
      "fn": "ERC2771Context.isTrustedForwarder",
      "offset": [
        521,
        657
      ],
      "op": "DUP1",
      "path": "44"
    },
    "126": {
      "fn": "ERC2771Context.isTrustedForwarder",
      "offset": [
        521,
        657
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "127": {
      "fn": "ERC2771Context.isTrustedForwarder",
      "offset": [
        521,
        657
      ],
      "op": "SUB",
      "path": "44"
    },
    "128": {
      "fn": "ERC2771Context.isTrustedForwarder",
      "offset": [
        521,
        657
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "129": {
      "fn": "ERC2771Context.isTrustedForwarder",
      "offset": [
        521,
        657
      ],
      "op": "RETURN",
      "path": "44"
    },
    "130": {
      "fn": "ContextMock.msgSender",
      "offset": [
        163,
        233
      ],
      "op": "JUMPDEST",
      "path": "58"
    },
    "131": {
      "fn": "ContextMock.msgSender",
      "offset": [
        163,
        233
      ],
      "op": "PUSH2",
      "path": "58",
      "value": "0x59"
    },
    "134": {
      "fn": "ContextMock.msgSender",
      "offset": [
        163,
        233
      ],
      "op": "PUSH2",
      "path": "58",
      "value": "0x103"
    },
    "137": {
      "fn": "ContextMock.msgSender",
      "jump": "i",
      "offset": [
        163,
        233
      ],
      "op": "JUMP",
      "path": "58"
    },
    "138": {
      "fn": "ContextMock.msgData",
      "offset": [
        310,
        448
      ],
      "op": "JUMPDEST",
      "path": "58"
    },
    "139": {
      "fn": "ContextMock.msgData",
      "offset": [
        398,
        441
      ],
      "op": "PUSH32",
      "path": "58",
      "statement": 0,
      "value": "0xAF235354A0A47C91EE171961326335CB2D1A8E55B8A89859B0E61EB049E50EA0"
    },
    "172": {
      "fn": "ContextMock.msgData",
      "offset": [
        403,
        413
      ],
      "op": "PUSH2",
      "path": "58",
      "value": "0xB3"
    },
    "175": {
      "fn": "ContextMock.msgData",
      "offset": [
        403,
        411
      ],
      "op": "PUSH2",
      "path": "58",
      "value": "0x149"
    },
    "178": {
      "fn": "ContextMock.msgData",
      "jump": "i",
      "offset": [
        403,
        413
      ],
      "op": "JUMP",
      "path": "58"
    },
    "179": {
      "fn": "ContextMock.msgData",
      "offset": [
        403,
        413
      ],
      "op": "JUMPDEST",
      "path": "58"
    },
    "180": {
      "fn": "ContextMock.msgData",
      "offset": [
        415,
        427
      ],
      "op": "DUP5",
      "path": "58"
    },
    "181": {
      "fn": "ContextMock.msgData",
      "offset": [
        429,
        440
      ],
      "op": "DUP5",
      "path": "58"
    },
    "182": {
      "fn": "ContextMock.msgData",
      "offset": [
        398,
        441
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x40"
    },
    "184": {
      "fn": "ContextMock.msgData",
      "offset": [
        398,
        441
      ],
      "op": "MLOAD",
      "path": "58"
    },
    "185": {
      "fn": "ContextMock.msgData",
      "offset": [
        398,
        441
      ],
      "op": "PUSH2",
      "path": "58",
      "value": "0xC5"
    },
    "188": {
      "fn": "ContextMock.msgData",
      "offset": [
        398,
        441
      ],
      "op": "SWAP5",
      "path": "58"
    },
    "189": {
      "fn": "ContextMock.msgData",
      "offset": [
        398,
        441
      ],
      "op": "SWAP4",
      "path": "58"
    },
    "190": {
      "fn": "ContextMock.msgData",
      "offset": [
        398,
        441
      ],
      "op": "SWAP3",
      "path": "58"
    },
    "191": {
      "fn": "ContextMock.msgData",
      "offset": [
        398,
        441
      ],
      "op": "SWAP2",
      "path": "58"
    },
    "192": {
      "fn": "ContextMock.msgData",
      "offset": [
        398,
        441
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "193": {
      "fn": "ContextMock.msgData",
      "offset": [
        398,
        441
      ],
      "op": "PUSH2",
      "path": "58",
      "value": "0x2C3"
    },
    "196": {
      "fn": "ContextMock.msgData",
      "jump": "i",
      "offset": [
        398,
        441
      ],
      "op": "JUMP",
      "path": "58"
    },
    "197": {
      "fn": "ContextMock.msgData",
      "offset": [
        398,
        441
      ],
      "op": "JUMPDEST",
      "path": "58"
    },
    "198": {
      "fn": "ContextMock.msgData",
      "offset": [
        398,
        441
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x40"
    },
    "200": {
      "fn": "ContextMock.msgData",
      "offset": [
        398,
        441
      ],
      "op": "MLOAD",
      "path": "58"
    },
    "201": {
      "fn": "ContextMock.msgData",
      "offset": [
        398,
        441
      ],
      "op": "DUP1",
      "path": "58"
    },
    "202": {
      "fn": "ContextMock.msgData",
      "offset": [
        398,
        441
      ],
      "op": "SWAP2",
      "path": "58"
    },
    "203": {
      "fn": "ContextMock.msgData",
      "offset": [
        398,
        441
      ],
      "op": "SUB",
      "path": "58"
    },
    "204": {
      "fn": "ContextMock.msgData",
      "offset": [
        398,
        441
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "205": {
      "fn": "ContextMock.msgData",
      "offset": [
        398,
        441
      ],
      "op": "LOG1",
      "path": "58"
    },
    "206": {
      "fn": "ContextMock.msgData",
      "offset": [
        310,
        448
      ],
      "op": "POP",
      "path": "58"
    },
    "207": {
      "fn": "ContextMock.msgData",
      "offset": [
        310,
        448
      ],
      "op": "POP",
      "path": "58"
    },
    "208": {
      "fn": "ContextMock.msgData",
      "jump": "o",
      "offset": [
        310,
        448
      ],
      "op": "JUMP",
      "path": "58"
    },
    "209": {
      "fn": "ERC2771Context.isTrustedForwarder",
      "offset": [
        521,
        657
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "210": {
      "fn": "ERC2771Context.isTrustedForwarder",
      "offset": [
        633,
        650
      ],
      "op": "PUSH32",
      "path": "44",
      "statement": 1,
      "value": "0x0"
    },
    "243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "247": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "249": {
      "op": "SHL"
    },
    "250": {
      "op": "SUB"
    },
    "251": {
      "fn": "ERC2771Context.isTrustedForwarder",
      "offset": [
        620,
        650
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "252": {
      "fn": "ERC2771Context.isTrustedForwarder",
      "offset": [
        620,
        650
      ],
      "op": "DUP2",
      "path": "44"
    },
    "253": {
      "fn": "ERC2771Context.isTrustedForwarder",
      "offset": [
        620,
        650
      ],
      "op": "AND",
      "path": "44"
    },
    "254": {
      "fn": "ERC2771Context.isTrustedForwarder",
      "offset": [
        620,
        650
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "255": {
      "fn": "ERC2771Context.isTrustedForwarder",
      "offset": [
        620,
        650
      ],
      "op": "AND",
      "path": "44"
    },
    "256": {
      "fn": "ERC2771Context.isTrustedForwarder",
      "offset": [
        620,
        650
      ],
      "op": "EQ",
      "path": "44"
    },
    "257": {
      "fn": "ERC2771Context.isTrustedForwarder",
      "offset": [
        620,
        650
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "258": {
      "fn": "ERC2771Context.isTrustedForwarder",
      "jump": "o",
      "offset": [
        521,
        657
      ],
      "op": "JUMP",
      "path": "44"
    },
    "259": {
      "fn": "ContextMock.msgSender",
      "offset": [
        163,
        233
      ],
      "op": "JUMPDEST",
      "path": "58"
    },
    "260": {
      "fn": "ContextMock.msgSender",
      "offset": [
        206,
        226
      ],
      "op": "PUSH32",
      "path": "58",
      "statement": 2,
      "value": "0xD6558C3ED910D959271054471FD1C326679D9FECE99C5091B00ED89627CF2BFC"
    },
    "293": {
      "fn": "ContextMock.msgSender",
      "offset": [
        213,
        225
      ],
      "op": "PUSH2",
      "path": "58",
      "value": "0x12C"
    },
    "296": {
      "fn": "ContextMock.msgSender",
      "offset": [
        213,
        223
      ],
      "op": "PUSH2",
      "path": "58",
      "value": "0x15C"
    },
    "299": {
      "fn": "ContextMock.msgSender",
      "jump": "i",
      "offset": [
        213,
        225
      ],
      "op": "JUMP",
      "path": "58"
    },
    "300": {
      "fn": "ContextMock.msgSender",
      "offset": [
        213,
        225
      ],
      "op": "JUMPDEST",
      "path": "58"
    },
    "301": {
      "fn": "ContextMock.msgSender",
      "offset": [
        206,
        226
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x40"
    },
    "303": {
      "fn": "ContextMock.msgSender",
      "offset": [
        206,
        226
      ],
      "op": "MLOAD",
      "path": "58"
    },
    "304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "308": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "310": {
      "op": "SHL"
    },
    "311": {
      "op": "SUB"
    },
    "312": {
      "op": "SWAP1"
    },
    "313": {
      "op": "SWAP2"
    },
    "314": {
      "op": "AND"
    },
    "315": {
      "op": "DUP2"
    },
    "316": {
      "op": "MSTORE"
    },
    "317": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "319": {
      "op": "ADD"
    },
    "320": {
      "fn": "ContextMock.msgSender",
      "offset": [
        206,
        226
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x40"
    },
    "322": {
      "fn": "ContextMock.msgSender",
      "offset": [
        206,
        226
      ],
      "op": "MLOAD",
      "path": "58"
    },
    "323": {
      "fn": "ContextMock.msgSender",
      "offset": [
        206,
        226
      ],
      "op": "DUP1",
      "path": "58"
    },
    "324": {
      "fn": "ContextMock.msgSender",
      "offset": [
        206,
        226
      ],
      "op": "SWAP2",
      "path": "58"
    },
    "325": {
      "fn": "ContextMock.msgSender",
      "offset": [
        206,
        226
      ],
      "op": "SUB",
      "path": "58"
    },
    "326": {
      "fn": "ContextMock.msgSender",
      "offset": [
        206,
        226
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "327": {
      "fn": "ContextMock.msgSender",
      "offset": [
        206,
        226
      ],
      "op": "LOG1",
      "path": "58"
    },
    "328": {
      "fn": "ContextMock.msgSender",
      "jump": "o",
      "offset": [
        163,
        233
      ],
      "op": "JUMP",
      "path": "58"
    },
    "329": {
      "fn": "ERC2771ContextMock._msgData",
      "offset": [
        669,
        819
      ],
      "op": "JUMPDEST",
      "path": "88"
    },
    "330": {
      "fn": "ERC2771ContextMock._msgData",
      "offset": [
        754,
        768
      ],
      "op": "CALLDATASIZE",
      "path": "88"
    },
    "331": {
      "fn": "ERC2771ContextMock._msgData",
      "offset": [
        754,
        768
      ],
      "op": "PUSH1",
      "path": "88",
      "value": "0x0"
    },
    "333": {
      "fn": "ERC2771ContextMock._msgData",
      "offset": [
        787,
        812
      ],
      "op": "PUSH2",
      "path": "88",
      "statement": 3,
      "value": "0x154"
    },
    "336": {
      "fn": "ERC2771ContextMock._msgData",
      "offset": [
        787,
        810
      ],
      "op": "PUSH2",
      "path": "88",
      "value": "0x16B"
    },
    "339": {
      "fn": "ERC2771ContextMock._msgData",
      "jump": "i",
      "offset": [
        787,
        812
      ],
      "op": "JUMP",
      "path": "88"
    },
    "340": {
      "fn": "ERC2771ContextMock._msgData",
      "offset": [
        787,
        812
      ],
      "op": "JUMPDEST",
      "path": "88"
    },
    "341": {
      "fn": "ERC2771ContextMock._msgData",
      "offset": [
        780,
        812
      ],
      "op": "SWAP2",
      "path": "88"
    },
    "342": {
      "fn": "ERC2771ContextMock._msgData",
      "offset": [
        780,
        812
      ],
      "op": "POP",
      "path": "88"
    },
    "343": {
      "fn": "ERC2771ContextMock._msgData",
      "offset": [
        780,
        812
      ],
      "op": "SWAP2",
      "path": "88"
    },
    "344": {
      "fn": "ERC2771ContextMock._msgData",
      "offset": [
        780,
        812
      ],
      "op": "POP",
      "path": "88"
    },
    "345": {
      "fn": "ERC2771ContextMock._msgData",
      "offset": [
        669,
        819
      ],
      "op": "SWAP1",
      "path": "88"
    },
    "346": {
      "fn": "ERC2771ContextMock._msgData",
      "offset": [
        669,
        819
      ],
      "op": "SWAP2",
      "path": "88"
    },
    "347": {
      "fn": "ERC2771ContextMock._msgData",
      "jump": "o",
      "offset": [
        669,
        819
      ],
      "op": "JUMP",
      "path": "88"
    },
    "348": {
      "fn": "ERC2771ContextMock._msgSender",
      "offset": [
        516,
        663
      ],
      "op": "JUMPDEST",
      "path": "88"
    },
    "349": {
      "fn": "ERC2771ContextMock._msgSender",
      "offset": [
        603,
        610
      ],
      "op": "PUSH1",
      "path": "88",
      "value": "0x0"
    },
    "351": {
      "fn": "ERC2771ContextMock._msgSender",
      "offset": [
        629,
        656
      ],
      "op": "PUSH2",
      "path": "88",
      "statement": 4,
      "value": "0x166"
    },
    "354": {
      "fn": "ERC2771ContextMock._msgSender",
      "offset": [
        629,
        654
      ],
      "op": "PUSH2",
      "path": "88",
      "value": "0x1A0"
    },
    "357": {
      "fn": "ERC2771ContextMock._msgSender",
      "jump": "i",
      "offset": [
        629,
        656
      ],
      "op": "JUMP",
      "path": "88"
    },
    "358": {
      "fn": "ERC2771ContextMock._msgSender",
      "offset": [
        629,
        656
      ],
      "op": "JUMPDEST",
      "path": "88"
    },
    "359": {
      "fn": "ERC2771ContextMock._msgSender",
      "offset": [
        622,
        656
      ],
      "op": "SWAP1",
      "path": "88"
    },
    "360": {
      "fn": "ERC2771ContextMock._msgSender",
      "offset": [
        622,
        656
      ],
      "op": "POP",
      "path": "88"
    },
    "361": {
      "fn": "ERC2771ContextMock._msgSender",
      "offset": [
        516,
        663
      ],
      "op": "SWAP1",
      "path": "88"
    },
    "362": {
      "fn": "ERC2771ContextMock._msgSender",
      "jump": "o",
      "offset": [
        516,
        663
      ],
      "op": "JUMP",
      "path": "88"
    },
    "363": {
      "fn": "ERC2771Context._msgData",
      "offset": [
        1070,
        1315
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "364": {
      "fn": "ERC2771Context._msgData",
      "offset": [
        1130,
        1144
      ],
      "op": "CALLDATASIZE",
      "path": "44"
    },
    "365": {
      "fn": "ERC2771Context._msgData",
      "offset": [
        1130,
        1144
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "367": {
      "fn": "ERC2771Context._msgData",
      "offset": [
        1160,
        1190
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x177"
    },
    "370": {
      "fn": "ERC2771Context._msgData",
      "offset": [
        1179,
        1189
      ],
      "op": "CALLER",
      "path": "44"
    },
    "371": {
      "fn": "ERC2771Context._msgData",
      "offset": [
        1160,
        1178
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xD1"
    },
    "374": {
      "fn": "ERC2771Context._msgData",
      "jump": "i",
      "offset": [
        1160,
        1190
      ],
      "op": "JUMP",
      "path": "44"
    },
    "375": {
      "branch": 8,
      "fn": "ERC2771Context._msgData",
      "offset": [
        1160,
        1190
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "376": {
      "fn": "ERC2771Context._msgData",
      "offset": [
        1156,
        1309
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "377": {
      "fn": "ERC2771Context._msgData",
      "offset": [
        1156,
        1309
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x198"
    },
    "380": {
      "branch": 8,
      "fn": "ERC2771Context._msgData",
      "offset": [
        1156,
        1309
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "381": {
      "fn": "ERC2771Context._msgData",
      "offset": [
        1213,
        1221
      ],
      "op": "PUSH1",
      "path": "44",
      "statement": 5,
      "value": "0x0"
    },
    "383": {
      "fn": "ERC2771Context._msgData",
      "offset": [
        1213,
        1221
      ],
      "op": "DUP1",
      "path": "44"
    },
    "384": {
      "fn": "ERC2771Context._msgData",
      "offset": [
        1213,
        1221
      ],
      "op": "CALLDATASIZE",
      "path": "44"
    },
    "385": {
      "fn": "ERC2771Context._msgData",
      "offset": [
        1223,
        1243
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x18B"
    },
    "388": {
      "fn": "ERC2771Context._msgData",
      "offset": [
        1241,
        1243
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x14"
    },
    "390": {
      "fn": "ERC2771Context._msgData",
      "offset": [
        1213,
        1221
      ],
      "op": "DUP3",
      "path": "44"
    },
    "391": {
      "fn": "ERC2771Context._msgData",
      "offset": [
        1223,
        1243
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x347"
    },
    "394": {
      "fn": "ERC2771Context._msgData",
      "jump": "i",
      "offset": [
        1223,
        1243
      ],
      "op": "JUMP",
      "path": "44"
    },
    "395": {
      "fn": "ERC2771Context._msgData",
      "offset": [
        1223,
        1243
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "396": {
      "fn": "ERC2771Context._msgData",
      "offset": [
        1213,
        1244
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "397": {
      "fn": "ERC2771Context._msgData",
      "offset": [
        1213,
        1244
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x154"
    },
    "400": {
      "fn": "ERC2771Context._msgData",
      "offset": [
        1213,
        1244
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "401": {
      "fn": "ERC2771Context._msgData",
      "offset": [
        1213,
        1244
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "402": {
      "fn": "ERC2771Context._msgData",
      "offset": [
        1213,
        1244
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "403": {
      "fn": "ERC2771Context._msgData",
      "offset": [
        1213,
        1244
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "404": {
      "fn": "ERC2771Context._msgData",
      "offset": [
        1213,
        1244
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x36E"
    },
    "407": {
      "fn": "ERC2771Context._msgData",
      "jump": "i",
      "offset": [
        1213,
        1244
      ],
      "op": "JUMP",
      "path": "44"
    },
    "408": {
      "fn": "ERC2771Context._msgData",
      "offset": [
        1156,
        1309
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "409": {
      "fn": "Context._msgData",
      "offset": [
        793,
        807
      ],
      "op": "PUSH1",
      "path": "202",
      "value": "0x0"
    },
    "411": {
      "fn": "Context._msgData",
      "offset": [
        793,
        807
      ],
      "op": "CALLDATASIZE",
      "path": "202"
    },
    "412": {
      "fn": "ERC2771Context._msgData",
      "offset": [
        1282,
        1298
      ],
      "op": "PUSH2",
      "path": "44",
      "statement": 6,
      "value": "0x154"
    },
    "415": {
      "fn": "Context._msgData",
      "offset": [
        742,
        841
      ],
      "op": "JUMP",
      "path": "202"
    },
    "416": {
      "fn": "ERC2771Context._msgSender",
      "offset": [
        663,
        1064
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "417": {
      "fn": "ERC2771Context._msgSender",
      "offset": [
        725,
        739
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "419": {
      "fn": "ERC2771Context._msgSender",
      "offset": [
        755,
        785
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1AB"
    },
    "422": {
      "fn": "ERC2771Context._msgSender",
      "offset": [
        774,
        784
      ],
      "op": "CALLER",
      "path": "44"
    },
    "423": {
      "fn": "ERC2771Context._msgSender",
      "offset": [
        755,
        773
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xD1"
    },
    "426": {
      "fn": "ERC2771Context._msgSender",
      "jump": "i",
      "offset": [
        755,
        785
      ],
      "op": "JUMP",
      "path": "44"
    },
    "427": {
      "branch": 9,
      "fn": "ERC2771Context._msgSender",
      "offset": [
        755,
        785
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "428": {
      "fn": "ERC2771Context._msgSender",
      "offset": [
        751,
        1058
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "429": {
      "fn": "ERC2771Context._msgSender",
      "offset": [
        751,
        1058
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1BD"
    },
    "432": {
      "branch": 9,
      "fn": "ERC2771Context._msgSender",
      "offset": [
        751,
        1058
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "433": {
      "op": "POP"
    },
    "434": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "436": {
      "op": "NOT"
    },
    "437": {
      "fn": "ERC2771Context._msgSender",
      "offset": [
        957,
        971
      ],
      "op": "CALLDATASIZE",
      "path": "44"
    },
    "438": {
      "fn": "ERC2771Context._msgSender",
      "offset": [
        953,
        976
      ],
      "op": "ADD",
      "path": "44"
    },
    "439": {
      "fn": "ERC2771Context._msgSender",
      "offset": [
        940,
        977
      ],
      "op": "CALLDATALOAD",
      "path": "44"
    },
    "440": {
      "fn": "ERC2771Context._msgSender",
      "offset": [
        936,
        938
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x60"
    },
    "442": {
      "fn": "ERC2771Context._msgSender",
      "offset": [
        932,
        978
      ],
      "op": "SHR",
      "path": "44"
    },
    "443": {
      "fn": "ERC2771Context._msgSender",
      "offset": [
        663,
        1064
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "444": {
      "fn": "ERC2771Context._msgSender",
      "jump": "o",
      "offset": [
        663,
        1064
      ],
      "op": "JUMP",
      "path": "44"
    },
    "445": {
      "fn": "ERC2771Context._msgSender",
      "offset": [
        751,
        1058
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "446": {
      "op": "POP"
    },
    "447": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "202",
      "statement": 7
    },
    "448": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "202"
    },
    "449": {
      "fn": "ERC2771ContextMock._msgSender",
      "jump": "o",
      "offset": [
        516,
        663
      ],
      "op": "JUMP",
      "path": "88"
    },
    "450": {
      "op": "JUMPDEST"
    },
    "451": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "456": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "458": {
      "op": "SHL"
    },
    "459": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "461": {
      "op": "MSTORE"
    },
    "462": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "464": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "466": {
      "op": "MSTORE"
    },
    "467": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "469": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "471": {
      "op": "REVERT"
    },
    "472": {
      "op": "JUMPDEST"
    },
    "473": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "475": {
      "op": "DUP1"
    },
    "476": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "478": {
      "op": "DUP4"
    },
    "479": {
      "op": "DUP6"
    },
    "480": {
      "op": "SUB"
    },
    "481": {
      "op": "SLT"
    },
    "482": {
      "op": "ISZERO"
    },
    "483": {
      "op": "PUSH2",
      "value": "0x1EB"
    },
    "486": {
      "op": "JUMPI"
    },
    "487": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "489": {
      "op": "DUP1"
    },
    "490": {
      "op": "REVERT"
    },
    "491": {
      "op": "JUMPDEST"
    },
    "492": {
      "op": "DUP3"
    },
    "493": {
      "op": "CALLDATALOAD"
    },
    "494": {
      "op": "SWAP2"
    },
    "495": {
      "op": "POP"
    },
    "496": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "498": {
      "op": "DUP4"
    },
    "499": {
      "op": "ADD"
    },
    "500": {
      "op": "CALLDATALOAD"
    },
    "501": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "510": {
      "op": "DUP1"
    },
    "511": {
      "op": "DUP3"
    },
    "512": {
      "op": "GT"
    },
    "513": {
      "op": "ISZERO"
    },
    "514": {
      "op": "PUSH2",
      "value": "0x20A"
    },
    "517": {
      "op": "JUMPI"
    },
    "518": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "520": {
      "op": "DUP1"
    },
    "521": {
      "op": "REVERT"
    },
    "522": {
      "op": "JUMPDEST"
    },
    "523": {
      "op": "DUP2"
    },
    "524": {
      "op": "DUP6"
    },
    "525": {
      "op": "ADD"
    },
    "526": {
      "op": "SWAP2"
    },
    "527": {
      "op": "POP"
    },
    "528": {
      "op": "DUP6"
    },
    "529": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "531": {
      "op": "DUP4"
    },
    "532": {
      "op": "ADD"
    },
    "533": {
      "op": "SLT"
    },
    "534": {
      "op": "PUSH2",
      "value": "0x21E"
    },
    "537": {
      "op": "JUMPI"
    },
    "538": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "540": {
      "op": "DUP1"
    },
    "541": {
      "op": "REVERT"
    },
    "542": {
      "op": "JUMPDEST"
    },
    "543": {
      "op": "DUP2"
    },
    "544": {
      "op": "CALLDATALOAD"
    },
    "545": {
      "op": "DUP2"
    },
    "546": {
      "op": "DUP2"
    },
    "547": {
      "op": "GT"
    },
    "548": {
      "op": "ISZERO"
    },
    "549": {
      "op": "PUSH2",
      "value": "0x230"
    },
    "552": {
      "op": "JUMPI"
    },
    "553": {
      "op": "PUSH2",
      "value": "0x230"
    },
    "556": {
      "op": "PUSH2",
      "value": "0x1C2"
    },
    "559": {
      "jump": "i",
      "op": "JUMP"
    },
    "560": {
      "op": "JUMPDEST"
    },
    "561": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "563": {
      "op": "MLOAD"
    },
    "564": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "566": {
      "op": "DUP3"
    },
    "567": {
      "op": "ADD"
    },
    "568": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "570": {
      "op": "NOT"
    },
    "571": {
      "op": "SWAP1"
    },
    "572": {
      "op": "DUP2"
    },
    "573": {
      "op": "AND"
    },
    "574": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "576": {
      "op": "ADD"
    },
    "577": {
      "op": "AND"
    },
    "578": {
      "op": "DUP2"
    },
    "579": {
      "op": "ADD"
    },
    "580": {
      "op": "SWAP1"
    },
    "581": {
      "op": "DUP4"
    },
    "582": {
      "op": "DUP3"
    },
    "583": {
      "op": "GT"
    },
    "584": {
      "op": "DUP2"
    },
    "585": {
      "op": "DUP4"
    },
    "586": {
      "op": "LT"
    },
    "587": {
      "op": "OR"
    },
    "588": {
      "op": "ISZERO"
    },
    "589": {
      "op": "PUSH2",
      "value": "0x258"
    },
    "592": {
      "op": "JUMPI"
    },
    "593": {
      "op": "PUSH2",
      "value": "0x258"
    },
    "596": {
      "op": "PUSH2",
      "value": "0x1C2"
    },
    "599": {
      "jump": "i",
      "op": "JUMP"
    },
    "600": {
      "op": "JUMPDEST"
    },
    "601": {
      "op": "DUP2"
    },
    "602": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "604": {
      "op": "MSTORE"
    },
    "605": {
      "op": "DUP3"
    },
    "606": {
      "op": "DUP2"
    },
    "607": {
      "op": "MSTORE"
    },
    "608": {
      "op": "DUP9"
    },
    "609": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "611": {
      "op": "DUP5"
    },
    "612": {
      "op": "DUP8"
    },
    "613": {
      "op": "ADD"
    },
    "614": {
      "op": "ADD"
    },
    "615": {
      "op": "GT"
    },
    "616": {
      "op": "ISZERO"
    },
    "617": {
      "op": "PUSH2",
      "value": "0x271"
    },
    "620": {
      "op": "JUMPI"
    },
    "621": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "623": {
      "op": "DUP1"
    },
    "624": {
      "op": "REVERT"
    },
    "625": {
      "op": "JUMPDEST"
    },
    "626": {
      "op": "DUP3"
    },
    "627": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "629": {
      "op": "DUP7"
    },
    "630": {
      "op": "ADD"
    },
    "631": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "633": {
      "op": "DUP4"
    },
    "634": {
      "op": "ADD"
    },
    "635": {
      "op": "CALLDATACOPY"
    },
    "636": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "638": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "640": {
      "op": "DUP5"
    },
    "641": {
      "op": "DUP4"
    },
    "642": {
      "op": "ADD"
    },
    "643": {
      "op": "ADD"
    },
    "644": {
      "op": "MSTORE"
    },
    "645": {
      "op": "DUP1"
    },
    "646": {
      "op": "SWAP6"
    },
    "647": {
      "op": "POP"
    },
    "648": {
      "op": "POP"
    },
    "649": {
      "op": "POP"
    },
    "650": {
      "op": "POP"
    },
    "651": {
      "op": "POP"
    },
    "652": {
      "op": "POP"
    },
    "653": {
      "op": "SWAP3"
    },
    "654": {
      "op": "POP"
    },
    "655": {
      "op": "SWAP3"
    },
    "656": {
      "op": "SWAP1"
    },
    "657": {
      "op": "POP"
    },
    "658": {
      "jump": "o",
      "op": "JUMP"
    },
    "659": {
      "op": "JUMPDEST"
    },
    "660": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "662": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "664": {
      "op": "DUP3"
    },
    "665": {
      "op": "DUP5"
    },
    "666": {
      "op": "SUB"
    },
    "667": {
      "op": "SLT"
    },
    "668": {
      "op": "ISZERO"
    },
    "669": {
      "op": "PUSH2",
      "value": "0x2A5"
    },
    "672": {
      "op": "JUMPI"
    },
    "673": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "675": {
      "op": "DUP1"
    },
    "676": {
      "op": "REVERT"
    },
    "677": {
      "op": "JUMPDEST"
    },
    "678": {
      "op": "DUP2"
    },
    "679": {
      "op": "CALLDATALOAD"
    },
    "680": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "682": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "684": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "686": {
      "op": "SHL"
    },
    "687": {
      "op": "SUB"
    },
    "688": {
      "op": "DUP2"
    },
    "689": {
      "op": "AND"
    },
    "690": {
      "op": "DUP2"
    },
    "691": {
      "op": "EQ"
    },
    "692": {
      "op": "PUSH2",
      "value": "0x2BC"
    },
    "695": {
      "op": "JUMPI"
    },
    "696": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "698": {
      "op": "DUP1"
    },
    "699": {
      "op": "REVERT"
    },
    "700": {
      "op": "JUMPDEST"
    },
    "701": {
      "op": "SWAP4"
    },
    "702": {
      "op": "SWAP3"
    },
    "703": {
      "op": "POP"
    },
    "704": {
      "op": "POP"
    },
    "705": {
      "op": "POP"
    },
    "706": {
      "jump": "o",
      "op": "JUMP"
    },
    "707": {
      "op": "JUMPDEST"
    },
    "708": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "710": {
      "op": "DUP2"
    },
    "711": {
      "op": "MSTORE"
    },
    "712": {
      "op": "DUP4"
    },
    "713": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "715": {
      "op": "DUP3"
    },
    "716": {
      "op": "ADD"
    },
    "717": {
      "op": "MSTORE"
    },
    "718": {
      "op": "DUP4"
    },
    "719": {
      "op": "DUP6"
    },
    "720": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "722": {
      "op": "DUP4"
    },
    "723": {
      "op": "ADD"
    },
    "724": {
      "op": "CALLDATACOPY"
    },
    "725": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "727": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "729": {
      "op": "DUP6"
    },
    "730": {
      "op": "DUP4"
    },
    "731": {
      "op": "ADD"
    },
    "732": {
      "op": "ADD"
    },
    "733": {
      "op": "MSTORE"
    },
    "734": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "736": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "738": {
      "op": "NOT"
    },
    "739": {
      "op": "DUP1"
    },
    "740": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "742": {
      "op": "DUP8"
    },
    "743": {
      "op": "ADD"
    },
    "744": {
      "op": "AND"
    },
    "745": {
      "op": "DUP4"
    },
    "746": {
      "op": "ADD"
    },
    "747": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "749": {
      "op": "DUP7"
    },
    "750": {
      "op": "DUP2"
    },
    "751": {
      "op": "DUP7"
    },
    "752": {
      "op": "ADD"
    },
    "753": {
      "op": "MSTORE"
    },
    "754": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "756": {
      "op": "DUP6"
    },
    "757": {
      "op": "DUP4"
    },
    "758": {
      "op": "SUB"
    },
    "759": {
      "op": "ADD"
    },
    "760": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "762": {
      "op": "DUP7"
    },
    "763": {
      "op": "ADD"
    },
    "764": {
      "op": "MSTORE"
    },
    "765": {
      "op": "DUP6"
    },
    "766": {
      "op": "MLOAD"
    },
    "767": {
      "op": "DUP1"
    },
    "768": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "770": {
      "op": "DUP5"
    },
    "771": {
      "op": "ADD"
    },
    "772": {
      "op": "MSTORE"
    },
    "773": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "775": {
      "op": "JUMPDEST"
    },
    "776": {
      "op": "DUP2"
    },
    "777": {
      "op": "DUP2"
    },
    "778": {
      "op": "LT"
    },
    "779": {
      "op": "ISZERO"
    },
    "780": {
      "op": "PUSH2",
      "value": "0x323"
    },
    "783": {
      "op": "JUMPI"
    },
    "784": {
      "op": "DUP8"
    },
    "785": {
      "op": "DUP2"
    },
    "786": {
      "op": "ADD"
    },
    "787": {
      "op": "DUP4"
    },
    "788": {
      "op": "ADD"
    },
    "789": {
      "op": "MLOAD"
    },
    "790": {
      "op": "DUP5"
    },
    "791": {
      "op": "DUP3"
    },
    "792": {
      "op": "ADD"
    },
    "793": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "795": {
      "op": "ADD"
    },
    "796": {
      "op": "MSTORE"
    },
    "797": {
      "op": "DUP3"
    },
    "798": {
      "op": "ADD"
    },
    "799": {
      "op": "PUSH2",
      "value": "0x307"
    },
    "802": {
      "op": "JUMP"
    },
    "803": {
      "op": "JUMPDEST"
    },
    "804": {
      "op": "POP"
    },
    "805": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "807": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "809": {
      "op": "DUP3"
    },
    "810": {
      "op": "DUP6"
    },
    "811": {
      "op": "ADD"
    },
    "812": {
      "op": "ADD"
    },
    "813": {
      "op": "MSTORE"
    },
    "814": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "816": {
      "op": "DUP5"
    },
    "817": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "819": {
      "op": "DUP4"
    },
    "820": {
      "op": "ADD"
    },
    "821": {
      "op": "AND"
    },
    "822": {
      "op": "DUP5"
    },
    "823": {
      "op": "ADD"
    },
    "824": {
      "op": "ADD"
    },
    "825": {
      "op": "SWAP5"
    },
    "826": {
      "op": "POP"
    },
    "827": {
      "op": "POP"
    },
    "828": {
      "op": "POP"
    },
    "829": {
      "op": "POP"
    },
    "830": {
      "op": "POP"
    },
    "831": {
      "op": "SWAP6"
    },
    "832": {
      "op": "SWAP5"
    },
    "833": {
      "op": "POP"
    },
    "834": {
      "op": "POP"
    },
    "835": {
      "op": "POP"
    },
    "836": {
      "op": "POP"
    },
    "837": {
      "op": "POP"
    },
    "838": {
      "jump": "o",
      "op": "JUMP"
    },
    "839": {
      "op": "JUMPDEST"
    },
    "840": {
      "op": "DUP2"
    },
    "841": {
      "op": "DUP2"
    },
    "842": {
      "op": "SUB"
    },
    "843": {
      "op": "DUP2"
    },
    "844": {
      "op": "DUP2"
    },
    "845": {
      "op": "GT"
    },
    "846": {
      "op": "ISZERO"
    },
    "847": {
      "op": "PUSH2",
      "value": "0x368"
    },
    "850": {
      "op": "JUMPI"
    },
    "851": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "856": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "858": {
      "op": "SHL"
    },
    "859": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "861": {
      "op": "MSTORE"
    },
    "862": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "864": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "866": {
      "op": "MSTORE"
    },
    "867": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "869": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "871": {
      "op": "REVERT"
    },
    "872": {
      "op": "JUMPDEST"
    },
    "873": {
      "op": "SWAP3"
    },
    "874": {
      "op": "SWAP2"
    },
    "875": {
      "op": "POP"
    },
    "876": {
      "op": "POP"
    },
    "877": {
      "jump": "o",
      "op": "JUMP"
    },
    "878": {
      "op": "JUMPDEST"
    },
    "879": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "881": {
      "op": "DUP1"
    },
    "882": {
      "op": "DUP6"
    },
    "883": {
      "op": "DUP6"
    },
    "884": {
      "op": "GT"
    },
    "885": {
      "op": "ISZERO"
    },
    "886": {
      "op": "PUSH2",
      "value": "0x37E"
    },
    "889": {
      "op": "JUMPI"
    },
    "890": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "892": {
      "op": "DUP1"
    },
    "893": {
      "op": "REVERT"
    },
    "894": {
      "op": "JUMPDEST"
    },
    "895": {
      "op": "DUP4"
    },
    "896": {
      "op": "DUP7"
    },
    "897": {
      "op": "GT"
    },
    "898": {
      "op": "ISZERO"
    },
    "899": {
      "op": "PUSH2",
      "value": "0x38B"
    },
    "902": {
      "op": "JUMPI"
    },
    "903": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "905": {
      "op": "DUP1"
    },
    "906": {
      "op": "REVERT"
    },
    "907": {
      "op": "JUMPDEST"
    },
    "908": {
      "op": "POP"
    },
    "909": {
      "op": "POP"
    },
    "910": {
      "op": "DUP3"
    },
    "911": {
      "op": "ADD"
    },
    "912": {
      "op": "SWAP4"
    },
    "913": {
      "op": "SWAP2"
    },
    "914": {
      "op": "SWAP1"
    },
    "915": {
      "op": "SWAP3"
    },
    "916": {
      "op": "SUB"
    },
    "917": {
      "op": "SWAP2"
    },
    "918": {
      "op": "POP"
    },
    "919": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "2b33c85d0da1cb4e8f62cfed03c3a13f6048161b",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.9;\n\nimport \"./ContextMock.sol\";\nimport \"../metatx/ERC2771Context.sol\";\n\n// By inheriting from ERC2771Context, Context's internal functions are overridden automatically\ncontract ERC2771ContextMock is ContextMock, ERC2771Context {\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor(address trustedForwarder) ERC2771Context(trustedForwarder) {\n        emit Sender(_msgSender()); // _msgSender() should be accessible during construction\n    }\n\n    function _msgSender() internal view virtual override(Context, ERC2771Context) returns (address) {\n        return ERC2771Context._msgSender();\n    }\n\n    function _msgData() internal view virtual override(Context, ERC2771Context) returns (bytes calldata) {\n        return ERC2771Context._msgData();\n    }\n}\n",
  "sourceMap": "222:599:88:-:0;;;340:170;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;472:36:44;;;;426:20:88::1;433:12;:10;:12::i;:::-;426:20;::::0;-1:-1:-1;;;;;473:32:249;;;455:51;;443:2;428:18;426:20:88::1;;;;;;;340:170:::0;222:599;;516:147;603:7;629:27;:25;:27::i;:::-;622:34;;516:147;:::o;663:401:44:-;633:17;;725:14;;-1:-1:-1;;;;;620:30:44;774:10;620:30;751:307;;-1:-1:-1;;;957:14:44;953:23;940:37;936:2;932:46;663:401;:::o;751:307::-;-1:-1:-1;719:10:202;;516:147:88:o;14:290:249:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:249;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:249:o;309:203::-;222:599:88;;;;;;;;;;;;",
  "sourcePath": "contracts/openzeppelin-solidity/contracts/mocks/ERC2771ContextMock.sol",
  "type": "contract"
}