{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ILendingPool",
          "name": "lendingPool",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "_asset0",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "_asset1",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "startX10",
          "type": "uint128"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "endX10",
          "type": "uint128"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "step",
          "type": "uint256"
        }
      ],
      "name": "AddRange",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ASSET_0",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ASSET_1",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LENDING_POOL",
      "outputs": [
        {
          "internalType": "contract ILendingPool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "POS_MGR",
      "outputs": [
        {
          "internalType": "contract INonfungiblePositionManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "startX10",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "endX10",
          "type": "uint128"
        },
        {
          "internalType": "string",
          "name": "startName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "endName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        }
      ],
      "name": "generateRange",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStepListLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "listLength",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount0",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount1",
          "type": "uint256"
        }
      ],
      "name": "initRange",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "step",
          "type": "uint256"
        }
      ],
      "name": "removeAssetsFromStep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stepList",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "start",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "end",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenisedRanges",
      "outputs": [
        {
          "internalType": "contract TokenisableRange",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenisedTicker",
      "outputs": [
        {
          "internalType": "contract TokenisableRange",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "step",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount0",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount1",
          "type": "uint256"
        }
      ],
      "name": "transferAssetsIntoRangerStep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "step",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount0",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount1",
          "type": "uint256"
        }
      ],
      "name": "transferAssetsIntoTickerStep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/RangeManager.sol",
    "1": "contracts/TokenisableRange.sol",
    "10": "contracts/openzeppelin-solidity/contracts/access/Ownable.sol",
    "2": "contracts/lib/FixedPoint96.sol",
    "3": "contracts/lib/FullMath.sol",
    "39": "contracts/openzeppelin-solidity/contracts/proxy/beacon/BeaconProxy.sol",
    "4": "contracts/lib/LiquidityAmounts.sol",
    "40": "contracts/openzeppelin-solidity/contracts/proxy/beacon/IBeacon.sol",
    "42": "contracts/openzeppelin-solidity/contracts/security/ReentrancyGuard.sol",
    "43": "contracts/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
    "44": "contracts/openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
    "5": "contracts/lib/TickMath.sol",
    "58": "contracts/openzeppelin-solidity/contracts/token/ERC20/utils/SafeERC20.sol",
    "68": "contracts/openzeppelin-solidity/contracts/utils/Address.sol",
    "70": "contracts/openzeppelin-solidity/contracts/utils/Context.sol",
    "85": "interfaces/IAaveLendingPoolV2.sol",
    "86": "interfaces/IAaveOracle.sol",
    "88": "interfaces/ILendingPoolAddressesProvider.sol",
    "89": "interfaces/INonfungiblePositionManager.sol",
    "98": "interfaces/IUniswapV3Factory.sol",
    "99": "interfaces/IUniswapV3Pool.sol"
  },
  "ast": {
    "absolutePath": "contracts/RangeManager.sol",
    "exportedSymbols": {
      "Address": [
        12471
      ],
      "AggregatorV3Interface": [
        9417
      ],
      "BeaconProxy": [
        8924
      ],
      "Context": [
        12493
      ],
      "DataTypes": [
        14443
      ],
      "ECDSA": [
        9371
      ],
      "ERC1967Upgrade": [
        14342
      ],
      "ERC20": [
        5329
      ],
      "FixedPoint96": [
        14667
      ],
      "FullMath": [
        14843
      ],
      "IAaveOracle": [
        9894
      ],
      "IBeacon": [
        14404
      ],
      "IERC165": [
        14855
      ],
      "IERC20": [
        5407
      ],
      "IERC20Metadata": [
        6892
      ],
      "IERC721": [
        16080
      ],
      "IERC721Enumerable": [
        15937
      ],
      "IERC721Metadata": [
        15964
      ],
      "IERC721Permit": [
        14484
      ],
      "ILendingPool": [
        9868
      ],
      "ILendingPoolAddressesProvider": [
        10045
      ],
      "INonfungiblePositionManager": [
        10244
      ],
      "IPeripheryImmutableState": [
        14500
      ],
      "IPeripheryPayments": [
        14526
      ],
      "IPoolInitializer": [
        14545
      ],
      "IPriceOracle": [
        10261
      ],
      "ISwapRouter": [
        10361
      ],
      "IUniswapV2Factory": [
        10424
      ],
      "IUniswapV2Pair": [
        10666
      ],
      "IUniswapV2Router01": [
        10974
      ],
      "IUniswapV3Factory": [
        12138
      ],
      "IUniswapV3Pool": [
        12176
      ],
      "IUniswapV3SwapCallback": [
        14657
      ],
      "LiquidityAmounts": [
        11314
      ],
      "Ownable": [
        8842
      ],
      "PoolAddress": [
        14643
      ],
      "Proxy": [
        14394
      ],
      "RangeManager": [
        912
      ],
      "ReentrancyGuard": [
        8964
      ],
      "SafeERC20": [
        7450
      ],
      "StorageSlot": [
        15906
      ],
      "Strings": [
        12055
      ],
      "TickMath": [
        11852
      ],
      "TokenisableRange": [
        2807
      ]
    },
    "id": 913,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:0"
      },
      {
        "absolutePath": "contracts/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "./openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 913,
        "sourceUnit": 5330,
        "src": "64:65:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-solidity/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "./openzeppelin-solidity/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 913,
        "sourceUnit": 7451,
        "src": "130:75:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-solidity/contracts/utils/cryptography/ECDSA.sol",
        "file": "./openzeppelin-solidity/contracts/utils/cryptography/ECDSA.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 913,
        "sourceUnit": 9372,
        "src": "206:72:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-solidity/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "./openzeppelin-solidity/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 913,
        "sourceUnit": 7451,
        "src": "279:75:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-solidity/contracts/security/ReentrancyGuard.sol",
        "file": "./openzeppelin-solidity/contracts/security/ReentrancyGuard.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 913,
        "sourceUnit": 8965,
        "src": "355:72:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/AggregatorV3Interface.sol",
        "file": "../interfaces/AggregatorV3Interface.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 913,
        "sourceUnit": 9418,
        "src": "428:49:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/ILendingPoolAddressesProvider.sol",
        "file": "../interfaces/ILendingPoolAddressesProvider.sol",
        "id": 8,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 913,
        "sourceUnit": 10046,
        "src": "478:57:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IAaveLendingPoolV2.sol",
        "file": "../interfaces/IAaveLendingPoolV2.sol",
        "id": 9,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 913,
        "sourceUnit": 9869,
        "src": "536:46:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IAaveOracle.sol",
        "file": "../interfaces/IAaveOracle.sol",
        "id": 10,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 913,
        "sourceUnit": 9895,
        "src": "583:39:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IUniswapV2Pair.sol",
        "file": "../interfaces/IUniswapV2Pair.sol",
        "id": 11,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 913,
        "sourceUnit": 10667,
        "src": "623:42:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IUniswapV2Factory.sol",
        "file": "../interfaces/IUniswapV2Factory.sol",
        "id": 12,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 913,
        "sourceUnit": 10425,
        "src": "666:45:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IUniswapV2Router01.sol",
        "file": "../interfaces/IUniswapV2Router01.sol",
        "id": 13,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 913,
        "sourceUnit": 10975,
        "src": "712:46:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/ISwapRouter.sol",
        "file": "../interfaces/ISwapRouter.sol",
        "id": 14,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 913,
        "sourceUnit": 10362,
        "src": "759:39:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/INonfungiblePositionManager.sol",
        "file": "../interfaces/INonfungiblePositionManager.sol",
        "id": 15,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 913,
        "sourceUnit": 10245,
        "src": "799:55:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/TokenisableRange.sol",
        "file": "./TokenisableRange.sol",
        "id": 16,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 913,
        "sourceUnit": 2808,
        "src": "855:32:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-solidity/contracts/proxy/beacon/BeaconProxy.sol",
        "file": "./openzeppelin-solidity/contracts/proxy/beacon/BeaconProxy.sol",
        "id": 17,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 913,
        "sourceUnit": 8925,
        "src": "888:72:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-solidity/contracts/access/Ownable.sol",
        "file": "./openzeppelin-solidity/contracts/access/Ownable.sol",
        "id": 18,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 913,
        "sourceUnit": 8843,
        "src": "961:62:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IPriceOracle.sol",
        "file": "../interfaces/IPriceOracle.sol",
        "id": 20,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 913,
        "sourceUnit": 10262,
        "src": "1024:60:0",
        "symbolAliases": [
          {
            "foreign": {
              "id": 19,
              "name": "IPriceOracle",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10261,
              "src": "1032:12:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 22,
              "name": "ReentrancyGuard",
              "nameLocations": [
                "1184:15:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8964,
              "src": "1184:15:0"
            },
            "id": 23,
            "nodeType": "InheritanceSpecifier",
            "src": "1184:15:0"
          },
          {
            "baseName": {
              "id": 24,
              "name": "Ownable",
              "nameLocations": [
                "1201:7:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8842,
              "src": "1201:7:0"
            },
            "id": 25,
            "nodeType": "InheritanceSpecifier",
            "src": "1201:7:0"
          }
        ],
        "canonicalName": "RangeManager",
        "contractDependencies": [
          8924
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 21,
          "nodeType": "StructuredDocumentation",
          "src": "1087:72:0",
          "text": "@title Range middleware between ROE lending pool and various ranges"
        },
        "fullyImplemented": true,
        "id": 912,
        "linearizedBaseContracts": [
          912,
          8842,
          12493,
          8964
        ],
        "name": "RangeManager",
        "nameLocation": "1168:12:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 29,
            "libraryName": {
              "id": 26,
              "name": "SafeERC20",
              "nameLocations": [
                "1219:9:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7450,
              "src": "1219:9:0"
            },
            "nodeType": "UsingForDirective",
            "src": "1213:26:0",
            "typeName": {
              "id": 28,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 27,
                "name": "ERC20",
                "nameLocations": [
                  "1233:5:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5329,
                "src": "1233:5:0"
              },
              "referencedDeclaration": 5329,
              "src": "1233:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$5329",
                "typeString": "contract ERC20"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "b4dcfc77",
            "id": 32,
            "mutability": "mutable",
            "name": "LENDING_POOL",
            "nameLocation": "1262:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 912,
            "src": "1242:32:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ILendingPool_$9868",
              "typeString": "contract ILendingPool"
            },
            "typeName": {
              "id": 31,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 30,
                "name": "ILendingPool",
                "nameLocations": [
                  "1242:12:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 9868,
                "src": "1242:12:0"
              },
              "referencedDeclaration": 9868,
              "src": "1242:12:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ILendingPool_$9868",
                "typeString": "contract ILendingPool"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb",
            "id": 40,
            "name": "Withdraw",
            "nameLocation": "1284:8:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1301:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 40,
                  "src": "1293:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1293:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "asset",
                  "nameLocation": "1315:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 40,
                  "src": "1307:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1307:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1327:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 40,
                  "src": "1322:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1322:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1292:42:0"
            },
            "src": "1278:57:0"
          },
          {
            "anonymous": false,
            "eventSelector": "5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f62",
            "id": 48,
            "name": "Deposit",
            "nameLocation": "1344:7:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1360:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 48,
                  "src": "1352:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1352:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "asset",
                  "nameLocation": "1374:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 48,
                  "src": "1366:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1366:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1386:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 48,
                  "src": "1381:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1381:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1351:42:0"
            },
            "src": "1338:56:0"
          },
          {
            "anonymous": false,
            "eventSelector": "fc9fd5a154bb65cceb4f482bb1b19a821c98d99849a7173a72699ee86bc85537",
            "id": 56,
            "name": "AddRange",
            "nameLocation": "1403:8:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "startX10",
                  "nameLocation": "1420:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 56,
                  "src": "1412:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1412:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "endX10",
                  "nameLocation": "1438:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 56,
                  "src": "1430:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1430:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "step",
                  "nameLocation": "1451:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 56,
                  "src": "1446:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1446:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1411:45:0"
            },
            "src": "1397:60:0"
          },
          {
            "constant": false,
            "functionSelector": "c9c46225",
            "id": 59,
            "mutability": "mutable",
            "name": "ASSET_0",
            "nameLocation": "1474:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 912,
            "src": "1461:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$5329",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 58,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 57,
                "name": "ERC20",
                "nameLocations": [
                  "1461:5:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5329,
                "src": "1461:5:0"
              },
              "referencedDeclaration": 5329,
              "src": "1461:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$5329",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "48b0c087",
            "id": 62,
            "mutability": "mutable",
            "name": "ASSET_1",
            "nameLocation": "1498:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 912,
            "src": "1485:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$5329",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 61,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 60,
                "name": "ERC20",
                "nameLocations": [
                  "1485:5:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5329,
                "src": "1485:5:0"
              },
              "referencedDeclaration": 5329,
              "src": "1485:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$5329",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "bd865cba",
            "id": 68,
            "mutability": "constant",
            "name": "POS_MGR",
            "nameLocation": "1640:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 912,
            "src": "1596:125:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_INonfungiblePositionManager_$10244",
              "typeString": "contract INonfungiblePositionManager"
            },
            "typeName": {
              "id": 64,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 63,
                "name": "INonfungiblePositionManager",
                "nameLocations": [
                  "1596:27:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 10244,
                "src": "1596:27:0"
              },
              "referencedDeclaration": 10244,
              "src": "1596:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_INonfungiblePositionManager_$10244",
                "typeString": "contract INonfungiblePositionManager"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307843333634343262346134353232453837313339394344373137614244443834374162313146453838",
                  "id": 66,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1678:42:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xC36442b4a4522E871399CD717aBDD847Ab11FE88"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 65,
                "name": "INonfungiblePositionManager",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 10244,
                "src": "1650:27:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_INonfungiblePositionManager_$10244_$",
                  "typeString": "type(contract INonfungiblePositionManager)"
                }
              },
              "id": 67,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1650:71:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_INonfungiblePositionManager_$10244",
                "typeString": "contract INonfungiblePositionManager"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "RangeManager.Step",
            "id": 73,
            "members": [
              {
                "constant": false,
                "id": 70,
                "mutability": "mutable",
                "name": "start",
                "nameLocation": "1754:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 73,
                "src": "1746:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 69,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "1746:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 72,
                "mutability": "mutable",
                "name": "end",
                "nameLocation": "1773:3:0",
                "nodeType": "VariableDeclaration",
                "scope": 73,
                "src": "1765:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 71,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "1765:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Step",
            "nameLocation": "1735:4:0",
            "nodeType": "StructDefinition",
            "scope": 912,
            "src": "1728:53:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ab65051f",
            "id": 77,
            "mutability": "mutable",
            "name": "stepList",
            "nameLocation": "1800:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 912,
            "src": "1785:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Step_$73_storage_$dyn_storage",
              "typeString": "struct RangeManager.Step[]"
            },
            "typeName": {
              "baseType": {
                "id": 75,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 74,
                  "name": "Step",
                  "nameLocations": [
                    "1785:4:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 73,
                  "src": "1785:4:0"
                },
                "referencedDeclaration": 73,
                "src": "1785:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Step_$73_storage_ptr",
                  "typeString": "struct RangeManager.Step"
                }
              },
              "id": 76,
              "nodeType": "ArrayTypeName",
              "src": "1785:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Step_$73_storage_$dyn_storage_ptr",
                "typeString": "struct RangeManager.Step[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "58cb5e9d",
            "id": 81,
            "mutability": "mutable",
            "name": "tokenisedRanges",
            "nameLocation": "1840:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 912,
            "src": "1813:42:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$2807_$dyn_storage",
              "typeString": "contract TokenisableRange[]"
            },
            "typeName": {
              "baseType": {
                "id": 79,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 78,
                  "name": "TokenisableRange",
                  "nameLocations": [
                    "1813:16:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2807,
                  "src": "1813:16:0"
                },
                "referencedDeclaration": 2807,
                "src": "1813:16:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_TokenisableRange_$2807",
                  "typeString": "contract TokenisableRange"
                }
              },
              "id": 80,
              "nodeType": "ArrayTypeName",
              "src": "1813:19:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$2807_$dyn_storage_ptr",
                "typeString": "contract TokenisableRange[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2b9c4841",
            "id": 85,
            "mutability": "mutable",
            "name": "tokenisedTicker",
            "nameLocation": "1886:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 912,
            "src": "1859:42:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$2807_$dyn_storage",
              "typeString": "contract TokenisableRange[]"
            },
            "typeName": {
              "baseType": {
                "id": 83,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 82,
                  "name": "TokenisableRange",
                  "nameLocations": [
                    "1859:16:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2807,
                  "src": "1859:16:0"
                },
                "referencedDeclaration": 2807,
                "src": "1859:16:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_TokenisableRange_$2807",
                  "typeString": "contract TokenisableRange"
                }
              },
              "id": 84,
              "nodeType": "ArrayTypeName",
              "src": "1859:19:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$2807_$dyn_storage_ptr",
                "typeString": "contract TokenisableRange[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 132,
              "nodeType": "Block",
              "src": "1980:215:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 100,
                              "name": "lendingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88,
                              "src": "2003:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ILendingPool_$9868",
                                "typeString": "contract ILendingPool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ILendingPool_$9868",
                                "typeString": "contract ILendingPool"
                              }
                            ],
                            "id": 99,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1995:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 98,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1995:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1995:20:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "307830",
                              "id": 104,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2027:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 103,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2019:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 102,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2019:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2019:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1995:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642061646472657373",
                        "id": 107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2033:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
                          "typeString": "literal_string \"Invalid address\""
                        },
                        "value": "Invalid address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
                          "typeString": "literal_string \"Invalid address\""
                        }
                      ],
                      "id": 97,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1986:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1986:66:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 109,
                  "nodeType": "ExpressionStatement",
                  "src": "1986:66:0"
                },
                {
                  "expression": {
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 110,
                      "name": "LENDING_POOL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "2058:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILendingPool_$9868",
                        "typeString": "contract ILendingPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 111,
                      "name": "lendingPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88,
                      "src": "2073:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILendingPool_$9868",
                        "typeString": "contract ILendingPool"
                      }
                    },
                    "src": "2058:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILendingPool_$9868",
                      "typeString": "contract ILendingPool"
                    }
                  },
                  "id": 113,
                  "nodeType": "ExpressionStatement",
                  "src": "2058:26:0"
                },
                {
                  "expression": {
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 114,
                      "name": "ASSET_0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59,
                      "src": "2090:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$5329",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_contract$_ERC20_$5329",
                          "typeString": "contract ERC20"
                        },
                        "id": 117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 115,
                          "name": "_asset0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91,
                          "src": "2100:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$5329",
                            "typeString": "contract ERC20"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 116,
                          "name": "_asset1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 94,
                          "src": "2110:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$5329",
                            "typeString": "contract ERC20"
                          }
                        },
                        "src": "2100:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "id": 119,
                        "name": "_asset1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 94,
                        "src": "2130:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$5329",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "2100:37:0",
                      "trueExpression": {
                        "id": 118,
                        "name": "_asset0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "2120:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$5329",
                          "typeString": "contract ERC20"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$5329",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "2090:47:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$5329",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 122,
                  "nodeType": "ExpressionStatement",
                  "src": "2090:47:0"
                },
                {
                  "expression": {
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 123,
                      "name": "ASSET_1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62,
                      "src": "2143:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$5329",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_contract$_ERC20_$5329",
                          "typeString": "contract ERC20"
                        },
                        "id": 126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 124,
                          "name": "_asset0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91,
                          "src": "2153:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$5329",
                            "typeString": "contract ERC20"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 125,
                          "name": "_asset1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 94,
                          "src": "2163:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$5329",
                            "typeString": "contract ERC20"
                          }
                        },
                        "src": "2153:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "id": 128,
                        "name": "_asset0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "2183:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$5329",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "2153:37:0",
                      "trueExpression": {
                        "id": 127,
                        "name": "_asset1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 94,
                        "src": "2173:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$5329",
                          "typeString": "contract ERC20"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$5329",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "2143:47:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$5329",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 131,
                  "nodeType": "ExpressionStatement",
                  "src": "2143:47:0"
                }
              ]
            },
            "id": 133,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88,
                  "mutability": "mutable",
                  "name": "lendingPool",
                  "nameLocation": "1936:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "1923:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ILendingPool_$9868",
                    "typeString": "contract ILendingPool"
                  },
                  "typeName": {
                    "id": 87,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 86,
                      "name": "ILendingPool",
                      "nameLocations": [
                        "1923:12:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9868,
                      "src": "1923:12:0"
                    },
                    "referencedDeclaration": 9868,
                    "src": "1923:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILendingPool_$9868",
                      "typeString": "contract ILendingPool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91,
                  "mutability": "mutable",
                  "name": "_asset0",
                  "nameLocation": "1955:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "1949:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$5329",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 90,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 89,
                      "name": "ERC20",
                      "nameLocations": [
                        "1949:5:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5329,
                      "src": "1949:5:0"
                    },
                    "referencedDeclaration": 5329,
                    "src": "1949:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$5329",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 94,
                  "mutability": "mutable",
                  "name": "_asset1",
                  "nameLocation": "1970:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "1964:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$5329",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 93,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 92,
                      "name": "ERC20",
                      "nameLocations": [
                        "1964:5:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5329,
                      "src": "1964:5:0"
                    },
                    "referencedDeclaration": 5329,
                    "src": "1964:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$5329",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1922:56:0"
            },
            "returnParameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1980:0:0"
            },
            "scope": 912,
            "src": "1911:284:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 185,
              "nodeType": "Block",
              "src": "2412:250:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 142,
                          "name": "start",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 136,
                          "src": "2426:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 143,
                          "name": "end",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 138,
                          "src": "2434:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "2426:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52616e676520696e76616c6964",
                        "id": 145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2439:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6bac323f09d25cb700199529b1b2ca537dbe317c223f33791da9f4a84eee4e3a",
                          "typeString": "literal_string \"Range invalid\""
                        },
                        "value": "Range invalid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6bac323f09d25cb700199529b1b2ca537dbe317c223f33791da9f4a84eee4e3a",
                          "typeString": "literal_string \"Range invalid\""
                        }
                      ],
                      "id": 141,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2418:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2418:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 147,
                  "nodeType": "ExpressionStatement",
                  "src": "2418:37:0"
                },
                {
                  "assignments": [
                    149
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 149,
                      "mutability": "mutable",
                      "name": "len",
                      "nameLocation": "2469:3:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 185,
                      "src": "2461:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 148,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2461:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 152,
                  "initialValue": {
                    "expression": {
                      "id": 150,
                      "name": "stepList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77,
                      "src": "2475:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Step_$73_storage_$dyn_storage",
                        "typeString": "struct RangeManager.Step storage ref[] storage ref"
                      }
                    },
                    "id": 151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2484:6:0",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "2475:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2461:29:0"
                },
                {
                  "body": {
                    "id": 183,
                    "nodeType": "Block",
                    "src": "2527:130:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            "id": 168,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 163,
                              "name": "start",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 136,
                              "src": "2539:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 164,
                                  "name": "stepList",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 77,
                                  "src": "2548:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Step_$73_storage_$dyn_storage",
                                    "typeString": "struct RangeManager.Step storage ref[] storage ref"
                                  }
                                },
                                "id": 166,
                                "indexExpression": {
                                  "id": 165,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 154,
                                  "src": "2557:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2548:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Step_$73_storage",
                                  "typeString": "struct RangeManager.Step storage ref"
                                }
                              },
                              "id": 167,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2560:3:0",
                              "memberName": "end",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 72,
                              "src": "2548:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "src": "2539:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            "id": 174,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 169,
                              "name": "end",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 138,
                              "src": "2567:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<=",
                            "rightExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 170,
                                  "name": "stepList",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 77,
                                  "src": "2574:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Step_$73_storage_$dyn_storage",
                                    "typeString": "struct RangeManager.Step storage ref[] storage ref"
                                  }
                                },
                                "id": 172,
                                "indexExpression": {
                                  "id": 171,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 154,
                                  "src": "2583:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2574:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Step_$73_storage",
                                  "typeString": "struct RangeManager.Step storage ref"
                                }
                              },
                              "id": 173,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2586:5:0",
                              "memberName": "start",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 70,
                              "src": "2574:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "src": "2567:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2539:52:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 178,
                        "nodeType": "IfStatement",
                        "src": "2535:85:0",
                        "trueBody": {
                          "id": 177,
                          "nodeType": "Block",
                          "src": "2593:27:0",
                          "statements": [
                            {
                              "id": 176,
                              "nodeType": "Continue",
                              "src": "2603:8:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "52616e6765206f7665726c6170",
                              "id": 180,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2634:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2103569afe4049e824d4f4afc3fab50da049ed2c22102c3b8c2678c3d039f83a",
                                "typeString": "literal_string \"Range overlap\""
                              },
                              "value": "Range overlap"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_2103569afe4049e824d4f4afc3fab50da049ed2c22102c3b8c2678c3d039f83a",
                                "typeString": "literal_string \"Range overlap\""
                              }
                            ],
                            "id": 179,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "2627:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2627:23:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 182,
                        "nodeType": "ExpressionStatement",
                        "src": "2627:23:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 157,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 154,
                      "src": "2513:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 158,
                      "name": "len",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 149,
                      "src": "2517:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2513:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 184,
                  "initializationExpression": {
                    "assignments": [
                      154
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 154,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2506:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 184,
                        "src": "2501:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 153,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2501:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 156,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2510:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2501:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2522:3:0",
                      "subExpression": {
                        "id": 160,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 154,
                        "src": "2522:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 162,
                    "nodeType": "ExpressionStatement",
                    "src": "2522:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "2496:161:0"
                }
              ]
            },
            "documentation": {
              "id": 134,
              "nodeType": "StructuredDocumentation",
              "src": "2200:144:0",
              "text": "@notice Checks validity and non overlap of the price ranges\n @param start range low price bound\n @param end range high price bound"
            },
            "id": 186,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkNewRange",
            "nameLocation": "2356:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 136,
                  "mutability": "mutable",
                  "name": "start",
                  "nameLocation": "2378:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 186,
                  "src": "2370:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 135,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "2370:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 138,
                  "mutability": "mutable",
                  "name": "end",
                  "nameLocation": "2393:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 186,
                  "src": "2385:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 137,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "2385:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2369:28:0"
            },
            "returnParameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2412:0:0"
            },
            "scope": 912,
            "src": "2347:315:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 323,
              "nodeType": "Block",
              "src": "3069:815:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 203,
                          "name": "beacon",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 197,
                          "src": "3083:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "307830",
                              "id": 206,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3101:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 205,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3093:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 204,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3093:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3093:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3083:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420626561636f6e",
                        "id": 209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3107:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ba9bdc3b0ca49f3b55932251bb96090126ff660d741b071871335dce42c45f76",
                          "typeString": "literal_string \"Invalid beacon\""
                        },
                        "value": "Invalid beacon"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ba9bdc3b0ca49f3b55932251bb96090126ff660d741b071871335dce42c45f76",
                          "typeString": "literal_string \"Invalid beacon\""
                        }
                      ],
                      "id": 202,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3075:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3075:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 211,
                  "nodeType": "ExpressionStatement",
                  "src": "3075:49:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 213,
                        "name": "startX10",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 189,
                        "src": "3144:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 214,
                        "name": "endX10",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 191,
                        "src": "3154:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 212,
                      "name": "checkNewRange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 186,
                      "src": "3130:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint128_$_t_uint128_$returns$__$",
                        "typeString": "function (uint128,uint128) view"
                      }
                    },
                    "id": 215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3130:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 216,
                  "nodeType": "ExpressionStatement",
                  "src": "3130:31:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 221,
                            "name": "startX10",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 189,
                            "src": "3187:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          {
                            "id": 222,
                            "name": "endX10",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 191,
                            "src": "3197:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          ],
                          "id": 220,
                          "name": "Step",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73,
                          "src": "3182:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Step_$73_storage_ptr_$",
                            "typeString": "type(struct RangeManager.Step storage pointer)"
                          }
                        },
                        "id": 223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3182:22:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Step_$73_memory_ptr",
                          "typeString": "struct RangeManager.Step memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Step_$73_memory_ptr",
                          "typeString": "struct RangeManager.Step memory"
                        }
                      ],
                      "expression": {
                        "id": 217,
                        "name": "stepList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77,
                        "src": "3167:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Step_$73_storage_$dyn_storage",
                          "typeString": "struct RangeManager.Step storage ref[] storage ref"
                        }
                      },
                      "id": 219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3176:4:0",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3167:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Step_$73_storage_$dyn_storage_ptr_$_t_struct$_Step_$73_storage_$returns$__$attached_to$_t_array$_t_struct$_Step_$73_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct RangeManager.Step storage ref[] storage pointer,struct RangeManager.Step storage ref)"
                      }
                    },
                    "id": 224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3167:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 225,
                  "nodeType": "ExpressionStatement",
                  "src": "3167:39:0"
                },
                {
                  "assignments": [
                    228
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 228,
                      "mutability": "mutable",
                      "name": "trbp",
                      "nameLocation": "3224:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 323,
                      "src": "3212:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BeaconProxy_$8924",
                        "typeString": "contract BeaconProxy"
                      },
                      "typeName": {
                        "id": 227,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 226,
                          "name": "BeaconProxy",
                          "nameLocations": [
                            "3212:11:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8924,
                          "src": "3212:11:0"
                        },
                        "referencedDeclaration": 8924,
                        "src": "3212:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BeaconProxy_$8924",
                          "typeString": "contract BeaconProxy"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 235,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 232,
                        "name": "beacon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 197,
                        "src": "3247:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3255:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 231,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3231:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_contract$_BeaconProxy_$8924_$",
                        "typeString": "function (address,bytes memory) payable returns (contract BeaconProxy)"
                      },
                      "typeName": {
                        "id": 230,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 229,
                          "name": "BeaconProxy",
                          "nameLocations": [
                            "3235:11:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8924,
                          "src": "3235:11:0"
                        },
                        "referencedDeclaration": 8924,
                        "src": "3235:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BeaconProxy_$8924",
                          "typeString": "contract BeaconProxy"
                        }
                      }
                    },
                    "id": 234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3231:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BeaconProxy_$8924",
                      "typeString": "contract BeaconProxy"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3212:46:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 242,
                                "name": "trbp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 228,
                                "src": "3311:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BeaconProxy_$8924",
                                  "typeString": "contract BeaconProxy"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BeaconProxy_$8924",
                                  "typeString": "contract BeaconProxy"
                                }
                              ],
                              "id": 241,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3303:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 240,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3303:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 243,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3303:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 239,
                          "name": "TokenisableRange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2807,
                          "src": "3286:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_TokenisableRange_$2807_$",
                            "typeString": "type(contract TokenisableRange)"
                          }
                        },
                        "id": 244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3286:31:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenisableRange_$2807",
                          "typeString": "contract TokenisableRange"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TokenisableRange_$2807",
                          "typeString": "contract TokenisableRange"
                        }
                      ],
                      "expression": {
                        "id": 236,
                        "name": "tokenisedRanges",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "3264:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$2807_$dyn_storage",
                          "typeString": "contract TokenisableRange[] storage ref"
                        }
                      },
                      "id": 238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3280:4:0",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3264:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_TokenisableRange_$2807_$dyn_storage_ptr_$_t_contract$_TokenisableRange_$2807_$returns$__$attached_to$_t_array$_t_contract$_TokenisableRange_$2807_$dyn_storage_ptr_$",
                        "typeString": "function (contract TokenisableRange[] storage pointer,contract TokenisableRange)"
                      }
                    },
                    "id": 245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3264:55:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 246,
                  "nodeType": "ExpressionStatement",
                  "src": "3264:55:0"
                },
                {
                  "expression": {
                    "id": 254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 247,
                      "name": "trbp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 228,
                      "src": "3325:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BeaconProxy_$8924",
                        "typeString": "contract BeaconProxy"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 251,
                          "name": "beacon",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 197,
                          "src": "3348:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "",
                          "id": 252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3356:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          "value": ""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "id": 250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3332:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_contract$_BeaconProxy_$8924_$",
                          "typeString": "function (address,bytes memory) payable returns (contract BeaconProxy)"
                        },
                        "typeName": {
                          "id": 249,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 248,
                            "name": "BeaconProxy",
                            "nameLocations": [
                              "3336:11:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 8924,
                            "src": "3336:11:0"
                          },
                          "referencedDeclaration": 8924,
                          "src": "3336:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BeaconProxy_$8924",
                            "typeString": "contract BeaconProxy"
                          }
                        }
                      },
                      "id": 253,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3332:27:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BeaconProxy_$8924",
                        "typeString": "contract BeaconProxy"
                      }
                    },
                    "src": "3325:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BeaconProxy_$8924",
                      "typeString": "contract BeaconProxy"
                    }
                  },
                  "id": 255,
                  "nodeType": "ExpressionStatement",
                  "src": "3325:34:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 262,
                                "name": "trbp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 228,
                                "src": "3412:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BeaconProxy_$8924",
                                  "typeString": "contract BeaconProxy"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BeaconProxy_$8924",
                                  "typeString": "contract BeaconProxy"
                                }
                              ],
                              "id": 261,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3404:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 260,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3404:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 263,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3404:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 259,
                          "name": "TokenisableRange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2807,
                          "src": "3387:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_TokenisableRange_$2807_$",
                            "typeString": "type(contract TokenisableRange)"
                          }
                        },
                        "id": 264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3387:31:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenisableRange_$2807",
                          "typeString": "contract TokenisableRange"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TokenisableRange_$2807",
                          "typeString": "contract TokenisableRange"
                        }
                      ],
                      "expression": {
                        "id": 256,
                        "name": "tokenisedTicker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85,
                        "src": "3365:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$2807_$dyn_storage",
                          "typeString": "contract TokenisableRange[] storage ref"
                        }
                      },
                      "id": 258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3381:4:0",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3365:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_TokenisableRange_$2807_$dyn_storage_ptr_$_t_contract$_TokenisableRange_$2807_$returns$__$attached_to$_t_array$_t_contract$_TokenisableRange_$2807_$dyn_storage_ptr_$",
                        "typeString": "function (contract TokenisableRange[] storage pointer,contract TokenisableRange)"
                      }
                    },
                    "id": 265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3365:55:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 266,
                  "nodeType": "ExpressionStatement",
                  "src": "3365:55:0"
                },
                {
                  "assignments": [
                    269
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 269,
                      "mutability": "mutable",
                      "name": "oracle",
                      "nameLocation": "3438:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 323,
                      "src": "3426:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAaveOracle_$9894",
                        "typeString": "contract IAaveOracle"
                      },
                      "typeName": {
                        "id": 268,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 267,
                          "name": "IAaveOracle",
                          "nameLocations": [
                            "3426:11:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9894,
                          "src": "3426:11:0"
                        },
                        "referencedDeclaration": 9894,
                        "src": "3426:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAaveOracle_$9894",
                          "typeString": "contract IAaveOracle"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 279,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 272,
                                    "name": "LENDING_POOL",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 32,
                                    "src": "3490:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ILendingPool_$9868",
                                      "typeString": "contract ILendingPool"
                                    }
                                  },
                                  "id": 273,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3503:20:0",
                                  "memberName": "getAddressesProvider",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 9785,
                                  "src": "3490:33:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ILendingPoolAddressesProvider_$10045_$",
                                    "typeString": "function () view external returns (contract ILendingPoolAddressesProvider)"
                                  }
                                },
                                "id": 274,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3490:35:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$10045",
                                  "typeString": "contract ILendingPoolAddressesProvider"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$10045",
                                  "typeString": "contract ILendingPoolAddressesProvider"
                                }
                              ],
                              "id": 271,
                              "name": "ILendingPoolAddressesProvider",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10045,
                              "src": "3459:29:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ILendingPoolAddressesProvider_$10045_$",
                                "typeString": "type(contract ILendingPoolAddressesProvider)"
                              }
                            },
                            "id": 275,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3459:68:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$10045",
                              "typeString": "contract ILendingPoolAddressesProvider"
                            }
                          },
                          "id": 276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3528:14:0",
                          "memberName": "getPriceOracle",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10029,
                          "src": "3459:83:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3459:85:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 270,
                      "name": "IAaveOracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9894,
                      "src": "3447:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IAaveOracle_$9894_$",
                        "typeString": "type(contract IAaveOracle)"
                      }
                    },
                    "id": 278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3447:98:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAaveOracle_$9894",
                      "typeString": "contract IAaveOracle"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3426:119:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 287,
                        "name": "oracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 269,
                        "src": "3612:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAaveOracle_$9894",
                          "typeString": "contract IAaveOracle"
                        }
                      },
                      {
                        "id": 288,
                        "name": "ASSET_0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59,
                        "src": "3620:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$5329",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "id": 289,
                        "name": "ASSET_1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62,
                        "src": "3629:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$5329",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "id": 290,
                        "name": "startX10",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 189,
                        "src": "3638:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 291,
                        "name": "endX10",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 191,
                        "src": "3648:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 292,
                        "name": "startName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 193,
                        "src": "3656:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 293,
                        "name": "endName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 195,
                        "src": "3667:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3676:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IAaveOracle_$9894",
                          "typeString": "contract IAaveOracle"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20_$5329",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20_$5329",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 280,
                          "name": "tokenisedRanges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 81,
                          "src": "3556:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$2807_$dyn_storage",
                            "typeString": "contract TokenisableRange[] storage ref"
                          }
                        },
                        "id": 285,
                        "indexExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 281,
                              "name": "tokenisedRanges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 81,
                              "src": "3573:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$2807_$dyn_storage",
                                "typeString": "contract TokenisableRange[] storage ref"
                              }
                            },
                            "id": 282,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3589:6:0",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "3573:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 283,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3598:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "3573:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3556:45:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenisableRange_$2807",
                          "typeString": "contract TokenisableRange"
                        }
                      },
                      "id": 286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3602:9:0",
                      "memberName": "initProxy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1456,
                      "src": "3556:55:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IAaveOracle_$9894_$_t_contract$_ERC20_$5329_$_t_contract$_ERC20_$5329_$_t_uint128_$_t_uint128_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (contract IAaveOracle,contract ERC20,contract ERC20,uint128,uint128,string memory,string memory,bool) external"
                      }
                    },
                    "id": 295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3556:126:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 296,
                  "nodeType": "ExpressionStatement",
                  "src": "3556:126:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 304,
                        "name": "oracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 269,
                        "src": "3744:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAaveOracle_$9894",
                          "typeString": "contract IAaveOracle"
                        }
                      },
                      {
                        "id": 305,
                        "name": "ASSET_0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59,
                        "src": "3752:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$5329",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "id": 306,
                        "name": "ASSET_1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62,
                        "src": "3761:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$5329",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "id": 307,
                        "name": "startX10",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 189,
                        "src": "3770:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 308,
                        "name": "endX10",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 191,
                        "src": "3780:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 309,
                        "name": "startName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 193,
                        "src": "3788:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 310,
                        "name": "endName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 195,
                        "src": "3799:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3808:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IAaveOracle_$9894",
                          "typeString": "contract IAaveOracle"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20_$5329",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20_$5329",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 297,
                          "name": "tokenisedTicker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85,
                          "src": "3688:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$2807_$dyn_storage",
                            "typeString": "contract TokenisableRange[] storage ref"
                          }
                        },
                        "id": 302,
                        "indexExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 301,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 298,
                              "name": "tokenisedTicker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 85,
                              "src": "3705:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$2807_$dyn_storage",
                                "typeString": "contract TokenisableRange[] storage ref"
                              }
                            },
                            "id": 299,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3721:6:0",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "3705:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 300,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3730:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "3705:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3688:45:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenisableRange_$2807",
                          "typeString": "contract TokenisableRange"
                        }
                      },
                      "id": 303,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3734:9:0",
                      "memberName": "initProxy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1456,
                      "src": "3688:55:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IAaveOracle_$9894_$_t_contract$_ERC20_$5329_$_t_contract$_ERC20_$5329_$_t_uint128_$_t_uint128_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (contract IAaveOracle,contract ERC20,contract ERC20,uint128,uint128,string memory,string memory,bool) external"
                      }
                    },
                    "id": 312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3688:125:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 313,
                  "nodeType": "ExpressionStatement",
                  "src": "3688:125:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 315,
                        "name": "startX10",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 189,
                        "src": "3834:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 316,
                        "name": "endX10",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 191,
                        "src": "3844:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 317,
                            "name": "tokenisedRanges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 81,
                            "src": "3852:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$2807_$dyn_storage",
                              "typeString": "contract TokenisableRange[] storage ref"
                            }
                          },
                          "id": 318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3868:6:0",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3852:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3877:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "3852:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 314,
                      "name": "AddRange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "3825:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint128_$_t_uint128_$_t_uint256_$returns$__$",
                        "typeString": "function (uint128,uint128,uint256)"
                      }
                    },
                    "id": 321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3825:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 322,
                  "nodeType": "EmitStatement",
                  "src": "3820:59:0"
                }
              ]
            },
            "documentation": {
              "id": 187,
              "nodeType": "StructuredDocumentation",
              "src": "2668:258:0",
              "text": "@notice Generate Ticker and Ranger ranges\n @param startX10 Range lower price scaled by 1e10\n @param endX10 Range high price scaled by 1e10\n @param startName Name of the range lower bound \n @param endName Name of the range higher bound"
            },
            "functionSelector": "43204ff3",
            "id": 324,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 200,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 199,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3059:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8784,
                  "src": "3059:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3059:9:0"
              }
            ],
            "name": "generateRange",
            "nameLocation": "2938:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 189,
                  "mutability": "mutable",
                  "name": "startX10",
                  "nameLocation": "2960:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 324,
                  "src": "2952:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 188,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "2952:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 191,
                  "mutability": "mutable",
                  "name": "endX10",
                  "nameLocation": "2978:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 324,
                  "src": "2970:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 190,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "2970:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 193,
                  "mutability": "mutable",
                  "name": "startName",
                  "nameLocation": "3000:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 324,
                  "src": "2986:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 192,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2986:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 195,
                  "mutability": "mutable",
                  "name": "endName",
                  "nameLocation": "3025:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 324,
                  "src": "3011:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 194,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3011:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 197,
                  "mutability": "mutable",
                  "name": "beacon",
                  "nameLocation": "3042:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 324,
                  "src": "3034:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 196,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3034:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2951:98:0"
            },
            "returnParameters": {
              "id": 201,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3069:0:0"
            },
            "scope": 912,
            "src": "2929:955:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 399,
              "nodeType": "Block",
              "src": "4130:369:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 339,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4161:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4165:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4161:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 343,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4181:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RangeManager_$912",
                              "typeString": "contract RangeManager"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_RangeManager_$912",
                              "typeString": "contract RangeManager"
                            }
                          ],
                          "id": 342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4173:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 341,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4173:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4173:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 345,
                        "name": "amount0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 329,
                        "src": "4188:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 336,
                        "name": "ASSET_0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59,
                        "src": "4136:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$5329",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 338,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4144:16:0",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7283,
                      "src": "4136:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$5407_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$5407_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4136:60:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 347,
                  "nodeType": "ExpressionStatement",
                  "src": "4136:60:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 351,
                        "name": "tr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 327,
                        "src": "4232:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 352,
                        "name": "amount0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 329,
                        "src": "4236:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 348,
                        "name": "ASSET_0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59,
                        "src": "4202:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$5329",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 350,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4210:21:0",
                      "memberName": "safeIncreaseAllowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7363,
                      "src": "4202:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$5407_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$5407_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4202:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 354,
                  "nodeType": "ExpressionStatement",
                  "src": "4202:42:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 358,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4275:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4279:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4275:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 362,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4295:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RangeManager_$912",
                              "typeString": "contract RangeManager"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_RangeManager_$912",
                              "typeString": "contract RangeManager"
                            }
                          ],
                          "id": 361,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4287:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 360,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4287:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4287:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 364,
                        "name": "amount1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 331,
                        "src": "4302:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 355,
                        "name": "ASSET_1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62,
                        "src": "4250:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$5329",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 357,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4258:16:0",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7283,
                      "src": "4250:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$5407_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$5407_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4250:60:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 366,
                  "nodeType": "ExpressionStatement",
                  "src": "4250:60:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 370,
                        "name": "tr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 327,
                        "src": "4346:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 371,
                        "name": "amount1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 331,
                        "src": "4350:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 367,
                        "name": "ASSET_1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62,
                        "src": "4316:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$5329",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 369,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4324:21:0",
                      "memberName": "safeIncreaseAllowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7363,
                      "src": "4316:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$5407_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$5407_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4316:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 373,
                  "nodeType": "ExpressionStatement",
                  "src": "4316:42:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 378,
                        "name": "amount0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 329,
                        "src": "4390:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 379,
                        "name": "amount1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 331,
                        "src": "4399:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 375,
                            "name": "tr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 327,
                            "src": "4381:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 374,
                          "name": "TokenisableRange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2807,
                          "src": "4364:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_TokenisableRange_$2807_$",
                            "typeString": "type(contract TokenisableRange)"
                          }
                        },
                        "id": 376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4364:20:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenisableRange_$2807",
                          "typeString": "contract TokenisableRange"
                        }
                      },
                      "id": 377,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4385:4:0",
                      "memberName": "init",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1650,
                      "src": "4364:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) external"
                      }
                    },
                    "id": 380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4364:43:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 381,
                  "nodeType": "ExpressionStatement",
                  "src": "4364:43:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 386,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4436:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4440:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4436:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 394,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4487:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_RangeManager_$912",
                                  "typeString": "contract RangeManager"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_RangeManager_$912",
                                  "typeString": "contract RangeManager"
                                }
                              ],
                              "id": 393,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4479:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 392,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4479:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 395,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4479:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 389,
                                "name": "tr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 327,
                                "src": "4465:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 388,
                              "name": "TokenisableRange",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2807,
                              "src": "4448:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TokenisableRange_$2807_$",
                                "typeString": "type(contract TokenisableRange)"
                              }
                            },
                            "id": 390,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4448:20:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenisableRange_$2807",
                              "typeString": "contract TokenisableRange"
                            }
                          },
                          "id": 391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4469:9:0",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4882,
                          "src": "4448:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4448:45:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 383,
                            "name": "tr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 327,
                            "src": "4419:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 382,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5329,
                          "src": "4413:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$5329_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4413:9:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$5329",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 385,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4423:12:0",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7257,
                      "src": "4413:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$5407_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$5407_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4413:81:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 398,
                  "nodeType": "ExpressionStatement",
                  "src": "4413:81:0"
                }
              ]
            },
            "documentation": {
              "id": 325,
              "nodeType": "StructuredDocumentation",
              "src": "3893:156:0",
              "text": "@notice Initialize a previously created ticker\n @param tr Range address\n @param amount0 Amount of token0\n @param amount1 Amount of token1"
            },
            "functionSelector": "576b6052",
            "id": 400,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 334,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 333,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "4120:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8784,
                  "src": "4120:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4120:9:0"
              }
            ],
            "name": "initRange",
            "nameLocation": "4061:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 332,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 327,
                  "mutability": "mutable",
                  "name": "tr",
                  "nameLocation": "4079:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 400,
                  "src": "4071:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 326,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4071:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 329,
                  "mutability": "mutable",
                  "name": "amount0",
                  "nameLocation": "4088:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 400,
                  "src": "4083:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 328,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4083:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 331,
                  "mutability": "mutable",
                  "name": "amount1",
                  "nameLocation": "4102:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 400,
                  "src": "4097:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 330,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4097:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4070:40:0"
            },
            "returnParameters": {
              "id": 335,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4130:0:0"
            },
            "scope": 912,
            "src": "4052:447:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 590,
              "nodeType": "Block",
              "src": "4674:1252:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 407,
                            "name": "step",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 403,
                            "src": "4688:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 408,
                              "name": "tokenisedRanges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 81,
                              "src": "4695:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$2807_$dyn_storage",
                                "typeString": "contract TokenisableRange[] storage ref"
                              }
                            },
                            "id": 409,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4711:6:0",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "4695:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4688:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 411,
                            "name": "step",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 403,
                            "src": "4721:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 412,
                              "name": "tokenisedTicker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 85,
                              "src": "4728:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$2807_$dyn_storage",
                                "typeString": "contract TokenisableRange[] storage ref"
                              }
                            },
                            "id": 413,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4744:6:0",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "4728:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4721:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4688:62:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642073746570",
                        "id": 416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4752:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1a74891f21cfc913c9f94e4152cd1c0f33d8abf2148d1ccea1664324b2af1469",
                          "typeString": "literal_string \"Invalid step\""
                        },
                        "value": "Invalid step"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1a74891f21cfc913c9f94e4152cd1c0f33d8abf2148d1ccea1664324b2af1469",
                          "typeString": "literal_string \"Invalid step\""
                        }
                      ],
                      "id": 406,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4680:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4680:87:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 418,
                  "nodeType": "ExpressionStatement",
                  "src": "4680:87:0"
                },
                {
                  "assignments": [
                    420
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 420,
                      "mutability": "mutable",
                      "name": "trAmt",
                      "nameLocation": "4781:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 590,
                      "src": "4773:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 419,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4773:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 421,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4773:13:0"
                },
                {
                  "expression": {
                    "id": 439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 422,
                      "name": "trAmt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 420,
                      "src": "4797:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 436,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4896:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4900:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4896:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "baseExpression": {
                                          "id": 428,
                                          "name": "tokenisedRanges",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 81,
                                          "src": "4847:15:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$2807_$dyn_storage",
                                            "typeString": "contract TokenisableRange[] storage ref"
                                          }
                                        },
                                        "id": 430,
                                        "indexExpression": {
                                          "id": 429,
                                          "name": "step",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 403,
                                          "src": "4863:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "4847:21:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_TokenisableRange_$2807",
                                          "typeString": "contract TokenisableRange"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_TokenisableRange_$2807",
                                          "typeString": "contract TokenisableRange"
                                        }
                                      ],
                                      "id": 427,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "4839:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 426,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4839:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 431,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4839:30:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 424,
                                    "name": "LENDING_POOL",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 32,
                                    "src": "4811:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ILendingPool_$9868",
                                      "typeString": "contract ILendingPool"
                                    }
                                  },
                                  "id": 425,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4824:14:0",
                                  "memberName": "getReserveData",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 9758,
                                  "src": "4811:27:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_struct$_ReserveData_$14432_memory_ptr_$",
                                    "typeString": "function (address) view external returns (struct DataTypes.ReserveData memory)"
                                  }
                                },
                                "id": 432,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4811:59:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ReserveData_$14432_memory_ptr",
                                  "typeString": "struct DataTypes.ReserveData memory"
                                }
                              },
                              "id": 433,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4871:13:0",
                              "memberName": "aTokenAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14423,
                              "src": "4811:73:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 423,
                            "name": "ERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5329,
                            "src": "4805:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC20_$5329_$",
                              "typeString": "type(contract ERC20)"
                            }
                          },
                          "id": 434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4805:80:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$5329",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4886:9:0",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4882,
                        "src": "4805:90:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 438,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4805:102:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4797:110:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 440,
                  "nodeType": "ExpressionStatement",
                  "src": "4797:110:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 441,
                      "name": "trAmt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 420,
                      "src": "4920:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 442,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4928:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4920:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 505,
                  "nodeType": "IfStatement",
                  "src": "4916:430:0",
                  "trueBody": {
                    "id": 504,
                    "nodeType": "Block",
                    "src": "4931:415:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "baseExpression": {
                                          "id": 451,
                                          "name": "tokenisedRanges",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 81,
                                          "src": "5019:15:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$2807_$dyn_storage",
                                            "typeString": "contract TokenisableRange[] storage ref"
                                          }
                                        },
                                        "id": 453,
                                        "indexExpression": {
                                          "id": 452,
                                          "name": "step",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 403,
                                          "src": "5035:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "5019:21:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_TokenisableRange_$2807",
                                          "typeString": "contract TokenisableRange"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_TokenisableRange_$2807",
                                          "typeString": "contract TokenisableRange"
                                        }
                                      ],
                                      "id": 450,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5011:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 449,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5011:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 454,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5011:30:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 447,
                                    "name": "LENDING_POOL",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 32,
                                    "src": "4983:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ILendingPool_$9868",
                                      "typeString": "contract ILendingPool"
                                    }
                                  },
                                  "id": 448,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4996:14:0",
                                  "memberName": "getReserveData",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 9758,
                                  "src": "4983:27:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_struct$_ReserveData_$14432_memory_ptr_$",
                                    "typeString": "function (address) view external returns (struct DataTypes.ReserveData memory)"
                                  }
                                },
                                "id": 455,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4983:59:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ReserveData_$14432_memory_ptr",
                                  "typeString": "struct DataTypes.ReserveData memory"
                                }
                              },
                              "id": 456,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5043:13:0",
                              "memberName": "aTokenAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14423,
                              "src": "4983:73:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 457,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5069:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 458,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5073:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5069:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 459,
                              "name": "trAmt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 420,
                              "src": "5092:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 444,
                              "name": "LENDING_POOL",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "4948:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ILendingPool_$9868",
                                "typeString": "contract ILendingPool"
                              }
                            },
                            "id": 446,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4961:10:0",
                            "memberName": "PMTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9804,
                            "src": "4948:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256) external"
                            }
                          },
                          "id": 460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4948:159:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 461,
                        "nodeType": "ExpressionStatement",
                        "src": "4948:159:0"
                      },
                      {
                        "expression": {
                          "id": 481,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 462,
                            "name": "trAmt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 420,
                            "src": "5117:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 467,
                                      "name": "tokenisedRanges",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 81,
                                      "src": "5155:15:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$2807_$dyn_storage",
                                        "typeString": "contract TokenisableRange[] storage ref"
                                      }
                                    },
                                    "id": 469,
                                    "indexExpression": {
                                      "id": 468,
                                      "name": "step",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 403,
                                      "src": "5171:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5155:21:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TokenisableRange_$2807",
                                      "typeString": "contract TokenisableRange"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TokenisableRange_$2807",
                                      "typeString": "contract TokenisableRange"
                                    }
                                  ],
                                  "id": 466,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5147:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 465,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5147:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 470,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5147:30:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 473,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5184:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 472,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5184:7:0",
                                        "typeDescriptions": {}
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      }
                                    ],
                                    "id": 471,
                                    "name": "type",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -27,
                                    "src": "5179:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                      "typeString": "function () pure"
                                    }
                                  },
                                  "id": 474,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5179:13:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_meta_type_t_uint256",
                                    "typeString": "type(uint256)"
                                  }
                                },
                                "id": 475,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "5193:3:0",
                                "memberName": "max",
                                "nodeType": "MemberAccess",
                                "src": "5179:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 478,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "5206:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_RangeManager_$912",
                                      "typeString": "contract RangeManager"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_RangeManager_$912",
                                      "typeString": "contract RangeManager"
                                    }
                                  ],
                                  "id": 477,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5198:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 476,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5198:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 479,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5198:13:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 463,
                                "name": "LENDING_POOL",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32,
                                "src": "5125:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ILendingPool_$9868",
                                  "typeString": "contract ILendingPool"
                                }
                              },
                              "id": 464,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5138:8:0",
                              "memberName": "withdraw",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 9583,
                              "src": "5125:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address,uint256,address) external returns (uint256)"
                              }
                            },
                            "id": 480,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5125:87:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5117:95:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 482,
                        "nodeType": "ExpressionStatement",
                        "src": "5117:95:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 487,
                              "name": "trAmt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 420,
                              "src": "5253:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 488,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5260:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "hexValue": "30",
                              "id": 489,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5263:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 483,
                                "name": "tokenisedRanges",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 81,
                                "src": "5222:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$2807_$dyn_storage",
                                  "typeString": "contract TokenisableRange[] storage ref"
                                }
                              },
                              "id": 485,
                              "indexExpression": {
                                "id": 484,
                                "name": "step",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 403,
                                "src": "5238:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5222:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TokenisableRange_$2807",
                                "typeString": "contract TokenisableRange"
                              }
                            },
                            "id": 486,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5244:8:0",
                            "memberName": "withdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2498,
                            "src": "5222:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                              "typeString": "function (uint256,uint256,uint256) external returns (uint256,uint256)"
                            }
                          },
                          "id": 490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5222:43:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256)"
                          }
                        },
                        "id": 491,
                        "nodeType": "ExpressionStatement",
                        "src": "5222:43:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 493,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5289:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 494,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5293:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5289:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 497,
                                    "name": "tokenisedRanges",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 81,
                                    "src": "5309:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$2807_$dyn_storage",
                                      "typeString": "contract TokenisableRange[] storage ref"
                                    }
                                  },
                                  "id": 499,
                                  "indexExpression": {
                                    "id": 498,
                                    "name": "step",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 403,
                                    "src": "5325:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5309:21:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TokenisableRange_$2807",
                                    "typeString": "contract TokenisableRange"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TokenisableRange_$2807",
                                    "typeString": "contract TokenisableRange"
                                  }
                                ],
                                "id": 496,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5301:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 495,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5301:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 500,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5301:30:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 501,
                              "name": "trAmt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 420,
                              "src": "5333:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 492,
                            "name": "Withdraw",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40,
                            "src": "5280:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5280:59:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 503,
                        "nodeType": "EmitStatement",
                        "src": "5275:64:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 506,
                      "name": "trAmt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 420,
                      "src": "5360:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 520,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5459:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5463:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5459:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "baseExpression": {
                                          "id": 512,
                                          "name": "tokenisedTicker",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 85,
                                          "src": "5410:15:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$2807_$dyn_storage",
                                            "typeString": "contract TokenisableRange[] storage ref"
                                          }
                                        },
                                        "id": 514,
                                        "indexExpression": {
                                          "id": 513,
                                          "name": "step",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 403,
                                          "src": "5426:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "5410:21:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_TokenisableRange_$2807",
                                          "typeString": "contract TokenisableRange"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_TokenisableRange_$2807",
                                          "typeString": "contract TokenisableRange"
                                        }
                                      ],
                                      "id": 511,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5402:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 510,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5402:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 515,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5402:30:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 508,
                                    "name": "LENDING_POOL",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 32,
                                    "src": "5374:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ILendingPool_$9868",
                                      "typeString": "contract ILendingPool"
                                    }
                                  },
                                  "id": 509,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5387:14:0",
                                  "memberName": "getReserveData",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 9758,
                                  "src": "5374:27:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_struct$_ReserveData_$14432_memory_ptr_$",
                                    "typeString": "function (address) view external returns (struct DataTypes.ReserveData memory)"
                                  }
                                },
                                "id": 516,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5374:59:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ReserveData_$14432_memory_ptr",
                                  "typeString": "struct DataTypes.ReserveData memory"
                                }
                              },
                              "id": 517,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5434:13:0",
                              "memberName": "aTokenAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14423,
                              "src": "5374:73:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 507,
                            "name": "ERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5329,
                            "src": "5368:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC20_$5329_$",
                              "typeString": "type(contract ERC20)"
                            }
                          },
                          "id": 518,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5368:80:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$5329",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5449:9:0",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4882,
                        "src": "5368:90:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 522,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5368:102:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5360:110:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 524,
                  "nodeType": "ExpressionStatement",
                  "src": "5360:110:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 525,
                      "name": "trAmt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 420,
                      "src": "5480:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 526,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5488:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5480:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 589,
                  "nodeType": "IfStatement",
                  "src": "5476:435:0",
                  "trueBody": {
                    "id": 588,
                    "nodeType": "Block",
                    "src": "5491:420:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "baseExpression": {
                                          "id": 535,
                                          "name": "tokenisedTicker",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 85,
                                          "src": "5576:15:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$2807_$dyn_storage",
                                            "typeString": "contract TokenisableRange[] storage ref"
                                          }
                                        },
                                        "id": 537,
                                        "indexExpression": {
                                          "id": 536,
                                          "name": "step",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 403,
                                          "src": "5592:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "5576:21:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_TokenisableRange_$2807",
                                          "typeString": "contract TokenisableRange"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_TokenisableRange_$2807",
                                          "typeString": "contract TokenisableRange"
                                        }
                                      ],
                                      "id": 534,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5568:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 533,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5568:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 538,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5568:30:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 531,
                                    "name": "LENDING_POOL",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 32,
                                    "src": "5540:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ILendingPool_$9868",
                                      "typeString": "contract ILendingPool"
                                    }
                                  },
                                  "id": 532,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5553:14:0",
                                  "memberName": "getReserveData",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 9758,
                                  "src": "5540:27:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_struct$_ReserveData_$14432_memory_ptr_$",
                                    "typeString": "function (address) view external returns (struct DataTypes.ReserveData memory)"
                                  }
                                },
                                "id": 539,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5540:59:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ReserveData_$14432_memory_ptr",
                                  "typeString": "struct DataTypes.ReserveData memory"
                                }
                              },
                              "id": 540,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5600:13:0",
                              "memberName": "aTokenAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14423,
                              "src": "5540:73:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 541,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5626:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 542,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5630:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5626:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 543,
                              "name": "trAmt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 420,
                              "src": "5649:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 528,
                              "name": "LENDING_POOL",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "5505:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ILendingPool_$9868",
                                "typeString": "contract ILendingPool"
                              }
                            },
                            "id": 530,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5518:10:0",
                            "memberName": "PMTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9804,
                            "src": "5505:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256) external"
                            }
                          },
                          "id": 544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5505:159:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 545,
                        "nodeType": "ExpressionStatement",
                        "src": "5505:159:0"
                      },
                      {
                        "assignments": [
                          547
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 547,
                            "mutability": "mutable",
                            "name": "ttAmt",
                            "nameLocation": "5682:5:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 588,
                            "src": "5674:13:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 546,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5674:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 566,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 552,
                                    "name": "tokenisedTicker",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 85,
                                    "src": "5720:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$2807_$dyn_storage",
                                      "typeString": "contract TokenisableRange[] storage ref"
                                    }
                                  },
                                  "id": 554,
                                  "indexExpression": {
                                    "id": 553,
                                    "name": "step",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 403,
                                    "src": "5736:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5720:21:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TokenisableRange_$2807",
                                    "typeString": "contract TokenisableRange"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TokenisableRange_$2807",
                                    "typeString": "contract TokenisableRange"
                                  }
                                ],
                                "id": 551,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5712:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 550,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5712:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 555,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5712:30:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 558,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5749:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 557,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5749:7:0",
                                      "typeDescriptions": {}
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    }
                                  ],
                                  "id": 556,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -27,
                                  "src": "5744:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 559,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5744:13:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_uint256",
                                  "typeString": "type(uint256)"
                                }
                              },
                              "id": 560,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "5758:3:0",
                              "memberName": "max",
                              "nodeType": "MemberAccess",
                              "src": "5744:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 563,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "5771:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_RangeManager_$912",
                                    "typeString": "contract RangeManager"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_RangeManager_$912",
                                    "typeString": "contract RangeManager"
                                  }
                                ],
                                "id": 562,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5763:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 561,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5763:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 564,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5763:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 548,
                              "name": "LENDING_POOL",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "5690:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ILendingPool_$9868",
                                "typeString": "contract ILendingPool"
                              }
                            },
                            "id": 549,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5703:8:0",
                            "memberName": "withdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9583,
                            "src": "5690:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256,address) external returns (uint256)"
                            }
                          },
                          "id": 565,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5690:87:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5674:103:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 571,
                              "name": "ttAmt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 547,
                              "src": "5818:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 572,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5825:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "hexValue": "30",
                              "id": 573,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5828:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 567,
                                "name": "tokenisedTicker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 85,
                                "src": "5787:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$2807_$dyn_storage",
                                  "typeString": "contract TokenisableRange[] storage ref"
                                }
                              },
                              "id": 569,
                              "indexExpression": {
                                "id": 568,
                                "name": "step",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 403,
                                "src": "5803:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5787:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TokenisableRange_$2807",
                                "typeString": "contract TokenisableRange"
                              }
                            },
                            "id": 570,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5809:8:0",
                            "memberName": "withdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2498,
                            "src": "5787:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                              "typeString": "function (uint256,uint256,uint256) external returns (uint256,uint256)"
                            }
                          },
                          "id": 574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5787:43:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256)"
                          }
                        },
                        "id": 575,
                        "nodeType": "ExpressionStatement",
                        "src": "5787:43:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 577,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5854:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 578,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5858:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5854:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 581,
                                    "name": "tokenisedTicker",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 85,
                                    "src": "5874:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$2807_$dyn_storage",
                                      "typeString": "contract TokenisableRange[] storage ref"
                                    }
                                  },
                                  "id": 583,
                                  "indexExpression": {
                                    "id": 582,
                                    "name": "step",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 403,
                                    "src": "5890:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5874:21:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TokenisableRange_$2807",
                                    "typeString": "contract TokenisableRange"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TokenisableRange_$2807",
                                    "typeString": "contract TokenisableRange"
                                  }
                                ],
                                "id": 580,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5866:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 579,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5866:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 584,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5866:30:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 585,
                              "name": "trAmt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 420,
                              "src": "5898:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 576,
                            "name": "Withdraw",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40,
                            "src": "5845:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 586,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5845:59:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 587,
                        "nodeType": "EmitStatement",
                        "src": "5840:64:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 401,
              "nodeType": "StructuredDocumentation",
              "src": "4504:120:0",
              "text": "@notice Remove assets from tokenisedRanges\n @param step Id of the range+ticker step from which to remove assets"
            },
            "id": 591,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeFromStep",
            "nameLocation": "4636:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 404,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 403,
                  "mutability": "mutable",
                  "name": "step",
                  "nameLocation": "4659:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 591,
                  "src": "4651:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 402,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4651:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4650:14:0"
            },
            "returnParameters": {
              "id": 405,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4674:0:0"
            },
            "scope": 912,
            "src": "4627:1299:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 606,
              "nodeType": "Block",
              "src": "6120:46:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 600,
                        "name": "step",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 594,
                        "src": "6141:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 599,
                      "name": "removeFromStep",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 591,
                      "src": "6126:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6126:20:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 602,
                  "nodeType": "ExpressionStatement",
                  "src": "6126:20:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 603,
                      "name": "cleanup",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 899,
                      "src": "6152:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6152:9:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 605,
                  "nodeType": "ExpressionStatement",
                  "src": "6152:9:0"
                }
              ]
            },
            "documentation": {
              "id": 592,
              "nodeType": "StructuredDocumentation",
              "src": "5931:120:0",
              "text": "@notice Remove assets from tokenisedRanges\n @param step Id of the range+ticker step from which to remove assets"
            },
            "functionSelector": "653e9b89",
            "id": 607,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 597,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 596,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "6098:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8963,
                  "src": "6098:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "6098:12:0"
              }
            ],
            "name": "removeAssetsFromStep",
            "nameLocation": "6063:20:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 595,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 594,
                  "mutability": "mutable",
                  "name": "step",
                  "nameLocation": "6092:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 607,
                  "src": "6084:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 593,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6084:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6083:14:0"
            },
            "returnParameters": {
              "id": 598,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6120:0:0"
            },
            "scope": 912,
            "src": "6054:112:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 758,
              "nodeType": "Block",
              "src": "6716:809:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 621,
                        "name": "step",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 613,
                        "src": "6737:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 620,
                      "name": "removeFromStep",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 591,
                      "src": "6722:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6722:20:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 623,
                  "nodeType": "ExpressionStatement",
                  "src": "6722:20:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 624,
                      "name": "amount0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 615,
                      "src": "6752:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 625,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6762:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6752:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 668,
                  "nodeType": "IfStatement",
                  "src": "6748:275:0",
                  "trueBody": {
                    "id": 667,
                    "nodeType": "Block",
                    "src": "6765:258:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 634,
                                        "name": "ASSET_0",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 59,
                                        "src": "6838:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_ERC20_$5329",
                                          "typeString": "contract ERC20"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_ERC20_$5329",
                                          "typeString": "contract ERC20"
                                        }
                                      ],
                                      "id": 633,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "6830:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 632,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6830:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 635,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6830:16:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 630,
                                    "name": "LENDING_POOL",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 32,
                                    "src": "6802:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ILendingPool_$9868",
                                      "typeString": "contract ILendingPool"
                                    }
                                  },
                                  "id": 631,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6815:14:0",
                                  "memberName": "getReserveData",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 9758,
                                  "src": "6802:27:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_struct$_ReserveData_$14432_memory_ptr_$",
                                    "typeString": "function (address) view external returns (struct DataTypes.ReserveData memory)"
                                  }
                                },
                                "id": 636,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6802:45:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ReserveData_$14432_memory_ptr",
                                  "typeString": "struct DataTypes.ReserveData memory"
                                }
                              },
                              "id": 637,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6848:13:0",
                              "memberName": "aTokenAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14423,
                              "src": "6802:59:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 638,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6863:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 639,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6867:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6863:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 640,
                              "name": "amount0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 615,
                              "src": "6875:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 627,
                              "name": "LENDING_POOL",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "6777:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ILendingPool_$9868",
                                "typeString": "contract ILendingPool"
                              }
                            },
                            "id": 629,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6790:10:0",
                            "memberName": "PMTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9804,
                            "src": "6777:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256) external"
                            }
                          },
                          "id": 641,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6777:107:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 642,
                        "nodeType": "ExpressionStatement",
                        "src": "6777:107:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 648,
                                  "name": "ASSET_0",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 59,
                                  "src": "6923:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$5329",
                                    "typeString": "contract ERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC20_$5329",
                                    "typeString": "contract ERC20"
                                  }
                                ],
                                "id": 647,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6915:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 646,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6915:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 649,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6915:16:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 650,
                              "name": "amount0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 615,
                              "src": "6933:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 653,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "6950:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_RangeManager_$912",
                                    "typeString": "contract RangeManager"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_RangeManager_$912",
                                    "typeString": "contract RangeManager"
                                  }
                                ],
                                "id": 652,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6942:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 651,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6942:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 654,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6942:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 643,
                              "name": "LENDING_POOL",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "6892:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ILendingPool_$9868",
                                "typeString": "contract ILendingPool"
                              }
                            },
                            "id": 645,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6905:8:0",
                            "memberName": "withdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9583,
                            "src": "6892:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256,address) external returns (uint256)"
                            }
                          },
                          "id": 655,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6892:65:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 656,
                        "nodeType": "ExpressionStatement",
                        "src": "6892:65:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 662,
                                  "name": "tr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 611,
                                  "src": "7003:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TokenisableRange_$2807",
                                    "typeString": "contract TokenisableRange"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TokenisableRange_$2807",
                                    "typeString": "contract TokenisableRange"
                                  }
                                ],
                                "id": 661,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6995:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 660,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6995:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 663,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6995:11:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 664,
                              "name": "amount0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 615,
                              "src": "7008:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 657,
                              "name": "ASSET_0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59,
                              "src": "6965:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$5329",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 659,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6973:21:0",
                            "memberName": "safeIncreaseAllowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7363,
                            "src": "6965:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$5407_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$5407_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 665,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6965:51:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 666,
                        "nodeType": "ExpressionStatement",
                        "src": "6965:51:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 669,
                      "name": "amount1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 617,
                      "src": "7032:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 670,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7042:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7032:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 713,
                  "nodeType": "IfStatement",
                  "src": "7028:271:0",
                  "trueBody": {
                    "id": 712,
                    "nodeType": "Block",
                    "src": "7045:254:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 679,
                                        "name": "ASSET_1",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 62,
                                        "src": "7114:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_ERC20_$5329",
                                          "typeString": "contract ERC20"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_ERC20_$5329",
                                          "typeString": "contract ERC20"
                                        }
                                      ],
                                      "id": 678,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "7106:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 677,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7106:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 680,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7106:16:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 675,
                                    "name": "LENDING_POOL",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 32,
                                    "src": "7078:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ILendingPool_$9868",
                                      "typeString": "contract ILendingPool"
                                    }
                                  },
                                  "id": 676,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7091:14:0",
                                  "memberName": "getReserveData",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 9758,
                                  "src": "7078:27:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_struct$_ReserveData_$14432_memory_ptr_$",
                                    "typeString": "function (address) view external returns (struct DataTypes.ReserveData memory)"
                                  }
                                },
                                "id": 681,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7078:45:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ReserveData_$14432_memory_ptr",
                                  "typeString": "struct DataTypes.ReserveData memory"
                                }
                              },
                              "id": 682,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7124:13:0",
                              "memberName": "aTokenAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14423,
                              "src": "7078:59:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 683,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7139:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 684,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7143:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7139:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 685,
                              "name": "amount1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 617,
                              "src": "7151:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 672,
                              "name": "LENDING_POOL",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "7053:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ILendingPool_$9868",
                                "typeString": "contract ILendingPool"
                              }
                            },
                            "id": 674,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7066:10:0",
                            "memberName": "PMTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9804,
                            "src": "7053:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256) external"
                            }
                          },
                          "id": 686,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7053:107:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 687,
                        "nodeType": "ExpressionStatement",
                        "src": "7053:107:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 693,
                                  "name": "ASSET_1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 62,
                                  "src": "7199:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$5329",
                                    "typeString": "contract ERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC20_$5329",
                                    "typeString": "contract ERC20"
                                  }
                                ],
                                "id": 692,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7191:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 691,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7191:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 694,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7191:16:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 695,
                              "name": "amount1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 617,
                              "src": "7209:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 698,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "7226:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_RangeManager_$912",
                                    "typeString": "contract RangeManager"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_RangeManager_$912",
                                    "typeString": "contract RangeManager"
                                  }
                                ],
                                "id": 697,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7218:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 696,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7218:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 699,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7218:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 688,
                              "name": "LENDING_POOL",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "7168:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ILendingPool_$9868",
                                "typeString": "contract ILendingPool"
                              }
                            },
                            "id": 690,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7181:8:0",
                            "memberName": "withdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9583,
                            "src": "7168:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256,address) external returns (uint256)"
                            }
                          },
                          "id": 700,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7168:65:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 701,
                        "nodeType": "ExpressionStatement",
                        "src": "7168:65:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 707,
                                  "name": "tr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 611,
                                  "src": "7279:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TokenisableRange_$2807",
                                    "typeString": "contract TokenisableRange"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TokenisableRange_$2807",
                                    "typeString": "contract TokenisableRange"
                                  }
                                ],
                                "id": 706,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7271:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 705,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7271:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 708,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7271:11:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 709,
                              "name": "amount1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 617,
                              "src": "7284:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 702,
                              "name": "ASSET_1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62,
                              "src": "7241:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$5329",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 704,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7249:21:0",
                            "memberName": "safeIncreaseAllowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7363,
                            "src": "7241:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$5407_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$5407_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 710,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7241:51:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 711,
                        "nodeType": "ExpressionStatement",
                        "src": "7241:51:0"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    715
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 715,
                      "mutability": "mutable",
                      "name": "lpAmt",
                      "nameLocation": "7312:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 758,
                      "src": "7304:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 714,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7304:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 721,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 718,
                        "name": "amount0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 615,
                        "src": "7331:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 719,
                        "name": "amount1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 617,
                        "src": "7340:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 716,
                        "name": "tr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 611,
                        "src": "7320:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenisableRange_$2807",
                          "typeString": "contract TokenisableRange"
                        }
                      },
                      "id": 717,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7323:7:0",
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2320,
                      "src": "7320:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7320:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7304:44:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 723,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7367:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7371:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7367:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 727,
                            "name": "tr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 611,
                            "src": "7387:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenisableRange_$2807",
                              "typeString": "contract TokenisableRange"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenisableRange_$2807",
                              "typeString": "contract TokenisableRange"
                            }
                          ],
                          "id": 726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7379:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 725,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7379:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7379:11:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 729,
                        "name": "lpAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 715,
                        "src": "7392:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 722,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "7359:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7359:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 731,
                  "nodeType": "EmitStatement",
                  "src": "7354:44:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 737,
                            "name": "LENDING_POOL",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "7423:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ILendingPool_$9868",
                              "typeString": "contract ILendingPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ILendingPool_$9868",
                              "typeString": "contract ILendingPool"
                            }
                          ],
                          "id": 736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7415:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 735,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7415:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7415:21:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 739,
                        "name": "lpAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 715,
                        "src": "7438:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 732,
                        "name": "tr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 611,
                        "src": "7404:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenisableRange_$2807",
                          "typeString": "contract TokenisableRange"
                        }
                      },
                      "id": 734,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7407:7:0",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4942,
                      "src": "7404:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7404:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 741,
                  "nodeType": "ExpressionStatement",
                  "src": "7404:40:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 747,
                            "name": "tr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 611,
                            "src": "7479:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenisableRange_$2807",
                              "typeString": "contract TokenisableRange"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenisableRange_$2807",
                              "typeString": "contract TokenisableRange"
                            }
                          ],
                          "id": 746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7471:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 745,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7471:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7471:11:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 749,
                        "name": "lpAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 715,
                        "src": "7484:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 750,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7491:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7495:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7491:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 752,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7503:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 742,
                        "name": "LENDING_POOL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "7450:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILendingPool_$9868",
                          "typeString": "contract ILendingPool"
                        }
                      },
                      "id": 744,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7463:7:0",
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9571,
                      "src": "7450:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint16_$returns$__$",
                        "typeString": "function (address,uint256,address,uint16) external"
                      }
                    },
                    "id": 753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7450:55:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 754,
                  "nodeType": "ExpressionStatement",
                  "src": "7450:55:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 755,
                      "name": "cleanup",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 899,
                      "src": "7511:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7511:9:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 757,
                  "nodeType": "ExpressionStatement",
                  "src": "7511:9:0"
                }
              ]
            },
            "documentation": {
              "id": 608,
              "nodeType": "StructuredDocumentation",
              "src": "6175:428:0",
              "text": "@notice Transfer assets from the lending pool to a tokenizedRange\n @param tr TokenisableRange instance into which to transfer assets\n @param step Id of the range+ticker step from which to remove assets\n @param amount0 Amount of asset0 to transfer in the TR\n @param amount1 Amount of asset1 to transfer in the TR\n @dev Useful to remove from a previous range and deposit into a new TR when price moves"
            },
            "id": 759,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferAssetsIntoStep",
            "nameLocation": "6615:22:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 618,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 611,
                  "mutability": "mutable",
                  "name": "tr",
                  "nameLocation": "6655:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 759,
                  "src": "6638:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_TokenisableRange_$2807",
                    "typeString": "contract TokenisableRange"
                  },
                  "typeName": {
                    "id": 610,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 609,
                      "name": "TokenisableRange",
                      "nameLocations": [
                        "6638:16:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2807,
                      "src": "6638:16:0"
                    },
                    "referencedDeclaration": 2807,
                    "src": "6638:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TokenisableRange_$2807",
                      "typeString": "contract TokenisableRange"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 613,
                  "mutability": "mutable",
                  "name": "step",
                  "nameLocation": "6667:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 759,
                  "src": "6659:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 612,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6659:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 615,
                  "mutability": "mutable",
                  "name": "amount0",
                  "nameLocation": "6681:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 759,
                  "src": "6673:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 614,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6673:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 617,
                  "mutability": "mutable",
                  "name": "amount1",
                  "nameLocation": "6698:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 759,
                  "src": "6690:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 616,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6690:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6637:69:0"
            },
            "returnParameters": {
              "id": 619,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6716:0:0"
            },
            "scope": 912,
            "src": "6606:919:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 780,
              "nodeType": "Block",
              "src": "7902:80:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 772,
                          "name": "tokenisedRanges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 81,
                          "src": "7931:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$2807_$dyn_storage",
                            "typeString": "contract TokenisableRange[] storage ref"
                          }
                        },
                        "id": 774,
                        "indexExpression": {
                          "id": 773,
                          "name": "step",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 762,
                          "src": "7947:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7931:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenisableRange_$2807",
                          "typeString": "contract TokenisableRange"
                        }
                      },
                      {
                        "id": 775,
                        "name": "step",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 762,
                        "src": "7954:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 776,
                        "name": "amount0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 764,
                        "src": "7960:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 777,
                        "name": "amount1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 766,
                        "src": "7969:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TokenisableRange_$2807",
                          "typeString": "contract TokenisableRange"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 771,
                      "name": "transferAssetsIntoStep",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 759,
                      "src": "7908:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_TokenisableRange_$2807_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (contract TokenisableRange,uint256,uint256,uint256)"
                      }
                    },
                    "id": 778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7908:69:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 779,
                  "nodeType": "ExpressionStatement",
                  "src": "7908:69:0"
                }
              ]
            },
            "documentation": {
              "id": 760,
              "nodeType": "StructuredDocumentation",
              "src": "7530:261:0",
              "text": "@notice Transfer assets from the lending pool to a Ranger\n @param step Id of the range+ticker step from which to remove assets\n @param amount0 Amount of asset0 to transfer in the Range\n @param amount1 Amount of asset1 to transfer in the Range"
            },
            "functionSelector": "007562ab",
            "id": 781,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 769,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 768,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "7880:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8963,
                  "src": "7880:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "7880:12:0"
              }
            ],
            "name": "transferAssetsIntoRangerStep",
            "nameLocation": "7803:28:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 767,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 762,
                  "mutability": "mutable",
                  "name": "step",
                  "nameLocation": "7840:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 781,
                  "src": "7832:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 761,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7832:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 764,
                  "mutability": "mutable",
                  "name": "amount0",
                  "nameLocation": "7854:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 781,
                  "src": "7846:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 763,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7846:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 766,
                  "mutability": "mutable",
                  "name": "amount1",
                  "nameLocation": "7871:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 781,
                  "src": "7863:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 765,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7863:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7831:48:0"
            },
            "returnParameters": {
              "id": 770,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7902:0:0"
            },
            "scope": 912,
            "src": "7794:188:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 802,
              "nodeType": "Block",
              "src": "8361:80:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 794,
                          "name": "tokenisedTicker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85,
                          "src": "8390:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_TokenisableRange_$2807_$dyn_storage",
                            "typeString": "contract TokenisableRange[] storage ref"
                          }
                        },
                        "id": 796,
                        "indexExpression": {
                          "id": 795,
                          "name": "step",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 784,
                          "src": "8406:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8390:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenisableRange_$2807",
                          "typeString": "contract TokenisableRange"
                        }
                      },
                      {
                        "id": 797,
                        "name": "step",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 784,
                        "src": "8413:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 798,
                        "name": "amount0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 786,
                        "src": "8419:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 799,
                        "name": "amount1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 788,
                        "src": "8428:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TokenisableRange_$2807",
                          "typeString": "contract TokenisableRange"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 793,
                      "name": "transferAssetsIntoStep",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 759,
                      "src": "8367:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_TokenisableRange_$2807_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (contract TokenisableRange,uint256,uint256,uint256)"
                      }
                    },
                    "id": 800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8367:69:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 801,
                  "nodeType": "ExpressionStatement",
                  "src": "8367:69:0"
                }
              ]
            },
            "documentation": {
              "id": 782,
              "nodeType": "StructuredDocumentation",
              "src": "7987:263:0",
              "text": "@notice Transfer assets from the lending pool to a Ticker\n @param step Id of the range+ticker step from which to remove assets\n @param amount0 Amount of asset0 to transfer in the Ticker\n @param amount1 Amount of asset1 to transfer in the Ticker"
            },
            "functionSelector": "e58346b8",
            "id": 803,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 791,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 790,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "8339:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8963,
                  "src": "8339:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "8339:12:0"
              }
            ],
            "name": "transferAssetsIntoTickerStep",
            "nameLocation": "8262:28:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 789,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 784,
                  "mutability": "mutable",
                  "name": "step",
                  "nameLocation": "8299:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 803,
                  "src": "8291:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 783,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8291:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 786,
                  "mutability": "mutable",
                  "name": "amount0",
                  "nameLocation": "8313:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 803,
                  "src": "8305:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 785,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8305:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 788,
                  "mutability": "mutable",
                  "name": "amount1",
                  "nameLocation": "8330:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 803,
                  "src": "8322:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 787,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8322:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8290:48:0"
            },
            "returnParameters": {
              "id": 792,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8361:0:0"
            },
            "scope": 912,
            "src": "8253:188:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 898,
              "nodeType": "Block",
              "src": "8539:690:0",
              "statements": [
                {
                  "assignments": [
                    808
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 808,
                      "mutability": "mutable",
                      "name": "asset0_amt",
                      "nameLocation": "8553:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 898,
                      "src": "8545:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 807,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8545:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 816,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 813,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "8592:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RangeManager_$912",
                              "typeString": "contract RangeManager"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_RangeManager_$912",
                              "typeString": "contract RangeManager"
                            }
                          ],
                          "id": 812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8584:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 811,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8584:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8584:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 809,
                        "name": "ASSET_0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59,
                        "src": "8566:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$5329",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 810,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8574:9:0",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4882,
                      "src": "8566:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8566:32:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8545:53:0"
                },
                {
                  "assignments": [
                    818
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 818,
                      "mutability": "mutable",
                      "name": "asset1_amt",
                      "nameLocation": "8612:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 898,
                      "src": "8604:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 817,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8604:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 826,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 823,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "8651:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RangeManager_$912",
                              "typeString": "contract RangeManager"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_RangeManager_$912",
                              "typeString": "contract RangeManager"
                            }
                          ],
                          "id": 822,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8643:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 821,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8643:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8643:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 819,
                        "name": "ASSET_1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62,
                        "src": "8625:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$5329",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 820,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8633:9:0",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4882,
                      "src": "8625:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8625:32:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8604:53:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 827,
                      "name": "asset0_amt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 808,
                      "src": "8672:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 828,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8685:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8672:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 854,
                  "nodeType": "IfStatement",
                  "src": "8668:172:0",
                  "trueBody": {
                    "id": 853,
                    "nodeType": "Block",
                    "src": "8688:152:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 835,
                                  "name": "LENDING_POOL",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32,
                                  "src": "8734:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ILendingPool_$9868",
                                    "typeString": "contract ILendingPool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ILendingPool_$9868",
                                    "typeString": "contract ILendingPool"
                                  }
                                ],
                                "id": 834,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8726:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 833,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8726:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 836,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8726:21:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 837,
                              "name": "asset0_amt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 808,
                              "src": "8749:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 830,
                              "name": "ASSET_0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59,
                              "src": "8696:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$5329",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 832,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8704:21:0",
                            "memberName": "safeIncreaseAllowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7363,
                            "src": "8696:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$5407_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$5407_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8696:64:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 839,
                        "nodeType": "ExpressionStatement",
                        "src": "8696:64:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 845,
                                  "name": "ASSET_0",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 59,
                                  "src": "8797:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$5329",
                                    "typeString": "contract ERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC20_$5329",
                                    "typeString": "contract ERC20"
                                  }
                                ],
                                "id": 844,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8789:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 843,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8789:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 846,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8789:16:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 847,
                              "name": "asset0_amt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 808,
                              "src": "8807:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 848,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "8819:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 849,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8823:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "8819:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 850,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8831:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 840,
                              "name": "LENDING_POOL",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "8768:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ILendingPool_$9868",
                                "typeString": "contract ILendingPool"
                              }
                            },
                            "id": 842,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8781:7:0",
                            "memberName": "deposit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9571,
                            "src": "8768:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint16_$returns$__$",
                              "typeString": "function (address,uint256,address,uint16) external"
                            }
                          },
                          "id": 851,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8768:65:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 852,
                        "nodeType": "ExpressionStatement",
                        "src": "8768:65:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 855,
                      "name": "asset1_amt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 818,
                      "src": "8854:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 856,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8867:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8854:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 882,
                  "nodeType": "IfStatement",
                  "src": "8850:172:0",
                  "trueBody": {
                    "id": 881,
                    "nodeType": "Block",
                    "src": "8870:152:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 863,
                                  "name": "LENDING_POOL",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32,
                                  "src": "8916:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ILendingPool_$9868",
                                    "typeString": "contract ILendingPool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ILendingPool_$9868",
                                    "typeString": "contract ILendingPool"
                                  }
                                ],
                                "id": 862,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8908:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 861,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8908:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 864,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8908:21:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 865,
                              "name": "asset1_amt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 818,
                              "src": "8931:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 858,
                              "name": "ASSET_1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62,
                              "src": "8878:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$5329",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 860,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8886:21:0",
                            "memberName": "safeIncreaseAllowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7363,
                            "src": "8878:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$5407_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$5407_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8878:64:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 867,
                        "nodeType": "ExpressionStatement",
                        "src": "8878:64:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 873,
                                  "name": "ASSET_1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 62,
                                  "src": "8979:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$5329",
                                    "typeString": "contract ERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC20_$5329",
                                    "typeString": "contract ERC20"
                                  }
                                ],
                                "id": 872,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8971:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 871,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8971:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 874,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8971:16:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 875,
                              "name": "asset1_amt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 818,
                              "src": "8989:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 876,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9001:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 877,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9005:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "9001:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 878,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9013:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 868,
                              "name": "LENDING_POOL",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "8950:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ILendingPool_$9868",
                                "typeString": "contract ILendingPool"
                              }
                            },
                            "id": 870,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8963:7:0",
                            "memberName": "deposit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9571,
                            "src": "8950:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint16_$returns$__$",
                              "typeString": "function (address,uint256,address,uint16) external"
                            }
                          },
                          "id": 879,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8950:65:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 880,
                        "nodeType": "ExpressionStatement",
                        "src": "8950:65:0"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    null,
                    null,
                    null,
                    null,
                    null,
                    884
                  ],
                  "declarations": [
                    null,
                    null,
                    null,
                    null,
                    null,
                    {
                      "constant": false,
                      "id": 884,
                      "mutability": "mutable",
                      "name": "hf",
                      "nameLocation": "9120:2:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 898,
                      "src": "9112:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 883,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9112:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 890,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 887,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9158:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9162:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9158:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 885,
                        "name": "LENDING_POOL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "9126:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILendingPool_$9868",
                          "typeString": "contract ILendingPool"
                        }
                      },
                      "id": 886,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9139:18:0",
                      "memberName": "getUserAccountData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9688,
                      "src": "9126:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256,uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9126:43:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9106:63:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 892,
                          "name": "hf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 884,
                          "src": "9183:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "312e3031653138",
                          "id": 893,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9188:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1010000000000000000_by_1",
                            "typeString": "int_const 1010000000000000000"
                          },
                          "value": "1.01e18"
                        },
                        "src": "9183:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4865616c746820666163746f7220697320746f6f206c6f77",
                        "id": 895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9197:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3564552cdc04cbb302394ad22434d3d855510d04ed356484a97ab86ed3ff2e7e",
                          "typeString": "literal_string \"Health factor is too low\""
                        },
                        "value": "Health factor is too low"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3564552cdc04cbb302394ad22434d3d855510d04ed356484a97ab86ed3ff2e7e",
                          "typeString": "literal_string \"Health factor is too low\""
                        }
                      ],
                      "id": 891,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9175:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9175:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 897,
                  "nodeType": "ExpressionStatement",
                  "src": "9175:49:0"
                }
              ]
            },
            "documentation": {
              "id": 804,
              "nodeType": "StructuredDocumentation",
              "src": "8446:62:0",
              "text": "@notice Check token balances and return assets to the user"
            },
            "id": 899,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cleanup",
            "nameLocation": "8520:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 805,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8527:2:0"
            },
            "returnParameters": {
              "id": 806,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8539:0:0"
            },
            "scope": 912,
            "src": "8511:718:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 910,
              "nodeType": "Block",
              "src": "9375:39:0",
              "statements": [
                {
                  "expression": {
                    "id": 908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 905,
                      "name": "listLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 903,
                      "src": "9381:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 906,
                        "name": "stepList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77,
                        "src": "9394:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Step_$73_storage_$dyn_storage",
                          "typeString": "struct RangeManager.Step storage ref[] storage ref"
                        }
                      },
                      "id": 907,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9403:6:0",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "9394:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9381:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 909,
                  "nodeType": "ExpressionStatement",
                  "src": "9381:28:0"
                }
              ]
            },
            "documentation": {
              "id": 900,
              "nodeType": "StructuredDocumentation",
              "src": "9234:66:0",
              "text": "@notice Get length of stepList\n @return listLength Length"
            },
            "functionSelector": "9092fe75",
            "id": 911,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStepListLength",
            "nameLocation": "9312:17:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 901,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9329:2:0"
            },
            "returnParameters": {
              "id": 904,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 903,
                  "mutability": "mutable",
                  "name": "listLength",
                  "nameLocation": "9363:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 911,
                  "src": "9355:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 902,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9355:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9354:20:0"
            },
            "scope": 912,
            "src": "9303:111:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 913,
        "src": "1159:8257:0",
        "usedErrors": [],
        "usedEvents": [
          40,
          48,
          56,
          8751
        ]
      }
    ],
    "src": "39:9378:0"
  },
  "bytecode": "60806040523480156200001157600080fd5b50604051620030a5380380620030a583398101604081905262000034916200018c565b6001600055620000443362000121565b6001600160a01b038316620000915760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b604482015260640160405180910390fd5b600280546001600160a01b0319166001600160a01b038581169190911790915581811690831610620000c45780620000c6565b815b600380546001600160a01b0319166001600160a01b0392831617905581811690831610620000f55781620000f7565b805b600480546001600160a01b0319166001600160a01b039290921691909117905550620001e0915050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03811681146200018957600080fd5b50565b600080600060608486031215620001a257600080fd5b8351620001af8162000173565b6020850151909350620001c28162000173565b6040850151909250620001d58162000173565b809150509250925092565b612eb580620001f06000396000f3fe60806040523480156200001157600080fd5b5060043610620001145760003560e01c80638da5cb5b11620000a3578063bd865cba116200006e578063bd865cba1462000250578063c9c46225146200026c578063e58346b81462000280578063f2fde38b146200029757600080fd5b80638da5cb5b14620001e05780639092fe7514620001f2578063ab65051f1462000204578063b4dcfc77146200023c57600080fd5b8063576b605211620000e4578063576b6052146200019157806358cb5e9d14620001a8578063653e9b8914620001bf578063715018a614620001d657600080fd5b80627562ab14620001195780632b9c4841146200013257806343204ff3146200016657806348b0c087146200017d575b600080fd5b620001306200012a36600462002022565b620002ae565b005b62000149620001433660046200204f565b62000326565b6040516001600160a01b0390911681526020015b60405180910390f35b62000130620001773660046200216d565b62000351565b60045462000149906001600160a01b031681565b62000130620001a236600462002218565b62000806565b62000149620001b93660046200204f565b62000985565b62000130620001d03660046200204f565b62000996565b62000130620009dd565b6001546001600160a01b031662000149565b6005546040519081526020016200015d565b6200021b620002153660046200204f565b62000a18565b604080516001600160801b039384168152929091166020830152016200015d565b60025462000149906001600160a01b031681565b6200014973c36442b4a4522e871399cd717abdd847ab11fe8881565b60035462000149906001600160a01b031681565b620001306200029136600462002022565b62000a4e565b62000130620002a836600462002250565b62000a95565b600260005403620002dc5760405162461bcd60e51b8152600401620002d39062002270565b60405180910390fd5b60026000819055506200031c60068481548110620002fe57620002fe620022a7565b6000918252602090912001546001600160a01b031684848462000b37565b5050600160005550565b600781815481106200033757600080fd5b6000918252602090912001546001600160a01b0316905081565b6001546001600160a01b031633146200037e5760405162461bcd60e51b8152600401620002d390620022bd565b6001600160a01b038116620003c75760405162461bcd60e51b815260206004820152600e60248201526d24b73b30b634b2103132b0b1b7b760911b6044820152606401620002d3565b620003d3858562000fe5565b6040805180820182526001600160801b03808816825286811660208301908152600580546001810182556000918252935191518316600160801b0291909216177f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db090920191909155905182906200044a9062002014565b6001600160a01b039091168152604060208201819052600090820152606001604051809103906000f08015801562000486573d6000803e3d6000fd5b50600680546001810182556000919091527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b0319166001600160a01b0383161790556040519091508290620004e59062002014565b6001600160a01b039091168152604060208201819052600090820152606001604051809103906000f08015801562000521573d6000803e3d6000fd5b506007805460018101825560009182527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880180546001600160a01b0319166001600160a01b038481169190911790915560025460408051637f32d67f60e11b81529051949550929391169163fe65acfe9160048083019260209291908290030181865afa158015620005b7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005dd9190620022f2565b6001600160a01b031663fca513a86040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200061b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006419190620022f2565b600680549192509062000657906001906200233a565b815481106200066a576200066a620022a7565b60009182526020822001546003546004805460405163d351887760e01b81526001600160a01b039485169563d351887795620006ba95899590821694909116928f928f928f928f929101620023aa565b600060405180830381600087803b158015620006d557600080fd5b505af1158015620006ea573d6000803e3d6000fd5b5050600780549092506200070291506001906200233a565b81548110620007155762000715620022a7565b6000918252602090912001546003546004805460405163d351887760e01b81526001600160a01b039485169463d351887794620007699488949183169391909216918e918e918e918e9160019101620023aa565b600060405180830381600087803b1580156200078457600080fd5b505af115801562000799573d6000803e3d6000fd5b505050507ffc9fd5a154bb65cceb4f482bb1b19a821c98d99849a7173a72699ee86bc8553787876001600680549050620007d491906200233a565b604080516001600160801b0394851681529390921660208401529082015260600160405180910390a150505050505050565b6001546001600160a01b03163314620008335760405162461bcd60e51b8152600401620002d390620022bd565b6003546200084d906001600160a01b031633308562001113565b60035462000866906001600160a01b031684846200116f565b60045462000880906001600160a01b031633308462001113565b60045462000899906001600160a01b031684836200116f565b6040516314b087e160e31b815260048101839052602481018290526001600160a01b0384169063a5843f0890604401600060405180830381600087803b158015620008e357600080fd5b505af1158015620008f8573d6000803e3d6000fd5b50506040516370a0823160e01b81523060048201526200098092503391506001600160a01b038616906370a0823190602401602060405180830381865afa15801562000948573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200096e919062002426565b6001600160a01b038616919062001228565b505050565b600681815481106200033757600080fd5b600260005403620009bb5760405162461bcd60e51b8152600401620002d39062002270565b6002600055620009cb816200125a565b620009d562001a6d565b506001600055565b6001546001600160a01b0316331462000a0a5760405162461bcd60e51b8152600401620002d390620022bd565b62000a16600062001d55565b565b6005818154811062000a2957600080fd5b6000918252602090912001546001600160801b038082169250600160801b9091041682565b60026000540362000a735760405162461bcd60e51b8152600401620002d39062002270565b60026000819055506200031c60078481548110620002fe57620002fe620022a7565b6001546001600160a01b0316331462000ac25760405162461bcd60e51b8152600401620002d390620022bd565b6001600160a01b03811662000b295760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401620002d3565b62000b348162001d55565b50565b62000b42836200125a565b811562000cba576002546003546040516335ea6a7560e01b81526001600160a01b0391821660048201529116906308ebbd269082906335ea6a759060240161018060405180830381865afa15801562000b9f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000bc59190620024bb565b60e0015133856040518463ffffffff1660e01b815260040162000beb93929190620025c3565b600060405180830381600087803b15801562000c0657600080fd5b505af115801562000c1b573d6000803e3d6000fd5b5050600254600354604051631a4ca37b60e21b81526001600160a01b0392831694506369328dec935062000c5a929091169086903090600401620025e7565b6020604051808303816000875af115801562000c7a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ca0919062002426565b5060035462000cba906001600160a01b031685846200116f565b801562000e3557600254600480546040516335ea6a7560e01b81526001600160a01b0391821692810192909252909116906308ebbd269082906335ea6a759060240161018060405180830381865afa15801562000d1b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000d419190620024bb565b60e0015133846040518463ffffffff1660e01b815260040162000d6793929190620025c3565b600060405180830381600087803b15801562000d8257600080fd5b505af115801562000d97573d6000803e3d6000fd5b505060025460048054604051631a4ca37b60e21b81526001600160a01b0393841695506369328dec945062000dd593909116918691309101620025e7565b6020604051808303816000875af115801562000df5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e1b919062002426565b5060045462000e35906001600160a01b031685836200116f565b604051631c57762b60e31b815260048101839052602481018290526000906001600160a01b0386169063e2bbb158906044016020604051808303816000875af115801562000e87573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ead919062002426565b90507f5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f6233868360405162000ee493929190620025c3565b60405180910390a160025460405163095ea7b360e01b81526001600160a01b039182166004820152602481018390529086169063095ea7b3906044016020604051808303816000875af115801562000f40573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000f6691906200260a565b5060025460405163e8eda9df60e01b81526001600160a01b039091169063e8eda9df9062000fa0908890859033906000906004016200262e565b600060405180830381600087803b15801562000fbb57600080fd5b505af115801562000fd0573d6000803e3d6000fd5b5050505062000fde62001a6d565b5050505050565b806001600160801b0316826001600160801b031610620010385760405162461bcd60e51b815260206004820152600d60248201526c14985b99d9481a5b9d985b1a59609a1b6044820152606401620002d3565b60055460005b818110156200110d57600581815481106200105d576200105d620022a7565b6000918252602090912001546001600160801b03600160801b9091048116908516101580620010ba5750600581815481106200109d576200109d620022a7565b6000918252602090912001546001600160801b0390811690841611155b620010f85760405162461bcd60e51b815260206004820152600d60248201526c052616e6765206f7665726c617609c1b6044820152606401620002d3565b8062001104816200265b565b9150506200103e565b50505050565b6200110d846323b872dd60e01b8585856040516024016200113793929190620025c3565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915262001da7565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa158015620011c1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620011e7919062002426565b620011f3919062002677565b6040516001600160a01b0385166024820152604481018290529091506200110d90859063095ea7b360e01b9060640162001137565b6040516001600160a01b0383166024820152604481018290526200098090849063a9059cbb60e01b9060640162001137565b600654811080156200126d575060075481105b620012aa5760405162461bcd60e51b815260206004820152600c60248201526b0496e76616c696420737465760a41b6044820152606401620002d3565b600254600680546000926001600160a01b0316916335ea6a759185908110620012d757620012d7620022a7565b60009182526020909120015460405160e083901b6001600160e01b03191681526001600160a01b03909116600482015260240161018060405180830381865afa15801562001329573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200134f9190620024bb565b60e001516040516370a0823160e01b81523360048201526001600160a01b03909116906370a0823190602401602060405180830381865afa15801562001399573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620013bf919062002426565b905080156200168857600254600680546001600160a01b03909216916308ebbd269183916335ea6a75919087908110620013fd57620013fd620022a7565b60009182526020909120015460405160e083901b6001600160e01b03191681526001600160a01b03909116600482015260240161018060405180830381865afa1580156200144f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620014759190620024bb565b60e0015133846040518463ffffffff1660e01b81526004016200149b93929190620025c3565b600060405180830381600087803b158015620014b657600080fd5b505af1158015620014cb573d6000803e3d6000fd5b5050600254600680546001600160a01b0390921693506369328dec92509085908110620014fc57620014fc620022a7565b6000918252602090912001546040516001600160e01b031960e084901b1681526200153a916001600160a01b031690600019903090600401620025e7565b6020604051808303816000875af11580156200155a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001580919062002426565b905060068281548110620015985762001598620022a7565b600091825260208220015460405163a41fe49f60e01b8152600481018490526024810183905260448101929092526001600160a01b03169063a41fe49f9060640160408051808303816000875af1158015620015f8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200161e91906200268d565b50507f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb3360068481548110620016585762001658620022a7565b6000918252602090912001546040516200167f92916001600160a01b0316908590620025c3565b60405180910390a15b600254600780546001600160a01b03909216916335ea6a75919085908110620016b557620016b5620022a7565b60009182526020909120015460405160e083901b6001600160e01b03191681526001600160a01b03909116600482015260240161018060405180830381865afa15801562001707573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200172d9190620024bb565b60e001516040516370a0823160e01b81523360048201526001600160a01b03909116906370a0823190602401602060405180830381865afa15801562001777573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200179d919062002426565b9050801562001a6957600254600780546001600160a01b03909216916308ebbd269183916335ea6a75919087908110620017db57620017db620022a7565b60009182526020909120015460405160e083901b6001600160e01b03191681526001600160a01b03909116600482015260240161018060405180830381865afa1580156200182d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620018539190620024bb565b60e0015133846040518463ffffffff1660e01b81526004016200187993929190620025c3565b600060405180830381600087803b1580156200189457600080fd5b505af1158015620018a9573d6000803e3d6000fd5b505060025460078054600094506001600160a01b0390921692506369328dec9186908110620018dc57620018dc620022a7565b6000918252602090912001546040516001600160e01b031960e084901b1681526200191a916001600160a01b031690600019903090600401620025e7565b6020604051808303816000875af11580156200193a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001960919062002426565b905060078381548110620019785762001978620022a7565b600091825260208220015460405163a41fe49f60e01b8152600481018490526024810183905260448101929092526001600160a01b03169063a41fe49f9060640160408051808303816000875af1158015620019d8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620019fe91906200268d565b50507f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb336007858154811062001a385762001a38620022a7565b60009182526020909120015460405162001a5f92916001600160a01b0316908690620025c3565b60405180910390a1505b5050565b6003546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801562001ab7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001add919062002426565b600480546040516370a0823160e01b815230928101929092529192506000916001600160a01b0316906370a0823190602401602060405180830381865afa15801562001b2d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001b53919062002426565b9050811562001bed5760025460035462001b7b916001600160a01b039182169116846200116f565b60025460035460405163e8eda9df60e01b81526001600160a01b039283169263e8eda9df9262001bb892911690869033906000906004016200262e565b600060405180830381600087803b15801562001bd357600080fd5b505af115801562001be8573d6000803e3d6000fd5b505050505b801562001c855760025460045462001c13916001600160a01b039182169116836200116f565b6002546004805460405163e8eda9df60e01b81526001600160a01b039384169363e8eda9df9362001c50939091169186913391600091016200262e565b600060405180830381600087803b15801562001c6b57600080fd5b505af115801562001c80573d6000803e3d6000fd5b505050505b600254604051632fe4a15f60e21b81523360048201526000916001600160a01b03169063bf92857c9060240160c060405180830381865afa15801562001ccf573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001cf59190620026b2565b95505050505050670e043da6172500008111620009805760405162461bcd60e51b815260206004820152601860248201527f4865616c746820666163746f7220697320746f6f206c6f7700000000000000006044820152606401620002d3565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600062001dfe826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031662001e809092919063ffffffff16565b80519091501562000980578080602001905181019062001e1f91906200260a565b620009805760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401620002d3565b606062001e91848460008562001e9b565b90505b9392505050565b60608247101562001efe5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401620002d3565b6001600160a01b0385163b62001f575760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401620002d3565b600080866001600160a01b0316858760405162001f759190620026fd565b60006040518083038185875af1925050503d806000811462001fb4576040519150601f19603f3d011682016040523d82523d6000602084013e62001fb9565b606091505b509150915062001fcb82828662001fd6565b979650505050505050565b6060831562001fe757508162001e94565b82511562001ff85782518084602001fd5b8160405162461bcd60e51b8152600401620002d391906200271b565b61074f806200273183390190565b6000806000606084860312156200203857600080fd5b505081359360208301359350604090920135919050565b6000602082840312156200206257600080fd5b5035919050565b6001600160801b038116811462000b3457600080fd5b634e487b7160e01b600052604160045260246000fd5b604051610180810167ffffffffffffffff81118282101715620020bc57620020bc6200207f565b60405290565b600082601f830112620020d457600080fd5b813567ffffffffffffffff80821115620020f257620020f26200207f565b604051601f8301601f19908116603f011681019082821181831017156200211d576200211d6200207f565b816040528381528660208588010111156200213757600080fd5b836020870160208301376000602085830101528094505050505092915050565b6001600160a01b038116811462000b3457600080fd5b600080600080600060a086880312156200218657600080fd5b8535620021938162002069565b94506020860135620021a58162002069565b9350604086013567ffffffffffffffff80821115620021c357600080fd5b620021d189838a01620020c2565b94506060880135915080821115620021e857600080fd5b50620021f788828901620020c2565b92505060808601356200220a8162002157565b809150509295509295909350565b6000806000606084860312156200222e57600080fd5b83356200223b8162002157565b95602085013595506040909401359392505050565b6000602082840312156200226357600080fd5b813562001e948162002157565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156200230557600080fd5b815162001e948162002157565b80516200231f8162002157565b919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111562002350576200235062002324565b92915050565b60005b838110156200237357818101518382015260200162002359565b50506000910152565b600081518084526200239681602086016020860162002356565b601f01601f19169290920160200192915050565b6001600160a01b0389811682528881166020830152871660408201526001600160801b0386811660608301528516608082015261010060a08201819052600090620023f8838201876200237c565b905082810360c08401526200240e81866200237c565b91505082151560e08301529998505050505050505050565b6000602082840312156200243957600080fd5b5051919050565b6000602082840312156200245357600080fd5b6040516020810181811067ffffffffffffffff821117156200247957620024796200207f565b6040529151825250919050565b80516200231f8162002069565b805164ffffffffff811681146200231f57600080fd5b805160ff811681146200231f57600080fd5b60006101808284031215620024cf57600080fd5b620024d962002095565b620024e5848462002440565b8152620024f56020840162002486565b6020820152620025086040840162002486565b60408201526200251b6060840162002486565b60608201526200252e6080840162002486565b60808201526200254160a0840162002486565b60a08201526200255460c0840162002493565b60c08201526200256760e0840162002312565b60e08201526101006200257c81850162002312565b908201526101206200259084820162002312565b90820152610140620025a484820162002312565b90820152610160620025b8848201620024a9565b908201529392505050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b0393841681526020810192909252909116604082015260600190565b6000602082840312156200261d57600080fd5b8151801515811462001e9457600080fd5b6001600160a01b03948516815260208101939093529216604082015261ffff909116606082015260800190565b60006001820162002670576200267062002324565b5060010190565b8082018082111562002350576200235062002324565b60008060408385031215620026a157600080fd5b505080516020909101519092909150565b60008060008060008060c08789031215620026cc57600080fd5b865195506020870151945060408701519350606087015192506080870151915060a087015190509295509295509295565b600082516200271181846020870162002356565b9190910192915050565b60208152600062001e9460208301846200237c56fe608060405260405161074f38038061074f8339810160408190526100229161044c565b61004d60017fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5161050c565b600080516020610708833981519152146100695761006961052d565b6100758282600061007c565b50506105ad565b6100858361013d565b6040516001600160a01b038416907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a26000825111806100c65750805b1561013857610136836001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561010c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101309190610543565b836102af565b505b505050565b6001600160a01b0381163b6101a75760405162461bcd60e51b815260206004820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b60648201526084015b60405180910390fd5b61021b816001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020c9190610543565b6001600160a01b03163b151590565b6102805760405162461bcd60e51b815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b606482015260840161019e565b60008051602061070883398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b60606102d48383604051806060016040528060278152602001610728602791396102dd565b90505b92915050565b60606001600160a01b0384163b6103455760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161019e565b600080856001600160a01b031685604051610360919061055e565b600060405180830381855af49150503d806000811461039b576040519150601f19603f3d011682016040523d82523d6000602084013e6103a0565b606091505b5090925090506103b18282866103bd565b925050505b9392505050565b606083156103cc5750816103b6565b8251156103dc5782518084602001fd5b8160405162461bcd60e51b815260040161019e919061057a565b80516001600160a01b038116811461040d57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561044357818101518382015260200161042b565b50506000910152565b6000806040838503121561045f57600080fd5b610468836103f6565b60208401519092506001600160401b038082111561048557600080fd5b818501915085601f83011261049957600080fd5b8151818111156104ab576104ab610412565b604051601f8201601f19908116603f011681019083821181831017156104d3576104d3610412565b816040528281528860208487010111156104ec57600080fd5b6104fd836020830160208801610428565b80955050505050509250929050565b818103818111156102d757634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052600160045260246000fd5b60006020828403121561055557600080fd5b6102d4826103f6565b60008251610570818460208701610428565b9190910192915050565b6020815260008251806020840152610599816040850160208701610428565b601f01601f19169190910160400192915050565b61014c806105bc6000396000f3fe60806040523661001357610011610017565b005b6100115b610027610022610029565b6100c2565b565b600061005c7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50546001600160a01b031690565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610099573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100bd91906100e6565b905090565b3660008037600080366000845af43d6000803e8080156100e1573d6000f35b3d6000fd5b6000602082840312156100f857600080fd5b81516001600160a01b038116811461010f57600080fd5b939250505056fea2646970667358221220694410e42ad26f06cd4ced242ea88d7b1cc6876fa826773bf7479ab242d5c86464736f6c63430008150033a3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220d9353d98c2f6721d5d9579295898e60a60a24b56b245501707bf0cc2e934f04e64736f6c63430008150033",
  "bytecodeSha1": "28f07bfce59e1e0a70a7bd7b915a15f3c23401cc",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.21+commit.d9974bed"
  },
  "contractName": "RangeManager",
  "coverageMap": {
    "branches": {
      "0": {
        "RangeManager.checkNewRange": {
          "71": [
            2426,
            2437,
            true
          ],
          "72": [
            2539,
            2563,
            true
          ],
          "73": [
            2567,
            2591,
            false
          ]
        },
        "RangeManager.cleanup": {
          "78": [
            8672,
            8686,
            false
          ],
          "79": [
            8854,
            8868,
            false
          ],
          "80": [
            9183,
            9195,
            true
          ]
        },
        "RangeManager.generateRange": {
          "68": [
            3083,
            3105,
            true
          ]
        },
        "RangeManager.removeFromStep": {
          "74": [
            4688,
            4717,
            false
          ],
          "75": [
            4721,
            4750,
            true
          ],
          "76": [
            4920,
            4929,
            false
          ],
          "77": [
            5480,
            5489,
            false
          ]
        },
        "RangeManager.transferAssetsIntoStep": {
          "69": [
            6752,
            6763,
            false
          ],
          "70": [
            7032,
            7043,
            false
          ]
        }
      },
      "1": {},
      "10": {
        "Ownable.transferOwnership": {
          "84": [
            2006,
            2028,
            true
          ]
        }
      },
      "2": {},
      "3": {},
      "39": {},
      "4": {},
      "40": {},
      "42": {},
      "43": {},
      "44": {},
      "5": {},
      "58": {
        "SafeERC20._callOptionalReturn": {
          "85": [
            3735,
            3756,
            false
          ],
          "86": [
            3819,
            3849,
            true
          ]
        }
      },
      "68": {
        "Address.functionCallWithValue": {
          "81": [
            5130,
            5160,
            true
          ]
        },
        "Address.verifyCallResult": {
          "82": [
            7720,
            7727,
            false
          ],
          "83": [
            7861,
            7882,
            false
          ]
        }
      },
      "70": {},
      "85": {},
      "86": {},
      "88": {},
      "89": {},
      "98": {},
      "99": {}
    },
    "statements": {
      "0": {
        "RangeManager.checkNewRange": {
          "36": [
            2418,
            2455
          ],
          "37": [
            2603,
            2611
          ],
          "38": [
            2627,
            2650
          ],
          "39": [
            2522,
            2525
          ]
        },
        "RangeManager.cleanup": {
          "53": [
            8696,
            8760
          ],
          "54": [
            8768,
            8833
          ],
          "55": [
            8878,
            8942
          ],
          "56": [
            8950,
            9015
          ],
          "57": [
            9175,
            9224
          ]
        },
        "RangeManager.generateRange": {
          "4": [
            3075,
            3124
          ],
          "5": [
            3130,
            3161
          ],
          "6": [
            3167,
            3206
          ],
          "7": [
            3264,
            3319
          ],
          "8": [
            3325,
            3359
          ],
          "9": [
            3365,
            3420
          ],
          "10": [
            3556,
            3682
          ],
          "11": [
            3688,
            3813
          ],
          "12": [
            3820,
            3879
          ]
        },
        "RangeManager.getStepListLength": {
          "1": [
            9381,
            9409
          ]
        },
        "RangeManager.initRange": {
          "13": [
            4136,
            4196
          ],
          "14": [
            4202,
            4244
          ],
          "15": [
            4250,
            4310
          ],
          "16": [
            4316,
            4358
          ],
          "17": [
            4364,
            4407
          ],
          "18": [
            4413,
            4494
          ]
        },
        "RangeManager.removeAssetsFromStep": {
          "19": [
            6126,
            6146
          ],
          "20": [
            6152,
            6161
          ]
        },
        "RangeManager.removeFromStep": {
          "43": [
            4680,
            4767
          ],
          "44": [
            4797,
            4907
          ],
          "45": [
            4948,
            5107
          ],
          "46": [
            5117,
            5212
          ],
          "47": [
            5222,
            5265
          ],
          "48": [
            5275,
            5339
          ],
          "49": [
            5360,
            5470
          ],
          "50": [
            5505,
            5664
          ],
          "51": [
            5787,
            5830
          ],
          "52": [
            5840,
            5904
          ]
        },
        "RangeManager.transferAssetsIntoRangerStep": {
          "2": [
            7908,
            7977
          ]
        },
        "RangeManager.transferAssetsIntoStep": {
          "25": [
            6722,
            6742
          ],
          "26": [
            6777,
            6884
          ],
          "27": [
            6892,
            6957
          ],
          "28": [
            6965,
            7016
          ],
          "29": [
            7053,
            7160
          ],
          "30": [
            7168,
            7233
          ],
          "31": [
            7241,
            7292
          ],
          "32": [
            7354,
            7398
          ],
          "33": [
            7404,
            7444
          ],
          "34": [
            7450,
            7505
          ],
          "35": [
            7511,
            7520
          ]
        },
        "RangeManager.transferAssetsIntoTickerStep": {
          "22": [
            8367,
            8436
          ]
        }
      },
      "1": {},
      "10": {
        "Ownable._transferOwnership": {
          "58": [
            2378,
            2395
          ],
          "59": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "0": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "21": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "23": [
            1998,
            2071
          ],
          "24": [
            2081,
            2109
          ]
        }
      },
      "2": {},
      "3": {},
      "39": {},
      "4": {},
      "40": {},
      "42": {},
      "43": {},
      "44": {},
      "5": {},
      "58": {
        "SafeERC20._callOptionalReturn": {
          "60": [
            3811,
            3896
          ]
        },
        "SafeERC20.safeIncreaseAllowance": {
          "41": [
            2228,
            2325
          ]
        },
        "SafeERC20.safeTransfer": {
          "42": [
            813,
            899
          ]
        },
        "SafeERC20.safeTransferFrom": {
          "40": [
            1050,
            1146
          ]
        }
      },
      "68": {
        "Address.functionCall": {
          "61": [
            4003,
            4062
          ]
        },
        "Address.functionCallWithValue": {
          "62": [
            5122,
            5203
          ],
          "64": [
            5213,
            5273
          ],
          "65": [
            5367,
            5425
          ]
        },
        "Address.isContract": {
          "63": [
            1443,
            1473
          ]
        },
        "Address.verifyCallResult": {
          "66": [
            7743,
            7760
          ],
          "67": [
            8187,
            8207
          ]
        }
      },
      "70": {
        "Context._msgSender": {
          "3": [
            712,
            729
          ]
        }
      },
      "85": {},
      "86": {},
      "88": {},
      "89": {},
      "98": {},
      "99": {}
    }
  },
  "dependencies": [
    "Address",
    "BeaconProxy",
    "Context",
    "ERC20",
    "FixedPoint96",
    "FullMath",
    "IAaveOracle",
    "IBeacon",
    "IERC20",
    "ILendingPool",
    "ILendingPoolAddressesProvider",
    "INonfungiblePositionManager",
    "IUniswapV3Factory",
    "IUniswapV3Pool",
    "LiquidityAmounts",
    "Ownable",
    "ReentrancyGuard",
    "SafeERC20",
    "TickMath",
    "TokenisableRange"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "1159:8257:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7794:188;;;;;;:::i;:::-;;:::i;:::-;;1859:42;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;709:32:102;;;691:51;;679:2;664:18;1859:42:0;;;;;;;;2929:955;;;;;;:::i;:::-;;:::i;1485:20::-;;;;;-1:-1:-1;;;;;1485:20:0;;;4052:447;;;;;;:::i;:::-;;:::i;1813:42::-;;;;;;:::i;:::-;;:::i;6054:112::-;;;;;;:::i;:::-;;:::i;1668:101:10:-;;;:::i;1036:85::-;1108:6;;-1:-1:-1;;;;;1108:6:10;1036:85;;9303:111:0;9394:8;:15;9303:111;;4079:25:102;;;4067:2;4052:18;9303:111:0;3933:177:102;1785:23:0;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;4360:15:102;;;4342:34;;4412:15;;;;4407:2;4392:18;;4385:43;4262:18;1785:23:0;4115:319:102;1242:32:0;;;;;-1:-1:-1;;;;;1242:32:0;;;1596:125;;1678:42;1596:125;;1461:20;;;;;-1:-1:-1;;;;;1461:20:0;;;8253:188;;;;;;:::i;:::-;;:::i;1918:198:10:-;;;;;;:::i;:::-;;:::i;7794:188:0:-;1744:1:42;2325:7;;:19;2317:63;;;;-1:-1:-1;;;2317:63:42;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;7908:69:0::1;7931:15;7947:4;7931:21;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;7931:21:0::1;7954:4:::0;7960:7;7969;7908:22:::1;:69::i;:::-;-1:-1:-1::0;;1701:1:42;2628:7;:22;-1:-1:-1;7794:188:0:o;1859:42::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1859:42:0;;-1:-1:-1;1859:42:0;:::o;2929:955::-;1108:6:10;;-1:-1:-1;;;;;1108:6:10;719:10:70;1248:23:10;1240:68;;;;-1:-1:-1;;;1240:68:10;;;;;;;:::i;:::-;-1:-1:-1;;;;;3083:22:0;::::1;3075:49;;;::::0;-1:-1:-1;;;3075:49:0;;6220:2:102;3075:49:0::1;::::0;::::1;6202:21:102::0;6259:2;6239:18;;;6232:30;-1:-1:-1;;;6278:18:102;;;6271:44;6332:18;;3075:49:0::1;6018:338:102::0;3075:49:0::1;3130:31;3144:8;3154:6;3130:13;:31::i;:::-;3182:22;::::0;;;;::::1;::::0;;-1:-1:-1;;;;;3182:22:0;;::::1;::::0;;;;::::1;;::::0;::::1;::::0;;;3167:8:::1;:39:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;3167:39:0;;;;;;;;::::1;-1:-1:-1::0;;;3167:39:0::1;::::0;;;::::1;;::::0;;;::::1;::::0;;;;3231:27;;3247:6;;3231:27:::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;;;;;6590:32:102;;;6572:51;;6659:2;6654;6639:18;;6632:30;;;-1:-1:-1;6678:18:102;;;6671:29;6732:2;6717:18;3231:27:0::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;3264:15:0::1;:55:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;3264:55:0;;;;;::::1;::::0;;-1:-1:-1;;;;;;3264:55:0::1;-1:-1:-1::0;;;;;3264:55:0;::::1;;::::0;;3332:27:::1;::::0;3264:55;;-1:-1:-1;3348:6:0;;3332:27:::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;;;;;6590:32:102;;;6572:51;;6659:2;6654;6639:18;;6632:30;;;-1:-1:-1;6678:18:102;;;6671:29;6732:2;6717:18;3332:27:0::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;3365:15:0::1;:55:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;3365:55:0;;;;::::1;::::0;;-1:-1:-1;;;;;;3365:55:0::1;-1:-1:-1::0;;;;;3365:55:0;;::::1;::::0;;;::::1;::::0;;;3490:12:::1;::::0;:35:::1;::::0;;-1:-1:-1;;;3490:35:0;;;;3365:55;;-1:-1:-1;;;3490:12:0;::::1;::::0;:33:::1;::::0;:35:::1;::::0;;::::1;::::0;3365:55:::1;::::0;3490:35;;;;;;;:12;:35:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;3459:83:0::1;;:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3556:15;3573:22:::0;;3426:119;;-1:-1:-1;3556:15:0;3573:26:::1;::::0;3598:1:::1;::::0;3573:26:::1;:::i;:::-;3556:45;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;::::1;::::0;3620:7:::1;::::0;3629::::1;::::0;;3556:126:::1;::::0;-1:-1:-1;;;3556:126:0;;-1:-1:-1;;;;;3556:45:0;;::::1;::::0;:55:::1;::::0;:126:::1;::::0;3612:6;;3620:7;;::::1;::::0;3629;;::::1;::::0;3638:8;;3648:6;;3656:9;;3667:7;;3556:45;:126:::1;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;3688:15:0::1;3705:22:::0;;3688:15;;-1:-1:-1;3705:26:0::1;::::0;-1:-1:-1;3730:1:0::1;::::0;3705:26:::1;:::i;:::-;3688:45;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;3752:7:::1;::::0;3761::::1;::::0;;3688:125:::1;::::0;-1:-1:-1;;;3688:125:0;;-1:-1:-1;;;;;3688:45:0;;::::1;::::0;:55:::1;::::0;:125:::1;::::0;3744:6;;3752:7;;::::1;::::0;3761;;;::::1;::::0;3770:8;;3780:6;;3788:9;;3799:7;;3688:45;;:125:::1;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3825:54;3834:8;3844:6;3877:1;3852:15;:22;;;;:26;;;;:::i;:::-;3825:54;::::0;;-1:-1:-1;;;;;9543:15:102;;;9525:34;;9595:15;;;;9590:2;9575:18;;9568:43;9627:18;;;9620:34;9460:2;9445:18;3825:54:0::1;;;;;;;3069:815;;2929:955:::0;;;;;:::o;4052:447::-;1108:6:10;;-1:-1:-1;;;;;1108:6:10;719:10:70;1248:23:10;1240:68;;;;-1:-1:-1;;;1240:68:10;;;;;;;:::i;:::-;4136:7:0::1;::::0;:60:::1;::::0;-1:-1:-1;;;;;4136:7:0::1;4161:10;4181:4;4188:7:::0;4136:24:::1;:60::i;:::-;4202:7;::::0;:42:::1;::::0;-1:-1:-1;;;;;4202:7:0::1;4232:2:::0;4236:7;4202:29:::1;:42::i;:::-;4250:7;::::0;:60:::1;::::0;-1:-1:-1;;;;;4250:7:0::1;4275:10;4295:4;4302:7:::0;4250:24:::1;:60::i;:::-;4316:7;::::0;:42:::1;::::0;-1:-1:-1;;;;;4316:7:0::1;4346:2:::0;4350:7;4316:29:::1;:42::i;:::-;4364:43;::::0;-1:-1:-1;;;4364:43:0;;::::1;::::0;::::1;9839:25:102::0;;;9880:18;;;9873:34;;;-1:-1:-1;;;;;4364:25:0;::::1;::::0;::::1;::::0;9812:18:102;;4364:43:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;4448:45:0::1;::::0;-1:-1:-1;;;4448:45:0;;4487:4:::1;4448:45;::::0;::::1;691:51:102::0;4413:81:0::1;::::0;-1:-1:-1;4436:10:0::1;::::0;-1:-1:-1;;;;;;4448:30:0;::::1;::::0;::::1;::::0;664:18:102;;4448:45:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4413:22:0;::::1;::::0;:81;:22:::1;:81::i;:::-;4052:447:::0;;;:::o;1813:42::-;;;;;;;;;;;;6054:112;1744:1:42;2325:7;;:19;2317:63;;;;-1:-1:-1;;;2317:63:42;;;;;;;:::i;:::-;1744:1;2455:7;:18;6126:20:0::1;6141:4:::0;6126:14:::1;:20::i;:::-;6152:9;:7;:9::i;:::-;-1:-1:-1::0;1701:1:42;2628:7;:22;6054:112:0:o;1668:101:10:-;1108:6;;-1:-1:-1;;;;;1108:6:10;719:10:70;1248:23:10;1240:68;;;;-1:-1:-1;;;1240:68:10;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1785:23:0:-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1785:23:0;;;;-1:-1:-1;;;;1785:23:0;;;;;:::o;8253:188::-;1744:1:42;2325:7;;:19;2317:63;;;;-1:-1:-1;;;2317:63:42;;;;;;;:::i;:::-;1744:1;2455:7;:18;;;;8367:69:0::1;8390:15;8406:4;8390:21;;;;;;;;:::i;1918:198:10:-:0;1108:6;;-1:-1:-1;;;;;1108:6:10;719:10:70;1248:23:10;1240:68;;;;-1:-1:-1;;;1240:68:10;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:10;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:10;;10309:2:102;1998:73:10::1;::::0;::::1;10291:21:102::0;10348:2;10328:18;;;10321:30;10387:34;10367:18;;;10360:62;-1:-1:-1;;;10438:18:102;;;10431:36;10484:19;;1998:73:10::1;10107:402:102::0;1998:73:10::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;6606:919:0:-;6722:20;6737:4;6722:14;:20::i;:::-;6752:11;;6748:275;;6777:12;;6838:7;;6802:45;;-1:-1:-1;;;6802:45:0;;-1:-1:-1;;;;;6838:7:0;;;6802:45;;;691:51:102;6777:12:0;;;:23;;:12;;6802:27;;664:18:102;;6802:45:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:59;;;6863:10;6875:7;6777:107;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6892:12:0;;6923:7;;6892:65;;-1:-1:-1;;;6892:65:0;;-1:-1:-1;;;;;6892:12:0;;;;-1:-1:-1;6892:21:0;;-1:-1:-1;6892:65:0;;6923:7;;;;6933;;6950:4;;6892:65;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6965:7:0;;:51;;-1:-1:-1;;;;;6965:7:0;7003:2;7008:7;6965:29;:51::i;:::-;7032:11;;7028:271;;7053:12;;7114:7;;;7078:45;;-1:-1:-1;;;7078:45:0;;-1:-1:-1;;;;;7114:7:0;;;7078:45;;;691:51:102;;;;7053:12:0;;;;:23;;:12;;7078:27;;664:18:102;;7078:45:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:59;;;7139:10;7151:7;7053:107;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7168:12:0;;7199:7;;;7168:65;;-1:-1:-1;;;7168:65:0;;-1:-1:-1;;;;;7168:12:0;;;;-1:-1:-1;7168:21:0;;-1:-1:-1;7168:65:0;;7199:7;;;;7209;;7226:4;;7168:65;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7241:7:0;;:51;;-1:-1:-1;;;;;7241:7:0;7279:2;7284:7;7241:29;:51::i;:::-;7320:28;;-1:-1:-1;;;7320:28:0;;;;;9839:25:102;;;9880:18;;;9873:34;;;7304:13:0;;-1:-1:-1;;;;;7320:10:0;;;;;9812:18:102;;7320:28:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7304:44;;7359:39;7367:10;7387:2;7392:5;7359:39;;;;;;;;:::i;:::-;;;;;;;;7423:12;;7404:40;;-1:-1:-1;;;7404:40:0;;-1:-1:-1;;;;;7423:12:0;;;7404:40;;;13700:51:102;13767:18;;;13760:34;;;7404:10:0;;;;;;13673:18:102;;7404:40:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7450:12:0;;:55;;-1:-1:-1;;;7450:55:0;;-1:-1:-1;;;;;7450:12:0;;;;:20;;:55;;7479:2;;7484:5;;7491:10;;7450:12;;:55;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7511:9;:7;:9::i;:::-;6716:809;6606:919;;;;:::o;2347:315::-;2434:3;-1:-1:-1;;;;;2426:11:0;:5;-1:-1:-1;;;;;2426:11:0;;2418:37;;;;-1:-1:-1;;;2418:37:0;;14761:2:102;2418:37:0;;;14743:21:102;14800:2;14780:18;;;14773:30;-1:-1:-1;;;14819:18:102;;;14812:43;14872:18;;2418:37:0;14559:337:102;2418:37:0;2475:8;:15;2461:11;2496:161;2517:3;2513:1;:7;2496:161;;;2548:8;2557:1;2548:11;;;;;;;;:::i;:::-;;;;;;;;;;:15;-1:-1:-1;;;;;;;;2548:15:0;;;;;2539:24;;;;;;:52;;;2574:8;2583:1;2574:11;;;;;;;;:::i;:::-;;;;;;;;;;:17;-1:-1:-1;;;;;2574:17:0;;;2567:24;;;;;2539:52;2603:8;2535:85;2627:23;;-1:-1:-1;;;2627:23:0;;15103:2:102;2627:23:0;;;15085:21:102;15142:2;15122:18;;;15115:30;-1:-1:-1;;;15161:18:102;;;15154:43;15214:18;;2627:23:0;14901:337:102;2496:161:0;2522:3;;;;:::i;:::-;;;;2496:161;;;;2412:250;2347:315;;:::o;912:241:58:-;1050:96;1070:5;1100:27;;;1129:4;1135:2;1139:5;1077:68;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1077:68:58;;;;;;;;;;;;;;-1:-1:-1;;;;;1077:68:58;-1:-1:-1;;;;;;1077:68:58;;;;;;;;;;1050:19;:96::i;2022:310::-;2171:39;;-1:-1:-1;;;2171:39:58;;2195:4;2171:39;;;15595:34:102;-1:-1:-1;;;;;15665:15:102;;;15645:18;;;15638:43;2148:20:58;;2213:5;;2171:15;;;;;15530:18:102;;2171:39:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:47;;;;:::i;:::-;2255:69;;-1:-1:-1;;;;;13718:32:102;;2255:69:58;;;13700:51:102;13767:18;;;13760:34;;;2148:70:58;;-1:-1:-1;2228:97:58;;2248:5;;-1:-1:-1;;;2278:22:58;13673:18:102;;2255:69:58;13526:274:102;701:205:58;840:58;;-1:-1:-1;;;;;13718:32:102;;840:58:58;;;13700:51:102;13767:18;;;13760:34;;;813:86:58;;833:5;;-1:-1:-1;;;863:23:58;13673:18:102;;840:58:58;13526:274:102;4627:1299:0;4695:15;:22;4688:29;;:62;;;;-1:-1:-1;4728:15:0;:22;4721:29;;4688:62;4680:87;;;;-1:-1:-1;;;4680:87:0;;16024:2:102;4680:87:0;;;16006:21:102;16063:2;16043:18;;;16036:30;-1:-1:-1;;;16082:18:102;;;16075:42;16134:18;;4680:87:0;15822:336:102;4680:87:0;4811:12;;4847:15;:21;;4773:13;;-1:-1:-1;;;;;4811:12:0;;:27;;4863:4;;4847:21;;;;;;:::i;:::-;;;;;;;;;;;4811:59;;;;;;-1:-1:-1;;;;;;4811:59:0;;;-1:-1:-1;;;;;4847:21:0;;;4811:59;;;691:51:102;664:18;;4811:59:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:73;;;4805:102;;-1:-1:-1;;;4805:102:0;;4896:10;4805:102;;;691:51:102;-1:-1:-1;;;;;4805:90:0;;;;;;664:18:102;;4805:102:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4797:110;-1:-1:-1;4920:9:0;;4916:430;;4948:12;;5019:15;:21;;-1:-1:-1;;;;;4948:12:0;;;;:23;;:12;;4983:27;;5019:15;5035:4;;5019:21;;;;;;:::i;:::-;;;;;;;;;;;4983:59;;;;;;-1:-1:-1;;;;;;4983:59:0;;;-1:-1:-1;;;;;5019:21:0;;;4983:59;;;691:51:102;664:18;;4983:59:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:73;;;5069:10;5092:5;4948:159;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5125:12:0;;5155:15;:21;;-1:-1:-1;;;;;5125:12:0;;;;-1:-1:-1;5125:21:0;;-1:-1:-1;5155:15:0;5171:4;;5155:21;;;;;;:::i;:::-;;;;;;;;;;;5125:87;;-1:-1:-1;;;;;;5125:87:0;;;;;;;;;-1:-1:-1;;;;;5155:21:0;;-1:-1:-1;;5179:17:0;5206:4;;5125:87;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5117:95;;5222:15;5238:4;5222:21;;;;;;;;:::i;:::-;;;;;;;;;;:43;;-1:-1:-1;;;5222:43:0;;;;;16381:25:102;;;16422:18;;;16415:34;;;16465:18;;;16458:34;;;;-1:-1:-1;;;;;5222:21:0;;:30;;16354:18:102;;5222:43:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;5280:59;5289:10;5309:15;5325:4;5309:21;;;;;;;;:::i;:::-;;;;;;;;;;;5280:59;;;;;-1:-1:-1;;;;;5309:21:0;;5333:5;;5280:59;:::i;:::-;;;;;;;;4916:430;5374:12;;5410:15;:21;;-1:-1:-1;;;;;5374:12:0;;;;:27;;5410:15;5426:4;;5410:21;;;;;;:::i;:::-;;;;;;;;;;;5374:59;;;;;;-1:-1:-1;;;;;;5374:59:0;;;-1:-1:-1;;;;;5410:21:0;;;5374:59;;;691:51:102;664:18;;5374:59:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:73;;;5368:102;;-1:-1:-1;;;5368:102:0;;5459:10;5368:102;;;691:51:102;-1:-1:-1;;;;;5368:90:0;;;;;;664:18:102;;5368:102:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5360:110;-1:-1:-1;5480:9:0;;5476:435;;5505:12;;5576:15;:21;;-1:-1:-1;;;;;5505:12:0;;;;:23;;:12;;5540:27;;5576:15;5592:4;;5576:21;;;;;;:::i;:::-;;;;;;;;;;;5540:59;;;;;;-1:-1:-1;;;;;;5540:59:0;;;-1:-1:-1;;;;;5576:21:0;;;5540:59;;;691:51:102;664:18;;5540:59:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:73;;;5626:10;5649:5;5505:159;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5690:12:0;;5720:15;:21;;5674:13;;-1:-1:-1;;;;;;5690:12:0;;;;-1:-1:-1;5690:21:0;;5736:4;;5720:21;;;;;;:::i;:::-;;;;;;;;;;;5690:87;;-1:-1:-1;;;;;;5690:87:0;;;;;;;;;-1:-1:-1;;;;;5720:21:0;;-1:-1:-1;;5744:17:0;5771:4;;5690:87;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5674:103;;5787:15;5803:4;5787:21;;;;;;;;:::i;:::-;;;;;;;;;;:43;;-1:-1:-1;;;5787:43:0;;;;;16381:25:102;;;16422:18;;;16415:34;;;16465:18;;;16458:34;;;;-1:-1:-1;;;;;5787:21:0;;:30;;16354:18:102;;5787:43:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;5845:59;5854:10;5874:15;5890:4;5874:21;;;;;;;;:::i;:::-;;;;;;;;;;;5845:59;;;;;-1:-1:-1;;;;;5874:21:0;;5898:5;;5845:59;:::i;:::-;;;;;;;;5491:420;5476:435;4674:1252;4627:1299;:::o;8511:718::-;8566:7;;:32;;-1:-1:-1;;;8566:32:0;;8592:4;8566:32;;;691:51:102;8545:18:0;;-1:-1:-1;;;;;8566:7:0;;:17;;664:18:102;;8566:32:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8625:7;;;:32;;-1:-1:-1;;;8625:32:0;;8651:4;8625:32;;;691:51:102;;;;8545:53:0;;-1:-1:-1;8604:18:0;;-1:-1:-1;;;;;8625:7:0;;:17;;664:18:102;;8625:32:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8604:53;-1:-1:-1;8672:14:0;;8668:172;;8734:12;;8696:7;;:64;;-1:-1:-1;;;;;8696:7:0;;;;8734:12;8749:10;8696:29;:64::i;:::-;8768:12;;8797:7;;8768:65;;-1:-1:-1;;;8768:65:0;;-1:-1:-1;;;;;8768:12:0;;;;:20;;:65;;8797:7;;;8807:10;;8819;;8768:12;;:65;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8668:172;8854:14;;8850:172;;8916:12;;8878:7;;:64;;-1:-1:-1;;;;;8878:7:0;;;;8916:12;8931:10;8878:29;:64::i;:::-;8950:12;;8979:7;;;8950:65;;-1:-1:-1;;;8950:65:0;;-1:-1:-1;;;;;8950:12:0;;;;:20;;:65;;8979:7;;;;8989:10;;9001;;8950:12;;:65;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8850:172;9126:12;;:43;;-1:-1:-1;;;9126:43:0;;9158:10;9126:43;;;691:51:102;9112:10:0;;-1:-1:-1;;;;;9126:12:0;;:31;;664:18:102;;9126:43:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9106:63;;;;;;;9188:7;9183:2;:12;9175:49;;;;-1:-1:-1;;;9175:49:0;;17452:2:102;9175:49:0;;;17434:21:102;17491:2;17471:18;;;17464:30;17530:26;17510:18;;;17503:54;17574:18;;9175:49:0;17250:348:102;2270:187:10;2362:6;;;-1:-1:-1;;;;;2378:17:10;;;-1:-1:-1;;;;;;2378:17:10;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;3207:706:58:-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;-1:-1:-1;;;;;3652:27:58;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:58;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;-1:-1:-1;;;3811:85:58;;17805:2:102;3811:85:58;;;17787:21:102;17844:2;17824:18;;;17817:30;17883:34;17863:18;;;17856:62;-1:-1:-1;;;17934:18:102;;;17927:40;17984:19;;3811:85:58;17603:406:102;3846:223:68;3979:12;4010:52;4032:6;4040:4;4046:1;4049:12;4010:21;:52::i;:::-;4003:59;;3846:223;;;;;;:::o;4933:499::-;5098:12;5155:5;5130:21;:30;;5122:81;;;;-1:-1:-1;;;5122:81:68;;18216:2:102;5122:81:68;;;18198:21:102;18255:2;18235:18;;;18228:30;18294:34;18274:18;;;18267:62;-1:-1:-1;;;18345:18:102;;;18338:36;18391:19;;5122:81:68;18014:402:102;5122:81:68;-1:-1:-1;;;;;1450:19:68;;;5213:60;;;;-1:-1:-1;;;5213:60:68;;18623:2:102;5213:60:68;;;18605:21:102;18662:2;18642:18;;;18635:30;18701:31;18681:18;;;18674:59;18750:18;;5213:60:68;18421:353:102;5213:60:68;5285:12;5299:23;5326:6;-1:-1:-1;;;;;5326:11:68;5345:5;5352:4;5326:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5284:73;;;;5374:51;5391:7;5400:10;5412:12;5374:16;:51::i;:::-;5367:58;4933:499;-1:-1:-1;;;;;;;4933:499:68:o;7546:692::-;7692:12;7720:7;7716:516;;;-1:-1:-1;7750:10:68;7743:17;;7716:516;7861:17;;:21;7857:365;;8055:10;8049:17;8115:15;8102:10;8098:2;8094:19;8087:44;7857:365;8194:12;8187:20;;-1:-1:-1;;;8187:20:68;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;:::o;14:316:102:-;91:6;99;107;160:2;148:9;139:7;135:23;131:32;128:52;;;176:1;173;166:12;128:52;-1:-1:-1;;199:23:102;;;269:2;254:18;;241:32;;-1:-1:-1;320:2:102;305:18;;;292:32;;14:316;-1:-1:-1;14:316:102:o;335:180::-;394:6;447:2;435:9;426:7;422:23;418:32;415:52;;;463:1;460;453:12;415:52;-1:-1:-1;486:23:102;;335:180;-1:-1:-1;335:180:102:o;753:146::-;-1:-1:-1;;;;;832:5:102;828:46;821:5;818:57;808:85;;889:1;886;879:12;904:127;965:10;960:3;956:20;953:1;946:31;996:4;993:1;986:15;1020:4;1017:1;1010:15;1036:247;1103:2;1097:9;1145:3;1133:16;;1179:18;1164:34;;1200:22;;;1161:62;1158:88;;;1226:18;;:::i;:::-;1262:2;1255:22;1036:247;:::o;1288:719::-;1331:5;1384:3;1377:4;1369:6;1365:17;1361:27;1351:55;;1402:1;1399;1392:12;1351:55;1438:6;1425:20;1464:18;1501:2;1497;1494:10;1491:36;;;1507:18;;:::i;:::-;1582:2;1576:9;1550:2;1636:13;;-1:-1:-1;;1632:22:102;;;1656:2;1628:31;1624:40;1612:53;;;1680:18;;;1700:22;;;1677:46;1674:72;;;1726:18;;:::i;:::-;1766:10;1762:2;1755:22;1801:2;1793:6;1786:18;1847:3;1840:4;1835:2;1827:6;1823:15;1819:26;1816:35;1813:55;;;1864:1;1861;1854:12;1813:55;1928:2;1921:4;1913:6;1909:17;1902:4;1894:6;1890:17;1877:54;1975:1;1968:4;1963:2;1955:6;1951:15;1947:26;1940:37;1995:6;1986:15;;;;;;1288:719;;;;:::o;2012:131::-;-1:-1:-1;;;;;2087:31:102;;2077:42;;2067:70;;2133:1;2130;2123:12;2148:962;2263:6;2271;2279;2287;2295;2348:3;2336:9;2327:7;2323:23;2319:33;2316:53;;;2365:1;2362;2355:12;2316:53;2404:9;2391:23;2423:31;2448:5;2423:31;:::i;:::-;2473:5;-1:-1:-1;2530:2:102;2515:18;;2502:32;2543:33;2502:32;2543:33;:::i;:::-;2595:7;-1:-1:-1;2653:2:102;2638:18;;2625:32;2676:18;2706:14;;;2703:34;;;2733:1;2730;2723:12;2703:34;2756:50;2798:7;2789:6;2778:9;2774:22;2756:50;:::i;:::-;2746:60;;2859:2;2848:9;2844:18;2831:32;2815:48;;2888:2;2878:8;2875:16;2872:36;;;2904:1;2901;2894:12;2872:36;;2927:52;2971:7;2960:8;2949:9;2945:24;2927:52;:::i;:::-;2917:62;;;3031:3;3020:9;3016:19;3003:33;3045;3070:7;3045:33;:::i;:::-;3097:7;3087:17;;;2148:962;;;;;;;;:::o;3337:383::-;3414:6;3422;3430;3483:2;3471:9;3462:7;3458:23;3454:32;3451:52;;;3499:1;3496;3489:12;3451:52;3538:9;3525:23;3557:31;3582:5;3557:31;:::i;:::-;3607:5;3659:2;3644:18;;3631:32;;-1:-1:-1;3710:2:102;3695:18;;;3682:32;;3337:383;-1:-1:-1;;;3337:383:102:o;4913:247::-;4972:6;5025:2;5013:9;5004:7;5000:23;4996:32;4993:52;;;5041:1;5038;5031:12;4993:52;5080:9;5067:23;5099:31;5124:5;5099:31;:::i;5165:355::-;5367:2;5349:21;;;5406:2;5386:18;;;5379:30;5445:33;5440:2;5425:18;;5418:61;5511:2;5496:18;;5165:355::o;5525:127::-;5586:10;5581:3;5577:20;5574:1;5567:31;5617:4;5614:1;5607:15;5641:4;5638:1;5631:15;5657:356;5859:2;5841:21;;;5878:18;;;5871:30;5937:34;5932:2;5917:18;;5910:62;6004:2;5989:18;;5657:356::o;6746:290::-;6855:6;6908:2;6896:9;6887:7;6883:23;6879:32;6876:52;;;6924:1;6921;6914:12;6876:52;6956:9;6950:16;6975:31;7000:5;6975:31;:::i;7041:138::-;7120:13;;7142:31;7120:13;7142:31;:::i;:::-;7041:138;;;:::o;7440:127::-;7501:10;7496:3;7492:20;7489:1;7482:31;7532:4;7529:1;7522:15;7556:4;7553:1;7546:15;7572:128;7639:9;;;7660:11;;;7657:37;;;7674:18;;:::i;:::-;7572:128;;;;:::o;7705:250::-;7790:1;7800:113;7814:6;7811:1;7808:13;7800:113;;;7890:11;;;7884:18;7871:11;;;7864:39;7836:2;7829:10;7800:113;;;-1:-1:-1;;7947:1:102;7929:16;;7922:27;7705:250::o;7960:271::-;8002:3;8040:5;8034:12;8067:6;8062:3;8055:19;8083:76;8152:6;8145:4;8140:3;8136:14;8129:4;8122:5;8118:16;8083:76;:::i;:::-;8213:2;8192:15;-1:-1:-1;;8188:29:102;8179:39;;;;8220:4;8175:50;;7960:271;-1:-1:-1;;7960:271:102:o;8236:1029::-;-1:-1:-1;;;;;8703:15:102;;;8685:34;;8755:15;;;8750:2;8735:18;;8728:43;8807:15;;8802:2;8787:18;;8780:43;-1:-1:-1;;;;;8912:15:102;;;8907:2;8892:18;;8885:43;8965:15;;8959:3;8944:19;;8937:44;8635:3;8665;8997:19;;8990:31;;;8606:4;;9044:45;9070:18;;;9062:6;9044:45;:::i;:::-;9030:59;;9138:9;9130:6;9126:22;9120:3;9109:9;9105:19;9098:51;9166:33;9192:6;9184;9166:33;:::i;:::-;9158:41;;;9250:6;9243:14;9236:22;9230:3;9219:9;9215:19;9208:51;8236:1029;;;;;;;;;;;:::o;9918:184::-;9988:6;10041:2;10029:9;10020:7;10016:23;10012:32;10009:52;;;10057:1;10054;10047:12;10009:52;-1:-1:-1;10080:16:102;;9918:184;-1:-1:-1;9918:184:102:o;10514:426::-;10595:5;10643:4;10631:9;10626:3;10622:19;10618:30;10615:50;;;10661:1;10658;10651:12;10615:50;10694:2;10688:9;10736:4;10728:6;10724:17;10807:6;10795:10;10792:22;10771:18;10759:10;10756:34;10753:62;10750:88;;;10818:18;;:::i;:::-;10854:2;10847:22;10917:16;;10902:32;;-1:-1:-1;10887:6:102;10514:426;-1:-1:-1;10514:426:102:o;10945:138::-;11024:13;;11046:31;11024:13;11046:31;:::i;11088:169::-;11166:13;;11219:12;11208:24;;11198:35;;11188:63;;11247:1;11244;11237:12;11262:160;11339:13;;11392:4;11381:16;;11371:27;;11361:55;;11412:1;11409;11402:12;11427:1334;11527:6;11580:3;11568:9;11559:7;11555:23;11551:33;11548:53;;;11597:1;11594;11587:12;11548:53;11623:17;;:::i;:::-;11663:72;11727:7;11716:9;11663:72;:::i;:::-;11656:5;11649:87;11768:49;11813:2;11802:9;11798:18;11768:49;:::i;:::-;11763:2;11756:5;11752:14;11745:73;11850:49;11895:2;11884:9;11880:18;11850:49;:::i;:::-;11845:2;11838:5;11834:14;11827:73;11932:49;11977:2;11966:9;11962:18;11932:49;:::i;:::-;11927:2;11920:5;11916:14;11909:73;12015:50;12060:3;12049:9;12045:19;12015:50;:::i;:::-;12009:3;12002:5;11998:15;11991:75;12099:50;12144:3;12133:9;12129:19;12099:50;:::i;:::-;12093:3;12086:5;12082:15;12075:75;12183:49;12227:3;12216:9;12212:19;12183:49;:::i;:::-;12177:3;12170:5;12166:15;12159:74;12266:50;12311:3;12300:9;12296:19;12266:50;:::i;:::-;12260:3;12253:5;12249:15;12242:75;12336:3;12371:49;12416:2;12405:9;12401:18;12371:49;:::i;:::-;12355:14;;;12348:73;12440:3;12475:49;12505:18;;;12475:49;:::i;:::-;12459:14;;;12452:73;12544:3;12579:49;12609:18;;;12579:49;:::i;:::-;12563:14;;;12556:73;12648:3;12683:47;12711:18;;;12683:47;:::i;:::-;12667:14;;;12660:71;12671:5;11427:1334;-1:-1:-1;;;11427:1334:102:o;12766:375::-;-1:-1:-1;;;;;13024:15:102;;;13006:34;;13076:15;;;;13071:2;13056:18;;13049:43;13123:2;13108:18;;13101:34;;;;12956:2;12941:18;;12766:375::o;13146:::-;-1:-1:-1;;;;;13404:15:102;;;13386:34;;13451:2;13436:18;;13429:34;;;;13499:15;;;13494:2;13479:18;;13472:43;13336:2;13321:18;;13146:375::o;13805:277::-;13872:6;13925:2;13913:9;13904:7;13900:23;13896:32;13893:52;;;13941:1;13938;13931:12;13893:52;13973:9;13967:16;14026:5;14019:13;14012:21;14005:5;14002:32;13992:60;;14048:1;14045;14038:12;14087:467;-1:-1:-1;;;;;14381:15:102;;;14363:34;;14428:2;14413:18;;14406:34;;;;14476:15;;14471:2;14456:18;;14449:43;14540:6;14528:19;;;14523:2;14508:18;;14501:47;14312:3;14297:19;;14087:467::o;15243:135::-;15282:3;15303:17;;;15300:43;;15323:18;;:::i;:::-;-1:-1:-1;15370:1:102;15359:13;;15243:135::o;15692:125::-;15757:9;;;15778:10;;;15775:36;;;15791:18;;:::i;16503:245::-;16582:6;16590;16643:2;16631:9;16622:7;16618:23;16614:32;16611:52;;;16659:1;16656;16649:12;16611:52;-1:-1:-1;;16682:16:102;;16738:2;16723:18;;;16717:25;16682:16;;16717:25;;-1:-1:-1;16503:245:102:o;16753:492::-;16868:6;16876;16884;16892;16900;16908;16961:3;16949:9;16940:7;16936:23;16932:33;16929:53;;;16978:1;16975;16968:12;16929:53;17007:9;17001:16;16991:26;;17057:2;17046:9;17042:18;17036:25;17026:35;;17101:2;17090:9;17086:18;17080:25;17070:35;;17145:2;17134:9;17130:18;17124:25;17114:35;;17189:3;17178:9;17174:19;17168:26;17158:36;;17234:3;17223:9;17219:19;17213:26;17203:36;;16753:492;;;;;;;;:::o;18779:287::-;18908:3;18946:6;18940:13;18962:66;19021:6;19016:3;19009:4;19001:6;18997:17;18962:66;:::i;:::-;19044:16;;;;;18779:287;-1:-1:-1;;18779:287:102:o;19071:220::-;19220:2;19209:9;19202:21;19183:4;19240:45;19281:2;19270:9;19266:18;19258:6;19240:45;:::i",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "generateRange(uint128,uint128,string,string,address)": {
        "notice": "Generate Ticker and Ranger ranges",
        "params": {
          "endName": "Name of the range higher bound",
          "endX10": "Range high price scaled by 1e10",
          "startName": "Name of the range lower bound ",
          "startX10": "Range lower price scaled by 1e10"
        }
      },
      "getStepListLength()": {
        "notice": "Get length of stepList",
        "returns": {
          "listLength": "Length"
        }
      },
      "initRange(address,uint256,uint256)": {
        "notice": "Initialize a previously created ticker",
        "params": {
          "amount0": "Amount of token0",
          "amount1": "Amount of token1",
          "tr": "Range address"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "removeAssetsFromStep(uint256)": {
        "notice": "Remove assets from tokenisedRanges",
        "params": {
          "step": "Id of the range+ticker step from which to remove assets"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferAssetsIntoRangerStep(uint256,uint256,uint256)": {
        "notice": "Transfer assets from the lending pool to a Ranger",
        "params": {
          "amount0": "Amount of asset0 to transfer in the Range",
          "amount1": "Amount of asset1 to transfer in the Range",
          "step": "Id of the range+ticker step from which to remove assets"
        }
      },
      "transferAssetsIntoTickerStep(uint256,uint256,uint256)": {
        "notice": "Transfer assets from the lending pool to a Ticker",
        "params": {
          "amount0": "Amount of asset0 to transfer in the Ticker",
          "amount1": "Amount of asset1 to transfer in the Ticker",
          "step": "Id of the range+ticker step from which to remove assets"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "Range middleware between ROE lending pool and various ranges",
    "version": 1
  },
  "offset": [
    1159,
    9416
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH3 0x114 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH3 0xA3 JUMPI DUP1 PUSH4 0xBD865CBA GT PUSH3 0x6E JUMPI DUP1 PUSH4 0xBD865CBA EQ PUSH3 0x250 JUMPI DUP1 PUSH4 0xC9C46225 EQ PUSH3 0x26C JUMPI DUP1 PUSH4 0xE58346B8 EQ PUSH3 0x280 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH3 0x297 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH3 0x1E0 JUMPI DUP1 PUSH4 0x9092FE75 EQ PUSH3 0x1F2 JUMPI DUP1 PUSH4 0xAB65051F EQ PUSH3 0x204 JUMPI DUP1 PUSH4 0xB4DCFC77 EQ PUSH3 0x23C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x576B6052 GT PUSH3 0xE4 JUMPI DUP1 PUSH4 0x576B6052 EQ PUSH3 0x191 JUMPI DUP1 PUSH4 0x58CB5E9D EQ PUSH3 0x1A8 JUMPI DUP1 PUSH4 0x653E9B89 EQ PUSH3 0x1BF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH3 0x1D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x7562AB EQ PUSH3 0x119 JUMPI DUP1 PUSH4 0x2B9C4841 EQ PUSH3 0x132 JUMPI DUP1 PUSH4 0x43204FF3 EQ PUSH3 0x166 JUMPI DUP1 PUSH4 0x48B0C087 EQ PUSH3 0x17D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x130 PUSH3 0x12A CALLDATASIZE PUSH1 0x4 PUSH3 0x2022 JUMP JUMPDEST PUSH3 0x2AE JUMP JUMPDEST STOP JUMPDEST PUSH3 0x149 PUSH3 0x143 CALLDATASIZE PUSH1 0x4 PUSH3 0x204F JUMP JUMPDEST PUSH3 0x326 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x130 PUSH3 0x177 CALLDATASIZE PUSH1 0x4 PUSH3 0x216D JUMP JUMPDEST PUSH3 0x351 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH3 0x149 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH3 0x130 PUSH3 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH3 0x2218 JUMP JUMPDEST PUSH3 0x806 JUMP JUMPDEST PUSH3 0x149 PUSH3 0x1B9 CALLDATASIZE PUSH1 0x4 PUSH3 0x204F JUMP JUMPDEST PUSH3 0x985 JUMP JUMPDEST PUSH3 0x130 PUSH3 0x1D0 CALLDATASIZE PUSH1 0x4 PUSH3 0x204F JUMP JUMPDEST PUSH3 0x996 JUMP JUMPDEST PUSH3 0x130 PUSH3 0x9DD JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x149 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x15D JUMP JUMPDEST PUSH3 0x21B PUSH3 0x215 CALLDATASIZE PUSH1 0x4 PUSH3 0x204F JUMP JUMPDEST PUSH3 0xA18 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH3 0x15D JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH3 0x149 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH3 0x149 PUSH20 0xC36442B4A4522E871399CD717ABDD847AB11FE88 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH3 0x149 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH3 0x130 PUSH3 0x291 CALLDATASIZE PUSH1 0x4 PUSH3 0x2022 JUMP JUMPDEST PUSH3 0xA4E JUMP JUMPDEST PUSH3 0x130 PUSH3 0x2A8 CALLDATASIZE PUSH1 0x4 PUSH3 0x2250 JUMP JUMPDEST PUSH3 0xA95 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH3 0x2DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x2D3 SWAP1 PUSH3 0x2270 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH3 0x31C PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH3 0x2FE JUMPI PUSH3 0x2FE PUSH3 0x22A7 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP5 DUP5 PUSH3 0xB37 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x0 SSTORE POP JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH3 0x337 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0x37E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x2D3 SWAP1 PUSH3 0x22BD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x3C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x24B73B30B634B2103132B0B1B7B7 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x2D3 JUMP JUMPDEST PUSH3 0x3D3 DUP6 DUP6 PUSH3 0xFE5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP9 AND DUP3 MSTORE DUP7 DUP2 AND PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE SWAP4 MLOAD SWAP2 MLOAD DUP4 AND PUSH1 0x1 PUSH1 0x80 SHL MUL SWAP2 SWAP1 SWAP3 AND OR PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP3 SWAP1 PUSH3 0x44A SWAP1 PUSH3 0x2014 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0x486 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 POP DUP3 SWAP1 PUSH3 0x4E5 SWAP1 PUSH3 0x2014 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0x521 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x7F32D67F PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD SWAP5 SWAP6 POP SWAP3 SWAP4 SWAP2 AND SWAP2 PUSH4 0xFE65ACFE SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x5B7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x5DD SWAP2 SWAP1 PUSH3 0x22F2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFCA513A8 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x61B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x641 SWAP2 SWAP1 PUSH3 0x22F2 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH3 0x657 SWAP1 PUSH1 0x1 SWAP1 PUSH3 0x233A JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH3 0x66A JUMPI PUSH3 0x66A PUSH3 0x22A7 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x3 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xD3518877 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP6 PUSH4 0xD3518877 SWAP6 PUSH3 0x6BA SWAP6 DUP10 SWAP6 SWAP1 DUP3 AND SWAP5 SWAP1 SWAP2 AND SWAP3 DUP16 SWAP3 DUP16 SWAP3 DUP16 SWAP3 DUP16 SWAP3 SWAP2 ADD PUSH3 0x23AA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x6D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x6EA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x7 DUP1 SLOAD SWAP1 SWAP3 POP PUSH3 0x702 SWAP2 POP PUSH1 0x1 SWAP1 PUSH3 0x233A JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH3 0x715 JUMPI PUSH3 0x715 PUSH3 0x22A7 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x3 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xD3518877 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 PUSH4 0xD3518877 SWAP5 PUSH3 0x769 SWAP5 DUP9 SWAP5 SWAP2 DUP4 AND SWAP4 SWAP2 SWAP1 SWAP3 AND SWAP2 DUP15 SWAP2 DUP15 SWAP2 DUP15 SWAP2 DUP15 SWAP2 PUSH1 0x1 SWAP2 ADD PUSH3 0x23AA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x784 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x799 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0xFC9FD5A154BB65CCEB4F482BB1B19A821C98D99849A7173A72699EE86BC85537 DUP8 DUP8 PUSH1 0x1 PUSH1 0x6 DUP1 SLOAD SWAP1 POP PUSH3 0x7D4 SWAP2 SWAP1 PUSH3 0x233A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP4 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0x833 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x2D3 SWAP1 PUSH3 0x22BD JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH3 0x84D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP6 PUSH3 0x1113 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH3 0x866 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP5 PUSH3 0x116F JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH3 0x880 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP5 PUSH3 0x1113 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH3 0x899 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP4 PUSH3 0x116F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x14B087E1 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0xA5843F08 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x8E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x8F8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH3 0x980 SWAP3 POP CALLER SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x948 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x96E SWAP2 SWAP1 PUSH3 0x2426 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 SWAP1 PUSH3 0x1228 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH3 0x337 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH3 0x9BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x2D3 SWAP1 PUSH3 0x2270 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH3 0x9CB DUP2 PUSH3 0x125A JUMP JUMPDEST PUSH3 0x9D5 PUSH3 0x1A6D JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0xA0A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x2D3 SWAP1 PUSH3 0x22BD JUMP JUMPDEST PUSH3 0xA16 PUSH1 0x0 PUSH3 0x1D55 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH3 0xA29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP3 AND SWAP3 POP PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP2 DIV AND DUP3 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH3 0xA73 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x2D3 SWAP1 PUSH3 0x2270 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH3 0x31C PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH3 0x2FE JUMPI PUSH3 0x2FE PUSH3 0x22A7 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0xAC2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x2D3 SWAP1 PUSH3 0x22BD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0xB29 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x2D3 JUMP JUMPDEST PUSH3 0xB34 DUP2 PUSH3 0x1D55 JUMP JUMPDEST POP JUMP JUMPDEST PUSH3 0xB42 DUP4 PUSH3 0x125A JUMP JUMPDEST DUP2 ISZERO PUSH3 0xCBA JUMPI PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x35EA6A75 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND SWAP1 PUSH4 0x8EBBD26 SWAP1 DUP3 SWAP1 PUSH4 0x35EA6A75 SWAP1 PUSH1 0x24 ADD PUSH2 0x180 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xB9F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xBC5 SWAP2 SWAP1 PUSH3 0x24BB JUMP JUMPDEST PUSH1 0xE0 ADD MLOAD CALLER DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xBEB SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x25C3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xC06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0xC1B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1A4CA37B PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP5 POP PUSH4 0x69328DEC SWAP4 POP PUSH3 0xC5A SWAP3 SWAP1 SWAP2 AND SWAP1 DUP7 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH3 0x25E7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH3 0xC7A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xCA0 SWAP2 SWAP1 PUSH3 0x2426 JUMP JUMPDEST POP PUSH1 0x3 SLOAD PUSH3 0xCBA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP5 PUSH3 0x116F JUMP JUMPDEST DUP1 ISZERO PUSH3 0xE35 JUMPI PUSH1 0x2 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x35EA6A75 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x8EBBD26 SWAP1 DUP3 SWAP1 PUSH4 0x35EA6A75 SWAP1 PUSH1 0x24 ADD PUSH2 0x180 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xD1B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xD41 SWAP2 SWAP1 PUSH3 0x24BB JUMP JUMPDEST PUSH1 0xE0 ADD MLOAD CALLER DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xD67 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x25C3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xD82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0xD97 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1A4CA37B PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP6 POP PUSH4 0x69328DEC SWAP5 POP PUSH3 0xDD5 SWAP4 SWAP1 SWAP2 AND SWAP2 DUP7 SWAP2 ADDRESS SWAP2 ADD PUSH3 0x25E7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH3 0xDF5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xE1B SWAP2 SWAP1 PUSH3 0x2426 JUMP JUMPDEST POP PUSH1 0x4 SLOAD PUSH3 0xE35 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP4 PUSH3 0x116F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1C57762B PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0xE2BBB158 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH3 0xE87 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xEAD SWAP2 SWAP1 PUSH3 0x2426 JUMP JUMPDEST SWAP1 POP PUSH32 0x5548C837AB068CF56A2C2479DF0882A4922FD203EDB7517321831D95078C5F62 CALLER DUP7 DUP4 PUSH1 0x40 MLOAD PUSH3 0xEE4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x25C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 DUP7 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH3 0xF40 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xF66 SWAP2 SWAP1 PUSH3 0x260A JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xE8EDA9DF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xE8EDA9DF SWAP1 PUSH3 0xFA0 SWAP1 DUP9 SWAP1 DUP6 SWAP1 CALLER SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x4 ADD PUSH3 0x262E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xFBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0xFD0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH3 0xFDE PUSH3 0x1A6D JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND LT PUSH3 0x1038 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x14985B99D9481A5B9D985B1A59 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x2D3 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x110D JUMPI PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH3 0x105D JUMPI PUSH3 0x105D PUSH3 0x22A7 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP2 DIV DUP2 AND SWAP1 DUP6 AND LT ISZERO DUP1 PUSH3 0x10BA JUMPI POP PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH3 0x109D JUMPI PUSH3 0x109D PUSH3 0x22A7 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND SWAP1 DUP5 AND GT ISZERO JUMPDEST PUSH3 0x10F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x52616E6765206F7665726C617 PUSH1 0x9C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x2D3 JUMP JUMPDEST DUP1 PUSH3 0x1104 DUP2 PUSH3 0x265B JUMP JUMPDEST SWAP2 POP POP PUSH3 0x103E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH3 0x110D DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH3 0x1137 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x25C3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH3 0x1DA7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 DUP4 SWAP2 DUP7 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x11C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x11E7 SWAP2 SWAP1 PUSH3 0x2426 JUMP JUMPDEST PUSH3 0x11F3 SWAP2 SWAP1 PUSH3 0x2677 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH3 0x110D SWAP1 DUP6 SWAP1 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD PUSH3 0x1137 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH3 0x980 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD PUSH3 0x1137 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 LT DUP1 ISZERO PUSH3 0x126D JUMPI POP PUSH1 0x7 SLOAD DUP2 LT JUMPDEST PUSH3 0x12AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x496E76616C6964207374657 PUSH1 0xA4 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x2D3 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x6 DUP1 SLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x35EA6A75 SWAP2 DUP6 SWAP1 DUP2 LT PUSH3 0x12D7 JUMPI PUSH3 0x12D7 PUSH3 0x22A7 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0xE0 DUP4 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x180 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x1329 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x134F SWAP2 SWAP1 PUSH3 0x24BB JUMP JUMPDEST PUSH1 0xE0 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x1399 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x13BF SWAP2 SWAP1 PUSH3 0x2426 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH3 0x1688 JUMPI PUSH1 0x2 SLOAD PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x8EBBD26 SWAP2 DUP4 SWAP2 PUSH4 0x35EA6A75 SWAP2 SWAP1 DUP8 SWAP1 DUP2 LT PUSH3 0x13FD JUMPI PUSH3 0x13FD PUSH3 0x22A7 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0xE0 DUP4 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x180 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x144F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x1475 SWAP2 SWAP1 PUSH3 0x24BB JUMP JUMPDEST PUSH1 0xE0 ADD MLOAD CALLER DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x149B SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x25C3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x14B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x14CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP4 POP PUSH4 0x69328DEC SWAP3 POP SWAP1 DUP6 SWAP1 DUP2 LT PUSH3 0x14FC JUMPI PUSH3 0x14FC PUSH3 0x22A7 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH3 0x153A SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x0 NOT SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH3 0x25E7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH3 0x155A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x1580 SWAP2 SWAP1 PUSH3 0x2426 JUMP JUMPDEST SWAP1 POP PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH3 0x1598 JUMPI PUSH3 0x1598 PUSH3 0x22A7 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0xA41FE49F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA41FE49F SWAP1 PUSH1 0x64 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH3 0x15F8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x161E SWAP2 SWAP1 PUSH3 0x268D JUMP JUMPDEST POP POP PUSH32 0x9B1BFA7FA9EE420A16E124F794C35AC9F90472ACC99140EB2F6447C714CAD8EB CALLER PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH3 0x1658 JUMPI PUSH3 0x1658 PUSH3 0x22A7 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH3 0x167F SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP6 SWAP1 PUSH3 0x25C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x35EA6A75 SWAP2 SWAP1 DUP6 SWAP1 DUP2 LT PUSH3 0x16B5 JUMPI PUSH3 0x16B5 PUSH3 0x22A7 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0xE0 DUP4 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x180 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x1707 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x172D SWAP2 SWAP1 PUSH3 0x24BB JUMP JUMPDEST PUSH1 0xE0 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x1777 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x179D SWAP2 SWAP1 PUSH3 0x2426 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH3 0x1A69 JUMPI PUSH1 0x2 SLOAD PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x8EBBD26 SWAP2 DUP4 SWAP2 PUSH4 0x35EA6A75 SWAP2 SWAP1 DUP8 SWAP1 DUP2 LT PUSH3 0x17DB JUMPI PUSH3 0x17DB PUSH3 0x22A7 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0xE0 DUP4 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x180 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x182D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x1853 SWAP2 SWAP1 PUSH3 0x24BB JUMP JUMPDEST PUSH1 0xE0 ADD MLOAD CALLER DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1879 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x25C3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1894 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x18A9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0x7 DUP1 SLOAD PUSH1 0x0 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 POP PUSH4 0x69328DEC SWAP2 DUP7 SWAP1 DUP2 LT PUSH3 0x18DC JUMPI PUSH3 0x18DC PUSH3 0x22A7 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH3 0x191A SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x0 NOT SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH3 0x25E7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH3 0x193A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x1960 SWAP2 SWAP1 PUSH3 0x2426 JUMP JUMPDEST SWAP1 POP PUSH1 0x7 DUP4 DUP2 SLOAD DUP2 LT PUSH3 0x1978 JUMPI PUSH3 0x1978 PUSH3 0x22A7 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0xA41FE49F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA41FE49F SWAP1 PUSH1 0x64 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH3 0x19D8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x19FE SWAP2 SWAP1 PUSH3 0x268D JUMP JUMPDEST POP POP PUSH32 0x9B1BFA7FA9EE420A16E124F794C35AC9F90472ACC99140EB2F6447C714CAD8EB CALLER PUSH1 0x7 DUP6 DUP2 SLOAD DUP2 LT PUSH3 0x1A38 JUMPI PUSH3 0x1A38 PUSH3 0x22A7 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH3 0x1A5F SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP7 SWAP1 PUSH3 0x25C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x1AB7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x1ADD SWAP2 SWAP1 PUSH3 0x2426 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x1B2D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x1B53 SWAP2 SWAP1 PUSH3 0x2426 JUMP JUMPDEST SWAP1 POP DUP2 ISZERO PUSH3 0x1BED JUMPI PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH3 0x1B7B SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND DUP5 PUSH3 0x116F JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xE8EDA9DF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 PUSH4 0xE8EDA9DF SWAP3 PUSH3 0x1BB8 SWAP3 SWAP2 AND SWAP1 DUP7 SWAP1 CALLER SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x4 ADD PUSH3 0x262E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1BD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x1BE8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST DUP1 ISZERO PUSH3 0x1C85 JUMPI PUSH1 0x2 SLOAD PUSH1 0x4 SLOAD PUSH3 0x1C13 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND DUP4 PUSH3 0x116F JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xE8EDA9DF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 PUSH4 0xE8EDA9DF SWAP4 PUSH3 0x1C50 SWAP4 SWAP1 SWAP2 AND SWAP2 DUP7 SWAP2 CALLER SWAP2 PUSH1 0x0 SWAP2 ADD PUSH3 0x262E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1C6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x1C80 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2FE4A15F PUSH1 0xE2 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xBF92857C SWAP1 PUSH1 0x24 ADD PUSH1 0xC0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x1CCF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x1CF5 SWAP2 SWAP1 PUSH3 0x26B2 JUMP JUMPDEST SWAP6 POP POP POP POP POP POP PUSH8 0xE043DA617250000 DUP2 GT PUSH3 0x980 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4865616C746820666163746F7220697320746F6F206C6F770000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x2D3 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1DFE DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x1E80 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH3 0x980 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH3 0x1E1F SWAP2 SWAP1 PUSH3 0x260A JUMP JUMPDEST PUSH3 0x980 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x2D3 JUMP JUMPDEST PUSH1 0x60 PUSH3 0x1E91 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH3 0x1E9B JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH3 0x1EFE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x2D3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH3 0x1F57 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x2D3 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH3 0x1F75 SWAP2 SWAP1 PUSH3 0x26FD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH3 0x1FB4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH3 0x1FB9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH3 0x1FCB DUP3 DUP3 DUP7 PUSH3 0x1FD6 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH3 0x1FE7 JUMPI POP DUP2 PUSH3 0x1E94 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH3 0x1FF8 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x2D3 SWAP2 SWAP1 PUSH3 0x271B JUMP JUMPDEST PUSH2 0x74F DUP1 PUSH3 0x2731 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x2038 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x2062 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH3 0xB34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x180 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH3 0x20BC JUMPI PUSH3 0x20BC PUSH3 0x207F JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x20D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH3 0x20F2 JUMPI PUSH3 0x20F2 PUSH3 0x207F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x211D JUMPI PUSH3 0x211D PUSH3 0x207F JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x2137 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0xB34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH3 0x2186 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH3 0x2193 DUP2 PUSH3 0x2069 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH3 0x21A5 DUP2 PUSH3 0x2069 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH3 0x21C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x21D1 DUP10 DUP4 DUP11 ADD PUSH3 0x20C2 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x21E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x21F7 DUP9 DUP3 DUP10 ADD PUSH3 0x20C2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH3 0x220A DUP2 PUSH3 0x2157 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x222E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH3 0x223B DUP2 PUSH3 0x2157 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x2263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH3 0x1E94 DUP2 PUSH3 0x2157 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x2305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x1E94 DUP2 PUSH3 0x2157 JUMP JUMPDEST DUP1 MLOAD PUSH3 0x231F DUP2 PUSH3 0x2157 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH3 0x2350 JUMPI PUSH3 0x2350 PUSH3 0x2324 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x2373 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x2359 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH3 0x2396 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH3 0x2356 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND DUP3 MSTORE DUP9 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP8 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP7 DUP2 AND PUSH1 0x60 DUP4 ADD MSTORE DUP6 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x100 PUSH1 0xA0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH3 0x23F8 DUP4 DUP3 ADD DUP8 PUSH3 0x237C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0xC0 DUP5 ADD MSTORE PUSH3 0x240E DUP2 DUP7 PUSH3 0x237C JUMP JUMPDEST SWAP2 POP POP DUP3 ISZERO ISZERO PUSH1 0xE0 DUP4 ADD MSTORE SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x2439 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x2453 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x2479 JUMPI PUSH3 0x2479 PUSH3 0x207F JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 MLOAD DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH3 0x231F DUP2 PUSH3 0x2069 JUMP JUMPDEST DUP1 MLOAD PUSH5 0xFFFFFFFFFF DUP2 AND DUP2 EQ PUSH3 0x231F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH3 0x231F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x180 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x24CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x24D9 PUSH3 0x2095 JUMP JUMPDEST PUSH3 0x24E5 DUP5 DUP5 PUSH3 0x2440 JUMP JUMPDEST DUP2 MSTORE PUSH3 0x24F5 PUSH1 0x20 DUP5 ADD PUSH3 0x2486 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH3 0x2508 PUSH1 0x40 DUP5 ADD PUSH3 0x2486 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x251B PUSH1 0x60 DUP5 ADD PUSH3 0x2486 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH3 0x252E PUSH1 0x80 DUP5 ADD PUSH3 0x2486 JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH3 0x2541 PUSH1 0xA0 DUP5 ADD PUSH3 0x2486 JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE PUSH3 0x2554 PUSH1 0xC0 DUP5 ADD PUSH3 0x2493 JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE PUSH3 0x2567 PUSH1 0xE0 DUP5 ADD PUSH3 0x2312 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 PUSH3 0x257C DUP2 DUP6 ADD PUSH3 0x2312 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x120 PUSH3 0x2590 DUP5 DUP3 ADD PUSH3 0x2312 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x140 PUSH3 0x25A4 DUP5 DUP3 ADD PUSH3 0x2312 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x160 PUSH3 0x25B8 DUP5 DUP3 ADD PUSH3 0x24A9 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x261D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH3 0x1E94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP3 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0xFFFF SWAP1 SWAP2 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH3 0x2670 JUMPI PUSH3 0x2670 PUSH3 0x2324 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH3 0x2350 JUMPI PUSH3 0x2350 PUSH3 0x2324 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x26A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH3 0x26CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 MLOAD SWAP6 POP PUSH1 0x20 DUP8 ADD MLOAD SWAP5 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP4 POP PUSH1 0x60 DUP8 ADD MLOAD SWAP3 POP PUSH1 0x80 DUP8 ADD MLOAD SWAP2 POP PUSH1 0xA0 DUP8 ADD MLOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH3 0x2711 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH3 0x2356 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH3 0x1E94 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x237C JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x74F CODESIZE SUB DUP1 PUSH2 0x74F DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x22 SWAP2 PUSH2 0x44C JUMP JUMPDEST PUSH2 0x4D PUSH1 0x1 PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D51 PUSH2 0x50C JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x708 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE EQ PUSH2 0x69 JUMPI PUSH2 0x69 PUSH2 0x52D JUMP JUMPDEST PUSH2 0x75 DUP3 DUP3 PUSH1 0x0 PUSH2 0x7C JUMP JUMPDEST POP POP PUSH2 0x5AD JUMP JUMPDEST PUSH2 0x85 DUP4 PUSH2 0x13D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0x1CF3B03A6CF19FA2BABA4DF148E9DCABEDEA7F8A5C07840E207E5C089BE95D3E SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0xC6 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x138 JUMPI PUSH2 0x136 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5C60DA1B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x543 JUMP JUMPDEST DUP4 PUSH2 0x2AF JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE PUSH2 0x1A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720626561636F6E206973206E6F74206120636F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x1D1C9858DD PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x21B DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5C60DA1B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x20C SWAP2 SWAP1 PUSH2 0x543 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x280 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A20626561636F6E20696D706C656D656E746174696F6E2069 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x1CC81B9BDD08184818DBDB9D1C9858DD PUSH1 0x82 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x19E JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x708 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2D4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x728 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x2DD JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE PUSH2 0x345 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1B9D1C9858DD PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x19E JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x360 SWAP2 SWAP1 PUSH2 0x55E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x39B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3A0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x3B1 DUP3 DUP3 DUP7 PUSH2 0x3BD JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x3CC JUMPI POP DUP2 PUSH2 0x3B6 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x3DC JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x57A JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x40D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x443 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x42B JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x45F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x468 DUP4 PUSH2 0x3F6 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x485 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x499 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x4AB JUMPI PUSH2 0x4AB PUSH2 0x412 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x4D3 JUMPI PUSH2 0x4D3 PUSH2 0x412 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x4EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4FD DUP4 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x428 JUMP JUMPDEST DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x2D7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x555 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2D4 DUP3 PUSH2 0x3F6 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x570 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x428 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x599 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x428 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14C DUP1 PUSH2 0x5BC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x13 JUMPI PUSH2 0x11 PUSH2 0x17 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11 JUMPDEST PUSH2 0x27 PUSH2 0x22 PUSH2 0x29 JUMP JUMPDEST PUSH2 0xC2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5C60DA1B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x99 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0xE6 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0xE1 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x10F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x4410E42AD26F06CD4CED 0x24 0x2E 0xA8 DUP14 PUSH28 0x1CC6876FA826773BF7479AB242D5C86464736F6C63430008150033A3 CREATE 0xAD PUSH21 0xE5423AEBFD80D3EF4346578335A9A72AEAEE59FF6C 0xB3 PC 0x2B CALLDATALOAD SGT RETURNDATASIZE POP COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x70667358221220D9353D SWAP9 0xC2 0xF6 PUSH19 0x1D5D9579295898E60A60A24B56B245501707BF 0xC 0xC2 0xE9 CALLVALUE CREATE 0x4E PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        1159,
        9416
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x11"
    },
    "12": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "DUP1",
      "path": "0"
    },
    "16": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "REVERT",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "POP",
      "path": "0"
    },
    "19": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "21": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "LT",
      "path": "0"
    },
    "23": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x114"
    },
    "27": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "28": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "30": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "31": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "33": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "SHR",
      "path": "0"
    },
    "34": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "DUP1",
      "path": "0"
    },
    "35": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8DA5CB5B"
    },
    "40": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "GT",
      "path": "0"
    },
    "41": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xA3"
    },
    "45": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "46": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "DUP1",
      "path": "0"
    },
    "47": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xBD865CBA"
    },
    "52": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "GT",
      "path": "0"
    },
    "53": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x6E"
    },
    "57": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "58": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "DUP1",
      "path": "0"
    },
    "59": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xBD865CBA"
    },
    "64": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "EQ",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x250"
    },
    "69": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "70": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "DUP1",
      "path": "0"
    },
    "71": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xC9C46225"
    },
    "76": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "EQ",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x26C"
    },
    "81": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "82": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "DUP1",
      "path": "0"
    },
    "83": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE58346B8"
    },
    "88": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "EQ",
      "path": "0"
    },
    "89": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x280"
    },
    "93": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "94": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "DUP1",
      "path": "0"
    },
    "95": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF2FDE38B"
    },
    "100": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "EQ",
      "path": "0"
    },
    "101": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x297"
    },
    "105": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "106": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "108": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "DUP1",
      "path": "0"
    },
    "109": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "REVERT",
      "path": "0"
    },
    "110": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "111": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "DUP1",
      "path": "0"
    },
    "112": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8DA5CB5B"
    },
    "117": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "EQ",
      "path": "0"
    },
    "118": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1E0"
    },
    "122": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "123": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "DUP1",
      "path": "0"
    },
    "124": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x9092FE75"
    },
    "129": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "EQ",
      "path": "0"
    },
    "130": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1F2"
    },
    "134": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "135": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "DUP1",
      "path": "0"
    },
    "136": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xAB65051F"
    },
    "141": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "EQ",
      "path": "0"
    },
    "142": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x204"
    },
    "146": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "147": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "DUP1",
      "path": "0"
    },
    "148": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xB4DCFC77"
    },
    "153": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "EQ",
      "path": "0"
    },
    "154": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x23C"
    },
    "158": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "159": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "161": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "DUP1",
      "path": "0"
    },
    "162": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "REVERT",
      "path": "0"
    },
    "163": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "164": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "DUP1",
      "path": "0"
    },
    "165": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x576B6052"
    },
    "170": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "GT",
      "path": "0"
    },
    "171": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xE4"
    },
    "175": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "176": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "DUP1",
      "path": "0"
    },
    "177": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x576B6052"
    },
    "182": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "EQ",
      "path": "0"
    },
    "183": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x191"
    },
    "187": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "188": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "DUP1",
      "path": "0"
    },
    "189": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x58CB5E9D"
    },
    "194": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "EQ",
      "path": "0"
    },
    "195": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1A8"
    },
    "199": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "200": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "DUP1",
      "path": "0"
    },
    "201": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x653E9B89"
    },
    "206": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "EQ",
      "path": "0"
    },
    "207": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1BF"
    },
    "211": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "212": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "DUP1",
      "path": "0"
    },
    "213": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x715018A6"
    },
    "218": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "EQ",
      "path": "0"
    },
    "219": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1D6"
    },
    "223": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "224": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "226": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "DUP1",
      "path": "0"
    },
    "227": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "REVERT",
      "path": "0"
    },
    "228": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "229": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "DUP1",
      "path": "0"
    },
    "230": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x7562AB"
    },
    "234": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "EQ",
      "path": "0"
    },
    "235": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x119"
    },
    "239": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "240": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "DUP1",
      "path": "0"
    },
    "241": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x2B9C4841"
    },
    "246": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "EQ",
      "path": "0"
    },
    "247": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x132"
    },
    "251": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "252": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "DUP1",
      "path": "0"
    },
    "253": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x43204FF3"
    },
    "258": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "EQ",
      "path": "0"
    },
    "259": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x166"
    },
    "263": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "264": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "DUP1",
      "path": "0"
    },
    "265": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x48B0C087"
    },
    "270": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "EQ",
      "path": "0"
    },
    "271": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x17D"
    },
    "275": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "276": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "277": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "279": {
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "DUP1",
      "path": "0"
    },
    "280": {
      "first_revert": true,
      "fn": null,
      "offset": [
        1159,
        9416
      ],
      "op": "REVERT",
      "path": "0"
    },
    "281": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        7794,
        7982
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "282": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        7794,
        7982
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x130"
    },
    "286": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        7794,
        7982
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x12A"
    },
    "290": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        7794,
        7982
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "291": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        7794,
        7982
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "293": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        7794,
        7982
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x2022"
    },
    "297": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "jump": "i",
      "offset": [
        7794,
        7982
      ],
      "op": "JUMP",
      "path": "0"
    },
    "298": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        7794,
        7982
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "299": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        7794,
        7982
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x2AE"
    },
    "303": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "jump": "i",
      "offset": [
        7794,
        7982
      ],
      "op": "JUMP",
      "path": "0"
    },
    "304": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        7794,
        7982
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "305": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        7794,
        7982
      ],
      "op": "STOP",
      "path": "0"
    },
    "306": {
      "offset": [
        1859,
        1901
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "307": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        1859,
        1901
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x149"
    },
    "311": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        1859,
        1901
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x143"
    },
    "315": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        1859,
        1901
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "316": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        1859,
        1901
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "318": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        1859,
        1901
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x204F"
    },
    "322": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "jump": "i",
      "offset": [
        1859,
        1901
      ],
      "op": "JUMP",
      "path": "0"
    },
    "323": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        1859,
        1901
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "324": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        1859,
        1901
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x326"
    },
    "328": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "jump": "i",
      "offset": [
        1859,
        1901
      ],
      "op": "JUMP",
      "path": "0"
    },
    "329": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        1859,
        1901
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "330": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        1859,
        1901
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "332": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        1859,
        1901
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "333": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "337": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "339": {
      "op": "SHL"
    },
    "340": {
      "op": "SUB"
    },
    "341": {
      "op": "SWAP1"
    },
    "342": {
      "op": "SWAP2"
    },
    "343": {
      "op": "AND"
    },
    "344": {
      "op": "DUP2"
    },
    "345": {
      "op": "MSTORE"
    },
    "346": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "348": {
      "op": "ADD"
    },
    "349": {
      "offset": [
        1859,
        1901
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "350": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        1859,
        1901
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "352": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        1859,
        1901
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "353": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        1859,
        1901
      ],
      "op": "DUP1",
      "path": "0"
    },
    "354": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        1859,
        1901
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "355": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        1859,
        1901
      ],
      "op": "SUB",
      "path": "0"
    },
    "356": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        1859,
        1901
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "357": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        1859,
        1901
      ],
      "op": "RETURN",
      "path": "0"
    },
    "358": {
      "fn": "RangeManager.generateRange",
      "offset": [
        2929,
        3884
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "359": {
      "fn": "RangeManager.generateRange",
      "offset": [
        2929,
        3884
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x130"
    },
    "363": {
      "fn": "RangeManager.generateRange",
      "offset": [
        2929,
        3884
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x177"
    },
    "367": {
      "fn": "RangeManager.generateRange",
      "offset": [
        2929,
        3884
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "368": {
      "fn": "RangeManager.generateRange",
      "offset": [
        2929,
        3884
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "370": {
      "fn": "RangeManager.generateRange",
      "offset": [
        2929,
        3884
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x216D"
    },
    "374": {
      "fn": "RangeManager.generateRange",
      "jump": "i",
      "offset": [
        2929,
        3884
      ],
      "op": "JUMP",
      "path": "0"
    },
    "375": {
      "fn": "RangeManager.generateRange",
      "offset": [
        2929,
        3884
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "376": {
      "fn": "RangeManager.generateRange",
      "offset": [
        2929,
        3884
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x351"
    },
    "380": {
      "fn": "RangeManager.generateRange",
      "jump": "i",
      "offset": [
        2929,
        3884
      ],
      "op": "JUMP",
      "path": "0"
    },
    "381": {
      "offset": [
        1485,
        1505
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "382": {
      "fn": "RangeManager.generateRange",
      "offset": [
        1485,
        1505
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "384": {
      "fn": "RangeManager.generateRange",
      "offset": [
        1485,
        1505
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "385": {
      "fn": "RangeManager.generateRange",
      "offset": [
        1485,
        1505
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x149"
    },
    "389": {
      "fn": "RangeManager.generateRange",
      "offset": [
        1485,
        1505
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "394": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "396": {
      "op": "SHL"
    },
    "397": {
      "op": "SUB"
    },
    "398": {
      "offset": [
        1485,
        1505
      ],
      "op": "AND",
      "path": "0"
    },
    "399": {
      "fn": "RangeManager.generateRange",
      "offset": [
        1485,
        1505
      ],
      "op": "DUP2",
      "path": "0"
    },
    "400": {
      "fn": "RangeManager.generateRange",
      "offset": [
        1485,
        1505
      ],
      "op": "JUMP",
      "path": "0"
    },
    "401": {
      "fn": "RangeManager.initRange",
      "offset": [
        4052,
        4499
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "402": {
      "fn": "RangeManager.initRange",
      "offset": [
        4052,
        4499
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x130"
    },
    "406": {
      "fn": "RangeManager.initRange",
      "offset": [
        4052,
        4499
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1A2"
    },
    "410": {
      "fn": "RangeManager.initRange",
      "offset": [
        4052,
        4499
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "411": {
      "fn": "RangeManager.initRange",
      "offset": [
        4052,
        4499
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "413": {
      "fn": "RangeManager.initRange",
      "offset": [
        4052,
        4499
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x2218"
    },
    "417": {
      "fn": "RangeManager.initRange",
      "jump": "i",
      "offset": [
        4052,
        4499
      ],
      "op": "JUMP",
      "path": "0"
    },
    "418": {
      "fn": "RangeManager.initRange",
      "offset": [
        4052,
        4499
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "419": {
      "fn": "RangeManager.initRange",
      "offset": [
        4052,
        4499
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x806"
    },
    "423": {
      "fn": "RangeManager.initRange",
      "jump": "i",
      "offset": [
        4052,
        4499
      ],
      "op": "JUMP",
      "path": "0"
    },
    "424": {
      "offset": [
        1813,
        1855
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "425": {
      "fn": "RangeManager.initRange",
      "offset": [
        1813,
        1855
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x149"
    },
    "429": {
      "fn": "RangeManager.initRange",
      "offset": [
        1813,
        1855
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1B9"
    },
    "433": {
      "fn": "RangeManager.initRange",
      "offset": [
        1813,
        1855
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "434": {
      "fn": "RangeManager.initRange",
      "offset": [
        1813,
        1855
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "436": {
      "fn": "RangeManager.initRange",
      "offset": [
        1813,
        1855
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x204F"
    },
    "440": {
      "fn": "RangeManager.initRange",
      "jump": "i",
      "offset": [
        1813,
        1855
      ],
      "op": "JUMP",
      "path": "0"
    },
    "441": {
      "fn": "RangeManager.initRange",
      "offset": [
        1813,
        1855
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "442": {
      "fn": "RangeManager.initRange",
      "offset": [
        1813,
        1855
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x985"
    },
    "446": {
      "fn": "RangeManager.initRange",
      "jump": "i",
      "offset": [
        1813,
        1855
      ],
      "op": "JUMP",
      "path": "0"
    },
    "447": {
      "fn": "RangeManager.removeAssetsFromStep",
      "offset": [
        6054,
        6166
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "448": {
      "fn": "RangeManager.removeAssetsFromStep",
      "offset": [
        6054,
        6166
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x130"
    },
    "452": {
      "fn": "RangeManager.removeAssetsFromStep",
      "offset": [
        6054,
        6166
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1D0"
    },
    "456": {
      "fn": "RangeManager.removeAssetsFromStep",
      "offset": [
        6054,
        6166
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "457": {
      "fn": "RangeManager.removeAssetsFromStep",
      "offset": [
        6054,
        6166
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "459": {
      "fn": "RangeManager.removeAssetsFromStep",
      "offset": [
        6054,
        6166
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x204F"
    },
    "463": {
      "fn": "RangeManager.removeAssetsFromStep",
      "jump": "i",
      "offset": [
        6054,
        6166
      ],
      "op": "JUMP",
      "path": "0"
    },
    "464": {
      "fn": "RangeManager.removeAssetsFromStep",
      "offset": [
        6054,
        6166
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "465": {
      "fn": "RangeManager.removeAssetsFromStep",
      "offset": [
        6054,
        6166
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x996"
    },
    "469": {
      "fn": "RangeManager.removeAssetsFromStep",
      "jump": "i",
      "offset": [
        6054,
        6166
      ],
      "op": "JUMP",
      "path": "0"
    },
    "470": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "471": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH3",
      "path": "10",
      "value": "0x130"
    },
    "475": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH3",
      "path": "10",
      "value": "0x9DD"
    },
    "479": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "10"
    },
    "480": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "481": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 0,
      "value": "0x1"
    },
    "483": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "488": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "490": {
      "op": "SHL"
    },
    "491": {
      "op": "SUB"
    },
    "492": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "10"
    },
    "493": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH3",
      "path": "10",
      "value": "0x149"
    },
    "497": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMP",
      "path": "10"
    },
    "498": {
      "fn": "RangeManager.getStepListLength",
      "offset": [
        9303,
        9414
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "499": {
      "fn": "RangeManager.getStepListLength",
      "offset": [
        9394,
        9402
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x5"
    },
    "501": {
      "fn": "RangeManager.getStepListLength",
      "offset": [
        9394,
        9409
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "502": {
      "fn": "RangeManager.getStepListLength",
      "offset": [
        9303,
        9414
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "504": {
      "fn": "RangeManager.getStepListLength",
      "offset": [
        9303,
        9414
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "505": {
      "op": "SWAP1"
    },
    "506": {
      "op": "DUP2"
    },
    "507": {
      "op": "MSTORE"
    },
    "508": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "510": {
      "op": "ADD"
    },
    "511": {
      "fn": "RangeManager.getStepListLength",
      "offset": [
        9303,
        9414
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x15D"
    },
    "515": {
      "op": "JUMP"
    },
    "516": {
      "offset": [
        1785,
        1808
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "517": {
      "fn": "RangeManager.getStepListLength",
      "offset": [
        1785,
        1808
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x21B"
    },
    "521": {
      "fn": "RangeManager.getStepListLength",
      "offset": [
        1785,
        1808
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x215"
    },
    "525": {
      "fn": "RangeManager.getStepListLength",
      "offset": [
        1785,
        1808
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "526": {
      "fn": "RangeManager.getStepListLength",
      "offset": [
        1785,
        1808
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "528": {
      "fn": "RangeManager.getStepListLength",
      "offset": [
        1785,
        1808
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x204F"
    },
    "532": {
      "fn": "RangeManager.getStepListLength",
      "jump": "i",
      "offset": [
        1785,
        1808
      ],
      "op": "JUMP",
      "path": "0"
    },
    "533": {
      "fn": "RangeManager.getStepListLength",
      "offset": [
        1785,
        1808
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "534": {
      "fn": "RangeManager.getStepListLength",
      "offset": [
        1785,
        1808
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xA18"
    },
    "538": {
      "fn": "RangeManager.getStepListLength",
      "jump": "i",
      "offset": [
        1785,
        1808
      ],
      "op": "JUMP",
      "path": "0"
    },
    "539": {
      "fn": "RangeManager.getStepListLength",
      "offset": [
        1785,
        1808
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "540": {
      "fn": "RangeManager.getStepListLength",
      "offset": [
        1785,
        1808
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "542": {
      "fn": "RangeManager.getStepListLength",
      "offset": [
        1785,
        1808
      ],
      "op": "DUP1",
      "path": "0"
    },
    "543": {
      "fn": "RangeManager.getStepListLength",
      "offset": [
        1785,
        1808
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "544": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "546": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "548": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "550": {
      "op": "SHL"
    },
    "551": {
      "op": "SUB"
    },
    "552": {
      "op": "SWAP4"
    },
    "553": {
      "op": "DUP5"
    },
    "554": {
      "op": "AND"
    },
    "555": {
      "op": "DUP2"
    },
    "556": {
      "op": "MSTORE"
    },
    "557": {
      "op": "SWAP3"
    },
    "558": {
      "op": "SWAP1"
    },
    "559": {
      "op": "SWAP2"
    },
    "560": {
      "op": "AND"
    },
    "561": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "563": {
      "op": "DUP4"
    },
    "564": {
      "op": "ADD"
    },
    "565": {
      "op": "MSTORE"
    },
    "566": {
      "op": "ADD"
    },
    "567": {
      "offset": [
        1785,
        1808
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x15D"
    },
    "571": {
      "op": "JUMP"
    },
    "572": {
      "offset": [
        1242,
        1274
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "573": {
      "fn": "RangeManager.getStepListLength",
      "offset": [
        1242,
        1274
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "575": {
      "fn": "RangeManager.getStepListLength",
      "offset": [
        1242,
        1274
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "576": {
      "fn": "RangeManager.getStepListLength",
      "offset": [
        1242,
        1274
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x149"
    },
    "580": {
      "fn": "RangeManager.getStepListLength",
      "offset": [
        1242,
        1274
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "585": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "587": {
      "op": "SHL"
    },
    "588": {
      "op": "SUB"
    },
    "589": {
      "offset": [
        1242,
        1274
      ],
      "op": "AND",
      "path": "0"
    },
    "590": {
      "fn": "RangeManager.getStepListLength",
      "offset": [
        1242,
        1274
      ],
      "op": "DUP2",
      "path": "0"
    },
    "591": {
      "fn": "RangeManager.getStepListLength",
      "offset": [
        1242,
        1274
      ],
      "op": "JUMP",
      "path": "0"
    },
    "592": {
      "offset": [
        1596,
        1721
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "593": {
      "fn": "RangeManager.getStepListLength",
      "offset": [
        1596,
        1721
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x149"
    },
    "597": {
      "offset": [
        1678,
        1720
      ],
      "op": "PUSH20",
      "path": "0",
      "value": "0xC36442B4A4522E871399CD717ABDD847AB11FE88"
    },
    "618": {
      "offset": [
        1596,
        1721
      ],
      "op": "DUP2",
      "path": "0"
    },
    "619": {
      "fn": "RangeManager.getStepListLength",
      "offset": [
        1596,
        1721
      ],
      "op": "JUMP",
      "path": "0"
    },
    "620": {
      "offset": [
        1461,
        1481
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "621": {
      "fn": "RangeManager.getStepListLength",
      "offset": [
        1461,
        1481
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "623": {
      "fn": "RangeManager.getStepListLength",
      "offset": [
        1461,
        1481
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "624": {
      "fn": "RangeManager.getStepListLength",
      "offset": [
        1461,
        1481
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x149"
    },
    "628": {
      "fn": "RangeManager.getStepListLength",
      "offset": [
        1461,
        1481
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "629": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "633": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "635": {
      "op": "SHL"
    },
    "636": {
      "op": "SUB"
    },
    "637": {
      "offset": [
        1461,
        1481
      ],
      "op": "AND",
      "path": "0"
    },
    "638": {
      "fn": "RangeManager.getStepListLength",
      "offset": [
        1461,
        1481
      ],
      "op": "DUP2",
      "path": "0"
    },
    "639": {
      "fn": "RangeManager.getStepListLength",
      "offset": [
        1461,
        1481
      ],
      "op": "JUMP",
      "path": "0"
    },
    "640": {
      "fn": "RangeManager.transferAssetsIntoTickerStep",
      "offset": [
        8253,
        8441
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "641": {
      "fn": "RangeManager.transferAssetsIntoTickerStep",
      "offset": [
        8253,
        8441
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x130"
    },
    "645": {
      "fn": "RangeManager.transferAssetsIntoTickerStep",
      "offset": [
        8253,
        8441
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x291"
    },
    "649": {
      "fn": "RangeManager.transferAssetsIntoTickerStep",
      "offset": [
        8253,
        8441
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "650": {
      "fn": "RangeManager.transferAssetsIntoTickerStep",
      "offset": [
        8253,
        8441
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "652": {
      "fn": "RangeManager.transferAssetsIntoTickerStep",
      "offset": [
        8253,
        8441
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x2022"
    },
    "656": {
      "fn": "RangeManager.transferAssetsIntoTickerStep",
      "jump": "i",
      "offset": [
        8253,
        8441
      ],
      "op": "JUMP",
      "path": "0"
    },
    "657": {
      "fn": "RangeManager.transferAssetsIntoTickerStep",
      "offset": [
        8253,
        8441
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "658": {
      "fn": "RangeManager.transferAssetsIntoTickerStep",
      "offset": [
        8253,
        8441
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xA4E"
    },
    "662": {
      "fn": "RangeManager.transferAssetsIntoTickerStep",
      "jump": "i",
      "offset": [
        8253,
        8441
      ],
      "op": "JUMP",
      "path": "0"
    },
    "663": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "664": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH3",
      "path": "10",
      "value": "0x130"
    },
    "668": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH3",
      "path": "10",
      "value": "0x2A8"
    },
    "672": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "673": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "675": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH3",
      "path": "10",
      "value": "0x2250"
    },
    "679": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "10"
    },
    "680": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "681": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH3",
      "path": "10",
      "value": "0xA95"
    },
    "685": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "10"
    },
    "686": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        7794,
        7982
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "687": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x2"
    },
    "689": {
      "offset": [
        2325,
        2332
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "691": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        2325,
        2332
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "692": {
      "offset": [
        2325,
        2344
      ],
      "op": "SUB",
      "path": "42"
    },
    "693": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH3",
      "path": "42",
      "value": "0x2DC"
    },
    "697": {
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "698": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "700": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        2317,
        2380
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "701": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "705": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "707": {
      "op": "SHL"
    },
    "708": {
      "offset": [
        2317,
        2380
      ],
      "op": "DUP2",
      "path": "42"
    },
    "709": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        2317,
        2380
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "710": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "712": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        2317,
        2380
      ],
      "op": "ADD",
      "path": "42"
    },
    "713": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH3",
      "path": "42",
      "value": "0x2D3"
    },
    "717": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        2317,
        2380
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "718": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH3",
      "path": "42",
      "value": "0x2270"
    },
    "722": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "jump": "i",
      "offset": [
        2317,
        2380
      ],
      "op": "JUMP",
      "path": "42"
    },
    "723": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "724": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "726": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        2317,
        2380
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "727": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        2317,
        2380
      ],
      "op": "DUP1",
      "path": "42"
    },
    "728": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        2317,
        2380
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "729": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        2317,
        2380
      ],
      "op": "SUB",
      "path": "42"
    },
    "730": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        2317,
        2380
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "731": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        2317,
        2380
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "42"
    },
    "732": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "733": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x2"
    },
    "735": {
      "offset": [
        2455,
        2462
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "737": {
      "offset": [
        2455,
        2473
      ],
      "op": "DUP2",
      "path": "42"
    },
    "738": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        2455,
        2473
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "739": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        2455,
        2473
      ],
      "op": "SSTORE",
      "path": "42"
    },
    "740": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        2455,
        2473
      ],
      "op": "POP",
      "path": "42"
    },
    "741": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        7908,
        7977
      ],
      "op": "PUSH3",
      "path": "0",
      "statement": 2,
      "value": "0x31C"
    },
    "745": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        7931,
        7946
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "747": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        7947,
        7951
      ],
      "op": "DUP5",
      "path": "0"
    },
    "748": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        7931,
        7952
      ],
      "op": "DUP2",
      "path": "0"
    },
    "749": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        7931,
        7952
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "750": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        7931,
        7952
      ],
      "op": "DUP2",
      "path": "0"
    },
    "751": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        7931,
        7952
      ],
      "op": "LT",
      "path": "0"
    },
    "752": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        7931,
        7952
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x2FE"
    },
    "756": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        7931,
        7952
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "757": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        7931,
        7952
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x2FE"
    },
    "761": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        7931,
        7952
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x22A7"
    },
    "765": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "jump": "i",
      "offset": [
        7931,
        7952
      ],
      "op": "JUMP",
      "path": "0"
    },
    "766": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        7931,
        7952
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "767": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        7931,
        7952
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "769": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        7931,
        7952
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "770": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        7931,
        7952
      ],
      "op": "DUP3",
      "path": "0"
    },
    "771": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        7931,
        7952
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "772": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        7931,
        7952
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "774": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        7931,
        7952
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "775": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        7931,
        7952
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "776": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        7931,
        7952
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "777": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        7931,
        7952
      ],
      "op": "ADD",
      "path": "0"
    },
    "778": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        7931,
        7952
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "779": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "781": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "783": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "785": {
      "op": "SHL"
    },
    "786": {
      "op": "SUB"
    },
    "787": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        7931,
        7952
      ],
      "op": "AND",
      "path": "0"
    },
    "788": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        7954,
        7958
      ],
      "op": "DUP5",
      "path": "0"
    },
    "789": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        7960,
        7967
      ],
      "op": "DUP5",
      "path": "0"
    },
    "790": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        7969,
        7976
      ],
      "op": "DUP5",
      "path": "0"
    },
    "791": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        7908,
        7930
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xB37"
    },
    "795": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "jump": "i",
      "offset": [
        7908,
        7977
      ],
      "op": "JUMP",
      "path": "0"
    },
    "796": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        7908,
        7977
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "797": {
      "op": "POP"
    },
    "798": {
      "op": "POP"
    },
    "799": {
      "offset": [
        1701,
        1702
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1"
    },
    "801": {
      "offset": [
        2628,
        2635
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "803": {
      "offset": [
        2628,
        2650
      ],
      "op": "SSTORE",
      "path": "42"
    },
    "804": {
      "op": "POP"
    },
    "805": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "jump": "o",
      "offset": [
        7794,
        7982
      ],
      "op": "JUMP",
      "path": "0"
    },
    "806": {
      "offset": [
        1859,
        1901
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "807": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        1859,
        1901
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "809": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        1859,
        1901
      ],
      "op": "DUP2",
      "path": "0"
    },
    "810": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        1859,
        1901
      ],
      "op": "DUP2",
      "path": "0"
    },
    "811": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        1859,
        1901
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "812": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        1859,
        1901
      ],
      "op": "DUP2",
      "path": "0"
    },
    "813": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        1859,
        1901
      ],
      "op": "LT",
      "path": "0"
    },
    "814": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        1859,
        1901
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x337"
    },
    "818": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        1859,
        1901
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "819": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        1859,
        1901
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "821": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        1859,
        1901
      ],
      "op": "DUP1",
      "path": "0"
    },
    "822": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        1859,
        1901
      ],
      "op": "REVERT",
      "path": "0"
    },
    "823": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        1859,
        1901
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "824": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        1859,
        1901
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "826": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        1859,
        1901
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "827": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        1859,
        1901
      ],
      "op": "DUP3",
      "path": "0"
    },
    "828": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        1859,
        1901
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "829": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        1859,
        1901
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "831": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        1859,
        1901
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "832": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        1859,
        1901
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "833": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        1859,
        1901
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "834": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        1859,
        1901
      ],
      "op": "ADD",
      "path": "0"
    },
    "835": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        1859,
        1901
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "836": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "838": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "840": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "842": {
      "op": "SHL"
    },
    "843": {
      "op": "SUB"
    },
    "844": {
      "offset": [
        1859,
        1901
      ],
      "op": "AND",
      "path": "0"
    },
    "845": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "offset": [
        1859,
        1901
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "846": {
      "op": "POP"
    },
    "847": {
      "offset": [
        1859,
        1901
      ],
      "op": "DUP2",
      "path": "0"
    },
    "848": {
      "fn": "RangeManager.transferAssetsIntoRangerStep",
      "jump": "o",
      "offset": [
        1859,
        1901
      ],
      "op": "JUMP",
      "path": "0"
    },
    "849": {
      "fn": "RangeManager.generateRange",
      "offset": [
        2929,
        3884
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "850": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "852": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "855": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "857": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "859": {
      "op": "SHL"
    },
    "860": {
      "op": "SUB"
    },
    "861": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "10"
    },
    "862": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "70",
      "statement": 3
    },
    "863": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "10"
    },
    "864": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH3",
      "path": "10",
      "value": "0x37E"
    },
    "868": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "869": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "871": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "872": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "876": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "878": {
      "op": "SHL"
    },
    "879": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "10"
    },
    "880": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "881": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "883": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "10"
    },
    "884": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH3",
      "path": "10",
      "value": "0x2D3"
    },
    "888": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "889": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH3",
      "path": "10",
      "value": "0x22BD"
    },
    "893": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "10"
    },
    "894": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "895": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "897": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "899": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "901": {
      "op": "SHL"
    },
    "902": {
      "op": "SUB"
    },
    "903": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3083,
        3105
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 4
    },
    "904": {
      "branch": 68,
      "fn": "RangeManager.generateRange",
      "offset": [
        3083,
        3105
      ],
      "op": "AND",
      "path": "0"
    },
    "905": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3075,
        3124
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x3C7"
    },
    "909": {
      "branch": 68,
      "fn": "RangeManager.generateRange",
      "offset": [
        3075,
        3124
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "910": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3075,
        3124
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "912": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3075,
        3124
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "913": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "917": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "919": {
      "op": "SHL"
    },
    "920": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3075,
        3124
      ],
      "op": "DUP2",
      "path": "0"
    },
    "921": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3075,
        3124
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "922": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "924": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3075,
        3124
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "926": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3075,
        3124
      ],
      "op": "DUP3",
      "path": "0"
    },
    "927": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3075,
        3124
      ],
      "op": "ADD",
      "path": "0"
    },
    "928": {
      "op": "MSTORE"
    },
    "929": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "931": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "933": {
      "op": "DUP3"
    },
    "934": {
      "op": "ADD"
    },
    "935": {
      "op": "MSTORE"
    },
    "936": {
      "op": "PUSH14",
      "value": "0x24B73B30B634B2103132B0B1B7B7"
    },
    "951": {
      "op": "PUSH1",
      "value": "0x91"
    },
    "953": {
      "op": "SHL"
    },
    "954": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "956": {
      "op": "DUP3"
    },
    "957": {
      "op": "ADD"
    },
    "958": {
      "op": "MSTORE"
    },
    "959": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "961": {
      "op": "ADD"
    },
    "962": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3075,
        3124
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x2D3"
    },
    "966": {
      "op": "JUMP"
    },
    "967": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3075,
        3124
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "968": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3130,
        3161
      ],
      "op": "PUSH3",
      "path": "0",
      "statement": 5,
      "value": "0x3D3"
    },
    "972": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3144,
        3152
      ],
      "op": "DUP6",
      "path": "0"
    },
    "973": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3154,
        3160
      ],
      "op": "DUP6",
      "path": "0"
    },
    "974": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3130,
        3143
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xFE5"
    },
    "978": {
      "fn": "RangeManager.generateRange",
      "jump": "i",
      "offset": [
        3130,
        3161
      ],
      "op": "JUMP",
      "path": "0"
    },
    "979": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3130,
        3161
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "980": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3182,
        3204
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 6,
      "value": "0x40"
    },
    "982": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3182,
        3204
      ],
      "op": "DUP1",
      "path": "0"
    },
    "983": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3182,
        3204
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "984": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3182,
        3204
      ],
      "op": "DUP1",
      "path": "0"
    },
    "985": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3182,
        3204
      ],
      "op": "DUP3",
      "path": "0"
    },
    "986": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3182,
        3204
      ],
      "op": "ADD",
      "path": "0"
    },
    "987": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3182,
        3204
      ],
      "op": "DUP3",
      "path": "0"
    },
    "988": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3182,
        3204
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "989": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "993": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "995": {
      "op": "SHL"
    },
    "996": {
      "op": "SUB"
    },
    "997": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3182,
        3204
      ],
      "op": "DUP1",
      "path": "0"
    },
    "998": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3182,
        3204
      ],
      "op": "DUP9",
      "path": "0"
    },
    "999": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3182,
        3204
      ],
      "op": "AND",
      "path": "0"
    },
    "1000": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3182,
        3204
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1001": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3182,
        3204
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1002": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3182,
        3204
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1003": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3182,
        3204
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1004": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3182,
        3204
      ],
      "op": "AND",
      "path": "0"
    },
    "1005": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3182,
        3204
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1007": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3182,
        3204
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1008": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3182,
        3204
      ],
      "op": "ADD",
      "path": "0"
    },
    "1009": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3182,
        3204
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1010": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3182,
        3204
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1011": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3182,
        3204
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1012": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3167,
        3175
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1014": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3167,
        3206
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1015": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3167,
        3206
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1016": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3167,
        3206
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1018": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3167,
        3206
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1019": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3167,
        3206
      ],
      "op": "ADD",
      "path": "0"
    },
    "1020": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3167,
        3206
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1021": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3167,
        3206
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1022": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1024": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3167,
        3206
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1025": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3167,
        3206
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1026": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3167,
        3206
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1027": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3167,
        3206
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1028": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3167,
        3206
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1029": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3167,
        3206
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1030": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3167,
        3206
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1031": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3167,
        3206
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1032": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3167,
        3206
      ],
      "op": "AND",
      "path": "0"
    },
    "1033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1035": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1037": {
      "op": "SHL"
    },
    "1038": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3167,
        3206
      ],
      "op": "MUL",
      "path": "0"
    },
    "1039": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3167,
        3206
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1040": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3167,
        3206
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1041": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3167,
        3206
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1042": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3167,
        3206
      ],
      "op": "AND",
      "path": "0"
    },
    "1043": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3167,
        3206
      ],
      "op": "OR",
      "path": "0"
    },
    "1044": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3167,
        3206
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0"
    },
    "1077": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3167,
        3206
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1078": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3167,
        3206
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1079": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3167,
        3206
      ],
      "op": "ADD",
      "path": "0"
    },
    "1080": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3167,
        3206
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1081": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3167,
        3206
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1082": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3167,
        3206
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1083": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3167,
        3206
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1084": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3231,
        3258
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1085": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3231,
        3258
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1086": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3247,
        3253
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1087": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3247,
        3253
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1088": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3231,
        3258
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x44A"
    },
    "1092": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3231,
        3258
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1093": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3231,
        3258
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x2014"
    },
    "1097": {
      "fn": "RangeManager.generateRange",
      "jump": "i",
      "offset": [
        3231,
        3258
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1098": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3231,
        3258
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1099": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1103": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1105": {
      "op": "SHL"
    },
    "1106": {
      "op": "SUB"
    },
    "1107": {
      "op": "SWAP1"
    },
    "1108": {
      "op": "SWAP2"
    },
    "1109": {
      "op": "AND"
    },
    "1110": {
      "op": "DUP2"
    },
    "1111": {
      "op": "MSTORE"
    },
    "1112": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1114": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1116": {
      "op": "DUP3"
    },
    "1117": {
      "op": "ADD"
    },
    "1118": {
      "op": "DUP2"
    },
    "1119": {
      "op": "SWAP1"
    },
    "1120": {
      "op": "MSTORE"
    },
    "1121": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1123": {
      "op": "SWAP1"
    },
    "1124": {
      "op": "DUP3"
    },
    "1125": {
      "op": "ADD"
    },
    "1126": {
      "op": "MSTORE"
    },
    "1127": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1129": {
      "op": "ADD"
    },
    "1130": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3231,
        3258
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1132": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3231,
        3258
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1133": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3231,
        3258
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1134": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3231,
        3258
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1135": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3231,
        3258
      ],
      "op": "SUB",
      "path": "0"
    },
    "1136": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3231,
        3258
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1137": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3231,
        3258
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1139": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3231,
        3258
      ],
      "op": "CREATE",
      "path": "0"
    },
    "1140": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3231,
        3258
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1141": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3231,
        3258
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1142": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3231,
        3258
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1143": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3231,
        3258
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1144": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3231,
        3258
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x486"
    },
    "1148": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3231,
        3258
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1149": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3231,
        3258
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1150": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3231,
        3258
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1152": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3231,
        3258
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1153": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3231,
        3258
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1154": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3231,
        3258
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1155": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3231,
        3258
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1157": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3231,
        3258
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1158": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3231,
        3258
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1159": {
      "op": "POP"
    },
    "1160": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3264,
        3279
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 7,
      "value": "0x6"
    },
    "1162": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3264,
        3319
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1163": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3264,
        3319
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1164": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3264,
        3319
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1166": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3264,
        3319
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1167": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3264,
        3319
      ],
      "op": "ADD",
      "path": "0"
    },
    "1168": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3264,
        3319
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1169": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3264,
        3319
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1170": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1172": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3264,
        3319
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1173": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3264,
        3319
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1174": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3264,
        3319
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1175": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3264,
        3319
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1176": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3264,
        3319
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F"
    },
    "1209": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3264,
        3319
      ],
      "op": "ADD",
      "path": "0"
    },
    "1210": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3264,
        3319
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1211": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3264,
        3319
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1216": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1218": {
      "op": "SHL"
    },
    "1219": {
      "op": "SUB"
    },
    "1220": {
      "op": "NOT"
    },
    "1221": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3264,
        3319
      ],
      "op": "AND",
      "path": "0"
    },
    "1222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1224": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1226": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1228": {
      "op": "SHL"
    },
    "1229": {
      "op": "SUB"
    },
    "1230": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3264,
        3319
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1231": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3264,
        3319
      ],
      "op": "AND",
      "path": "0"
    },
    "1232": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3264,
        3319
      ],
      "op": "OR",
      "path": "0"
    },
    "1233": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3264,
        3319
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1234": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3264,
        3319
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1235": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3332,
        3359
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 8,
      "value": "0x40"
    },
    "1237": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3332,
        3359
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1238": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3264,
        3319
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1239": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3264,
        3319
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1240": {
      "op": "POP"
    },
    "1241": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3348,
        3354
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1242": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3348,
        3354
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1243": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3332,
        3359
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x4E5"
    },
    "1247": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3332,
        3359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1248": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3332,
        3359
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x2014"
    },
    "1252": {
      "fn": "RangeManager.generateRange",
      "jump": "i",
      "offset": [
        3332,
        3359
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1253": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3332,
        3359
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1254": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1258": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1260": {
      "op": "SHL"
    },
    "1261": {
      "op": "SUB"
    },
    "1262": {
      "op": "SWAP1"
    },
    "1263": {
      "op": "SWAP2"
    },
    "1264": {
      "op": "AND"
    },
    "1265": {
      "op": "DUP2"
    },
    "1266": {
      "op": "MSTORE"
    },
    "1267": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1269": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1271": {
      "op": "DUP3"
    },
    "1272": {
      "op": "ADD"
    },
    "1273": {
      "op": "DUP2"
    },
    "1274": {
      "op": "SWAP1"
    },
    "1275": {
      "op": "MSTORE"
    },
    "1276": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1278": {
      "op": "SWAP1"
    },
    "1279": {
      "op": "DUP3"
    },
    "1280": {
      "op": "ADD"
    },
    "1281": {
      "op": "MSTORE"
    },
    "1282": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1284": {
      "op": "ADD"
    },
    "1285": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3332,
        3359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1287": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3332,
        3359
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1288": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3332,
        3359
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1289": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3332,
        3359
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1290": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3332,
        3359
      ],
      "op": "SUB",
      "path": "0"
    },
    "1291": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3332,
        3359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1292": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3332,
        3359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1294": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3332,
        3359
      ],
      "op": "CREATE",
      "path": "0"
    },
    "1295": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3332,
        3359
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1296": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3332,
        3359
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1297": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3332,
        3359
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1298": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3332,
        3359
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1299": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3332,
        3359
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x521"
    },
    "1303": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3332,
        3359
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1304": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3332,
        3359
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1305": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3332,
        3359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1307": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3332,
        3359
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1308": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3332,
        3359
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1309": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3332,
        3359
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1310": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3332,
        3359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1312": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3332,
        3359
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1313": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3332,
        3359
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1314": {
      "op": "POP"
    },
    "1315": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3365,
        3380
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 9,
      "value": "0x7"
    },
    "1317": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3365,
        3420
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1318": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3365,
        3420
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1319": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3365,
        3420
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1321": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3365,
        3420
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1322": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3365,
        3420
      ],
      "op": "ADD",
      "path": "0"
    },
    "1323": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3365,
        3420
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1324": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3365,
        3420
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1325": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1327": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3365,
        3420
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1328": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3365,
        3420
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1329": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3365,
        3420
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1330": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3365,
        3420
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688"
    },
    "1363": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3365,
        3420
      ],
      "op": "ADD",
      "path": "0"
    },
    "1364": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3365,
        3420
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1365": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3365,
        3420
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1366": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1370": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1372": {
      "op": "SHL"
    },
    "1373": {
      "op": "SUB"
    },
    "1374": {
      "op": "NOT"
    },
    "1375": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3365,
        3420
      ],
      "op": "AND",
      "path": "0"
    },
    "1376": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1380": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1382": {
      "op": "SHL"
    },
    "1383": {
      "op": "SUB"
    },
    "1384": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3365,
        3420
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1385": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3365,
        3420
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1386": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3365,
        3420
      ],
      "op": "AND",
      "path": "0"
    },
    "1387": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3365,
        3420
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1388": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3365,
        3420
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1389": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3365,
        3420
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1390": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3365,
        3420
      ],
      "op": "OR",
      "path": "0"
    },
    "1391": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3365,
        3420
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1392": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3365,
        3420
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1393": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3365,
        3420
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1394": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3502
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1396": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3502
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1397": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3525
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1399": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3525
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1400": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3525
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1401": {
      "op": "PUSH4",
      "value": "0x7F32D67F"
    },
    "1406": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1408": {
      "op": "SHL"
    },
    "1409": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3525
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1410": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3525
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1411": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3525
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1412": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3525
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1413": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3365,
        3420
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1414": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3365,
        3420
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "1415": {
      "op": "POP"
    },
    "1416": {
      "op": "SWAP3"
    },
    "1417": {
      "op": "SWAP4"
    },
    "1418": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3502
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1419": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3502
      ],
      "op": "AND",
      "path": "0"
    },
    "1420": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3502
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1421": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3523
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFE65ACFE"
    },
    "1426": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3523
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1427": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3525
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1429": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3525
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1430": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3525
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1431": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3525
      ],
      "op": "ADD",
      "path": "0"
    },
    "1432": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3525
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1433": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3365,
        3420
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1435": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3365,
        3420
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1436": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3525
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1437": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3525
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1438": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3525
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1439": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3525
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1440": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3525
      ],
      "op": "SUB",
      "path": "0"
    },
    "1441": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3525
      ],
      "op": "ADD",
      "path": "0"
    },
    "1442": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3525
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1443": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3502
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1444": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3525
      ],
      "op": "GAS",
      "path": "0"
    },
    "1445": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3525
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "1446": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3525
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1447": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3525
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1448": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3525
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1449": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3525
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x5B7"
    },
    "1453": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3525
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1454": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3525
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1455": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3525
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1457": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3525
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1458": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3525
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1459": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3525
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1460": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3525
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1462": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3525
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1463": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3525
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1464": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3525
      ],
      "op": "POP",
      "path": "0"
    },
    "1465": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3525
      ],
      "op": "POP",
      "path": "0"
    },
    "1466": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3525
      ],
      "op": "POP",
      "path": "0"
    },
    "1467": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3525
      ],
      "op": "POP",
      "path": "0"
    },
    "1468": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3525
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1470": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3525
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1471": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3525
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1472": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3525
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1474": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3525
      ],
      "op": "NOT",
      "path": "0"
    },
    "1475": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3525
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1477": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3525
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1478": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3525
      ],
      "op": "ADD",
      "path": "0"
    },
    "1479": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3525
      ],
      "op": "AND",
      "path": "0"
    },
    "1480": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3525
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1481": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3525
      ],
      "op": "ADD",
      "path": "0"
    },
    "1482": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3525
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1483": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3525
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1485": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3525
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1486": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3525
      ],
      "op": "POP",
      "path": "0"
    },
    "1487": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3525
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1488": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3525
      ],
      "op": "ADD",
      "path": "0"
    },
    "1489": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3525
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1490": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3525
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x5DD"
    },
    "1494": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3525
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1495": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3525
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1496": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3525
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x22F2"
    },
    "1500": {
      "fn": "RangeManager.generateRange",
      "jump": "i",
      "offset": [
        3490,
        3525
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1501": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3490,
        3525
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1502": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1506": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1508": {
      "op": "SHL"
    },
    "1509": {
      "op": "SUB"
    },
    "1510": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3542
      ],
      "op": "AND",
      "path": "0"
    },
    "1511": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3542
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFCA513A8"
    },
    "1516": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3544
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1518": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3544
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1519": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3544
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1520": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3544
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "1525": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3544
      ],
      "op": "AND",
      "path": "0"
    },
    "1526": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3544
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "1528": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3544
      ],
      "op": "SHL",
      "path": "0"
    },
    "1529": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3544
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1530": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3544
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1531": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3544
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1533": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3544
      ],
      "op": "ADD",
      "path": "0"
    },
    "1534": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3544
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1536": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3544
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1538": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3544
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1539": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3544
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1540": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3544
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1541": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3544
      ],
      "op": "SUB",
      "path": "0"
    },
    "1542": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3544
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1543": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3544
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1544": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3544
      ],
      "op": "GAS",
      "path": "0"
    },
    "1545": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3544
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "1546": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3544
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1547": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3544
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1548": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3544
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1549": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3544
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x61B"
    },
    "1553": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3544
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1554": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3544
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1555": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3544
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1557": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3544
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1558": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3544
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1559": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3544
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1560": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3544
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1562": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3544
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1563": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3544
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1564": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3544
      ],
      "op": "POP",
      "path": "0"
    },
    "1565": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3544
      ],
      "op": "POP",
      "path": "0"
    },
    "1566": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3544
      ],
      "op": "POP",
      "path": "0"
    },
    "1567": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3544
      ],
      "op": "POP",
      "path": "0"
    },
    "1568": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3544
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1570": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3544
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1571": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3544
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1572": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3544
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1574": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3544
      ],
      "op": "NOT",
      "path": "0"
    },
    "1575": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3544
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1577": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3544
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1578": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3544
      ],
      "op": "ADD",
      "path": "0"
    },
    "1579": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3544
      ],
      "op": "AND",
      "path": "0"
    },
    "1580": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3544
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1581": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3544
      ],
      "op": "ADD",
      "path": "0"
    },
    "1582": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3544
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1583": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3544
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1585": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3544
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1586": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3544
      ],
      "op": "POP",
      "path": "0"
    },
    "1587": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3544
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1588": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3544
      ],
      "op": "ADD",
      "path": "0"
    },
    "1589": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3544
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1590": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3544
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x641"
    },
    "1594": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3544
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1595": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3544
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1596": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3544
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x22F2"
    },
    "1600": {
      "fn": "RangeManager.generateRange",
      "jump": "i",
      "offset": [
        3459,
        3544
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1601": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3459,
        3544
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1602": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3571
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 10,
      "value": "0x6"
    },
    "1604": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3573,
        3595
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1605": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3573,
        3595
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1606": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3426,
        3545
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1607": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3426,
        3545
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1608": {
      "op": "POP"
    },
    "1609": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3571
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1610": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3573,
        3599
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x657"
    },
    "1614": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3573,
        3599
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1615": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3598,
        3599
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1617": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3598,
        3599
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1618": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3573,
        3599
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x233A"
    },
    "1622": {
      "fn": "RangeManager.generateRange",
      "jump": "i",
      "offset": [
        3573,
        3599
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1623": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3573,
        3599
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1624": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3601
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1625": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3601
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1626": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3601
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1627": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3601
      ],
      "op": "LT",
      "path": "0"
    },
    "1628": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3601
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x66A"
    },
    "1632": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3601
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1633": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3601
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x66A"
    },
    "1637": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3601
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x22A7"
    },
    "1641": {
      "fn": "RangeManager.generateRange",
      "jump": "i",
      "offset": [
        3556,
        3601
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1642": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3601
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1643": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3601
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1645": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3601
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1646": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3601
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1647": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3601
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1648": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3601
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1650": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3601
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1651": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3601
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1652": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3601
      ],
      "op": "ADD",
      "path": "0"
    },
    "1653": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3601
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1654": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3620,
        3627
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1656": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3620,
        3627
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1657": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3629,
        3636
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1659": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3629,
        3636
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1660": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3629,
        3636
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1661": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3682
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1663": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3682
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1664": {
      "op": "PUSH4",
      "value": "0xD3518877"
    },
    "1669": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1671": {
      "op": "SHL"
    },
    "1672": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3682
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1673": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3682
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1674": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1676": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1678": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1680": {
      "op": "SHL"
    },
    "1681": {
      "op": "SUB"
    },
    "1682": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3601
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1683": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3601
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1684": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3601
      ],
      "op": "AND",
      "path": "0"
    },
    "1685": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3601
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "1686": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3611
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xD3518877"
    },
    "1691": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3611
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "1692": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3682
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x6BA"
    },
    "1696": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3682
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "1697": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3612,
        3618
      ],
      "op": "DUP10",
      "path": "0"
    },
    "1698": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3612,
        3618
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "1699": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3620,
        3627
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1700": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3620,
        3627
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1701": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3620,
        3627
      ],
      "op": "AND",
      "path": "0"
    },
    "1702": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3620,
        3627
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1703": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3629,
        3636
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1704": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3629,
        3636
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1705": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3629,
        3636
      ],
      "op": "AND",
      "path": "0"
    },
    "1706": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3629,
        3636
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1707": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3638,
        3646
      ],
      "op": "DUP16",
      "path": "0"
    },
    "1708": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3638,
        3646
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1709": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3648,
        3654
      ],
      "op": "DUP16",
      "path": "0"
    },
    "1710": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3648,
        3654
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1711": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3656,
        3665
      ],
      "op": "DUP16",
      "path": "0"
    },
    "1712": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3656,
        3665
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1713": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3667,
        3674
      ],
      "op": "DUP16",
      "path": "0"
    },
    "1714": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3667,
        3674
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1715": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3601
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1716": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3682
      ],
      "op": "ADD",
      "path": "0"
    },
    "1717": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3682
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x23AA"
    },
    "1721": {
      "fn": "RangeManager.generateRange",
      "jump": "i",
      "offset": [
        3556,
        3682
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1722": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3682
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1723": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3682
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1725": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3682
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1727": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3682
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1728": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3682
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1729": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3682
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1730": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3682
      ],
      "op": "SUB",
      "path": "0"
    },
    "1731": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3682
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1732": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3682
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1734": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3682
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1735": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3682
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1736": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3682
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "1737": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3682
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1738": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3682
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1739": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3682
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1740": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3682
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x6D5"
    },
    "1744": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3682
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1745": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3682
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1747": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3682
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1748": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3682
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1749": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3682
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1750": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3682
      ],
      "op": "POP",
      "path": "0"
    },
    "1751": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3682
      ],
      "op": "GAS",
      "path": "0"
    },
    "1752": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3682
      ],
      "op": "CALL",
      "path": "0"
    },
    "1753": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3682
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1754": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3682
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1755": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3682
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1756": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3682
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x6EA"
    },
    "1760": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3682
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1761": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3682
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1762": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3682
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1764": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3682
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1765": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3682
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1766": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3682
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1767": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3682
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1769": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3682
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1770": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3556,
        3682
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1771": {
      "op": "POP"
    },
    "1772": {
      "op": "POP"
    },
    "1773": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3703
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 11,
      "value": "0x7"
    },
    "1775": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3705,
        3727
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1776": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3705,
        3727
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1777": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3703
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1778": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3703
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1779": {
      "op": "POP"
    },
    "1780": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3705,
        3731
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x702"
    },
    "1784": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3705,
        3731
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1785": {
      "op": "POP"
    },
    "1786": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3730,
        3731
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1788": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3730,
        3731
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1789": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3705,
        3731
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x233A"
    },
    "1793": {
      "fn": "RangeManager.generateRange",
      "jump": "i",
      "offset": [
        3705,
        3731
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1794": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3705,
        3731
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1795": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3733
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1796": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3733
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1797": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3733
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1798": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3733
      ],
      "op": "LT",
      "path": "0"
    },
    "1799": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3733
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x715"
    },
    "1803": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3733
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1804": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3733
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x715"
    },
    "1808": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3733
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x22A7"
    },
    "1812": {
      "fn": "RangeManager.generateRange",
      "jump": "i",
      "offset": [
        3688,
        3733
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1813": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3733
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1814": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3733
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1816": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3733
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1817": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3733
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1818": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3733
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1819": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3733
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1821": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3733
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1822": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3733
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1823": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3733
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1824": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3733
      ],
      "op": "ADD",
      "path": "0"
    },
    "1825": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3733
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1826": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3752,
        3759
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1828": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3752,
        3759
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1829": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3761,
        3768
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1831": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3761,
        3768
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1832": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3761,
        3768
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1833": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3813
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1835": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3813
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1836": {
      "op": "PUSH4",
      "value": "0xD3518877"
    },
    "1841": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1843": {
      "op": "SHL"
    },
    "1844": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3813
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1845": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3813
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1850": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1852": {
      "op": "SHL"
    },
    "1853": {
      "op": "SUB"
    },
    "1854": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3733
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1855": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3733
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1856": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3733
      ],
      "op": "AND",
      "path": "0"
    },
    "1857": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3733
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1858": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3743
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xD3518877"
    },
    "1863": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3743
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1864": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3813
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x769"
    },
    "1868": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3813
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1869": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3744,
        3750
      ],
      "op": "DUP9",
      "path": "0"
    },
    "1870": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3744,
        3750
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1871": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3752,
        3759
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1872": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3752,
        3759
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1873": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3752,
        3759
      ],
      "op": "AND",
      "path": "0"
    },
    "1874": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3752,
        3759
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1875": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3761,
        3768
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1876": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3761,
        3768
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1877": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3761,
        3768
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1878": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3761,
        3768
      ],
      "op": "AND",
      "path": "0"
    },
    "1879": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3761,
        3768
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1880": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3770,
        3778
      ],
      "op": "DUP15",
      "path": "0"
    },
    "1881": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3770,
        3778
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1882": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3780,
        3786
      ],
      "op": "DUP15",
      "path": "0"
    },
    "1883": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3780,
        3786
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1884": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3788,
        3797
      ],
      "op": "DUP15",
      "path": "0"
    },
    "1885": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3788,
        3797
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1886": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3799,
        3806
      ],
      "op": "DUP15",
      "path": "0"
    },
    "1887": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3799,
        3806
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1888": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3733
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1890": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3733
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1891": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3813
      ],
      "op": "ADD",
      "path": "0"
    },
    "1892": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3813
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x23AA"
    },
    "1896": {
      "fn": "RangeManager.generateRange",
      "jump": "i",
      "offset": [
        3688,
        3813
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1897": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3813
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1898": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3813
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1900": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3813
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1902": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3813
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1903": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3813
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1904": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3813
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1905": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3813
      ],
      "op": "SUB",
      "path": "0"
    },
    "1906": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3813
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1907": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3813
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1909": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3813
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1910": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3813
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1911": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3813
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "1912": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3813
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1913": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3813
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1914": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3813
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1915": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3813
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x784"
    },
    "1919": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3813
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1920": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3813
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1922": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3813
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1923": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3813
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1924": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3813
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1925": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3813
      ],
      "op": "POP",
      "path": "0"
    },
    "1926": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3813
      ],
      "op": "GAS",
      "path": "0"
    },
    "1927": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3813
      ],
      "op": "CALL",
      "path": "0"
    },
    "1928": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3813
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1929": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3813
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1930": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3813
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1931": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3813
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x799"
    },
    "1935": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3813
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1936": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3813
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1937": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3813
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1939": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3813
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1940": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3813
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1941": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3813
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1942": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3813
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1944": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3813
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1945": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3813
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1946": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3813
      ],
      "op": "POP",
      "path": "0"
    },
    "1947": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3813
      ],
      "op": "POP",
      "path": "0"
    },
    "1948": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3813
      ],
      "op": "POP",
      "path": "0"
    },
    "1949": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3688,
        3813
      ],
      "op": "POP",
      "path": "0"
    },
    "1950": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3825,
        3879
      ],
      "op": "PUSH32",
      "path": "0",
      "statement": 12,
      "value": "0xFC9FD5A154BB65CCEB4F482BB1B19A821C98D99849A7173A72699EE86BC85537"
    },
    "1983": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3834,
        3842
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1984": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3844,
        3850
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1985": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3877,
        3878
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1987": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3852,
        3867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "1989": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3852,
        3874
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1990": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3852,
        3874
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1991": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3852,
        3874
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1992": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3852,
        3874
      ],
      "op": "POP",
      "path": "0"
    },
    "1993": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3852,
        3878
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x7D4"
    },
    "1997": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3852,
        3878
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1998": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3852,
        3878
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1999": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3852,
        3878
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x233A"
    },
    "2003": {
      "fn": "RangeManager.generateRange",
      "jump": "i",
      "offset": [
        3852,
        3878
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2004": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3852,
        3878
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2005": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3825,
        3879
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2007": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3825,
        3879
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2008": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3825,
        3879
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2009": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2013": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2015": {
      "op": "SHL"
    },
    "2016": {
      "op": "SUB"
    },
    "2017": {
      "op": "SWAP5"
    },
    "2018": {
      "op": "DUP6"
    },
    "2019": {
      "op": "AND"
    },
    "2020": {
      "op": "DUP2"
    },
    "2021": {
      "op": "MSTORE"
    },
    "2022": {
      "op": "SWAP4"
    },
    "2023": {
      "op": "SWAP1"
    },
    "2024": {
      "op": "SWAP3"
    },
    "2025": {
      "op": "AND"
    },
    "2026": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2028": {
      "op": "DUP5"
    },
    "2029": {
      "op": "ADD"
    },
    "2030": {
      "op": "MSTORE"
    },
    "2031": {
      "op": "SWAP1"
    },
    "2032": {
      "op": "DUP3"
    },
    "2033": {
      "op": "ADD"
    },
    "2034": {
      "op": "MSTORE"
    },
    "2035": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2037": {
      "op": "ADD"
    },
    "2038": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3825,
        3879
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2040": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3825,
        3879
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2041": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3825,
        3879
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2042": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3825,
        3879
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2043": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3825,
        3879
      ],
      "op": "SUB",
      "path": "0"
    },
    "2044": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3825,
        3879
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2045": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3825,
        3879
      ],
      "op": "LOG1",
      "path": "0"
    },
    "2046": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3069,
        3884
      ],
      "op": "POP",
      "path": "0"
    },
    "2047": {
      "fn": "RangeManager.generateRange",
      "offset": [
        3069,
        3884
      ],
      "op": "POP",
      "path": "0"
    },
    "2048": {
      "fn": "RangeManager.generateRange",
      "offset": [
        2929,
        3884
      ],
      "op": "POP",
      "path": "0"
    },
    "2049": {
      "fn": "RangeManager.generateRange",
      "offset": [
        2929,
        3884
      ],
      "op": "POP",
      "path": "0"
    },
    "2050": {
      "fn": "RangeManager.generateRange",
      "offset": [
        2929,
        3884
      ],
      "op": "POP",
      "path": "0"
    },
    "2051": {
      "fn": "RangeManager.generateRange",
      "offset": [
        2929,
        3884
      ],
      "op": "POP",
      "path": "0"
    },
    "2052": {
      "fn": "RangeManager.generateRange",
      "offset": [
        2929,
        3884
      ],
      "op": "POP",
      "path": "0"
    },
    "2053": {
      "fn": "RangeManager.generateRange",
      "jump": "o",
      "offset": [
        2929,
        3884
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2054": {
      "fn": "RangeManager.initRange",
      "offset": [
        4052,
        4499
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2055": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "2057": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2060": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2062": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2064": {
      "op": "SHL"
    },
    "2065": {
      "op": "SUB"
    },
    "2066": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "10"
    },
    "2067": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "70"
    },
    "2068": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "10"
    },
    "2069": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH3",
      "path": "10",
      "value": "0x833"
    },
    "2073": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2074": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2076": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2077": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2081": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2083": {
      "op": "SHL"
    },
    "2084": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2085": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2086": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2088": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "10"
    },
    "2089": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH3",
      "path": "10",
      "value": "0x2D3"
    },
    "2093": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2094": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH3",
      "path": "10",
      "value": "0x22BD"
    },
    "2098": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2099": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2100": {
      "fn": "RangeManager.initRange",
      "offset": [
        4136,
        4143
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 13,
      "value": "0x3"
    },
    "2102": {
      "fn": "RangeManager.initRange",
      "offset": [
        4136,
        4143
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2103": {
      "fn": "RangeManager.initRange",
      "offset": [
        4136,
        4196
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x84D"
    },
    "2107": {
      "fn": "RangeManager.initRange",
      "offset": [
        4136,
        4196
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2108": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2110": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2112": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2114": {
      "op": "SHL"
    },
    "2115": {
      "op": "SUB"
    },
    "2116": {
      "fn": "RangeManager.initRange",
      "offset": [
        4136,
        4143
      ],
      "op": "AND",
      "path": "0"
    },
    "2117": {
      "fn": "RangeManager.initRange",
      "offset": [
        4161,
        4171
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2118": {
      "fn": "RangeManager.initRange",
      "offset": [
        4181,
        4185
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "2119": {
      "fn": "RangeManager.initRange",
      "offset": [
        4188,
        4195
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2120": {
      "fn": "RangeManager.initRange",
      "offset": [
        4136,
        4160
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1113"
    },
    "2124": {
      "fn": "RangeManager.initRange",
      "jump": "i",
      "offset": [
        4136,
        4196
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2125": {
      "fn": "RangeManager.initRange",
      "offset": [
        4136,
        4196
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2126": {
      "fn": "RangeManager.initRange",
      "offset": [
        4202,
        4209
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 14,
      "value": "0x3"
    },
    "2128": {
      "fn": "RangeManager.initRange",
      "offset": [
        4202,
        4209
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2129": {
      "fn": "RangeManager.initRange",
      "offset": [
        4202,
        4244
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x866"
    },
    "2133": {
      "fn": "RangeManager.initRange",
      "offset": [
        4202,
        4244
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2138": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2140": {
      "op": "SHL"
    },
    "2141": {
      "op": "SUB"
    },
    "2142": {
      "fn": "RangeManager.initRange",
      "offset": [
        4202,
        4209
      ],
      "op": "AND",
      "path": "0"
    },
    "2143": {
      "fn": "RangeManager.initRange",
      "offset": [
        4232,
        4234
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2144": {
      "fn": "RangeManager.initRange",
      "offset": [
        4236,
        4243
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2145": {
      "fn": "RangeManager.initRange",
      "offset": [
        4202,
        4231
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x116F"
    },
    "2149": {
      "fn": "RangeManager.initRange",
      "jump": "i",
      "offset": [
        4202,
        4244
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2150": {
      "fn": "RangeManager.initRange",
      "offset": [
        4202,
        4244
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2151": {
      "fn": "RangeManager.initRange",
      "offset": [
        4250,
        4257
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 15,
      "value": "0x4"
    },
    "2153": {
      "fn": "RangeManager.initRange",
      "offset": [
        4250,
        4257
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2154": {
      "fn": "RangeManager.initRange",
      "offset": [
        4250,
        4310
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x880"
    },
    "2158": {
      "fn": "RangeManager.initRange",
      "offset": [
        4250,
        4310
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2161": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2163": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2165": {
      "op": "SHL"
    },
    "2166": {
      "op": "SUB"
    },
    "2167": {
      "fn": "RangeManager.initRange",
      "offset": [
        4250,
        4257
      ],
      "op": "AND",
      "path": "0"
    },
    "2168": {
      "fn": "RangeManager.initRange",
      "offset": [
        4275,
        4285
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2169": {
      "fn": "RangeManager.initRange",
      "offset": [
        4295,
        4299
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "2170": {
      "fn": "RangeManager.initRange",
      "offset": [
        4302,
        4309
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2171": {
      "fn": "RangeManager.initRange",
      "offset": [
        4250,
        4274
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1113"
    },
    "2175": {
      "fn": "RangeManager.initRange",
      "jump": "i",
      "offset": [
        4250,
        4310
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2176": {
      "fn": "RangeManager.initRange",
      "offset": [
        4250,
        4310
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2177": {
      "fn": "RangeManager.initRange",
      "offset": [
        4316,
        4323
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 16,
      "value": "0x4"
    },
    "2179": {
      "fn": "RangeManager.initRange",
      "offset": [
        4316,
        4323
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2180": {
      "fn": "RangeManager.initRange",
      "offset": [
        4316,
        4358
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x899"
    },
    "2184": {
      "fn": "RangeManager.initRange",
      "offset": [
        4316,
        4358
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2185": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2187": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2189": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2191": {
      "op": "SHL"
    },
    "2192": {
      "op": "SUB"
    },
    "2193": {
      "fn": "RangeManager.initRange",
      "offset": [
        4316,
        4323
      ],
      "op": "AND",
      "path": "0"
    },
    "2194": {
      "fn": "RangeManager.initRange",
      "offset": [
        4346,
        4348
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2195": {
      "fn": "RangeManager.initRange",
      "offset": [
        4350,
        4357
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2196": {
      "fn": "RangeManager.initRange",
      "offset": [
        4316,
        4345
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x116F"
    },
    "2200": {
      "fn": "RangeManager.initRange",
      "jump": "i",
      "offset": [
        4316,
        4358
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2201": {
      "fn": "RangeManager.initRange",
      "offset": [
        4316,
        4358
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2202": {
      "fn": "RangeManager.initRange",
      "offset": [
        4364,
        4407
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 17,
      "value": "0x40"
    },
    "2204": {
      "fn": "RangeManager.initRange",
      "offset": [
        4364,
        4407
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2205": {
      "op": "PUSH4",
      "value": "0x14B087E1"
    },
    "2210": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "2212": {
      "op": "SHL"
    },
    "2213": {
      "fn": "RangeManager.initRange",
      "offset": [
        4364,
        4407
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2214": {
      "fn": "RangeManager.initRange",
      "offset": [
        4364,
        4407
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2215": {
      "fn": "RangeManager.initRange",
      "offset": [
        4364,
        4407
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2217": {
      "fn": "RangeManager.initRange",
      "offset": [
        4364,
        4407
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2218": {
      "fn": "RangeManager.initRange",
      "offset": [
        4364,
        4407
      ],
      "op": "ADD",
      "path": "0"
    },
    "2219": {
      "op": "DUP4"
    },
    "2220": {
      "op": "SWAP1"
    },
    "2221": {
      "op": "MSTORE"
    },
    "2222": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2224": {
      "op": "DUP2"
    },
    "2225": {
      "op": "ADD"
    },
    "2226": {
      "op": "DUP3"
    },
    "2227": {
      "op": "SWAP1"
    },
    "2228": {
      "op": "MSTORE"
    },
    "2229": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2233": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2235": {
      "op": "SHL"
    },
    "2236": {
      "op": "SUB"
    },
    "2237": {
      "fn": "RangeManager.initRange",
      "offset": [
        4364,
        4389
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2238": {
      "fn": "RangeManager.initRange",
      "offset": [
        4364,
        4389
      ],
      "op": "AND",
      "path": "0"
    },
    "2239": {
      "fn": "RangeManager.initRange",
      "offset": [
        4364,
        4389
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2240": {
      "fn": "RangeManager.initRange",
      "offset": [
        4364,
        4389
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA5843F08"
    },
    "2245": {
      "fn": "RangeManager.initRange",
      "offset": [
        4364,
        4389
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2246": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2248": {
      "op": "ADD"
    },
    "2249": {
      "fn": "RangeManager.initRange",
      "offset": [
        4364,
        4407
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2251": {
      "fn": "RangeManager.initRange",
      "offset": [
        4364,
        4407
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2253": {
      "fn": "RangeManager.initRange",
      "offset": [
        4364,
        4407
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2254": {
      "fn": "RangeManager.initRange",
      "offset": [
        4364,
        4407
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2255": {
      "fn": "RangeManager.initRange",
      "offset": [
        4364,
        4407
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2256": {
      "fn": "RangeManager.initRange",
      "offset": [
        4364,
        4407
      ],
      "op": "SUB",
      "path": "0"
    },
    "2257": {
      "fn": "RangeManager.initRange",
      "offset": [
        4364,
        4407
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2258": {
      "fn": "RangeManager.initRange",
      "offset": [
        4364,
        4407
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2260": {
      "fn": "RangeManager.initRange",
      "offset": [
        4364,
        4407
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2261": {
      "fn": "RangeManager.initRange",
      "offset": [
        4364,
        4407
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2262": {
      "fn": "RangeManager.initRange",
      "offset": [
        4364,
        4407
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "2263": {
      "fn": "RangeManager.initRange",
      "offset": [
        4364,
        4407
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2264": {
      "fn": "RangeManager.initRange",
      "offset": [
        4364,
        4407
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2265": {
      "fn": "RangeManager.initRange",
      "offset": [
        4364,
        4407
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2266": {
      "fn": "RangeManager.initRange",
      "offset": [
        4364,
        4407
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x8E3"
    },
    "2270": {
      "fn": "RangeManager.initRange",
      "offset": [
        4364,
        4407
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2271": {
      "fn": "RangeManager.initRange",
      "offset": [
        4364,
        4407
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2273": {
      "fn": "RangeManager.initRange",
      "offset": [
        4364,
        4407
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2274": {
      "fn": "RangeManager.initRange",
      "offset": [
        4364,
        4407
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2275": {
      "fn": "RangeManager.initRange",
      "offset": [
        4364,
        4407
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2276": {
      "fn": "RangeManager.initRange",
      "offset": [
        4364,
        4407
      ],
      "op": "POP",
      "path": "0"
    },
    "2277": {
      "fn": "RangeManager.initRange",
      "offset": [
        4364,
        4407
      ],
      "op": "GAS",
      "path": "0"
    },
    "2278": {
      "fn": "RangeManager.initRange",
      "offset": [
        4364,
        4407
      ],
      "op": "CALL",
      "path": "0"
    },
    "2279": {
      "fn": "RangeManager.initRange",
      "offset": [
        4364,
        4407
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2280": {
      "fn": "RangeManager.initRange",
      "offset": [
        4364,
        4407
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2281": {
      "fn": "RangeManager.initRange",
      "offset": [
        4364,
        4407
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2282": {
      "fn": "RangeManager.initRange",
      "offset": [
        4364,
        4407
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x8F8"
    },
    "2286": {
      "fn": "RangeManager.initRange",
      "offset": [
        4364,
        4407
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2287": {
      "fn": "RangeManager.initRange",
      "offset": [
        4364,
        4407
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2288": {
      "fn": "RangeManager.initRange",
      "offset": [
        4364,
        4407
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2290": {
      "fn": "RangeManager.initRange",
      "offset": [
        4364,
        4407
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2291": {
      "fn": "RangeManager.initRange",
      "offset": [
        4364,
        4407
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "2292": {
      "fn": "RangeManager.initRange",
      "offset": [
        4364,
        4407
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2293": {
      "fn": "RangeManager.initRange",
      "offset": [
        4364,
        4407
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2295": {
      "fn": "RangeManager.initRange",
      "offset": [
        4364,
        4407
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2296": {
      "fn": "RangeManager.initRange",
      "offset": [
        4364,
        4407
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2297": {
      "op": "POP"
    },
    "2298": {
      "op": "POP"
    },
    "2299": {
      "fn": "RangeManager.initRange",
      "offset": [
        4448,
        4493
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 18,
      "value": "0x40"
    },
    "2301": {
      "fn": "RangeManager.initRange",
      "offset": [
        4448,
        4493
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2302": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2307": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2309": {
      "op": "SHL"
    },
    "2310": {
      "fn": "RangeManager.initRange",
      "offset": [
        4448,
        4493
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2311": {
      "fn": "RangeManager.initRange",
      "offset": [
        4448,
        4493
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2312": {
      "fn": "RangeManager.initRange",
      "offset": [
        4487,
        4491
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "2313": {
      "fn": "RangeManager.initRange",
      "offset": [
        4448,
        4493
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2315": {
      "fn": "RangeManager.initRange",
      "offset": [
        4448,
        4493
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2316": {
      "fn": "RangeManager.initRange",
      "offset": [
        4448,
        4493
      ],
      "op": "ADD",
      "path": "0"
    },
    "2317": {
      "op": "MSTORE"
    },
    "2318": {
      "fn": "RangeManager.initRange",
      "offset": [
        4413,
        4494
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x980"
    },
    "2322": {
      "fn": "RangeManager.initRange",
      "offset": [
        4413,
        4494
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2323": {
      "op": "POP"
    },
    "2324": {
      "fn": "RangeManager.initRange",
      "offset": [
        4436,
        4446
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2325": {
      "fn": "RangeManager.initRange",
      "offset": [
        4436,
        4446
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2326": {
      "op": "POP"
    },
    "2327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2329": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2331": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2333": {
      "op": "SHL"
    },
    "2334": {
      "op": "SUB"
    },
    "2335": {
      "fn": "RangeManager.initRange",
      "offset": [
        4448,
        4478
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2336": {
      "fn": "RangeManager.initRange",
      "offset": [
        4448,
        4478
      ],
      "op": "AND",
      "path": "0"
    },
    "2337": {
      "fn": "RangeManager.initRange",
      "offset": [
        4448,
        4478
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2338": {
      "fn": "RangeManager.initRange",
      "offset": [
        4448,
        4478
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "2343": {
      "fn": "RangeManager.initRange",
      "offset": [
        4448,
        4478
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2344": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2346": {
      "op": "ADD"
    },
    "2347": {
      "fn": "RangeManager.initRange",
      "offset": [
        4448,
        4493
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2349": {
      "fn": "RangeManager.initRange",
      "offset": [
        4448,
        4493
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2351": {
      "fn": "RangeManager.initRange",
      "offset": [
        4448,
        4493
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2352": {
      "fn": "RangeManager.initRange",
      "offset": [
        4448,
        4493
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2353": {
      "fn": "RangeManager.initRange",
      "offset": [
        4448,
        4493
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2354": {
      "fn": "RangeManager.initRange",
      "offset": [
        4448,
        4493
      ],
      "op": "SUB",
      "path": "0"
    },
    "2355": {
      "fn": "RangeManager.initRange",
      "offset": [
        4448,
        4493
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2356": {
      "fn": "RangeManager.initRange",
      "offset": [
        4448,
        4493
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2357": {
      "fn": "RangeManager.initRange",
      "offset": [
        4448,
        4493
      ],
      "op": "GAS",
      "path": "0"
    },
    "2358": {
      "fn": "RangeManager.initRange",
      "offset": [
        4448,
        4493
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "2359": {
      "fn": "RangeManager.initRange",
      "offset": [
        4448,
        4493
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2360": {
      "fn": "RangeManager.initRange",
      "offset": [
        4448,
        4493
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2361": {
      "fn": "RangeManager.initRange",
      "offset": [
        4448,
        4493
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2362": {
      "fn": "RangeManager.initRange",
      "offset": [
        4448,
        4493
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x948"
    },
    "2366": {
      "fn": "RangeManager.initRange",
      "offset": [
        4448,
        4493
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2367": {
      "fn": "RangeManager.initRange",
      "offset": [
        4448,
        4493
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2368": {
      "fn": "RangeManager.initRange",
      "offset": [
        4448,
        4493
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2370": {
      "fn": "RangeManager.initRange",
      "offset": [
        4448,
        4493
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2371": {
      "fn": "RangeManager.initRange",
      "offset": [
        4448,
        4493
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "2372": {
      "fn": "RangeManager.initRange",
      "offset": [
        4448,
        4493
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2373": {
      "fn": "RangeManager.initRange",
      "offset": [
        4448,
        4493
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2375": {
      "fn": "RangeManager.initRange",
      "offset": [
        4448,
        4493
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2376": {
      "fn": "RangeManager.initRange",
      "offset": [
        4448,
        4493
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2377": {
      "fn": "RangeManager.initRange",
      "offset": [
        4448,
        4493
      ],
      "op": "POP",
      "path": "0"
    },
    "2378": {
      "fn": "RangeManager.initRange",
      "offset": [
        4448,
        4493
      ],
      "op": "POP",
      "path": "0"
    },
    "2379": {
      "fn": "RangeManager.initRange",
      "offset": [
        4448,
        4493
      ],
      "op": "POP",
      "path": "0"
    },
    "2380": {
      "fn": "RangeManager.initRange",
      "offset": [
        4448,
        4493
      ],
      "op": "POP",
      "path": "0"
    },
    "2381": {
      "fn": "RangeManager.initRange",
      "offset": [
        4448,
        4493
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2383": {
      "fn": "RangeManager.initRange",
      "offset": [
        4448,
        4493
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2384": {
      "fn": "RangeManager.initRange",
      "offset": [
        4448,
        4493
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2385": {
      "fn": "RangeManager.initRange",
      "offset": [
        4448,
        4493
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2387": {
      "fn": "RangeManager.initRange",
      "offset": [
        4448,
        4493
      ],
      "op": "NOT",
      "path": "0"
    },
    "2388": {
      "fn": "RangeManager.initRange",
      "offset": [
        4448,
        4493
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2390": {
      "fn": "RangeManager.initRange",
      "offset": [
        4448,
        4493
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2391": {
      "fn": "RangeManager.initRange",
      "offset": [
        4448,
        4493
      ],
      "op": "ADD",
      "path": "0"
    },
    "2392": {
      "fn": "RangeManager.initRange",
      "offset": [
        4448,
        4493
      ],
      "op": "AND",
      "path": "0"
    },
    "2393": {
      "fn": "RangeManager.initRange",
      "offset": [
        4448,
        4493
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2394": {
      "fn": "RangeManager.initRange",
      "offset": [
        4448,
        4493
      ],
      "op": "ADD",
      "path": "0"
    },
    "2395": {
      "fn": "RangeManager.initRange",
      "offset": [
        4448,
        4493
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2396": {
      "fn": "RangeManager.initRange",
      "offset": [
        4448,
        4493
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2398": {
      "fn": "RangeManager.initRange",
      "offset": [
        4448,
        4493
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2399": {
      "fn": "RangeManager.initRange",
      "offset": [
        4448,
        4493
      ],
      "op": "POP",
      "path": "0"
    },
    "2400": {
      "fn": "RangeManager.initRange",
      "offset": [
        4448,
        4493
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2401": {
      "fn": "RangeManager.initRange",
      "offset": [
        4448,
        4493
      ],
      "op": "ADD",
      "path": "0"
    },
    "2402": {
      "fn": "RangeManager.initRange",
      "offset": [
        4448,
        4493
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2403": {
      "fn": "RangeManager.initRange",
      "offset": [
        4448,
        4493
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x96E"
    },
    "2407": {
      "fn": "RangeManager.initRange",
      "offset": [
        4448,
        4493
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2408": {
      "fn": "RangeManager.initRange",
      "offset": [
        4448,
        4493
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2409": {
      "fn": "RangeManager.initRange",
      "offset": [
        4448,
        4493
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x2426"
    },
    "2413": {
      "fn": "RangeManager.initRange",
      "jump": "i",
      "offset": [
        4448,
        4493
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2414": {
      "fn": "RangeManager.initRange",
      "offset": [
        4448,
        4493
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2417": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2419": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2421": {
      "op": "SHL"
    },
    "2422": {
      "op": "SUB"
    },
    "2423": {
      "fn": "RangeManager.initRange",
      "offset": [
        4413,
        4435
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2424": {
      "fn": "RangeManager.initRange",
      "offset": [
        4413,
        4435
      ],
      "op": "AND",
      "path": "0"
    },
    "2425": {
      "fn": "RangeManager.initRange",
      "offset": [
        4413,
        4435
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2426": {
      "fn": "RangeManager.initRange",
      "offset": [
        4413,
        4494
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2427": {
      "fn": "RangeManager.initRange",
      "offset": [
        4413,
        4435
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1228"
    },
    "2431": {
      "fn": "RangeManager.initRange",
      "jump": "i",
      "offset": [
        4413,
        4494
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2432": {
      "fn": "RangeManager.initRange",
      "offset": [
        4413,
        4494
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2433": {
      "fn": "RangeManager.initRange",
      "offset": [
        4052,
        4499
      ],
      "op": "POP",
      "path": "0"
    },
    "2434": {
      "fn": "RangeManager.initRange",
      "offset": [
        4052,
        4499
      ],
      "op": "POP",
      "path": "0"
    },
    "2435": {
      "fn": "RangeManager.initRange",
      "offset": [
        4052,
        4499
      ],
      "op": "POP",
      "path": "0"
    },
    "2436": {
      "fn": "RangeManager.initRange",
      "jump": "o",
      "offset": [
        4052,
        4499
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2437": {
      "offset": [
        1813,
        1855
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2438": {
      "fn": "RangeManager.initRange",
      "offset": [
        1813,
        1855
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "2440": {
      "fn": "RangeManager.initRange",
      "offset": [
        1813,
        1855
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2441": {
      "fn": "RangeManager.initRange",
      "offset": [
        1813,
        1855
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2442": {
      "fn": "RangeManager.initRange",
      "offset": [
        1813,
        1855
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2443": {
      "fn": "RangeManager.initRange",
      "offset": [
        1813,
        1855
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2444": {
      "fn": "RangeManager.initRange",
      "offset": [
        1813,
        1855
      ],
      "op": "LT",
      "path": "0"
    },
    "2445": {
      "fn": "RangeManager.initRange",
      "offset": [
        1813,
        1855
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x337"
    },
    "2449": {
      "fn": "RangeManager.initRange",
      "offset": [
        1813,
        1855
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2450": {
      "fn": "RangeManager.initRange",
      "offset": [
        1813,
        1855
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2452": {
      "fn": "RangeManager.initRange",
      "offset": [
        1813,
        1855
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2453": {
      "fn": "RangeManager.initRange",
      "offset": [
        1813,
        1855
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2454": {
      "fn": "RangeManager.removeAssetsFromStep",
      "offset": [
        6054,
        6166
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2455": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x2"
    },
    "2457": {
      "offset": [
        2325,
        2332
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "2459": {
      "fn": "RangeManager.removeAssetsFromStep",
      "offset": [
        2325,
        2332
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "2460": {
      "offset": [
        2325,
        2344
      ],
      "op": "SUB",
      "path": "42"
    },
    "2461": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH3",
      "path": "42",
      "value": "0x9BB"
    },
    "2465": {
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "2466": {
      "fn": "RangeManager.removeAssetsFromStep",
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "2468": {
      "fn": "RangeManager.removeAssetsFromStep",
      "offset": [
        2317,
        2380
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "2469": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2473": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2475": {
      "op": "SHL"
    },
    "2476": {
      "offset": [
        2317,
        2380
      ],
      "op": "DUP2",
      "path": "42"
    },
    "2477": {
      "fn": "RangeManager.removeAssetsFromStep",
      "offset": [
        2317,
        2380
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "2478": {
      "fn": "RangeManager.removeAssetsFromStep",
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "2480": {
      "fn": "RangeManager.removeAssetsFromStep",
      "offset": [
        2317,
        2380
      ],
      "op": "ADD",
      "path": "42"
    },
    "2481": {
      "fn": "RangeManager.removeAssetsFromStep",
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH3",
      "path": "42",
      "value": "0x2D3"
    },
    "2485": {
      "fn": "RangeManager.removeAssetsFromStep",
      "offset": [
        2317,
        2380
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "2486": {
      "fn": "RangeManager.removeAssetsFromStep",
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH3",
      "path": "42",
      "value": "0x2270"
    },
    "2490": {
      "fn": "RangeManager.removeAssetsFromStep",
      "jump": "i",
      "offset": [
        2317,
        2380
      ],
      "op": "JUMP",
      "path": "42"
    },
    "2491": {
      "fn": "RangeManager.removeAssetsFromStep",
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "2492": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x2"
    },
    "2494": {
      "offset": [
        2455,
        2462
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "2496": {
      "offset": [
        2455,
        2473
      ],
      "op": "SSTORE",
      "path": "42"
    },
    "2497": {
      "fn": "RangeManager.removeAssetsFromStep",
      "offset": [
        6126,
        6146
      ],
      "op": "PUSH3",
      "path": "0",
      "statement": 19,
      "value": "0x9CB"
    },
    "2501": {
      "fn": "RangeManager.removeAssetsFromStep",
      "offset": [
        6141,
        6145
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2502": {
      "fn": "RangeManager.removeAssetsFromStep",
      "offset": [
        6126,
        6140
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x125A"
    },
    "2506": {
      "fn": "RangeManager.removeAssetsFromStep",
      "jump": "i",
      "offset": [
        6126,
        6146
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2507": {
      "fn": "RangeManager.removeAssetsFromStep",
      "offset": [
        6126,
        6146
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2508": {
      "fn": "RangeManager.removeAssetsFromStep",
      "offset": [
        6152,
        6161
      ],
      "op": "PUSH3",
      "path": "0",
      "statement": 20,
      "value": "0x9D5"
    },
    "2512": {
      "fn": "RangeManager.removeAssetsFromStep",
      "offset": [
        6152,
        6159
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1A6D"
    },
    "2516": {
      "fn": "RangeManager.removeAssetsFromStep",
      "jump": "i",
      "offset": [
        6152,
        6161
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2517": {
      "fn": "RangeManager.removeAssetsFromStep",
      "offset": [
        6152,
        6161
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2518": {
      "op": "POP"
    },
    "2519": {
      "offset": [
        1701,
        1702
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1"
    },
    "2521": {
      "offset": [
        2628,
        2635
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "2523": {
      "offset": [
        2628,
        2650
      ],
      "op": "SSTORE",
      "path": "42"
    },
    "2524": {
      "fn": "RangeManager.removeAssetsFromStep",
      "jump": "o",
      "offset": [
        6054,
        6166
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2525": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2526": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "2528": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2533": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2535": {
      "op": "SHL"
    },
    "2536": {
      "op": "SUB"
    },
    "2537": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "10"
    },
    "2538": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "70"
    },
    "2539": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "10"
    },
    "2540": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH3",
      "path": "10",
      "value": "0xA0A"
    },
    "2544": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2545": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2547": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2548": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2552": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2554": {
      "op": "SHL"
    },
    "2555": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2556": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2557": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2559": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "10"
    },
    "2560": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH3",
      "path": "10",
      "value": "0x2D3"
    },
    "2564": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2565": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH3",
      "path": "10",
      "value": "0x22BD"
    },
    "2569": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2570": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2571": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH3",
      "path": "10",
      "statement": 21,
      "value": "0xA16"
    },
    "2575": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2577": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH3",
      "path": "10",
      "value": "0x1D55"
    },
    "2581": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2582": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2583": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2584": {
      "offset": [
        1785,
        1808
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2585": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1785,
        1808
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "2587": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1785,
        1808
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2588": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1785,
        1808
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2589": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1785,
        1808
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2590": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1785,
        1808
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2591": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1785,
        1808
      ],
      "op": "LT",
      "path": "0"
    },
    "2592": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1785,
        1808
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xA29"
    },
    "2596": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1785,
        1808
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2597": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1785,
        1808
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2599": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1785,
        1808
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2600": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1785,
        1808
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2601": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1785,
        1808
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2602": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1785,
        1808
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2604": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1785,
        1808
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2605": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1785,
        1808
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2606": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1785,
        1808
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2607": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1785,
        1808
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2609": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1785,
        1808
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2610": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1785,
        1808
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2611": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1785,
        1808
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2612": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1785,
        1808
      ],
      "op": "ADD",
      "path": "0"
    },
    "2613": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1785,
        1808
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2614": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2618": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2620": {
      "op": "SHL"
    },
    "2621": {
      "op": "SUB"
    },
    "2622": {
      "offset": [
        1785,
        1808
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2623": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1785,
        1808
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2624": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1785,
        1808
      ],
      "op": "AND",
      "path": "0"
    },
    "2625": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1785,
        1808
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2626": {
      "op": "POP"
    },
    "2627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2629": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2631": {
      "op": "SHL"
    },
    "2632": {
      "offset": [
        1785,
        1808
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2633": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1785,
        1808
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2634": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1785,
        1808
      ],
      "op": "DIV",
      "path": "0"
    },
    "2635": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1785,
        1808
      ],
      "op": "AND",
      "path": "0"
    },
    "2636": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1785,
        1808
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2637": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1785,
        1808
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2638": {
      "fn": "RangeManager.transferAssetsIntoTickerStep",
      "offset": [
        8253,
        8441
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2639": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x2"
    },
    "2641": {
      "offset": [
        2325,
        2332
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "2643": {
      "fn": "RangeManager.transferAssetsIntoTickerStep",
      "offset": [
        2325,
        2332
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "2644": {
      "offset": [
        2325,
        2344
      ],
      "op": "SUB",
      "path": "42"
    },
    "2645": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH3",
      "path": "42",
      "value": "0xA73"
    },
    "2649": {
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "2650": {
      "fn": "RangeManager.transferAssetsIntoTickerStep",
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "2652": {
      "fn": "RangeManager.transferAssetsIntoTickerStep",
      "offset": [
        2317,
        2380
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "2653": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2657": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2659": {
      "op": "SHL"
    },
    "2660": {
      "offset": [
        2317,
        2380
      ],
      "op": "DUP2",
      "path": "42"
    },
    "2661": {
      "fn": "RangeManager.transferAssetsIntoTickerStep",
      "offset": [
        2317,
        2380
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "2662": {
      "fn": "RangeManager.transferAssetsIntoTickerStep",
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "2664": {
      "fn": "RangeManager.transferAssetsIntoTickerStep",
      "offset": [
        2317,
        2380
      ],
      "op": "ADD",
      "path": "42"
    },
    "2665": {
      "fn": "RangeManager.transferAssetsIntoTickerStep",
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH3",
      "path": "42",
      "value": "0x2D3"
    },
    "2669": {
      "fn": "RangeManager.transferAssetsIntoTickerStep",
      "offset": [
        2317,
        2380
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "2670": {
      "fn": "RangeManager.transferAssetsIntoTickerStep",
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH3",
      "path": "42",
      "value": "0x2270"
    },
    "2674": {
      "fn": "RangeManager.transferAssetsIntoTickerStep",
      "jump": "i",
      "offset": [
        2317,
        2380
      ],
      "op": "JUMP",
      "path": "42"
    },
    "2675": {
      "fn": "RangeManager.transferAssetsIntoTickerStep",
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "2676": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x2"
    },
    "2678": {
      "offset": [
        2455,
        2462
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "2680": {
      "offset": [
        2455,
        2473
      ],
      "op": "DUP2",
      "path": "42"
    },
    "2681": {
      "fn": "RangeManager.transferAssetsIntoTickerStep",
      "offset": [
        2455,
        2473
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "2682": {
      "fn": "RangeManager.transferAssetsIntoTickerStep",
      "offset": [
        2455,
        2473
      ],
      "op": "SSTORE",
      "path": "42"
    },
    "2683": {
      "fn": "RangeManager.transferAssetsIntoTickerStep",
      "offset": [
        2455,
        2473
      ],
      "op": "POP",
      "path": "42"
    },
    "2684": {
      "fn": "RangeManager.transferAssetsIntoTickerStep",
      "offset": [
        8367,
        8436
      ],
      "op": "PUSH3",
      "path": "0",
      "statement": 22,
      "value": "0x31C"
    },
    "2688": {
      "fn": "RangeManager.transferAssetsIntoTickerStep",
      "offset": [
        8390,
        8405
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "2690": {
      "fn": "RangeManager.transferAssetsIntoTickerStep",
      "offset": [
        8406,
        8410
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2691": {
      "fn": "RangeManager.transferAssetsIntoTickerStep",
      "offset": [
        8390,
        8411
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2692": {
      "fn": "RangeManager.transferAssetsIntoTickerStep",
      "offset": [
        8390,
        8411
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2693": {
      "fn": "RangeManager.transferAssetsIntoTickerStep",
      "offset": [
        8390,
        8411
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2694": {
      "fn": "RangeManager.transferAssetsIntoTickerStep",
      "offset": [
        8390,
        8411
      ],
      "op": "LT",
      "path": "0"
    },
    "2695": {
      "fn": "RangeManager.transferAssetsIntoTickerStep",
      "offset": [
        8390,
        8411
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x2FE"
    },
    "2699": {
      "fn": "RangeManager.transferAssetsIntoTickerStep",
      "offset": [
        8390,
        8411
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2700": {
      "fn": "RangeManager.transferAssetsIntoTickerStep",
      "offset": [
        8390,
        8411
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x2FE"
    },
    "2704": {
      "fn": "RangeManager.transferAssetsIntoTickerStep",
      "offset": [
        8390,
        8411
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x22A7"
    },
    "2708": {
      "fn": "RangeManager.transferAssetsIntoTickerStep",
      "jump": "i",
      "offset": [
        8390,
        8411
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2709": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2710": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "2712": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2717": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2719": {
      "op": "SHL"
    },
    "2720": {
      "op": "SUB"
    },
    "2721": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "10"
    },
    "2722": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "70"
    },
    "2723": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "10"
    },
    "2724": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH3",
      "path": "10",
      "value": "0xAC2"
    },
    "2728": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2729": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2731": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2732": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2736": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2738": {
      "op": "SHL"
    },
    "2739": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2740": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2741": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2743": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "10"
    },
    "2744": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH3",
      "path": "10",
      "value": "0x2D3"
    },
    "2748": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2749": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH3",
      "path": "10",
      "value": "0x22BD"
    },
    "2753": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2754": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2759": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2761": {
      "op": "SHL"
    },
    "2762": {
      "op": "SUB"
    },
    "2763": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 23
    },
    "2764": {
      "branch": 84,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "10"
    },
    "2765": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH3",
      "path": "10",
      "value": "0xB29"
    },
    "2769": {
      "branch": 84,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2770": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2772": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2773": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2777": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2779": {
      "op": "SHL"
    },
    "2780": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2781": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2782": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2784": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2786": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2787": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "10"
    },
    "2788": {
      "op": "MSTORE"
    },
    "2789": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "2791": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2793": {
      "op": "DUP3"
    },
    "2794": {
      "op": "ADD"
    },
    "2795": {
      "op": "MSTORE"
    },
    "2796": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "2829": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2831": {
      "op": "DUP3"
    },
    "2832": {
      "op": "ADD"
    },
    "2833": {
      "op": "MSTORE"
    },
    "2834": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "2841": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2843": {
      "op": "SHL"
    },
    "2844": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2846": {
      "op": "DUP3"
    },
    "2847": {
      "op": "ADD"
    },
    "2848": {
      "op": "MSTORE"
    },
    "2849": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2851": {
      "op": "ADD"
    },
    "2852": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH3",
      "path": "10",
      "value": "0x2D3"
    },
    "2856": {
      "op": "JUMP"
    },
    "2857": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2858": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH3",
      "path": "10",
      "statement": 24,
      "value": "0xB34"
    },
    "2862": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2863": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH3",
      "path": "10",
      "value": "0x1D55"
    },
    "2867": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2868": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2869": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "POP",
      "path": "10"
    },
    "2870": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2871": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6606,
        7525
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2872": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6722,
        6742
      ],
      "op": "PUSH3",
      "path": "0",
      "statement": 25,
      "value": "0xB42"
    },
    "2876": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6737,
        6741
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2877": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6722,
        6736
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x125A"
    },
    "2881": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "jump": "i",
      "offset": [
        6722,
        6742
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2882": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6722,
        6742
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2883": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6752,
        6763
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2884": {
      "branch": 69,
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6752,
        6763
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2885": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6748,
        7023
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xCBA"
    },
    "2889": {
      "branch": 69,
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6748,
        7023
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2890": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6789
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 26,
      "value": "0x2"
    },
    "2892": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6789
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2893": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6838,
        6845
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2895": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6838,
        6845
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2896": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6802,
        6847
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2898": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6802,
        6847
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2899": {
      "op": "PUSH4",
      "value": "0x35EA6A75"
    },
    "2904": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2906": {
      "op": "SHL"
    },
    "2907": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6802,
        6847
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2908": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6802,
        6847
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2909": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2911": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2913": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2915": {
      "op": "SHL"
    },
    "2916": {
      "op": "SUB"
    },
    "2917": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6838,
        6845
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2918": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6838,
        6845
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2919": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6838,
        6845
      ],
      "op": "AND",
      "path": "0"
    },
    "2920": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6802,
        6847
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2922": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6802,
        6847
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2923": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6802,
        6847
      ],
      "op": "ADD",
      "path": "0"
    },
    "2924": {
      "op": "MSTORE"
    },
    "2925": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6789
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2926": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6789
      ],
      "op": "AND",
      "path": "0"
    },
    "2927": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6789
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2928": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6800
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8EBBD26"
    },
    "2933": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6800
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2934": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6789
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2935": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6789
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2936": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6802,
        6829
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x35EA6A75"
    },
    "2941": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6802,
        6829
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2942": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2944": {
      "op": "ADD"
    },
    "2945": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6802,
        6847
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "2948": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6802,
        6847
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2950": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6802,
        6847
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2951": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6802,
        6847
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2952": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6802,
        6847
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2953": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6802,
        6847
      ],
      "op": "SUB",
      "path": "0"
    },
    "2954": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6802,
        6847
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2955": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6802,
        6847
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2956": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6802,
        6847
      ],
      "op": "GAS",
      "path": "0"
    },
    "2957": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6802,
        6847
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "2958": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6802,
        6847
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2959": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6802,
        6847
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2960": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6802,
        6847
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2961": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6802,
        6847
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xB9F"
    },
    "2965": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6802,
        6847
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2966": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6802,
        6847
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2967": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6802,
        6847
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2969": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6802,
        6847
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2970": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6802,
        6847
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "2971": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6802,
        6847
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2972": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6802,
        6847
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2974": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6802,
        6847
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2975": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6802,
        6847
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2976": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6802,
        6847
      ],
      "op": "POP",
      "path": "0"
    },
    "2977": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6802,
        6847
      ],
      "op": "POP",
      "path": "0"
    },
    "2978": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6802,
        6847
      ],
      "op": "POP",
      "path": "0"
    },
    "2979": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6802,
        6847
      ],
      "op": "POP",
      "path": "0"
    },
    "2980": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6802,
        6847
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2982": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6802,
        6847
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2983": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6802,
        6847
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2984": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6802,
        6847
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2986": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6802,
        6847
      ],
      "op": "NOT",
      "path": "0"
    },
    "2987": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6802,
        6847
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2989": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6802,
        6847
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2990": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6802,
        6847
      ],
      "op": "ADD",
      "path": "0"
    },
    "2991": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6802,
        6847
      ],
      "op": "AND",
      "path": "0"
    },
    "2992": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6802,
        6847
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2993": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6802,
        6847
      ],
      "op": "ADD",
      "path": "0"
    },
    "2994": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6802,
        6847
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2995": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6802,
        6847
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2997": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6802,
        6847
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2998": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6802,
        6847
      ],
      "op": "POP",
      "path": "0"
    },
    "2999": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6802,
        6847
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3000": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6802,
        6847
      ],
      "op": "ADD",
      "path": "0"
    },
    "3001": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6802,
        6847
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3002": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6802,
        6847
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xBC5"
    },
    "3006": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6802,
        6847
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3007": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6802,
        6847
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3008": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6802,
        6847
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x24BB"
    },
    "3012": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "jump": "i",
      "offset": [
        6802,
        6847
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3013": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6802,
        6847
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3014": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6802,
        6861
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "3016": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6802,
        6861
      ],
      "op": "ADD",
      "path": "0"
    },
    "3017": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6802,
        6861
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3018": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6863,
        6873
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3019": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6875,
        6882
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3020": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6884
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3022": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6884
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3023": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6884
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3024": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6884
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "3029": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6884
      ],
      "op": "AND",
      "path": "0"
    },
    "3030": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6884
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "3032": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6884
      ],
      "op": "SHL",
      "path": "0"
    },
    "3033": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6884
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3034": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6884
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3035": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6884
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3037": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6884
      ],
      "op": "ADD",
      "path": "0"
    },
    "3038": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6884
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xBEB"
    },
    "3042": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6884
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3043": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6884
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3044": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6884
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3045": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6884
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3046": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6884
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x25C3"
    },
    "3050": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "jump": "i",
      "offset": [
        6777,
        6884
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3051": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6884
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3052": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6884
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3054": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6884
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3056": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6884
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3057": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6884
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3058": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6884
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3059": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6884
      ],
      "op": "SUB",
      "path": "0"
    },
    "3060": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6884
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3061": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6884
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3063": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6884
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3064": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6884
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3065": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6884
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "3066": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6884
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3067": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6884
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3068": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6884
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3069": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6884
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xC06"
    },
    "3073": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6884
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3074": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6884
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3076": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6884
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3077": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6884
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3078": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6884
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3079": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6884
      ],
      "op": "POP",
      "path": "0"
    },
    "3080": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6884
      ],
      "op": "GAS",
      "path": "0"
    },
    "3081": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6884
      ],
      "op": "CALL",
      "path": "0"
    },
    "3082": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6884
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3083": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6884
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3084": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6884
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3085": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6884
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xC1B"
    },
    "3089": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6884
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3090": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6884
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3091": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6884
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3093": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6884
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3094": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6884
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "3095": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6884
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3096": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6884
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3098": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6884
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3099": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6777,
        6884
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3100": {
      "op": "POP"
    },
    "3101": {
      "op": "POP"
    },
    "3102": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6904
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 27,
      "value": "0x2"
    },
    "3104": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6904
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3105": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6923,
        6930
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "3107": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6923,
        6930
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3108": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6957
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3110": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6957
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3111": {
      "op": "PUSH4",
      "value": "0x1A4CA37B"
    },
    "3116": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "3118": {
      "op": "SHL"
    },
    "3119": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6957
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3120": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6957
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3121": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3123": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3125": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3127": {
      "op": "SHL"
    },
    "3128": {
      "op": "SUB"
    },
    "3129": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6904
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3130": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6904
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3131": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6904
      ],
      "op": "AND",
      "path": "0"
    },
    "3132": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6904
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "3133": {
      "op": "POP"
    },
    "3134": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6913
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x69328DEC"
    },
    "3139": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6913
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3140": {
      "op": "POP"
    },
    "3141": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6957
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xC5A"
    },
    "3145": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6957
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3146": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6923,
        6930
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3147": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6923,
        6930
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3148": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6923,
        6930
      ],
      "op": "AND",
      "path": "0"
    },
    "3149": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6923,
        6930
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3150": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6933,
        6940
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3151": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6933,
        6940
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3152": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6950,
        6954
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "3153": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6950,
        6954
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3154": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6957
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3156": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6957
      ],
      "op": "ADD",
      "path": "0"
    },
    "3157": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6957
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x25E7"
    },
    "3161": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "jump": "i",
      "offset": [
        6892,
        6957
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3162": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6957
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3163": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6957
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3165": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6957
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3167": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6957
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3168": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6957
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3169": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6957
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3170": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6957
      ],
      "op": "SUB",
      "path": "0"
    },
    "3171": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6957
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3172": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6957
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3174": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6957
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3175": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6957
      ],
      "op": "GAS",
      "path": "0"
    },
    "3176": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6957
      ],
      "op": "CALL",
      "path": "0"
    },
    "3177": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6957
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3178": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6957
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3179": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6957
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3180": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6957
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xC7A"
    },
    "3184": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6957
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3185": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6957
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3186": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6957
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3188": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6957
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3189": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6957
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "3190": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6957
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3191": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6957
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3193": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6957
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3194": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6957
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3195": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6957
      ],
      "op": "POP",
      "path": "0"
    },
    "3196": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6957
      ],
      "op": "POP",
      "path": "0"
    },
    "3197": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6957
      ],
      "op": "POP",
      "path": "0"
    },
    "3198": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6957
      ],
      "op": "POP",
      "path": "0"
    },
    "3199": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6957
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3201": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6957
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3202": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6957
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3203": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6957
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3205": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6957
      ],
      "op": "NOT",
      "path": "0"
    },
    "3206": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6957
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3208": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6957
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3209": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6957
      ],
      "op": "ADD",
      "path": "0"
    },
    "3210": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6957
      ],
      "op": "AND",
      "path": "0"
    },
    "3211": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6957
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3212": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6957
      ],
      "op": "ADD",
      "path": "0"
    },
    "3213": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6957
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3214": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6957
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3216": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6957
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3217": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6957
      ],
      "op": "POP",
      "path": "0"
    },
    "3218": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6957
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3219": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6957
      ],
      "op": "ADD",
      "path": "0"
    },
    "3220": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6957
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3221": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6957
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xCA0"
    },
    "3225": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6957
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3226": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6957
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3227": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6957
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x2426"
    },
    "3231": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "jump": "i",
      "offset": [
        6892,
        6957
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3232": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6892,
        6957
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3233": {
      "op": "POP"
    },
    "3234": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6965,
        6972
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 28,
      "value": "0x3"
    },
    "3236": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6965,
        6972
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3237": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6965,
        7016
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xCBA"
    },
    "3241": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6965,
        7016
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3244": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3246": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3248": {
      "op": "SHL"
    },
    "3249": {
      "op": "SUB"
    },
    "3250": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6965,
        6972
      ],
      "op": "AND",
      "path": "0"
    },
    "3251": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7003,
        7005
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3252": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7008,
        7015
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3253": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6965,
        6994
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x116F"
    },
    "3257": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "jump": "i",
      "offset": [
        6965,
        7016
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3258": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6965,
        7016
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3259": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7032,
        7043
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3260": {
      "branch": 70,
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7032,
        7043
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3261": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7028,
        7299
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xE35"
    },
    "3265": {
      "branch": 70,
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7028,
        7299
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3266": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7065
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 29,
      "value": "0x2"
    },
    "3268": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7065
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3269": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7114,
        7121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3271": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7114,
        7121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3272": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7114,
        7121
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3273": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7078,
        7123
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3275": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7078,
        7123
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3276": {
      "op": "PUSH4",
      "value": "0x35EA6A75"
    },
    "3281": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3283": {
      "op": "SHL"
    },
    "3284": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7078,
        7123
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3285": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7078,
        7123
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3290": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3292": {
      "op": "SHL"
    },
    "3293": {
      "op": "SUB"
    },
    "3294": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7114,
        7121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3295": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7114,
        7121
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3296": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7114,
        7121
      ],
      "op": "AND",
      "path": "0"
    },
    "3297": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7078,
        7123
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3298": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7078,
        7123
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3299": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7078,
        7123
      ],
      "op": "ADD",
      "path": "0"
    },
    "3300": {
      "op": "SWAP3"
    },
    "3301": {
      "op": "SWAP1"
    },
    "3302": {
      "op": "SWAP3"
    },
    "3303": {
      "op": "MSTORE"
    },
    "3304": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7065
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3305": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7065
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3306": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7065
      ],
      "op": "AND",
      "path": "0"
    },
    "3307": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7065
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3308": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7076
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8EBBD26"
    },
    "3313": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7076
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3314": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7065
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3315": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7065
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3316": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7078,
        7105
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x35EA6A75"
    },
    "3321": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7078,
        7105
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3322": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3324": {
      "op": "ADD"
    },
    "3325": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7078,
        7123
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "3328": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7078,
        7123
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3330": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7078,
        7123
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3331": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7078,
        7123
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3332": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7078,
        7123
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3333": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7078,
        7123
      ],
      "op": "SUB",
      "path": "0"
    },
    "3334": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7078,
        7123
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3335": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7078,
        7123
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3336": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7078,
        7123
      ],
      "op": "GAS",
      "path": "0"
    },
    "3337": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7078,
        7123
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "3338": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7078,
        7123
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3339": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7078,
        7123
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3340": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7078,
        7123
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3341": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7078,
        7123
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xD1B"
    },
    "3345": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7078,
        7123
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3346": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7078,
        7123
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3347": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7078,
        7123
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3349": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7078,
        7123
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3350": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7078,
        7123
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "3351": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7078,
        7123
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3352": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7078,
        7123
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3354": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7078,
        7123
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3355": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7078,
        7123
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3356": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7078,
        7123
      ],
      "op": "POP",
      "path": "0"
    },
    "3357": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7078,
        7123
      ],
      "op": "POP",
      "path": "0"
    },
    "3358": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7078,
        7123
      ],
      "op": "POP",
      "path": "0"
    },
    "3359": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7078,
        7123
      ],
      "op": "POP",
      "path": "0"
    },
    "3360": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7078,
        7123
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3362": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7078,
        7123
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3363": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7078,
        7123
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3364": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7078,
        7123
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3366": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7078,
        7123
      ],
      "op": "NOT",
      "path": "0"
    },
    "3367": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7078,
        7123
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3369": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7078,
        7123
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3370": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7078,
        7123
      ],
      "op": "ADD",
      "path": "0"
    },
    "3371": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7078,
        7123
      ],
      "op": "AND",
      "path": "0"
    },
    "3372": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7078,
        7123
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3373": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7078,
        7123
      ],
      "op": "ADD",
      "path": "0"
    },
    "3374": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7078,
        7123
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3375": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7078,
        7123
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3377": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7078,
        7123
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3378": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7078,
        7123
      ],
      "op": "POP",
      "path": "0"
    },
    "3379": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7078,
        7123
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3380": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7078,
        7123
      ],
      "op": "ADD",
      "path": "0"
    },
    "3381": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7078,
        7123
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3382": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7078,
        7123
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xD41"
    },
    "3386": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7078,
        7123
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3387": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7078,
        7123
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3388": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7078,
        7123
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x24BB"
    },
    "3392": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "jump": "i",
      "offset": [
        7078,
        7123
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3393": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7078,
        7123
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3394": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7078,
        7137
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "3396": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7078,
        7137
      ],
      "op": "ADD",
      "path": "0"
    },
    "3397": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7078,
        7137
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3398": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7139,
        7149
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3399": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7151,
        7158
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3400": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7160
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3402": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7160
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3403": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7160
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3404": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7160
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "3409": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7160
      ],
      "op": "AND",
      "path": "0"
    },
    "3410": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7160
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "3412": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7160
      ],
      "op": "SHL",
      "path": "0"
    },
    "3413": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7160
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3414": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7160
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3415": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7160
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3417": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7160
      ],
      "op": "ADD",
      "path": "0"
    },
    "3418": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7160
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xD67"
    },
    "3422": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7160
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3423": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7160
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3424": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7160
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3425": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7160
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3426": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7160
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x25C3"
    },
    "3430": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "jump": "i",
      "offset": [
        7053,
        7160
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3431": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7160
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3432": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7160
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3434": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7160
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3436": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7160
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3437": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7160
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3438": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7160
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3439": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7160
      ],
      "op": "SUB",
      "path": "0"
    },
    "3440": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7160
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3441": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7160
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3443": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7160
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3444": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7160
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3445": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7160
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "3446": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7160
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3447": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7160
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3448": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7160
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3449": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7160
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xD82"
    },
    "3453": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7160
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3454": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7160
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3456": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7160
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3457": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7160
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3458": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7160
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3459": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7160
      ],
      "op": "POP",
      "path": "0"
    },
    "3460": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7160
      ],
      "op": "GAS",
      "path": "0"
    },
    "3461": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7160
      ],
      "op": "CALL",
      "path": "0"
    },
    "3462": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7160
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3463": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7160
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3464": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7160
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3465": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7160
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xD97"
    },
    "3469": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7160
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3470": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7160
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3471": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7160
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3473": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7160
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3474": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7160
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "3475": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7160
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3476": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7160
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3478": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7160
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3479": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7053,
        7160
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3480": {
      "op": "POP"
    },
    "3481": {
      "op": "POP"
    },
    "3482": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7180
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 30,
      "value": "0x2"
    },
    "3484": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7180
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3485": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7199,
        7206
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3487": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7199,
        7206
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3488": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7199,
        7206
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3489": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7233
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3491": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7233
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3492": {
      "op": "PUSH4",
      "value": "0x1A4CA37B"
    },
    "3497": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "3499": {
      "op": "SHL"
    },
    "3500": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7233
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3501": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7233
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3502": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3506": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3508": {
      "op": "SHL"
    },
    "3509": {
      "op": "SUB"
    },
    "3510": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7180
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3511": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7180
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3512": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7180
      ],
      "op": "AND",
      "path": "0"
    },
    "3513": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7180
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "3514": {
      "op": "POP"
    },
    "3515": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7189
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x69328DEC"
    },
    "3520": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7189
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "3521": {
      "op": "POP"
    },
    "3522": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7233
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xDD5"
    },
    "3526": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7233
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3527": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7199,
        7206
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3528": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7199,
        7206
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3529": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7199,
        7206
      ],
      "op": "AND",
      "path": "0"
    },
    "3530": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7199,
        7206
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3531": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7209,
        7216
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3532": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7209,
        7216
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3533": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7226,
        7230
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "3534": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7226,
        7230
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3535": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7233
      ],
      "op": "ADD",
      "path": "0"
    },
    "3536": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7233
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x25E7"
    },
    "3540": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "jump": "i",
      "offset": [
        7168,
        7233
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3541": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7233
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3542": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7233
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3544": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7233
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3546": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7233
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3547": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7233
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3548": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7233
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3549": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7233
      ],
      "op": "SUB",
      "path": "0"
    },
    "3550": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7233
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3551": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7233
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3553": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7233
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3554": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7233
      ],
      "op": "GAS",
      "path": "0"
    },
    "3555": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7233
      ],
      "op": "CALL",
      "path": "0"
    },
    "3556": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7233
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3557": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7233
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3558": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7233
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3559": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7233
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xDF5"
    },
    "3563": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7233
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3564": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7233
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3565": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7233
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3567": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7233
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3568": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7233
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "3569": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7233
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3570": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7233
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3572": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7233
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3573": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7233
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3574": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7233
      ],
      "op": "POP",
      "path": "0"
    },
    "3575": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7233
      ],
      "op": "POP",
      "path": "0"
    },
    "3576": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7233
      ],
      "op": "POP",
      "path": "0"
    },
    "3577": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7233
      ],
      "op": "POP",
      "path": "0"
    },
    "3578": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7233
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3580": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7233
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3581": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7233
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3582": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7233
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3584": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7233
      ],
      "op": "NOT",
      "path": "0"
    },
    "3585": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7233
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3587": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7233
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3588": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7233
      ],
      "op": "ADD",
      "path": "0"
    },
    "3589": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7233
      ],
      "op": "AND",
      "path": "0"
    },
    "3590": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7233
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3591": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7233
      ],
      "op": "ADD",
      "path": "0"
    },
    "3592": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7233
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3593": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7233
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3595": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7233
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3596": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7233
      ],
      "op": "POP",
      "path": "0"
    },
    "3597": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7233
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3598": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7233
      ],
      "op": "ADD",
      "path": "0"
    },
    "3599": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7233
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3600": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7233
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xE1B"
    },
    "3604": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7233
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3605": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7233
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3606": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7233
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x2426"
    },
    "3610": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "jump": "i",
      "offset": [
        7168,
        7233
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3611": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7168,
        7233
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3612": {
      "op": "POP"
    },
    "3613": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7241,
        7248
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 31,
      "value": "0x4"
    },
    "3615": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7241,
        7248
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3616": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7241,
        7292
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xE35"
    },
    "3620": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7241,
        7292
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3623": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3625": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3627": {
      "op": "SHL"
    },
    "3628": {
      "op": "SUB"
    },
    "3629": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7241,
        7248
      ],
      "op": "AND",
      "path": "0"
    },
    "3630": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7279,
        7281
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3631": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7284,
        7291
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3632": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7241,
        7270
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x116F"
    },
    "3636": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "jump": "i",
      "offset": [
        7241,
        7292
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3637": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7241,
        7292
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3638": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7348
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3640": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7348
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3641": {
      "op": "PUSH4",
      "value": "0x1C57762B"
    },
    "3646": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "3648": {
      "op": "SHL"
    },
    "3649": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7348
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3650": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7348
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3651": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7348
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3653": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7348
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3654": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7348
      ],
      "op": "ADD",
      "path": "0"
    },
    "3655": {
      "op": "DUP4"
    },
    "3656": {
      "op": "SWAP1"
    },
    "3657": {
      "op": "MSTORE"
    },
    "3658": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3660": {
      "op": "DUP2"
    },
    "3661": {
      "op": "ADD"
    },
    "3662": {
      "op": "DUP3"
    },
    "3663": {
      "op": "SWAP1"
    },
    "3664": {
      "op": "MSTORE"
    },
    "3665": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7304,
        7317
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3667": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7304,
        7317
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3668": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3670": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3672": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3674": {
      "op": "SHL"
    },
    "3675": {
      "op": "SUB"
    },
    "3676": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7330
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3677": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7330
      ],
      "op": "AND",
      "path": "0"
    },
    "3678": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7330
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3679": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7330
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE2BBB158"
    },
    "3684": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7330
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3685": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3687": {
      "op": "ADD"
    },
    "3688": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7348
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3690": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7348
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3692": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7348
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3693": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7348
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3694": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7348
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3695": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7348
      ],
      "op": "SUB",
      "path": "0"
    },
    "3696": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7348
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3697": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7348
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3699": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7348
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3700": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7348
      ],
      "op": "GAS",
      "path": "0"
    },
    "3701": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7348
      ],
      "op": "CALL",
      "path": "0"
    },
    "3702": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7348
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3703": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7348
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3704": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7348
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3705": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7348
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xE87"
    },
    "3709": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7348
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3710": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7348
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3711": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7348
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3713": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7348
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3714": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7348
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "3715": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7348
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3716": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7348
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3718": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7348
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3719": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7348
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3720": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7348
      ],
      "op": "POP",
      "path": "0"
    },
    "3721": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7348
      ],
      "op": "POP",
      "path": "0"
    },
    "3722": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7348
      ],
      "op": "POP",
      "path": "0"
    },
    "3723": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7348
      ],
      "op": "POP",
      "path": "0"
    },
    "3724": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7348
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3726": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7348
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3727": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7348
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3728": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7348
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3730": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7348
      ],
      "op": "NOT",
      "path": "0"
    },
    "3731": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7348
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3733": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7348
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3734": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7348
      ],
      "op": "ADD",
      "path": "0"
    },
    "3735": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7348
      ],
      "op": "AND",
      "path": "0"
    },
    "3736": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7348
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3737": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7348
      ],
      "op": "ADD",
      "path": "0"
    },
    "3738": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7348
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3739": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7348
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3741": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7348
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3742": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7348
      ],
      "op": "POP",
      "path": "0"
    },
    "3743": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7348
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3744": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7348
      ],
      "op": "ADD",
      "path": "0"
    },
    "3745": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7348
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3746": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7348
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xEAD"
    },
    "3750": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7348
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3751": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7348
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3752": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7348
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x2426"
    },
    "3756": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "jump": "i",
      "offset": [
        7320,
        7348
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3757": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7320,
        7348
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3758": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7304,
        7348
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3759": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7304,
        7348
      ],
      "op": "POP",
      "path": "0"
    },
    "3760": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7359,
        7398
      ],
      "op": "PUSH32",
      "path": "0",
      "statement": 32,
      "value": "0x5548C837AB068CF56A2C2479DF0882A4922FD203EDB7517321831D95078C5F62"
    },
    "3793": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7367,
        7377
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3794": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7387,
        7389
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3795": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7392,
        7397
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3796": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7359,
        7398
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3798": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7359,
        7398
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3799": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7359,
        7398
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xEE4"
    },
    "3803": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7359,
        7398
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3804": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7359,
        7398
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3805": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7359,
        7398
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3806": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7359,
        7398
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3807": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7359,
        7398
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x25C3"
    },
    "3811": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "jump": "i",
      "offset": [
        7359,
        7398
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3812": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7359,
        7398
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3813": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7359,
        7398
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3815": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7359,
        7398
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3816": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7359,
        7398
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3817": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7359,
        7398
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3818": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7359,
        7398
      ],
      "op": "SUB",
      "path": "0"
    },
    "3819": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7359,
        7398
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3820": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7359,
        7398
      ],
      "op": "LOG1",
      "path": "0"
    },
    "3821": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7423,
        7435
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 33,
      "value": "0x2"
    },
    "3823": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7423,
        7435
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3824": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7444
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3826": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7444
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3827": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "3832": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3834": {
      "op": "SHL"
    },
    "3835": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7444
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3836": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7444
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3839": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3841": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3843": {
      "op": "SHL"
    },
    "3844": {
      "op": "SUB"
    },
    "3845": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7423,
        7435
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3846": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7423,
        7435
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3847": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7423,
        7435
      ],
      "op": "AND",
      "path": "0"
    },
    "3848": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7444
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3850": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7444
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3851": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7444
      ],
      "op": "ADD",
      "path": "0"
    },
    "3852": {
      "op": "MSTORE"
    },
    "3853": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3855": {
      "op": "DUP2"
    },
    "3856": {
      "op": "ADD"
    },
    "3857": {
      "op": "DUP4"
    },
    "3858": {
      "op": "SWAP1"
    },
    "3859": {
      "op": "MSTORE"
    },
    "3860": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7414
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3861": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7414
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3862": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7414
      ],
      "op": "AND",
      "path": "0"
    },
    "3863": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7414
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3864": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7414
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95EA7B3"
    },
    "3869": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7414
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3870": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3872": {
      "op": "ADD"
    },
    "3873": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7444
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3875": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7444
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3877": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7444
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3878": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7444
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3879": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7444
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3880": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7444
      ],
      "op": "SUB",
      "path": "0"
    },
    "3881": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7444
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3882": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7444
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3884": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7444
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3885": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7444
      ],
      "op": "GAS",
      "path": "0"
    },
    "3886": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7444
      ],
      "op": "CALL",
      "path": "0"
    },
    "3887": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7444
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3888": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7444
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3889": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7444
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3890": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7444
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xF40"
    },
    "3894": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7444
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3895": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7444
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3896": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7444
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3898": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7444
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3899": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7444
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "3900": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7444
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3901": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7444
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3903": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7444
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3904": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7444
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3905": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7444
      ],
      "op": "POP",
      "path": "0"
    },
    "3906": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7444
      ],
      "op": "POP",
      "path": "0"
    },
    "3907": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7444
      ],
      "op": "POP",
      "path": "0"
    },
    "3908": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7444
      ],
      "op": "POP",
      "path": "0"
    },
    "3909": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7444
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3911": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7444
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3912": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7444
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3913": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7444
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3915": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7444
      ],
      "op": "NOT",
      "path": "0"
    },
    "3916": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7444
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3918": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7444
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3919": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7444
      ],
      "op": "ADD",
      "path": "0"
    },
    "3920": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7444
      ],
      "op": "AND",
      "path": "0"
    },
    "3921": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7444
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3922": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7444
      ],
      "op": "ADD",
      "path": "0"
    },
    "3923": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7444
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3924": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7444
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3926": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7444
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3927": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7444
      ],
      "op": "POP",
      "path": "0"
    },
    "3928": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7444
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3929": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7444
      ],
      "op": "ADD",
      "path": "0"
    },
    "3930": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7444
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3931": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7444
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xF66"
    },
    "3935": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7444
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3936": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7444
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3937": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7444
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x260A"
    },
    "3941": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "jump": "i",
      "offset": [
        7404,
        7444
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3942": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7404,
        7444
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3943": {
      "op": "POP"
    },
    "3944": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7450,
        7462
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 34,
      "value": "0x2"
    },
    "3946": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7450,
        7462
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3947": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7450,
        7505
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3949": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7450,
        7505
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3950": {
      "op": "PUSH4",
      "value": "0xE8EDA9DF"
    },
    "3955": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3957": {
      "op": "SHL"
    },
    "3958": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7450,
        7505
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3959": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7450,
        7505
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3960": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3962": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3964": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3966": {
      "op": "SHL"
    },
    "3967": {
      "op": "SUB"
    },
    "3968": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7450,
        7462
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3969": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7450,
        7462
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3970": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7450,
        7462
      ],
      "op": "AND",
      "path": "0"
    },
    "3971": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7450,
        7462
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3972": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7450,
        7470
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE8EDA9DF"
    },
    "3977": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7450,
        7470
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3978": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7450,
        7505
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xFA0"
    },
    "3982": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7450,
        7505
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3983": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7479,
        7481
      ],
      "op": "DUP9",
      "path": "0"
    },
    "3984": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7479,
        7481
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3985": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7484,
        7489
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3986": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7484,
        7489
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3987": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7491,
        7501
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3988": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7491,
        7501
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3989": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7450,
        7462
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3991": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7450,
        7462
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3992": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7450,
        7505
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3994": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7450,
        7505
      ],
      "op": "ADD",
      "path": "0"
    },
    "3995": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7450,
        7505
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x262E"
    },
    "3999": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "jump": "i",
      "offset": [
        7450,
        7505
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4000": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7450,
        7505
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4001": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7450,
        7505
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4003": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7450,
        7505
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4005": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7450,
        7505
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4006": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7450,
        7505
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4007": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7450,
        7505
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4008": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7450,
        7505
      ],
      "op": "SUB",
      "path": "0"
    },
    "4009": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7450,
        7505
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4010": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7450,
        7505
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4012": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7450,
        7505
      ],
      "op": "DUP8",
      "path": "0"
    },
    "4013": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7450,
        7505
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4014": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7450,
        7505
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "4015": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7450,
        7505
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4016": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7450,
        7505
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4017": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7450,
        7505
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4018": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7450,
        7505
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xFBB"
    },
    "4022": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7450,
        7505
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4023": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7450,
        7505
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4025": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7450,
        7505
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4026": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7450,
        7505
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4027": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7450,
        7505
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4028": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7450,
        7505
      ],
      "op": "POP",
      "path": "0"
    },
    "4029": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7450,
        7505
      ],
      "op": "GAS",
      "path": "0"
    },
    "4030": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7450,
        7505
      ],
      "op": "CALL",
      "path": "0"
    },
    "4031": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7450,
        7505
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4032": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7450,
        7505
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4033": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7450,
        7505
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4034": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7450,
        7505
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xFD0"
    },
    "4038": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7450,
        7505
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4039": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7450,
        7505
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4040": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7450,
        7505
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4042": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7450,
        7505
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4043": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7450,
        7505
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "4044": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7450,
        7505
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4045": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7450,
        7505
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4047": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7450,
        7505
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4048": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7450,
        7505
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4049": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7450,
        7505
      ],
      "op": "POP",
      "path": "0"
    },
    "4050": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7450,
        7505
      ],
      "op": "POP",
      "path": "0"
    },
    "4051": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7450,
        7505
      ],
      "op": "POP",
      "path": "0"
    },
    "4052": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7450,
        7505
      ],
      "op": "POP",
      "path": "0"
    },
    "4053": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7511,
        7520
      ],
      "op": "PUSH3",
      "path": "0",
      "statement": 35,
      "value": "0xFDE"
    },
    "4057": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7511,
        7518
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1A6D"
    },
    "4061": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "jump": "i",
      "offset": [
        7511,
        7520
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4062": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        7511,
        7520
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4063": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6716,
        7525
      ],
      "op": "POP",
      "path": "0"
    },
    "4064": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6606,
        7525
      ],
      "op": "POP",
      "path": "0"
    },
    "4065": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6606,
        7525
      ],
      "op": "POP",
      "path": "0"
    },
    "4066": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6606,
        7525
      ],
      "op": "POP",
      "path": "0"
    },
    "4067": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "offset": [
        6606,
        7525
      ],
      "op": "POP",
      "path": "0"
    },
    "4068": {
      "fn": "RangeManager.transferAssetsIntoStep",
      "jump": "o",
      "offset": [
        6606,
        7525
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4069": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2347,
        2662
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4070": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2434,
        2437
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 36
    },
    "4071": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4073": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4075": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4077": {
      "op": "SHL"
    },
    "4078": {
      "op": "SUB"
    },
    "4079": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2426,
        2437
      ],
      "op": "AND",
      "path": "0"
    },
    "4080": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2426,
        2431
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4085": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4087": {
      "op": "SHL"
    },
    "4088": {
      "op": "SUB"
    },
    "4089": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2426,
        2437
      ],
      "op": "AND",
      "path": "0"
    },
    "4090": {
      "branch": 71,
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2426,
        2437
      ],
      "op": "LT",
      "path": "0"
    },
    "4091": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2418,
        2455
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1038"
    },
    "4095": {
      "branch": 71,
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2418,
        2455
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4096": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2418,
        2455
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4098": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2418,
        2455
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4099": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4103": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4105": {
      "op": "SHL"
    },
    "4106": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2418,
        2455
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4107": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2418,
        2455
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4108": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4110": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2418,
        2455
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4112": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2418,
        2455
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4113": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2418,
        2455
      ],
      "op": "ADD",
      "path": "0"
    },
    "4114": {
      "op": "MSTORE"
    },
    "4115": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "4117": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4119": {
      "op": "DUP3"
    },
    "4120": {
      "op": "ADD"
    },
    "4121": {
      "op": "MSTORE"
    },
    "4122": {
      "op": "PUSH13",
      "value": "0x14985B99D9481A5B9D985B1A59"
    },
    "4136": {
      "op": "PUSH1",
      "value": "0x9A"
    },
    "4138": {
      "op": "SHL"
    },
    "4139": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4141": {
      "op": "DUP3"
    },
    "4142": {
      "op": "ADD"
    },
    "4143": {
      "op": "MSTORE"
    },
    "4144": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4146": {
      "op": "ADD"
    },
    "4147": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2418,
        2455
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x2D3"
    },
    "4151": {
      "op": "JUMP"
    },
    "4152": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2418,
        2455
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4153": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2475,
        2483
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "4155": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2475,
        2490
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4156": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2461,
        2472
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4158": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2496,
        2657
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4159": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2517,
        2520
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4160": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2513,
        2514
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4161": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2513,
        2520
      ],
      "op": "LT",
      "path": "0"
    },
    "4162": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2496,
        2657
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4163": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2496,
        2657
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x110D"
    },
    "4167": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2496,
        2657
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4168": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2548,
        2556
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "4170": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2557,
        2558
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4171": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2548,
        2559
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4172": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2548,
        2559
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4173": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2548,
        2559
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4174": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2548,
        2559
      ],
      "op": "LT",
      "path": "0"
    },
    "4175": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2548,
        2559
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x105D"
    },
    "4179": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2548,
        2559
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4180": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2548,
        2559
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x105D"
    },
    "4184": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2548,
        2559
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x22A7"
    },
    "4188": {
      "fn": "RangeManager.checkNewRange",
      "jump": "i",
      "offset": [
        2548,
        2559
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4189": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2548,
        2559
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4190": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2548,
        2559
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4192": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2548,
        2559
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4193": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2548,
        2559
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4194": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2548,
        2559
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4195": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2548,
        2559
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4197": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2548,
        2559
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4198": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2548,
        2559
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4199": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2548,
        2559
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4200": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2548,
        2559
      ],
      "op": "ADD",
      "path": "0"
    },
    "4201": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2548,
        2563
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4204": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4206": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4208": {
      "op": "SHL"
    },
    "4209": {
      "op": "SUB"
    },
    "4210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4212": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4214": {
      "op": "SHL"
    },
    "4215": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2548,
        2563
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4216": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2548,
        2563
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4217": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2548,
        2563
      ],
      "op": "DIV",
      "path": "0"
    },
    "4218": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2548,
        2563
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4219": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2548,
        2563
      ],
      "op": "AND",
      "path": "0"
    },
    "4220": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2539,
        2563
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4221": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2539,
        2563
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4222": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2539,
        2563
      ],
      "op": "AND",
      "path": "0"
    },
    "4223": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2539,
        2563
      ],
      "op": "LT",
      "path": "0"
    },
    "4224": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2539,
        2563
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4225": {
      "branch": 72,
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2539,
        2563
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4226": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2539,
        2591
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x10BA"
    },
    "4230": {
      "branch": 72,
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2539,
        2591
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4231": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2539,
        2591
      ],
      "op": "POP",
      "path": "0"
    },
    "4232": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2574,
        2582
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "4234": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2583,
        2584
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4235": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2574,
        2585
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4236": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2574,
        2585
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4237": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2574,
        2585
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4238": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2574,
        2585
      ],
      "op": "LT",
      "path": "0"
    },
    "4239": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2574,
        2585
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x109D"
    },
    "4243": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2574,
        2585
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4244": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2574,
        2585
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x109D"
    },
    "4248": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2574,
        2585
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x22A7"
    },
    "4252": {
      "fn": "RangeManager.checkNewRange",
      "jump": "i",
      "offset": [
        2574,
        2585
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4253": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2574,
        2585
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4254": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2574,
        2585
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4256": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2574,
        2585
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4257": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2574,
        2585
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4258": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2574,
        2585
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4259": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2574,
        2585
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4261": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2574,
        2585
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4262": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2574,
        2585
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4263": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2574,
        2585
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4264": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2574,
        2585
      ],
      "op": "ADD",
      "path": "0"
    },
    "4265": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2574,
        2591
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4266": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4268": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4270": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4272": {
      "op": "SHL"
    },
    "4273": {
      "op": "SUB"
    },
    "4274": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2574,
        2591
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4275": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2574,
        2591
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4276": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2574,
        2591
      ],
      "op": "AND",
      "path": "0"
    },
    "4277": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2567,
        2591
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4278": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2567,
        2591
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4279": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2567,
        2591
      ],
      "op": "AND",
      "path": "0"
    },
    "4280": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2567,
        2591
      ],
      "op": "GT",
      "path": "0"
    },
    "4281": {
      "branch": 73,
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2567,
        2591
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4282": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2539,
        2591
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4283": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2603,
        2611
      ],
      "op": "PUSH3",
      "path": "0",
      "statement": 37,
      "value": "0x10F8"
    },
    "4287": {
      "branch": 73,
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2535,
        2620
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4288": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2627,
        2650
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 38,
      "value": "0x40"
    },
    "4290": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2627,
        2650
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4291": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4295": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4297": {
      "op": "SHL"
    },
    "4298": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2627,
        2650
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4299": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2627,
        2650
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4300": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4302": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2627,
        2650
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4304": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2627,
        2650
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4305": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2627,
        2650
      ],
      "op": "ADD",
      "path": "0"
    },
    "4306": {
      "op": "MSTORE"
    },
    "4307": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "4309": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4311": {
      "op": "DUP3"
    },
    "4312": {
      "op": "ADD"
    },
    "4313": {
      "op": "MSTORE"
    },
    "4314": {
      "op": "PUSH13",
      "value": "0x52616E6765206F7665726C617"
    },
    "4328": {
      "op": "PUSH1",
      "value": "0x9C"
    },
    "4330": {
      "op": "SHL"
    },
    "4331": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4333": {
      "op": "DUP3"
    },
    "4334": {
      "op": "ADD"
    },
    "4335": {
      "op": "MSTORE"
    },
    "4336": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4338": {
      "op": "ADD"
    },
    "4339": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2627,
        2650
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x2D3"
    },
    "4343": {
      "op": "JUMP"
    },
    "4344": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2496,
        2657
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4345": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2522,
        2525
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 39
    },
    "4346": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2522,
        2525
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1104"
    },
    "4350": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2522,
        2525
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4351": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2522,
        2525
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x265B"
    },
    "4355": {
      "fn": "RangeManager.checkNewRange",
      "jump": "i",
      "offset": [
        2522,
        2525
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4356": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2522,
        2525
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4357": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2522,
        2525
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4358": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2522,
        2525
      ],
      "op": "POP",
      "path": "0"
    },
    "4359": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2522,
        2525
      ],
      "op": "POP",
      "path": "0"
    },
    "4360": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2496,
        2657
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x103E"
    },
    "4364": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2496,
        2657
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4365": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2496,
        2657
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4366": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2496,
        2657
      ],
      "op": "POP",
      "path": "0"
    },
    "4367": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2412,
        2662
      ],
      "op": "POP",
      "path": "0"
    },
    "4368": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2347,
        2662
      ],
      "op": "POP",
      "path": "0"
    },
    "4369": {
      "fn": "RangeManager.checkNewRange",
      "offset": [
        2347,
        2662
      ],
      "op": "POP",
      "path": "0"
    },
    "4370": {
      "fn": "RangeManager.checkNewRange",
      "jump": "o",
      "offset": [
        2347,
        2662
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4371": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        912,
        1153
      ],
      "op": "JUMPDEST",
      "path": "58"
    },
    "4372": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1050,
        1146
      ],
      "op": "PUSH3",
      "path": "58",
      "statement": 40,
      "value": "0x110D"
    },
    "4376": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1070,
        1075
      ],
      "op": "DUP5",
      "path": "58"
    },
    "4377": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1100,
        1127
      ],
      "op": "PUSH4",
      "path": "58",
      "value": "0x23B872DD"
    },
    "4382": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1100,
        1127
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0xE0"
    },
    "4384": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1100,
        1127
      ],
      "op": "SHL",
      "path": "58"
    },
    "4385": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1129,
        1133
      ],
      "op": "DUP6",
      "path": "58"
    },
    "4386": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1135,
        1137
      ],
      "op": "DUP6",
      "path": "58"
    },
    "4387": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1144
      ],
      "op": "DUP6",
      "path": "58"
    },
    "4388": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x40"
    },
    "4390": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MLOAD",
      "path": "58"
    },
    "4391": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x24"
    },
    "4393": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "ADD",
      "path": "58"
    },
    "4394": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "PUSH3",
      "path": "58",
      "value": "0x1137"
    },
    "4398": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP4",
      "path": "58"
    },
    "4399": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP3",
      "path": "58"
    },
    "4400": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP2",
      "path": "58"
    },
    "4401": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "4402": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "PUSH3",
      "path": "58",
      "value": "0x25C3"
    },
    "4406": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "i",
      "offset": [
        1077,
        1145
      ],
      "op": "JUMP",
      "path": "58"
    },
    "4407": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "JUMPDEST",
      "path": "58"
    },
    "4408": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x40"
    },
    "4410": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP1",
      "path": "58"
    },
    "4411": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MLOAD",
      "path": "58"
    },
    "4412": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4414": {
      "op": "NOT"
    },
    "4415": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP2",
      "path": "58"
    },
    "4416": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP5",
      "path": "58"
    },
    "4417": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SUB",
      "path": "58"
    },
    "4418": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "ADD",
      "path": "58"
    },
    "4419": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP2",
      "path": "58"
    },
    "4420": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MSTORE",
      "path": "58"
    },
    "4421": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP2",
      "path": "58"
    },
    "4422": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "4423": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MSTORE",
      "path": "58"
    },
    "4424": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x20"
    },
    "4426": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP2",
      "path": "58"
    },
    "4427": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "ADD",
      "path": "58"
    },
    "4428": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP1",
      "path": "58"
    },
    "4429": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MLOAD",
      "path": "58"
    },
    "4430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4434": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4436": {
      "op": "SHL"
    },
    "4437": {
      "op": "SUB"
    },
    "4438": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "AND",
      "path": "58"
    },
    "4439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4443": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4445": {
      "op": "SHL"
    },
    "4446": {
      "op": "SUB"
    },
    "4447": {
      "op": "NOT"
    },
    "4448": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "4449": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP4",
      "path": "58"
    },
    "4450": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "AND",
      "path": "58"
    },
    "4451": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP3",
      "path": "58"
    },
    "4452": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "4453": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP3",
      "path": "58"
    },
    "4454": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "OR",
      "path": "58"
    },
    "4455": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "4456": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "SWAP2",
      "path": "58"
    },
    "4457": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MSTORE",
      "path": "58"
    },
    "4458": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1050,
        1069
      ],
      "op": "PUSH3",
      "path": "58",
      "value": "0x1DA7"
    },
    "4462": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "i",
      "offset": [
        1050,
        1146
      ],
      "op": "JUMP",
      "path": "58"
    },
    "4463": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2022,
        2332
      ],
      "op": "JUMPDEST",
      "path": "58"
    },
    "4464": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x40"
    },
    "4466": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "MLOAD",
      "path": "58"
    },
    "4467": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "4472": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "4474": {
      "op": "SHL"
    },
    "4475": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "DUP2",
      "path": "58"
    },
    "4476": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "MSTORE",
      "path": "58"
    },
    "4477": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2195,
        2199
      ],
      "op": "ADDRESS",
      "path": "58"
    },
    "4478": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x4"
    },
    "4480": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "DUP3",
      "path": "58"
    },
    "4481": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "ADD",
      "path": "58"
    },
    "4482": {
      "op": "MSTORE"
    },
    "4483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4487": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4489": {
      "op": "SHL"
    },
    "4490": {
      "op": "SUB"
    },
    "4491": {
      "op": "DUP4"
    },
    "4492": {
      "op": "DUP2"
    },
    "4493": {
      "op": "AND"
    },
    "4494": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4496": {
      "op": "DUP4"
    },
    "4497": {
      "op": "ADD"
    },
    "4498": {
      "op": "MSTORE"
    },
    "4499": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2148,
        2168
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x0"
    },
    "4501": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2148,
        2168
      ],
      "op": "SWAP2",
      "path": "58"
    },
    "4502": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2213,
        2218
      ],
      "op": "DUP4",
      "path": "58"
    },
    "4503": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2213,
        2218
      ],
      "op": "SWAP2",
      "path": "58"
    },
    "4504": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2186
      ],
      "op": "DUP7",
      "path": "58"
    },
    "4505": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2186
      ],
      "op": "AND",
      "path": "58"
    },
    "4506": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2186
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "4507": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2186
      ],
      "op": "PUSH4",
      "path": "58",
      "value": "0xDD62ED3E"
    },
    "4512": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2186
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "4513": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4515": {
      "op": "ADD"
    },
    "4516": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x20"
    },
    "4518": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x40"
    },
    "4520": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "MLOAD",
      "path": "58"
    },
    "4521": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "DUP1",
      "path": "58"
    },
    "4522": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "DUP4",
      "path": "58"
    },
    "4523": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "SUB",
      "path": "58"
    },
    "4524": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "DUP2",
      "path": "58"
    },
    "4525": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "DUP7",
      "path": "58"
    },
    "4526": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "GAS",
      "path": "58"
    },
    "4527": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "STATICCALL",
      "path": "58"
    },
    "4528": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "ISZERO",
      "path": "58"
    },
    "4529": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "DUP1",
      "path": "58"
    },
    "4530": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "ISZERO",
      "path": "58"
    },
    "4531": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "PUSH3",
      "path": "58",
      "value": "0x11C1"
    },
    "4535": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "JUMPI",
      "path": "58"
    },
    "4536": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "RETURNDATASIZE",
      "path": "58"
    },
    "4537": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x0"
    },
    "4539": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "DUP1",
      "path": "58"
    },
    "4540": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "RETURNDATACOPY",
      "path": "58"
    },
    "4541": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "RETURNDATASIZE",
      "path": "58"
    },
    "4542": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x0"
    },
    "4544": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "REVERT",
      "path": "58"
    },
    "4545": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "JUMPDEST",
      "path": "58"
    },
    "4546": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "POP",
      "path": "58"
    },
    "4547": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "POP",
      "path": "58"
    },
    "4548": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "POP",
      "path": "58"
    },
    "4549": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "POP",
      "path": "58"
    },
    "4550": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x40"
    },
    "4552": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "MLOAD",
      "path": "58"
    },
    "4553": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "RETURNDATASIZE",
      "path": "58"
    },
    "4554": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x1F"
    },
    "4556": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "NOT",
      "path": "58"
    },
    "4557": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x1F"
    },
    "4559": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "DUP3",
      "path": "58"
    },
    "4560": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "ADD",
      "path": "58"
    },
    "4561": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "AND",
      "path": "58"
    },
    "4562": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "DUP3",
      "path": "58"
    },
    "4563": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "ADD",
      "path": "58"
    },
    "4564": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "DUP1",
      "path": "58"
    },
    "4565": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x40"
    },
    "4567": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "MSTORE",
      "path": "58"
    },
    "4568": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "POP",
      "path": "58"
    },
    "4569": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "DUP2",
      "path": "58"
    },
    "4570": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "ADD",
      "path": "58"
    },
    "4571": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "4572": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "PUSH3",
      "path": "58",
      "value": "0x11E7"
    },
    "4576": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "SWAP2",
      "path": "58"
    },
    "4577": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "4578": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "PUSH3",
      "path": "58",
      "value": "0x2426"
    },
    "4582": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "jump": "i",
      "offset": [
        2171,
        2210
      ],
      "op": "JUMP",
      "path": "58"
    },
    "4583": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2210
      ],
      "op": "JUMPDEST",
      "path": "58"
    },
    "4584": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2218
      ],
      "op": "PUSH3",
      "path": "58",
      "value": "0x11F3"
    },
    "4588": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2218
      ],
      "op": "SWAP2",
      "path": "58"
    },
    "4589": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2218
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "4590": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2218
      ],
      "op": "PUSH3",
      "path": "58",
      "value": "0x2677"
    },
    "4594": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "jump": "i",
      "offset": [
        2171,
        2218
      ],
      "op": "JUMP",
      "path": "58"
    },
    "4595": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2171,
        2218
      ],
      "op": "JUMPDEST",
      "path": "58"
    },
    "4596": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2255,
        2324
      ],
      "op": "PUSH1",
      "path": "58",
      "statement": 41,
      "value": "0x40"
    },
    "4598": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2255,
        2324
      ],
      "op": "MLOAD",
      "path": "58"
    },
    "4599": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4601": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4603": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4605": {
      "op": "SHL"
    },
    "4606": {
      "op": "SUB"
    },
    "4607": {
      "op": "DUP6"
    },
    "4608": {
      "op": "AND"
    },
    "4609": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2255,
        2324
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x24"
    },
    "4611": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2255,
        2324
      ],
      "op": "DUP3",
      "path": "58"
    },
    "4612": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2255,
        2324
      ],
      "op": "ADD",
      "path": "58"
    },
    "4613": {
      "op": "MSTORE"
    },
    "4614": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4616": {
      "op": "DUP2"
    },
    "4617": {
      "op": "ADD"
    },
    "4618": {
      "op": "DUP3"
    },
    "4619": {
      "op": "SWAP1"
    },
    "4620": {
      "op": "MSTORE"
    },
    "4621": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2148,
        2218
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "4622": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2148,
        2218
      ],
      "op": "SWAP2",
      "path": "58"
    },
    "4623": {
      "op": "POP"
    },
    "4624": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2228,
        2325
      ],
      "op": "PUSH3",
      "path": "58",
      "value": "0x110D"
    },
    "4628": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2228,
        2325
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "4629": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2248,
        2253
      ],
      "op": "DUP6",
      "path": "58"
    },
    "4630": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2248,
        2253
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "4631": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "4636": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4638": {
      "op": "SHL"
    },
    "4639": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2278,
        2300
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "4640": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4642": {
      "op": "ADD"
    },
    "4643": {
      "fn": "SafeERC20.safeIncreaseAllowance",
      "offset": [
        2255,
        2324
      ],
      "op": "PUSH3",
      "path": "58",
      "value": "0x1137"
    },
    "4647": {
      "op": "JUMP"
    },
    "4648": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "JUMPDEST",
      "path": "58"
    },
    "4649": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH1",
      "path": "58",
      "statement": 42,
      "value": "0x40"
    },
    "4651": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MLOAD",
      "path": "58"
    },
    "4652": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4654": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4656": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4658": {
      "op": "SHL"
    },
    "4659": {
      "op": "SUB"
    },
    "4660": {
      "op": "DUP4"
    },
    "4661": {
      "op": "AND"
    },
    "4662": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x24"
    },
    "4664": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP3",
      "path": "58"
    },
    "4665": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "ADD",
      "path": "58"
    },
    "4666": {
      "op": "MSTORE"
    },
    "4667": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4669": {
      "op": "DUP2"
    },
    "4670": {
      "op": "ADD"
    },
    "4671": {
      "op": "DUP3"
    },
    "4672": {
      "op": "SWAP1"
    },
    "4673": {
      "op": "MSTORE"
    },
    "4674": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        899
      ],
      "op": "PUSH3",
      "path": "58",
      "value": "0x980"
    },
    "4678": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        899
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "4679": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        833,
        838
      ],
      "op": "DUP5",
      "path": "58"
    },
    "4680": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        833,
        838
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "4681": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "4686": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4688": {
      "op": "SHL"
    },
    "4689": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        863,
        886
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "4690": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4692": {
      "op": "ADD"
    },
    "4693": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH3",
      "path": "58",
      "value": "0x1137"
    },
    "4697": {
      "op": "JUMP"
    },
    "4698": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4627,
        5926
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4699": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4695,
        4710
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 43,
      "value": "0x6"
    },
    "4701": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4695,
        4717
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4702": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4688,
        4717
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4703": {
      "branch": 74,
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4688,
        4717
      ],
      "op": "LT",
      "path": "0"
    },
    "4704": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4688,
        4750
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4705": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4688,
        4750
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4706": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4688,
        4750
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x126D"
    },
    "4710": {
      "branch": 74,
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4688,
        4750
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4711": {
      "op": "POP"
    },
    "4712": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4728,
        4743
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "4714": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4728,
        4750
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4715": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4721,
        4750
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4716": {
      "branch": 75,
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4721,
        4750
      ],
      "op": "LT",
      "path": "0"
    },
    "4717": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4688,
        4750
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4718": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4680,
        4767
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x12AA"
    },
    "4722": {
      "branch": 75,
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4680,
        4767
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4723": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4680,
        4767
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4725": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4680,
        4767
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4726": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4730": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4732": {
      "op": "SHL"
    },
    "4733": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4680,
        4767
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4734": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4680,
        4767
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4735": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4737": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4680,
        4767
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4739": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4680,
        4767
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4740": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4680,
        4767
      ],
      "op": "ADD",
      "path": "0"
    },
    "4741": {
      "op": "MSTORE"
    },
    "4742": {
      "op": "PUSH1",
      "value": "0xC"
    },
    "4744": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4746": {
      "op": "DUP3"
    },
    "4747": {
      "op": "ADD"
    },
    "4748": {
      "op": "MSTORE"
    },
    "4749": {
      "op": "PUSH12",
      "value": "0x496E76616C6964207374657"
    },
    "4762": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "4764": {
      "op": "SHL"
    },
    "4765": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4767": {
      "op": "DUP3"
    },
    "4768": {
      "op": "ADD"
    },
    "4769": {
      "op": "MSTORE"
    },
    "4770": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4772": {
      "op": "ADD"
    },
    "4773": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4680,
        4767
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x2D3"
    },
    "4777": {
      "op": "JUMP"
    },
    "4778": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4680,
        4767
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4779": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4823
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 44,
      "value": "0x2"
    },
    "4781": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4823
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4782": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4847,
        4862
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "4784": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4847,
        4868
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4785": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4847,
        4868
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4786": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4773,
        4786
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4788": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4773,
        4786
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4789": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4791": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4793": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4795": {
      "op": "SHL"
    },
    "4796": {
      "op": "SUB"
    },
    "4797": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4823
      ],
      "op": "AND",
      "path": "0"
    },
    "4798": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4823
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4799": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4838
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x35EA6A75"
    },
    "4804": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4838
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4805": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4863,
        4867
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4806": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4863,
        4867
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4807": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4847,
        4868
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4808": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4847,
        4868
      ],
      "op": "LT",
      "path": "0"
    },
    "4809": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4847,
        4868
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x12D7"
    },
    "4813": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4847,
        4868
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4814": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4847,
        4868
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x12D7"
    },
    "4818": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4847,
        4868
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x22A7"
    },
    "4822": {
      "fn": "RangeManager.removeFromStep",
      "jump": "i",
      "offset": [
        4847,
        4868
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4823": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4847,
        4868
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4824": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4847,
        4868
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4826": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4847,
        4868
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4827": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4847,
        4868
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4828": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4847,
        4868
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4829": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4847,
        4868
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4831": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4847,
        4868
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4832": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4847,
        4868
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4833": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4847,
        4868
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4834": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4847,
        4868
      ],
      "op": "ADD",
      "path": "0"
    },
    "4835": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4847,
        4868
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4836": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4870
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4838": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4870
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4839": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4870
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "4841": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4870
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4842": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4870
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4843": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4870
      ],
      "op": "SHL",
      "path": "0"
    },
    "4844": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4848": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4850": {
      "op": "SHL"
    },
    "4851": {
      "op": "SUB"
    },
    "4852": {
      "op": "NOT"
    },
    "4853": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4870
      ],
      "op": "AND",
      "path": "0"
    },
    "4854": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4870
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4855": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4870
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4860": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4862": {
      "op": "SHL"
    },
    "4863": {
      "op": "SUB"
    },
    "4864": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4847,
        4868
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4865": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4847,
        4868
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4866": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4847,
        4868
      ],
      "op": "AND",
      "path": "0"
    },
    "4867": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4870
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4869": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4870
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4870": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4870
      ],
      "op": "ADD",
      "path": "0"
    },
    "4871": {
      "op": "MSTORE"
    },
    "4872": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4874": {
      "op": "ADD"
    },
    "4875": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4870
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "4878": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4870
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4880": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4870
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4881": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4870
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4882": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4870
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4883": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4870
      ],
      "op": "SUB",
      "path": "0"
    },
    "4884": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4870
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4885": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4870
      ],
      "op": "DUP7",
      "path": "0"
    },
    "4886": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4870
      ],
      "op": "GAS",
      "path": "0"
    },
    "4887": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4870
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "4888": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4870
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4889": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4870
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4890": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4870
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4891": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4870
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1329"
    },
    "4895": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4870
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4896": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4870
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4897": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4870
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4899": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4870
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4900": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4870
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "4901": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4870
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4902": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4870
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4904": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4870
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4905": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4870
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4906": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4870
      ],
      "op": "POP",
      "path": "0"
    },
    "4907": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4870
      ],
      "op": "POP",
      "path": "0"
    },
    "4908": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4870
      ],
      "op": "POP",
      "path": "0"
    },
    "4909": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4870
      ],
      "op": "POP",
      "path": "0"
    },
    "4910": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4870
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4912": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4870
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4913": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4870
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4914": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4870
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "4916": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4870
      ],
      "op": "NOT",
      "path": "0"
    },
    "4917": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4870
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "4919": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4870
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4920": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4870
      ],
      "op": "ADD",
      "path": "0"
    },
    "4921": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4870
      ],
      "op": "AND",
      "path": "0"
    },
    "4922": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4870
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4923": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4870
      ],
      "op": "ADD",
      "path": "0"
    },
    "4924": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4870
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4925": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4870
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4927": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4870
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4928": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4870
      ],
      "op": "POP",
      "path": "0"
    },
    "4929": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4870
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4930": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4870
      ],
      "op": "ADD",
      "path": "0"
    },
    "4931": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4870
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4932": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4870
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x134F"
    },
    "4936": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4870
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4937": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4870
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4938": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4870
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x24BB"
    },
    "4942": {
      "fn": "RangeManager.removeFromStep",
      "jump": "i",
      "offset": [
        4811,
        4870
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4943": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4870
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4944": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4884
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "4946": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4884
      ],
      "op": "ADD",
      "path": "0"
    },
    "4947": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4811,
        4884
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4948": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4907
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4950": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4907
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4951": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "4956": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4958": {
      "op": "SHL"
    },
    "4959": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4907
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4960": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4907
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4961": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4896,
        4906
      ],
      "op": "CALLER",
      "path": "0"
    },
    "4962": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4907
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4964": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4907
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4965": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4907
      ],
      "op": "ADD",
      "path": "0"
    },
    "4966": {
      "op": "MSTORE"
    },
    "4967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4969": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4971": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4973": {
      "op": "SHL"
    },
    "4974": {
      "op": "SUB"
    },
    "4975": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4895
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4976": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4895
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4977": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4895
      ],
      "op": "AND",
      "path": "0"
    },
    "4978": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4895
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4979": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4895
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "4984": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4895
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4985": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4987": {
      "op": "ADD"
    },
    "4988": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4907
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4990": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4907
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4992": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4907
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4993": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4907
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4994": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4907
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4995": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4907
      ],
      "op": "SUB",
      "path": "0"
    },
    "4996": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4907
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4997": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4907
      ],
      "op": "DUP7",
      "path": "0"
    },
    "4998": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4907
      ],
      "op": "GAS",
      "path": "0"
    },
    "4999": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4907
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "5000": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4907
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5001": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4907
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5002": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4907
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5003": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4907
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1399"
    },
    "5007": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4907
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5008": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4907
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5009": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4907
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5011": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4907
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5012": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4907
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "5013": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4907
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5014": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4907
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5016": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4907
      ],
      "op": "REVERT",
      "path": "0"
    },
    "5017": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4907
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5018": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4907
      ],
      "op": "POP",
      "path": "0"
    },
    "5019": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4907
      ],
      "op": "POP",
      "path": "0"
    },
    "5020": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4907
      ],
      "op": "POP",
      "path": "0"
    },
    "5021": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4907
      ],
      "op": "POP",
      "path": "0"
    },
    "5022": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4907
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5024": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4907
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5025": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4907
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5026": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4907
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "5028": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4907
      ],
      "op": "NOT",
      "path": "0"
    },
    "5029": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4907
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "5031": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4907
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5032": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4907
      ],
      "op": "ADD",
      "path": "0"
    },
    "5033": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4907
      ],
      "op": "AND",
      "path": "0"
    },
    "5034": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4907
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5035": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4907
      ],
      "op": "ADD",
      "path": "0"
    },
    "5036": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4907
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5037": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4907
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5039": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4907
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5040": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4907
      ],
      "op": "POP",
      "path": "0"
    },
    "5041": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4907
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5042": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4907
      ],
      "op": "ADD",
      "path": "0"
    },
    "5043": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4907
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5044": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4907
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x13BF"
    },
    "5048": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4907
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5049": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4907
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5050": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4907
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x2426"
    },
    "5054": {
      "fn": "RangeManager.removeFromStep",
      "jump": "i",
      "offset": [
        4805,
        4907
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5055": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4805,
        4907
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5056": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4797,
        4907
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5057": {
      "op": "POP"
    },
    "5058": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4920,
        4929
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5059": {
      "branch": 76,
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4920,
        4929
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5060": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4916,
        5346
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1688"
    },
    "5064": {
      "branch": 76,
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4916,
        5346
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5065": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        4960
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 45,
      "value": "0x2"
    },
    "5067": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        4960
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5068": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5019,
        5034
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "5070": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5019,
        5040
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5071": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5019,
        5040
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5072": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5074": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5076": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5078": {
      "op": "SHL"
    },
    "5079": {
      "op": "SUB"
    },
    "5080": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        4960
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5081": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        4960
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5082": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        4960
      ],
      "op": "AND",
      "path": "0"
    },
    "5083": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        4960
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5084": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        4971
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8EBBD26"
    },
    "5089": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        4971
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5090": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        4960
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5091": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        4960
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5092": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5010
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x35EA6A75"
    },
    "5097": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5010
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5098": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5019,
        5034
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5099": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5035,
        5039
      ],
      "op": "DUP8",
      "path": "0"
    },
    "5100": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5035,
        5039
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5101": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5019,
        5040
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5102": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5019,
        5040
      ],
      "op": "LT",
      "path": "0"
    },
    "5103": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5019,
        5040
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x13FD"
    },
    "5107": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5019,
        5040
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5108": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5019,
        5040
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x13FD"
    },
    "5112": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5019,
        5040
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x22A7"
    },
    "5116": {
      "fn": "RangeManager.removeFromStep",
      "jump": "i",
      "offset": [
        5019,
        5040
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5117": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5019,
        5040
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5118": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5019,
        5040
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5120": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5019,
        5040
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5121": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5019,
        5040
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5122": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5019,
        5040
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5123": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5019,
        5040
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5125": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5019,
        5040
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5126": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5019,
        5040
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5127": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5019,
        5040
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5128": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5019,
        5040
      ],
      "op": "ADD",
      "path": "0"
    },
    "5129": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5019,
        5040
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5130": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5042
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5132": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5042
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5133": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5042
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "5135": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5042
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5136": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5042
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5137": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5042
      ],
      "op": "SHL",
      "path": "0"
    },
    "5138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5142": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5144": {
      "op": "SHL"
    },
    "5145": {
      "op": "SUB"
    },
    "5146": {
      "op": "NOT"
    },
    "5147": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5042
      ],
      "op": "AND",
      "path": "0"
    },
    "5148": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5042
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5149": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5042
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5150": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5152": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5154": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5156": {
      "op": "SHL"
    },
    "5157": {
      "op": "SUB"
    },
    "5158": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5019,
        5040
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5159": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5019,
        5040
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5160": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5019,
        5040
      ],
      "op": "AND",
      "path": "0"
    },
    "5161": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5042
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5163": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5042
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5164": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5042
      ],
      "op": "ADD",
      "path": "0"
    },
    "5165": {
      "op": "MSTORE"
    },
    "5166": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5168": {
      "op": "ADD"
    },
    "5169": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5042
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "5172": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5042
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5174": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5042
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5175": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5042
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5176": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5042
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5177": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5042
      ],
      "op": "SUB",
      "path": "0"
    },
    "5178": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5042
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5179": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5042
      ],
      "op": "DUP7",
      "path": "0"
    },
    "5180": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5042
      ],
      "op": "GAS",
      "path": "0"
    },
    "5181": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5042
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "5182": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5042
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5183": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5042
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5184": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5042
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5185": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5042
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x144F"
    },
    "5189": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5042
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5190": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5042
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5191": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5042
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5193": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5042
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5194": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5042
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "5195": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5042
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5196": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5042
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5198": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5042
      ],
      "op": "REVERT",
      "path": "0"
    },
    "5199": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5042
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5200": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5042
      ],
      "op": "POP",
      "path": "0"
    },
    "5201": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5042
      ],
      "op": "POP",
      "path": "0"
    },
    "5202": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5042
      ],
      "op": "POP",
      "path": "0"
    },
    "5203": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5042
      ],
      "op": "POP",
      "path": "0"
    },
    "5204": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5042
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5206": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5042
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5207": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5042
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5208": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5042
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "5210": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5042
      ],
      "op": "NOT",
      "path": "0"
    },
    "5211": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5042
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "5213": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5042
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5214": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5042
      ],
      "op": "ADD",
      "path": "0"
    },
    "5215": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5042
      ],
      "op": "AND",
      "path": "0"
    },
    "5216": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5042
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5217": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5042
      ],
      "op": "ADD",
      "path": "0"
    },
    "5218": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5042
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5219": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5042
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5221": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5042
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5222": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5042
      ],
      "op": "POP",
      "path": "0"
    },
    "5223": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5042
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5224": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5042
      ],
      "op": "ADD",
      "path": "0"
    },
    "5225": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5042
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5226": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5042
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1475"
    },
    "5230": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5042
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5231": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5042
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5232": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5042
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x24BB"
    },
    "5236": {
      "fn": "RangeManager.removeFromStep",
      "jump": "i",
      "offset": [
        4983,
        5042
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5237": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5042
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5238": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5056
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "5240": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5056
      ],
      "op": "ADD",
      "path": "0"
    },
    "5241": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4983,
        5056
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5242": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5069,
        5079
      ],
      "op": "CALLER",
      "path": "0"
    },
    "5243": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5092,
        5097
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5244": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        5107
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5246": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        5107
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5247": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        5107
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5248": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        5107
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "5253": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        5107
      ],
      "op": "AND",
      "path": "0"
    },
    "5254": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        5107
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "5256": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        5107
      ],
      "op": "SHL",
      "path": "0"
    },
    "5257": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        5107
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5258": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        5107
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5259": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        5107
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5261": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        5107
      ],
      "op": "ADD",
      "path": "0"
    },
    "5262": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        5107
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x149B"
    },
    "5266": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        5107
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "5267": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        5107
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5268": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        5107
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5269": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        5107
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5270": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        5107
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x25C3"
    },
    "5274": {
      "fn": "RangeManager.removeFromStep",
      "jump": "i",
      "offset": [
        4948,
        5107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5275": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        5107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5276": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        5107
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5278": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        5107
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5280": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        5107
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5281": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        5107
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5282": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        5107
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5283": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        5107
      ],
      "op": "SUB",
      "path": "0"
    },
    "5284": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        5107
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5285": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        5107
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5287": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        5107
      ],
      "op": "DUP8",
      "path": "0"
    },
    "5288": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        5107
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5289": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        5107
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "5290": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        5107
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5291": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        5107
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5292": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        5107
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5293": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        5107
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x14B6"
    },
    "5297": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        5107
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5298": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        5107
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5300": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        5107
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5301": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        5107
      ],
      "op": "REVERT",
      "path": "0"
    },
    "5302": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        5107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5303": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        5107
      ],
      "op": "POP",
      "path": "0"
    },
    "5304": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        5107
      ],
      "op": "GAS",
      "path": "0"
    },
    "5305": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        5107
      ],
      "op": "CALL",
      "path": "0"
    },
    "5306": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        5107
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5307": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        5107
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5308": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        5107
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5309": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        5107
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x14CB"
    },
    "5313": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        5107
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5314": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        5107
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5315": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        5107
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5317": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        5107
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5318": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        5107
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "5319": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        5107
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5320": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        5107
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5322": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        5107
      ],
      "op": "REVERT",
      "path": "0"
    },
    "5323": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4948,
        5107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5324": {
      "op": "POP"
    },
    "5325": {
      "op": "POP"
    },
    "5326": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5137
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 46,
      "value": "0x2"
    },
    "5328": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5137
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5329": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5155,
        5170
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "5331": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5155,
        5176
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5332": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5155,
        5176
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5333": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5337": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5339": {
      "op": "SHL"
    },
    "5340": {
      "op": "SUB"
    },
    "5341": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5137
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5342": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5137
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5343": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5137
      ],
      "op": "AND",
      "path": "0"
    },
    "5344": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5137
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "5345": {
      "op": "POP"
    },
    "5346": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5146
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x69328DEC"
    },
    "5351": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5146
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5352": {
      "op": "POP"
    },
    "5353": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5155,
        5170
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5354": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5171,
        5175
      ],
      "op": "DUP6",
      "path": "0"
    },
    "5355": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5171,
        5175
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5356": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5155,
        5176
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5357": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5155,
        5176
      ],
      "op": "LT",
      "path": "0"
    },
    "5358": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5155,
        5176
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x14FC"
    },
    "5362": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5155,
        5176
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5363": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5155,
        5176
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x14FC"
    },
    "5367": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5155,
        5176
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x22A7"
    },
    "5371": {
      "fn": "RangeManager.removeFromStep",
      "jump": "i",
      "offset": [
        5155,
        5176
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5372": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5155,
        5176
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5373": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5155,
        5176
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5375": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5155,
        5176
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5376": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5155,
        5176
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5377": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5155,
        5176
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5378": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5155,
        5176
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5380": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5155,
        5176
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5381": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5155,
        5176
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5382": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5155,
        5176
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5383": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5155,
        5176
      ],
      "op": "ADD",
      "path": "0"
    },
    "5384": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5155,
        5176
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5385": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5387": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5392": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5394": {
      "op": "SHL"
    },
    "5395": {
      "op": "SUB"
    },
    "5396": {
      "op": "NOT"
    },
    "5397": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "5399": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5400": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5401": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "SHL",
      "path": "0"
    },
    "5402": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "AND",
      "path": "0"
    },
    "5403": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5404": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5405": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x153A"
    },
    "5409": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5410": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5414": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5416": {
      "op": "SHL"
    },
    "5417": {
      "op": "SUB"
    },
    "5418": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5155,
        5176
      ],
      "op": "AND",
      "path": "0"
    },
    "5419": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5155,
        5176
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5420": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5422": {
      "op": "NOT"
    },
    "5423": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5179,
        5196
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5424": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5206,
        5210
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "5425": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5206,
        5210
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5426": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5428": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "ADD",
      "path": "0"
    },
    "5429": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x25E7"
    },
    "5433": {
      "fn": "RangeManager.removeFromStep",
      "jump": "i",
      "offset": [
        5125,
        5212
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5434": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5435": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5437": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5439": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5440": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5441": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5442": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "SUB",
      "path": "0"
    },
    "5443": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5444": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5446": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "DUP8",
      "path": "0"
    },
    "5447": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "GAS",
      "path": "0"
    },
    "5448": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "CALL",
      "path": "0"
    },
    "5449": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5450": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5451": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5452": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x155A"
    },
    "5456": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5457": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5458": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5460": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5461": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "5462": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5463": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5465": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "REVERT",
      "path": "0"
    },
    "5466": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5467": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "POP",
      "path": "0"
    },
    "5468": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "POP",
      "path": "0"
    },
    "5469": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "POP",
      "path": "0"
    },
    "5470": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "POP",
      "path": "0"
    },
    "5471": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5473": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5474": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5475": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "5477": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "NOT",
      "path": "0"
    },
    "5478": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "5480": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5481": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "ADD",
      "path": "0"
    },
    "5482": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "AND",
      "path": "0"
    },
    "5483": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5484": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "ADD",
      "path": "0"
    },
    "5485": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5486": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5488": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5489": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "POP",
      "path": "0"
    },
    "5490": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5491": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "ADD",
      "path": "0"
    },
    "5492": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5493": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1580"
    },
    "5497": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5498": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5499": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x2426"
    },
    "5503": {
      "fn": "RangeManager.removeFromStep",
      "jump": "i",
      "offset": [
        5125,
        5212
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5504": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5125,
        5212
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5505": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5117,
        5212
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5506": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5117,
        5212
      ],
      "op": "POP",
      "path": "0"
    },
    "5507": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5237
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 47,
      "value": "0x6"
    },
    "5509": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5238,
        5242
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5510": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5243
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5511": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5243
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5512": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5243
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5513": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5243
      ],
      "op": "LT",
      "path": "0"
    },
    "5514": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5243
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1598"
    },
    "5518": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5243
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5519": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5243
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1598"
    },
    "5523": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5243
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x22A7"
    },
    "5527": {
      "fn": "RangeManager.removeFromStep",
      "jump": "i",
      "offset": [
        5222,
        5243
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5528": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5243
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5529": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5243
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5531": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5243
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5532": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5243
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5533": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5243
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5534": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5243
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5536": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5243
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5537": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5243
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5538": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5243
      ],
      "op": "ADD",
      "path": "0"
    },
    "5539": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5243
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5540": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5265
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5542": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5265
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5543": {
      "op": "PUSH4",
      "value": "0xA41FE49F"
    },
    "5548": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5550": {
      "op": "SHL"
    },
    "5551": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5265
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5552": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5265
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5553": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5265
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5555": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5265
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5556": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5265
      ],
      "op": "ADD",
      "path": "0"
    },
    "5557": {
      "op": "DUP5"
    },
    "5558": {
      "op": "SWAP1"
    },
    "5559": {
      "op": "MSTORE"
    },
    "5560": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5562": {
      "op": "DUP2"
    },
    "5563": {
      "op": "ADD"
    },
    "5564": {
      "op": "DUP4"
    },
    "5565": {
      "op": "SWAP1"
    },
    "5566": {
      "op": "MSTORE"
    },
    "5567": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5569": {
      "op": "DUP2"
    },
    "5570": {
      "op": "ADD"
    },
    "5571": {
      "op": "SWAP3"
    },
    "5572": {
      "op": "SWAP1"
    },
    "5573": {
      "op": "SWAP3"
    },
    "5574": {
      "op": "MSTORE"
    },
    "5575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5577": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5579": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5581": {
      "op": "SHL"
    },
    "5582": {
      "op": "SUB"
    },
    "5583": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5243
      ],
      "op": "AND",
      "path": "0"
    },
    "5584": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5243
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5585": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5252
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA41FE49F"
    },
    "5590": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5252
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5591": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5593": {
      "op": "ADD"
    },
    "5594": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5265
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5596": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5265
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5597": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5265
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5598": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5265
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5599": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5265
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5600": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5265
      ],
      "op": "SUB",
      "path": "0"
    },
    "5601": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5265
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5602": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5265
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5604": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5265
      ],
      "op": "DUP8",
      "path": "0"
    },
    "5605": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5265
      ],
      "op": "GAS",
      "path": "0"
    },
    "5606": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5265
      ],
      "op": "CALL",
      "path": "0"
    },
    "5607": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5265
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5608": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5265
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5609": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5265
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5610": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5265
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x15F8"
    },
    "5614": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5265
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5615": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5265
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5616": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5265
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5618": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5265
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5619": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5265
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "5620": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5265
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5621": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5265
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5623": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5265
      ],
      "op": "REVERT",
      "path": "0"
    },
    "5624": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5265
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5625": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5265
      ],
      "op": "POP",
      "path": "0"
    },
    "5626": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5265
      ],
      "op": "POP",
      "path": "0"
    },
    "5627": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5265
      ],
      "op": "POP",
      "path": "0"
    },
    "5628": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5265
      ],
      "op": "POP",
      "path": "0"
    },
    "5629": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5265
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5631": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5265
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5632": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5265
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5633": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5265
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "5635": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5265
      ],
      "op": "NOT",
      "path": "0"
    },
    "5636": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5265
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "5638": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5265
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5639": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5265
      ],
      "op": "ADD",
      "path": "0"
    },
    "5640": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5265
      ],
      "op": "AND",
      "path": "0"
    },
    "5641": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5265
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5642": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5265
      ],
      "op": "ADD",
      "path": "0"
    },
    "5643": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5265
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5644": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5265
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5646": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5265
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5647": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5265
      ],
      "op": "POP",
      "path": "0"
    },
    "5648": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5265
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5649": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5265
      ],
      "op": "ADD",
      "path": "0"
    },
    "5650": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5265
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5651": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5265
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x161E"
    },
    "5655": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5265
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5656": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5265
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5657": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5265
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x268D"
    },
    "5661": {
      "fn": "RangeManager.removeFromStep",
      "jump": "i",
      "offset": [
        5222,
        5265
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5662": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5265
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5663": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5265
      ],
      "op": "POP",
      "path": "0"
    },
    "5664": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5222,
        5265
      ],
      "op": "POP",
      "path": "0"
    },
    "5665": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5280,
        5339
      ],
      "op": "PUSH32",
      "path": "0",
      "statement": 48,
      "value": "0x9B1BFA7FA9EE420A16E124F794C35AC9F90472ACC99140EB2F6447C714CAD8EB"
    },
    "5698": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5289,
        5299
      ],
      "op": "CALLER",
      "path": "0"
    },
    "5699": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5309,
        5324
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "5701": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5325,
        5329
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5702": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5309,
        5330
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5703": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5309,
        5330
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5704": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5309,
        5330
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5705": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5309,
        5330
      ],
      "op": "LT",
      "path": "0"
    },
    "5706": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5309,
        5330
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1658"
    },
    "5710": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5309,
        5330
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5711": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5309,
        5330
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1658"
    },
    "5715": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5309,
        5330
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x22A7"
    },
    "5719": {
      "fn": "RangeManager.removeFromStep",
      "jump": "i",
      "offset": [
        5309,
        5330
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5720": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5309,
        5330
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5721": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5309,
        5330
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5723": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5309,
        5330
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5724": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5309,
        5330
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5725": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5309,
        5330
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5726": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5309,
        5330
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5728": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5309,
        5330
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5729": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5309,
        5330
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5730": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5309,
        5330
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5731": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5309,
        5330
      ],
      "op": "ADD",
      "path": "0"
    },
    "5732": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5309,
        5330
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5733": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5280,
        5339
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5735": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5280,
        5339
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5736": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5280,
        5339
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x167F"
    },
    "5740": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5280,
        5339
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5741": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5280,
        5339
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5742": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5744": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5746": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5748": {
      "op": "SHL"
    },
    "5749": {
      "op": "SUB"
    },
    "5750": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5309,
        5330
      ],
      "op": "AND",
      "path": "0"
    },
    "5751": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5309,
        5330
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5752": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5333,
        5338
      ],
      "op": "DUP6",
      "path": "0"
    },
    "5753": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5333,
        5338
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5754": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5280,
        5339
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x25C3"
    },
    "5758": {
      "fn": "RangeManager.removeFromStep",
      "jump": "i",
      "offset": [
        5280,
        5339
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5759": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5280,
        5339
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5760": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5280,
        5339
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5762": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5280,
        5339
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5763": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5280,
        5339
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5764": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5280,
        5339
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5765": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5280,
        5339
      ],
      "op": "SUB",
      "path": "0"
    },
    "5766": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5280,
        5339
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5767": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5280,
        5339
      ],
      "op": "LOG1",
      "path": "0"
    },
    "5768": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4916,
        5346
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5769": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5386
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 49,
      "value": "0x2"
    },
    "5771": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5386
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5772": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5410,
        5425
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "5774": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5410,
        5431
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5775": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5410,
        5431
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5780": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5782": {
      "op": "SHL"
    },
    "5783": {
      "op": "SUB"
    },
    "5784": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5386
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5785": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5386
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5786": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5386
      ],
      "op": "AND",
      "path": "0"
    },
    "5787": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5386
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5788": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5401
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x35EA6A75"
    },
    "5793": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5401
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5794": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5410,
        5425
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5795": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5426,
        5430
      ],
      "op": "DUP6",
      "path": "0"
    },
    "5796": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5426,
        5430
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5797": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5410,
        5431
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5798": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5410,
        5431
      ],
      "op": "LT",
      "path": "0"
    },
    "5799": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5410,
        5431
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x16B5"
    },
    "5803": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5410,
        5431
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5804": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5410,
        5431
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x16B5"
    },
    "5808": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5410,
        5431
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x22A7"
    },
    "5812": {
      "fn": "RangeManager.removeFromStep",
      "jump": "i",
      "offset": [
        5410,
        5431
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5813": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5410,
        5431
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5814": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5410,
        5431
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5816": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5410,
        5431
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5817": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5410,
        5431
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5818": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5410,
        5431
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5819": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5410,
        5431
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5821": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5410,
        5431
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5822": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5410,
        5431
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5823": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5410,
        5431
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5824": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5410,
        5431
      ],
      "op": "ADD",
      "path": "0"
    },
    "5825": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5410,
        5431
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5826": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5433
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5828": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5433
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5829": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5433
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "5831": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5433
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5832": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5433
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5833": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5433
      ],
      "op": "SHL",
      "path": "0"
    },
    "5834": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5836": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5838": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5840": {
      "op": "SHL"
    },
    "5841": {
      "op": "SUB"
    },
    "5842": {
      "op": "NOT"
    },
    "5843": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5433
      ],
      "op": "AND",
      "path": "0"
    },
    "5844": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5433
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5845": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5433
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5850": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5852": {
      "op": "SHL"
    },
    "5853": {
      "op": "SUB"
    },
    "5854": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5410,
        5431
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5855": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5410,
        5431
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5856": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5410,
        5431
      ],
      "op": "AND",
      "path": "0"
    },
    "5857": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5433
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5859": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5433
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5860": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5433
      ],
      "op": "ADD",
      "path": "0"
    },
    "5861": {
      "op": "MSTORE"
    },
    "5862": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5864": {
      "op": "ADD"
    },
    "5865": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5433
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "5868": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5433
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5870": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5433
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5871": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5433
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5872": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5433
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5873": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5433
      ],
      "op": "SUB",
      "path": "0"
    },
    "5874": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5433
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5875": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5433
      ],
      "op": "DUP7",
      "path": "0"
    },
    "5876": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5433
      ],
      "op": "GAS",
      "path": "0"
    },
    "5877": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5433
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "5878": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5433
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5879": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5433
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5880": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5433
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5881": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5433
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1707"
    },
    "5885": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5433
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5886": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5433
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5887": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5433
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5889": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5433
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5890": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5433
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "5891": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5433
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5892": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5433
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5894": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5433
      ],
      "op": "REVERT",
      "path": "0"
    },
    "5895": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5433
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5896": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5433
      ],
      "op": "POP",
      "path": "0"
    },
    "5897": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5433
      ],
      "op": "POP",
      "path": "0"
    },
    "5898": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5433
      ],
      "op": "POP",
      "path": "0"
    },
    "5899": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5433
      ],
      "op": "POP",
      "path": "0"
    },
    "5900": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5433
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5902": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5433
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5903": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5433
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5904": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5433
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "5906": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5433
      ],
      "op": "NOT",
      "path": "0"
    },
    "5907": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5433
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "5909": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5433
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5910": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5433
      ],
      "op": "ADD",
      "path": "0"
    },
    "5911": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5433
      ],
      "op": "AND",
      "path": "0"
    },
    "5912": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5433
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5913": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5433
      ],
      "op": "ADD",
      "path": "0"
    },
    "5914": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5433
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5915": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5433
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5917": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5433
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5918": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5433
      ],
      "op": "POP",
      "path": "0"
    },
    "5919": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5433
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5920": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5433
      ],
      "op": "ADD",
      "path": "0"
    },
    "5921": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5433
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5922": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5433
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x172D"
    },
    "5926": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5433
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5927": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5433
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5928": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5433
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x24BB"
    },
    "5932": {
      "fn": "RangeManager.removeFromStep",
      "jump": "i",
      "offset": [
        5374,
        5433
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5933": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5433
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5934": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5447
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "5936": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5447
      ],
      "op": "ADD",
      "path": "0"
    },
    "5937": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5374,
        5447
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5938": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5470
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5940": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5470
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5941": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "5946": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5948": {
      "op": "SHL"
    },
    "5949": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5470
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5950": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5470
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5951": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5459,
        5469
      ],
      "op": "CALLER",
      "path": "0"
    },
    "5952": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5470
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5954": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5470
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5955": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5470
      ],
      "op": "ADD",
      "path": "0"
    },
    "5956": {
      "op": "MSTORE"
    },
    "5957": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5961": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5963": {
      "op": "SHL"
    },
    "5964": {
      "op": "SUB"
    },
    "5965": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5458
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5966": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5458
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5967": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5458
      ],
      "op": "AND",
      "path": "0"
    },
    "5968": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5458
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5969": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5458
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "5974": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5458
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5975": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5977": {
      "op": "ADD"
    },
    "5978": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5470
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5980": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5470
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5982": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5470
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5983": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5470
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5984": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5470
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5985": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5470
      ],
      "op": "SUB",
      "path": "0"
    },
    "5986": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5470
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5987": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5470
      ],
      "op": "DUP7",
      "path": "0"
    },
    "5988": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5470
      ],
      "op": "GAS",
      "path": "0"
    },
    "5989": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5470
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "5990": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5470
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5991": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5470
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5992": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5470
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5993": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5470
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1777"
    },
    "5997": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5470
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5998": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5470
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5999": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5470
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6001": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5470
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6002": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5470
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "6003": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5470
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6004": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5470
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6006": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5470
      ],
      "op": "REVERT",
      "path": "0"
    },
    "6007": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5470
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6008": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5470
      ],
      "op": "POP",
      "path": "0"
    },
    "6009": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5470
      ],
      "op": "POP",
      "path": "0"
    },
    "6010": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5470
      ],
      "op": "POP",
      "path": "0"
    },
    "6011": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5470
      ],
      "op": "POP",
      "path": "0"
    },
    "6012": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5470
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6014": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5470
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6015": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5470
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6016": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5470
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "6018": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5470
      ],
      "op": "NOT",
      "path": "0"
    },
    "6019": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5470
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "6021": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5470
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6022": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5470
      ],
      "op": "ADD",
      "path": "0"
    },
    "6023": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5470
      ],
      "op": "AND",
      "path": "0"
    },
    "6024": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5470
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6025": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5470
      ],
      "op": "ADD",
      "path": "0"
    },
    "6026": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5470
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6027": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5470
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6029": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5470
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6030": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5470
      ],
      "op": "POP",
      "path": "0"
    },
    "6031": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5470
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6032": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5470
      ],
      "op": "ADD",
      "path": "0"
    },
    "6033": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5470
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6034": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5470
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x179D"
    },
    "6038": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5470
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6039": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5470
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6040": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5470
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x2426"
    },
    "6044": {
      "fn": "RangeManager.removeFromStep",
      "jump": "i",
      "offset": [
        5368,
        5470
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6045": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5368,
        5470
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6046": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5360,
        5470
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6047": {
      "op": "POP"
    },
    "6048": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5480,
        5489
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6049": {
      "branch": 77,
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5480,
        5489
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6050": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5476,
        5911
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1A69"
    },
    "6054": {
      "branch": 77,
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5476,
        5911
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6055": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5517
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 50,
      "value": "0x2"
    },
    "6057": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5517
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6058": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5576,
        5591
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "6060": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5576,
        5597
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6061": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5576,
        5597
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6062": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6064": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6066": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6068": {
      "op": "SHL"
    },
    "6069": {
      "op": "SUB"
    },
    "6070": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5517
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6071": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5517
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6072": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5517
      ],
      "op": "AND",
      "path": "0"
    },
    "6073": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5517
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6074": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5528
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8EBBD26"
    },
    "6079": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5528
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6080": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5517
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6081": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5517
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6082": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5567
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x35EA6A75"
    },
    "6087": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5567
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6088": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5576,
        5591
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6089": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5592,
        5596
      ],
      "op": "DUP8",
      "path": "0"
    },
    "6090": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5592,
        5596
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6091": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5576,
        5597
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6092": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5576,
        5597
      ],
      "op": "LT",
      "path": "0"
    },
    "6093": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5576,
        5597
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x17DB"
    },
    "6097": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5576,
        5597
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6098": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5576,
        5597
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x17DB"
    },
    "6102": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5576,
        5597
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x22A7"
    },
    "6106": {
      "fn": "RangeManager.removeFromStep",
      "jump": "i",
      "offset": [
        5576,
        5597
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6107": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5576,
        5597
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6108": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5576,
        5597
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6110": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5576,
        5597
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6111": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5576,
        5597
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6112": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5576,
        5597
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6113": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5576,
        5597
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6115": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5576,
        5597
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6116": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5576,
        5597
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6117": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5576,
        5597
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "6118": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5576,
        5597
      ],
      "op": "ADD",
      "path": "0"
    },
    "6119": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5576,
        5597
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6120": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5599
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6122": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5599
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6123": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5599
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "6125": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5599
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6126": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5599
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6127": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5599
      ],
      "op": "SHL",
      "path": "0"
    },
    "6128": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6130": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6132": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6134": {
      "op": "SHL"
    },
    "6135": {
      "op": "SUB"
    },
    "6136": {
      "op": "NOT"
    },
    "6137": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5599
      ],
      "op": "AND",
      "path": "0"
    },
    "6138": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5599
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6139": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5599
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6142": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6144": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6146": {
      "op": "SHL"
    },
    "6147": {
      "op": "SUB"
    },
    "6148": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5576,
        5597
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6149": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5576,
        5597
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6150": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5576,
        5597
      ],
      "op": "AND",
      "path": "0"
    },
    "6151": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5599
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6153": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5599
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6154": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5599
      ],
      "op": "ADD",
      "path": "0"
    },
    "6155": {
      "op": "MSTORE"
    },
    "6156": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6158": {
      "op": "ADD"
    },
    "6159": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5599
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "6162": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5599
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6164": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5599
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6165": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5599
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6166": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5599
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6167": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5599
      ],
      "op": "SUB",
      "path": "0"
    },
    "6168": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5599
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6169": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5599
      ],
      "op": "DUP7",
      "path": "0"
    },
    "6170": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5599
      ],
      "op": "GAS",
      "path": "0"
    },
    "6171": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5599
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "6172": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5599
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6173": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5599
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6174": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5599
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6175": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5599
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x182D"
    },
    "6179": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5599
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6180": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5599
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6181": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5599
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6183": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5599
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6184": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5599
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "6185": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5599
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6186": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5599
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6188": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5599
      ],
      "op": "REVERT",
      "path": "0"
    },
    "6189": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5599
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6190": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5599
      ],
      "op": "POP",
      "path": "0"
    },
    "6191": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5599
      ],
      "op": "POP",
      "path": "0"
    },
    "6192": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5599
      ],
      "op": "POP",
      "path": "0"
    },
    "6193": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5599
      ],
      "op": "POP",
      "path": "0"
    },
    "6194": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5599
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6196": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5599
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6197": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5599
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6198": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5599
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "6200": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5599
      ],
      "op": "NOT",
      "path": "0"
    },
    "6201": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5599
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "6203": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5599
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6204": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5599
      ],
      "op": "ADD",
      "path": "0"
    },
    "6205": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5599
      ],
      "op": "AND",
      "path": "0"
    },
    "6206": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5599
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6207": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5599
      ],
      "op": "ADD",
      "path": "0"
    },
    "6208": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5599
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6209": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5599
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6211": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5599
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6212": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5599
      ],
      "op": "POP",
      "path": "0"
    },
    "6213": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5599
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6214": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5599
      ],
      "op": "ADD",
      "path": "0"
    },
    "6215": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5599
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6216": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5599
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1853"
    },
    "6220": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5599
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6221": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5599
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6222": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5599
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x24BB"
    },
    "6226": {
      "fn": "RangeManager.removeFromStep",
      "jump": "i",
      "offset": [
        5540,
        5599
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6227": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5599
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6228": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5613
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "6230": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5613
      ],
      "op": "ADD",
      "path": "0"
    },
    "6231": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5540,
        5613
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6232": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5626,
        5636
      ],
      "op": "CALLER",
      "path": "0"
    },
    "6233": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5649,
        5654
      ],
      "op": "DUP5",
      "path": "0"
    },
    "6234": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5664
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6236": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5664
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6237": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5664
      ],
      "op": "DUP5",
      "path": "0"
    },
    "6238": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5664
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "6243": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5664
      ],
      "op": "AND",
      "path": "0"
    },
    "6244": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5664
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "6246": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5664
      ],
      "op": "SHL",
      "path": "0"
    },
    "6247": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5664
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6248": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5664
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6249": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5664
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6251": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5664
      ],
      "op": "ADD",
      "path": "0"
    },
    "6252": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5664
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1879"
    },
    "6256": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5664
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "6257": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5664
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6258": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5664
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6259": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5664
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6260": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5664
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x25C3"
    },
    "6264": {
      "fn": "RangeManager.removeFromStep",
      "jump": "i",
      "offset": [
        5505,
        5664
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6265": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5664
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6266": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5664
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6268": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5664
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6270": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5664
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6271": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5664
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6272": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5664
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6273": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5664
      ],
      "op": "SUB",
      "path": "0"
    },
    "6274": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5664
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6275": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5664
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6277": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5664
      ],
      "op": "DUP8",
      "path": "0"
    },
    "6278": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5664
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6279": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5664
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "6280": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5664
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6281": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5664
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6282": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5664
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6283": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5664
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1894"
    },
    "6287": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5664
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6288": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5664
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6290": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5664
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6291": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5664
      ],
      "op": "REVERT",
      "path": "0"
    },
    "6292": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5664
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6293": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5664
      ],
      "op": "POP",
      "path": "0"
    },
    "6294": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5664
      ],
      "op": "GAS",
      "path": "0"
    },
    "6295": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5664
      ],
      "op": "CALL",
      "path": "0"
    },
    "6296": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5664
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6297": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5664
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6298": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5664
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6299": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5664
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x18A9"
    },
    "6303": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5664
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6304": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5664
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6305": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5664
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6307": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5664
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6308": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5664
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "6309": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5664
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6310": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5664
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6312": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5664
      ],
      "op": "REVERT",
      "path": "0"
    },
    "6313": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5505,
        5664
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6314": {
      "op": "POP"
    },
    "6315": {
      "op": "POP"
    },
    "6316": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "6318": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5702
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6319": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5720,
        5735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "6321": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5720,
        5741
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6322": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5720,
        5741
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6323": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5674,
        5687
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6325": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5674,
        5687
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "6326": {
      "op": "POP"
    },
    "6327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6329": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6331": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6333": {
      "op": "SHL"
    },
    "6334": {
      "op": "SUB"
    },
    "6335": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5702
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6336": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5702
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6337": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5702
      ],
      "op": "AND",
      "path": "0"
    },
    "6338": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5702
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6339": {
      "op": "POP"
    },
    "6340": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5711
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x69328DEC"
    },
    "6345": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5711
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6346": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5736,
        5740
      ],
      "op": "DUP7",
      "path": "0"
    },
    "6347": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5736,
        5740
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6348": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5720,
        5741
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6349": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5720,
        5741
      ],
      "op": "LT",
      "path": "0"
    },
    "6350": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5720,
        5741
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x18DC"
    },
    "6354": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5720,
        5741
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6355": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5720,
        5741
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x18DC"
    },
    "6359": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5720,
        5741
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x22A7"
    },
    "6363": {
      "fn": "RangeManager.removeFromStep",
      "jump": "i",
      "offset": [
        5720,
        5741
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6364": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5720,
        5741
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6365": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5720,
        5741
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6367": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5720,
        5741
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6368": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5720,
        5741
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6369": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5720,
        5741
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6370": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5720,
        5741
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6372": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5720,
        5741
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6373": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5720,
        5741
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6374": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5720,
        5741
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "6375": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5720,
        5741
      ],
      "op": "ADD",
      "path": "0"
    },
    "6376": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5720,
        5741
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6377": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6379": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6380": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6384": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6386": {
      "op": "SHL"
    },
    "6387": {
      "op": "SUB"
    },
    "6388": {
      "op": "NOT"
    },
    "6389": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "6391": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "DUP5",
      "path": "0"
    },
    "6392": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6393": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "SHL",
      "path": "0"
    },
    "6394": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "AND",
      "path": "0"
    },
    "6395": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6396": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6397": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x191A"
    },
    "6401": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6406": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6408": {
      "op": "SHL"
    },
    "6409": {
      "op": "SUB"
    },
    "6410": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5720,
        5741
      ],
      "op": "AND",
      "path": "0"
    },
    "6411": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5720,
        5741
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6412": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6414": {
      "op": "NOT"
    },
    "6415": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5744,
        5761
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6416": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5771,
        5775
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "6417": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5771,
        5775
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6418": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6420": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "ADD",
      "path": "0"
    },
    "6421": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x25E7"
    },
    "6425": {
      "fn": "RangeManager.removeFromStep",
      "jump": "i",
      "offset": [
        5690,
        5777
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6426": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6427": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6429": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6431": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6432": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6433": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6434": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "SUB",
      "path": "0"
    },
    "6435": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6436": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6438": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "DUP8",
      "path": "0"
    },
    "6439": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "GAS",
      "path": "0"
    },
    "6440": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "CALL",
      "path": "0"
    },
    "6441": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6442": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6443": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6444": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x193A"
    },
    "6448": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6449": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6450": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6452": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6453": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "6454": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6455": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6457": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "REVERT",
      "path": "0"
    },
    "6458": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6459": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "POP",
      "path": "0"
    },
    "6460": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "POP",
      "path": "0"
    },
    "6461": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "POP",
      "path": "0"
    },
    "6462": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "POP",
      "path": "0"
    },
    "6463": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6465": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6466": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6467": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "6469": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "NOT",
      "path": "0"
    },
    "6470": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "6472": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6473": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "ADD",
      "path": "0"
    },
    "6474": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "AND",
      "path": "0"
    },
    "6475": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6476": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "ADD",
      "path": "0"
    },
    "6477": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6478": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6480": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6481": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "POP",
      "path": "0"
    },
    "6482": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6483": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "ADD",
      "path": "0"
    },
    "6484": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6485": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1960"
    },
    "6489": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6490": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6491": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x2426"
    },
    "6495": {
      "fn": "RangeManager.removeFromStep",
      "jump": "i",
      "offset": [
        5690,
        5777
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6496": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5690,
        5777
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6497": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5674,
        5777
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6498": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5674,
        5777
      ],
      "op": "POP",
      "path": "0"
    },
    "6499": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5802
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 51,
      "value": "0x7"
    },
    "6501": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5803,
        5807
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6502": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5808
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6503": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5808
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6504": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5808
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6505": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5808
      ],
      "op": "LT",
      "path": "0"
    },
    "6506": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5808
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1978"
    },
    "6510": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5808
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6511": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5808
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1978"
    },
    "6515": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5808
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x22A7"
    },
    "6519": {
      "fn": "RangeManager.removeFromStep",
      "jump": "i",
      "offset": [
        5787,
        5808
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6520": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5808
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6521": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5808
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6523": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5808
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6524": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5808
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6525": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5808
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6526": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5808
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6528": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5808
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6529": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5808
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "6530": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5808
      ],
      "op": "ADD",
      "path": "0"
    },
    "6531": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5808
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6532": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5830
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6534": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5830
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6535": {
      "op": "PUSH4",
      "value": "0xA41FE49F"
    },
    "6540": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6542": {
      "op": "SHL"
    },
    "6543": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5830
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6544": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5830
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6545": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5830
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6547": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5830
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6548": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5830
      ],
      "op": "ADD",
      "path": "0"
    },
    "6549": {
      "op": "DUP5"
    },
    "6550": {
      "op": "SWAP1"
    },
    "6551": {
      "op": "MSTORE"
    },
    "6552": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6554": {
      "op": "DUP2"
    },
    "6555": {
      "op": "ADD"
    },
    "6556": {
      "op": "DUP4"
    },
    "6557": {
      "op": "SWAP1"
    },
    "6558": {
      "op": "MSTORE"
    },
    "6559": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6561": {
      "op": "DUP2"
    },
    "6562": {
      "op": "ADD"
    },
    "6563": {
      "op": "SWAP3"
    },
    "6564": {
      "op": "SWAP1"
    },
    "6565": {
      "op": "SWAP3"
    },
    "6566": {
      "op": "MSTORE"
    },
    "6567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6571": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6573": {
      "op": "SHL"
    },
    "6574": {
      "op": "SUB"
    },
    "6575": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5808
      ],
      "op": "AND",
      "path": "0"
    },
    "6576": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5808
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6577": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5817
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA41FE49F"
    },
    "6582": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5817
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6583": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6585": {
      "op": "ADD"
    },
    "6586": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5830
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6588": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5830
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6589": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5830
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6590": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5830
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6591": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5830
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6592": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5830
      ],
      "op": "SUB",
      "path": "0"
    },
    "6593": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5830
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6594": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5830
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6596": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5830
      ],
      "op": "DUP8",
      "path": "0"
    },
    "6597": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5830
      ],
      "op": "GAS",
      "path": "0"
    },
    "6598": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5830
      ],
      "op": "CALL",
      "path": "0"
    },
    "6599": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5830
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6600": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5830
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6601": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5830
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6602": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5830
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x19D8"
    },
    "6606": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5830
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6607": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5830
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6608": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5830
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6610": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5830
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6611": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5830
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "6612": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5830
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6613": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5830
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6615": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5830
      ],
      "op": "REVERT",
      "path": "0"
    },
    "6616": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5830
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6617": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5830
      ],
      "op": "POP",
      "path": "0"
    },
    "6618": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5830
      ],
      "op": "POP",
      "path": "0"
    },
    "6619": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5830
      ],
      "op": "POP",
      "path": "0"
    },
    "6620": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5830
      ],
      "op": "POP",
      "path": "0"
    },
    "6621": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5830
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6623": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5830
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6624": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5830
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6625": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5830
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "6627": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5830
      ],
      "op": "NOT",
      "path": "0"
    },
    "6628": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5830
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "6630": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5830
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6631": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5830
      ],
      "op": "ADD",
      "path": "0"
    },
    "6632": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5830
      ],
      "op": "AND",
      "path": "0"
    },
    "6633": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5830
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6634": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5830
      ],
      "op": "ADD",
      "path": "0"
    },
    "6635": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5830
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6636": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5830
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6638": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5830
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6639": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5830
      ],
      "op": "POP",
      "path": "0"
    },
    "6640": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5830
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6641": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5830
      ],
      "op": "ADD",
      "path": "0"
    },
    "6642": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5830
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6643": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5830
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x19FE"
    },
    "6647": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5830
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6648": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5830
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6649": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5830
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x268D"
    },
    "6653": {
      "fn": "RangeManager.removeFromStep",
      "jump": "i",
      "offset": [
        5787,
        5830
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6654": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5830
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6655": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5830
      ],
      "op": "POP",
      "path": "0"
    },
    "6656": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5787,
        5830
      ],
      "op": "POP",
      "path": "0"
    },
    "6657": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5845,
        5904
      ],
      "op": "PUSH32",
      "path": "0",
      "statement": 52,
      "value": "0x9B1BFA7FA9EE420A16E124F794C35AC9F90472ACC99140EB2F6447C714CAD8EB"
    },
    "6690": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5854,
        5864
      ],
      "op": "CALLER",
      "path": "0"
    },
    "6691": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5874,
        5889
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "6693": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5890,
        5894
      ],
      "op": "DUP6",
      "path": "0"
    },
    "6694": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5874,
        5895
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6695": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5874,
        5895
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6696": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5874,
        5895
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6697": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5874,
        5895
      ],
      "op": "LT",
      "path": "0"
    },
    "6698": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5874,
        5895
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1A38"
    },
    "6702": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5874,
        5895
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6703": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5874,
        5895
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1A38"
    },
    "6707": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5874,
        5895
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x22A7"
    },
    "6711": {
      "fn": "RangeManager.removeFromStep",
      "jump": "i",
      "offset": [
        5874,
        5895
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6712": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5874,
        5895
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6713": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5874,
        5895
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6715": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5874,
        5895
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6716": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5874,
        5895
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6717": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5874,
        5895
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6718": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5874,
        5895
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6720": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5874,
        5895
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6721": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5874,
        5895
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6722": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5874,
        5895
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "6723": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5874,
        5895
      ],
      "op": "ADD",
      "path": "0"
    },
    "6724": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5874,
        5895
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6725": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5845,
        5904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6727": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5845,
        5904
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6728": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5845,
        5904
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1A5F"
    },
    "6732": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5845,
        5904
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6733": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5845,
        5904
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6738": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6740": {
      "op": "SHL"
    },
    "6741": {
      "op": "SUB"
    },
    "6742": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5874,
        5895
      ],
      "op": "AND",
      "path": "0"
    },
    "6743": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5874,
        5895
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6744": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5898,
        5903
      ],
      "op": "DUP7",
      "path": "0"
    },
    "6745": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5898,
        5903
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6746": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5845,
        5904
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x25C3"
    },
    "6750": {
      "fn": "RangeManager.removeFromStep",
      "jump": "i",
      "offset": [
        5845,
        5904
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6751": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5845,
        5904
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6752": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5845,
        5904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6754": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5845,
        5904
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6755": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5845,
        5904
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6756": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5845,
        5904
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6757": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5845,
        5904
      ],
      "op": "SUB",
      "path": "0"
    },
    "6758": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5845,
        5904
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6759": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5845,
        5904
      ],
      "op": "LOG1",
      "path": "0"
    },
    "6760": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5491,
        5911
      ],
      "op": "POP",
      "path": "0"
    },
    "6761": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        5476,
        5911
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6762": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4674,
        5926
      ],
      "op": "POP",
      "path": "0"
    },
    "6763": {
      "fn": "RangeManager.removeFromStep",
      "offset": [
        4627,
        5926
      ],
      "op": "POP",
      "path": "0"
    },
    "6764": {
      "fn": "RangeManager.removeFromStep",
      "jump": "o",
      "offset": [
        4627,
        5926
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6765": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8511,
        9229
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6766": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8573
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "6768": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8573
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6769": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8598
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6771": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8598
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6772": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "6777": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6779": {
      "op": "SHL"
    },
    "6780": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8598
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6781": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8598
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6782": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8592,
        8596
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "6783": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8598
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6785": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8598
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6786": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8598
      ],
      "op": "ADD",
      "path": "0"
    },
    "6787": {
      "op": "MSTORE"
    },
    "6788": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8545,
        8563
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6790": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8545,
        8563
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6791": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6793": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6795": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6797": {
      "op": "SHL"
    },
    "6798": {
      "op": "SUB"
    },
    "6799": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8573
      ],
      "op": "AND",
      "path": "0"
    },
    "6800": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8573
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6801": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8583
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "6806": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8583
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6807": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6809": {
      "op": "ADD"
    },
    "6810": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8598
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6812": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8598
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6814": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8598
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6815": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8598
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6816": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8598
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6817": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8598
      ],
      "op": "SUB",
      "path": "0"
    },
    "6818": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8598
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6819": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8598
      ],
      "op": "DUP7",
      "path": "0"
    },
    "6820": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8598
      ],
      "op": "GAS",
      "path": "0"
    },
    "6821": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8598
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "6822": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8598
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6823": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8598
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6824": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8598
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6825": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8598
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1AB7"
    },
    "6829": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8598
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6830": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8598
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6831": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8598
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6833": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8598
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6834": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8598
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "6835": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8598
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6836": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8598
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6838": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8598
      ],
      "op": "REVERT",
      "path": "0"
    },
    "6839": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8598
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6840": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8598
      ],
      "op": "POP",
      "path": "0"
    },
    "6841": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8598
      ],
      "op": "POP",
      "path": "0"
    },
    "6842": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8598
      ],
      "op": "POP",
      "path": "0"
    },
    "6843": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8598
      ],
      "op": "POP",
      "path": "0"
    },
    "6844": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8598
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6846": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8598
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6847": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8598
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6848": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8598
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "6850": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8598
      ],
      "op": "NOT",
      "path": "0"
    },
    "6851": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8598
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "6853": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8598
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6854": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8598
      ],
      "op": "ADD",
      "path": "0"
    },
    "6855": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8598
      ],
      "op": "AND",
      "path": "0"
    },
    "6856": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8598
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6857": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8598
      ],
      "op": "ADD",
      "path": "0"
    },
    "6858": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8598
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6859": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8598
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6861": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8598
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6862": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8598
      ],
      "op": "POP",
      "path": "0"
    },
    "6863": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8598
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6864": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8598
      ],
      "op": "ADD",
      "path": "0"
    },
    "6865": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8598
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6866": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8598
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1ADD"
    },
    "6870": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8598
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6871": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8598
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6872": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8598
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x2426"
    },
    "6876": {
      "fn": "RangeManager.cleanup",
      "jump": "i",
      "offset": [
        8566,
        8598
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6877": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8566,
        8598
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6878": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8632
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6880": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8632
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6881": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8632
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6882": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8657
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6884": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8657
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6885": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "6890": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6892": {
      "op": "SHL"
    },
    "6893": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8657
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6894": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8657
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6895": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8651,
        8655
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "6896": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8657
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6897": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8657
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6898": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8657
      ],
      "op": "ADD",
      "path": "0"
    },
    "6899": {
      "op": "SWAP3"
    },
    "6900": {
      "op": "SWAP1"
    },
    "6901": {
      "op": "SWAP3"
    },
    "6902": {
      "op": "MSTORE"
    },
    "6903": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8545,
        8598
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6904": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8545,
        8598
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6905": {
      "op": "POP"
    },
    "6906": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8604,
        8622
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6908": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8604,
        8622
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6909": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6911": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6913": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6915": {
      "op": "SHL"
    },
    "6916": {
      "op": "SUB"
    },
    "6917": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8632
      ],
      "op": "AND",
      "path": "0"
    },
    "6918": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8632
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6919": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8642
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "6924": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8642
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6925": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6927": {
      "op": "ADD"
    },
    "6928": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8657
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6930": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8657
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6932": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8657
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6933": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8657
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6934": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8657
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6935": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8657
      ],
      "op": "SUB",
      "path": "0"
    },
    "6936": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8657
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6937": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8657
      ],
      "op": "DUP7",
      "path": "0"
    },
    "6938": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8657
      ],
      "op": "GAS",
      "path": "0"
    },
    "6939": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8657
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "6940": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8657
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6941": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8657
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6942": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8657
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6943": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8657
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1B2D"
    },
    "6947": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8657
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6948": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8657
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6949": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8657
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6951": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8657
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6952": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8657
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "6953": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8657
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6954": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8657
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6956": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8657
      ],
      "op": "REVERT",
      "path": "0"
    },
    "6957": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8657
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6958": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8657
      ],
      "op": "POP",
      "path": "0"
    },
    "6959": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8657
      ],
      "op": "POP",
      "path": "0"
    },
    "6960": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8657
      ],
      "op": "POP",
      "path": "0"
    },
    "6961": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8657
      ],
      "op": "POP",
      "path": "0"
    },
    "6962": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8657
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6964": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8657
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6965": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8657
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6966": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8657
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "6968": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8657
      ],
      "op": "NOT",
      "path": "0"
    },
    "6969": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8657
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "6971": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8657
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6972": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8657
      ],
      "op": "ADD",
      "path": "0"
    },
    "6973": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8657
      ],
      "op": "AND",
      "path": "0"
    },
    "6974": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8657
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6975": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8657
      ],
      "op": "ADD",
      "path": "0"
    },
    "6976": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8657
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6977": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8657
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6979": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8657
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6980": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8657
      ],
      "op": "POP",
      "path": "0"
    },
    "6981": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8657
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6982": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8657
      ],
      "op": "ADD",
      "path": "0"
    },
    "6983": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8657
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6984": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8657
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1B53"
    },
    "6988": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8657
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6989": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8657
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6990": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8657
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x2426"
    },
    "6994": {
      "fn": "RangeManager.cleanup",
      "jump": "i",
      "offset": [
        8625,
        8657
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6995": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8625,
        8657
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6996": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8604,
        8657
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6997": {
      "op": "POP"
    },
    "6998": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8672,
        8686
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6999": {
      "branch": 78,
      "fn": "RangeManager.cleanup",
      "offset": [
        8672,
        8686
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7000": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8668,
        8840
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1BED"
    },
    "7004": {
      "branch": 78,
      "fn": "RangeManager.cleanup",
      "offset": [
        8668,
        8840
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7005": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8734,
        8746
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 53,
      "value": "0x2"
    },
    "7007": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8734,
        8746
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7008": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8696,
        8703
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "7010": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8696,
        8703
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7011": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8696,
        8760
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1B7B"
    },
    "7015": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8696,
        8760
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7016": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7018": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7020": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7022": {
      "op": "SHL"
    },
    "7023": {
      "op": "SUB"
    },
    "7024": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8696,
        8703
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7025": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8696,
        8703
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7026": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8696,
        8703
      ],
      "op": "AND",
      "path": "0"
    },
    "7027": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8696,
        8703
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7028": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8734,
        8746
      ],
      "op": "AND",
      "path": "0"
    },
    "7029": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8749,
        8759
      ],
      "op": "DUP5",
      "path": "0"
    },
    "7030": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8696,
        8725
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x116F"
    },
    "7034": {
      "fn": "RangeManager.cleanup",
      "jump": "i",
      "offset": [
        8696,
        8760
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7035": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8696,
        8760
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7036": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8768,
        8780
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 54,
      "value": "0x2"
    },
    "7038": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8768,
        8780
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7039": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8797,
        8804
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "7041": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8797,
        8804
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7042": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8768,
        8833
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7044": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8768,
        8833
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7045": {
      "op": "PUSH4",
      "value": "0xE8EDA9DF"
    },
    "7050": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7052": {
      "op": "SHL"
    },
    "7053": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8768,
        8833
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7054": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8768,
        8833
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7055": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7059": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7061": {
      "op": "SHL"
    },
    "7062": {
      "op": "SUB"
    },
    "7063": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8768,
        8780
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "7064": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8768,
        8780
      ],
      "op": "DUP4",
      "path": "0"
    },
    "7065": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8768,
        8780
      ],
      "op": "AND",
      "path": "0"
    },
    "7066": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8768,
        8780
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "7067": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8768,
        8788
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE8EDA9DF"
    },
    "7072": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8768,
        8788
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "7073": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8768,
        8833
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1BB8"
    },
    "7077": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8768,
        8833
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "7078": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8797,
        8804
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7079": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8797,
        8804
      ],
      "op": "AND",
      "path": "0"
    },
    "7080": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8797,
        8804
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7081": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8807,
        8817
      ],
      "op": "DUP7",
      "path": "0"
    },
    "7082": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8807,
        8817
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7083": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8819,
        8829
      ],
      "op": "CALLER",
      "path": "0"
    },
    "7084": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8819,
        8829
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7085": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8768,
        8780
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7087": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8768,
        8780
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7088": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8768,
        8833
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7090": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8768,
        8833
      ],
      "op": "ADD",
      "path": "0"
    },
    "7091": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8768,
        8833
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x262E"
    },
    "7095": {
      "fn": "RangeManager.cleanup",
      "jump": "i",
      "offset": [
        8768,
        8833
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7096": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8768,
        8833
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7097": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8768,
        8833
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7099": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8768,
        8833
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7101": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8768,
        8833
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7102": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8768,
        8833
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7103": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8768,
        8833
      ],
      "op": "DUP4",
      "path": "0"
    },
    "7104": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8768,
        8833
      ],
      "op": "SUB",
      "path": "0"
    },
    "7105": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8768,
        8833
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7106": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8768,
        8833
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7108": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8768,
        8833
      ],
      "op": "DUP8",
      "path": "0"
    },
    "7109": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8768,
        8833
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7110": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8768,
        8833
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "7111": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8768,
        8833
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7112": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8768,
        8833
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7113": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8768,
        8833
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7114": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8768,
        8833
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1BD3"
    },
    "7118": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8768,
        8833
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7119": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8768,
        8833
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7121": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8768,
        8833
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7122": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8768,
        8833
      ],
      "op": "REVERT",
      "path": "0"
    },
    "7123": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8768,
        8833
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7124": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8768,
        8833
      ],
      "op": "POP",
      "path": "0"
    },
    "7125": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8768,
        8833
      ],
      "op": "GAS",
      "path": "0"
    },
    "7126": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8768,
        8833
      ],
      "op": "CALL",
      "path": "0"
    },
    "7127": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8768,
        8833
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7128": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8768,
        8833
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7129": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8768,
        8833
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7130": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8768,
        8833
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1BE8"
    },
    "7134": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8768,
        8833
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7135": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8768,
        8833
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "7136": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8768,
        8833
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7138": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8768,
        8833
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7139": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8768,
        8833
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "7140": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8768,
        8833
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "7141": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8768,
        8833
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7143": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8768,
        8833
      ],
      "op": "REVERT",
      "path": "0"
    },
    "7144": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8768,
        8833
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7145": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8768,
        8833
      ],
      "op": "POP",
      "path": "0"
    },
    "7146": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8768,
        8833
      ],
      "op": "POP",
      "path": "0"
    },
    "7147": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8768,
        8833
      ],
      "op": "POP",
      "path": "0"
    },
    "7148": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8768,
        8833
      ],
      "op": "POP",
      "path": "0"
    },
    "7149": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8668,
        8840
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7150": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8854,
        8868
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7151": {
      "branch": 79,
      "fn": "RangeManager.cleanup",
      "offset": [
        8854,
        8868
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7152": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8850,
        9022
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1C85"
    },
    "7156": {
      "branch": 79,
      "fn": "RangeManager.cleanup",
      "offset": [
        8850,
        9022
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7157": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8916,
        8928
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 55,
      "value": "0x2"
    },
    "7159": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8916,
        8928
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7160": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8878,
        8885
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7162": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8878,
        8885
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7163": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8878,
        8942
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1C13"
    },
    "7167": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8878,
        8942
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7172": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7174": {
      "op": "SHL"
    },
    "7175": {
      "op": "SUB"
    },
    "7176": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8878,
        8885
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7177": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8878,
        8885
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7178": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8878,
        8885
      ],
      "op": "AND",
      "path": "0"
    },
    "7179": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8878,
        8885
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7180": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8916,
        8928
      ],
      "op": "AND",
      "path": "0"
    },
    "7181": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8931,
        8941
      ],
      "op": "DUP4",
      "path": "0"
    },
    "7182": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8878,
        8907
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x116F"
    },
    "7186": {
      "fn": "RangeManager.cleanup",
      "jump": "i",
      "offset": [
        8878,
        8942
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7187": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8878,
        8942
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7188": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8950,
        8962
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 56,
      "value": "0x2"
    },
    "7190": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8950,
        8962
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7191": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8979,
        8986
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7193": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8979,
        8986
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7194": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8979,
        8986
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7195": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8950,
        9015
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7197": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8950,
        9015
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7198": {
      "op": "PUSH4",
      "value": "0xE8EDA9DF"
    },
    "7203": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7205": {
      "op": "SHL"
    },
    "7206": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8950,
        9015
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7207": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8950,
        9015
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7208": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7212": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7214": {
      "op": "SHL"
    },
    "7215": {
      "op": "SUB"
    },
    "7216": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8950,
        8962
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "7217": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8950,
        8962
      ],
      "op": "DUP5",
      "path": "0"
    },
    "7218": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8950,
        8962
      ],
      "op": "AND",
      "path": "0"
    },
    "7219": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8950,
        8962
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "7220": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8950,
        8970
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE8EDA9DF"
    },
    "7225": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8950,
        8970
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "7226": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8950,
        9015
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1C50"
    },
    "7230": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8950,
        9015
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "7231": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8979,
        8986
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7232": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8979,
        8986
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7233": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8979,
        8986
      ],
      "op": "AND",
      "path": "0"
    },
    "7234": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8979,
        8986
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7235": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8989,
        8999
      ],
      "op": "DUP7",
      "path": "0"
    },
    "7236": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8989,
        8999
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7237": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9001,
        9011
      ],
      "op": "CALLER",
      "path": "0"
    },
    "7238": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9001,
        9011
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7239": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8950,
        8962
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7241": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8950,
        8962
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7242": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8950,
        9015
      ],
      "op": "ADD",
      "path": "0"
    },
    "7243": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8950,
        9015
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x262E"
    },
    "7247": {
      "fn": "RangeManager.cleanup",
      "jump": "i",
      "offset": [
        8950,
        9015
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7248": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8950,
        9015
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7249": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8950,
        9015
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7251": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8950,
        9015
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7253": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8950,
        9015
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7254": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8950,
        9015
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7255": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8950,
        9015
      ],
      "op": "DUP4",
      "path": "0"
    },
    "7256": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8950,
        9015
      ],
      "op": "SUB",
      "path": "0"
    },
    "7257": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8950,
        9015
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7258": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8950,
        9015
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7260": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8950,
        9015
      ],
      "op": "DUP8",
      "path": "0"
    },
    "7261": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8950,
        9015
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7262": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8950,
        9015
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "7263": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8950,
        9015
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7264": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8950,
        9015
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7265": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8950,
        9015
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7266": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8950,
        9015
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1C6B"
    },
    "7270": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8950,
        9015
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7271": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8950,
        9015
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7273": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8950,
        9015
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7274": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8950,
        9015
      ],
      "op": "REVERT",
      "path": "0"
    },
    "7275": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8950,
        9015
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7276": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8950,
        9015
      ],
      "op": "POP",
      "path": "0"
    },
    "7277": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8950,
        9015
      ],
      "op": "GAS",
      "path": "0"
    },
    "7278": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8950,
        9015
      ],
      "op": "CALL",
      "path": "0"
    },
    "7279": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8950,
        9015
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7280": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8950,
        9015
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7281": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8950,
        9015
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7282": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8950,
        9015
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1C80"
    },
    "7286": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8950,
        9015
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7287": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8950,
        9015
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "7288": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8950,
        9015
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7290": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8950,
        9015
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7291": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8950,
        9015
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "7292": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8950,
        9015
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "7293": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8950,
        9015
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7295": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8950,
        9015
      ],
      "op": "REVERT",
      "path": "0"
    },
    "7296": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8950,
        9015
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7297": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8950,
        9015
      ],
      "op": "POP",
      "path": "0"
    },
    "7298": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8950,
        9015
      ],
      "op": "POP",
      "path": "0"
    },
    "7299": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8950,
        9015
      ],
      "op": "POP",
      "path": "0"
    },
    "7300": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8950,
        9015
      ],
      "op": "POP",
      "path": "0"
    },
    "7301": {
      "fn": "RangeManager.cleanup",
      "offset": [
        8850,
        9022
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7302": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9138
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "7304": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9138
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7305": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9169
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7307": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9169
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7308": {
      "op": "PUSH4",
      "value": "0x2FE4A15F"
    },
    "7313": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "7315": {
      "op": "SHL"
    },
    "7316": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9169
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7317": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9169
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7318": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9158,
        9168
      ],
      "op": "CALLER",
      "path": "0"
    },
    "7319": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9169
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7321": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9169
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7322": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9169
      ],
      "op": "ADD",
      "path": "0"
    },
    "7323": {
      "op": "MSTORE"
    },
    "7324": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9112,
        9122
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7326": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9112,
        9122
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7329": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7331": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7333": {
      "op": "SHL"
    },
    "7334": {
      "op": "SUB"
    },
    "7335": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9138
      ],
      "op": "AND",
      "path": "0"
    },
    "7336": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9138
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7337": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9157
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xBF92857C"
    },
    "7342": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9157
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7343": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7345": {
      "op": "ADD"
    },
    "7346": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9169
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "7348": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9169
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7350": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9169
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7351": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9169
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7352": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9169
      ],
      "op": "DUP4",
      "path": "0"
    },
    "7353": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9169
      ],
      "op": "SUB",
      "path": "0"
    },
    "7354": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9169
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7355": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9169
      ],
      "op": "DUP7",
      "path": "0"
    },
    "7356": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9169
      ],
      "op": "GAS",
      "path": "0"
    },
    "7357": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9169
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "7358": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9169
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7359": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9169
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7360": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9169
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7361": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9169
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1CCF"
    },
    "7365": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9169
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7366": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9169
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "7367": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9169
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7369": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9169
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7370": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9169
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "7371": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9169
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "7372": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9169
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7374": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9169
      ],
      "op": "REVERT",
      "path": "0"
    },
    "7375": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9169
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7376": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9169
      ],
      "op": "POP",
      "path": "0"
    },
    "7377": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9169
      ],
      "op": "POP",
      "path": "0"
    },
    "7378": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9169
      ],
      "op": "POP",
      "path": "0"
    },
    "7379": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9169
      ],
      "op": "POP",
      "path": "0"
    },
    "7380": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9169
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7382": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9169
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7383": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9169
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "7384": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9169
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "7386": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9169
      ],
      "op": "NOT",
      "path": "0"
    },
    "7387": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9169
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "7389": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9169
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7390": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9169
      ],
      "op": "ADD",
      "path": "0"
    },
    "7391": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9169
      ],
      "op": "AND",
      "path": "0"
    },
    "7392": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9169
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7393": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9169
      ],
      "op": "ADD",
      "path": "0"
    },
    "7394": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9169
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7395": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9169
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7397": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9169
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7398": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9169
      ],
      "op": "POP",
      "path": "0"
    },
    "7399": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9169
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7400": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9169
      ],
      "op": "ADD",
      "path": "0"
    },
    "7401": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9169
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7402": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9169
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x1CF5"
    },
    "7406": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9169
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7407": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9169
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7408": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9169
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x26B2"
    },
    "7412": {
      "fn": "RangeManager.cleanup",
      "jump": "i",
      "offset": [
        9126,
        9169
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7413": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9126,
        9169
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7414": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9106,
        9169
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "7415": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9106,
        9169
      ],
      "op": "POP",
      "path": "0"
    },
    "7416": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9106,
        9169
      ],
      "op": "POP",
      "path": "0"
    },
    "7417": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9106,
        9169
      ],
      "op": "POP",
      "path": "0"
    },
    "7418": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9106,
        9169
      ],
      "op": "POP",
      "path": "0"
    },
    "7419": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9106,
        9169
      ],
      "op": "POP",
      "path": "0"
    },
    "7420": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9106,
        9169
      ],
      "op": "POP",
      "path": "0"
    },
    "7421": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9188,
        9195
      ],
      "op": "PUSH8",
      "path": "0",
      "statement": 57,
      "value": "0xE043DA617250000"
    },
    "7430": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9183,
        9185
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7431": {
      "branch": 80,
      "fn": "RangeManager.cleanup",
      "offset": [
        9183,
        9195
      ],
      "op": "GT",
      "path": "0"
    },
    "7432": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9175,
        9224
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x980"
    },
    "7436": {
      "branch": 80,
      "fn": "RangeManager.cleanup",
      "offset": [
        9175,
        9224
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7437": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9175,
        9224
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7439": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9175,
        9224
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7440": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7444": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7446": {
      "op": "SHL"
    },
    "7447": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9175,
        9224
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7448": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9175,
        9224
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7449": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7451": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9175,
        9224
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7453": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9175,
        9224
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7454": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9175,
        9224
      ],
      "op": "ADD",
      "path": "0"
    },
    "7455": {
      "op": "MSTORE"
    },
    "7456": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "7458": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7460": {
      "op": "DUP3"
    },
    "7461": {
      "op": "ADD"
    },
    "7462": {
      "op": "MSTORE"
    },
    "7463": {
      "op": "PUSH32",
      "value": "0x4865616C746820666163746F7220697320746F6F206C6F770000000000000000"
    },
    "7496": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7498": {
      "op": "DUP3"
    },
    "7499": {
      "op": "ADD"
    },
    "7500": {
      "op": "MSTORE"
    },
    "7501": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7503": {
      "op": "ADD"
    },
    "7504": {
      "fn": "RangeManager.cleanup",
      "offset": [
        9175,
        9224
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x2D3"
    },
    "7508": {
      "op": "JUMP"
    },
    "7509": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7510": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "7512": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7513": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "7514": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7516": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7518": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7520": {
      "op": "SHL"
    },
    "7521": {
      "op": "SUB"
    },
    "7522": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "10",
      "statement": 58
    },
    "7523": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7524": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "10"
    },
    "7525": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7527": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7529": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7531": {
      "op": "SHL"
    },
    "7532": {
      "op": "SUB"
    },
    "7533": {
      "op": "NOT"
    },
    "7534": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "10"
    },
    "7535": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "10"
    },
    "7536": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7537": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "10"
    },
    "7538": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7539": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "7540": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "7541": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 59,
      "value": "0x40"
    },
    "7543": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "7544": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "7545": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "10"
    },
    "7546": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "7547": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7548": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP3",
      "path": "10"
    },
    "7549": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7550": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "7583": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7584": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "7586": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7587": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "10"
    },
    "7588": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "10"
    },
    "7589": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "10"
    },
    "7590": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7591": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3207,
        3913
      ],
      "op": "JUMPDEST",
      "path": "58"
    },
    "7592": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3649
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x0"
    },
    "7594": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH3",
      "path": "58",
      "value": "0x1DFE"
    },
    "7598": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3680,
        3684
      ],
      "op": "DUP3",
      "path": "58"
    },
    "7599": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x40"
    },
    "7601": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MLOAD",
      "path": "58"
    },
    "7602": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP1",
      "path": "58"
    },
    "7603": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x40"
    },
    "7605": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "ADD",
      "path": "58"
    },
    "7606": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x40"
    },
    "7608": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "58"
    },
    "7609": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP1",
      "path": "58"
    },
    "7610": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x20"
    },
    "7612": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP2",
      "path": "58"
    },
    "7613": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "58"
    },
    "7614": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x20"
    },
    "7616": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "ADD",
      "path": "58"
    },
    "7617": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH32",
      "path": "58",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "7650": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP2",
      "path": "58"
    },
    "7651": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "58"
    },
    "7652": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "POP",
      "path": "58"
    },
    "7653": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3660,
        3665
      ],
      "op": "DUP6",
      "path": "58"
    },
    "7654": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7656": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7658": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7660": {
      "op": "SHL"
    },
    "7661": {
      "op": "SUB"
    },
    "7662": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "AND",
      "path": "58"
    },
    "7663": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "PUSH3",
      "path": "58",
      "value": "0x1E80"
    },
    "7667": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "7668": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP3",
      "path": "58"
    },
    "7669": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP2",
      "path": "58"
    },
    "7670": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "7671": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH4",
      "path": "58",
      "value": "0xFFFFFFFF"
    },
    "7676": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "AND",
      "path": "58"
    },
    "7677": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3652,
        3721
      ],
      "op": "JUMP",
      "path": "58"
    },
    "7678": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "JUMPDEST",
      "path": "58"
    },
    "7679": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3752
      ],
      "op": "DUP1",
      "path": "58"
    },
    "7680": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3752
      ],
      "op": "MLOAD",
      "path": "58"
    },
    "7681": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3721
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "7682": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3721
      ],
      "op": "SWAP2",
      "path": "58"
    },
    "7683": {
      "op": "POP"
    },
    "7684": {
      "branch": 85,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3756
      ],
      "op": "ISZERO",
      "path": "58"
    },
    "7685": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3731,
        3907
      ],
      "op": "PUSH3",
      "path": "58",
      "value": "0x980"
    },
    "7689": {
      "branch": 85,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3731,
        3907
      ],
      "op": "JUMPI",
      "path": "58"
    },
    "7690": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3830,
        3840
      ],
      "op": "DUP1",
      "path": "58",
      "statement": 60
    },
    "7691": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "DUP1",
      "path": "58"
    },
    "7692": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x20"
    },
    "7694": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "ADD",
      "path": "58"
    },
    "7695": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "7696": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "MLOAD",
      "path": "58"
    },
    "7697": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "DUP2",
      "path": "58"
    },
    "7698": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "ADD",
      "path": "58"
    },
    "7699": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "7700": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH3",
      "path": "58",
      "value": "0x1E1F"
    },
    "7704": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP2",
      "path": "58"
    },
    "7705": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "7706": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH3",
      "path": "58",
      "value": "0x260A"
    },
    "7710": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3819,
        3849
      ],
      "op": "JUMP",
      "path": "58"
    },
    "7711": {
      "branch": 86,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "JUMPDEST",
      "path": "58"
    },
    "7712": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH3",
      "path": "58",
      "value": "0x980"
    },
    "7716": {
      "branch": 86,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "JUMPI",
      "path": "58"
    },
    "7717": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x40"
    },
    "7719": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "MLOAD",
      "path": "58"
    },
    "7720": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7724": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7726": {
      "op": "SHL"
    },
    "7727": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "DUP2",
      "path": "58"
    },
    "7728": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "MSTORE",
      "path": "58"
    },
    "7729": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7731": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x4"
    },
    "7733": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "DUP3",
      "path": "58"
    },
    "7734": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "ADD",
      "path": "58"
    },
    "7735": {
      "op": "MSTORE"
    },
    "7736": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "7738": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7740": {
      "op": "DUP3"
    },
    "7741": {
      "op": "ADD"
    },
    "7742": {
      "op": "MSTORE"
    },
    "7743": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "7776": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7778": {
      "op": "DUP3"
    },
    "7779": {
      "op": "ADD"
    },
    "7780": {
      "op": "MSTORE"
    },
    "7781": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "7792": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "7794": {
      "op": "SHL"
    },
    "7795": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7797": {
      "op": "DUP3"
    },
    "7798": {
      "op": "ADD"
    },
    "7799": {
      "op": "MSTORE"
    },
    "7800": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7802": {
      "op": "ADD"
    },
    "7803": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH3",
      "path": "58",
      "value": "0x2D3"
    },
    "7807": {
      "op": "JUMP"
    },
    "7808": {
      "fn": "Address.functionCall",
      "offset": [
        3846,
        4069
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "7809": {
      "fn": "Address.functionCall",
      "offset": [
        3979,
        3991
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x60"
    },
    "7811": {
      "fn": "Address.functionCall",
      "offset": [
        4010,
        4062
      ],
      "op": "PUSH3",
      "path": "68",
      "statement": 61,
      "value": "0x1E91"
    },
    "7815": {
      "fn": "Address.functionCall",
      "offset": [
        4032,
        4038
      ],
      "op": "DUP5",
      "path": "68"
    },
    "7816": {
      "fn": "Address.functionCall",
      "offset": [
        4040,
        4044
      ],
      "op": "DUP5",
      "path": "68"
    },
    "7817": {
      "fn": "Address.functionCall",
      "offset": [
        4046,
        4047
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "7819": {
      "fn": "Address.functionCall",
      "offset": [
        4049,
        4061
      ],
      "op": "DUP6",
      "path": "68"
    },
    "7820": {
      "fn": "Address.functionCall",
      "offset": [
        4010,
        4031
      ],
      "op": "PUSH3",
      "path": "68",
      "value": "0x1E9B"
    },
    "7824": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        4010,
        4062
      ],
      "op": "JUMP",
      "path": "68"
    },
    "7825": {
      "fn": "Address.functionCall",
      "offset": [
        4010,
        4062
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "7826": {
      "fn": "Address.functionCall",
      "offset": [
        4003,
        4062
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "7827": {
      "fn": "Address.functionCall",
      "offset": [
        4003,
        4062
      ],
      "op": "POP",
      "path": "68"
    },
    "7828": {
      "fn": "Address.functionCall",
      "offset": [
        3846,
        4069
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "7829": {
      "fn": "Address.functionCall",
      "offset": [
        3846,
        4069
      ],
      "op": "SWAP4",
      "path": "68"
    },
    "7830": {
      "fn": "Address.functionCall",
      "offset": [
        3846,
        4069
      ],
      "op": "SWAP3",
      "path": "68"
    },
    "7831": {
      "fn": "Address.functionCall",
      "offset": [
        3846,
        4069
      ],
      "op": "POP",
      "path": "68"
    },
    "7832": {
      "fn": "Address.functionCall",
      "offset": [
        3846,
        4069
      ],
      "op": "POP",
      "path": "68"
    },
    "7833": {
      "fn": "Address.functionCall",
      "offset": [
        3846,
        4069
      ],
      "op": "POP",
      "path": "68"
    },
    "7834": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3846,
        4069
      ],
      "op": "JUMP",
      "path": "68"
    },
    "7835": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4933,
        5432
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "7836": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5098,
        5110
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x60"
    },
    "7838": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5155,
        5160
      ],
      "op": "DUP3",
      "path": "68",
      "statement": 62
    },
    "7839": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5130,
        5151
      ],
      "op": "SELFBALANCE",
      "path": "68"
    },
    "7840": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5130,
        5160
      ],
      "op": "LT",
      "path": "68"
    },
    "7841": {
      "branch": 81,
      "fn": "Address.functionCallWithValue",
      "offset": [
        5130,
        5160
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "7842": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "PUSH3",
      "path": "68",
      "value": "0x1EFE"
    },
    "7846": {
      "branch": 81,
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "7847": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "7849": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "7850": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7854": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7856": {
      "op": "SHL"
    },
    "7857": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "DUP2",
      "path": "68"
    },
    "7858": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "7859": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7861": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "7863": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "DUP3",
      "path": "68"
    },
    "7864": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "ADD",
      "path": "68"
    },
    "7865": {
      "op": "MSTORE"
    },
    "7866": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "7868": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7870": {
      "op": "DUP3"
    },
    "7871": {
      "op": "ADD"
    },
    "7872": {
      "op": "MSTORE"
    },
    "7873": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
    },
    "7906": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7908": {
      "op": "DUP3"
    },
    "7909": {
      "op": "ADD"
    },
    "7910": {
      "op": "MSTORE"
    },
    "7911": {
      "op": "PUSH6",
      "value": "0x1C8818D85B1B"
    },
    "7918": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "7920": {
      "op": "SHL"
    },
    "7921": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7923": {
      "op": "DUP3"
    },
    "7924": {
      "op": "ADD"
    },
    "7925": {
      "op": "MSTORE"
    },
    "7926": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7928": {
      "op": "ADD"
    },
    "7929": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "PUSH3",
      "path": "68",
      "value": "0x2D3"
    },
    "7933": {
      "op": "JUMP"
    },
    "7934": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "7935": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7939": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7941": {
      "op": "SHL"
    },
    "7942": {
      "op": "SUB"
    },
    "7943": {
      "fn": "Address.isContract",
      "offset": [
        1450,
        1469
      ],
      "op": "DUP6",
      "path": "68",
      "statement": 63
    },
    "7944": {
      "fn": "Address.isContract",
      "offset": [
        1450,
        1469
      ],
      "op": "AND",
      "path": "68"
    },
    "7945": {
      "fn": "Address.isContract",
      "offset": [
        1450,
        1469
      ],
      "op": "EXTCODESIZE",
      "path": "68"
    },
    "7946": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "PUSH3",
      "path": "68",
      "statement": 64,
      "value": "0x1F57"
    },
    "7950": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "7951": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "7953": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "7954": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7958": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7960": {
      "op": "SHL"
    },
    "7961": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "DUP2",
      "path": "68"
    },
    "7962": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "7963": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7965": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "7967": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "DUP3",
      "path": "68"
    },
    "7968": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "ADD",
      "path": "68"
    },
    "7969": {
      "op": "MSTORE"
    },
    "7970": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "7972": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7974": {
      "op": "DUP3"
    },
    "7975": {
      "op": "ADD"
    },
    "7976": {
      "op": "MSTORE"
    },
    "7977": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "8010": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8012": {
      "op": "DUP3"
    },
    "8013": {
      "op": "ADD"
    },
    "8014": {
      "op": "MSTORE"
    },
    "8015": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8017": {
      "op": "ADD"
    },
    "8018": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "PUSH3",
      "path": "68",
      "value": "0x2D3"
    },
    "8022": {
      "op": "JUMP"
    },
    "8023": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "8024": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5285,
        5297
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "8026": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5322
      ],
      "op": "DUP1",
      "path": "68"
    },
    "8027": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5332
      ],
      "op": "DUP7",
      "path": "68"
    },
    "8028": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8030": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8032": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8034": {
      "op": "SHL"
    },
    "8035": {
      "op": "SUB"
    },
    "8036": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5337
      ],
      "op": "AND",
      "path": "68"
    },
    "8037": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5345,
        5350
      ],
      "op": "DUP6",
      "path": "68"
    },
    "8038": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5352,
        5356
      ],
      "op": "DUP8",
      "path": "68"
    },
    "8039": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "8041": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "8042": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH3",
      "path": "68",
      "value": "0x1F75"
    },
    "8046": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "8047": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "8048": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH3",
      "path": "68",
      "value": "0x26FD"
    },
    "8052": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5326,
        5357
      ],
      "op": "JUMP",
      "path": "68"
    },
    "8053": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "8054": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "8056": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "8058": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "8059": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "DUP1",
      "path": "68"
    },
    "8060": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "DUP4",
      "path": "68"
    },
    "8061": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "SUB",
      "path": "68"
    },
    "8062": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "DUP2",
      "path": "68"
    },
    "8063": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "DUP6",
      "path": "68"
    },
    "8064": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "DUP8",
      "path": "68"
    },
    "8065": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "GAS",
      "path": "68"
    },
    "8066": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "CALL",
      "path": "68"
    },
    "8067": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "SWAP3",
      "path": "68"
    },
    "8068": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "POP",
      "path": "68"
    },
    "8069": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "POP",
      "path": "68"
    },
    "8070": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "POP",
      "path": "68"
    },
    "8071": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "8072": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "DUP1",
      "path": "68"
    },
    "8073": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "8075": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "DUP2",
      "path": "68"
    },
    "8076": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "EQ",
      "path": "68"
    },
    "8077": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH3",
      "path": "68",
      "value": "0x1FB4"
    },
    "8081": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "8082": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "8084": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "8085": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "8086": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "POP",
      "path": "68"
    },
    "8087": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "8089": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "NOT",
      "path": "68"
    },
    "8090": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x3F"
    },
    "8092": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "8093": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "ADD",
      "path": "68"
    },
    "8094": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "AND",
      "path": "68"
    },
    "8095": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "DUP3",
      "path": "68"
    },
    "8096": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "ADD",
      "path": "68"
    },
    "8097": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "8099": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "8100": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "8101": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "DUP3",
      "path": "68"
    },
    "8102": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "8103": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "8104": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "8106": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "8108": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "DUP5",
      "path": "68"
    },
    "8109": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "ADD",
      "path": "68"
    },
    "8110": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "RETURNDATACOPY",
      "path": "68"
    },
    "8111": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH3",
      "path": "68",
      "value": "0x1FB9"
    },
    "8115": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "JUMP",
      "path": "68"
    },
    "8116": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "8117": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x60"
    },
    "8119": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "8120": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "POP",
      "path": "68"
    },
    "8121": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "8122": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "POP",
      "path": "68"
    },
    "8123": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5284,
        5357
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "8124": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5284,
        5357
      ],
      "op": "POP",
      "path": "68"
    },
    "8125": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5284,
        5357
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "8126": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5284,
        5357
      ],
      "op": "POP",
      "path": "68"
    },
    "8127": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5374,
        5425
      ],
      "op": "PUSH3",
      "path": "68",
      "statement": 65,
      "value": "0x1FCB"
    },
    "8131": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5391,
        5398
      ],
      "op": "DUP3",
      "path": "68"
    },
    "8132": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5400,
        5410
      ],
      "op": "DUP3",
      "path": "68"
    },
    "8133": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5412,
        5424
      ],
      "op": "DUP7",
      "path": "68"
    },
    "8134": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5374,
        5390
      ],
      "op": "PUSH3",
      "path": "68",
      "value": "0x1FD6"
    },
    "8138": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5374,
        5425
      ],
      "op": "JUMP",
      "path": "68"
    },
    "8139": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5374,
        5425
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "8140": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5367,
        5425
      ],
      "op": "SWAP8",
      "path": "68"
    },
    "8141": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4933,
        5432
      ],
      "op": "SWAP7",
      "path": "68"
    },
    "8142": {
      "op": "POP"
    },
    "8143": {
      "op": "POP"
    },
    "8144": {
      "op": "POP"
    },
    "8145": {
      "op": "POP"
    },
    "8146": {
      "op": "POP"
    },
    "8147": {
      "op": "POP"
    },
    "8148": {
      "op": "POP"
    },
    "8149": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4933,
        5432
      ],
      "op": "JUMP",
      "path": "68"
    },
    "8150": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7546,
        8238
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "8151": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7692,
        7704
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x60"
    },
    "8153": {
      "branch": 82,
      "fn": "Address.verifyCallResult",
      "offset": [
        7720,
        7727
      ],
      "op": "DUP4",
      "path": "68"
    },
    "8154": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7716,
        8232
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "8155": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7716,
        8232
      ],
      "op": "PUSH3",
      "path": "68",
      "value": "0x1FE7"
    },
    "8159": {
      "branch": 82,
      "fn": "Address.verifyCallResult",
      "offset": [
        7716,
        8232
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "8160": {
      "op": "POP"
    },
    "8161": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7750,
        7760
      ],
      "op": "DUP2",
      "path": "68",
      "statement": 66
    },
    "8162": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7743,
        7760
      ],
      "op": "PUSH3",
      "path": "68",
      "value": "0x1E94"
    },
    "8166": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7743,
        7760
      ],
      "op": "JUMP",
      "path": "68"
    },
    "8167": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7716,
        8232
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "8168": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7861,
        7878
      ],
      "op": "DUP3",
      "path": "68"
    },
    "8169": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7861,
        7878
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "8170": {
      "branch": 83,
      "fn": "Address.verifyCallResult",
      "offset": [
        7861,
        7882
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "8171": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7857,
        8222
      ],
      "op": "PUSH3",
      "path": "68",
      "value": "0x1FF8"
    },
    "8175": {
      "branch": 83,
      "fn": "Address.verifyCallResult",
      "offset": [
        7857,
        8222
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "8176": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8055,
        8065
      ],
      "op": "DUP3",
      "path": "68"
    },
    "8177": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8049,
        8066
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "8178": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8115,
        8130
      ],
      "op": "DUP1",
      "path": "68"
    },
    "8179": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8102,
        8112
      ],
      "op": "DUP5",
      "path": "68"
    },
    "8180": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8098,
        8100
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "8182": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8094,
        8113
      ],
      "op": "ADD",
      "path": "68"
    },
    "8183": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8087,
        8131
      ],
      "op": "REVERT",
      "path": "68"
    },
    "8184": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7857,
        8222
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "8185": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8194,
        8206
      ],
      "op": "DUP2",
      "path": "68",
      "statement": 67
    },
    "8186": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8187,
        8207
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "8188": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8187,
        8207
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "8189": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8193": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8195": {
      "op": "SHL"
    },
    "8196": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8187,
        8207
      ],
      "op": "DUP2",
      "path": "68"
    },
    "8197": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8187,
        8207
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "8198": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8187,
        8207
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "8200": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8187,
        8207
      ],
      "op": "ADD",
      "path": "68"
    },
    "8201": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8187,
        8207
      ],
      "op": "PUSH3",
      "path": "68",
      "value": "0x2D3"
    },
    "8205": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8187,
        8207
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "8206": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8187,
        8207
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "8207": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8187,
        8207
      ],
      "op": "PUSH3",
      "path": "68",
      "value": "0x271B"
    },
    "8211": {
      "fn": "Address.verifyCallResult",
      "jump": "i",
      "offset": [
        8187,
        8207
      ],
      "op": "JUMP",
      "path": "68"
    },
    "8212": {
      "op": "JUMPDEST"
    },
    "8213": {
      "op": "PUSH2",
      "value": "0x74F"
    },
    "8216": {
      "op": "DUP1"
    },
    "8217": {
      "op": "PUSH3",
      "value": "0x2731"
    },
    "8221": {
      "op": "DUP4"
    },
    "8222": {
      "op": "CODECOPY"
    },
    "8223": {
      "op": "ADD"
    },
    "8224": {
      "op": "SWAP1"
    },
    "8225": {
      "jump": "o",
      "op": "JUMP"
    },
    "8226": {
      "op": "JUMPDEST"
    },
    "8227": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8229": {
      "op": "DUP1"
    },
    "8230": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8232": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8234": {
      "op": "DUP5"
    },
    "8235": {
      "op": "DUP7"
    },
    "8236": {
      "op": "SUB"
    },
    "8237": {
      "op": "SLT"
    },
    "8238": {
      "op": "ISZERO"
    },
    "8239": {
      "op": "PUSH3",
      "value": "0x2038"
    },
    "8243": {
      "op": "JUMPI"
    },
    "8244": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8246": {
      "op": "DUP1"
    },
    "8247": {
      "op": "REVERT"
    },
    "8248": {
      "op": "JUMPDEST"
    },
    "8249": {
      "op": "POP"
    },
    "8250": {
      "op": "POP"
    },
    "8251": {
      "op": "DUP2"
    },
    "8252": {
      "op": "CALLDATALOAD"
    },
    "8253": {
      "op": "SWAP4"
    },
    "8254": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8256": {
      "op": "DUP4"
    },
    "8257": {
      "op": "ADD"
    },
    "8258": {
      "op": "CALLDATALOAD"
    },
    "8259": {
      "op": "SWAP4"
    },
    "8260": {
      "op": "POP"
    },
    "8261": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8263": {
      "op": "SWAP1"
    },
    "8264": {
      "op": "SWAP3"
    },
    "8265": {
      "op": "ADD"
    },
    "8266": {
      "op": "CALLDATALOAD"
    },
    "8267": {
      "op": "SWAP2"
    },
    "8268": {
      "op": "SWAP1"
    },
    "8269": {
      "op": "POP"
    },
    "8270": {
      "jump": "o",
      "op": "JUMP"
    },
    "8271": {
      "op": "JUMPDEST"
    },
    "8272": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8274": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8276": {
      "op": "DUP3"
    },
    "8277": {
      "op": "DUP5"
    },
    "8278": {
      "op": "SUB"
    },
    "8279": {
      "op": "SLT"
    },
    "8280": {
      "op": "ISZERO"
    },
    "8281": {
      "op": "PUSH3",
      "value": "0x2062"
    },
    "8285": {
      "op": "JUMPI"
    },
    "8286": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8288": {
      "op": "DUP1"
    },
    "8289": {
      "op": "REVERT"
    },
    "8290": {
      "op": "JUMPDEST"
    },
    "8291": {
      "op": "POP"
    },
    "8292": {
      "op": "CALLDATALOAD"
    },
    "8293": {
      "op": "SWAP2"
    },
    "8294": {
      "op": "SWAP1"
    },
    "8295": {
      "op": "POP"
    },
    "8296": {
      "jump": "o",
      "op": "JUMP"
    },
    "8297": {
      "op": "JUMPDEST"
    },
    "8298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8302": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8304": {
      "op": "SHL"
    },
    "8305": {
      "op": "SUB"
    },
    "8306": {
      "op": "DUP2"
    },
    "8307": {
      "op": "AND"
    },
    "8308": {
      "op": "DUP2"
    },
    "8309": {
      "op": "EQ"
    },
    "8310": {
      "op": "PUSH3",
      "value": "0xB34"
    },
    "8314": {
      "op": "JUMPI"
    },
    "8315": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8317": {
      "op": "DUP1"
    },
    "8318": {
      "op": "REVERT"
    },
    "8319": {
      "op": "JUMPDEST"
    },
    "8320": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8325": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8327": {
      "op": "SHL"
    },
    "8328": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8330": {
      "op": "MSTORE"
    },
    "8331": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "8333": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8335": {
      "op": "MSTORE"
    },
    "8336": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8338": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8340": {
      "op": "REVERT"
    },
    "8341": {
      "op": "JUMPDEST"
    },
    "8342": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8344": {
      "op": "MLOAD"
    },
    "8345": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "8348": {
      "op": "DUP2"
    },
    "8349": {
      "op": "ADD"
    },
    "8350": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8359": {
      "op": "DUP2"
    },
    "8360": {
      "op": "GT"
    },
    "8361": {
      "op": "DUP3"
    },
    "8362": {
      "op": "DUP3"
    },
    "8363": {
      "op": "LT"
    },
    "8364": {
      "op": "OR"
    },
    "8365": {
      "op": "ISZERO"
    },
    "8366": {
      "op": "PUSH3",
      "value": "0x20BC"
    },
    "8370": {
      "op": "JUMPI"
    },
    "8371": {
      "op": "PUSH3",
      "value": "0x20BC"
    },
    "8375": {
      "op": "PUSH3",
      "value": "0x207F"
    },
    "8379": {
      "jump": "i",
      "op": "JUMP"
    },
    "8380": {
      "op": "JUMPDEST"
    },
    "8381": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8383": {
      "op": "MSTORE"
    },
    "8384": {
      "op": "SWAP1"
    },
    "8385": {
      "jump": "o",
      "op": "JUMP"
    },
    "8386": {
      "op": "JUMPDEST"
    },
    "8387": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8389": {
      "op": "DUP3"
    },
    "8390": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8392": {
      "op": "DUP4"
    },
    "8393": {
      "op": "ADD"
    },
    "8394": {
      "op": "SLT"
    },
    "8395": {
      "op": "PUSH3",
      "value": "0x20D4"
    },
    "8399": {
      "op": "JUMPI"
    },
    "8400": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8402": {
      "op": "DUP1"
    },
    "8403": {
      "op": "REVERT"
    },
    "8404": {
      "op": "JUMPDEST"
    },
    "8405": {
      "op": "DUP2"
    },
    "8406": {
      "op": "CALLDATALOAD"
    },
    "8407": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8416": {
      "op": "DUP1"
    },
    "8417": {
      "op": "DUP3"
    },
    "8418": {
      "op": "GT"
    },
    "8419": {
      "op": "ISZERO"
    },
    "8420": {
      "op": "PUSH3",
      "value": "0x20F2"
    },
    "8424": {
      "op": "JUMPI"
    },
    "8425": {
      "op": "PUSH3",
      "value": "0x20F2"
    },
    "8429": {
      "op": "PUSH3",
      "value": "0x207F"
    },
    "8433": {
      "jump": "i",
      "op": "JUMP"
    },
    "8434": {
      "op": "JUMPDEST"
    },
    "8435": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8437": {
      "op": "MLOAD"
    },
    "8438": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8440": {
      "op": "DUP4"
    },
    "8441": {
      "op": "ADD"
    },
    "8442": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8444": {
      "op": "NOT"
    },
    "8445": {
      "op": "SWAP1"
    },
    "8446": {
      "op": "DUP2"
    },
    "8447": {
      "op": "AND"
    },
    "8448": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "8450": {
      "op": "ADD"
    },
    "8451": {
      "op": "AND"
    },
    "8452": {
      "op": "DUP2"
    },
    "8453": {
      "op": "ADD"
    },
    "8454": {
      "op": "SWAP1"
    },
    "8455": {
      "op": "DUP3"
    },
    "8456": {
      "op": "DUP3"
    },
    "8457": {
      "op": "GT"
    },
    "8458": {
      "op": "DUP2"
    },
    "8459": {
      "op": "DUP4"
    },
    "8460": {
      "op": "LT"
    },
    "8461": {
      "op": "OR"
    },
    "8462": {
      "op": "ISZERO"
    },
    "8463": {
      "op": "PUSH3",
      "value": "0x211D"
    },
    "8467": {
      "op": "JUMPI"
    },
    "8468": {
      "op": "PUSH3",
      "value": "0x211D"
    },
    "8472": {
      "op": "PUSH3",
      "value": "0x207F"
    },
    "8476": {
      "jump": "i",
      "op": "JUMP"
    },
    "8477": {
      "op": "JUMPDEST"
    },
    "8478": {
      "op": "DUP2"
    },
    "8479": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8481": {
      "op": "MSTORE"
    },
    "8482": {
      "op": "DUP4"
    },
    "8483": {
      "op": "DUP2"
    },
    "8484": {
      "op": "MSTORE"
    },
    "8485": {
      "op": "DUP7"
    },
    "8486": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8488": {
      "op": "DUP6"
    },
    "8489": {
      "op": "DUP9"
    },
    "8490": {
      "op": "ADD"
    },
    "8491": {
      "op": "ADD"
    },
    "8492": {
      "op": "GT"
    },
    "8493": {
      "op": "ISZERO"
    },
    "8494": {
      "op": "PUSH3",
      "value": "0x2137"
    },
    "8498": {
      "op": "JUMPI"
    },
    "8499": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8501": {
      "op": "DUP1"
    },
    "8502": {
      "op": "REVERT"
    },
    "8503": {
      "op": "JUMPDEST"
    },
    "8504": {
      "op": "DUP4"
    },
    "8505": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8507": {
      "op": "DUP8"
    },
    "8508": {
      "op": "ADD"
    },
    "8509": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8511": {
      "op": "DUP4"
    },
    "8512": {
      "op": "ADD"
    },
    "8513": {
      "op": "CALLDATACOPY"
    },
    "8514": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8516": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8518": {
      "op": "DUP6"
    },
    "8519": {
      "op": "DUP4"
    },
    "8520": {
      "op": "ADD"
    },
    "8521": {
      "op": "ADD"
    },
    "8522": {
      "op": "MSTORE"
    },
    "8523": {
      "op": "DUP1"
    },
    "8524": {
      "op": "SWAP5"
    },
    "8525": {
      "op": "POP"
    },
    "8526": {
      "op": "POP"
    },
    "8527": {
      "op": "POP"
    },
    "8528": {
      "op": "POP"
    },
    "8529": {
      "op": "POP"
    },
    "8530": {
      "op": "SWAP3"
    },
    "8531": {
      "op": "SWAP2"
    },
    "8532": {
      "op": "POP"
    },
    "8533": {
      "op": "POP"
    },
    "8534": {
      "jump": "o",
      "op": "JUMP"
    },
    "8535": {
      "op": "JUMPDEST"
    },
    "8536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8538": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8540": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8542": {
      "op": "SHL"
    },
    "8543": {
      "op": "SUB"
    },
    "8544": {
      "op": "DUP2"
    },
    "8545": {
      "op": "AND"
    },
    "8546": {
      "op": "DUP2"
    },
    "8547": {
      "op": "EQ"
    },
    "8548": {
      "op": "PUSH3",
      "value": "0xB34"
    },
    "8552": {
      "op": "JUMPI"
    },
    "8553": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8555": {
      "op": "DUP1"
    },
    "8556": {
      "op": "REVERT"
    },
    "8557": {
      "op": "JUMPDEST"
    },
    "8558": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8560": {
      "op": "DUP1"
    },
    "8561": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8563": {
      "op": "DUP1"
    },
    "8564": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8566": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8568": {
      "op": "DUP7"
    },
    "8569": {
      "op": "DUP9"
    },
    "8570": {
      "op": "SUB"
    },
    "8571": {
      "op": "SLT"
    },
    "8572": {
      "op": "ISZERO"
    },
    "8573": {
      "op": "PUSH3",
      "value": "0x2186"
    },
    "8577": {
      "op": "JUMPI"
    },
    "8578": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8580": {
      "op": "DUP1"
    },
    "8581": {
      "op": "REVERT"
    },
    "8582": {
      "op": "JUMPDEST"
    },
    "8583": {
      "op": "DUP6"
    },
    "8584": {
      "op": "CALLDATALOAD"
    },
    "8585": {
      "op": "PUSH3",
      "value": "0x2193"
    },
    "8589": {
      "op": "DUP2"
    },
    "8590": {
      "op": "PUSH3",
      "value": "0x2069"
    },
    "8594": {
      "jump": "i",
      "op": "JUMP"
    },
    "8595": {
      "op": "JUMPDEST"
    },
    "8596": {
      "op": "SWAP5"
    },
    "8597": {
      "op": "POP"
    },
    "8598": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8600": {
      "op": "DUP7"
    },
    "8601": {
      "op": "ADD"
    },
    "8602": {
      "op": "CALLDATALOAD"
    },
    "8603": {
      "op": "PUSH3",
      "value": "0x21A5"
    },
    "8607": {
      "op": "DUP2"
    },
    "8608": {
      "op": "PUSH3",
      "value": "0x2069"
    },
    "8612": {
      "jump": "i",
      "op": "JUMP"
    },
    "8613": {
      "op": "JUMPDEST"
    },
    "8614": {
      "op": "SWAP4"
    },
    "8615": {
      "op": "POP"
    },
    "8616": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8618": {
      "op": "DUP7"
    },
    "8619": {
      "op": "ADD"
    },
    "8620": {
      "op": "CALLDATALOAD"
    },
    "8621": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8630": {
      "op": "DUP1"
    },
    "8631": {
      "op": "DUP3"
    },
    "8632": {
      "op": "GT"
    },
    "8633": {
      "op": "ISZERO"
    },
    "8634": {
      "op": "PUSH3",
      "value": "0x21C3"
    },
    "8638": {
      "op": "JUMPI"
    },
    "8639": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8641": {
      "op": "DUP1"
    },
    "8642": {
      "op": "REVERT"
    },
    "8643": {
      "op": "JUMPDEST"
    },
    "8644": {
      "op": "PUSH3",
      "value": "0x21D1"
    },
    "8648": {
      "op": "DUP10"
    },
    "8649": {
      "op": "DUP4"
    },
    "8650": {
      "op": "DUP11"
    },
    "8651": {
      "op": "ADD"
    },
    "8652": {
      "op": "PUSH3",
      "value": "0x20C2"
    },
    "8656": {
      "jump": "i",
      "op": "JUMP"
    },
    "8657": {
      "op": "JUMPDEST"
    },
    "8658": {
      "op": "SWAP5"
    },
    "8659": {
      "op": "POP"
    },
    "8660": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8662": {
      "op": "DUP9"
    },
    "8663": {
      "op": "ADD"
    },
    "8664": {
      "op": "CALLDATALOAD"
    },
    "8665": {
      "op": "SWAP2"
    },
    "8666": {
      "op": "POP"
    },
    "8667": {
      "op": "DUP1"
    },
    "8668": {
      "op": "DUP3"
    },
    "8669": {
      "op": "GT"
    },
    "8670": {
      "op": "ISZERO"
    },
    "8671": {
      "op": "PUSH3",
      "value": "0x21E8"
    },
    "8675": {
      "op": "JUMPI"
    },
    "8676": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8678": {
      "op": "DUP1"
    },
    "8679": {
      "op": "REVERT"
    },
    "8680": {
      "op": "JUMPDEST"
    },
    "8681": {
      "op": "POP"
    },
    "8682": {
      "op": "PUSH3",
      "value": "0x21F7"
    },
    "8686": {
      "op": "DUP9"
    },
    "8687": {
      "op": "DUP3"
    },
    "8688": {
      "op": "DUP10"
    },
    "8689": {
      "op": "ADD"
    },
    "8690": {
      "op": "PUSH3",
      "value": "0x20C2"
    },
    "8694": {
      "jump": "i",
      "op": "JUMP"
    },
    "8695": {
      "op": "JUMPDEST"
    },
    "8696": {
      "op": "SWAP3"
    },
    "8697": {
      "op": "POP"
    },
    "8698": {
      "op": "POP"
    },
    "8699": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8701": {
      "op": "DUP7"
    },
    "8702": {
      "op": "ADD"
    },
    "8703": {
      "op": "CALLDATALOAD"
    },
    "8704": {
      "op": "PUSH3",
      "value": "0x220A"
    },
    "8708": {
      "op": "DUP2"
    },
    "8709": {
      "op": "PUSH3",
      "value": "0x2157"
    },
    "8713": {
      "jump": "i",
      "op": "JUMP"
    },
    "8714": {
      "op": "JUMPDEST"
    },
    "8715": {
      "op": "DUP1"
    },
    "8716": {
      "op": "SWAP2"
    },
    "8717": {
      "op": "POP"
    },
    "8718": {
      "op": "POP"
    },
    "8719": {
      "op": "SWAP3"
    },
    "8720": {
      "op": "SWAP6"
    },
    "8721": {
      "op": "POP"
    },
    "8722": {
      "op": "SWAP3"
    },
    "8723": {
      "op": "SWAP6"
    },
    "8724": {
      "op": "SWAP1"
    },
    "8725": {
      "op": "SWAP4"
    },
    "8726": {
      "op": "POP"
    },
    "8727": {
      "jump": "o",
      "op": "JUMP"
    },
    "8728": {
      "op": "JUMPDEST"
    },
    "8729": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8731": {
      "op": "DUP1"
    },
    "8732": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8734": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8736": {
      "op": "DUP5"
    },
    "8737": {
      "op": "DUP7"
    },
    "8738": {
      "op": "SUB"
    },
    "8739": {
      "op": "SLT"
    },
    "8740": {
      "op": "ISZERO"
    },
    "8741": {
      "op": "PUSH3",
      "value": "0x222E"
    },
    "8745": {
      "op": "JUMPI"
    },
    "8746": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8748": {
      "op": "DUP1"
    },
    "8749": {
      "op": "REVERT"
    },
    "8750": {
      "op": "JUMPDEST"
    },
    "8751": {
      "op": "DUP4"
    },
    "8752": {
      "op": "CALLDATALOAD"
    },
    "8753": {
      "op": "PUSH3",
      "value": "0x223B"
    },
    "8757": {
      "op": "DUP2"
    },
    "8758": {
      "op": "PUSH3",
      "value": "0x2157"
    },
    "8762": {
      "jump": "i",
      "op": "JUMP"
    },
    "8763": {
      "op": "JUMPDEST"
    },
    "8764": {
      "op": "SWAP6"
    },
    "8765": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8767": {
      "op": "DUP6"
    },
    "8768": {
      "op": "ADD"
    },
    "8769": {
      "op": "CALLDATALOAD"
    },
    "8770": {
      "op": "SWAP6"
    },
    "8771": {
      "op": "POP"
    },
    "8772": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8774": {
      "op": "SWAP1"
    },
    "8775": {
      "op": "SWAP5"
    },
    "8776": {
      "op": "ADD"
    },
    "8777": {
      "op": "CALLDATALOAD"
    },
    "8778": {
      "op": "SWAP4"
    },
    "8779": {
      "op": "SWAP3"
    },
    "8780": {
      "op": "POP"
    },
    "8781": {
      "op": "POP"
    },
    "8782": {
      "op": "POP"
    },
    "8783": {
      "jump": "o",
      "op": "JUMP"
    },
    "8784": {
      "op": "JUMPDEST"
    },
    "8785": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8787": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8789": {
      "op": "DUP3"
    },
    "8790": {
      "op": "DUP5"
    },
    "8791": {
      "op": "SUB"
    },
    "8792": {
      "op": "SLT"
    },
    "8793": {
      "op": "ISZERO"
    },
    "8794": {
      "op": "PUSH3",
      "value": "0x2263"
    },
    "8798": {
      "op": "JUMPI"
    },
    "8799": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8801": {
      "op": "DUP1"
    },
    "8802": {
      "op": "REVERT"
    },
    "8803": {
      "op": "JUMPDEST"
    },
    "8804": {
      "op": "DUP2"
    },
    "8805": {
      "op": "CALLDATALOAD"
    },
    "8806": {
      "op": "PUSH3",
      "value": "0x1E94"
    },
    "8810": {
      "op": "DUP2"
    },
    "8811": {
      "op": "PUSH3",
      "value": "0x2157"
    },
    "8815": {
      "jump": "i",
      "op": "JUMP"
    },
    "8816": {
      "op": "JUMPDEST"
    },
    "8817": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8819": {
      "op": "DUP1"
    },
    "8820": {
      "op": "DUP3"
    },
    "8821": {
      "op": "MSTORE"
    },
    "8822": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8824": {
      "op": "SWAP1"
    },
    "8825": {
      "op": "DUP3"
    },
    "8826": {
      "op": "ADD"
    },
    "8827": {
      "op": "MSTORE"
    },
    "8828": {
      "op": "PUSH32",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "8861": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8863": {
      "op": "DUP3"
    },
    "8864": {
      "op": "ADD"
    },
    "8865": {
      "op": "MSTORE"
    },
    "8866": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8868": {
      "op": "ADD"
    },
    "8869": {
      "op": "SWAP1"
    },
    "8870": {
      "jump": "o",
      "op": "JUMP"
    },
    "8871": {
      "op": "JUMPDEST"
    },
    "8872": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8877": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8879": {
      "op": "SHL"
    },
    "8880": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8882": {
      "op": "MSTORE"
    },
    "8883": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "8885": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8887": {
      "op": "MSTORE"
    },
    "8888": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8890": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8892": {
      "op": "REVERT"
    },
    "8893": {
      "op": "JUMPDEST"
    },
    "8894": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8896": {
      "op": "DUP1"
    },
    "8897": {
      "op": "DUP3"
    },
    "8898": {
      "op": "MSTORE"
    },
    "8899": {
      "op": "DUP2"
    },
    "8900": {
      "op": "DUP2"
    },
    "8901": {
      "op": "ADD"
    },
    "8902": {
      "op": "MSTORE"
    },
    "8903": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "8936": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8938": {
      "op": "DUP3"
    },
    "8939": {
      "op": "ADD"
    },
    "8940": {
      "op": "MSTORE"
    },
    "8941": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8943": {
      "op": "ADD"
    },
    "8944": {
      "op": "SWAP1"
    },
    "8945": {
      "jump": "o",
      "op": "JUMP"
    },
    "8946": {
      "op": "JUMPDEST"
    },
    "8947": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8949": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8951": {
      "op": "DUP3"
    },
    "8952": {
      "op": "DUP5"
    },
    "8953": {
      "op": "SUB"
    },
    "8954": {
      "op": "SLT"
    },
    "8955": {
      "op": "ISZERO"
    },
    "8956": {
      "op": "PUSH3",
      "value": "0x2305"
    },
    "8960": {
      "op": "JUMPI"
    },
    "8961": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8963": {
      "op": "DUP1"
    },
    "8964": {
      "op": "REVERT"
    },
    "8965": {
      "op": "JUMPDEST"
    },
    "8966": {
      "op": "DUP2"
    },
    "8967": {
      "op": "MLOAD"
    },
    "8968": {
      "op": "PUSH3",
      "value": "0x1E94"
    },
    "8972": {
      "op": "DUP2"
    },
    "8973": {
      "op": "PUSH3",
      "value": "0x2157"
    },
    "8977": {
      "jump": "i",
      "op": "JUMP"
    },
    "8978": {
      "op": "JUMPDEST"
    },
    "8979": {
      "op": "DUP1"
    },
    "8980": {
      "op": "MLOAD"
    },
    "8981": {
      "op": "PUSH3",
      "value": "0x231F"
    },
    "8985": {
      "op": "DUP2"
    },
    "8986": {
      "op": "PUSH3",
      "value": "0x2157"
    },
    "8990": {
      "jump": "i",
      "op": "JUMP"
    },
    "8991": {
      "op": "JUMPDEST"
    },
    "8992": {
      "op": "SWAP2"
    },
    "8993": {
      "op": "SWAP1"
    },
    "8994": {
      "op": "POP"
    },
    "8995": {
      "jump": "o",
      "op": "JUMP"
    },
    "8996": {
      "op": "JUMPDEST"
    },
    "8997": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9002": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9004": {
      "op": "SHL"
    },
    "9005": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9007": {
      "op": "MSTORE"
    },
    "9008": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "9010": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9012": {
      "op": "MSTORE"
    },
    "9013": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9015": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9017": {
      "op": "REVERT"
    },
    "9018": {
      "op": "JUMPDEST"
    },
    "9019": {
      "op": "DUP2"
    },
    "9020": {
      "op": "DUP2"
    },
    "9021": {
      "op": "SUB"
    },
    "9022": {
      "op": "DUP2"
    },
    "9023": {
      "op": "DUP2"
    },
    "9024": {
      "op": "GT"
    },
    "9025": {
      "op": "ISZERO"
    },
    "9026": {
      "op": "PUSH3",
      "value": "0x2350"
    },
    "9030": {
      "op": "JUMPI"
    },
    "9031": {
      "op": "PUSH3",
      "value": "0x2350"
    },
    "9035": {
      "op": "PUSH3",
      "value": "0x2324"
    },
    "9039": {
      "jump": "i",
      "op": "JUMP"
    },
    "9040": {
      "op": "JUMPDEST"
    },
    "9041": {
      "op": "SWAP3"
    },
    "9042": {
      "op": "SWAP2"
    },
    "9043": {
      "op": "POP"
    },
    "9044": {
      "op": "POP"
    },
    "9045": {
      "jump": "o",
      "op": "JUMP"
    },
    "9046": {
      "op": "JUMPDEST"
    },
    "9047": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9049": {
      "op": "JUMPDEST"
    },
    "9050": {
      "op": "DUP4"
    },
    "9051": {
      "op": "DUP2"
    },
    "9052": {
      "op": "LT"
    },
    "9053": {
      "op": "ISZERO"
    },
    "9054": {
      "op": "PUSH3",
      "value": "0x2373"
    },
    "9058": {
      "op": "JUMPI"
    },
    "9059": {
      "op": "DUP2"
    },
    "9060": {
      "op": "DUP2"
    },
    "9061": {
      "op": "ADD"
    },
    "9062": {
      "op": "MLOAD"
    },
    "9063": {
      "op": "DUP4"
    },
    "9064": {
      "op": "DUP3"
    },
    "9065": {
      "op": "ADD"
    },
    "9066": {
      "op": "MSTORE"
    },
    "9067": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9069": {
      "op": "ADD"
    },
    "9070": {
      "op": "PUSH3",
      "value": "0x2359"
    },
    "9074": {
      "op": "JUMP"
    },
    "9075": {
      "op": "JUMPDEST"
    },
    "9076": {
      "op": "POP"
    },
    "9077": {
      "op": "POP"
    },
    "9078": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9080": {
      "op": "SWAP2"
    },
    "9081": {
      "op": "ADD"
    },
    "9082": {
      "op": "MSTORE"
    },
    "9083": {
      "jump": "o",
      "op": "JUMP"
    },
    "9084": {
      "op": "JUMPDEST"
    },
    "9085": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9087": {
      "op": "DUP2"
    },
    "9088": {
      "op": "MLOAD"
    },
    "9089": {
      "op": "DUP1"
    },
    "9090": {
      "op": "DUP5"
    },
    "9091": {
      "op": "MSTORE"
    },
    "9092": {
      "op": "PUSH3",
      "value": "0x2396"
    },
    "9096": {
      "op": "DUP2"
    },
    "9097": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9099": {
      "op": "DUP7"
    },
    "9100": {
      "op": "ADD"
    },
    "9101": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9103": {
      "op": "DUP7"
    },
    "9104": {
      "op": "ADD"
    },
    "9105": {
      "op": "PUSH3",
      "value": "0x2356"
    },
    "9109": {
      "jump": "i",
      "op": "JUMP"
    },
    "9110": {
      "op": "JUMPDEST"
    },
    "9111": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9113": {
      "op": "ADD"
    },
    "9114": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9116": {
      "op": "NOT"
    },
    "9117": {
      "op": "AND"
    },
    "9118": {
      "op": "SWAP3"
    },
    "9119": {
      "op": "SWAP1"
    },
    "9120": {
      "op": "SWAP3"
    },
    "9121": {
      "op": "ADD"
    },
    "9122": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9124": {
      "op": "ADD"
    },
    "9125": {
      "op": "SWAP3"
    },
    "9126": {
      "op": "SWAP2"
    },
    "9127": {
      "op": "POP"
    },
    "9128": {
      "op": "POP"
    },
    "9129": {
      "jump": "o",
      "op": "JUMP"
    },
    "9130": {
      "op": "JUMPDEST"
    },
    "9131": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9135": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9137": {
      "op": "SHL"
    },
    "9138": {
      "op": "SUB"
    },
    "9139": {
      "op": "DUP10"
    },
    "9140": {
      "op": "DUP2"
    },
    "9141": {
      "op": "AND"
    },
    "9142": {
      "op": "DUP3"
    },
    "9143": {
      "op": "MSTORE"
    },
    "9144": {
      "op": "DUP9"
    },
    "9145": {
      "op": "DUP2"
    },
    "9146": {
      "op": "AND"
    },
    "9147": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9149": {
      "op": "DUP4"
    },
    "9150": {
      "op": "ADD"
    },
    "9151": {
      "op": "MSTORE"
    },
    "9152": {
      "op": "DUP8"
    },
    "9153": {
      "op": "AND"
    },
    "9154": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9156": {
      "op": "DUP3"
    },
    "9157": {
      "op": "ADD"
    },
    "9158": {
      "op": "MSTORE"
    },
    "9159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9161": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9163": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9165": {
      "op": "SHL"
    },
    "9166": {
      "op": "SUB"
    },
    "9167": {
      "op": "DUP7"
    },
    "9168": {
      "op": "DUP2"
    },
    "9169": {
      "op": "AND"
    },
    "9170": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9172": {
      "op": "DUP4"
    },
    "9173": {
      "op": "ADD"
    },
    "9174": {
      "op": "MSTORE"
    },
    "9175": {
      "op": "DUP6"
    },
    "9176": {
      "op": "AND"
    },
    "9177": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9179": {
      "op": "DUP3"
    },
    "9180": {
      "op": "ADD"
    },
    "9181": {
      "op": "MSTORE"
    },
    "9182": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "9185": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9187": {
      "op": "DUP3"
    },
    "9188": {
      "op": "ADD"
    },
    "9189": {
      "op": "DUP2"
    },
    "9190": {
      "op": "SWAP1"
    },
    "9191": {
      "op": "MSTORE"
    },
    "9192": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9194": {
      "op": "SWAP1"
    },
    "9195": {
      "op": "PUSH3",
      "value": "0x23F8"
    },
    "9199": {
      "op": "DUP4"
    },
    "9200": {
      "op": "DUP3"
    },
    "9201": {
      "op": "ADD"
    },
    "9202": {
      "op": "DUP8"
    },
    "9203": {
      "op": "PUSH3",
      "value": "0x237C"
    },
    "9207": {
      "jump": "i",
      "op": "JUMP"
    },
    "9208": {
      "op": "JUMPDEST"
    },
    "9209": {
      "op": "SWAP1"
    },
    "9210": {
      "op": "POP"
    },
    "9211": {
      "op": "DUP3"
    },
    "9212": {
      "op": "DUP2"
    },
    "9213": {
      "op": "SUB"
    },
    "9214": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "9216": {
      "op": "DUP5"
    },
    "9217": {
      "op": "ADD"
    },
    "9218": {
      "op": "MSTORE"
    },
    "9219": {
      "op": "PUSH3",
      "value": "0x240E"
    },
    "9223": {
      "op": "DUP2"
    },
    "9224": {
      "op": "DUP7"
    },
    "9225": {
      "op": "PUSH3",
      "value": "0x237C"
    },
    "9229": {
      "jump": "i",
      "op": "JUMP"
    },
    "9230": {
      "op": "JUMPDEST"
    },
    "9231": {
      "op": "SWAP2"
    },
    "9232": {
      "op": "POP"
    },
    "9233": {
      "op": "POP"
    },
    "9234": {
      "op": "DUP3"
    },
    "9235": {
      "op": "ISZERO"
    },
    "9236": {
      "op": "ISZERO"
    },
    "9237": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9239": {
      "op": "DUP4"
    },
    "9240": {
      "op": "ADD"
    },
    "9241": {
      "op": "MSTORE"
    },
    "9242": {
      "op": "SWAP10"
    },
    "9243": {
      "op": "SWAP9"
    },
    "9244": {
      "op": "POP"
    },
    "9245": {
      "op": "POP"
    },
    "9246": {
      "op": "POP"
    },
    "9247": {
      "op": "POP"
    },
    "9248": {
      "op": "POP"
    },
    "9249": {
      "op": "POP"
    },
    "9250": {
      "op": "POP"
    },
    "9251": {
      "op": "POP"
    },
    "9252": {
      "op": "POP"
    },
    "9253": {
      "jump": "o",
      "op": "JUMP"
    },
    "9254": {
      "op": "JUMPDEST"
    },
    "9255": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9257": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9259": {
      "op": "DUP3"
    },
    "9260": {
      "op": "DUP5"
    },
    "9261": {
      "op": "SUB"
    },
    "9262": {
      "op": "SLT"
    },
    "9263": {
      "op": "ISZERO"
    },
    "9264": {
      "op": "PUSH3",
      "value": "0x2439"
    },
    "9268": {
      "op": "JUMPI"
    },
    "9269": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9271": {
      "op": "DUP1"
    },
    "9272": {
      "op": "REVERT"
    },
    "9273": {
      "op": "JUMPDEST"
    },
    "9274": {
      "op": "POP"
    },
    "9275": {
      "op": "MLOAD"
    },
    "9276": {
      "op": "SWAP2"
    },
    "9277": {
      "op": "SWAP1"
    },
    "9278": {
      "op": "POP"
    },
    "9279": {
      "jump": "o",
      "op": "JUMP"
    },
    "9280": {
      "op": "JUMPDEST"
    },
    "9281": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9283": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9285": {
      "op": "DUP3"
    },
    "9286": {
      "op": "DUP5"
    },
    "9287": {
      "op": "SUB"
    },
    "9288": {
      "op": "SLT"
    },
    "9289": {
      "op": "ISZERO"
    },
    "9290": {
      "op": "PUSH3",
      "value": "0x2453"
    },
    "9294": {
      "op": "JUMPI"
    },
    "9295": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9297": {
      "op": "DUP1"
    },
    "9298": {
      "op": "REVERT"
    },
    "9299": {
      "op": "JUMPDEST"
    },
    "9300": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9302": {
      "op": "MLOAD"
    },
    "9303": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9305": {
      "op": "DUP2"
    },
    "9306": {
      "op": "ADD"
    },
    "9307": {
      "op": "DUP2"
    },
    "9308": {
      "op": "DUP2"
    },
    "9309": {
      "op": "LT"
    },
    "9310": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9319": {
      "op": "DUP3"
    },
    "9320": {
      "op": "GT"
    },
    "9321": {
      "op": "OR"
    },
    "9322": {
      "op": "ISZERO"
    },
    "9323": {
      "op": "PUSH3",
      "value": "0x2479"
    },
    "9327": {
      "op": "JUMPI"
    },
    "9328": {
      "op": "PUSH3",
      "value": "0x2479"
    },
    "9332": {
      "op": "PUSH3",
      "value": "0x207F"
    },
    "9336": {
      "jump": "i",
      "op": "JUMP"
    },
    "9337": {
      "op": "JUMPDEST"
    },
    "9338": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9340": {
      "op": "MSTORE"
    },
    "9341": {
      "op": "SWAP2"
    },
    "9342": {
      "op": "MLOAD"
    },
    "9343": {
      "op": "DUP3"
    },
    "9344": {
      "op": "MSTORE"
    },
    "9345": {
      "op": "POP"
    },
    "9346": {
      "op": "SWAP2"
    },
    "9347": {
      "op": "SWAP1"
    },
    "9348": {
      "op": "POP"
    },
    "9349": {
      "jump": "o",
      "op": "JUMP"
    },
    "9350": {
      "op": "JUMPDEST"
    },
    "9351": {
      "op": "DUP1"
    },
    "9352": {
      "op": "MLOAD"
    },
    "9353": {
      "op": "PUSH3",
      "value": "0x231F"
    },
    "9357": {
      "op": "DUP2"
    },
    "9358": {
      "op": "PUSH3",
      "value": "0x2069"
    },
    "9362": {
      "jump": "i",
      "op": "JUMP"
    },
    "9363": {
      "op": "JUMPDEST"
    },
    "9364": {
      "op": "DUP1"
    },
    "9365": {
      "op": "MLOAD"
    },
    "9366": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "9372": {
      "op": "DUP2"
    },
    "9373": {
      "op": "AND"
    },
    "9374": {
      "op": "DUP2"
    },
    "9375": {
      "op": "EQ"
    },
    "9376": {
      "op": "PUSH3",
      "value": "0x231F"
    },
    "9380": {
      "op": "JUMPI"
    },
    "9381": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9383": {
      "op": "DUP1"
    },
    "9384": {
      "op": "REVERT"
    },
    "9385": {
      "op": "JUMPDEST"
    },
    "9386": {
      "op": "DUP1"
    },
    "9387": {
      "op": "MLOAD"
    },
    "9388": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9390": {
      "op": "DUP2"
    },
    "9391": {
      "op": "AND"
    },
    "9392": {
      "op": "DUP2"
    },
    "9393": {
      "op": "EQ"
    },
    "9394": {
      "op": "PUSH3",
      "value": "0x231F"
    },
    "9398": {
      "op": "JUMPI"
    },
    "9399": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9401": {
      "op": "DUP1"
    },
    "9402": {
      "op": "REVERT"
    },
    "9403": {
      "op": "JUMPDEST"
    },
    "9404": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9406": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "9409": {
      "op": "DUP3"
    },
    "9410": {
      "op": "DUP5"
    },
    "9411": {
      "op": "SUB"
    },
    "9412": {
      "op": "SLT"
    },
    "9413": {
      "op": "ISZERO"
    },
    "9414": {
      "op": "PUSH3",
      "value": "0x24CF"
    },
    "9418": {
      "op": "JUMPI"
    },
    "9419": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9421": {
      "op": "DUP1"
    },
    "9422": {
      "op": "REVERT"
    },
    "9423": {
      "op": "JUMPDEST"
    },
    "9424": {
      "op": "PUSH3",
      "value": "0x24D9"
    },
    "9428": {
      "op": "PUSH3",
      "value": "0x2095"
    },
    "9432": {
      "jump": "i",
      "op": "JUMP"
    },
    "9433": {
      "op": "JUMPDEST"
    },
    "9434": {
      "op": "PUSH3",
      "value": "0x24E5"
    },
    "9438": {
      "op": "DUP5"
    },
    "9439": {
      "op": "DUP5"
    },
    "9440": {
      "op": "PUSH3",
      "value": "0x2440"
    },
    "9444": {
      "jump": "i",
      "op": "JUMP"
    },
    "9445": {
      "op": "JUMPDEST"
    },
    "9446": {
      "op": "DUP2"
    },
    "9447": {
      "op": "MSTORE"
    },
    "9448": {
      "op": "PUSH3",
      "value": "0x24F5"
    },
    "9452": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9454": {
      "op": "DUP5"
    },
    "9455": {
      "op": "ADD"
    },
    "9456": {
      "op": "PUSH3",
      "value": "0x2486"
    },
    "9460": {
      "jump": "i",
      "op": "JUMP"
    },
    "9461": {
      "op": "JUMPDEST"
    },
    "9462": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9464": {
      "op": "DUP3"
    },
    "9465": {
      "op": "ADD"
    },
    "9466": {
      "op": "MSTORE"
    },
    "9467": {
      "op": "PUSH3",
      "value": "0x2508"
    },
    "9471": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9473": {
      "op": "DUP5"
    },
    "9474": {
      "op": "ADD"
    },
    "9475": {
      "op": "PUSH3",
      "value": "0x2486"
    },
    "9479": {
      "jump": "i",
      "op": "JUMP"
    },
    "9480": {
      "op": "JUMPDEST"
    },
    "9481": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9483": {
      "op": "DUP3"
    },
    "9484": {
      "op": "ADD"
    },
    "9485": {
      "op": "MSTORE"
    },
    "9486": {
      "op": "PUSH3",
      "value": "0x251B"
    },
    "9490": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9492": {
      "op": "DUP5"
    },
    "9493": {
      "op": "ADD"
    },
    "9494": {
      "op": "PUSH3",
      "value": "0x2486"
    },
    "9498": {
      "jump": "i",
      "op": "JUMP"
    },
    "9499": {
      "op": "JUMPDEST"
    },
    "9500": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9502": {
      "op": "DUP3"
    },
    "9503": {
      "op": "ADD"
    },
    "9504": {
      "op": "MSTORE"
    },
    "9505": {
      "op": "PUSH3",
      "value": "0x252E"
    },
    "9509": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9511": {
      "op": "DUP5"
    },
    "9512": {
      "op": "ADD"
    },
    "9513": {
      "op": "PUSH3",
      "value": "0x2486"
    },
    "9517": {
      "jump": "i",
      "op": "JUMP"
    },
    "9518": {
      "op": "JUMPDEST"
    },
    "9519": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9521": {
      "op": "DUP3"
    },
    "9522": {
      "op": "ADD"
    },
    "9523": {
      "op": "MSTORE"
    },
    "9524": {
      "op": "PUSH3",
      "value": "0x2541"
    },
    "9528": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9530": {
      "op": "DUP5"
    },
    "9531": {
      "op": "ADD"
    },
    "9532": {
      "op": "PUSH3",
      "value": "0x2486"
    },
    "9536": {
      "jump": "i",
      "op": "JUMP"
    },
    "9537": {
      "op": "JUMPDEST"
    },
    "9538": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9540": {
      "op": "DUP3"
    },
    "9541": {
      "op": "ADD"
    },
    "9542": {
      "op": "MSTORE"
    },
    "9543": {
      "op": "PUSH3",
      "value": "0x2554"
    },
    "9547": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "9549": {
      "op": "DUP5"
    },
    "9550": {
      "op": "ADD"
    },
    "9551": {
      "op": "PUSH3",
      "value": "0x2493"
    },
    "9555": {
      "jump": "i",
      "op": "JUMP"
    },
    "9556": {
      "op": "JUMPDEST"
    },
    "9557": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "9559": {
      "op": "DUP3"
    },
    "9560": {
      "op": "ADD"
    },
    "9561": {
      "op": "MSTORE"
    },
    "9562": {
      "op": "PUSH3",
      "value": "0x2567"
    },
    "9566": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9568": {
      "op": "DUP5"
    },
    "9569": {
      "op": "ADD"
    },
    "9570": {
      "op": "PUSH3",
      "value": "0x2312"
    },
    "9574": {
      "jump": "i",
      "op": "JUMP"
    },
    "9575": {
      "op": "JUMPDEST"
    },
    "9576": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9578": {
      "op": "DUP3"
    },
    "9579": {
      "op": "ADD"
    },
    "9580": {
      "op": "MSTORE"
    },
    "9581": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "9584": {
      "op": "PUSH3",
      "value": "0x257C"
    },
    "9588": {
      "op": "DUP2"
    },
    "9589": {
      "op": "DUP6"
    },
    "9590": {
      "op": "ADD"
    },
    "9591": {
      "op": "PUSH3",
      "value": "0x2312"
    },
    "9595": {
      "jump": "i",
      "op": "JUMP"
    },
    "9596": {
      "op": "JUMPDEST"
    },
    "9597": {
      "op": "SWAP1"
    },
    "9598": {
      "op": "DUP3"
    },
    "9599": {
      "op": "ADD"
    },
    "9600": {
      "op": "MSTORE"
    },
    "9601": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "9604": {
      "op": "PUSH3",
      "value": "0x2590"
    },
    "9608": {
      "op": "DUP5"
    },
    "9609": {
      "op": "DUP3"
    },
    "9610": {
      "op": "ADD"
    },
    "9611": {
      "op": "PUSH3",
      "value": "0x2312"
    },
    "9615": {
      "jump": "i",
      "op": "JUMP"
    },
    "9616": {
      "op": "JUMPDEST"
    },
    "9617": {
      "op": "SWAP1"
    },
    "9618": {
      "op": "DUP3"
    },
    "9619": {
      "op": "ADD"
    },
    "9620": {
      "op": "MSTORE"
    },
    "9621": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "9624": {
      "op": "PUSH3",
      "value": "0x25A4"
    },
    "9628": {
      "op": "DUP5"
    },
    "9629": {
      "op": "DUP3"
    },
    "9630": {
      "op": "ADD"
    },
    "9631": {
      "op": "PUSH3",
      "value": "0x2312"
    },
    "9635": {
      "jump": "i",
      "op": "JUMP"
    },
    "9636": {
      "op": "JUMPDEST"
    },
    "9637": {
      "op": "SWAP1"
    },
    "9638": {
      "op": "DUP3"
    },
    "9639": {
      "op": "ADD"
    },
    "9640": {
      "op": "MSTORE"
    },
    "9641": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "9644": {
      "op": "PUSH3",
      "value": "0x25B8"
    },
    "9648": {
      "op": "DUP5"
    },
    "9649": {
      "op": "DUP3"
    },
    "9650": {
      "op": "ADD"
    },
    "9651": {
      "op": "PUSH3",
      "value": "0x24A9"
    },
    "9655": {
      "jump": "i",
      "op": "JUMP"
    },
    "9656": {
      "op": "JUMPDEST"
    },
    "9657": {
      "op": "SWAP1"
    },
    "9658": {
      "op": "DUP3"
    },
    "9659": {
      "op": "ADD"
    },
    "9660": {
      "op": "MSTORE"
    },
    "9661": {
      "op": "SWAP4"
    },
    "9662": {
      "op": "SWAP3"
    },
    "9663": {
      "op": "POP"
    },
    "9664": {
      "op": "POP"
    },
    "9665": {
      "op": "POP"
    },
    "9666": {
      "jump": "o",
      "op": "JUMP"
    },
    "9667": {
      "op": "JUMPDEST"
    },
    "9668": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9670": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9672": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9674": {
      "op": "SHL"
    },
    "9675": {
      "op": "SUB"
    },
    "9676": {
      "op": "SWAP4"
    },
    "9677": {
      "op": "DUP5"
    },
    "9678": {
      "op": "AND"
    },
    "9679": {
      "op": "DUP2"
    },
    "9680": {
      "op": "MSTORE"
    },
    "9681": {
      "op": "SWAP2"
    },
    "9682": {
      "op": "SWAP1"
    },
    "9683": {
      "op": "SWAP3"
    },
    "9684": {
      "op": "AND"
    },
    "9685": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9687": {
      "op": "DUP3"
    },
    "9688": {
      "op": "ADD"
    },
    "9689": {
      "op": "MSTORE"
    },
    "9690": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9692": {
      "op": "DUP2"
    },
    "9693": {
      "op": "ADD"
    },
    "9694": {
      "op": "SWAP2"
    },
    "9695": {
      "op": "SWAP1"
    },
    "9696": {
      "op": "SWAP2"
    },
    "9697": {
      "op": "MSTORE"
    },
    "9698": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9700": {
      "op": "ADD"
    },
    "9701": {
      "op": "SWAP1"
    },
    "9702": {
      "jump": "o",
      "op": "JUMP"
    },
    "9703": {
      "op": "JUMPDEST"
    },
    "9704": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9708": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9710": {
      "op": "SHL"
    },
    "9711": {
      "op": "SUB"
    },
    "9712": {
      "op": "SWAP4"
    },
    "9713": {
      "op": "DUP5"
    },
    "9714": {
      "op": "AND"
    },
    "9715": {
      "op": "DUP2"
    },
    "9716": {
      "op": "MSTORE"
    },
    "9717": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9719": {
      "op": "DUP2"
    },
    "9720": {
      "op": "ADD"
    },
    "9721": {
      "op": "SWAP3"
    },
    "9722": {
      "op": "SWAP1"
    },
    "9723": {
      "op": "SWAP3"
    },
    "9724": {
      "op": "MSTORE"
    },
    "9725": {
      "op": "SWAP1"
    },
    "9726": {
      "op": "SWAP2"
    },
    "9727": {
      "op": "AND"
    },
    "9728": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9730": {
      "op": "DUP3"
    },
    "9731": {
      "op": "ADD"
    },
    "9732": {
      "op": "MSTORE"
    },
    "9733": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9735": {
      "op": "ADD"
    },
    "9736": {
      "op": "SWAP1"
    },
    "9737": {
      "jump": "o",
      "op": "JUMP"
    },
    "9738": {
      "op": "JUMPDEST"
    },
    "9739": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9741": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9743": {
      "op": "DUP3"
    },
    "9744": {
      "op": "DUP5"
    },
    "9745": {
      "op": "SUB"
    },
    "9746": {
      "op": "SLT"
    },
    "9747": {
      "op": "ISZERO"
    },
    "9748": {
      "op": "PUSH3",
      "value": "0x261D"
    },
    "9752": {
      "op": "JUMPI"
    },
    "9753": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9755": {
      "op": "DUP1"
    },
    "9756": {
      "op": "REVERT"
    },
    "9757": {
      "op": "JUMPDEST"
    },
    "9758": {
      "op": "DUP2"
    },
    "9759": {
      "op": "MLOAD"
    },
    "9760": {
      "op": "DUP1"
    },
    "9761": {
      "op": "ISZERO"
    },
    "9762": {
      "op": "ISZERO"
    },
    "9763": {
      "op": "DUP2"
    },
    "9764": {
      "op": "EQ"
    },
    "9765": {
      "op": "PUSH3",
      "value": "0x1E94"
    },
    "9769": {
      "op": "JUMPI"
    },
    "9770": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9772": {
      "op": "DUP1"
    },
    "9773": {
      "op": "REVERT"
    },
    "9774": {
      "op": "JUMPDEST"
    },
    "9775": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9777": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9779": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9781": {
      "op": "SHL"
    },
    "9782": {
      "op": "SUB"
    },
    "9783": {
      "op": "SWAP5"
    },
    "9784": {
      "op": "DUP6"
    },
    "9785": {
      "op": "AND"
    },
    "9786": {
      "op": "DUP2"
    },
    "9787": {
      "op": "MSTORE"
    },
    "9788": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9790": {
      "op": "DUP2"
    },
    "9791": {
      "op": "ADD"
    },
    "9792": {
      "op": "SWAP4"
    },
    "9793": {
      "op": "SWAP1"
    },
    "9794": {
      "op": "SWAP4"
    },
    "9795": {
      "op": "MSTORE"
    },
    "9796": {
      "op": "SWAP3"
    },
    "9797": {
      "op": "AND"
    },
    "9798": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9800": {
      "op": "DUP3"
    },
    "9801": {
      "op": "ADD"
    },
    "9802": {
      "op": "MSTORE"
    },
    "9803": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "9806": {
      "op": "SWAP1"
    },
    "9807": {
      "op": "SWAP2"
    },
    "9808": {
      "op": "AND"
    },
    "9809": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9811": {
      "op": "DUP3"
    },
    "9812": {
      "op": "ADD"
    },
    "9813": {
      "op": "MSTORE"
    },
    "9814": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9816": {
      "op": "ADD"
    },
    "9817": {
      "op": "SWAP1"
    },
    "9818": {
      "jump": "o",
      "op": "JUMP"
    },
    "9819": {
      "op": "JUMPDEST"
    },
    "9820": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9824": {
      "op": "DUP3"
    },
    "9825": {
      "op": "ADD"
    },
    "9826": {
      "op": "PUSH3",
      "value": "0x2670"
    },
    "9830": {
      "op": "JUMPI"
    },
    "9831": {
      "op": "PUSH3",
      "value": "0x2670"
    },
    "9835": {
      "op": "PUSH3",
      "value": "0x2324"
    },
    "9839": {
      "jump": "i",
      "op": "JUMP"
    },
    "9840": {
      "op": "JUMPDEST"
    },
    "9841": {
      "op": "POP"
    },
    "9842": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9844": {
      "op": "ADD"
    },
    "9845": {
      "op": "SWAP1"
    },
    "9846": {
      "jump": "o",
      "op": "JUMP"
    },
    "9847": {
      "op": "JUMPDEST"
    },
    "9848": {
      "op": "DUP1"
    },
    "9849": {
      "op": "DUP3"
    },
    "9850": {
      "op": "ADD"
    },
    "9851": {
      "op": "DUP1"
    },
    "9852": {
      "op": "DUP3"
    },
    "9853": {
      "op": "GT"
    },
    "9854": {
      "op": "ISZERO"
    },
    "9855": {
      "op": "PUSH3",
      "value": "0x2350"
    },
    "9859": {
      "op": "JUMPI"
    },
    "9860": {
      "op": "PUSH3",
      "value": "0x2350"
    },
    "9864": {
      "op": "PUSH3",
      "value": "0x2324"
    },
    "9868": {
      "jump": "i",
      "op": "JUMP"
    },
    "9869": {
      "op": "JUMPDEST"
    },
    "9870": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9872": {
      "op": "DUP1"
    },
    "9873": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9875": {
      "op": "DUP4"
    },
    "9876": {
      "op": "DUP6"
    },
    "9877": {
      "op": "SUB"
    },
    "9878": {
      "op": "SLT"
    },
    "9879": {
      "op": "ISZERO"
    },
    "9880": {
      "op": "PUSH3",
      "value": "0x26A1"
    },
    "9884": {
      "op": "JUMPI"
    },
    "9885": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9887": {
      "op": "DUP1"
    },
    "9888": {
      "op": "REVERT"
    },
    "9889": {
      "op": "JUMPDEST"
    },
    "9890": {
      "op": "POP"
    },
    "9891": {
      "op": "POP"
    },
    "9892": {
      "op": "DUP1"
    },
    "9893": {
      "op": "MLOAD"
    },
    "9894": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9896": {
      "op": "SWAP1"
    },
    "9897": {
      "op": "SWAP2"
    },
    "9898": {
      "op": "ADD"
    },
    "9899": {
      "op": "MLOAD"
    },
    "9900": {
      "op": "SWAP1"
    },
    "9901": {
      "op": "SWAP3"
    },
    "9902": {
      "op": "SWAP1"
    },
    "9903": {
      "op": "SWAP2"
    },
    "9904": {
      "op": "POP"
    },
    "9905": {
      "jump": "o",
      "op": "JUMP"
    },
    "9906": {
      "op": "JUMPDEST"
    },
    "9907": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9909": {
      "op": "DUP1"
    },
    "9910": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9912": {
      "op": "DUP1"
    },
    "9913": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9915": {
      "op": "DUP1"
    },
    "9916": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "9918": {
      "op": "DUP8"
    },
    "9919": {
      "op": "DUP10"
    },
    "9920": {
      "op": "SUB"
    },
    "9921": {
      "op": "SLT"
    },
    "9922": {
      "op": "ISZERO"
    },
    "9923": {
      "op": "PUSH3",
      "value": "0x26CC"
    },
    "9927": {
      "op": "JUMPI"
    },
    "9928": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9930": {
      "op": "DUP1"
    },
    "9931": {
      "op": "REVERT"
    },
    "9932": {
      "op": "JUMPDEST"
    },
    "9933": {
      "op": "DUP7"
    },
    "9934": {
      "op": "MLOAD"
    },
    "9935": {
      "op": "SWAP6"
    },
    "9936": {
      "op": "POP"
    },
    "9937": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9939": {
      "op": "DUP8"
    },
    "9940": {
      "op": "ADD"
    },
    "9941": {
      "op": "MLOAD"
    },
    "9942": {
      "op": "SWAP5"
    },
    "9943": {
      "op": "POP"
    },
    "9944": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9946": {
      "op": "DUP8"
    },
    "9947": {
      "op": "ADD"
    },
    "9948": {
      "op": "MLOAD"
    },
    "9949": {
      "op": "SWAP4"
    },
    "9950": {
      "op": "POP"
    },
    "9951": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9953": {
      "op": "DUP8"
    },
    "9954": {
      "op": "ADD"
    },
    "9955": {
      "op": "MLOAD"
    },
    "9956": {
      "op": "SWAP3"
    },
    "9957": {
      "op": "POP"
    },
    "9958": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9960": {
      "op": "DUP8"
    },
    "9961": {
      "op": "ADD"
    },
    "9962": {
      "op": "MLOAD"
    },
    "9963": {
      "op": "SWAP2"
    },
    "9964": {
      "op": "POP"
    },
    "9965": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9967": {
      "op": "DUP8"
    },
    "9968": {
      "op": "ADD"
    },
    "9969": {
      "op": "MLOAD"
    },
    "9970": {
      "op": "SWAP1"
    },
    "9971": {
      "op": "POP"
    },
    "9972": {
      "op": "SWAP3"
    },
    "9973": {
      "op": "SWAP6"
    },
    "9974": {
      "op": "POP"
    },
    "9975": {
      "op": "SWAP3"
    },
    "9976": {
      "op": "SWAP6"
    },
    "9977": {
      "op": "POP"
    },
    "9978": {
      "op": "SWAP3"
    },
    "9979": {
      "op": "SWAP6"
    },
    "9980": {
      "jump": "o",
      "op": "JUMP"
    },
    "9981": {
      "op": "JUMPDEST"
    },
    "9982": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9984": {
      "op": "DUP3"
    },
    "9985": {
      "op": "MLOAD"
    },
    "9986": {
      "op": "PUSH3",
      "value": "0x2711"
    },
    "9990": {
      "op": "DUP2"
    },
    "9991": {
      "op": "DUP5"
    },
    "9992": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9994": {
      "op": "DUP8"
    },
    "9995": {
      "op": "ADD"
    },
    "9996": {
      "op": "PUSH3",
      "value": "0x2356"
    },
    "10000": {
      "jump": "i",
      "op": "JUMP"
    },
    "10001": {
      "op": "JUMPDEST"
    },
    "10002": {
      "op": "SWAP2"
    },
    "10003": {
      "op": "SWAP1"
    },
    "10004": {
      "op": "SWAP2"
    },
    "10005": {
      "op": "ADD"
    },
    "10006": {
      "op": "SWAP3"
    },
    "10007": {
      "op": "SWAP2"
    },
    "10008": {
      "op": "POP"
    },
    "10009": {
      "op": "POP"
    },
    "10010": {
      "jump": "o",
      "op": "JUMP"
    },
    "10011": {
      "op": "JUMPDEST"
    },
    "10012": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10014": {
      "op": "DUP2"
    },
    "10015": {
      "op": "MSTORE"
    },
    "10016": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10018": {
      "op": "PUSH3",
      "value": "0x1E94"
    },
    "10022": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10024": {
      "op": "DUP4"
    },
    "10025": {
      "op": "ADD"
    },
    "10026": {
      "op": "DUP5"
    },
    "10027": {
      "op": "PUSH3",
      "value": "0x237C"
    },
    "10031": {
      "jump": "i",
      "op": "JUMP"
    }
  },
  "sha1": "dec9fb5ad5e6fb550240a7bc6d09ac63d01ffead",
  "source": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.0;\n\nimport \"./openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\";\nimport \"./openzeppelin-solidity/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"./openzeppelin-solidity/contracts/utils/cryptography/ECDSA.sol\";\nimport \"./openzeppelin-solidity/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"./openzeppelin-solidity/contracts/security/ReentrancyGuard.sol\";\nimport \"../interfaces/AggregatorV3Interface.sol\";\nimport \"../interfaces/ILendingPoolAddressesProvider.sol\";\nimport \"../interfaces/IAaveLendingPoolV2.sol\";\nimport \"../interfaces/IAaveOracle.sol\";\nimport \"../interfaces/IUniswapV2Pair.sol\";\nimport \"../interfaces/IUniswapV2Factory.sol\";\nimport \"../interfaces/IUniswapV2Router01.sol\";\nimport \"../interfaces/ISwapRouter.sol\";\nimport \"../interfaces/INonfungiblePositionManager.sol\";\nimport \"./TokenisableRange.sol\";\nimport \"./openzeppelin-solidity/contracts/proxy/beacon/BeaconProxy.sol\";\nimport \"./openzeppelin-solidity/contracts/access/Ownable.sol\";\nimport {IPriceOracle} from \"../interfaces/IPriceOracle.sol\";\n\n\n/// @title Range middleware between ROE lending pool and various ranges\ncontract RangeManager is ReentrancyGuard, Ownable {\n  using SafeERC20 for ERC20;\n  ILendingPool public LENDING_POOL;\n  event Withdraw(address user, address asset, uint amount);\n  event Deposit(address user, address asset, uint amount);\n  event AddRange(uint128 startX10, uint128 endX10, uint step);\n\n  ERC20 public ASSET_0;\n  ERC20 public ASSET_1;\n\n  // Constant across chains - https://docs.uniswap.org/protocol/reference/deployments\n  INonfungiblePositionManager constant public POS_MGR = INonfungiblePositionManager(0xC36442b4a4522E871399CD717aBDD847Ab11FE88);  \n\n  struct Step {\n    uint128 start;\n    uint128 end;\n  }\n\n  Step [] public stepList; \n  TokenisableRange [] public tokenisedRanges;\n  TokenisableRange [] public tokenisedTicker;\n  \n  \n  constructor(ILendingPool lendingPool, ERC20 _asset0, ERC20 _asset1)  {\n    require( address(lendingPool) != address(0x0), \"Invalid address\" );\n    LENDING_POOL = lendingPool;\n    ASSET_0 = _asset0 < _asset1 ? _asset0 : _asset1;\n    ASSET_1 = _asset0 < _asset1 ? _asset1 : _asset0;\n  }\n\n\n  /// @notice Checks validity and non overlap of the price ranges\n  /// @param start range low price bound\n  /// @param end range high price bound\n  function checkNewRange(uint128 start, uint128 end) internal view {\n    require(start < end, \"Range invalid\");\n    uint256 len = stepList.length;\n    for (uint i = 0; i < len; i++) {\n      if (start >= stepList[i].end || end <= stepList[i].start) {\n        continue;\n      }\n      revert(\"Range overlap\");\n    } \n  }\n  \n  /// @notice Generate Ticker and Ranger ranges\n  /// @param startX10 Range lower price scaled by 1e10\n  /// @param endX10 Range high price scaled by 1e10\n  /// @param startName Name of the range lower bound \n  /// @param endName Name of the range higher bound\n  function generateRange(uint128 startX10, uint128 endX10, string memory startName, string memory endName, address beacon) external onlyOwner {\n    require(beacon != address(0x0), \"Invalid beacon\");\n    checkNewRange(startX10, endX10);\n    stepList.push( Step(startX10, endX10) );\n    BeaconProxy trbp = new BeaconProxy(beacon, \"\");\n    tokenisedRanges.push( TokenisableRange(address(trbp)) );\n    trbp = new BeaconProxy(beacon, \"\");\n    tokenisedTicker.push( TokenisableRange(address(trbp)) );\n    IAaveOracle oracle = IAaveOracle(ILendingPoolAddressesProvider( LENDING_POOL.getAddressesProvider() ).getPriceOracle());\n    \n    tokenisedRanges[ tokenisedRanges.length - 1 ].initProxy(oracle, ASSET_0, ASSET_1, startX10, endX10, startName, endName, false);\n    tokenisedTicker[ tokenisedTicker.length - 1 ].initProxy(oracle, ASSET_0, ASSET_1, startX10, endX10, startName, endName, true); \n    emit AddRange(startX10, endX10, tokenisedRanges.length - 1);\n  }\n  \n  \n  /// @notice Initialize a previously created ticker\n  /// @param tr Range address\n  /// @param amount0 Amount of token0\n  /// @param amount1 Amount of token1\n  function initRange(address tr, uint amount0, uint amount1) external onlyOwner {\n    ASSET_0.safeTransferFrom(msg.sender, address(this), amount0);\n    ASSET_0.safeIncreaseAllowance(tr, amount0);\n    ASSET_1.safeTransferFrom(msg.sender, address(this), amount1);\n    ASSET_1.safeIncreaseAllowance(tr, amount1);\n    TokenisableRange(tr).init(amount0, amount1);\n    ERC20(tr).safeTransfer(msg.sender, TokenisableRange(tr).balanceOf(address(this)));\n  }\n\n\n  /// @notice Remove assets from tokenisedRanges\n  /// @param step Id of the range+ticker step from which to remove assets\n  function removeFromStep(uint256 step) internal {\n    require(step < tokenisedRanges.length && step < tokenisedTicker.length, \"Invalid step\");\n    uint256 trAmt;\n    \n    trAmt = ERC20(LENDING_POOL.getReserveData(address(tokenisedRanges[step])).aTokenAddress).balanceOf(msg.sender);   \n    if (trAmt > 0) {       \n        LENDING_POOL.PMTransfer(\n          LENDING_POOL.getReserveData(address(tokenisedRanges[step])).aTokenAddress, \n          msg.sender, \n          trAmt\n        );\n        trAmt = LENDING_POOL.withdraw(address(tokenisedRanges[step]), type(uint256).max, address(this));\n        tokenisedRanges[step].withdraw(trAmt, 0, 0);\n        emit Withdraw(msg.sender, address(tokenisedRanges[step]), trAmt);\n    }        \n\n    trAmt = ERC20(LENDING_POOL.getReserveData(address(tokenisedTicker[step])).aTokenAddress).balanceOf(msg.sender);\n    if (trAmt > 0) {    \n        LENDING_POOL.PMTransfer(\n          LENDING_POOL.getReserveData(address(tokenisedTicker[step])).aTokenAddress, \n          msg.sender, \n          trAmt\n        );\n        uint256 ttAmt = LENDING_POOL.withdraw(address(tokenisedTicker[step]), type(uint256).max, address(this));\n        tokenisedTicker[step].withdraw(ttAmt, 0, 0);\n        emit Withdraw(msg.sender, address(tokenisedTicker[step]), trAmt);\n    }           \n  }\n\n\n  /// @notice Remove assets from tokenisedRanges\n  /// @param step Id of the range+ticker step from which to remove assets\n  function removeAssetsFromStep(uint256 step) nonReentrant external {\n    removeFromStep(step);\n    cleanup();\n  }\n  \n  \n  /// @notice Transfer assets from the lending pool to a tokenizedRange\n  /// @param tr TokenisableRange instance into which to transfer assets\n  /// @param step Id of the range+ticker step from which to remove assets\n  /// @param amount0 Amount of asset0 to transfer in the TR\n  /// @param amount1 Amount of asset1 to transfer in the TR\n  /// @dev Useful to remove from a previous range and deposit into a new TR when price moves\n  function transferAssetsIntoStep(TokenisableRange tr, uint256 step, uint256 amount0, uint256 amount1) internal {\n    removeFromStep(step);\n    if (amount0 > 0) {    \n      LENDING_POOL.PMTransfer( LENDING_POOL.getReserveData(address(ASSET_0)).aTokenAddress, msg.sender, amount0 );\n      LENDING_POOL.withdraw( address(ASSET_0), amount0, address(this) );\n      ASSET_0.safeIncreaseAllowance(address(tr), amount0);\n    }\n    if (amount1 > 0) {\n      LENDING_POOL.PMTransfer( LENDING_POOL.getReserveData(address(ASSET_1)).aTokenAddress, msg.sender, amount1 );\n      LENDING_POOL.withdraw( address(ASSET_1), amount1, address(this) );\n      ASSET_1.safeIncreaseAllowance(address(tr), amount1);\n    }\n    uint256 lpAmt = tr.deposit(amount0, amount1);\n    emit Deposit(msg.sender, address(tr), lpAmt);\n    tr.approve(address(LENDING_POOL), lpAmt);\n    LENDING_POOL.deposit(address(tr), lpAmt, msg.sender, 0);\n    cleanup();\n  }\n\n\n  /// @notice Transfer assets from the lending pool to a Ranger\n  /// @param step Id of the range+ticker step from which to remove assets\n  /// @param amount0 Amount of asset0 to transfer in the Range\n  /// @param amount1 Amount of asset1 to transfer in the Range\n  function transferAssetsIntoRangerStep(uint256 step, uint256 amount0, uint256 amount1) nonReentrant external {\n    transferAssetsIntoStep(tokenisedRanges[step], step, amount0, amount1);\n  }\n\n\n  /// @notice Transfer assets from the lending pool to a Ticker\n  /// @param step Id of the range+ticker step from which to remove assets\n  /// @param amount0 Amount of asset0 to transfer in the Ticker\n  /// @param amount1 Amount of asset1 to transfer in the Ticker\n  function transferAssetsIntoTickerStep(uint256 step, uint256 amount0, uint256 amount1) nonReentrant external {\n    transferAssetsIntoStep(tokenisedTicker[step], step, amount0, amount1);\n  }\n\n\n  /// @notice Check token balances and return assets to the user\n  function cleanup() internal {\n    uint256 asset0_amt = ASSET_0.balanceOf(address(this));\n    uint256 asset1_amt = ASSET_1.balanceOf(address(this));\n    \n    if (asset0_amt > 0) {\n      ASSET_0.safeIncreaseAllowance(address(LENDING_POOL), asset0_amt);\n      LENDING_POOL.deposit(address(ASSET_0), asset0_amt, msg.sender, 0);\n    }\n    \n    if (asset1_amt > 0) {\n      ASSET_1.safeIncreaseAllowance(address(LENDING_POOL), asset1_amt);\n      LENDING_POOL.deposit(address(ASSET_1), asset1_amt, msg.sender, 0);\n    }\n    \n    // Check that health factor is not put into liquidation / with buffer\n    (,,,,,uint256 hf) = LENDING_POOL.getUserAccountData(msg.sender);\n    require(hf > 1.01e18, \"Health factor is too low\");\n  }\n\n\n  /// @notice Get length of stepList\n  /// @return listLength Length\n  function getStepListLength() external view returns (uint256 listLength) {\n    listLength = stepList.length;\n  }\n}\n",
  "sourceMap": "1159:8257:0:-:0;;;1911:284;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1701:1:42;1806:7;:22;921:32:10;719:10:70;921:18:10;:32::i;:::-;-1:-1:-1;;;;;1995:36:0;;1986:66;;;;-1:-1:-1;;;1986:66:0;;981:2:102;1986:66:0;;;963:21:102;1020:2;1000:18;;;993:30;-1:-1:-1;;;1039:18:102;;;1032:45;1094:18;;1986:66:0;;;;;;;;2058:12;:26;;-1:-1:-1;;;;;;2058:26:0;-1:-1:-1;;;;;2058:26:0;;;;;;;;;;2100:17;;;;;;;:37;;2130:7;2100:37;;;2120:7;2100:37;2090:7;:47;;-1:-1:-1;;;;;;2090:47:0;-1:-1:-1;;;;;2090:47:0;;;;;;2153:17;;;;;;;:37;;2183:7;2153:37;;;2173:7;2153:37;2143:7;:47;;-1:-1:-1;;;;;;2143:47:0;-1:-1:-1;;;;;2143:47:0;;;;;;;;;;-1:-1:-1;1159:8257:0;;-1:-1:-1;;1159:8257:0;2270:187:10;2362:6;;;-1:-1:-1;;;;;2378:17:10;;;-1:-1:-1;;;;;;2378:17:10;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;14:145:102:-;-1:-1:-1;;;;;103:31:102;;93:42;;83:70;;149:1;146;139:12;83:70;14:145;:::o;164:610::-;301:6;309;317;370:2;358:9;349:7;345:23;341:32;338:52;;;386:1;383;376:12;338:52;418:9;412:16;437:45;476:5;437:45;:::i;:::-;551:2;536:18;;530:25;501:5;;-1:-1:-1;564:47:102;530:25;564:47;:::i;:::-;682:2;667:18;;661:25;630:7;;-1:-1:-1;695:47:102;661:25;695:47;:::i;:::-;761:7;751:17;;;164:610;;;;;:::o;779:339::-;1159:8257:0;;;;;;",
  "sourcePath": "contracts/RangeManager.sol",
  "type": "contract"
}