{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "beneficiary_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "releaseTime_",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "beneficiary",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "release",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "releaseTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "44": "contracts/openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
    "58": "contracts/openzeppelin-solidity/contracts/token/ERC20/utils/SafeERC20.sol",
    "59": "contracts/openzeppelin-solidity/contracts/token/ERC20/utils/TokenTimelock.sol",
    "68": "contracts/openzeppelin-solidity/contracts/utils/Address.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin-solidity/contracts/token/ERC20/utils/TokenTimelock.sol",
    "exportedSymbols": {
      "Address": [
        12471
      ],
      "IERC20": [
        5407
      ],
      "SafeERC20": [
        7450
      ],
      "TokenTimelock": [
        7565
      ]
    },
    "id": 7566,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7452,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "104:23:59"
      },
      {
        "absolutePath": "contracts/openzeppelin-solidity/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "./SafeERC20.sol",
        "id": 7453,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7566,
        "sourceUnit": 7451,
        "src": "129:25:59",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "TokenTimelock",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 7454,
          "nodeType": "StructuredDocumentation",
          "src": "156:221:59",
          "text": " @dev A token holder contract that will allow a beneficiary to extract the\n tokens after a given release time.\n Useful for simple vesting schedules like \"advisors get all of their tokens\n after 1 year\"."
        },
        "fullyImplemented": true,
        "id": 7565,
        "linearizedBaseContracts": [
          7565
        ],
        "name": "TokenTimelock",
        "nameLocation": "387:13:59",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 7458,
            "libraryName": {
              "id": 7455,
              "name": "SafeERC20",
              "nameLocations": [
                "413:9:59"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7450,
              "src": "413:9:59"
            },
            "nodeType": "UsingForDirective",
            "src": "407:27:59",
            "typeName": {
              "id": 7457,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7456,
                "name": "IERC20",
                "nameLocations": [
                  "427:6:59"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5407,
                "src": "427:6:59"
              },
              "referencedDeclaration": 5407,
              "src": "427:6:59",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$5407",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "id": 7461,
            "mutability": "immutable",
            "name": "_token",
            "nameLocation": "510:6:59",
            "nodeType": "VariableDeclaration",
            "scope": 7565,
            "src": "485:31:59",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$5407",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 7460,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7459,
                "name": "IERC20",
                "nameLocations": [
                  "485:6:59"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5407,
                "src": "485:6:59"
              },
              "referencedDeclaration": 5407,
              "src": "485:6:59",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$5407",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 7463,
            "mutability": "immutable",
            "name": "_beneficiary",
            "nameLocation": "602:12:59",
            "nodeType": "VariableDeclaration",
            "scope": 7565,
            "src": "576:38:59",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7462,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "576:7:59",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 7465,
            "mutability": "immutable",
            "name": "_releaseTime",
            "nameLocation": "694:12:59",
            "nodeType": "VariableDeclaration",
            "scope": 7565,
            "src": "668:38:59",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7464,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "668:7:59",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 7495,
              "nodeType": "Block",
              "src": "814:209:59",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7476,
                          "name": "releaseTime_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7472,
                          "src": "832:12:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 7477,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "847:5:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 7478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "853:9:59",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "847:15:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "832:30:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e54696d656c6f636b3a2072656c656173652074696d65206973206265666f72652063757272656e742074696d65",
                        "id": 7480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "864:52:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e1658b776de3735ba90dc86438c12854f3617d6d488d64009fdab5928e27c313",
                          "typeString": "literal_string \"TokenTimelock: release time is before current time\""
                        },
                        "value": "TokenTimelock: release time is before current time"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e1658b776de3735ba90dc86438c12854f3617d6d488d64009fdab5928e27c313",
                          "typeString": "literal_string \"TokenTimelock: release time is before current time\""
                        }
                      ],
                      "id": 7475,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "824:7:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "824:93:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7482,
                  "nodeType": "ExpressionStatement",
                  "src": "824:93:59"
                },
                {
                  "expression": {
                    "id": 7485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7483,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7461,
                      "src": "927:6:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$5407",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7484,
                      "name": "token_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7468,
                      "src": "936:6:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$5407",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "927:15:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$5407",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 7486,
                  "nodeType": "ExpressionStatement",
                  "src": "927:15:59"
                },
                {
                  "expression": {
                    "id": 7489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7487,
                      "name": "_beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7463,
                      "src": "952:12:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7488,
                      "name": "beneficiary_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7470,
                      "src": "967:12:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "952:27:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7490,
                  "nodeType": "ExpressionStatement",
                  "src": "952:27:59"
                },
                {
                  "expression": {
                    "id": 7493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7491,
                      "name": "_releaseTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7465,
                      "src": "989:12:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7492,
                      "name": "releaseTime_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7472,
                      "src": "1004:12:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "989:27:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7494,
                  "nodeType": "ExpressionStatement",
                  "src": "989:27:59"
                }
              ]
            },
            "id": 7496,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7473,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7468,
                  "mutability": "mutable",
                  "name": "token_",
                  "nameLocation": "741:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 7496,
                  "src": "734:13:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$5407",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 7467,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7466,
                      "name": "IERC20",
                      "nameLocations": [
                        "734:6:59"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5407,
                      "src": "734:6:59"
                    },
                    "referencedDeclaration": 5407,
                    "src": "734:6:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$5407",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7470,
                  "mutability": "mutable",
                  "name": "beneficiary_",
                  "nameLocation": "765:12:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 7496,
                  "src": "757:20:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7469,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "757:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7472,
                  "mutability": "mutable",
                  "name": "releaseTime_",
                  "nameLocation": "795:12:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 7496,
                  "src": "787:20:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7471,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "787:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "724:89:59"
            },
            "returnParameters": {
              "id": 7474,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "814:0:59"
            },
            "scope": 7565,
            "src": "713:310:59",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7505,
              "nodeType": "Block",
              "src": "1136:30:59",
              "statements": [
                {
                  "expression": {
                    "id": 7503,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7461,
                    "src": "1153:6:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$5407",
                      "typeString": "contract IERC20"
                    }
                  },
                  "functionReturnParameters": 7502,
                  "id": 7504,
                  "nodeType": "Return",
                  "src": "1146:13:59"
                }
              ]
            },
            "documentation": {
              "id": 7497,
              "nodeType": "StructuredDocumentation",
              "src": "1029:48:59",
              "text": " @return the token being held."
            },
            "functionSelector": "fc0c546a",
            "id": 7506,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "token",
            "nameLocation": "1091:5:59",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7498,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1096:2:59"
            },
            "returnParameters": {
              "id": 7502,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7501,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7506,
                  "src": "1128:6:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$5407",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 7500,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7499,
                      "name": "IERC20",
                      "nameLocations": [
                        "1128:6:59"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5407,
                      "src": "1128:6:59"
                    },
                    "referencedDeclaration": 5407,
                    "src": "1128:6:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$5407",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1127:8:59"
            },
            "scope": 7565,
            "src": "1082:84:59",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7514,
              "nodeType": "Block",
              "src": "1295:36:59",
              "statements": [
                {
                  "expression": {
                    "id": 7512,
                    "name": "_beneficiary",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7463,
                    "src": "1312:12:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 7511,
                  "id": 7513,
                  "nodeType": "Return",
                  "src": "1305:19:59"
                }
              ]
            },
            "documentation": {
              "id": 7507,
              "nodeType": "StructuredDocumentation",
              "src": "1172:57:59",
              "text": " @return the beneficiary of the tokens."
            },
            "functionSelector": "38af3eed",
            "id": 7515,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "beneficiary",
            "nameLocation": "1243:11:59",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7508,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1254:2:59"
            },
            "returnParameters": {
              "id": 7511,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7510,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7515,
                  "src": "1286:7:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7509,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1286:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1285:9:59"
            },
            "scope": 7565,
            "src": "1234:97:59",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7523,
              "nodeType": "Block",
              "src": "1468:36:59",
              "statements": [
                {
                  "expression": {
                    "id": 7521,
                    "name": "_releaseTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7465,
                    "src": "1485:12:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7520,
                  "id": 7522,
                  "nodeType": "Return",
                  "src": "1478:19:59"
                }
              ]
            },
            "documentation": {
              "id": 7516,
              "nodeType": "StructuredDocumentation",
              "src": "1337:65:59",
              "text": " @return the time when the tokens are released."
            },
            "functionSelector": "b91d4001",
            "id": 7524,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "releaseTime",
            "nameLocation": "1416:11:59",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7517,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1427:2:59"
            },
            "returnParameters": {
              "id": 7520,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7519,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7524,
                  "src": "1459:7:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7518,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1459:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1458:9:59"
            },
            "scope": 7565,
            "src": "1407:97:59",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7563,
              "nodeType": "Block",
              "src": "1625:294:59",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 7529,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "1643:5:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 7530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1649:9:59",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "1643:15:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 7531,
                            "name": "releaseTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7524,
                            "src": "1662:11:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 7532,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1662:13:59",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1643:32:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e54696d656c6f636b3a2063757272656e742074696d65206973206265666f72652072656c656173652074696d65",
                        "id": 7534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1677:52:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0345c6084b4d4be2f1249aa1f58ddc5a11b524aacb744b63dfad68c56d61fad0",
                          "typeString": "literal_string \"TokenTimelock: current time is before release time\""
                        },
                        "value": "TokenTimelock: current time is before release time"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0345c6084b4d4be2f1249aa1f58ddc5a11b524aacb744b63dfad68c56d61fad0",
                          "typeString": "literal_string \"TokenTimelock: current time is before release time\""
                        }
                      ],
                      "id": 7528,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1635:7:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1635:95:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7536,
                  "nodeType": "ExpressionStatement",
                  "src": "1635:95:59"
                },
                {
                  "assignments": [
                    7538
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7538,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "1749:6:59",
                      "nodeType": "VariableDeclaration",
                      "scope": 7563,
                      "src": "1741:14:59",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7537,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1741:7:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7547,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 7544,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1784:4:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenTimelock_$7565",
                              "typeString": "contract TokenTimelock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenTimelock_$7565",
                              "typeString": "contract TokenTimelock"
                            }
                          ],
                          "id": 7543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1776:7:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7542,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1776:7:59",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1776:13:59",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 7539,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7506,
                          "src": "1758:5:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$5407_$",
                            "typeString": "function () view returns (contract IERC20)"
                          }
                        },
                        "id": 7540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1758:7:59",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5407",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 7541,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1766:9:59",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5346,
                      "src": "1758:17:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 7546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1758:32:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1741:49:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7549,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7538,
                          "src": "1808:6:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 7550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1817:1:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1808:10:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e54696d656c6f636b3a206e6f20746f6b656e7320746f2072656c65617365",
                        "id": 7552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1820:37:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fd167cd15f7f49233a4aac5b2fadd1b9f782ba42f4eadaf31348954b9436eae8",
                          "typeString": "literal_string \"TokenTimelock: no tokens to release\""
                        },
                        "value": "TokenTimelock: no tokens to release"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fd167cd15f7f49233a4aac5b2fadd1b9f782ba42f4eadaf31348954b9436eae8",
                          "typeString": "literal_string \"TokenTimelock: no tokens to release\""
                        }
                      ],
                      "id": 7548,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1800:7:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1800:58:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7554,
                  "nodeType": "ExpressionStatement",
                  "src": "1800:58:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 7558,
                          "name": "beneficiary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7515,
                          "src": "1890:11:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 7559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1890:13:59",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7560,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7538,
                        "src": "1905:6:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 7555,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7506,
                          "src": "1869:5:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$5407_$",
                            "typeString": "function () view returns (contract IERC20)"
                          }
                        },
                        "id": 7556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1869:7:59",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5407",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 7557,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1877:12:59",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7257,
                      "src": "1869:20:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$5407_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$5407_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 7561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1869:43:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7562,
                  "nodeType": "ExpressionStatement",
                  "src": "1869:43:59"
                }
              ]
            },
            "documentation": {
              "id": 7525,
              "nodeType": "StructuredDocumentation",
              "src": "1510:76:59",
              "text": " @notice Transfers tokens held by timelock to beneficiary."
            },
            "functionSelector": "86d1a69f",
            "id": 7564,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "release",
            "nameLocation": "1600:7:59",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7526,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1607:2:59"
            },
            "returnParameters": {
              "id": 7527,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1625:0:59"
            },
            "scope": 7565,
            "src": "1591:328:59",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 7566,
        "src": "378:1543:59",
        "usedErrors": [],
        "usedEvents": []
      }
    ],
    "src": "104:1818:59"
  },
  "bytecode": "60e060405234801561001057600080fd5b506040516107aa3803806107aa83398101604081905261002f916100d0565b42811161009d5760405162461bcd60e51b815260206004820152603260248201527f546f6b656e54696d656c6f636b3a2072656c656173652074696d65206973206260448201527165666f72652063757272656e742074696d6560701b606482015260840160405180910390fd5b6001600160a01b03928316608052911660a05260c052610113565b6001600160a01b03811681146100cd57600080fd5b50565b6000806000606084860312156100e557600080fd5b83516100f0816100b8565b6020850151909350610101816100b8565b80925050604084015190509250925092565b60805160a05160c05161065061015a60003960008181609f015260f00152600081816053015261029801526000818160ca01528181610182015261027601526106506000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806338af3eed1461005157806386d1a69f14610090578063b91d40011461009a578063fc0c546a146100c8575b600080fd5b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b0390911681526020015b60405180910390f35b6100986100ee565b005b6040517f00000000000000000000000000000000000000000000000000000000000000008152602001610087565b7f0000000000000000000000000000000000000000000000000000000000000000610073565b7f000000000000000000000000000000000000000000000000000000000000000042101561017e5760405162461bcd60e51b815260206004820152603260248201527f546f6b656e54696d656c6f636b3a2063757272656e742074696d65206973206260448201527165666f72652072656c656173652074696d6560701b60648201526084015b60405180910390fd5b60007f00000000000000000000000000000000000000000000000000000000000000006040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa1580156101e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020b919061056c565b9050600081116102695760405162461bcd60e51b815260206004820152602360248201527f546f6b656e54696d656c6f636b3a206e6f20746f6b656e7320746f2072656c6560448201526261736560e81b6064820152608401610175565b6102bd6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f0000000000000000000000000000000000000000000000000000000000000000836102c0565b50565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610312908490610317565b505050565b600061036c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166103e99092919063ffffffff16565b805190915015610312578080602001905181019061038a9190610585565b6103125760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610175565b60606103f88484600085610402565b90505b9392505050565b6060824710156104635760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610175565b6001600160a01b0385163b6104ba5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610175565b600080866001600160a01b031685876040516104d691906105cb565b60006040518083038185875af1925050503d8060008114610513576040519150601f19603f3d011682016040523d82523d6000602084013e610518565b606091505b5091509150610528828286610533565b979650505050505050565b606083156105425750816103fb565b8251156105525782518084602001fd5b8160405162461bcd60e51b815260040161017591906105e7565b60006020828403121561057e57600080fd5b5051919050565b60006020828403121561059757600080fd5b815180151581146103fb57600080fd5b60005b838110156105c25781810151838201526020016105aa565b50506000910152565b600082516105dd8184602087016105a7565b9190910192915050565b60208152600082518060208401526106068160408501602087016105a7565b601f01601f1916919091016040019291505056fea26469706673582212206b40184c7db1ace31c57a475ee934fc00cd34875012f8a0df33bcc980a4a9ebd64736f6c63430008150033",
  "bytecodeSha1": "8d2e21c94a770210c6f7f22e814c459aa2f94f82",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.21+commit.d9974bed"
  },
  "contractName": "TokenTimelock",
  "coverageMap": {
    "branches": {
      "44": {},
      "58": {
        "SafeERC20._callOptionalReturn": {
          "20": [
            3735,
            3756,
            false
          ],
          "21": [
            3819,
            3849,
            true
          ]
        }
      },
      "59": {
        "TokenTimelock.release": {
          "15": [
            1643,
            1675,
            true
          ],
          "16": [
            1808,
            1818,
            true
          ]
        }
      },
      "68": {
        "Address.functionCallWithValue": {
          "17": [
            5130,
            5160,
            true
          ]
        },
        "Address.verifyCallResult": {
          "18": [
            7720,
            7727,
            false
          ],
          "19": [
            7861,
            7882,
            false
          ]
        }
      }
    },
    "statements": {
      "44": {},
      "58": {
        "SafeERC20._callOptionalReturn": {
          "7": [
            3811,
            3896
          ]
        },
        "SafeERC20.safeTransfer": {
          "6": [
            813,
            899
          ]
        }
      },
      "59": {
        "TokenTimelock.beneficiary": {
          "0": [
            1305,
            1324
          ]
        },
        "TokenTimelock.release": {
          "3": [
            1635,
            1730
          ],
          "4": [
            1800,
            1858
          ],
          "5": [
            1869,
            1912
          ]
        },
        "TokenTimelock.releaseTime": {
          "1": [
            1478,
            1497
          ]
        },
        "TokenTimelock.token": {
          "2": [
            1146,
            1159
          ]
        }
      },
      "68": {
        "Address.functionCall": {
          "8": [
            4003,
            4062
          ]
        },
        "Address.functionCallWithValue": {
          "9": [
            5122,
            5203
          ],
          "11": [
            5213,
            5273
          ],
          "12": [
            5367,
            5425
          ]
        },
        "Address.isContract": {
          "10": [
            1443,
            1473
          ]
        },
        "Address.verifyCallResult": {
          "13": [
            7743,
            7760
          ],
          "14": [
            8187,
            8207
          ]
        }
      }
    }
  },
  "dependencies": [
    "Address",
    "IERC20",
    "SafeERC20"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061004c5760003560e01c806338af3eed1461005157806386d1a69f14610090578063b91d40011461009a578063fc0c546a146100c8575b600080fd5b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b0390911681526020015b60405180910390f35b6100986100ee565b005b6040517f00000000000000000000000000000000000000000000000000000000000000008152602001610087565b7f0000000000000000000000000000000000000000000000000000000000000000610073565b7f000000000000000000000000000000000000000000000000000000000000000042101561017e5760405162461bcd60e51b815260206004820152603260248201527f546f6b656e54696d656c6f636b3a2063757272656e742074696d65206973206260448201527165666f72652072656c656173652074696d6560701b60648201526084015b60405180910390fd5b60007f00000000000000000000000000000000000000000000000000000000000000006040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa1580156101e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020b919061056c565b9050600081116102695760405162461bcd60e51b815260206004820152602360248201527f546f6b656e54696d656c6f636b3a206e6f20746f6b656e7320746f2072656c6560448201526261736560e81b6064820152608401610175565b6102bd6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f0000000000000000000000000000000000000000000000000000000000000000836102c0565b50565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610312908490610317565b505050565b600061036c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166103e99092919063ffffffff16565b805190915015610312578080602001905181019061038a9190610585565b6103125760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610175565b60606103f88484600085610402565b90505b9392505050565b6060824710156104635760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610175565b6001600160a01b0385163b6104ba5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610175565b600080866001600160a01b031685876040516104d691906105cb565b60006040518083038185875af1925050503d8060008114610513576040519150601f19603f3d011682016040523d82523d6000602084013e610518565b606091505b5091509150610528828286610533565b979650505050505050565b606083156105425750816103fb565b8251156105525782518084602001fd5b8160405162461bcd60e51b815260040161017591906105e7565b60006020828403121561057e57600080fd5b5051919050565b60006020828403121561059757600080fd5b815180151581146103fb57600080fd5b60005b838110156105c25781810151838201526020016105aa565b50506000910152565b600082516105dd8184602087016105a7565b9190910192915050565b60208152600082518060208401526106068160408501602087016105a7565b601f01601f1916919091016040019291505056fea26469706673582212206b40184c7db1ace31c57a475ee934fc00cd34875012f8a0df33bcc980a4a9ebd64736f6c63430008150033",
  "deployedSourceMap": "378:1543:59:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1234:97;1312:12;1234:97;;;-1:-1:-1;;;;;178:32:102;;;160:51;;148:2;133:18;1234:97:59;;;;;;;;1591:328;;;:::i;:::-;;1407:97;;;1485:12;368:25:102;;356:2;341:18;1407:97:59;222:177:102;1082:84:59;1153:6;1082:84;;1591:328;1485:12;1643:15;:32;;1635:95;;;;-1:-1:-1;;;1635:95:59;;829:2:102;1635:95:59;;;811:21:102;868:2;848:18;;;841:30;907:34;887:18;;;880:62;-1:-1:-1;;;958:18:102;;;951:48;1016:19;;1635:95:59;;;;;;;;;1741:14;1153:6;1758:32;;-1:-1:-1;;;1758:32:59;;1784:4;1758:32;;;160:51:102;-1:-1:-1;;;;;1758:17:59;;;;;;;133:18:102;;1758:32:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1741:49;;1817:1;1808:6;:10;1800:58;;;;-1:-1:-1;;;1800:58:59;;1437:2:102;1800:58:59;;;1419:21:102;1476:2;1456:18;;;1449:30;1515:34;1495:18;;;1488:62;-1:-1:-1;;;1566:18:102;;;1559:33;1609:19;;1800:58:59;1235:399:102;1800:58:59;1869:43;-1:-1:-1;;;;;1153:6:59;1869:20;1312:12;1905:6;1869:20;:43::i;:::-;1625:294;1591:328::o;701:205:58:-;840:58;;;-1:-1:-1;;;;;1831:32:102;;840:58:58;;;1813:51:102;1880:18;;;;1873:34;;;840:58:58;;;;;;;;;;1786:18:102;;;;840:58:58;;;;;;;;-1:-1:-1;;;;;840:58:58;-1:-1:-1;;;840:58:58;;;813:86;;833:5;;813:19;:86::i;:::-;701:205;;;:::o;3207:706::-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;-1:-1:-1;;;;;3652:27:58;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:58;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;-1:-1:-1;;;3811:85:58;;2402:2:102;3811:85:58;;;2384:21:102;2441:2;2421:18;;;2414:30;2480:34;2460:18;;;2453:62;-1:-1:-1;;;2531:18:102;;;2524:40;2581:19;;3811:85:58;2200:406:102;3846:223:68;3979:12;4010:52;4032:6;4040:4;4046:1;4049:12;4010:21;:52::i;:::-;4003:59;;3846:223;;;;;;:::o;4933:499::-;5098:12;5155:5;5130:21;:30;;5122:81;;;;-1:-1:-1;;;5122:81:68;;2813:2:102;5122:81:68;;;2795:21:102;2852:2;2832:18;;;2825:30;2891:34;2871:18;;;2864:62;-1:-1:-1;;;2942:18:102;;;2935:36;2988:19;;5122:81:68;2611:402:102;5122:81:68;-1:-1:-1;;;;;1450:19:68;;;5213:60;;;;-1:-1:-1;;;5213:60:68;;3220:2:102;5213:60:68;;;3202:21:102;3259:2;3239:18;;;3232:30;3298:31;3278:18;;;3271:59;3347:18;;5213:60:68;3018:353:102;5213:60:68;5285:12;5299:23;5326:6;-1:-1:-1;;;;;5326:11:68;5345:5;5352:4;5326:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5284:73;;;;5374:51;5391:7;5400:10;5412:12;5374:16;:51::i;:::-;5367:58;4933:499;-1:-1:-1;;;;;;;4933:499:68:o;7546:692::-;7692:12;7720:7;7716:516;;;-1:-1:-1;7750:10:68;7743:17;;7716:516;7861:17;;:21;7857:365;;8055:10;8049:17;8115:15;8102:10;8098:2;8094:19;8087:44;7857:365;8194:12;8187:20;;-1:-1:-1;;;8187:20:68;;;;;;;;:::i;1046:184:102:-;1116:6;1169:2;1157:9;1148:7;1144:23;1140:32;1137:52;;;1185:1;1182;1175:12;1137:52;-1:-1:-1;1208:16:102;;1046:184;-1:-1:-1;1046:184:102:o;1918:277::-;1985:6;2038:2;2026:9;2017:7;2013:23;2009:32;2006:52;;;2054:1;2051;2044:12;2006:52;2086:9;2080:16;2139:5;2132:13;2125:21;2118:5;2115:32;2105:60;;2161:1;2158;2151:12;3376:250;3461:1;3471:113;3485:6;3482:1;3479:13;3471:113;;;3561:11;;;3555:18;3542:11;;;3535:39;3507:2;3500:10;3471:113;;;-1:-1:-1;;3618:1:102;3600:16;;3593:27;3376:250::o;3631:287::-;3760:3;3798:6;3792:13;3814:66;3873:6;3868:3;3861:4;3853:6;3849:17;3814:66;:::i;:::-;3896:16;;;;;3631:287;-1:-1:-1;;3631:287:102:o;3923:396::-;4072:2;4061:9;4054:21;4035:4;4104:6;4098:13;4147:6;4142:2;4131:9;4127:18;4120:34;4163:79;4235:6;4230:2;4219:9;4215:18;4210:2;4202:6;4198:15;4163:79;:::i;:::-;4303:2;4282:15;-1:-1:-1;;4278:29:102;4263:45;;;;4310:2;4259:54;;3923:396;-1:-1:-1;;3923:396:102:o",
  "language": "Solidity",
  "natspec": {
    "details": "A token holder contract that will allow a beneficiary to extract the tokens after a given release time. Useful for simple vesting schedules like \"advisors get all of their tokens after 1 year\".",
    "kind": "dev",
    "methods": {
      "beneficiary()": {
        "returns": {
          "_0": "the beneficiary of the tokens."
        }
      },
      "release()": {
        "notice": "Transfers tokens held by timelock to beneficiary."
      },
      "releaseTime()": {
        "returns": {
          "_0": "the time when the tokens are released."
        }
      },
      "token()": {
        "returns": {
          "_0": "the token being held."
        }
      }
    },
    "version": 1
  },
  "offset": [
    378,
    1921
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x38AF3EED EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x86D1A69F EQ PUSH2 0x90 JUMPI DUP1 PUSH4 0xB91D4001 EQ PUSH2 0x9A JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0xC8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x0 JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x98 PUSH2 0xEE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x87 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x73 JUMP JUMPDEST PUSH32 0x0 TIMESTAMP LT ISZERO PUSH2 0x17E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E54696D656C6F636B3A2063757272656E742074696D652069732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x65666F72652072656C656173652074696D65 PUSH1 0x70 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x56C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x269 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E54696D656C6F636B3A206E6F20746F6B656E7320746F2072656C65 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x617365 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x175 JUMP JUMPDEST PUSH2 0x2BD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH32 0x0 DUP4 PUSH2 0x2C0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x312 SWAP1 DUP5 SWAP1 PUSH2 0x317 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36C DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3E9 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x312 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x38A SWAP2 SWAP1 PUSH2 0x585 JUMP JUMPDEST PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x175 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3F8 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x402 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x463 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x175 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x4BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x175 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x4D6 SWAP2 SWAP1 PUSH2 0x5CB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x513 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x518 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x528 DUP3 DUP3 DUP7 PUSH2 0x533 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x542 JUMPI POP DUP2 PUSH2 0x3FB JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x552 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x175 SWAP2 SWAP1 PUSH2 0x5E7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x57E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x597 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x3FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5C2 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x5AA JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x5DD DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x5A7 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x606 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x40184C7DB1ACE31C57A475EE SWAP4 0x4F 0xC0 0xC 0xD3 BASEFEE PUSH22 0x12F8A0DF33BCC980A4A9EBD64736F6C634300081500 CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        378,
        1921
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "MSTORE",
      "path": "59"
    },
    "5": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "CALLVALUE",
      "path": "59"
    },
    "6": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "DUP1",
      "path": "59"
    },
    "7": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "ISZERO",
      "path": "59"
    },
    "8": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "PUSH2",
      "path": "59",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "JUMPI",
      "path": "59"
    },
    "12": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "DUP1",
      "path": "59"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "REVERT",
      "path": "59"
    },
    "16": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "JUMPDEST",
      "path": "59"
    },
    "17": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "POP",
      "path": "59"
    },
    "18": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "CALLDATASIZE",
      "path": "59"
    },
    "21": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "LT",
      "path": "59"
    },
    "22": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "PUSH2",
      "path": "59",
      "value": "0x4C"
    },
    "25": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "JUMPI",
      "path": "59"
    },
    "26": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "CALLDATALOAD",
      "path": "59"
    },
    "29": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "SHR",
      "path": "59"
    },
    "32": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "DUP1",
      "path": "59"
    },
    "33": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "PUSH4",
      "path": "59",
      "value": "0x38AF3EED"
    },
    "38": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "EQ",
      "path": "59"
    },
    "39": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "PUSH2",
      "path": "59",
      "value": "0x51"
    },
    "42": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "JUMPI",
      "path": "59"
    },
    "43": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "DUP1",
      "path": "59"
    },
    "44": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "PUSH4",
      "path": "59",
      "value": "0x86D1A69F"
    },
    "49": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "EQ",
      "path": "59"
    },
    "50": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "PUSH2",
      "path": "59",
      "value": "0x90"
    },
    "53": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "JUMPI",
      "path": "59"
    },
    "54": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "DUP1",
      "path": "59"
    },
    "55": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "PUSH4",
      "path": "59",
      "value": "0xB91D4001"
    },
    "60": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "EQ",
      "path": "59"
    },
    "61": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "PUSH2",
      "path": "59",
      "value": "0x9A"
    },
    "64": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "JUMPI",
      "path": "59"
    },
    "65": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "DUP1",
      "path": "59"
    },
    "66": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "PUSH4",
      "path": "59",
      "value": "0xFC0C546A"
    },
    "71": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "EQ",
      "path": "59"
    },
    "72": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "PUSH2",
      "path": "59",
      "value": "0xC8"
    },
    "75": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "JUMPI",
      "path": "59"
    },
    "76": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "JUMPDEST",
      "path": "59"
    },
    "77": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x0"
    },
    "79": {
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "DUP1",
      "path": "59"
    },
    "80": {
      "first_revert": true,
      "fn": null,
      "offset": [
        378,
        1921
      ],
      "op": "REVERT",
      "path": "59"
    },
    "81": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1234,
        1331
      ],
      "op": "JUMPDEST",
      "path": "59"
    },
    "82": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1312,
        1324
      ],
      "op": "PUSH32",
      "path": "59",
      "statement": 0,
      "value": "0x0"
    },
    "115": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1234,
        1331
      ],
      "op": "JUMPDEST",
      "path": "59"
    },
    "116": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1234,
        1331
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x40"
    },
    "118": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1234,
        1331
      ],
      "op": "MLOAD",
      "path": "59"
    },
    "119": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "121": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "123": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "125": {
      "op": "SHL"
    },
    "126": {
      "op": "SUB"
    },
    "127": {
      "op": "SWAP1"
    },
    "128": {
      "op": "SWAP2"
    },
    "129": {
      "op": "AND"
    },
    "130": {
      "op": "DUP2"
    },
    "131": {
      "op": "MSTORE"
    },
    "132": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "134": {
      "op": "ADD"
    },
    "135": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1234,
        1331
      ],
      "op": "JUMPDEST",
      "path": "59"
    },
    "136": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1234,
        1331
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x40"
    },
    "138": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1234,
        1331
      ],
      "op": "MLOAD",
      "path": "59"
    },
    "139": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1234,
        1331
      ],
      "op": "DUP1",
      "path": "59"
    },
    "140": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1234,
        1331
      ],
      "op": "SWAP2",
      "path": "59"
    },
    "141": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1234,
        1331
      ],
      "op": "SUB",
      "path": "59"
    },
    "142": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1234,
        1331
      ],
      "op": "SWAP1",
      "path": "59"
    },
    "143": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1234,
        1331
      ],
      "op": "RETURN",
      "path": "59"
    },
    "144": {
      "fn": "TokenTimelock.release",
      "offset": [
        1591,
        1919
      ],
      "op": "JUMPDEST",
      "path": "59"
    },
    "145": {
      "fn": "TokenTimelock.release",
      "offset": [
        1591,
        1919
      ],
      "op": "PUSH2",
      "path": "59",
      "value": "0x98"
    },
    "148": {
      "fn": "TokenTimelock.release",
      "offset": [
        1591,
        1919
      ],
      "op": "PUSH2",
      "path": "59",
      "value": "0xEE"
    },
    "151": {
      "fn": "TokenTimelock.release",
      "jump": "i",
      "offset": [
        1591,
        1919
      ],
      "op": "JUMP",
      "path": "59"
    },
    "152": {
      "fn": "TokenTimelock.release",
      "offset": [
        1591,
        1919
      ],
      "op": "JUMPDEST",
      "path": "59"
    },
    "153": {
      "fn": "TokenTimelock.release",
      "offset": [
        1591,
        1919
      ],
      "op": "STOP",
      "path": "59"
    },
    "154": {
      "fn": "TokenTimelock.releaseTime",
      "offset": [
        1407,
        1504
      ],
      "op": "JUMPDEST",
      "path": "59"
    },
    "155": {
      "fn": "TokenTimelock.releaseTime",
      "offset": [
        1407,
        1504
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x40"
    },
    "157": {
      "fn": "TokenTimelock.releaseTime",
      "offset": [
        1407,
        1504
      ],
      "op": "MLOAD",
      "path": "59"
    },
    "158": {
      "fn": "TokenTimelock.releaseTime",
      "offset": [
        1485,
        1497
      ],
      "op": "PUSH32",
      "path": "59",
      "statement": 1,
      "value": "0x0"
    },
    "191": {
      "op": "DUP2"
    },
    "192": {
      "op": "MSTORE"
    },
    "193": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "195": {
      "op": "ADD"
    },
    "196": {
      "fn": "TokenTimelock.releaseTime",
      "offset": [
        1407,
        1504
      ],
      "op": "PUSH2",
      "path": "59",
      "value": "0x87"
    },
    "199": {
      "op": "JUMP"
    },
    "200": {
      "fn": "TokenTimelock.token",
      "offset": [
        1082,
        1166
      ],
      "op": "JUMPDEST",
      "path": "59"
    },
    "201": {
      "fn": "TokenTimelock.token",
      "offset": [
        1153,
        1159
      ],
      "op": "PUSH32",
      "path": "59",
      "statement": 2,
      "value": "0x0"
    },
    "234": {
      "fn": "TokenTimelock.token",
      "offset": [
        1082,
        1166
      ],
      "op": "PUSH2",
      "path": "59",
      "value": "0x73"
    },
    "237": {
      "fn": "TokenTimelock.token",
      "offset": [
        1082,
        1166
      ],
      "op": "JUMP",
      "path": "59"
    },
    "238": {
      "fn": "TokenTimelock.release",
      "offset": [
        1591,
        1919
      ],
      "op": "JUMPDEST",
      "path": "59"
    },
    "239": {
      "fn": "TokenTimelock.releaseTime",
      "offset": [
        1485,
        1497
      ],
      "op": "PUSH32",
      "path": "59",
      "value": "0x0"
    },
    "272": {
      "fn": "TokenTimelock.release",
      "offset": [
        1643,
        1658
      ],
      "op": "TIMESTAMP",
      "path": "59",
      "statement": 3
    },
    "273": {
      "fn": "TokenTimelock.release",
      "offset": [
        1643,
        1675
      ],
      "op": "LT",
      "path": "59"
    },
    "274": {
      "branch": 15,
      "fn": "TokenTimelock.release",
      "offset": [
        1643,
        1675
      ],
      "op": "ISZERO",
      "path": "59"
    },
    "275": {
      "fn": "TokenTimelock.release",
      "offset": [
        1635,
        1730
      ],
      "op": "PUSH2",
      "path": "59",
      "value": "0x17E"
    },
    "278": {
      "branch": 15,
      "fn": "TokenTimelock.release",
      "offset": [
        1635,
        1730
      ],
      "op": "JUMPI",
      "path": "59"
    },
    "279": {
      "fn": "TokenTimelock.release",
      "offset": [
        1635,
        1730
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x40"
    },
    "281": {
      "fn": "TokenTimelock.release",
      "offset": [
        1635,
        1730
      ],
      "op": "MLOAD",
      "path": "59"
    },
    "282": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "286": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "288": {
      "op": "SHL"
    },
    "289": {
      "fn": "TokenTimelock.release",
      "offset": [
        1635,
        1730
      ],
      "op": "DUP2",
      "path": "59"
    },
    "290": {
      "fn": "TokenTimelock.release",
      "offset": [
        1635,
        1730
      ],
      "op": "MSTORE",
      "path": "59"
    },
    "291": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "293": {
      "fn": "TokenTimelock.release",
      "offset": [
        1635,
        1730
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x4"
    },
    "295": {
      "fn": "TokenTimelock.release",
      "offset": [
        1635,
        1730
      ],
      "op": "DUP3",
      "path": "59"
    },
    "296": {
      "fn": "TokenTimelock.release",
      "offset": [
        1635,
        1730
      ],
      "op": "ADD",
      "path": "59"
    },
    "297": {
      "op": "MSTORE"
    },
    "298": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "300": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "302": {
      "op": "DUP3"
    },
    "303": {
      "op": "ADD"
    },
    "304": {
      "op": "MSTORE"
    },
    "305": {
      "op": "PUSH32",
      "value": "0x546F6B656E54696D656C6F636B3A2063757272656E742074696D652069732062"
    },
    "338": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "340": {
      "op": "DUP3"
    },
    "341": {
      "op": "ADD"
    },
    "342": {
      "op": "MSTORE"
    },
    "343": {
      "op": "PUSH18",
      "value": "0x65666F72652072656C656173652074696D65"
    },
    "362": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "364": {
      "op": "SHL"
    },
    "365": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "367": {
      "op": "DUP3"
    },
    "368": {
      "op": "ADD"
    },
    "369": {
      "op": "MSTORE"
    },
    "370": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "372": {
      "op": "ADD"
    },
    "373": {
      "fn": "TokenTimelock.release",
      "offset": [
        1635,
        1730
      ],
      "op": "JUMPDEST",
      "path": "59"
    },
    "374": {
      "fn": "TokenTimelock.release",
      "offset": [
        1635,
        1730
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x40"
    },
    "376": {
      "fn": "TokenTimelock.release",
      "offset": [
        1635,
        1730
      ],
      "op": "MLOAD",
      "path": "59"
    },
    "377": {
      "fn": "TokenTimelock.release",
      "offset": [
        1635,
        1730
      ],
      "op": "DUP1",
      "path": "59"
    },
    "378": {
      "fn": "TokenTimelock.release",
      "offset": [
        1635,
        1730
      ],
      "op": "SWAP2",
      "path": "59"
    },
    "379": {
      "fn": "TokenTimelock.release",
      "offset": [
        1635,
        1730
      ],
      "op": "SUB",
      "path": "59"
    },
    "380": {
      "fn": "TokenTimelock.release",
      "offset": [
        1635,
        1730
      ],
      "op": "SWAP1",
      "path": "59"
    },
    "381": {
      "fn": "TokenTimelock.release",
      "offset": [
        1635,
        1730
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "59"
    },
    "382": {
      "fn": "TokenTimelock.release",
      "offset": [
        1635,
        1730
      ],
      "op": "JUMPDEST",
      "path": "59"
    },
    "383": {
      "fn": "TokenTimelock.release",
      "offset": [
        1741,
        1755
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x0"
    },
    "385": {
      "fn": "TokenTimelock.token",
      "offset": [
        1153,
        1159
      ],
      "op": "PUSH32",
      "path": "59",
      "value": "0x0"
    },
    "418": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x40"
    },
    "420": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "MLOAD",
      "path": "59"
    },
    "421": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "426": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "428": {
      "op": "SHL"
    },
    "429": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "DUP2",
      "path": "59"
    },
    "430": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "MSTORE",
      "path": "59"
    },
    "431": {
      "fn": "TokenTimelock.release",
      "offset": [
        1784,
        1788
      ],
      "op": "ADDRESS",
      "path": "59"
    },
    "432": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x4"
    },
    "434": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "DUP3",
      "path": "59"
    },
    "435": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "ADD",
      "path": "59"
    },
    "436": {
      "op": "MSTORE"
    },
    "437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "441": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "443": {
      "op": "SHL"
    },
    "444": {
      "op": "SUB"
    },
    "445": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1775
      ],
      "op": "SWAP2",
      "path": "59"
    },
    "446": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1775
      ],
      "op": "SWAP1",
      "path": "59"
    },
    "447": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1775
      ],
      "op": "SWAP2",
      "path": "59"
    },
    "448": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1775
      ],
      "op": "AND",
      "path": "59"
    },
    "449": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1775
      ],
      "op": "SWAP1",
      "path": "59"
    },
    "450": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1775
      ],
      "op": "PUSH4",
      "path": "59",
      "value": "0x70A08231"
    },
    "455": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1775
      ],
      "op": "SWAP1",
      "path": "59"
    },
    "456": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "458": {
      "op": "ADD"
    },
    "459": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x20"
    },
    "461": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x40"
    },
    "463": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "MLOAD",
      "path": "59"
    },
    "464": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "DUP1",
      "path": "59"
    },
    "465": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "DUP4",
      "path": "59"
    },
    "466": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "SUB",
      "path": "59"
    },
    "467": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "DUP2",
      "path": "59"
    },
    "468": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "DUP7",
      "path": "59"
    },
    "469": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "GAS",
      "path": "59"
    },
    "470": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "STATICCALL",
      "path": "59"
    },
    "471": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "ISZERO",
      "path": "59"
    },
    "472": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "DUP1",
      "path": "59"
    },
    "473": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "ISZERO",
      "path": "59"
    },
    "474": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "PUSH2",
      "path": "59",
      "value": "0x1E7"
    },
    "477": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "JUMPI",
      "path": "59"
    },
    "478": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "RETURNDATASIZE",
      "path": "59"
    },
    "479": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x0"
    },
    "481": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "DUP1",
      "path": "59"
    },
    "482": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "RETURNDATACOPY",
      "path": "59"
    },
    "483": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "RETURNDATASIZE",
      "path": "59"
    },
    "484": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x0"
    },
    "486": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "REVERT",
      "path": "59"
    },
    "487": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "JUMPDEST",
      "path": "59"
    },
    "488": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "POP",
      "path": "59"
    },
    "489": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "POP",
      "path": "59"
    },
    "490": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "POP",
      "path": "59"
    },
    "491": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "POP",
      "path": "59"
    },
    "492": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x40"
    },
    "494": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "MLOAD",
      "path": "59"
    },
    "495": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "RETURNDATASIZE",
      "path": "59"
    },
    "496": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x1F"
    },
    "498": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "NOT",
      "path": "59"
    },
    "499": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x1F"
    },
    "501": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "DUP3",
      "path": "59"
    },
    "502": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "ADD",
      "path": "59"
    },
    "503": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "AND",
      "path": "59"
    },
    "504": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "DUP3",
      "path": "59"
    },
    "505": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "ADD",
      "path": "59"
    },
    "506": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "DUP1",
      "path": "59"
    },
    "507": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x40"
    },
    "509": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "MSTORE",
      "path": "59"
    },
    "510": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "POP",
      "path": "59"
    },
    "511": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "DUP2",
      "path": "59"
    },
    "512": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "ADD",
      "path": "59"
    },
    "513": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "SWAP1",
      "path": "59"
    },
    "514": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "PUSH2",
      "path": "59",
      "value": "0x20B"
    },
    "517": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "SWAP2",
      "path": "59"
    },
    "518": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "SWAP1",
      "path": "59"
    },
    "519": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "PUSH2",
      "path": "59",
      "value": "0x56C"
    },
    "522": {
      "fn": "TokenTimelock.release",
      "jump": "i",
      "offset": [
        1758,
        1790
      ],
      "op": "JUMP",
      "path": "59"
    },
    "523": {
      "fn": "TokenTimelock.release",
      "offset": [
        1758,
        1790
      ],
      "op": "JUMPDEST",
      "path": "59"
    },
    "524": {
      "fn": "TokenTimelock.release",
      "offset": [
        1741,
        1790
      ],
      "op": "SWAP1",
      "path": "59"
    },
    "525": {
      "fn": "TokenTimelock.release",
      "offset": [
        1741,
        1790
      ],
      "op": "POP",
      "path": "59"
    },
    "526": {
      "fn": "TokenTimelock.release",
      "offset": [
        1817,
        1818
      ],
      "op": "PUSH1",
      "path": "59",
      "statement": 4,
      "value": "0x0"
    },
    "528": {
      "fn": "TokenTimelock.release",
      "offset": [
        1808,
        1814
      ],
      "op": "DUP2",
      "path": "59"
    },
    "529": {
      "branch": 16,
      "fn": "TokenTimelock.release",
      "offset": [
        1808,
        1818
      ],
      "op": "GT",
      "path": "59"
    },
    "530": {
      "fn": "TokenTimelock.release",
      "offset": [
        1800,
        1858
      ],
      "op": "PUSH2",
      "path": "59",
      "value": "0x269"
    },
    "533": {
      "branch": 16,
      "fn": "TokenTimelock.release",
      "offset": [
        1800,
        1858
      ],
      "op": "JUMPI",
      "path": "59"
    },
    "534": {
      "fn": "TokenTimelock.release",
      "offset": [
        1800,
        1858
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x40"
    },
    "536": {
      "fn": "TokenTimelock.release",
      "offset": [
        1800,
        1858
      ],
      "op": "MLOAD",
      "path": "59"
    },
    "537": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "541": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "543": {
      "op": "SHL"
    },
    "544": {
      "fn": "TokenTimelock.release",
      "offset": [
        1800,
        1858
      ],
      "op": "DUP2",
      "path": "59"
    },
    "545": {
      "fn": "TokenTimelock.release",
      "offset": [
        1800,
        1858
      ],
      "op": "MSTORE",
      "path": "59"
    },
    "546": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "548": {
      "fn": "TokenTimelock.release",
      "offset": [
        1800,
        1858
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x4"
    },
    "550": {
      "fn": "TokenTimelock.release",
      "offset": [
        1800,
        1858
      ],
      "op": "DUP3",
      "path": "59"
    },
    "551": {
      "fn": "TokenTimelock.release",
      "offset": [
        1800,
        1858
      ],
      "op": "ADD",
      "path": "59"
    },
    "552": {
      "op": "MSTORE"
    },
    "553": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "555": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "557": {
      "op": "DUP3"
    },
    "558": {
      "op": "ADD"
    },
    "559": {
      "op": "MSTORE"
    },
    "560": {
      "op": "PUSH32",
      "value": "0x546F6B656E54696D656C6F636B3A206E6F20746F6B656E7320746F2072656C65"
    },
    "593": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "595": {
      "op": "DUP3"
    },
    "596": {
      "op": "ADD"
    },
    "597": {
      "op": "MSTORE"
    },
    "598": {
      "op": "PUSH3",
      "value": "0x617365"
    },
    "602": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "604": {
      "op": "SHL"
    },
    "605": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "607": {
      "op": "DUP3"
    },
    "608": {
      "op": "ADD"
    },
    "609": {
      "op": "MSTORE"
    },
    "610": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "612": {
      "op": "ADD"
    },
    "613": {
      "fn": "TokenTimelock.release",
      "offset": [
        1800,
        1858
      ],
      "op": "PUSH2",
      "path": "59",
      "value": "0x175"
    },
    "616": {
      "op": "JUMP"
    },
    "617": {
      "fn": "TokenTimelock.release",
      "offset": [
        1800,
        1858
      ],
      "op": "JUMPDEST",
      "path": "59"
    },
    "618": {
      "fn": "TokenTimelock.release",
      "offset": [
        1869,
        1912
      ],
      "op": "PUSH2",
      "path": "59",
      "statement": 5,
      "value": "0x2BD"
    },
    "621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "623": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "625": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "627": {
      "op": "SHL"
    },
    "628": {
      "op": "SUB"
    },
    "629": {
      "fn": "TokenTimelock.token",
      "offset": [
        1153,
        1159
      ],
      "op": "PUSH32",
      "path": "59",
      "value": "0x0"
    },
    "662": {
      "fn": "TokenTimelock.release",
      "offset": [
        1869,
        1889
      ],
      "op": "AND",
      "path": "59"
    },
    "663": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1312,
        1324
      ],
      "op": "PUSH32",
      "path": "59",
      "value": "0x0"
    },
    "696": {
      "fn": "TokenTimelock.release",
      "offset": [
        1905,
        1911
      ],
      "op": "DUP4",
      "path": "59"
    },
    "697": {
      "fn": "TokenTimelock.release",
      "offset": [
        1869,
        1889
      ],
      "op": "PUSH2",
      "path": "59",
      "value": "0x2C0"
    },
    "700": {
      "fn": "TokenTimelock.release",
      "jump": "i",
      "offset": [
        1869,
        1912
      ],
      "op": "JUMP",
      "path": "59"
    },
    "701": {
      "fn": "TokenTimelock.release",
      "offset": [
        1869,
        1912
      ],
      "op": "JUMPDEST",
      "path": "59"
    },
    "702": {
      "fn": "TokenTimelock.release",
      "offset": [
        1625,
        1919
      ],
      "op": "POP",
      "path": "59"
    },
    "703": {
      "fn": "TokenTimelock.release",
      "jump": "o",
      "offset": [
        1591,
        1919
      ],
      "op": "JUMP",
      "path": "59"
    },
    "704": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "JUMPDEST",
      "path": "58"
    },
    "705": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH1",
      "path": "58",
      "statement": 6,
      "value": "0x40"
    },
    "707": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP1",
      "path": "58"
    },
    "708": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MLOAD",
      "path": "58"
    },
    "709": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "711": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "713": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "715": {
      "op": "SHL"
    },
    "716": {
      "op": "SUB"
    },
    "717": {
      "op": "DUP5"
    },
    "718": {
      "op": "AND"
    },
    "719": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x24"
    },
    "721": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP3",
      "path": "58"
    },
    "722": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "ADD",
      "path": "58"
    },
    "723": {
      "op": "MSTORE"
    },
    "724": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "726": {
      "op": "DUP1"
    },
    "727": {
      "op": "DUP3"
    },
    "728": {
      "op": "ADD"
    },
    "729": {
      "op": "DUP5"
    },
    "730": {
      "op": "SWAP1"
    },
    "731": {
      "op": "MSTORE"
    },
    "732": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP3",
      "path": "58"
    },
    "733": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MLOAD",
      "path": "58"
    },
    "734": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP1",
      "path": "58"
    },
    "735": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP4",
      "path": "58"
    },
    "736": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SUB",
      "path": "58"
    },
    "737": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "738": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP2",
      "path": "58"
    },
    "739": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "ADD",
      "path": "58"
    },
    "740": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP2",
      "path": "58"
    },
    "741": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MSTORE",
      "path": "58"
    },
    "742": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "744": {
      "op": "SWAP1"
    },
    "745": {
      "op": "SWAP2"
    },
    "746": {
      "op": "ADD"
    },
    "747": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "748": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP2",
      "path": "58"
    },
    "749": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MSTORE",
      "path": "58"
    },
    "750": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x20"
    },
    "752": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP2",
      "path": "58"
    },
    "753": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "ADD",
      "path": "58"
    },
    "754": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP1",
      "path": "58"
    },
    "755": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MLOAD",
      "path": "58"
    },
    "756": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "758": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "760": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "762": {
      "op": "SHL"
    },
    "763": {
      "op": "SUB"
    },
    "764": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "AND",
      "path": "58"
    },
    "765": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "770": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "772": {
      "op": "SHL"
    },
    "773": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "OR",
      "path": "58"
    },
    "774": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "775": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MSTORE",
      "path": "58"
    },
    "776": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        899
      ],
      "op": "PUSH2",
      "path": "58",
      "value": "0x312"
    },
    "779": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        899
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "780": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        833,
        838
      ],
      "op": "DUP5",
      "path": "58"
    },
    "781": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        833,
        838
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "782": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        832
      ],
      "op": "PUSH2",
      "path": "58",
      "value": "0x317"
    },
    "785": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "i",
      "offset": [
        813,
        899
      ],
      "op": "JUMP",
      "path": "58"
    },
    "786": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        899
      ],
      "op": "JUMPDEST",
      "path": "58"
    },
    "787": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "POP",
      "path": "58"
    },
    "788": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "POP",
      "path": "58"
    },
    "789": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "POP",
      "path": "58"
    },
    "790": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "o",
      "offset": [
        701,
        906
      ],
      "op": "JUMP",
      "path": "58"
    },
    "791": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3207,
        3913
      ],
      "op": "JUMPDEST",
      "path": "58"
    },
    "792": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3649
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x0"
    },
    "794": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH2",
      "path": "58",
      "value": "0x36C"
    },
    "797": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3680,
        3684
      ],
      "op": "DUP3",
      "path": "58"
    },
    "798": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x40"
    },
    "800": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MLOAD",
      "path": "58"
    },
    "801": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP1",
      "path": "58"
    },
    "802": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x40"
    },
    "804": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "ADD",
      "path": "58"
    },
    "805": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x40"
    },
    "807": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "58"
    },
    "808": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP1",
      "path": "58"
    },
    "809": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x20"
    },
    "811": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP2",
      "path": "58"
    },
    "812": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "58"
    },
    "813": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x20"
    },
    "815": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "ADD",
      "path": "58"
    },
    "816": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH32",
      "path": "58",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "849": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP2",
      "path": "58"
    },
    "850": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "58"
    },
    "851": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "POP",
      "path": "58"
    },
    "852": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3660,
        3665
      ],
      "op": "DUP6",
      "path": "58"
    },
    "853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "855": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "857": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "859": {
      "op": "SHL"
    },
    "860": {
      "op": "SUB"
    },
    "861": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "AND",
      "path": "58"
    },
    "862": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "PUSH2",
      "path": "58",
      "value": "0x3E9"
    },
    "865": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "866": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP3",
      "path": "58"
    },
    "867": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP2",
      "path": "58"
    },
    "868": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "869": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH4",
      "path": "58",
      "value": "0xFFFFFFFF"
    },
    "874": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "AND",
      "path": "58"
    },
    "875": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3652,
        3721
      ],
      "op": "JUMP",
      "path": "58"
    },
    "876": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "JUMPDEST",
      "path": "58"
    },
    "877": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3752
      ],
      "op": "DUP1",
      "path": "58"
    },
    "878": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3752
      ],
      "op": "MLOAD",
      "path": "58"
    },
    "879": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3721
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "880": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3721
      ],
      "op": "SWAP2",
      "path": "58"
    },
    "881": {
      "op": "POP"
    },
    "882": {
      "branch": 20,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3756
      ],
      "op": "ISZERO",
      "path": "58"
    },
    "883": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3731,
        3907
      ],
      "op": "PUSH2",
      "path": "58",
      "value": "0x312"
    },
    "886": {
      "branch": 20,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3731,
        3907
      ],
      "op": "JUMPI",
      "path": "58"
    },
    "887": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3830,
        3840
      ],
      "op": "DUP1",
      "path": "58",
      "statement": 7
    },
    "888": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "DUP1",
      "path": "58"
    },
    "889": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x20"
    },
    "891": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "ADD",
      "path": "58"
    },
    "892": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "893": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "MLOAD",
      "path": "58"
    },
    "894": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "DUP2",
      "path": "58"
    },
    "895": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "ADD",
      "path": "58"
    },
    "896": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "897": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH2",
      "path": "58",
      "value": "0x38A"
    },
    "900": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP2",
      "path": "58"
    },
    "901": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "902": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH2",
      "path": "58",
      "value": "0x585"
    },
    "905": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3819,
        3849
      ],
      "op": "JUMP",
      "path": "58"
    },
    "906": {
      "branch": 21,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "JUMPDEST",
      "path": "58"
    },
    "907": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH2",
      "path": "58",
      "value": "0x312"
    },
    "910": {
      "branch": 21,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "JUMPI",
      "path": "58"
    },
    "911": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x40"
    },
    "913": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "MLOAD",
      "path": "58"
    },
    "914": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "918": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "920": {
      "op": "SHL"
    },
    "921": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "DUP2",
      "path": "58"
    },
    "922": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "MSTORE",
      "path": "58"
    },
    "923": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "925": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x4"
    },
    "927": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "DUP3",
      "path": "58"
    },
    "928": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "ADD",
      "path": "58"
    },
    "929": {
      "op": "MSTORE"
    },
    "930": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "932": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "934": {
      "op": "DUP3"
    },
    "935": {
      "op": "ADD"
    },
    "936": {
      "op": "MSTORE"
    },
    "937": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "970": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "972": {
      "op": "DUP3"
    },
    "973": {
      "op": "ADD"
    },
    "974": {
      "op": "MSTORE"
    },
    "975": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "986": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "988": {
      "op": "SHL"
    },
    "989": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "991": {
      "op": "DUP3"
    },
    "992": {
      "op": "ADD"
    },
    "993": {
      "op": "MSTORE"
    },
    "994": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "996": {
      "op": "ADD"
    },
    "997": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH2",
      "path": "58",
      "value": "0x175"
    },
    "1000": {
      "op": "JUMP"
    },
    "1001": {
      "fn": "Address.functionCall",
      "offset": [
        3846,
        4069
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "1002": {
      "fn": "Address.functionCall",
      "offset": [
        3979,
        3991
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x60"
    },
    "1004": {
      "fn": "Address.functionCall",
      "offset": [
        4010,
        4062
      ],
      "op": "PUSH2",
      "path": "68",
      "statement": 8,
      "value": "0x3F8"
    },
    "1007": {
      "fn": "Address.functionCall",
      "offset": [
        4032,
        4038
      ],
      "op": "DUP5",
      "path": "68"
    },
    "1008": {
      "fn": "Address.functionCall",
      "offset": [
        4040,
        4044
      ],
      "op": "DUP5",
      "path": "68"
    },
    "1009": {
      "fn": "Address.functionCall",
      "offset": [
        4046,
        4047
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "1011": {
      "fn": "Address.functionCall",
      "offset": [
        4049,
        4061
      ],
      "op": "DUP6",
      "path": "68"
    },
    "1012": {
      "fn": "Address.functionCall",
      "offset": [
        4010,
        4031
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x402"
    },
    "1015": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        4010,
        4062
      ],
      "op": "JUMP",
      "path": "68"
    },
    "1016": {
      "fn": "Address.functionCall",
      "offset": [
        4010,
        4062
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "1017": {
      "fn": "Address.functionCall",
      "offset": [
        4003,
        4062
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "1018": {
      "fn": "Address.functionCall",
      "offset": [
        4003,
        4062
      ],
      "op": "POP",
      "path": "68"
    },
    "1019": {
      "fn": "Address.functionCall",
      "offset": [
        3846,
        4069
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "1020": {
      "fn": "Address.functionCall",
      "offset": [
        3846,
        4069
      ],
      "op": "SWAP4",
      "path": "68"
    },
    "1021": {
      "fn": "Address.functionCall",
      "offset": [
        3846,
        4069
      ],
      "op": "SWAP3",
      "path": "68"
    },
    "1022": {
      "fn": "Address.functionCall",
      "offset": [
        3846,
        4069
      ],
      "op": "POP",
      "path": "68"
    },
    "1023": {
      "fn": "Address.functionCall",
      "offset": [
        3846,
        4069
      ],
      "op": "POP",
      "path": "68"
    },
    "1024": {
      "fn": "Address.functionCall",
      "offset": [
        3846,
        4069
      ],
      "op": "POP",
      "path": "68"
    },
    "1025": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3846,
        4069
      ],
      "op": "JUMP",
      "path": "68"
    },
    "1026": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4933,
        5432
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "1027": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5098,
        5110
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x60"
    },
    "1029": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5155,
        5160
      ],
      "op": "DUP3",
      "path": "68",
      "statement": 9
    },
    "1030": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5130,
        5151
      ],
      "op": "SELFBALANCE",
      "path": "68"
    },
    "1031": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5130,
        5160
      ],
      "op": "LT",
      "path": "68"
    },
    "1032": {
      "branch": 17,
      "fn": "Address.functionCallWithValue",
      "offset": [
        5130,
        5160
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "1033": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x463"
    },
    "1036": {
      "branch": 17,
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "1037": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "1039": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "1040": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1044": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1046": {
      "op": "SHL"
    },
    "1047": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "DUP2",
      "path": "68"
    },
    "1048": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "1049": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1051": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "1053": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "DUP3",
      "path": "68"
    },
    "1054": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "ADD",
      "path": "68"
    },
    "1055": {
      "op": "MSTORE"
    },
    "1056": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1058": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1060": {
      "op": "DUP3"
    },
    "1061": {
      "op": "ADD"
    },
    "1062": {
      "op": "MSTORE"
    },
    "1063": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
    },
    "1096": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1098": {
      "op": "DUP3"
    },
    "1099": {
      "op": "ADD"
    },
    "1100": {
      "op": "MSTORE"
    },
    "1101": {
      "op": "PUSH6",
      "value": "0x1C8818D85B1B"
    },
    "1108": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "1110": {
      "op": "SHL"
    },
    "1111": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1113": {
      "op": "DUP3"
    },
    "1114": {
      "op": "ADD"
    },
    "1115": {
      "op": "MSTORE"
    },
    "1116": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1118": {
      "op": "ADD"
    },
    "1119": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x175"
    },
    "1122": {
      "op": "JUMP"
    },
    "1123": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "1124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1128": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1130": {
      "op": "SHL"
    },
    "1131": {
      "op": "SUB"
    },
    "1132": {
      "fn": "Address.isContract",
      "offset": [
        1450,
        1469
      ],
      "op": "DUP6",
      "path": "68",
      "statement": 10
    },
    "1133": {
      "fn": "Address.isContract",
      "offset": [
        1450,
        1469
      ],
      "op": "AND",
      "path": "68"
    },
    "1134": {
      "fn": "Address.isContract",
      "offset": [
        1450,
        1469
      ],
      "op": "EXTCODESIZE",
      "path": "68"
    },
    "1135": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "PUSH2",
      "path": "68",
      "statement": 11,
      "value": "0x4BA"
    },
    "1138": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "1139": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "1141": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "1142": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1146": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1148": {
      "op": "SHL"
    },
    "1149": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "DUP2",
      "path": "68"
    },
    "1150": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "1151": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1153": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "1155": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "DUP3",
      "path": "68"
    },
    "1156": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "ADD",
      "path": "68"
    },
    "1157": {
      "op": "MSTORE"
    },
    "1158": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "1160": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1162": {
      "op": "DUP3"
    },
    "1163": {
      "op": "ADD"
    },
    "1164": {
      "op": "MSTORE"
    },
    "1165": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "1198": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1200": {
      "op": "DUP3"
    },
    "1201": {
      "op": "ADD"
    },
    "1202": {
      "op": "MSTORE"
    },
    "1203": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1205": {
      "op": "ADD"
    },
    "1206": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x175"
    },
    "1209": {
      "op": "JUMP"
    },
    "1210": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "1211": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5285,
        5297
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "1213": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5322
      ],
      "op": "DUP1",
      "path": "68"
    },
    "1214": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5332
      ],
      "op": "DUP7",
      "path": "68"
    },
    "1215": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1217": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1219": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1221": {
      "op": "SHL"
    },
    "1222": {
      "op": "SUB"
    },
    "1223": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5337
      ],
      "op": "AND",
      "path": "68"
    },
    "1224": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5345,
        5350
      ],
      "op": "DUP6",
      "path": "68"
    },
    "1225": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5352,
        5356
      ],
      "op": "DUP8",
      "path": "68"
    },
    "1226": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "1228": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "1229": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x4D6"
    },
    "1232": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "1233": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "1234": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x5CB"
    },
    "1237": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5326,
        5357
      ],
      "op": "JUMP",
      "path": "68"
    },
    "1238": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "1239": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "1241": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "1243": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "1244": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "DUP1",
      "path": "68"
    },
    "1245": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "DUP4",
      "path": "68"
    },
    "1246": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "SUB",
      "path": "68"
    },
    "1247": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "DUP2",
      "path": "68"
    },
    "1248": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "DUP6",
      "path": "68"
    },
    "1249": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "DUP8",
      "path": "68"
    },
    "1250": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "GAS",
      "path": "68"
    },
    "1251": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "CALL",
      "path": "68"
    },
    "1252": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "SWAP3",
      "path": "68"
    },
    "1253": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "POP",
      "path": "68"
    },
    "1254": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "POP",
      "path": "68"
    },
    "1255": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "POP",
      "path": "68"
    },
    "1256": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "1257": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "DUP1",
      "path": "68"
    },
    "1258": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "1260": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "DUP2",
      "path": "68"
    },
    "1261": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "EQ",
      "path": "68"
    },
    "1262": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x513"
    },
    "1265": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "1266": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "1268": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "1269": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "1270": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "POP",
      "path": "68"
    },
    "1271": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x1F"
    },
    "1273": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "NOT",
      "path": "68"
    },
    "1274": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x3F"
    },
    "1276": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "1277": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "ADD",
      "path": "68"
    },
    "1278": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "AND",
      "path": "68"
    },
    "1279": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "DUP3",
      "path": "68"
    },
    "1280": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "ADD",
      "path": "68"
    },
    "1281": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "1283": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "1284": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "1285": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "DUP3",
      "path": "68"
    },
    "1286": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "1287": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "RETURNDATASIZE",
      "path": "68"
    },
    "1288": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "1290": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "1292": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "DUP5",
      "path": "68"
    },
    "1293": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "ADD",
      "path": "68"
    },
    "1294": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "RETURNDATACOPY",
      "path": "68"
    },
    "1295": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x518"
    },
    "1298": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "JUMP",
      "path": "68"
    },
    "1299": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "1300": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x60"
    },
    "1302": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "1303": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "POP",
      "path": "68"
    },
    "1304": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "1305": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "POP",
      "path": "68"
    },
    "1306": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5284,
        5357
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "1307": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5284,
        5357
      ],
      "op": "POP",
      "path": "68"
    },
    "1308": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5284,
        5357
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "1309": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5284,
        5357
      ],
      "op": "POP",
      "path": "68"
    },
    "1310": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5374,
        5425
      ],
      "op": "PUSH2",
      "path": "68",
      "statement": 12,
      "value": "0x528"
    },
    "1313": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5391,
        5398
      ],
      "op": "DUP3",
      "path": "68"
    },
    "1314": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5400,
        5410
      ],
      "op": "DUP3",
      "path": "68"
    },
    "1315": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5412,
        5424
      ],
      "op": "DUP7",
      "path": "68"
    },
    "1316": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5374,
        5390
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x533"
    },
    "1319": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5374,
        5425
      ],
      "op": "JUMP",
      "path": "68"
    },
    "1320": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5374,
        5425
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "1321": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5367,
        5425
      ],
      "op": "SWAP8",
      "path": "68"
    },
    "1322": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4933,
        5432
      ],
      "op": "SWAP7",
      "path": "68"
    },
    "1323": {
      "op": "POP"
    },
    "1324": {
      "op": "POP"
    },
    "1325": {
      "op": "POP"
    },
    "1326": {
      "op": "POP"
    },
    "1327": {
      "op": "POP"
    },
    "1328": {
      "op": "POP"
    },
    "1329": {
      "op": "POP"
    },
    "1330": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4933,
        5432
      ],
      "op": "JUMP",
      "path": "68"
    },
    "1331": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7546,
        8238
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "1332": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7692,
        7704
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x60"
    },
    "1334": {
      "branch": 18,
      "fn": "Address.verifyCallResult",
      "offset": [
        7720,
        7727
      ],
      "op": "DUP4",
      "path": "68"
    },
    "1335": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7716,
        8232
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "1336": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7716,
        8232
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x542"
    },
    "1339": {
      "branch": 18,
      "fn": "Address.verifyCallResult",
      "offset": [
        7716,
        8232
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "1340": {
      "op": "POP"
    },
    "1341": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7750,
        7760
      ],
      "op": "DUP2",
      "path": "68",
      "statement": 13
    },
    "1342": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7743,
        7760
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x3FB"
    },
    "1345": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7743,
        7760
      ],
      "op": "JUMP",
      "path": "68"
    },
    "1346": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7716,
        8232
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "1347": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7861,
        7878
      ],
      "op": "DUP3",
      "path": "68"
    },
    "1348": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7861,
        7878
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "1349": {
      "branch": 19,
      "fn": "Address.verifyCallResult",
      "offset": [
        7861,
        7882
      ],
      "op": "ISZERO",
      "path": "68"
    },
    "1350": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7857,
        8222
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x552"
    },
    "1353": {
      "branch": 19,
      "fn": "Address.verifyCallResult",
      "offset": [
        7857,
        8222
      ],
      "op": "JUMPI",
      "path": "68"
    },
    "1354": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8055,
        8065
      ],
      "op": "DUP3",
      "path": "68"
    },
    "1355": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8049,
        8066
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "1356": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8115,
        8130
      ],
      "op": "DUP1",
      "path": "68"
    },
    "1357": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8102,
        8112
      ],
      "op": "DUP5",
      "path": "68"
    },
    "1358": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8098,
        8100
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x20"
    },
    "1360": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8094,
        8113
      ],
      "op": "ADD",
      "path": "68"
    },
    "1361": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8087,
        8131
      ],
      "op": "REVERT",
      "path": "68"
    },
    "1362": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7857,
        8222
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "1363": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8194,
        8206
      ],
      "op": "DUP2",
      "path": "68",
      "statement": 14
    },
    "1364": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8187,
        8207
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "1366": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8187,
        8207
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "1367": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1371": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1373": {
      "op": "SHL"
    },
    "1374": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8187,
        8207
      ],
      "op": "DUP2",
      "path": "68"
    },
    "1375": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8187,
        8207
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "1376": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8187,
        8207
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x4"
    },
    "1378": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8187,
        8207
      ],
      "op": "ADD",
      "path": "68"
    },
    "1379": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8187,
        8207
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x175"
    },
    "1382": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8187,
        8207
      ],
      "op": "SWAP2",
      "path": "68"
    },
    "1383": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8187,
        8207
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "1384": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8187,
        8207
      ],
      "op": "PUSH2",
      "path": "68",
      "value": "0x5E7"
    },
    "1387": {
      "fn": "Address.verifyCallResult",
      "jump": "i",
      "offset": [
        8187,
        8207
      ],
      "op": "JUMP",
      "path": "68"
    },
    "1388": {
      "op": "JUMPDEST"
    },
    "1389": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1391": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1393": {
      "op": "DUP3"
    },
    "1394": {
      "op": "DUP5"
    },
    "1395": {
      "op": "SUB"
    },
    "1396": {
      "op": "SLT"
    },
    "1397": {
      "op": "ISZERO"
    },
    "1398": {
      "op": "PUSH2",
      "value": "0x57E"
    },
    "1401": {
      "op": "JUMPI"
    },
    "1402": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1404": {
      "op": "DUP1"
    },
    "1405": {
      "op": "REVERT"
    },
    "1406": {
      "op": "JUMPDEST"
    },
    "1407": {
      "op": "POP"
    },
    "1408": {
      "op": "MLOAD"
    },
    "1409": {
      "op": "SWAP2"
    },
    "1410": {
      "op": "SWAP1"
    },
    "1411": {
      "op": "POP"
    },
    "1412": {
      "jump": "o",
      "op": "JUMP"
    },
    "1413": {
      "op": "JUMPDEST"
    },
    "1414": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1416": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1418": {
      "op": "DUP3"
    },
    "1419": {
      "op": "DUP5"
    },
    "1420": {
      "op": "SUB"
    },
    "1421": {
      "op": "SLT"
    },
    "1422": {
      "op": "ISZERO"
    },
    "1423": {
      "op": "PUSH2",
      "value": "0x597"
    },
    "1426": {
      "op": "JUMPI"
    },
    "1427": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1429": {
      "op": "DUP1"
    },
    "1430": {
      "op": "REVERT"
    },
    "1431": {
      "op": "JUMPDEST"
    },
    "1432": {
      "op": "DUP2"
    },
    "1433": {
      "op": "MLOAD"
    },
    "1434": {
      "op": "DUP1"
    },
    "1435": {
      "op": "ISZERO"
    },
    "1436": {
      "op": "ISZERO"
    },
    "1437": {
      "op": "DUP2"
    },
    "1438": {
      "op": "EQ"
    },
    "1439": {
      "op": "PUSH2",
      "value": "0x3FB"
    },
    "1442": {
      "op": "JUMPI"
    },
    "1443": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1445": {
      "op": "DUP1"
    },
    "1446": {
      "op": "REVERT"
    },
    "1447": {
      "op": "JUMPDEST"
    },
    "1448": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1450": {
      "op": "JUMPDEST"
    },
    "1451": {
      "op": "DUP4"
    },
    "1452": {
      "op": "DUP2"
    },
    "1453": {
      "op": "LT"
    },
    "1454": {
      "op": "ISZERO"
    },
    "1455": {
      "op": "PUSH2",
      "value": "0x5C2"
    },
    "1458": {
      "op": "JUMPI"
    },
    "1459": {
      "op": "DUP2"
    },
    "1460": {
      "op": "DUP2"
    },
    "1461": {
      "op": "ADD"
    },
    "1462": {
      "op": "MLOAD"
    },
    "1463": {
      "op": "DUP4"
    },
    "1464": {
      "op": "DUP3"
    },
    "1465": {
      "op": "ADD"
    },
    "1466": {
      "op": "MSTORE"
    },
    "1467": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1469": {
      "op": "ADD"
    },
    "1470": {
      "op": "PUSH2",
      "value": "0x5AA"
    },
    "1473": {
      "op": "JUMP"
    },
    "1474": {
      "op": "JUMPDEST"
    },
    "1475": {
      "op": "POP"
    },
    "1476": {
      "op": "POP"
    },
    "1477": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1479": {
      "op": "SWAP2"
    },
    "1480": {
      "op": "ADD"
    },
    "1481": {
      "op": "MSTORE"
    },
    "1482": {
      "jump": "o",
      "op": "JUMP"
    },
    "1483": {
      "op": "JUMPDEST"
    },
    "1484": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1486": {
      "op": "DUP3"
    },
    "1487": {
      "op": "MLOAD"
    },
    "1488": {
      "op": "PUSH2",
      "value": "0x5DD"
    },
    "1491": {
      "op": "DUP2"
    },
    "1492": {
      "op": "DUP5"
    },
    "1493": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1495": {
      "op": "DUP8"
    },
    "1496": {
      "op": "ADD"
    },
    "1497": {
      "op": "PUSH2",
      "value": "0x5A7"
    },
    "1500": {
      "jump": "i",
      "op": "JUMP"
    },
    "1501": {
      "op": "JUMPDEST"
    },
    "1502": {
      "op": "SWAP2"
    },
    "1503": {
      "op": "SWAP1"
    },
    "1504": {
      "op": "SWAP2"
    },
    "1505": {
      "op": "ADD"
    },
    "1506": {
      "op": "SWAP3"
    },
    "1507": {
      "op": "SWAP2"
    },
    "1508": {
      "op": "POP"
    },
    "1509": {
      "op": "POP"
    },
    "1510": {
      "jump": "o",
      "op": "JUMP"
    },
    "1511": {
      "op": "JUMPDEST"
    },
    "1512": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1514": {
      "op": "DUP2"
    },
    "1515": {
      "op": "MSTORE"
    },
    "1516": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1518": {
      "op": "DUP3"
    },
    "1519": {
      "op": "MLOAD"
    },
    "1520": {
      "op": "DUP1"
    },
    "1521": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1523": {
      "op": "DUP5"
    },
    "1524": {
      "op": "ADD"
    },
    "1525": {
      "op": "MSTORE"
    },
    "1526": {
      "op": "PUSH2",
      "value": "0x606"
    },
    "1529": {
      "op": "DUP2"
    },
    "1530": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1532": {
      "op": "DUP6"
    },
    "1533": {
      "op": "ADD"
    },
    "1534": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1536": {
      "op": "DUP8"
    },
    "1537": {
      "op": "ADD"
    },
    "1538": {
      "op": "PUSH2",
      "value": "0x5A7"
    },
    "1541": {
      "jump": "i",
      "op": "JUMP"
    },
    "1542": {
      "op": "JUMPDEST"
    },
    "1543": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1545": {
      "op": "ADD"
    },
    "1546": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1548": {
      "op": "NOT"
    },
    "1549": {
      "op": "AND"
    },
    "1550": {
      "op": "SWAP2"
    },
    "1551": {
      "op": "SWAP1"
    },
    "1552": {
      "op": "SWAP2"
    },
    "1553": {
      "op": "ADD"
    },
    "1554": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1556": {
      "op": "ADD"
    },
    "1557": {
      "op": "SWAP3"
    },
    "1558": {
      "op": "SWAP2"
    },
    "1559": {
      "op": "POP"
    },
    "1560": {
      "op": "POP"
    },
    "1561": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "21f640755ab5502cf27aaed490ada98d4e55d871",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/TokenTimelock.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./SafeERC20.sol\";\n\n/**\n * @dev A token holder contract that will allow a beneficiary to extract the\n * tokens after a given release time.\n *\n * Useful for simple vesting schedules like \"advisors get all of their tokens\n * after 1 year\".\n */\ncontract TokenTimelock {\n    using SafeERC20 for IERC20;\n\n    // ERC20 basic token contract being held\n    IERC20 private immutable _token;\n\n    // beneficiary of tokens after they are released\n    address private immutable _beneficiary;\n\n    // timestamp when token release is enabled\n    uint256 private immutable _releaseTime;\n\n    constructor(\n        IERC20 token_,\n        address beneficiary_,\n        uint256 releaseTime_\n    ) {\n        require(releaseTime_ > block.timestamp, \"TokenTimelock: release time is before current time\");\n        _token = token_;\n        _beneficiary = beneficiary_;\n        _releaseTime = releaseTime_;\n    }\n\n    /**\n     * @return the token being held.\n     */\n    function token() public view virtual returns (IERC20) {\n        return _token;\n    }\n\n    /**\n     * @return the beneficiary of the tokens.\n     */\n    function beneficiary() public view virtual returns (address) {\n        return _beneficiary;\n    }\n\n    /**\n     * @return the time when the tokens are released.\n     */\n    function releaseTime() public view virtual returns (uint256) {\n        return _releaseTime;\n    }\n\n    /**\n     * @notice Transfers tokens held by timelock to beneficiary.\n     */\n    function release() public virtual {\n        require(block.timestamp >= releaseTime(), \"TokenTimelock: current time is before release time\");\n\n        uint256 amount = token().balanceOf(address(this));\n        require(amount > 0, \"TokenTimelock: no tokens to release\");\n\n        token().safeTransfer(beneficiary(), amount);\n    }\n}\n",
  "sourceMap": "378:1543:59:-:0;;;713:310;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;847:15;832:12;:30;824:93;;;;-1:-1:-1;;;824:93:59;;842:2:102;824:93:59;;;:21:102;881:2;861:18;;;854:30;920:34;900:18;;;893:62;-1:-1:-1;;;971:18:102;;;964:48;1029:19;;824:93:59;;;;;;;;-1:-1:-1;;;;;927:15:59;;;;;952:27;;;;989;;378:1543;;14:139:102;-1:-1:-1;;;;;97:31:102;;87:42;;77:70;;143:1;140;133:12;77:70;14:139;:::o;158:477::-;261:6;269;277;330:2;318:9;309:7;305:23;301:32;298:52;;;346:1;343;336:12;298:52;378:9;372:16;397:39;430:5;397:39;:::i;:::-;505:2;490:18;;484:25;455:5;;-1:-1:-1;518:41:102;484:25;518:41;:::i;:::-;578:7;568:17;;;625:2;614:9;610:18;604:25;594:35;;158:477;;;;;:::o;640:414::-;378:1543:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/openzeppelin-solidity/contracts/token/ERC20/utils/TokenTimelock.sol",
  "type": "contract"
}