{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "179": "contracts/openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
    "180": "contracts/openzeppelin-solidity/contracts/token/ERC721/IERC721.sol",
    "181": "contracts/openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol",
    "188": "contracts/openzeppelin-solidity/contracts/token/ERC721/extensions/IERC721Metadata.sol",
    "198": "contracts/openzeppelin-solidity/contracts/utils/Address.sol",
    "202": "contracts/openzeppelin-solidity/contracts/utils/Context.sol",
    "207": "contracts/openzeppelin-solidity/contracts/utils/Strings.sol",
    "216": "contracts/openzeppelin-solidity/contracts/utils/introspection/ERC165.sol",
    "220": "contracts/openzeppelin-solidity/contracts/utils/introspection/IERC165.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
    "exportedSymbols": {
      "Address": [
        29802
      ],
      "Context": [
        30190
      ],
      "ERC165": [
        31974
      ],
      "ERC721": [
        26902
      ],
      "IERC165": [
        32298
      ],
      "IERC721": [
        27018
      ],
      "IERC721Metadata": [
        27673
      ],
      "IERC721Receiver": [
        27036
      ],
      "Strings": [
        30693
      ]
    },
    "id": 26903,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 26038,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "92:23:179"
      },
      {
        "absolutePath": "contracts/openzeppelin-solidity/contracts/token/ERC721/IERC721.sol",
        "file": "./IERC721.sol",
        "id": 26039,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 26903,
        "sourceUnit": 27019,
        "src": "117:23:179",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol",
        "file": "./IERC721Receiver.sol",
        "id": 26040,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 26903,
        "sourceUnit": 27037,
        "src": "141:31:179",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-solidity/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "file": "./extensions/IERC721Metadata.sol",
        "id": 26041,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 26903,
        "sourceUnit": 27674,
        "src": "173:42:179",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-solidity/contracts/utils/Address.sol",
        "file": "../../utils/Address.sol",
        "id": 26042,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 26903,
        "sourceUnit": 29803,
        "src": "216:33:179",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-solidity/contracts/utils/Context.sol",
        "file": "../../utils/Context.sol",
        "id": 26043,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 26903,
        "sourceUnit": 30191,
        "src": "250:33:179",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-solidity/contracts/utils/Strings.sol",
        "file": "../../utils/Strings.sol",
        "id": 26044,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 26903,
        "sourceUnit": 30694,
        "src": "284:33:179",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-solidity/contracts/utils/introspection/ERC165.sol",
        "file": "../../utils/introspection/ERC165.sol",
        "id": 26045,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 26903,
        "sourceUnit": 31975,
        "src": "318:46:179",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 26047,
              "name": "Context",
              "nameLocations": [
                "632:7:179"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 30190,
              "src": "632:7:179"
            },
            "id": 26048,
            "nodeType": "InheritanceSpecifier",
            "src": "632:7:179"
          },
          {
            "baseName": {
              "id": 26049,
              "name": "ERC165",
              "nameLocations": [
                "641:6:179"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31974,
              "src": "641:6:179"
            },
            "id": 26050,
            "nodeType": "InheritanceSpecifier",
            "src": "641:6:179"
          },
          {
            "baseName": {
              "id": 26051,
              "name": "IERC721",
              "nameLocations": [
                "649:7:179"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 27018,
              "src": "649:7:179"
            },
            "id": 26052,
            "nodeType": "InheritanceSpecifier",
            "src": "649:7:179"
          },
          {
            "baseName": {
              "id": 26053,
              "name": "IERC721Metadata",
              "nameLocations": [
                "658:15:179"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 27673,
              "src": "658:15:179"
            },
            "id": 26054,
            "nodeType": "InheritanceSpecifier",
            "src": "658:15:179"
          }
        ],
        "canonicalName": "ERC721",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 26046,
          "nodeType": "StructuredDocumentation",
          "src": "366:246:179",
          "text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
        },
        "fullyImplemented": true,
        "id": 26902,
        "linearizedBaseContracts": [
          26902,
          27673,
          27018,
          31974,
          32298,
          30190
        ],
        "name": "ERC721",
        "nameLocation": "622:6:179",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 26057,
            "libraryName": {
              "id": 26055,
              "name": "Address",
              "nameLocations": [
                "686:7:179"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29802,
              "src": "686:7:179"
            },
            "nodeType": "UsingForDirective",
            "src": "680:26:179",
            "typeName": {
              "id": 26056,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "698:7:179",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "global": false,
            "id": 26060,
            "libraryName": {
              "id": 26058,
              "name": "Strings",
              "nameLocations": [
                "717:7:179"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 30693,
              "src": "717:7:179"
            },
            "nodeType": "UsingForDirective",
            "src": "711:26:179",
            "typeName": {
              "id": 26059,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "729:7:179",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 26062,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "776:5:179",
            "nodeType": "VariableDeclaration",
            "scope": 26902,
            "src": "761:20:179",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 26061,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "761:6:179",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 26064,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "823:7:179",
            "nodeType": "VariableDeclaration",
            "scope": 26902,
            "src": "808:22:179",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 26063,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "808:6:179",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 26068,
            "mutability": "mutable",
            "name": "_owners",
            "nameLocation": "919:7:179",
            "nodeType": "VariableDeclaration",
            "scope": 26902,
            "src": "883:43:179",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 26067,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 26065,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "891:7:179",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "883:27:179",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 26066,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "902:7:179",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 26072,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "1013:9:179",
            "nodeType": "VariableDeclaration",
            "scope": 26902,
            "src": "977:45:179",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 26071,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 26069,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "985:7:179",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "977:27:179",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 26070,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "996:7:179",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 26076,
            "mutability": "mutable",
            "name": "_tokenApprovals",
            "nameLocation": "1114:15:179",
            "nodeType": "VariableDeclaration",
            "scope": 26902,
            "src": "1078:51:179",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 26075,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 26073,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1086:7:179",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1078:27:179",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 26074,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1097:7:179",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 26082,
            "mutability": "mutable",
            "name": "_operatorApprovals",
            "nameLocation": "1237:18:179",
            "nodeType": "VariableDeclaration",
            "scope": 26902,
            "src": "1184:71:179",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 26081,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 26077,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1192:7:179",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1184:44:179",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 26080,
                "keyName": "",
                "keyNameLocation": "-1:-1:-1",
                "keyType": {
                  "id": 26078,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1211:7:179",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1203:24:179",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueName": "",
                "valueNameLocation": "-1:-1:-1",
                "valueType": {
                  "id": 26079,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1222:4:179",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 26098,
              "nodeType": "Block",
              "src": "1431:57:179",
              "statements": [
                {
                  "expression": {
                    "id": 26092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 26090,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26062,
                      "src": "1441:5:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 26091,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26085,
                      "src": "1449:5:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1441:13:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 26093,
                  "nodeType": "ExpressionStatement",
                  "src": "1441:13:179"
                },
                {
                  "expression": {
                    "id": 26096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 26094,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26064,
                      "src": "1464:7:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 26095,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26087,
                      "src": "1474:7:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1464:17:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 26097,
                  "nodeType": "ExpressionStatement",
                  "src": "1464:17:179"
                }
              ]
            },
            "documentation": {
              "id": 26083,
              "nodeType": "StructuredDocumentation",
              "src": "1262:108:179",
              "text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
            },
            "id": 26099,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 26088,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26085,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "1401:5:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 26099,
                  "src": "1387:19:179",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 26084,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1387:6:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26087,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "1422:7:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 26099,
                  "src": "1408:21:179",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 26086,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1408:6:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1386:44:179"
            },
            "returnParameters": {
              "id": 26089,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1431:0:179"
            },
            "scope": 26902,
            "src": "1375:113:179",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              31973,
              32297
            ],
            "body": {
              "id": 26129,
              "nodeType": "Block",
              "src": "1663:192:179",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 26127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 26122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 26115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 26110,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26102,
                          "src": "1692:11:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 26112,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27018,
                                "src": "1712:7:179",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$27018_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$27018_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              ],
                              "id": 26111,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1707:4:179",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 26113,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1707:13:179",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$27018",
                              "typeString": "type(contract IERC721)"
                            }
                          },
                          "id": 26114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1721:11:179",
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "1707:25:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "1692:40:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 26121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 26116,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26102,
                          "src": "1748:11:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 26118,
                                "name": "IERC721Metadata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27673,
                                "src": "1768:15:179",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$27673_$",
                                  "typeString": "type(contract IERC721Metadata)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$27673_$",
                                  "typeString": "type(contract IERC721Metadata)"
                                }
                              ],
                              "id": 26117,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1763:4:179",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 26119,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1763:21:179",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$27673",
                              "typeString": "type(contract IERC721Metadata)"
                            }
                          },
                          "id": 26120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1785:11:179",
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "1763:33:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "1748:48:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "1692:104:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 26125,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26102,
                          "src": "1836:11:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 26123,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "1812:5:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_ERC721_$26902_$",
                            "typeString": "type(contract super ERC721)"
                          }
                        },
                        "id": 26124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1818:17:179",
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 31973,
                        "src": "1812:23:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 26126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1812:36:179",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1692:156:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 26109,
                  "id": 26128,
                  "nodeType": "Return",
                  "src": "1673:175:179"
                }
              ]
            },
            "documentation": {
              "id": 26100,
              "nodeType": "StructuredDocumentation",
              "src": "1494:56:179",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 26130,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "1564:17:179",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 26106,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 26104,
                  "name": "ERC165",
                  "nameLocations": [
                    "1631:6:179"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31974,
                  "src": "1631:6:179"
                },
                {
                  "id": 26105,
                  "name": "IERC165",
                  "nameLocations": [
                    "1639:7:179"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32298,
                  "src": "1639:7:179"
                }
              ],
              "src": "1622:25:179"
            },
            "parameters": {
              "id": 26103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26102,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "1589:11:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 26130,
                  "src": "1582:18:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 26101,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1582:6:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1581:20:179"
            },
            "returnParameters": {
              "id": 26109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26108,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 26130,
                  "src": "1657:4:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 26107,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1657:4:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1656:6:179"
            },
            "scope": 26902,
            "src": "1555:300:179",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              26943
            ],
            "body": {
              "id": 26153,
              "nodeType": "Block",
              "src": "1995:124:179",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 26145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 26140,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26133,
                          "src": "2013:5:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 26143,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2030:1:179",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 26142,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2022:7:179",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 26141,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2022:7:179",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 26144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2022:10:179",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2013:19:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
                        "id": 26146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2034:44:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
                          "typeString": "literal_string \"ERC721: balance query for the zero address\""
                        },
                        "value": "ERC721: balance query for the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
                          "typeString": "literal_string \"ERC721: balance query for the zero address\""
                        }
                      ],
                      "id": 26139,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2005:7:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 26147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2005:74:179",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26148,
                  "nodeType": "ExpressionStatement",
                  "src": "2005:74:179"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 26149,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26072,
                      "src": "2096:9:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 26151,
                    "indexExpression": {
                      "id": 26150,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26133,
                      "src": "2106:5:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2096:16:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 26138,
                  "id": 26152,
                  "nodeType": "Return",
                  "src": "2089:23:179"
                }
              ]
            },
            "documentation": {
              "id": 26131,
              "nodeType": "StructuredDocumentation",
              "src": "1861:48:179",
              "text": " @dev See {IERC721-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 26154,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "1923:9:179",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 26135,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1968:8:179"
            },
            "parameters": {
              "id": 26134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26133,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1941:5:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 26154,
                  "src": "1933:13:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26132,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1933:7:179",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1932:15:179"
            },
            "returnParameters": {
              "id": 26138,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26137,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 26154,
                  "src": "1986:7:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26136,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1986:7:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1985:9:179"
            },
            "scope": 26902,
            "src": "1914:205:179",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              26951
            ],
            "body": {
              "id": 26181,
              "nodeType": "Block",
              "src": "2257:154:179",
              "statements": [
                {
                  "assignments": [
                    26164
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26164,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "2275:5:179",
                      "nodeType": "VariableDeclaration",
                      "scope": 26181,
                      "src": "2267:13:179",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 26163,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2267:7:179",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 26168,
                  "initialValue": {
                    "baseExpression": {
                      "id": 26165,
                      "name": "_owners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26068,
                      "src": "2283:7:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 26167,
                    "indexExpression": {
                      "id": 26166,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26157,
                      "src": "2291:7:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2283:16:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2267:32:179"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 26175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 26170,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26164,
                          "src": "2317:5:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 26173,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2334:1:179",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 26172,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2326:7:179",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 26171,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2326:7:179",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 26174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2326:10:179",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2317:19:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 26176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2338:43:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
                          "typeString": "literal_string \"ERC721: owner query for nonexistent token\""
                        },
                        "value": "ERC721: owner query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
                          "typeString": "literal_string \"ERC721: owner query for nonexistent token\""
                        }
                      ],
                      "id": 26169,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2309:7:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 26177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2309:73:179",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26178,
                  "nodeType": "ExpressionStatement",
                  "src": "2309:73:179"
                },
                {
                  "expression": {
                    "id": 26179,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 26164,
                    "src": "2399:5:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 26162,
                  "id": 26180,
                  "nodeType": "Return",
                  "src": "2392:12:179"
                }
              ]
            },
            "documentation": {
              "id": 26155,
              "nodeType": "StructuredDocumentation",
              "src": "2125:46:179",
              "text": " @dev See {IERC721-ownerOf}."
            },
            "functionSelector": "6352211e",
            "id": 26182,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
            "nameLocation": "2185:7:179",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 26159,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2230:8:179"
            },
            "parameters": {
              "id": 26158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26157,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2201:7:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 26182,
                  "src": "2193:15:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26156,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2193:7:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2192:17:179"
            },
            "returnParameters": {
              "id": 26162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26161,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 26182,
                  "src": "2248:7:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26160,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2248:7:179",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2247:9:179"
            },
            "scope": 26902,
            "src": "2176:235:179",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              27658
            ],
            "body": {
              "id": 26191,
              "nodeType": "Block",
              "src": "2542:29:179",
              "statements": [
                {
                  "expression": {
                    "id": 26189,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 26062,
                    "src": "2559:5:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 26188,
                  "id": 26190,
                  "nodeType": "Return",
                  "src": "2552:12:179"
                }
              ]
            },
            "documentation": {
              "id": 26183,
              "nodeType": "StructuredDocumentation",
              "src": "2417:51:179",
              "text": " @dev See {IERC721Metadata-name}."
            },
            "functionSelector": "06fdde03",
            "id": 26192,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "2482:4:179",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 26185,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2509:8:179"
            },
            "parameters": {
              "id": 26184,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2486:2:179"
            },
            "returnParameters": {
              "id": 26188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26187,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 26192,
                  "src": "2527:13:179",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 26186,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2527:6:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2526:15:179"
            },
            "scope": 26902,
            "src": "2473:98:179",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              27664
            ],
            "body": {
              "id": 26201,
              "nodeType": "Block",
              "src": "2706:31:179",
              "statements": [
                {
                  "expression": {
                    "id": 26199,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 26064,
                    "src": "2723:7:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 26198,
                  "id": 26200,
                  "nodeType": "Return",
                  "src": "2716:14:179"
                }
              ]
            },
            "documentation": {
              "id": 26193,
              "nodeType": "StructuredDocumentation",
              "src": "2577:53:179",
              "text": " @dev See {IERC721Metadata-symbol}."
            },
            "functionSelector": "95d89b41",
            "id": 26202,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "2644:6:179",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 26195,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2673:8:179"
            },
            "parameters": {
              "id": 26194,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2650:2:179"
            },
            "returnParameters": {
              "id": 26198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26197,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 26202,
                  "src": "2691:13:179",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 26196,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2691:6:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2690:15:179"
            },
            "scope": 26902,
            "src": "2635:102:179",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              27672
            ],
            "body": {
              "id": 26243,
              "nodeType": "Block",
              "src": "2891:241:179",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 26213,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26205,
                            "src": "2917:7:179",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 26212,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26475,
                          "src": "2909:7:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 26214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2909:16:179",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 26215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2927:49:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        },
                        "value": "ERC721Metadata: URI query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        }
                      ],
                      "id": 26211,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2901:7:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 26216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2901:76:179",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26217,
                  "nodeType": "ExpressionStatement",
                  "src": "2901:76:179"
                },
                {
                  "assignments": [
                    26219
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26219,
                      "mutability": "mutable",
                      "name": "baseURI",
                      "nameLocation": "3002:7:179",
                      "nodeType": "VariableDeclaration",
                      "scope": 26243,
                      "src": "2988:21:179",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 26218,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2988:6:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 26222,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 26220,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26253,
                      "src": "3012:8:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () view returns (string memory)"
                      }
                    },
                    "id": 26221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3012:10:179",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2988:34:179"
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 26229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 26225,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26219,
                              "src": "3045:7:179",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 26224,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3039:5:179",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 26223,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "3039:5:179",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 26226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3039:14:179",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 26227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3054:6:179",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "3039:21:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 26228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3063:1:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3039:25:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "",
                      "id": 26240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3123:2:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                        "typeString": "literal_string \"\""
                      },
                      "value": ""
                    },
                    "id": 26241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "3039:86:179",
                    "trueExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 26234,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26219,
                              "src": "3091:7:179",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 26235,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 26205,
                                  "src": "3100:7:179",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 26236,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3108:8:179",
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 30575,
                                "src": "3100:16:179",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 26237,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3100:18:179",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 26232,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "3074:3:179",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 26233,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3078:12:179",
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "3074:16:179",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 26238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3074:45:179",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 26231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3067:6:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 26230,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3067:6:179",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 26239,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3067:53:179",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 26210,
                  "id": 26242,
                  "nodeType": "Return",
                  "src": "3032:93:179"
                }
              ]
            },
            "documentation": {
              "id": 26203,
              "nodeType": "StructuredDocumentation",
              "src": "2743:55:179",
              "text": " @dev See {IERC721Metadata-tokenURI}."
            },
            "functionSelector": "c87b56dd",
            "id": 26244,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "2812:8:179",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 26207,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2858:8:179"
            },
            "parameters": {
              "id": 26206,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26205,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2829:7:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 26244,
                  "src": "2821:15:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26204,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2821:7:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2820:17:179"
            },
            "returnParameters": {
              "id": 26210,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26209,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 26244,
                  "src": "2876:13:179",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 26208,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2876:6:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2875:15:179"
            },
            "scope": 26902,
            "src": "2803:329:179",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 26252,
              "nodeType": "Block",
              "src": "3439:26:179",
              "statements": [
                {
                  "expression": {
                    "hexValue": "",
                    "id": 26250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3456:2:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  },
                  "functionReturnParameters": 26249,
                  "id": 26251,
                  "nodeType": "Return",
                  "src": "3449:9:179"
                }
              ]
            },
            "documentation": {
              "id": 26245,
              "nodeType": "StructuredDocumentation",
              "src": "3138:230:179",
              "text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overriden in child contracts."
            },
            "id": 26253,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_baseURI",
            "nameLocation": "3382:8:179",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 26246,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3390:2:179"
            },
            "returnParameters": {
              "id": 26249,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26248,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 26253,
                  "src": "3424:13:179",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 26247,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3424:6:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3423:15:179"
            },
            "scope": 26902,
            "src": "3373:92:179",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              26979
            ],
            "body": {
              "id": 26295,
              "nodeType": "Block",
              "src": "3592:331:179",
              "statements": [
                {
                  "assignments": [
                    26263
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26263,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "3610:5:179",
                      "nodeType": "VariableDeclaration",
                      "scope": 26295,
                      "src": "3602:13:179",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 26262,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3602:7:179",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 26268,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 26266,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26258,
                        "src": "3633:7:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 26264,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26902,
                        "src": "3618:6:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$26902_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 26265,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3625:7:179",
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26182,
                      "src": "3618:14:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 26267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3618:23:179",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3602:39:179"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 26272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 26270,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26256,
                          "src": "3659:2:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 26271,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26263,
                          "src": "3665:5:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3659:11:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572",
                        "id": 26273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3672:35:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        },
                        "value": "ERC721: approval to current owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        }
                      ],
                      "id": 26269,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3651:7:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 26274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3651:57:179",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26275,
                  "nodeType": "ExpressionStatement",
                  "src": "3651:57:179"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 26286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 26280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 26277,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30180,
                              "src": "3740:10:179",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 26278,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3740:12:179",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 26279,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26263,
                            "src": "3756:5:179",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3740:21:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 26282,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26263,
                              "src": "3782:5:179",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 26283,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30180,
                                "src": "3789:10:179",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 26284,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3789:12:179",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 26281,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26352,
                            "src": "3765:16:179",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 26285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3765:37:179",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3740:62:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c",
                        "id": 26287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3816:58:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
                          "typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
                        },
                        "value": "ERC721: approve caller is not owner nor approved for all"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
                          "typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
                        }
                      ],
                      "id": 26276,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3719:7:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 26288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3719:165:179",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26289,
                  "nodeType": "ExpressionStatement",
                  "src": "3719:165:179"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26291,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26256,
                        "src": "3904:2:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26292,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26258,
                        "src": "3908:7:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 26290,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26785,
                      "src": "3895:8:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 26293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3895:21:179",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26294,
                  "nodeType": "ExpressionStatement",
                  "src": "3895:21:179"
                }
              ]
            },
            "documentation": {
              "id": 26254,
              "nodeType": "StructuredDocumentation",
              "src": "3471:46:179",
              "text": " @dev See {IERC721-approve}."
            },
            "functionSelector": "095ea7b3",
            "id": 26296,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "3531:7:179",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 26260,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3583:8:179"
            },
            "parameters": {
              "id": 26259,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26256,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3547:2:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 26296,
                  "src": "3539:10:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26255,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3539:7:179",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26258,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3559:7:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 26296,
                  "src": "3551:15:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26257,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3551:7:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3538:29:179"
            },
            "returnParameters": {
              "id": 26261,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3592:0:179"
            },
            "scope": 26902,
            "src": "3522:401:179",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              26987
            ],
            "body": {
              "id": 26316,
              "nodeType": "Block",
              "src": "4069:132:179",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 26307,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26299,
                            "src": "4095:7:179",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 26306,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26475,
                          "src": "4087:7:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 26308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4087:16:179",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 26309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4105:46:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
                          "typeString": "literal_string \"ERC721: approved query for nonexistent token\""
                        },
                        "value": "ERC721: approved query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
                          "typeString": "literal_string \"ERC721: approved query for nonexistent token\""
                        }
                      ],
                      "id": 26305,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4079:7:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 26310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4079:73:179",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26311,
                  "nodeType": "ExpressionStatement",
                  "src": "4079:73:179"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 26312,
                      "name": "_tokenApprovals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26076,
                      "src": "4170:15:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 26314,
                    "indexExpression": {
                      "id": 26313,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26299,
                      "src": "4186:7:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4170:24:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 26304,
                  "id": 26315,
                  "nodeType": "Return",
                  "src": "4163:31:179"
                }
              ]
            },
            "documentation": {
              "id": 26297,
              "nodeType": "StructuredDocumentation",
              "src": "3929:50:179",
              "text": " @dev See {IERC721-getApproved}."
            },
            "functionSelector": "081812fc",
            "id": 26317,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getApproved",
            "nameLocation": "3993:11:179",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 26301,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4042:8:179"
            },
            "parameters": {
              "id": 26300,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26299,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4013:7:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 26317,
                  "src": "4005:15:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26298,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4005:7:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4004:17:179"
            },
            "returnParameters": {
              "id": 26304,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26303,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 26317,
                  "src": "4060:7:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26302,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4060:7:179",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4059:9:179"
            },
            "scope": 26902,
            "src": "3984:217:179",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              26995
            ],
            "body": {
              "id": 26333,
              "nodeType": "Block",
              "src": "4352:69:179",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 26327,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30180,
                          "src": "4381:10:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 26328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4381:12:179",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26329,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26320,
                        "src": "4395:8:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26330,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26322,
                        "src": "4405:8:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 26326,
                      "name": "_setApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26817,
                      "src": "4362:18:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 26331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4362:52:179",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26332,
                  "nodeType": "ExpressionStatement",
                  "src": "4362:52:179"
                }
              ]
            },
            "documentation": {
              "id": 26318,
              "nodeType": "StructuredDocumentation",
              "src": "4207:56:179",
              "text": " @dev See {IERC721-setApprovalForAll}."
            },
            "functionSelector": "a22cb465",
            "id": 26334,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nameLocation": "4277:17:179",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 26324,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4343:8:179"
            },
            "parameters": {
              "id": 26323,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26320,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "4303:8:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 26334,
                  "src": "4295:16:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26319,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4295:7:179",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26322,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "4318:8:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 26334,
                  "src": "4313:13:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 26321,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4313:4:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4294:33:179"
            },
            "returnParameters": {
              "id": 26325,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4352:0:179"
            },
            "scope": 26902,
            "src": "4268:153:179",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              27005
            ],
            "body": {
              "id": 26351,
              "nodeType": "Block",
              "src": "4590:59:179",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 26345,
                        "name": "_operatorApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26082,
                        "src": "4607:18:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(address => mapping(address => bool))"
                        }
                      },
                      "id": 26347,
                      "indexExpression": {
                        "id": 26346,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26337,
                        "src": "4626:5:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4607:25:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 26349,
                    "indexExpression": {
                      "id": 26348,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26339,
                      "src": "4633:8:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4607:35:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 26344,
                  "id": 26350,
                  "nodeType": "Return",
                  "src": "4600:42:179"
                }
              ]
            },
            "documentation": {
              "id": 26335,
              "nodeType": "StructuredDocumentation",
              "src": "4427:55:179",
              "text": " @dev See {IERC721-isApprovedForAll}."
            },
            "functionSelector": "e985e9c5",
            "id": 26352,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nameLocation": "4496:16:179",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 26341,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4566:8:179"
            },
            "parameters": {
              "id": 26340,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26337,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4521:5:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 26352,
                  "src": "4513:13:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26336,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4513:7:179",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26339,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "4536:8:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 26352,
                  "src": "4528:16:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26338,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4528:7:179",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4512:33:179"
            },
            "returnParameters": {
              "id": 26344,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26343,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 26352,
                  "src": "4584:4:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 26342,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4584:4:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4583:6:179"
            },
            "scope": 26902,
            "src": "4487:162:179",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              26971
            ],
            "body": {
              "id": 26378,
              "nodeType": "Block",
              "src": "4830:211:179",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 26365,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30180,
                              "src": "4919:10:179",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 26366,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4919:12:179",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 26367,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26359,
                            "src": "4933:7:179",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 26364,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26516,
                          "src": "4900:18:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 26368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4900:41:179",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 26369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4943:51:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 26363,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4892:7:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 26370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4892:103:179",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26371,
                  "nodeType": "ExpressionStatement",
                  "src": "4892:103:179"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26373,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26355,
                        "src": "5016:4:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26374,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26357,
                        "src": "5022:2:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26375,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26359,
                        "src": "5026:7:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 26372,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26761,
                      "src": "5006:9:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 26376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5006:28:179",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26377,
                  "nodeType": "ExpressionStatement",
                  "src": "5006:28:179"
                }
              ]
            },
            "documentation": {
              "id": 26353,
              "nodeType": "StructuredDocumentation",
              "src": "4655:51:179",
              "text": " @dev See {IERC721-transferFrom}."
            },
            "functionSelector": "23b872dd",
            "id": 26379,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "4720:12:179",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 26361,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4821:8:179"
            },
            "parameters": {
              "id": 26360,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26355,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "4750:4:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 26379,
                  "src": "4742:12:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26354,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4742:7:179",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26357,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4772:2:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 26379,
                  "src": "4764:10:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26356,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4764:7:179",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26359,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4792:7:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 26379,
                  "src": "4784:15:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26358,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4784:7:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4732:73:179"
            },
            "returnParameters": {
              "id": 26362,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4830:0:179"
            },
            "scope": 26902,
            "src": "4711:330:179",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              26961
            ],
            "body": {
              "id": 26397,
              "nodeType": "Block",
              "src": "5230:56:179",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26391,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26382,
                        "src": "5257:4:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26392,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26384,
                        "src": "5263:2:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26393,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26386,
                        "src": "5267:7:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 26394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5276:2:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 26390,
                      "name": "safeTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        26398,
                        26428
                      ],
                      "referencedDeclaration": 26428,
                      "src": "5240:16:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 26395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5240:39:179",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26396,
                  "nodeType": "ExpressionStatement",
                  "src": "5240:39:179"
                }
              ]
            },
            "documentation": {
              "id": 26380,
              "nodeType": "StructuredDocumentation",
              "src": "5047:55:179",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "42842e0e",
            "id": 26398,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "5116:16:179",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 26388,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5221:8:179"
            },
            "parameters": {
              "id": 26387,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26382,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5150:4:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 26398,
                  "src": "5142:12:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26381,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5142:7:179",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26384,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5172:2:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 26398,
                  "src": "5164:10:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26383,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5164:7:179",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26386,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5192:7:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 26398,
                  "src": "5184:15:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26385,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5184:7:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5132:73:179"
            },
            "returnParameters": {
              "id": 26389,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5230:0:179"
            },
            "scope": 26902,
            "src": "5107:179:179",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              27017
            ],
            "body": {
              "id": 26427,
              "nodeType": "Block",
              "src": "5503:169:179",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 26413,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30180,
                              "src": "5540:10:179",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 26414,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5540:12:179",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 26415,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26405,
                            "src": "5554:7:179",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 26412,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26516,
                          "src": "5521:18:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 26416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5521:41:179",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 26417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5564:51:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 26411,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5513:7:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 26418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5513:103:179",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26419,
                  "nodeType": "ExpressionStatement",
                  "src": "5513:103:179"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26421,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26401,
                        "src": "5640:4:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26422,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26403,
                        "src": "5646:2:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26423,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26405,
                        "src": "5650:7:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 26424,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26407,
                        "src": "5659:5:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 26420,
                      "name": "_safeTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26457,
                      "src": "5626:13:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 26425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5626:39:179",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26426,
                  "nodeType": "ExpressionStatement",
                  "src": "5626:39:179"
                }
              ]
            },
            "documentation": {
              "id": 26399,
              "nodeType": "StructuredDocumentation",
              "src": "5292:55:179",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "b88d4fde",
            "id": 26428,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "5361:16:179",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 26409,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5494:8:179"
            },
            "parameters": {
              "id": 26408,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26401,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5395:4:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 26428,
                  "src": "5387:12:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26400,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5387:7:179",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26403,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5417:2:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 26428,
                  "src": "5409:10:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26402,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5409:7:179",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26405,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5437:7:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 26428,
                  "src": "5429:15:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26404,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5429:7:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26407,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "5467:5:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 26428,
                  "src": "5454:18:179",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 26406,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5454:5:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5377:101:179"
            },
            "returnParameters": {
              "id": 26410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5503:0:179"
            },
            "scope": 26902,
            "src": "5352:320:179",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 26456,
              "nodeType": "Block",
              "src": "6675:166:179",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26441,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26431,
                        "src": "6695:4:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26442,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26433,
                        "src": "6701:2:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26443,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26435,
                        "src": "6705:7:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 26440,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26761,
                      "src": "6685:9:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 26444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6685:28:179",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26445,
                  "nodeType": "ExpressionStatement",
                  "src": "6685:28:179"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 26448,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26431,
                            "src": "6754:4:179",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 26449,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26433,
                            "src": "6760:2:179",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 26450,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26435,
                            "src": "6764:7:179",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 26451,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26437,
                            "src": "6773:5:179",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 26447,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26879,
                          "src": "6731:22:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 26452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6731:48:179",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 26453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6781:52:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "id": 26446,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6723:7:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 26454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6723:111:179",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26455,
                  "nodeType": "ExpressionStatement",
                  "src": "6723:111:179"
                }
              ]
            },
            "documentation": {
              "id": 26429,
              "nodeType": "StructuredDocumentation",
              "src": "5678:851:179",
              "text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `_data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 26457,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeTransfer",
            "nameLocation": "6543:13:179",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 26438,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26431,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "6574:4:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 26457,
                  "src": "6566:12:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26430,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6566:7:179",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26433,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6596:2:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 26457,
                  "src": "6588:10:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26432,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6588:7:179",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26435,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6616:7:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 26457,
                  "src": "6608:15:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26434,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6608:7:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26437,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "6646:5:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 26457,
                  "src": "6633:18:179",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 26436,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6633:5:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6556:101:179"
            },
            "returnParameters": {
              "id": 26439,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6675:0:179"
            },
            "scope": 26902,
            "src": "6534:307:179",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 26474,
              "nodeType": "Block",
              "src": "7215:54:179",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 26472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 26465,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26068,
                        "src": "7232:7:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 26467,
                      "indexExpression": {
                        "id": 26466,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26460,
                        "src": "7240:7:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7232:16:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 26470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7260:1:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 26469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7252:7:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 26468,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7252:7:179",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 26471,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7252:10:179",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7232:30:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 26464,
                  "id": 26473,
                  "nodeType": "Return",
                  "src": "7225:37:179"
                }
              ]
            },
            "documentation": {
              "id": 26458,
              "nodeType": "StructuredDocumentation",
              "src": "6847:292:179",
              "text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
            },
            "id": 26475,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_exists",
            "nameLocation": "7153:7:179",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 26461,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26460,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7169:7:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 26475,
                  "src": "7161:15:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26459,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7161:7:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7160:17:179"
            },
            "returnParameters": {
              "id": 26464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26463,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 26475,
                  "src": "7209:4:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 26462,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7209:4:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7208:6:179"
            },
            "scope": 26902,
            "src": "7144:125:179",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 26515,
              "nodeType": "Block",
              "src": "7526:245:179",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 26487,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26480,
                            "src": "7552:7:179",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 26486,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26475,
                          "src": "7544:7:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 26488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7544:16:179",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 26489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7562:46:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        },
                        "value": "ERC721: operator query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        }
                      ],
                      "id": 26485,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7536:7:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 26490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7536:73:179",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26491,
                  "nodeType": "ExpressionStatement",
                  "src": "7536:73:179"
                },
                {
                  "assignments": [
                    26493
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26493,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "7627:5:179",
                      "nodeType": "VariableDeclaration",
                      "scope": 26515,
                      "src": "7619:13:179",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 26492,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7619:7:179",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 26498,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 26496,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26480,
                        "src": "7650:7:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 26494,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26902,
                        "src": "7635:6:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$26902_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 26495,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7642:7:179",
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26182,
                      "src": "7635:14:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 26497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7635:23:179",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7619:39:179"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 26512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 26507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 26501,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 26499,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26478,
                              "src": "7676:7:179",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 26500,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26493,
                              "src": "7687:5:179",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "7676:16:179",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 26506,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 26503,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 26480,
                                  "src": "7708:7:179",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 26502,
                                "name": "getApproved",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26317,
                                "src": "7696:11:179",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view returns (address)"
                                }
                              },
                              "id": 26504,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7696:20:179",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 26505,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26478,
                              "src": "7720:7:179",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "7696:31:179",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7676:51:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 26509,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26493,
                              "src": "7748:5:179",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 26510,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26478,
                              "src": "7755:7:179",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 26508,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26352,
                            "src": "7731:16:179",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 26511,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7731:32:179",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7676:87:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 26513,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "7675:89:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 26484,
                  "id": 26514,
                  "nodeType": "Return",
                  "src": "7668:96:179"
                }
              ]
            },
            "documentation": {
              "id": 26476,
              "nodeType": "StructuredDocumentation",
              "src": "7275:147:179",
              "text": " @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."
            },
            "id": 26516,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isApprovedOrOwner",
            "nameLocation": "7436:18:179",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 26481,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26478,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "7463:7:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 26516,
                  "src": "7455:15:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26477,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7455:7:179",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26480,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7480:7:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 26516,
                  "src": "7472:15:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26479,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7472:7:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7454:34:179"
            },
            "returnParameters": {
              "id": 26484,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26483,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 26516,
                  "src": "7520:4:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 26482,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7520:4:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7519:6:179"
            },
            "scope": 26902,
            "src": "7427:344:179",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 26530,
              "nodeType": "Block",
              "src": "8166:43:179",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26525,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26519,
                        "src": "8186:2:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26526,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26521,
                        "src": "8190:7:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 26527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8199:2:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 26524,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        26531,
                        26560
                      ],
                      "referencedDeclaration": 26560,
                      "src": "8176:9:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 26528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8176:26:179",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26529,
                  "nodeType": "ExpressionStatement",
                  "src": "8176:26:179"
                }
              ]
            },
            "documentation": {
              "id": 26517,
              "nodeType": "StructuredDocumentation",
              "src": "7777:319:179",
              "text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 26531,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nameLocation": "8110:9:179",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 26522,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26519,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8128:2:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 26531,
                  "src": "8120:10:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26518,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8120:7:179",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26521,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8140:7:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 26531,
                  "src": "8132:15:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26520,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8132:7:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8119:29:179"
            },
            "returnParameters": {
              "id": 26523,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8166:0:179"
            },
            "scope": 26902,
            "src": "8101:108:179",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 26559,
              "nodeType": "Block",
              "src": "8545:196:179",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26542,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26534,
                        "src": "8561:2:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26543,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26536,
                        "src": "8565:7:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 26541,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26626,
                      "src": "8555:5:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 26544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8555:18:179",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26545,
                  "nodeType": "ExpressionStatement",
                  "src": "8555:18:179"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 26550,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8635:1:179",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 26549,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8627:7:179",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 26548,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8627:7:179",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 26551,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8627:10:179",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 26552,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26534,
                            "src": "8639:2:179",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 26553,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26536,
                            "src": "8643:7:179",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 26554,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26538,
                            "src": "8652:5:179",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 26547,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26879,
                          "src": "8604:22:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 26555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8604:54:179",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 26556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8672:52:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "id": 26546,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8583:7:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 26557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8583:151:179",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26558,
                  "nodeType": "ExpressionStatement",
                  "src": "8583:151:179"
                }
              ]
            },
            "documentation": {
              "id": 26532,
              "nodeType": "StructuredDocumentation",
              "src": "8215:210:179",
              "text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
            },
            "id": 26560,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nameLocation": "8439:9:179",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 26539,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26534,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8466:2:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 26560,
                  "src": "8458:10:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26533,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8458:7:179",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26536,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8486:7:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 26560,
                  "src": "8478:15:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26535,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8478:7:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26538,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "8516:5:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 26560,
                  "src": "8503:18:179",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 26537,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8503:5:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8448:79:179"
            },
            "returnParameters": {
              "id": 26540,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8545:0:179"
            },
            "scope": 26902,
            "src": "8430:311:179",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 26625,
              "nodeType": "Block",
              "src": "9124:366:179",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 26574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 26569,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26563,
                          "src": "9142:2:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 26572,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9156:1:179",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 26571,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9148:7:179",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 26570,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9148:7:179",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 26573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9148:10:179",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9142:16:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 26575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9160:34:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        },
                        "value": "ERC721: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        }
                      ],
                      "id": 26568,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9134:7:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 26576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9134:61:179",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26577,
                  "nodeType": "ExpressionStatement",
                  "src": "9134:61:179"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9213:17:179",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 26580,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26565,
                              "src": "9222:7:179",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 26579,
                            "name": "_exists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26475,
                            "src": "9214:7:179",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 26581,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9214:16:179",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
                        "id": 26583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9232:30:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        },
                        "value": "ERC721: token already minted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        }
                      ],
                      "id": 26578,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9205:7:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 26584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9205:58:179",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26585,
                  "nodeType": "ExpressionStatement",
                  "src": "9205:58:179"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 26589,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9303:1:179",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 26588,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9295:7:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 26587,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9295:7:179",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 26590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9295:10:179",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26591,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26563,
                        "src": "9307:2:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26592,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26565,
                        "src": "9311:7:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 26586,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26890,
                      "src": "9274:20:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 26593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9274:45:179",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26594,
                  "nodeType": "ExpressionStatement",
                  "src": "9274:45:179"
                },
                {
                  "expression": {
                    "id": 26599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 26595,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26072,
                        "src": "9330:9:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 26597,
                      "indexExpression": {
                        "id": 26596,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26563,
                        "src": "9340:2:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9330:13:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 26598,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9347:1:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "9330:18:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 26600,
                  "nodeType": "ExpressionStatement",
                  "src": "9330:18:179"
                },
                {
                  "expression": {
                    "id": 26605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 26601,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26068,
                        "src": "9358:7:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 26603,
                      "indexExpression": {
                        "id": 26602,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26565,
                        "src": "9366:7:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9358:16:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 26604,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26563,
                      "src": "9377:2:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9358:21:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 26606,
                  "nodeType": "ExpressionStatement",
                  "src": "9358:21:179"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 26610,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9412:1:179",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 26609,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9404:7:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 26608,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9404:7:179",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 26611,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9404:10:179",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26612,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26563,
                        "src": "9416:2:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26613,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26565,
                        "src": "9420:7:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 26607,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26917,
                      "src": "9395:8:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 26614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9395:33:179",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26615,
                  "nodeType": "EmitStatement",
                  "src": "9390:38:179"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 26619,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9467:1:179",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 26618,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9459:7:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 26617,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9459:7:179",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 26620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9459:10:179",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26621,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26563,
                        "src": "9471:2:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26622,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26565,
                        "src": "9475:7:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 26616,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26901,
                      "src": "9439:19:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 26623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9439:44:179",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26624,
                  "nodeType": "ExpressionStatement",
                  "src": "9439:44:179"
                }
              ]
            },
            "documentation": {
              "id": 26561,
              "nodeType": "StructuredDocumentation",
              "src": "8747:311:179",
              "text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
            },
            "id": 26626,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "9072:5:179",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 26566,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26563,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9086:2:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 26626,
                  "src": "9078:10:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26562,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9078:7:179",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26565,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9098:7:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 26626,
                  "src": "9090:15:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26564,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9090:7:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9077:29:179"
            },
            "returnParameters": {
              "id": 26567,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9124:0:179"
            },
            "scope": 26902,
            "src": "9063:427:179",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 26685,
              "nodeType": "Block",
              "src": "9756:357:179",
              "statements": [
                {
                  "assignments": [
                    26633
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26633,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "9774:5:179",
                      "nodeType": "VariableDeclaration",
                      "scope": 26685,
                      "src": "9766:13:179",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 26632,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9766:7:179",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 26638,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 26636,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26629,
                        "src": "9797:7:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 26634,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26902,
                        "src": "9782:6:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$26902_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 26635,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9789:7:179",
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26182,
                      "src": "9782:14:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 26637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9782:23:179",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9766:39:179"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26640,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26633,
                        "src": "9837:5:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 26643,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9852:1:179",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 26642,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9844:7:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 26641,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9844:7:179",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 26644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9844:10:179",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26645,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26629,
                        "src": "9856:7:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 26639,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26890,
                      "src": "9816:20:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 26646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9816:48:179",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26647,
                  "nodeType": "ExpressionStatement",
                  "src": "9816:48:179"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 26651,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9919:1:179",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 26650,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9911:7:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 26649,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9911:7:179",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 26652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9911:10:179",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26653,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26629,
                        "src": "9923:7:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 26648,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26785,
                      "src": "9902:8:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 26654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9902:29:179",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26655,
                  "nodeType": "ExpressionStatement",
                  "src": "9902:29:179"
                },
                {
                  "expression": {
                    "id": 26660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 26656,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26072,
                        "src": "9942:9:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 26658,
                      "indexExpression": {
                        "id": 26657,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26633,
                        "src": "9952:5:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9942:16:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 26659,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9962:1:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "9942:21:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 26661,
                  "nodeType": "ExpressionStatement",
                  "src": "9942:21:179"
                },
                {
                  "expression": {
                    "id": 26665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "9973:23:179",
                    "subExpression": {
                      "baseExpression": {
                        "id": 26662,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26068,
                        "src": "9980:7:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 26664,
                      "indexExpression": {
                        "id": 26663,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26629,
                        "src": "9988:7:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9980:16:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26666,
                  "nodeType": "ExpressionStatement",
                  "src": "9973:23:179"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 26668,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26633,
                        "src": "10021:5:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 26671,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10036:1:179",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 26670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10028:7:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 26669,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10028:7:179",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 26672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10028:10:179",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26673,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26629,
                        "src": "10040:7:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 26667,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26917,
                      "src": "10012:8:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 26674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10012:36:179",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26675,
                  "nodeType": "EmitStatement",
                  "src": "10007:41:179"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26677,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26633,
                        "src": "10079:5:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 26680,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10094:1:179",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 26679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10086:7:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 26678,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10086:7:179",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 26681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10086:10:179",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26682,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26629,
                        "src": "10098:7:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 26676,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26901,
                      "src": "10059:19:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 26683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10059:47:179",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26684,
                  "nodeType": "ExpressionStatement",
                  "src": "10059:47:179"
                }
              ]
            },
            "documentation": {
              "id": 26627,
              "nodeType": "StructuredDocumentation",
              "src": "9496:206:179",
              "text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
            },
            "id": 26686,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "9716:5:179",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 26630,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26629,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9730:7:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 26686,
                  "src": "9722:15:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26628,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9722:7:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9721:17:179"
            },
            "returnParameters": {
              "id": 26631,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9756:0:179"
            },
            "scope": 26902,
            "src": "9707:406:179",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 26760,
              "nodeType": "Block",
              "src": "10546:496:179",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 26702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 26699,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26693,
                              "src": "10579:7:179",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 26697,
                              "name": "ERC721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26902,
                              "src": "10564:6:179",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721_$26902_$",
                                "typeString": "type(contract ERC721)"
                              }
                            },
                            "id": 26698,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10571:7:179",
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 26182,
                            "src": "10564:14:179",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 26700,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10564:23:179",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 26701,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26689,
                          "src": "10591:4:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10564:31:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
                        "id": 26703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10597:39:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
                          "typeString": "literal_string \"ERC721: transfer from incorrect owner\""
                        },
                        "value": "ERC721: transfer from incorrect owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
                          "typeString": "literal_string \"ERC721: transfer from incorrect owner\""
                        }
                      ],
                      "id": 26696,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10556:7:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 26704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10556:81:179",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26705,
                  "nodeType": "ExpressionStatement",
                  "src": "10556:81:179"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 26712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 26707,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26691,
                          "src": "10655:2:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 26710,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10669:1:179",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 26709,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10661:7:179",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 26708,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10661:7:179",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 26711,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10661:10:179",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10655:16:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 26713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10673:38:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        },
                        "value": "ERC721: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        }
                      ],
                      "id": 26706,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10647:7:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 26714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10647:65:179",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26715,
                  "nodeType": "ExpressionStatement",
                  "src": "10647:65:179"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26717,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26689,
                        "src": "10744:4:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26718,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26691,
                        "src": "10750:2:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26719,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26693,
                        "src": "10754:7:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 26716,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26890,
                      "src": "10723:20:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 26720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10723:39:179",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26721,
                  "nodeType": "ExpressionStatement",
                  "src": "10723:39:179"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 26725,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10841:1:179",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 26724,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10833:7:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 26723,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10833:7:179",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 26726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10833:10:179",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26727,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26693,
                        "src": "10845:7:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 26722,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26785,
                      "src": "10824:8:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 26728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10824:29:179",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26729,
                  "nodeType": "ExpressionStatement",
                  "src": "10824:29:179"
                },
                {
                  "expression": {
                    "id": 26734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 26730,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26072,
                        "src": "10864:9:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 26732,
                      "indexExpression": {
                        "id": 26731,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26689,
                        "src": "10874:4:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10864:15:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 26733,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10883:1:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "10864:20:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 26735,
                  "nodeType": "ExpressionStatement",
                  "src": "10864:20:179"
                },
                {
                  "expression": {
                    "id": 26740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 26736,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26072,
                        "src": "10894:9:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 26738,
                      "indexExpression": {
                        "id": 26737,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26691,
                        "src": "10904:2:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10894:13:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 26739,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10911:1:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "10894:18:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 26741,
                  "nodeType": "ExpressionStatement",
                  "src": "10894:18:179"
                },
                {
                  "expression": {
                    "id": 26746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 26742,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26068,
                        "src": "10922:7:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 26744,
                      "indexExpression": {
                        "id": 26743,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26693,
                        "src": "10930:7:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10922:16:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 26745,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26691,
                      "src": "10941:2:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10922:21:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 26747,
                  "nodeType": "ExpressionStatement",
                  "src": "10922:21:179"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 26749,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26689,
                        "src": "10968:4:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26750,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26691,
                        "src": "10974:2:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26751,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26693,
                        "src": "10978:7:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 26748,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26917,
                      "src": "10959:8:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 26752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10959:27:179",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26753,
                  "nodeType": "EmitStatement",
                  "src": "10954:32:179"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26755,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26689,
                        "src": "11017:4:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26756,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26691,
                        "src": "11023:2:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26757,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26693,
                        "src": "11027:7:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 26754,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26901,
                      "src": "10997:19:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 26758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10997:38:179",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26759,
                  "nodeType": "ExpressionStatement",
                  "src": "10997:38:179"
                }
              ]
            },
            "documentation": {
              "id": 26687,
              "nodeType": "StructuredDocumentation",
              "src": "10119:313:179",
              "text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
            },
            "id": 26761,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "10446:9:179",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 26694,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26689,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "10473:4:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 26761,
                  "src": "10465:12:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26688,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10465:7:179",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26691,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10495:2:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 26761,
                  "src": "10487:10:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26690,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10487:7:179",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26693,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10515:7:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 26761,
                  "src": "10507:15:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26692,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10507:7:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10455:73:179"
            },
            "returnParameters": {
              "id": 26695,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10546:0:179"
            },
            "scope": 26902,
            "src": "10437:605:179",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 26784,
              "nodeType": "Block",
              "src": "11217:107:179",
              "statements": [
                {
                  "expression": {
                    "id": 26773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 26769,
                        "name": "_tokenApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26076,
                        "src": "11227:15:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 26771,
                      "indexExpression": {
                        "id": 26770,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26766,
                        "src": "11243:7:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11227:24:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 26772,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26764,
                      "src": "11254:2:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11227:29:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 26774,
                  "nodeType": "ExpressionStatement",
                  "src": "11227:29:179"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 26778,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26766,
                            "src": "11295:7:179",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 26776,
                            "name": "ERC721",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26902,
                            "src": "11280:6:179",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC721_$26902_$",
                              "typeString": "type(contract ERC721)"
                            }
                          },
                          "id": 26777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11287:7:179",
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 26182,
                          "src": "11280:14:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 26779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11280:23:179",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26780,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26764,
                        "src": "11305:2:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26781,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26766,
                        "src": "11309:7:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 26775,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26926,
                      "src": "11271:8:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 26782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11271:46:179",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26783,
                  "nodeType": "EmitStatement",
                  "src": "11266:51:179"
                }
              ]
            },
            "documentation": {
              "id": 26762,
              "nodeType": "StructuredDocumentation",
              "src": "11048:100:179",
              "text": " @dev Approve `to` to operate on `tokenId`\n Emits a {Approval} event."
            },
            "id": 26785,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "11162:8:179",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 26767,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26764,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11179:2:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 26785,
                  "src": "11171:10:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26763,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11171:7:179",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26766,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "11191:7:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 26785,
                  "src": "11183:15:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26765,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11183:7:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11170:29:179"
            },
            "returnParameters": {
              "id": 26768,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11217:0:179"
            },
            "scope": 26902,
            "src": "11153:171:179",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 26816,
              "nodeType": "Block",
              "src": "11582:184:179",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 26798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 26796,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26788,
                          "src": "11600:5:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 26797,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26790,
                          "src": "11609:8:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11600:17:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
                        "id": 26799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11619:27:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        },
                        "value": "ERC721: approve to caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        }
                      ],
                      "id": 26795,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11592:7:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 26800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11592:55:179",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26801,
                  "nodeType": "ExpressionStatement",
                  "src": "11592:55:179"
                },
                {
                  "expression": {
                    "id": 26808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 26802,
                          "name": "_operatorApprovals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26082,
                          "src": "11657:18:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 26805,
                        "indexExpression": {
                          "id": 26803,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26788,
                          "src": "11676:5:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11657:25:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 26806,
                      "indexExpression": {
                        "id": 26804,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26790,
                        "src": "11683:8:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11657:35:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 26807,
                      "name": "approved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26792,
                      "src": "11695:8:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "11657:46:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 26809,
                  "nodeType": "ExpressionStatement",
                  "src": "11657:46:179"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 26811,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26788,
                        "src": "11733:5:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26812,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26790,
                        "src": "11740:8:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26813,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26792,
                        "src": "11750:8:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 26810,
                      "name": "ApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26935,
                      "src": "11718:14:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 26814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11718:41:179",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26815,
                  "nodeType": "EmitStatement",
                  "src": "11713:46:179"
                }
              ]
            },
            "documentation": {
              "id": 26786,
              "nodeType": "StructuredDocumentation",
              "src": "11330:124:179",
              "text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits a {ApprovalForAll} event."
            },
            "id": 26817,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setApprovalForAll",
            "nameLocation": "11468:18:179",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 26793,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26788,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "11504:5:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 26817,
                  "src": "11496:13:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26787,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11496:7:179",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26790,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "11527:8:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 26817,
                  "src": "11519:16:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26789,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11519:7:179",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26792,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "11550:8:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 26817,
                  "src": "11545:13:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 26791,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11545:4:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11486:78:179"
            },
            "returnParameters": {
              "id": 26794,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11582:0:179"
            },
            "scope": 26902,
            "src": "11459:307:179",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 26878,
              "nodeType": "Block",
              "src": "12475:622:179",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 26831,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26822,
                        "src": "12489:2:179",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 26832,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12492:10:179",
                      "memberName": "isContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29525,
                      "src": "12489:13:179",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 26833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12489:15:179",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 26876,
                    "nodeType": "Block",
                    "src": "13055:36:179",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 26874,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13076:4:179",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 26830,
                        "id": 26875,
                        "nodeType": "Return",
                        "src": "13069:11:179"
                      }
                    ]
                  },
                  "id": 26877,
                  "nodeType": "IfStatement",
                  "src": "12485:606:179",
                  "trueBody": {
                    "id": 26873,
                    "nodeType": "Block",
                    "src": "12506:543:179",
                    "statements": [
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 26853,
                              "nodeType": "Block",
                              "src": "12621:91:179",
                              "statements": [
                                {
                                  "expression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 26851,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 26847,
                                      "name": "retval",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 26845,
                                      "src": "12646:6:179",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 26848,
                                          "name": "IERC721Receiver",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 27036,
                                          "src": "12656:15:179",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$27036_$",
                                            "typeString": "type(contract IERC721Receiver)"
                                          }
                                        },
                                        "id": 26849,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberLocation": "12672:16:179",
                                        "memberName": "onERC721Received",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 27035,
                                        "src": "12656:32:179",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                                          "typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
                                        }
                                      },
                                      "id": 26850,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "12689:8:179",
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "12656:41:179",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "12646:51:179",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "functionReturnParameters": 26830,
                                  "id": 26852,
                                  "nodeType": "Return",
                                  "src": "12639:58:179"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 26854,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 26846,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 26845,
                                  "mutability": "mutable",
                                  "name": "retval",
                                  "nameLocation": "12613:6:179",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 26854,
                                  "src": "12606:13:179",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "typeName": {
                                    "id": 26844,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12606:6:179",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "12605:15:179"
                            },
                            "src": "12597:115:179"
                          },
                          {
                            "block": {
                              "id": 26870,
                              "nodeType": "Block",
                              "src": "12741:298:179",
                              "statements": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 26861,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 26858,
                                        "name": "reason",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 26856,
                                        "src": "12763:6:179",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      "id": 26859,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "12770:6:179",
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "12763:13:179",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 26860,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "12780:1:179",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "12763:18:179",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": {
                                    "id": 26868,
                                    "nodeType": "Block",
                                    "src": "12890:135:179",
                                    "statements": [
                                      {
                                        "AST": {
                                          "nativeSrc": "12921:86:179",
                                          "nodeType": "YulBlock",
                                          "src": "12921:86:179",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "kind": "number",
                                                        "nativeSrc": "12958:2:179",
                                                        "nodeType": "YulLiteral",
                                                        "src": "12958:2:179",
                                                        "type": "",
                                                        "value": "32"
                                                      },
                                                      {
                                                        "name": "reason",
                                                        "nativeSrc": "12962:6:179",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "12962:6:179"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nativeSrc": "12954:3:179",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "12954:3:179"
                                                    },
                                                    "nativeSrc": "12954:15:179",
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "12954:15:179"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "reason",
                                                        "nativeSrc": "12977:6:179",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "12977:6:179"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "mload",
                                                      "nativeSrc": "12971:5:179",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "12971:5:179"
                                                    },
                                                    "nativeSrc": "12971:13:179",
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "12971:13:179"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "revert",
                                                  "nativeSrc": "12947:6:179",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "12947:6:179"
                                                },
                                                "nativeSrc": "12947:38:179",
                                                "nodeType": "YulFunctionCall",
                                                "src": "12947:38:179"
                                              },
                                              "nativeSrc": "12947:38:179",
                                              "nodeType": "YulExpressionStatement",
                                              "src": "12947:38:179"
                                            }
                                          ]
                                        },
                                        "evmVersion": "istanbul",
                                        "externalReferences": [
                                          {
                                            "declaration": 26856,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "12962:6:179",
                                            "valueSize": 1
                                          },
                                          {
                                            "declaration": 26856,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "12977:6:179",
                                            "valueSize": 1
                                          }
                                        ],
                                        "id": 26867,
                                        "nodeType": "InlineAssembly",
                                        "src": "12912:95:179"
                                      }
                                    ]
                                  },
                                  "id": 26869,
                                  "nodeType": "IfStatement",
                                  "src": "12759:266:179",
                                  "trueBody": {
                                    "id": 26866,
                                    "nodeType": "Block",
                                    "src": "12783:101:179",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                                              "id": 26863,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "12812:52:179",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                                                "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                                              },
                                              "value": "ERC721: transfer to non ERC721Receiver implementer"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                                                "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                                              }
                                            ],
                                            "id": 26862,
                                            "name": "revert",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                              -19,
                                              -19
                                            ],
                                            "referencedDeclaration": -19,
                                            "src": "12805:6:179",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                              "typeString": "function (string memory) pure"
                                            }
                                          },
                                          "id": 26864,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "12805:60:179",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 26865,
                                        "nodeType": "ExpressionStatement",
                                        "src": "12805:60:179"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 26871,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 26857,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 26856,
                                  "mutability": "mutable",
                                  "name": "reason",
                                  "nameLocation": "12733:6:179",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 26871,
                                  "src": "12720:19:179",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes"
                                  },
                                  "typeName": {
                                    "id": 26855,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12720:5:179",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "12719:21:179"
                            },
                            "src": "12713:326:179"
                          }
                        ],
                        "externalCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 26838,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30180,
                                "src": "12561:10:179",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 26839,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12561:12:179",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 26840,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26820,
                              "src": "12575:4:179",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 26841,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26824,
                              "src": "12581:7:179",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 26842,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26826,
                              "src": "12590:5:179",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 26835,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 26822,
                                  "src": "12540:2:179",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 26834,
                                "name": "IERC721Receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27036,
                                "src": "12524:15:179",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$27036_$",
                                  "typeString": "type(contract IERC721Receiver)"
                                }
                              },
                              "id": 26836,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12524:19:179",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721Receiver_$27036",
                                "typeString": "contract IERC721Receiver"
                              }
                            },
                            "id": 26837,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12544:16:179",
                            "memberName": "onERC721Received",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27035,
                            "src": "12524:36:179",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                            }
                          },
                          "id": 26843,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12524:72:179",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 26872,
                        "nodeType": "TryStatement",
                        "src": "12520:519:179"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 26818,
              "nodeType": "StructuredDocumentation",
              "src": "11772:542:179",
              "text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
            },
            "id": 26879,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkOnERC721Received",
            "nameLocation": "12328:22:179",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 26827,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26820,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "12368:4:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 26879,
                  "src": "12360:12:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26819,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12360:7:179",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26822,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "12390:2:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 26879,
                  "src": "12382:10:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26821,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12382:7:179",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26824,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "12410:7:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 26879,
                  "src": "12402:15:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26823,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12402:7:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26826,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "12440:5:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 26879,
                  "src": "12427:18:179",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 26825,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12427:5:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12350:101:179"
            },
            "returnParameters": {
              "id": 26830,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26829,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 26879,
                  "src": "12469:4:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 26828,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12469:4:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12468:6:179"
            },
            "scope": 26902,
            "src": "12319:778:179",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 26889,
              "nodeType": "Block",
              "src": "13773:2:179",
              "statements": []
            },
            "documentation": {
              "id": 26880,
              "nodeType": "StructuredDocumentation",
              "src": "13103:545:179",
              "text": " @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 26890,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "13662:20:179",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 26887,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26882,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "13700:4:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 26890,
                  "src": "13692:12:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26881,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13692:7:179",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26884,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "13722:2:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 26890,
                  "src": "13714:10:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26883,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13714:7:179",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26886,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "13742:7:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 26890,
                  "src": "13734:15:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26885,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13734:7:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13682:73:179"
            },
            "returnParameters": {
              "id": 26888,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13773:0:179"
            },
            "scope": 26902,
            "src": "13653:122:179",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 26900,
              "nodeType": "Block",
              "src": "14266:2:179",
              "statements": []
            },
            "documentation": {
              "id": 26891,
              "nodeType": "StructuredDocumentation",
              "src": "13781:361:179",
              "text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 26901,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterTokenTransfer",
            "nameLocation": "14156:19:179",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 26898,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26893,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "14193:4:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 26901,
                  "src": "14185:12:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26892,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14185:7:179",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26895,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "14215:2:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 26901,
                  "src": "14207:10:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26894,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14207:7:179",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26897,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "14235:7:179",
                  "nodeType": "VariableDeclaration",
                  "scope": 26901,
                  "src": "14227:15:179",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26896,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14227:7:179",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14175:73:179"
            },
            "returnParameters": {
              "id": 26899,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14266:0:179"
            },
            "scope": 26902,
            "src": "14147:121:179",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 26903,
        "src": "613:13657:179",
        "usedErrors": [],
        "usedEvents": [
          26917,
          26926,
          26935
        ]
      }
    ],
    "src": "92:14179:179"
  },
  "bytecode": "",
  "bytecodeSha1": "a887572f029f2d10bee3b8964e6a978955d74691",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.21+commit.d9974bed"
  },
  "contractName": "ERC721",
  "coverageMap": {
    "branches": {
      "179": {
        "ERC721._checkOnERC721Received": {
          "61": [
            12763,
            12781,
            false
          ]
        },
        "ERC721._safeTransfer": {
          "60": [
            6731,
            6779,
            true
          ]
        },
        "ERC721._setApprovalForAll": {
          "59": [
            11600,
            11617,
            true
          ]
        },
        "ERC721._transfer": {
          "57": [
            10564,
            10595,
            true
          ],
          "58": [
            10655,
            10671,
            true
          ]
        },
        "ERC721.approve": {
          "50": [
            3659,
            3670,
            true
          ],
          "51": [
            3740,
            3761,
            true
          ],
          "52": [
            3765,
            3802,
            true
          ]
        },
        "ERC721.balanceOf": {
          "54": [
            2013,
            2032,
            true
          ]
        },
        "ERC721.safeTransferFrom": {
          "55": [
            5521,
            5562,
            true
          ]
        },
        "ERC721.tokenURI": {
          "56": [
            3039,
            3064,
            true
          ]
        },
        "ERC721.transferFrom": {
          "53": [
            4900,
            4941,
            true
          ]
        }
      },
      "180": {},
      "181": {},
      "188": {},
      "198": {},
      "202": {},
      "207": {
        "Strings.toString": {
          "62": [
            601,
            611,
            false
          ]
        }
      },
      "216": {},
      "220": {}
    },
    "statements": {
      "179": {
        "ERC721._approve": {
          "24": [
            11227,
            11256
          ],
          "25": [
            11266,
            11317
          ]
        },
        "ERC721._baseURI": {
          "21": [
            3449,
            3458
          ]
        },
        "ERC721._checkOnERC721Received": {
          "47": [
            12805,
            12865
          ],
          "48": [
            12639,
            12697
          ],
          "49": [
            13069,
            13080
          ]
        },
        "ERC721._exists": {
          "3": [
            7225,
            7262
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "26": [
            7536,
            7609
          ],
          "27": [
            7668,
            7764
          ]
        },
        "ERC721._safeTransfer": {
          "38": [
            6685,
            6713
          ],
          "39": [
            6723,
            6834
          ]
        },
        "ERC721._setApprovalForAll": {
          "35": [
            11592,
            11647
          ],
          "36": [
            11657,
            11703
          ],
          "37": [
            11713,
            11759
          ]
        },
        "ERC721._transfer": {
          "28": [
            10556,
            10637
          ],
          "29": [
            10647,
            10712
          ],
          "30": [
            10824,
            10853
          ],
          "31": [
            10864,
            10884
          ],
          "32": [
            10894,
            10912
          ],
          "33": [
            10922,
            10943
          ],
          "34": [
            10954,
            10986
          ]
        },
        "ERC721.approve": {
          "6": [
            3651,
            3708
          ],
          "8": [
            3719,
            3884
          ],
          "9": [
            3895,
            3916
          ]
        },
        "ERC721.balanceOf": {
          "14": [
            2005,
            2079
          ],
          "15": [
            2089,
            2112
          ]
        },
        "ERC721.getApproved": {
          "4": [
            4079,
            4152
          ],
          "5": [
            4163,
            4194
          ]
        },
        "ERC721.isApprovedForAll": {
          "23": [
            4600,
            4642
          ]
        },
        "ERC721.name": {
          "2": [
            2552,
            2564
          ]
        },
        "ERC721.ownerOf": {
          "13": [
            2309,
            2382
          ]
        },
        "ERC721.safeTransferFrom": {
          "12": [
            5240,
            5279
          ],
          "18": [
            5513,
            5616
          ],
          "19": [
            5626,
            5665
          ]
        },
        "ERC721.setApprovalForAll": {
          "17": [
            4362,
            4414
          ]
        },
        "ERC721.supportsInterface": {
          "0": [
            1673,
            1848
          ]
        },
        "ERC721.symbol": {
          "16": [
            2716,
            2730
          ]
        },
        "ERC721.tokenURI": {
          "20": [
            2901,
            2977
          ],
          "22": [
            3032,
            3125
          ]
        },
        "ERC721.transferFrom": {
          "10": [
            4892,
            4995
          ],
          "11": [
            5006,
            5034
          ]
        }
      },
      "180": {},
      "181": {},
      "188": {},
      "198": {
        "Address.isContract": {
          "46": [
            1443,
            1473
          ]
        }
      },
      "202": {
        "Context._msgSender": {
          "7": [
            712,
            729
          ]
        }
      },
      "207": {
        "Strings.toString": {
          "40": [
            627,
            637
          ],
          "41": [
            743,
            751
          ],
          "42": [
            765,
            775
          ],
          "43": [
            877,
            888
          ],
          "44": [
            902,
            958
          ],
          "45": [
            972,
            983
          ]
        }
      },
      "216": {
        "ERC165.supportsInterface": {
          "1": [
            930,
            977
          ]
        }
      },
      "220": {}
    }
  },
  "dependencies": [
    "Address",
    "Context",
    "ERC165",
    "IERC165",
    "IERC721",
    "IERC721Metadata",
    "IERC721Receiver",
    "Strings"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101b3578063b88d4fde146101c6578063c87b56dd146101d9578063e985e9c5146101ec57600080fd5b80636352211e1461017757806370a082311461018a57806395d89b41146101ab57600080fd5b806301ffc9a7146100d457806306fdde03146100fc578063081812fc14610111578063095ea7b31461013c57806323b872dd1461015157806342842e0e14610164575b600080fd5b6100e76100e2366004610d45565b6101ff565b60405190151581526020015b60405180910390f35b610104610251565b6040516100f39190610db2565b61012461011f366004610dc5565b6102e3565b6040516001600160a01b0390911681526020016100f3565b61014f61014a366004610dfa565b61037d565b005b61014f61015f366004610e24565b610492565b61014f610172366004610e24565b6104c3565b610124610185366004610dc5565b6104de565b61019d610198366004610e60565b610555565b6040519081526020016100f3565b6101046105dc565b61014f6101c1366004610e7b565b6105eb565b61014f6101d4366004610ecd565b6105fa565b6101046101e7366004610dc5565b610632565b6100e76101fa366004610fa9565b61071a565b60006001600160e01b031982166380ac58cd60e01b148061023057506001600160e01b03198216635b5e139f60e01b145b8061024b57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461026090610fdc565b80601f016020809104026020016040519081016040528092919081815260200182805461028c90610fdc565b80156102d95780601f106102ae576101008083540402835291602001916102d9565b820191906000526020600020905b8154815290600101906020018083116102bc57829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166103615760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610388826104de565b9050806001600160a01b0316836001600160a01b0316036103f55760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610358565b336001600160a01b03821614806104115750610411813361071a565b6104835760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610358565b61048d8383610748565b505050565b61049c33826107b6565b6104b85760405162461bcd60e51b815260040161035890611016565b61048d83838361088d565b61048d838383604051806020016040528060008152506105fa565b6000818152600260205260408120546001600160a01b03168061024b5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610358565b60006001600160a01b0382166105c05760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610358565b506001600160a01b031660009081526003602052604090205490565b60606001805461026090610fdc565b6105f6338383610a29565b5050565b61060433836107b6565b6106205760405162461bcd60e51b815260040161035890611016565b61062c84848484610af7565b50505050565b6000818152600260205260409020546060906001600160a01b03166106b15760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610358565b60006106c860408051602081019091526000815290565b905060008151116106e85760405180602001604052806000815250610713565b806106f284610b2a565b604051602001610703929190611067565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061077d826104de565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b031661082f5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610358565b600061083a836104de565b9050806001600160a01b0316846001600160a01b031614806108755750836001600160a01b031661086a846102e3565b6001600160a01b0316145b806108855750610885818561071a565b949350505050565b826001600160a01b03166108a0826104de565b6001600160a01b0316146109045760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610358565b6001600160a01b0382166109665760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610358565b610971600082610748565b6001600160a01b038316600090815260036020526040812080546001929061099a9084906110ac565b90915550506001600160a01b03821660009081526003602052604081208054600192906109c89084906110bf565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b031603610a8a5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610358565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610b0284848461088d565b610b0e84848484610c2b565b61062c5760405162461bcd60e51b8152600401610358906110d2565b606081600003610b515750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610b7b5780610b6581611124565b9150610b749050600a83611153565b9150610b55565b60008167ffffffffffffffff811115610b9657610b96610eb7565b6040519080825280601f01601f191660200182016040528015610bc0576020820181803683370190505b5090505b841561088557610bd56001836110ac565b9150610be2600a86611167565b610bed9060306110bf565b60f81b818381518110610c0257610c0261117b565b60200101906001600160f81b031916908160001a905350610c24600a86611153565b9450610bc4565b60006001600160a01b0384163b15610d2157604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610c6f903390899088908890600401611191565b6020604051808303816000875af1925050508015610caa575060408051601f3d908101601f19168201909252610ca7918101906111ce565b60015b610d07573d808015610cd8576040519150601f19603f3d011682016040523d82523d6000602084013e610cdd565b606091505b508051600003610cff5760405162461bcd60e51b8152600401610358906110d2565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610885565b506001949350505050565b6001600160e01b031981168114610d4257600080fd5b50565b600060208284031215610d5757600080fd5b813561071381610d2c565b60005b83811015610d7d578181015183820152602001610d65565b50506000910152565b60008151808452610d9e816020860160208601610d62565b601f01601f19169290920160200192915050565b6020815260006107136020830184610d86565b600060208284031215610dd757600080fd5b5035919050565b80356001600160a01b0381168114610df557600080fd5b919050565b60008060408385031215610e0d57600080fd5b610e1683610dde565b946020939093013593505050565b600080600060608486031215610e3957600080fd5b610e4284610dde565b9250610e5060208501610dde565b9150604084013590509250925092565b600060208284031215610e7257600080fd5b61071382610dde565b60008060408385031215610e8e57600080fd5b610e9783610dde565b915060208301358015158114610eac57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610ee357600080fd5b610eec85610dde565b9350610efa60208601610dde565b925060408501359150606085013567ffffffffffffffff80821115610f1e57600080fd5b818701915087601f830112610f3257600080fd5b813581811115610f4457610f44610eb7565b604051601f8201601f19908116603f01168101908382118183101715610f6c57610f6c610eb7565b816040528281528a6020848701011115610f8557600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610fbc57600080fd5b610fc583610dde565b9150610fd360208401610dde565b90509250929050565b600181811c90821680610ff057607f821691505b60208210810361101057634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60008351611079818460208801610d62565b83519083019061108d818360208801610d62565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561024b5761024b611096565b8082018082111561024b5761024b611096565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60006001820161113657611136611096565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826111625761116261113d565b500490565b6000826111765761117661113d565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906111c490830184610d86565b9695505050505050565b6000602082840312156111e057600080fd5b815161071381610d2c56fea2646970667358221220798acdb3c06fceb130887020b79e8ee538ed6c2087df88ae8978079ad9f49f6f64736f6c63430008150033",
  "deployedSourceMap": "613:13657:179:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1555:300;;;;;;:::i;:::-;;:::i;:::-;;;565:14:249;;558:22;540:41;;528:2;513:18;1555:300:179;;;;;;;;2473:98;;;:::i;:::-;;;;;;;:::i;3984:217::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1697:32:249;;;1679:51;;1667:2;1652:18;3984:217:179;1533:203:249;3522:401:179;;;;;;:::i;:::-;;:::i;:::-;;4711:330;;;;;;:::i;:::-;;:::i;5107:179::-;;;;;;:::i;:::-;;:::i;2176:235::-;;;;;;:::i;:::-;;:::i;1914:205::-;;;;;;:::i;:::-;;:::i;:::-;;;2848:25:249;;;2836:2;2821:18;1914:205:179;2702:177:249;2635:102:179;;;:::i;4268:153::-;;;;;;:::i;:::-;;:::i;5352:320::-;;;;;;:::i;:::-;;:::i;2803:329::-;;;;;;:::i;:::-;;:::i;4487:162::-;;;;;;:::i;:::-;;:::i;1555:300::-;1657:4;-1:-1:-1;;;;;;1692:40:179;;-1:-1:-1;;;1692:40:179;;:104;;-1:-1:-1;;;;;;;1748:48:179;;-1:-1:-1;;;1748:48:179;1692:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:216;;;1812:36:179;1673:175;1555:300;-1:-1:-1;;1555:300:179:o;2473:98::-;2527:13;2559:5;2552:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2473:98;:::o;3984:217::-;4060:7;7232:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7232:16:179;4079:73;;;;-1:-1:-1;;;4079:73:179;;5363:2:249;4079:73:179;;;5345:21:249;5402:2;5382:18;;;5375:30;5441:34;5421:18;;;5414:62;-1:-1:-1;;;5492:18:249;;;5485:42;5544:19;;4079:73:179;;;;;;;;;-1:-1:-1;4170:24:179;;;;:15;:24;;;;;;-1:-1:-1;;;;;4170:24:179;;3984:217::o;3522:401::-;3602:13;3618:23;3633:7;3618:14;:23::i;:::-;3602:39;;3665:5;-1:-1:-1;;;;;3659:11:179;:2;-1:-1:-1;;;;;3659:11:179;;3651:57;;;;-1:-1:-1;;;3651:57:179;;5776:2:249;3651:57:179;;;5758:21:249;5815:2;5795:18;;;5788:30;5854:34;5834:18;;;5827:62;-1:-1:-1;;;5905:18:249;;;5898:31;5946:19;;3651:57:179;5574:397:249;3651:57:179;719:10:202;-1:-1:-1;;;;;3740:21:179;;;;:62;;-1:-1:-1;3765:37:179;3782:5;719:10:202;4487:162:179;:::i;3765:37::-;3719:165;;;;-1:-1:-1;;;3719:165:179;;6178:2:249;3719:165:179;;;6160:21:249;6217:2;6197:18;;;6190:30;6256:34;6236:18;;;6229:62;6327:26;6307:18;;;6300:54;6371:19;;3719:165:179;5976:420:249;3719:165:179;3895:21;3904:2;3908:7;3895:8;:21::i;:::-;3592:331;3522:401;;:::o;4711:330::-;4900:41;719:10:202;4933:7:179;4900:18;:41::i;:::-;4892:103;;;;-1:-1:-1;;;4892:103:179;;;;;;;:::i;:::-;5006:28;5016:4;5022:2;5026:7;5006:9;:28::i;5107:179::-;5240:39;5257:4;5263:2;5267:7;5240:39;;;;;;;;;;;;:16;:39::i;2176:235::-;2248:7;2283:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2283:16:179;;2309:73;;;;-1:-1:-1;;;2309:73:179;;7021:2:249;2309:73:179;;;7003:21:249;7060:2;7040:18;;;7033:30;7099:34;7079:18;;;7072:62;-1:-1:-1;;;7150:18:249;;;7143:39;7199:19;;2309:73:179;6819:405:249;1914:205:179;1986:7;-1:-1:-1;;;;;2013:19:179;;2005:74;;;;-1:-1:-1;;;2005:74:179;;7431:2:249;2005:74:179;;;7413:21:249;7470:2;7450:18;;;7443:30;7509:34;7489:18;;;7482:62;-1:-1:-1;;;7560:18:249;;;7553:40;7610:19;;2005:74:179;7229:406:249;2005:74:179;-1:-1:-1;;;;;;2096:16:179;;;;;:9;:16;;;;;;;1914:205::o;2635:102::-;2691:13;2723:7;2716:14;;;;;:::i;4268:153::-;4362:52;719:10:202;4395:8:179;4405;4362:18;:52::i;:::-;4268:153;;:::o;5352:320::-;5521:41;719:10:202;5554:7:179;5521:18;:41::i;:::-;5513:103;;;;-1:-1:-1;;;5513:103:179;;;;;;;:::i;:::-;5626:39;5640:4;5646:2;5650:7;5659:5;5626:13;:39::i;:::-;5352:320;;;;:::o;2803:329::-;7209:4;7232:16;;;:7;:16;;;;;;2876:13;;-1:-1:-1;;;;;7232:16:179;2901:76;;;;-1:-1:-1;;;2901:76:179;;7842:2:249;2901:76:179;;;7824:21:249;7881:2;7861:18;;;7854:30;7920:34;7900:18;;;7893:62;-1:-1:-1;;;7971:18:249;;;7964:45;8026:19;;2901:76:179;7640:411:249;2901:76:179;2988:21;3012:10;3449:9;;;;;;;;;-1:-1:-1;3449:9:179;;;3373:92;3012:10;2988:34;;3063:1;3045:7;3039:21;:25;:86;;;;;;;;;;;;;;;;;3091:7;3100:18;:7;:16;:18::i;:::-;3074:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3039:86;3032:93;2803:329;-1:-1:-1;;;2803:329:179:o;4487:162::-;-1:-1:-1;;;;;4607:25:179;;;4584:4;4607:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4487:162::o;11153:171::-;11227:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11227:29:179;-1:-1:-1;;;;;11227:29:179;;;;;;;;:24;;11280:23;11227:24;11280:14;:23::i;:::-;-1:-1:-1;;;;;11271:46:179;;;;;;;;;;;11153:171;;:::o;7427:344::-;7520:4;7232:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7232:16:179;7536:73;;;;-1:-1:-1;;;7536:73:179;;8759:2:249;7536:73:179;;;8741:21:249;8798:2;8778:18;;;8771:30;8837:34;8817:18;;;8810:62;-1:-1:-1;;;8888:18:249;;;8881:42;8940:19;;7536:73:179;8557:408:249;7536:73:179;7619:13;7635:23;7650:7;7635:14;:23::i;:::-;7619:39;;7687:5;-1:-1:-1;;;;;7676:16:179;:7;-1:-1:-1;;;;;7676:16:179;;:51;;;;7720:7;-1:-1:-1;;;;;7696:31:179;:20;7708:7;7696:11;:20::i;:::-;-1:-1:-1;;;;;7696:31:179;;7676:51;:87;;;;7731:32;7748:5;7755:7;7731:16;:32::i;:::-;7668:96;7427:344;-1:-1:-1;;;;7427:344:179:o;10437:605::-;10591:4;-1:-1:-1;;;;;10564:31:179;:23;10579:7;10564:14;:23::i;:::-;-1:-1:-1;;;;;10564:31:179;;10556:81;;;;-1:-1:-1;;;10556:81:179;;9172:2:249;10556:81:179;;;9154:21:249;9211:2;9191:18;;;9184:30;9250:34;9230:18;;;9223:62;-1:-1:-1;;;9301:18:249;;;9294:35;9346:19;;10556:81:179;8970:401:249;10556:81:179;-1:-1:-1;;;;;10655:16:179;;10647:65;;;;-1:-1:-1;;;10647:65:179;;9578:2:249;10647:65:179;;;9560:21:249;9617:2;9597:18;;;9590:30;9656:34;9636:18;;;9629:62;-1:-1:-1;;;9707:18:249;;;9700:34;9751:19;;10647:65:179;9376:400:249;10647:65:179;10824:29;10841:1;10845:7;10824:8;:29::i;:::-;-1:-1:-1;;;;;10864:15:179;;;;;;:9;:15;;;;;:20;;10883:1;;10864:15;:20;;10883:1;;10864:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10894:13:179;;;;;;:9;:13;;;;;:18;;10911:1;;10894:13;:18;;10911:1;;10894:18;:::i;:::-;;;;-1:-1:-1;;10922:16:179;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10922:21:179;-1:-1:-1;;;;;10922:21:179;;;;;;;;;10959:27;;10922:16;;10959:27;;;;;;;3592:331;3522:401;;:::o;11459:307::-;11609:8;-1:-1:-1;;;;;11600:17:179;:5;-1:-1:-1;;;;;11600:17:179;;11592:55;;;;-1:-1:-1;;;11592:55:179;;10378:2:249;11592:55:179;;;10360:21:249;10417:2;10397:18;;;10390:30;10456:27;10436:18;;;10429:55;10501:18;;11592:55:179;10176:349:249;11592:55:179;-1:-1:-1;;;;;11657:25:179;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;11657:46:179;;;;;;;;;;11718:41;;540::249;;;11718::179;;513:18:249;11718:41:179;;;;;;;11459:307;;;:::o;6534:::-;6685:28;6695:4;6701:2;6705:7;6685:9;:28::i;:::-;6731:48;6754:4;6760:2;6764:7;6773:5;6731:22;:48::i;:::-;6723:111;;;;-1:-1:-1;;;6723:111:179;;;;;;;:::i;328:703:207:-;384:13;601:5;610:1;601:10;597:51;;-1:-1:-1;;627:10:207;;;;;;;;;;;;-1:-1:-1;;;627:10:207;;;;;328:703::o;597:51::-;672:5;657:12;711:75;718:9;;711:75;;743:8;;;;:::i;:::-;;-1:-1:-1;765:10:207;;-1:-1:-1;773:2:207;765:10;;:::i;:::-;;;711:75;;;795:19;827:6;817:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:17:207;;795:39;;844:150;851:10;;844:150;;877:11;887:1;877:11;;:::i;:::-;;-1:-1:-1;945:10:207;953:2;945:5;:10;:::i;:::-;932:24;;:2;:24;:::i;:::-;919:39;;902:6;909;902:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;902:56:207;;;;;;;;-1:-1:-1;972:11:207;981:2;972:11;;:::i;:::-;;;844:150;;12319:778:179;12469:4;-1:-1:-1;;;;;12489:13:179;;1450:19:198;:23;12485:606:179;;12524:72;;-1:-1:-1;;;12524:72:179;;-1:-1:-1;;;;;12524:36:179;;;;;:72;;719:10:202;;12575:4:179;;12581:7;;12590:5;;12524:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12524:72:179;;;;;;;;-1:-1:-1;;12524:72:179;;;;;;;;;;;;:::i;:::-;;;12520:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12763:6;:13;12780:1;12763:18;12759:266;;12805:60;;-1:-1:-1;;;12805:60:179;;;;;;;:::i;12759:266::-;12977:6;12971:13;12962:6;12958:2;12954:15;12947:38;12520:519;-1:-1:-1;;;;;;12646:51:179;-1:-1:-1;;;12646:51:179;;-1:-1:-1;12639:58:179;;12485:606;-1:-1:-1;13076:4:179;12319:778;;;;;;:::o;14:131:249:-;-1:-1:-1;;;;;;88:32:249;;78:43;;68:71;;135:1;132;125:12;68:71;14:131;:::o;150:245::-;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:249;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:249;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:249:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:180::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1499:23:249;;1348:180;-1:-1:-1;1348:180:249:o;1741:173::-;1809:20;;-1:-1:-1;;;;;1858:31:249;;1848:42;;1838:70;;1904:1;1901;1894:12;1838:70;1741:173;;;:::o;1919:254::-;1987:6;1995;2048:2;2036:9;2027:7;2023:23;2019:32;2016:52;;;2064:1;2061;2054:12;2016:52;2087:29;2106:9;2087:29;:::i;:::-;2077:39;2163:2;2148:18;;;;2135:32;;-1:-1:-1;;;1919:254:249:o;2178:328::-;2255:6;2263;2271;2324:2;2312:9;2303:7;2299:23;2295:32;2292:52;;;2340:1;2337;2330:12;2292:52;2363:29;2382:9;2363:29;:::i;:::-;2353:39;;2411:38;2445:2;2434:9;2430:18;2411:38;:::i;:::-;2401:48;;2496:2;2485:9;2481:18;2468:32;2458:42;;2178:328;;;;;:::o;2511:186::-;2570:6;2623:2;2611:9;2602:7;2598:23;2594:32;2591:52;;;2639:1;2636;2629:12;2591:52;2662:29;2681:9;2662:29;:::i;2884:347::-;2949:6;2957;3010:2;2998:9;2989:7;2985:23;2981:32;2978:52;;;3026:1;3023;3016:12;2978:52;3049:29;3068:9;3049:29;:::i;:::-;3039:39;;3128:2;3117:9;3113:18;3100:32;3175:5;3168:13;3161:21;3154:5;3151:32;3141:60;;3197:1;3194;3187:12;3141:60;3220:5;3210:15;;;2884:347;;;;;:::o;3236:127::-;3297:10;3292:3;3288:20;3285:1;3278:31;3328:4;3325:1;3318:15;3352:4;3349:1;3342:15;3368:1138;3463:6;3471;3479;3487;3540:3;3528:9;3519:7;3515:23;3511:33;3508:53;;;3557:1;3554;3547:12;3508:53;3580:29;3599:9;3580:29;:::i;:::-;3570:39;;3628:38;3662:2;3651:9;3647:18;3628:38;:::i;:::-;3618:48;;3713:2;3702:9;3698:18;3685:32;3675:42;;3768:2;3757:9;3753:18;3740:32;3791:18;3832:2;3824:6;3821:14;3818:34;;;3848:1;3845;3838:12;3818:34;3886:6;3875:9;3871:22;3861:32;;3931:7;3924:4;3920:2;3916:13;3912:27;3902:55;;3953:1;3950;3943:12;3902:55;3989:2;3976:16;4011:2;4007;4004:10;4001:36;;;4017:18;;:::i;:::-;4092:2;4086:9;4060:2;4146:13;;-1:-1:-1;;4142:22:249;;;4166:2;4138:31;4134:40;4122:53;;;4190:18;;;4210:22;;;4187:46;4184:72;;;4236:18;;:::i;:::-;4276:10;4272:2;4265:22;4311:2;4303:6;4296:18;4351:7;4346:2;4341;4337;4333:11;4329:20;4326:33;4323:53;;;4372:1;4369;4362:12;4323:53;4428:2;4423;4419;4415:11;4410:2;4402:6;4398:15;4385:46;4473:1;4468:2;4463;4455:6;4451:15;4447:24;4440:35;4494:6;4484:16;;;;;;;3368:1138;;;;;;;:::o;4511:260::-;4579:6;4587;4640:2;4628:9;4619:7;4615:23;4611:32;4608:52;;;4656:1;4653;4646:12;4608:52;4679:29;4698:9;4679:29;:::i;:::-;4669:39;;4727:38;4761:2;4750:9;4746:18;4727:38;:::i;:::-;4717:48;;4511:260;;;;;:::o;4776:380::-;4855:1;4851:12;;;;4898;;;4919:61;;4973:4;4965:6;4961:17;4951:27;;4919:61;5026:2;5018:6;5015:14;4995:18;4992:38;4989:161;;5072:10;5067:3;5063:20;5060:1;5053:31;5107:4;5104:1;5097:15;5135:4;5132:1;5125:15;4989:161;;4776:380;;;:::o;6401:413::-;6603:2;6585:21;;;6642:2;6622:18;;;6615:30;6681:34;6676:2;6661:18;;6654:62;-1:-1:-1;;;6747:2:249;6732:18;;6725:47;6804:3;6789:19;;6401:413::o;8056:496::-;8235:3;8273:6;8267:13;8289:66;8348:6;8343:3;8336:4;8328:6;8324:17;8289:66;:::i;:::-;8418:13;;8377:16;;;;8440:70;8418:13;8377:16;8487:4;8475:17;;8440:70;:::i;:::-;8526:20;;8056:496;-1:-1:-1;;;;8056:496:249:o;9781:127::-;9842:10;9837:3;9833:20;9830:1;9823:31;9873:4;9870:1;9863:15;9897:4;9894:1;9887:15;9913:128;9980:9;;;10001:11;;;9998:37;;;10015:18;;:::i;10046:125::-;10111:9;;;10132:10;;;10129:36;;;10145:18;;:::i;10530:414::-;10732:2;10714:21;;;10771:2;10751:18;;;10744:30;10810:34;10805:2;10790:18;;10783:62;-1:-1:-1;;;10876:2:249;10861:18;;10854:48;10934:3;10919:19;;10530:414::o;10949:135::-;10988:3;11009:17;;;11006:43;;11029:18;;:::i;:::-;-1:-1:-1;11076:1:249;11065:13;;10949:135::o;11089:127::-;11150:10;11145:3;11141:20;11138:1;11131:31;11181:4;11178:1;11171:15;11205:4;11202:1;11195:15;11221:120;11261:1;11287;11277:35;;11292:18;;:::i;:::-;-1:-1:-1;11326:9:249;;11221:120::o;11346:112::-;11378:1;11404;11394:35;;11409:18;;:::i;:::-;-1:-1:-1;11443:9:249;;11346:112::o;11463:127::-;11524:10;11519:3;11515:20;11512:1;11505:31;11555:4;11552:1;11545:15;11579:4;11576:1;11569:15;11595:489;-1:-1:-1;;;;;11864:15:249;;;11846:34;;11916:15;;11911:2;11896:18;;11889:43;11963:2;11948:18;;11941:34;;;12011:3;12006:2;11991:18;;11984:31;;;11789:4;;12032:46;;12058:19;;12050:6;12032:46;:::i;:::-;12024:54;11595:489;-1:-1:-1;;;;;;11595:489:249:o;12089:249::-;12158:6;12211:2;12199:9;12190:7;12186:23;12182:32;12179:52;;;12227:1;12224;12217:12;12179:52;12259:9;12253:16;12278:30;12302:5;12278:30;:::i",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
      },
      "ApprovalForAll(address,address,bool)": {
        "details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `tokenId` token is transferred from `from` to `to`."
      }
    },
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "constructor": {
        "details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      }
    },
    "version": 1
  },
  "offset": [
    613,
    14270
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x164 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0xD45 JUMP JUMPDEST PUSH2 0x1FF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x251 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xDB2 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0xDC5 JUMP JUMPDEST PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xDFA JUMP JUMPDEST PUSH2 0x37D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0xE24 JUMP JUMPDEST PUSH2 0x492 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0xE24 JUMP JUMPDEST PUSH2 0x4C3 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xDC5 JUMP JUMPDEST PUSH2 0x4DE JUMP JUMPDEST PUSH2 0x19D PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xE60 JUMP JUMPDEST PUSH2 0x555 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x5DC JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0xE7B JUMP JUMPDEST PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xECD JUMP JUMPDEST PUSH2 0x5FA JUMP JUMPDEST PUSH2 0x104 PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xDC5 JUMP JUMPDEST PUSH2 0x632 JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0xFA9 JUMP JUMPDEST PUSH2 0x71A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x230 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x24B JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x260 SWAP1 PUSH2 0xFDC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x28C SWAP1 PUSH2 0xFDC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2D9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2AE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2D9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2BC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x361 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x388 DUP3 PUSH2 0x4DE JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x3F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x358 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x411 JUMPI POP PUSH2 0x411 DUP2 CALLER PUSH2 0x71A JUMP JUMPDEST PUSH2 0x483 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x358 JUMP JUMPDEST PUSH2 0x48D DUP4 DUP4 PUSH2 0x748 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x49C CALLER DUP3 PUSH2 0x7B6 JUMP JUMPDEST PUSH2 0x4B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x358 SWAP1 PUSH2 0x1016 JUMP JUMPDEST PUSH2 0x48D DUP4 DUP4 DUP4 PUSH2 0x88D JUMP JUMPDEST PUSH2 0x48D DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x5FA JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x24B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x358 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x260 SWAP1 PUSH2 0xFDC JUMP JUMPDEST PUSH2 0x5F6 CALLER DUP4 DUP4 PUSH2 0xA29 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x604 CALLER DUP4 PUSH2 0x7B6 JUMP JUMPDEST PUSH2 0x620 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x358 SWAP1 PUSH2 0x1016 JUMP JUMPDEST PUSH2 0x62C DUP5 DUP5 DUP5 DUP5 PUSH2 0xAF7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6C8 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x6E8 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x713 JUMP JUMPDEST DUP1 PUSH2 0x6F2 DUP5 PUSH2 0xB2A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x703 SWAP3 SWAP2 SWAP1 PUSH2 0x1067 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x77D DUP3 PUSH2 0x4DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x82F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x83A DUP4 PUSH2 0x4DE JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x875 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x86A DUP5 PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x885 JUMPI POP PUSH2 0x885 DUP2 DUP6 PUSH2 0x71A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8A0 DUP3 PUSH2 0x4DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x904 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x358 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x966 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x358 JUMP JUMPDEST PUSH2 0x971 PUSH1 0x0 DUP3 PUSH2 0x748 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x99A SWAP1 DUP5 SWAP1 PUSH2 0x10AC JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x9C8 SWAP1 DUP5 SWAP1 PUSH2 0x10BF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xA8A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x358 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xB02 DUP5 DUP5 DUP5 PUSH2 0x88D JUMP JUMPDEST PUSH2 0xB0E DUP5 DUP5 DUP5 DUP5 PUSH2 0xC2B JUMP JUMPDEST PUSH2 0x62C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x358 SWAP1 PUSH2 0x10D2 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0xB51 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0xB7B JUMPI DUP1 PUSH2 0xB65 DUP2 PUSH2 0x1124 JUMP JUMPDEST SWAP2 POP PUSH2 0xB74 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x1153 JUMP JUMPDEST SWAP2 POP PUSH2 0xB55 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB96 JUMPI PUSH2 0xB96 PUSH2 0xEB7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBC0 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x885 JUMPI PUSH2 0xBD5 PUSH1 0x1 DUP4 PUSH2 0x10AC JUMP JUMPDEST SWAP2 POP PUSH2 0xBE2 PUSH1 0xA DUP7 PUSH2 0x1167 JUMP JUMPDEST PUSH2 0xBED SWAP1 PUSH1 0x30 PUSH2 0x10BF JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC02 JUMPI PUSH2 0xC02 PUSH2 0x117B JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0xC24 PUSH1 0xA DUP7 PUSH2 0x1153 JUMP JUMPDEST SWAP5 POP PUSH2 0xBC4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xD21 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xC6F SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1191 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xCAA JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xCA7 SWAP2 DUP2 ADD SWAP1 PUSH2 0x11CE JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xD07 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xCD8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xCDD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xCFF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x358 SWAP1 PUSH2 0x10D2 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x885 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xD42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x713 DUP2 PUSH2 0xD2C JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD7D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD65 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xD9E DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xD62 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x713 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD86 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xDF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE16 DUP4 PUSH2 0xDDE JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE42 DUP5 PUSH2 0xDDE JUMP JUMPDEST SWAP3 POP PUSH2 0xE50 PUSH1 0x20 DUP6 ADD PUSH2 0xDDE JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x713 DUP3 PUSH2 0xDDE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE97 DUP4 PUSH2 0xDDE JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xEAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xEE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEEC DUP6 PUSH2 0xDDE JUMP JUMPDEST SWAP4 POP PUSH2 0xEFA PUSH1 0x20 DUP7 ADD PUSH2 0xDDE JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xF1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xF44 JUMPI PUSH2 0xF44 PUSH2 0xEB7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xF6C JUMPI PUSH2 0xF6C PUSH2 0xEB7 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xF85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFC5 DUP4 PUSH2 0xDDE JUMP JUMPDEST SWAP2 POP PUSH2 0xFD3 PUSH1 0x20 DUP5 ADD PUSH2 0xDDE JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xFF0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1010 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1079 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xD62 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x108D DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xD62 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x24B JUMPI PUSH2 0x24B PUSH2 0x1096 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x24B JUMPI PUSH2 0x24B PUSH2 0x1096 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1136 JUMPI PUSH2 0x1136 PUSH2 0x1096 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1162 JUMPI PUSH2 0x1162 PUSH2 0x113D JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1176 JUMPI PUSH2 0x1176 PUSH2 0x113D JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x11C4 SWAP1 DUP4 ADD DUP5 PUSH2 0xD86 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x713 DUP2 PUSH2 0xD2C JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0x8ACDB3C06FCEB130887020B79E8EE538ED6C2087DF88AE897807 SWAP11 0xD9 DELEGATECALL SWAP16 PUSH16 0x64736F6C634300081500330000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        613,
        14270
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "MSTORE",
      "path": "179"
    },
    "5": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "CALLVALUE",
      "path": "179"
    },
    "6": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "DUP1",
      "path": "179"
    },
    "7": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "ISZERO",
      "path": "179"
    },
    "8": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "JUMPI",
      "path": "179"
    },
    "12": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "DUP1",
      "path": "179"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "REVERT",
      "path": "179"
    },
    "16": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "17": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "POP",
      "path": "179"
    },
    "18": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "CALLDATASIZE",
      "path": "179"
    },
    "21": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "LT",
      "path": "179"
    },
    "22": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0xCF"
    },
    "25": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "JUMPI",
      "path": "179"
    },
    "26": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "CALLDATALOAD",
      "path": "179"
    },
    "29": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "SHR",
      "path": "179"
    },
    "32": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "DUP1",
      "path": "179"
    },
    "33": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "PUSH4",
      "path": "179",
      "value": "0x6352211E"
    },
    "38": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "GT",
      "path": "179"
    },
    "39": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x8C"
    },
    "42": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "JUMPI",
      "path": "179"
    },
    "43": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "DUP1",
      "path": "179"
    },
    "44": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "PUSH4",
      "path": "179",
      "value": "0xA22CB465"
    },
    "49": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "GT",
      "path": "179"
    },
    "50": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "JUMPI",
      "path": "179"
    },
    "54": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "DUP1",
      "path": "179"
    },
    "55": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "PUSH4",
      "path": "179",
      "value": "0xA22CB465"
    },
    "60": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "EQ",
      "path": "179"
    },
    "61": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x1B3"
    },
    "64": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "JUMPI",
      "path": "179"
    },
    "65": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "DUP1",
      "path": "179"
    },
    "66": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "PUSH4",
      "path": "179",
      "value": "0xB88D4FDE"
    },
    "71": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "EQ",
      "path": "179"
    },
    "72": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x1C6"
    },
    "75": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "JUMPI",
      "path": "179"
    },
    "76": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "DUP1",
      "path": "179"
    },
    "77": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "PUSH4",
      "path": "179",
      "value": "0xC87B56DD"
    },
    "82": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "EQ",
      "path": "179"
    },
    "83": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x1D9"
    },
    "86": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "JUMPI",
      "path": "179"
    },
    "87": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "DUP1",
      "path": "179"
    },
    "88": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "PUSH4",
      "path": "179",
      "value": "0xE985E9C5"
    },
    "93": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "EQ",
      "path": "179"
    },
    "94": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x1EC"
    },
    "97": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "JUMPI",
      "path": "179"
    },
    "98": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "DUP1",
      "path": "179"
    },
    "101": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "REVERT",
      "path": "179"
    },
    "102": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "103": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "DUP1",
      "path": "179"
    },
    "104": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "PUSH4",
      "path": "179",
      "value": "0x6352211E"
    },
    "109": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "EQ",
      "path": "179"
    },
    "110": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x177"
    },
    "113": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "JUMPI",
      "path": "179"
    },
    "114": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "DUP1",
      "path": "179"
    },
    "115": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "PUSH4",
      "path": "179",
      "value": "0x70A08231"
    },
    "120": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "EQ",
      "path": "179"
    },
    "121": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x18A"
    },
    "124": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "JUMPI",
      "path": "179"
    },
    "125": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "DUP1",
      "path": "179"
    },
    "126": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "PUSH4",
      "path": "179",
      "value": "0x95D89B41"
    },
    "131": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "EQ",
      "path": "179"
    },
    "132": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x1AB"
    },
    "135": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "JUMPI",
      "path": "179"
    },
    "136": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x0"
    },
    "138": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "DUP1",
      "path": "179"
    },
    "139": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "REVERT",
      "path": "179"
    },
    "140": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "141": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "DUP1",
      "path": "179"
    },
    "142": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "PUSH4",
      "path": "179",
      "value": "0x1FFC9A7"
    },
    "147": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "EQ",
      "path": "179"
    },
    "148": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0xD4"
    },
    "151": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "JUMPI",
      "path": "179"
    },
    "152": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "DUP1",
      "path": "179"
    },
    "153": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "PUSH4",
      "path": "179",
      "value": "0x6FDDE03"
    },
    "158": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "EQ",
      "path": "179"
    },
    "159": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0xFC"
    },
    "162": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "JUMPI",
      "path": "179"
    },
    "163": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "DUP1",
      "path": "179"
    },
    "164": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "PUSH4",
      "path": "179",
      "value": "0x81812FC"
    },
    "169": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "EQ",
      "path": "179"
    },
    "170": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x111"
    },
    "173": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "JUMPI",
      "path": "179"
    },
    "174": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "DUP1",
      "path": "179"
    },
    "175": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "PUSH4",
      "path": "179",
      "value": "0x95EA7B3"
    },
    "180": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "EQ",
      "path": "179"
    },
    "181": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x13C"
    },
    "184": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "JUMPI",
      "path": "179"
    },
    "185": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "DUP1",
      "path": "179"
    },
    "186": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "PUSH4",
      "path": "179",
      "value": "0x23B872DD"
    },
    "191": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "EQ",
      "path": "179"
    },
    "192": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x151"
    },
    "195": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "JUMPI",
      "path": "179"
    },
    "196": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "DUP1",
      "path": "179"
    },
    "197": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "PUSH4",
      "path": "179",
      "value": "0x42842E0E"
    },
    "202": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "EQ",
      "path": "179"
    },
    "203": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x164"
    },
    "206": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "JUMPI",
      "path": "179"
    },
    "207": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "208": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x0"
    },
    "210": {
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "DUP1",
      "path": "179"
    },
    "211": {
      "first_revert": true,
      "fn": null,
      "offset": [
        613,
        14270
      ],
      "op": "REVERT",
      "path": "179"
    },
    "212": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "213": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0xE7"
    },
    "216": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0xE2"
    },
    "219": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "CALLDATASIZE",
      "path": "179"
    },
    "220": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x4"
    },
    "222": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0xD45"
    },
    "225": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMP",
      "path": "179"
    },
    "226": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "227": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x1FF"
    },
    "230": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMP",
      "path": "179"
    },
    "231": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "232": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x40"
    },
    "234": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "MLOAD",
      "path": "179"
    },
    "235": {
      "op": "SWAP1"
    },
    "236": {
      "op": "ISZERO"
    },
    "237": {
      "op": "ISZERO"
    },
    "238": {
      "op": "DUP2"
    },
    "239": {
      "op": "MSTORE"
    },
    "240": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "242": {
      "op": "ADD"
    },
    "243": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "244": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x40"
    },
    "246": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "MLOAD",
      "path": "179"
    },
    "247": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "DUP1",
      "path": "179"
    },
    "248": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "SWAP2",
      "path": "179"
    },
    "249": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "SUB",
      "path": "179"
    },
    "250": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "251": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "RETURN",
      "path": "179"
    },
    "252": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "253": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x104"
    },
    "256": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x251"
    },
    "259": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMP",
      "path": "179"
    },
    "260": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "261": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x40"
    },
    "263": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "MLOAD",
      "path": "179"
    },
    "264": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0xF3"
    },
    "267": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "SWAP2",
      "path": "179"
    },
    "268": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "269": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0xDB2"
    },
    "272": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMP",
      "path": "179"
    },
    "273": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "274": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x124"
    },
    "277": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x11F"
    },
    "280": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "CALLDATASIZE",
      "path": "179"
    },
    "281": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x4"
    },
    "283": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0xDC5"
    },
    "286": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMP",
      "path": "179"
    },
    "287": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "288": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x2E3"
    },
    "291": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMP",
      "path": "179"
    },
    "292": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "293": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x40"
    },
    "295": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "MLOAD",
      "path": "179"
    },
    "296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "300": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "302": {
      "op": "SHL"
    },
    "303": {
      "op": "SUB"
    },
    "304": {
      "op": "SWAP1"
    },
    "305": {
      "op": "SWAP2"
    },
    "306": {
      "op": "AND"
    },
    "307": {
      "op": "DUP2"
    },
    "308": {
      "op": "MSTORE"
    },
    "309": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "311": {
      "op": "ADD"
    },
    "312": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0xF3"
    },
    "315": {
      "op": "JUMP"
    },
    "316": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "317": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x14F"
    },
    "320": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x14A"
    },
    "323": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "CALLDATASIZE",
      "path": "179"
    },
    "324": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x4"
    },
    "326": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0xDFA"
    },
    "329": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMP",
      "path": "179"
    },
    "330": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "331": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x37D"
    },
    "334": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMP",
      "path": "179"
    },
    "335": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "336": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "STOP",
      "path": "179"
    },
    "337": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "338": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x14F"
    },
    "341": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x15F"
    },
    "344": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "CALLDATASIZE",
      "path": "179"
    },
    "345": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x4"
    },
    "347": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0xE24"
    },
    "350": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4711,
        5041
      ],
      "op": "JUMP",
      "path": "179"
    },
    "351": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "352": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x492"
    },
    "355": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4711,
        5041
      ],
      "op": "JUMP",
      "path": "179"
    },
    "356": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "357": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x14F"
    },
    "360": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x172"
    },
    "363": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "CALLDATASIZE",
      "path": "179"
    },
    "364": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x4"
    },
    "366": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0xE24"
    },
    "369": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5107,
        5286
      ],
      "op": "JUMP",
      "path": "179"
    },
    "370": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "371": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x4C3"
    },
    "374": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5107,
        5286
      ],
      "op": "JUMP",
      "path": "179"
    },
    "375": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "376": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x124"
    },
    "379": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x185"
    },
    "382": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "CALLDATASIZE",
      "path": "179"
    },
    "383": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x4"
    },
    "385": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0xDC5"
    },
    "388": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMP",
      "path": "179"
    },
    "389": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "390": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x4DE"
    },
    "393": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMP",
      "path": "179"
    },
    "394": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "395": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x19D"
    },
    "398": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x198"
    },
    "401": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "CALLDATASIZE",
      "path": "179"
    },
    "402": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x4"
    },
    "404": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0xE60"
    },
    "407": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMP",
      "path": "179"
    },
    "408": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "409": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x555"
    },
    "412": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMP",
      "path": "179"
    },
    "413": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "414": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x40"
    },
    "416": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "MLOAD",
      "path": "179"
    },
    "417": {
      "op": "SWAP1"
    },
    "418": {
      "op": "DUP2"
    },
    "419": {
      "op": "MSTORE"
    },
    "420": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "422": {
      "op": "ADD"
    },
    "423": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0xF3"
    },
    "426": {
      "op": "JUMP"
    },
    "427": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "428": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x104"
    },
    "431": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x5DC"
    },
    "434": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2635,
        2737
      ],
      "op": "JUMP",
      "path": "179"
    },
    "435": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "436": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x14F"
    },
    "439": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x1C1"
    },
    "442": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "CALLDATASIZE",
      "path": "179"
    },
    "443": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x4"
    },
    "445": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0xE7B"
    },
    "448": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4268,
        4421
      ],
      "op": "JUMP",
      "path": "179"
    },
    "449": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "450": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x5EB"
    },
    "453": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4268,
        4421
      ],
      "op": "JUMP",
      "path": "179"
    },
    "454": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "455": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x14F"
    },
    "458": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x1D4"
    },
    "461": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "CALLDATASIZE",
      "path": "179"
    },
    "462": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x4"
    },
    "464": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0xECD"
    },
    "467": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMP",
      "path": "179"
    },
    "468": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "469": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x5FA"
    },
    "472": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMP",
      "path": "179"
    },
    "473": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2803,
        3132
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "474": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2803,
        3132
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x104"
    },
    "477": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2803,
        3132
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x1E7"
    },
    "480": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2803,
        3132
      ],
      "op": "CALLDATASIZE",
      "path": "179"
    },
    "481": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2803,
        3132
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x4"
    },
    "483": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2803,
        3132
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0xDC5"
    },
    "486": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        2803,
        3132
      ],
      "op": "JUMP",
      "path": "179"
    },
    "487": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2803,
        3132
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "488": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2803,
        3132
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x632"
    },
    "491": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        2803,
        3132
      ],
      "op": "JUMP",
      "path": "179"
    },
    "492": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "493": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0xE7"
    },
    "496": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x1FA"
    },
    "499": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "CALLDATASIZE",
      "path": "179"
    },
    "500": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x4"
    },
    "502": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0xFA9"
    },
    "505": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4487,
        4649
      ],
      "op": "JUMP",
      "path": "179"
    },
    "506": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "507": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x71A"
    },
    "510": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4487,
        4649
      ],
      "op": "JUMP",
      "path": "179"
    },
    "511": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "512": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1657,
        1661
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x0"
    },
    "514": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "516": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "518": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "520": {
      "op": "SHL"
    },
    "521": {
      "op": "SUB"
    },
    "522": {
      "op": "NOT"
    },
    "523": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1732
      ],
      "op": "DUP3",
      "path": "179",
      "statement": 0
    },
    "524": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1732
      ],
      "op": "AND",
      "path": "179"
    },
    "525": {
      "op": "PUSH4",
      "value": "0x80AC58CD"
    },
    "530": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "532": {
      "op": "SHL"
    },
    "533": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1732
      ],
      "op": "EQ",
      "path": "179"
    },
    "534": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1732
      ],
      "op": "DUP1",
      "path": "179"
    },
    "535": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1796
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x230"
    },
    "538": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1796
      ],
      "op": "JUMPI",
      "path": "179"
    },
    "539": {
      "op": "POP"
    },
    "540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "542": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "544": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "546": {
      "op": "SHL"
    },
    "547": {
      "op": "SUB"
    },
    "548": {
      "op": "NOT"
    },
    "549": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1748,
        1796
      ],
      "op": "DUP3",
      "path": "179"
    },
    "550": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1748,
        1796
      ],
      "op": "AND",
      "path": "179"
    },
    "551": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "556": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "558": {
      "op": "SHL"
    },
    "559": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1748,
        1796
      ],
      "op": "EQ",
      "path": "179"
    },
    "560": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1796
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "561": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1848
      ],
      "op": "DUP1",
      "path": "179"
    },
    "562": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1848
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x24B"
    },
    "565": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1848
      ],
      "op": "JUMPI",
      "path": "179"
    },
    "566": {
      "op": "POP"
    },
    "567": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "572": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "574": {
      "op": "SHL"
    },
    "575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "577": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "579": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "581": {
      "op": "SHL"
    },
    "582": {
      "op": "SUB"
    },
    "583": {
      "op": "NOT"
    },
    "584": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "DUP4",
      "path": "216",
      "statement": 1
    },
    "585": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "AND",
      "path": "216"
    },
    "586": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "EQ",
      "path": "216"
    },
    "587": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1812,
        1848
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "588": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1673,
        1848
      ],
      "op": "SWAP3",
      "path": "179"
    },
    "589": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "SWAP2",
      "path": "179"
    },
    "590": {
      "op": "POP"
    },
    "591": {
      "op": "POP"
    },
    "592": {
      "fn": "ERC721.supportsInterface",
      "jump": "o",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMP",
      "path": "179"
    },
    "593": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "594": {
      "fn": "ERC721.name",
      "offset": [
        2527,
        2540
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x60"
    },
    "596": {
      "fn": "ERC721.name",
      "offset": [
        2559,
        2564
      ],
      "op": "PUSH1",
      "path": "179",
      "statement": 2,
      "value": "0x0"
    },
    "598": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "179"
    },
    "599": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SLOAD",
      "path": "179"
    },
    "600": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x260"
    },
    "603": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "604": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0xFDC"
    },
    "607": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMP",
      "path": "179"
    },
    "608": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "609": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "179"
    },
    "610": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x1F"
    },
    "612": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "179"
    },
    "613": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x20"
    },
    "615": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "179"
    },
    "616": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP2",
      "path": "179"
    },
    "617": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DIV",
      "path": "179"
    },
    "618": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MUL",
      "path": "179"
    },
    "619": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x20"
    },
    "621": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "179"
    },
    "622": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x40"
    },
    "624": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MLOAD",
      "path": "179"
    },
    "625": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "626": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP2",
      "path": "179"
    },
    "627": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "179"
    },
    "628": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x40"
    },
    "630": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MSTORE",
      "path": "179"
    },
    "631": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "179"
    },
    "632": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP3",
      "path": "179"
    },
    "633": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP2",
      "path": "179"
    },
    "634": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "635": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP2",
      "path": "179"
    },
    "636": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP2",
      "path": "179"
    },
    "637": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MSTORE",
      "path": "179"
    },
    "638": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x20"
    },
    "640": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "179"
    },
    "641": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP3",
      "path": "179"
    },
    "642": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "179"
    },
    "643": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SLOAD",
      "path": "179"
    },
    "644": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x28C"
    },
    "647": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "648": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0xFDC"
    },
    "651": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMP",
      "path": "179"
    },
    "652": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "653": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "179"
    },
    "654": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ISZERO",
      "path": "179"
    },
    "655": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x2D9"
    },
    "658": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPI",
      "path": "179"
    },
    "659": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "179"
    },
    "660": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x1F"
    },
    "662": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "LT",
      "path": "179"
    },
    "663": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x2AE"
    },
    "666": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPI",
      "path": "179"
    },
    "667": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x100"
    },
    "670": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "179"
    },
    "671": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP4",
      "path": "179"
    },
    "672": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SLOAD",
      "path": "179"
    },
    "673": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DIV",
      "path": "179"
    },
    "674": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MUL",
      "path": "179"
    },
    "675": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP4",
      "path": "179"
    },
    "676": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MSTORE",
      "path": "179"
    },
    "677": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP2",
      "path": "179"
    },
    "678": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x20"
    },
    "680": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "179"
    },
    "681": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP2",
      "path": "179"
    },
    "682": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x2D9"
    },
    "685": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMP",
      "path": "179"
    },
    "686": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "687": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP3",
      "path": "179"
    },
    "688": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "179"
    },
    "689": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP2",
      "path": "179"
    },
    "690": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "691": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x0"
    },
    "693": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MSTORE",
      "path": "179"
    },
    "694": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x20"
    },
    "696": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x0"
    },
    "698": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "KECCAK256",
      "path": "179"
    },
    "699": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "700": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "701": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP2",
      "path": "179"
    },
    "702": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SLOAD",
      "path": "179"
    },
    "703": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP2",
      "path": "179"
    },
    "704": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MSTORE",
      "path": "179"
    },
    "705": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "706": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x1"
    },
    "708": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "179"
    },
    "709": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "710": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x20"
    },
    "712": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "179"
    },
    "713": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "179"
    },
    "714": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP4",
      "path": "179"
    },
    "715": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "GT",
      "path": "179"
    },
    "716": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x2BC"
    },
    "719": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPI",
      "path": "179"
    },
    "720": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP3",
      "path": "179"
    },
    "721": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "722": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SUB",
      "path": "179"
    },
    "723": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x1F"
    },
    "725": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "AND",
      "path": "179"
    },
    "726": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP3",
      "path": "179"
    },
    "727": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "179"
    },
    "728": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP2",
      "path": "179"
    },
    "729": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "730": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "POP",
      "path": "179"
    },
    "731": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "POP",
      "path": "179"
    },
    "732": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "POP",
      "path": "179"
    },
    "733": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "POP",
      "path": "179"
    },
    "734": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "POP",
      "path": "179"
    },
    "735": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "736": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "POP",
      "path": "179"
    },
    "737": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "738": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMP",
      "path": "179"
    },
    "739": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "740": {
      "fn": "ERC721.getApproved",
      "offset": [
        4060,
        4067
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x0"
    },
    "742": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "179",
      "statement": 3
    },
    "743": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "179"
    },
    "744": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "179"
    },
    "745": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7239
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x2"
    },
    "747": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x20"
    },
    "749": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "179"
    },
    "750": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x40"
    },
    "752": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "179"
    },
    "753": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "KECCAK256",
      "path": "179"
    },
    "754": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "SLOAD",
      "path": "179"
    },
    "755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "759": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "761": {
      "op": "SHL"
    },
    "762": {
      "op": "SUB"
    },
    "763": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "AND",
      "path": "179"
    },
    "764": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "PUSH2",
      "path": "179",
      "statement": 4,
      "value": "0x361"
    },
    "767": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "JUMPI",
      "path": "179"
    },
    "768": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x40"
    },
    "770": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "MLOAD",
      "path": "179"
    },
    "771": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "775": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "777": {
      "op": "SHL"
    },
    "778": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "DUP2",
      "path": "179"
    },
    "779": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "MSTORE",
      "path": "179"
    },
    "780": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "782": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x4"
    },
    "784": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "DUP3",
      "path": "179"
    },
    "785": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "ADD",
      "path": "179"
    },
    "786": {
      "op": "MSTORE"
    },
    "787": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "789": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "791": {
      "op": "DUP3"
    },
    "792": {
      "op": "ADD"
    },
    "793": {
      "op": "MSTORE"
    },
    "794": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
    },
    "827": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "829": {
      "op": "DUP3"
    },
    "830": {
      "op": "ADD"
    },
    "831": {
      "op": "MSTORE"
    },
    "832": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "845": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "847": {
      "op": "SHL"
    },
    "848": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "850": {
      "op": "DUP3"
    },
    "851": {
      "op": "ADD"
    },
    "852": {
      "op": "MSTORE"
    },
    "853": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "855": {
      "op": "ADD"
    },
    "856": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "857": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x40"
    },
    "859": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "MLOAD",
      "path": "179"
    },
    "860": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "DUP1",
      "path": "179"
    },
    "861": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "SWAP2",
      "path": "179"
    },
    "862": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "SUB",
      "path": "179"
    },
    "863": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "864": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "179"
    },
    "865": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "866": {
      "op": "POP"
    },
    "867": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "PUSH1",
      "path": "179",
      "statement": 5,
      "value": "0x0"
    },
    "869": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "870": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "DUP2",
      "path": "179"
    },
    "871": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "MSTORE",
      "path": "179"
    },
    "872": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4185
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x4"
    },
    "874": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x20"
    },
    "876": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "MSTORE",
      "path": "179"
    },
    "877": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x40"
    },
    "879": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "880": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "KECCAK256",
      "path": "179"
    },
    "881": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "SLOAD",
      "path": "179"
    },
    "882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "884": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "886": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "888": {
      "op": "SHL"
    },
    "889": {
      "op": "SUB"
    },
    "890": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "AND",
      "path": "179"
    },
    "891": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "892": {
      "fn": "ERC721.getApproved",
      "jump": "o",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMP",
      "path": "179"
    },
    "893": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "894": {
      "fn": "ERC721.approve",
      "offset": [
        3602,
        3615
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x0"
    },
    "896": {
      "fn": "ERC721.approve",
      "offset": [
        3618,
        3641
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x388"
    },
    "899": {
      "fn": "ERC721.approve",
      "offset": [
        3633,
        3640
      ],
      "op": "DUP3",
      "path": "179"
    },
    "900": {
      "fn": "ERC721.approve",
      "offset": [
        3618,
        3632
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x4DE"
    },
    "903": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3618,
        3641
      ],
      "op": "JUMP",
      "path": "179"
    },
    "904": {
      "fn": "ERC721.approve",
      "offset": [
        3618,
        3641
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "905": {
      "fn": "ERC721.approve",
      "offset": [
        3602,
        3641
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "906": {
      "fn": "ERC721.approve",
      "offset": [
        3602,
        3641
      ],
      "op": "POP",
      "path": "179"
    },
    "907": {
      "fn": "ERC721.approve",
      "offset": [
        3665,
        3670
      ],
      "op": "DUP1",
      "path": "179",
      "statement": 6
    },
    "908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "910": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "912": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "914": {
      "op": "SHL"
    },
    "915": {
      "op": "SUB"
    },
    "916": {
      "fn": "ERC721.approve",
      "offset": [
        3659,
        3670
      ],
      "op": "AND",
      "path": "179"
    },
    "917": {
      "fn": "ERC721.approve",
      "offset": [
        3659,
        3661
      ],
      "op": "DUP4",
      "path": "179"
    },
    "918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "922": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "924": {
      "op": "SHL"
    },
    "925": {
      "op": "SUB"
    },
    "926": {
      "fn": "ERC721.approve",
      "offset": [
        3659,
        3670
      ],
      "op": "AND",
      "path": "179"
    },
    "927": {
      "branch": 50,
      "fn": "ERC721.approve",
      "offset": [
        3659,
        3670
      ],
      "op": "SUB",
      "path": "179"
    },
    "928": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x3F5"
    },
    "931": {
      "branch": 50,
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "JUMPI",
      "path": "179"
    },
    "932": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x40"
    },
    "934": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "MLOAD",
      "path": "179"
    },
    "935": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "939": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "941": {
      "op": "SHL"
    },
    "942": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "DUP2",
      "path": "179"
    },
    "943": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "MSTORE",
      "path": "179"
    },
    "944": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "946": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x4"
    },
    "948": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "DUP3",
      "path": "179"
    },
    "949": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "ADD",
      "path": "179"
    },
    "950": {
      "op": "MSTORE"
    },
    "951": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "953": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "955": {
      "op": "DUP3"
    },
    "956": {
      "op": "ADD"
    },
    "957": {
      "op": "MSTORE"
    },
    "958": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
    },
    "991": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "993": {
      "op": "DUP3"
    },
    "994": {
      "op": "ADD"
    },
    "995": {
      "op": "MSTORE"
    },
    "996": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "998": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "1000": {
      "op": "SHL"
    },
    "1001": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1003": {
      "op": "DUP3"
    },
    "1004": {
      "op": "ADD"
    },
    "1005": {
      "op": "MSTORE"
    },
    "1006": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1008": {
      "op": "ADD"
    },
    "1009": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x358"
    },
    "1012": {
      "op": "JUMP"
    },
    "1013": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "1014": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "202",
      "statement": 7
    },
    "1015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1017": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1019": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1021": {
      "op": "SHL"
    },
    "1022": {
      "op": "SUB"
    },
    "1023": {
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3761
      ],
      "op": "DUP3",
      "path": "179",
      "statement": 8
    },
    "1024": {
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3761
      ],
      "op": "AND",
      "path": "179"
    },
    "1025": {
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3761
      ],
      "op": "EQ",
      "path": "179"
    },
    "1026": {
      "branch": 51,
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3761
      ],
      "op": "DUP1",
      "path": "179"
    },
    "1027": {
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3802
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x411"
    },
    "1030": {
      "branch": 51,
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3802
      ],
      "op": "JUMPI",
      "path": "179"
    },
    "1031": {
      "op": "POP"
    },
    "1032": {
      "fn": "ERC721.approve",
      "offset": [
        3765,
        3802
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x411"
    },
    "1035": {
      "fn": "ERC721.approve",
      "offset": [
        3782,
        3787
      ],
      "op": "DUP2",
      "path": "179"
    },
    "1036": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "202"
    },
    "1037": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x71A"
    },
    "1040": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4487,
        4649
      ],
      "op": "JUMP",
      "path": "179"
    },
    "1041": {
      "branch": 52,
      "fn": "ERC721.approve",
      "offset": [
        3765,
        3802
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "1042": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x483"
    },
    "1045": {
      "branch": 52,
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "JUMPI",
      "path": "179"
    },
    "1046": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x40"
    },
    "1048": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "MLOAD",
      "path": "179"
    },
    "1049": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1053": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1055": {
      "op": "SHL"
    },
    "1056": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "DUP2",
      "path": "179"
    },
    "1057": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "MSTORE",
      "path": "179"
    },
    "1058": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1060": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x4"
    },
    "1062": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "DUP3",
      "path": "179"
    },
    "1063": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "ADD",
      "path": "179"
    },
    "1064": {
      "op": "MSTORE"
    },
    "1065": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "1067": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1069": {
      "op": "DUP3"
    },
    "1070": {
      "op": "ADD"
    },
    "1071": {
      "op": "MSTORE"
    },
    "1072": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
    },
    "1105": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1107": {
      "op": "DUP3"
    },
    "1108": {
      "op": "ADD"
    },
    "1109": {
      "op": "MSTORE"
    },
    "1110": {
      "op": "PUSH32",
      "value": "0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
    },
    "1143": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1145": {
      "op": "DUP3"
    },
    "1146": {
      "op": "ADD"
    },
    "1147": {
      "op": "MSTORE"
    },
    "1148": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1150": {
      "op": "ADD"
    },
    "1151": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x358"
    },
    "1154": {
      "op": "JUMP"
    },
    "1155": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "1156": {
      "fn": "ERC721.approve",
      "offset": [
        3895,
        3916
      ],
      "op": "PUSH2",
      "path": "179",
      "statement": 9,
      "value": "0x48D"
    },
    "1159": {
      "fn": "ERC721.approve",
      "offset": [
        3904,
        3906
      ],
      "op": "DUP4",
      "path": "179"
    },
    "1160": {
      "fn": "ERC721.approve",
      "offset": [
        3908,
        3915
      ],
      "op": "DUP4",
      "path": "179"
    },
    "1161": {
      "fn": "ERC721.approve",
      "offset": [
        3895,
        3903
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x748"
    },
    "1164": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3895,
        3916
      ],
      "op": "JUMP",
      "path": "179"
    },
    "1165": {
      "fn": "ERC721.approve",
      "offset": [
        3895,
        3916
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "1166": {
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3923
      ],
      "op": "POP",
      "path": "179"
    },
    "1167": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "POP",
      "path": "179"
    },
    "1168": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "POP",
      "path": "179"
    },
    "1169": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMP",
      "path": "179"
    },
    "1170": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "1171": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4900,
        4941
      ],
      "op": "PUSH2",
      "path": "179",
      "statement": 10,
      "value": "0x49C"
    },
    "1174": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "202"
    },
    "1175": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4933,
        4940
      ],
      "op": "DUP3",
      "path": "179"
    },
    "1176": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4900,
        4918
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x7B6"
    },
    "1179": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4900,
        4941
      ],
      "op": "JUMP",
      "path": "179"
    },
    "1180": {
      "branch": 53,
      "fn": "ERC721.transferFrom",
      "offset": [
        4900,
        4941
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "1181": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x4B8"
    },
    "1184": {
      "branch": 53,
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "JUMPI",
      "path": "179"
    },
    "1185": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x40"
    },
    "1187": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "MLOAD",
      "path": "179"
    },
    "1188": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1192": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1194": {
      "op": "SHL"
    },
    "1195": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "DUP2",
      "path": "179"
    },
    "1196": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "MSTORE",
      "path": "179"
    },
    "1197": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x4"
    },
    "1199": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "ADD",
      "path": "179"
    },
    "1200": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x358"
    },
    "1203": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "1204": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x1016"
    },
    "1207": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4892,
        4995
      ],
      "op": "JUMP",
      "path": "179"
    },
    "1208": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "1209": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5006,
        5034
      ],
      "op": "PUSH2",
      "path": "179",
      "statement": 11,
      "value": "0x48D"
    },
    "1212": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5016,
        5020
      ],
      "op": "DUP4",
      "path": "179"
    },
    "1213": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5022,
        5024
      ],
      "op": "DUP4",
      "path": "179"
    },
    "1214": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5026,
        5033
      ],
      "op": "DUP4",
      "path": "179"
    },
    "1215": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5006,
        5015
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x88D"
    },
    "1218": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5006,
        5034
      ],
      "op": "JUMP",
      "path": "179"
    },
    "1219": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "1220": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "PUSH2",
      "path": "179",
      "statement": 12,
      "value": "0x48D"
    },
    "1223": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5257,
        5261
      ],
      "op": "DUP4",
      "path": "179"
    },
    "1224": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5263,
        5265
      ],
      "op": "DUP4",
      "path": "179"
    },
    "1225": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5267,
        5274
      ],
      "op": "DUP4",
      "path": "179"
    },
    "1226": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x40"
    },
    "1228": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "MLOAD",
      "path": "179"
    },
    "1229": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "DUP1",
      "path": "179"
    },
    "1230": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x20"
    },
    "1232": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "ADD",
      "path": "179"
    },
    "1233": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x40"
    },
    "1235": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "MSTORE",
      "path": "179"
    },
    "1236": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "DUP1",
      "path": "179"
    },
    "1237": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x0"
    },
    "1239": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "DUP2",
      "path": "179"
    },
    "1240": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "MSTORE",
      "path": "179"
    },
    "1241": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "POP",
      "path": "179"
    },
    "1242": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5256
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x5FA"
    },
    "1245": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5240,
        5279
      ],
      "op": "JUMP",
      "path": "179"
    },
    "1246": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "1247": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2248,
        2255
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x0"
    },
    "1249": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "DUP2",
      "path": "179"
    },
    "1250": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "DUP2",
      "path": "179"
    },
    "1251": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "MSTORE",
      "path": "179"
    },
    "1252": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2290
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x2"
    },
    "1254": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x20"
    },
    "1256": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "MSTORE",
      "path": "179"
    },
    "1257": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x40"
    },
    "1259": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "DUP2",
      "path": "179"
    },
    "1260": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "KECCAK256",
      "path": "179"
    },
    "1261": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "SLOAD",
      "path": "179"
    },
    "1262": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1264": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1266": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1268": {
      "op": "SHL"
    },
    "1269": {
      "op": "SUB"
    },
    "1270": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "AND",
      "path": "179"
    },
    "1271": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "DUP1",
      "path": "179"
    },
    "1272": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "PUSH2",
      "path": "179",
      "statement": 13,
      "value": "0x24B"
    },
    "1275": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "JUMPI",
      "path": "179"
    },
    "1276": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x40"
    },
    "1278": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "MLOAD",
      "path": "179"
    },
    "1279": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1283": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1285": {
      "op": "SHL"
    },
    "1286": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "DUP2",
      "path": "179"
    },
    "1287": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "MSTORE",
      "path": "179"
    },
    "1288": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1290": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x4"
    },
    "1292": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "DUP3",
      "path": "179"
    },
    "1293": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "ADD",
      "path": "179"
    },
    "1294": {
      "op": "MSTORE"
    },
    "1295": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "1297": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1299": {
      "op": "DUP3"
    },
    "1300": {
      "op": "ADD"
    },
    "1301": {
      "op": "MSTORE"
    },
    "1302": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
    },
    "1335": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1337": {
      "op": "DUP3"
    },
    "1338": {
      "op": "ADD"
    },
    "1339": {
      "op": "MSTORE"
    },
    "1340": {
      "op": "PUSH9",
      "value": "0x32B73A103A37B5B2B7"
    },
    "1350": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "1352": {
      "op": "SHL"
    },
    "1353": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1355": {
      "op": "DUP3"
    },
    "1356": {
      "op": "ADD"
    },
    "1357": {
      "op": "MSTORE"
    },
    "1358": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1360": {
      "op": "ADD"
    },
    "1361": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x358"
    },
    "1364": {
      "op": "JUMP"
    },
    "1365": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "1366": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1986,
        1993
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x0"
    },
    "1368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1370": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1372": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1374": {
      "op": "SHL"
    },
    "1375": {
      "op": "SUB"
    },
    "1376": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2013,
        2032
      ],
      "op": "DUP3",
      "path": "179",
      "statement": 14
    },
    "1377": {
      "branch": 54,
      "fn": "ERC721.balanceOf",
      "offset": [
        2013,
        2032
      ],
      "op": "AND",
      "path": "179"
    },
    "1378": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x5C0"
    },
    "1381": {
      "branch": 54,
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "JUMPI",
      "path": "179"
    },
    "1382": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x40"
    },
    "1384": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "MLOAD",
      "path": "179"
    },
    "1385": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1389": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1391": {
      "op": "SHL"
    },
    "1392": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "DUP2",
      "path": "179"
    },
    "1393": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "MSTORE",
      "path": "179"
    },
    "1394": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1396": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x4"
    },
    "1398": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "DUP3",
      "path": "179"
    },
    "1399": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "ADD",
      "path": "179"
    },
    "1400": {
      "op": "MSTORE"
    },
    "1401": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "1403": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1405": {
      "op": "DUP3"
    },
    "1406": {
      "op": "ADD"
    },
    "1407": {
      "op": "MSTORE"
    },
    "1408": {
      "op": "PUSH32",
      "value": "0x4552433732313A2062616C616E636520717565727920666F7220746865207A65"
    },
    "1441": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1443": {
      "op": "DUP3"
    },
    "1444": {
      "op": "ADD"
    },
    "1445": {
      "op": "MSTORE"
    },
    "1446": {
      "op": "PUSH10",
      "value": "0x726F2061646472657373"
    },
    "1457": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "1459": {
      "op": "SHL"
    },
    "1460": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1462": {
      "op": "DUP3"
    },
    "1463": {
      "op": "ADD"
    },
    "1464": {
      "op": "MSTORE"
    },
    "1465": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1467": {
      "op": "ADD"
    },
    "1468": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x358"
    },
    "1471": {
      "op": "JUMP"
    },
    "1472": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "1473": {
      "op": "POP"
    },
    "1474": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1476": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1478": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1480": {
      "op": "SHL"
    },
    "1481": {
      "op": "SUB"
    },
    "1482": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "AND",
      "path": "179",
      "statement": 15
    },
    "1483": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x0"
    },
    "1485": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "1486": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "DUP2",
      "path": "179"
    },
    "1487": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "MSTORE",
      "path": "179"
    },
    "1488": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2105
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x3"
    },
    "1490": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x20"
    },
    "1492": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "MSTORE",
      "path": "179"
    },
    "1493": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x40"
    },
    "1495": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "1496": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "KECCAK256",
      "path": "179"
    },
    "1497": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "SLOAD",
      "path": "179"
    },
    "1498": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "1499": {
      "fn": "ERC721.balanceOf",
      "jump": "o",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMP",
      "path": "179"
    },
    "1500": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "1501": {
      "fn": "ERC721.symbol",
      "offset": [
        2691,
        2704
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x60"
    },
    "1503": {
      "fn": "ERC721.symbol",
      "offset": [
        2723,
        2730
      ],
      "op": "PUSH1",
      "path": "179",
      "statement": 16,
      "value": "0x1"
    },
    "1505": {
      "fn": "ERC721.symbol",
      "offset": [
        2716,
        2730
      ],
      "op": "DUP1",
      "path": "179"
    },
    "1506": {
      "fn": "ERC721.symbol",
      "offset": [
        2716,
        2730
      ],
      "op": "SLOAD",
      "path": "179"
    },
    "1507": {
      "fn": "ERC721.symbol",
      "offset": [
        2716,
        2730
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x260"
    },
    "1510": {
      "fn": "ERC721.symbol",
      "offset": [
        2716,
        2730
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "1511": {
      "fn": "ERC721.symbol",
      "offset": [
        2716,
        2730
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0xFDC"
    },
    "1514": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2716,
        2730
      ],
      "op": "JUMP",
      "path": "179"
    },
    "1515": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "1516": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4362,
        4414
      ],
      "op": "PUSH2",
      "path": "179",
      "statement": 17,
      "value": "0x5F6"
    },
    "1519": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "202"
    },
    "1520": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4395,
        4403
      ],
      "op": "DUP4",
      "path": "179"
    },
    "1521": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4405,
        4413
      ],
      "op": "DUP4",
      "path": "179"
    },
    "1522": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4362,
        4380
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0xA29"
    },
    "1525": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4362,
        4414
      ],
      "op": "JUMP",
      "path": "179"
    },
    "1526": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4362,
        4414
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "1527": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "POP",
      "path": "179"
    },
    "1528": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "POP",
      "path": "179"
    },
    "1529": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "o",
      "offset": [
        4268,
        4421
      ],
      "op": "JUMP",
      "path": "179"
    },
    "1530": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "1531": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5521,
        5562
      ],
      "op": "PUSH2",
      "path": "179",
      "statement": 18,
      "value": "0x604"
    },
    "1534": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "202"
    },
    "1535": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5554,
        5561
      ],
      "op": "DUP4",
      "path": "179"
    },
    "1536": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5521,
        5539
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x7B6"
    },
    "1539": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5521,
        5562
      ],
      "op": "JUMP",
      "path": "179"
    },
    "1540": {
      "branch": 55,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5521,
        5562
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "1541": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x620"
    },
    "1544": {
      "branch": 55,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "JUMPI",
      "path": "179"
    },
    "1545": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x40"
    },
    "1547": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "MLOAD",
      "path": "179"
    },
    "1548": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1552": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1554": {
      "op": "SHL"
    },
    "1555": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "DUP2",
      "path": "179"
    },
    "1556": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "MSTORE",
      "path": "179"
    },
    "1557": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x4"
    },
    "1559": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "ADD",
      "path": "179"
    },
    "1560": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x358"
    },
    "1563": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "1564": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x1016"
    },
    "1567": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5513,
        5616
      ],
      "op": "JUMP",
      "path": "179"
    },
    "1568": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "1569": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5626,
        5665
      ],
      "op": "PUSH2",
      "path": "179",
      "statement": 19,
      "value": "0x62C"
    },
    "1572": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5644
      ],
      "op": "DUP5",
      "path": "179"
    },
    "1573": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5646,
        5648
      ],
      "op": "DUP5",
      "path": "179"
    },
    "1574": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5650,
        5657
      ],
      "op": "DUP5",
      "path": "179"
    },
    "1575": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5659,
        5664
      ],
      "op": "DUP5",
      "path": "179"
    },
    "1576": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5626,
        5639
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0xAF7"
    },
    "1579": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5626,
        5665
      ],
      "op": "JUMP",
      "path": "179"
    },
    "1580": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5626,
        5665
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "1581": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "POP",
      "path": "179"
    },
    "1582": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "POP",
      "path": "179"
    },
    "1583": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "POP",
      "path": "179"
    },
    "1584": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "POP",
      "path": "179"
    },
    "1585": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "o",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMP",
      "path": "179"
    },
    "1586": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2803,
        3132
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "1587": {
      "fn": "ERC721._exists",
      "offset": [
        7209,
        7213
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x0"
    },
    "1589": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "179"
    },
    "1590": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "179"
    },
    "1591": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "179"
    },
    "1592": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7239
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x2"
    },
    "1594": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x20"
    },
    "1596": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "179"
    },
    "1597": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x40"
    },
    "1599": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "1600": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "KECCAK256",
      "path": "179"
    },
    "1601": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "SLOAD",
      "path": "179"
    },
    "1602": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2876,
        2889
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x60"
    },
    "1604": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2876,
        2889
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "1605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1607": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1609": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1611": {
      "op": "SHL"
    },
    "1612": {
      "op": "SUB"
    },
    "1613": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "AND",
      "path": "179"
    },
    "1614": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2901,
        2977
      ],
      "op": "PUSH2",
      "path": "179",
      "statement": 20,
      "value": "0x6B1"
    },
    "1617": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2901,
        2977
      ],
      "op": "JUMPI",
      "path": "179"
    },
    "1618": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2901,
        2977
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x40"
    },
    "1620": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2901,
        2977
      ],
      "op": "MLOAD",
      "path": "179"
    },
    "1621": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1625": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1627": {
      "op": "SHL"
    },
    "1628": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2901,
        2977
      ],
      "op": "DUP2",
      "path": "179"
    },
    "1629": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2901,
        2977
      ],
      "op": "MSTORE",
      "path": "179"
    },
    "1630": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1632": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2901,
        2977
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x4"
    },
    "1634": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2901,
        2977
      ],
      "op": "DUP3",
      "path": "179"
    },
    "1635": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2901,
        2977
      ],
      "op": "ADD",
      "path": "179"
    },
    "1636": {
      "op": "MSTORE"
    },
    "1637": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "1639": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1641": {
      "op": "DUP3"
    },
    "1642": {
      "op": "ADD"
    },
    "1643": {
      "op": "MSTORE"
    },
    "1644": {
      "op": "PUSH32",
      "value": "0x4552433732314D657461646174613A2055524920717565727920666F72206E6F"
    },
    "1677": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1679": {
      "op": "DUP3"
    },
    "1680": {
      "op": "ADD"
    },
    "1681": {
      "op": "MSTORE"
    },
    "1682": {
      "op": "PUSH15",
      "value": "0x3732BC34B9BA32B73A103A37B5B2B7"
    },
    "1698": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "1700": {
      "op": "SHL"
    },
    "1701": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1703": {
      "op": "DUP3"
    },
    "1704": {
      "op": "ADD"
    },
    "1705": {
      "op": "MSTORE"
    },
    "1706": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1708": {
      "op": "ADD"
    },
    "1709": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2901,
        2977
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x358"
    },
    "1712": {
      "op": "JUMP"
    },
    "1713": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2901,
        2977
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "1714": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2988,
        3009
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x0"
    },
    "1716": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3012,
        3022
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x6C8"
    },
    "1719": {
      "fn": "ERC721._baseURI",
      "offset": [
        3449,
        3458
      ],
      "op": "PUSH1",
      "path": "179",
      "statement": 21,
      "value": "0x40"
    },
    "1721": {
      "fn": "ERC721._baseURI",
      "offset": [
        3449,
        3458
      ],
      "op": "DUP1",
      "path": "179"
    },
    "1722": {
      "fn": "ERC721._baseURI",
      "offset": [
        3449,
        3458
      ],
      "op": "MLOAD",
      "path": "179"
    },
    "1723": {
      "fn": "ERC721._baseURI",
      "offset": [
        3449,
        3458
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x20"
    },
    "1725": {
      "fn": "ERC721._baseURI",
      "offset": [
        3449,
        3458
      ],
      "op": "DUP2",
      "path": "179"
    },
    "1726": {
      "fn": "ERC721._baseURI",
      "offset": [
        3449,
        3458
      ],
      "op": "ADD",
      "path": "179"
    },
    "1727": {
      "fn": "ERC721._baseURI",
      "offset": [
        3449,
        3458
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "1728": {
      "fn": "ERC721._baseURI",
      "offset": [
        3449,
        3458
      ],
      "op": "SWAP2",
      "path": "179"
    },
    "1729": {
      "fn": "ERC721._baseURI",
      "offset": [
        3449,
        3458
      ],
      "op": "MSTORE",
      "path": "179"
    },
    "1730": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1732": {
      "fn": "ERC721._baseURI",
      "offset": [
        3449,
        3458
      ],
      "op": "DUP2",
      "path": "179"
    },
    "1733": {
      "fn": "ERC721._baseURI",
      "offset": [
        3449,
        3458
      ],
      "op": "MSTORE",
      "path": "179"
    },
    "1734": {
      "fn": "ERC721._baseURI",
      "offset": [
        3449,
        3458
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "1735": {
      "fn": "ERC721._baseURI",
      "offset": [
        3373,
        3465
      ],
      "op": "JUMP",
      "path": "179"
    },
    "1736": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3012,
        3022
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "1737": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2988,
        3022
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "1738": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2988,
        3022
      ],
      "op": "POP",
      "path": "179"
    },
    "1739": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3063,
        3064
      ],
      "op": "PUSH1",
      "path": "179",
      "statement": 22,
      "value": "0x0"
    },
    "1741": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3045,
        3052
      ],
      "op": "DUP2",
      "path": "179"
    },
    "1742": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3039,
        3060
      ],
      "op": "MLOAD",
      "path": "179"
    },
    "1743": {
      "branch": 56,
      "fn": "ERC721.tokenURI",
      "offset": [
        3039,
        3064
      ],
      "op": "GT",
      "path": "179"
    },
    "1744": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3039,
        3125
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x6E8"
    },
    "1747": {
      "branch": 56,
      "fn": "ERC721.tokenURI",
      "offset": [
        3039,
        3125
      ],
      "op": "JUMPI",
      "path": "179"
    },
    "1748": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3039,
        3125
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x40"
    },
    "1750": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3039,
        3125
      ],
      "op": "MLOAD",
      "path": "179"
    },
    "1751": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3039,
        3125
      ],
      "op": "DUP1",
      "path": "179"
    },
    "1752": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3039,
        3125
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x20"
    },
    "1754": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3039,
        3125
      ],
      "op": "ADD",
      "path": "179"
    },
    "1755": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3039,
        3125
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x40"
    },
    "1757": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3039,
        3125
      ],
      "op": "MSTORE",
      "path": "179"
    },
    "1758": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3039,
        3125
      ],
      "op": "DUP1",
      "path": "179"
    },
    "1759": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3039,
        3125
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x0"
    },
    "1761": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3039,
        3125
      ],
      "op": "DUP2",
      "path": "179"
    },
    "1762": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3039,
        3125
      ],
      "op": "MSTORE",
      "path": "179"
    },
    "1763": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3039,
        3125
      ],
      "op": "POP",
      "path": "179"
    },
    "1764": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3039,
        3125
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x713"
    },
    "1767": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3039,
        3125
      ],
      "op": "JUMP",
      "path": "179"
    },
    "1768": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3039,
        3125
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "1769": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3091,
        3098
      ],
      "op": "DUP1",
      "path": "179"
    },
    "1770": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3100,
        3118
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x6F2"
    },
    "1773": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3100,
        3107
      ],
      "op": "DUP5",
      "path": "179"
    },
    "1774": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3100,
        3116
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0xB2A"
    },
    "1777": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        3100,
        3118
      ],
      "op": "JUMP",
      "path": "179"
    },
    "1778": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3100,
        3118
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "1779": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x40"
    },
    "1781": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "MLOAD",
      "path": "179"
    },
    "1782": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x20"
    },
    "1784": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "ADD",
      "path": "179"
    },
    "1785": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x703"
    },
    "1788": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "SWAP3",
      "path": "179"
    },
    "1789": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "SWAP2",
      "path": "179"
    },
    "1790": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "1791": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x1067"
    },
    "1794": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        3074,
        3119
      ],
      "op": "JUMP",
      "path": "179"
    },
    "1795": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "1796": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x40"
    },
    "1798": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "MLOAD",
      "path": "179"
    },
    "1799": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x20"
    },
    "1801": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "DUP2",
      "path": "179"
    },
    "1802": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "DUP4",
      "path": "179"
    },
    "1803": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "SUB",
      "path": "179"
    },
    "1804": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "SUB",
      "path": "179"
    },
    "1805": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "DUP2",
      "path": "179"
    },
    "1806": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "MSTORE",
      "path": "179"
    },
    "1807": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "1808": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x40"
    },
    "1810": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "MSTORE",
      "path": "179"
    },
    "1811": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3039,
        3125
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "1812": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3032,
        3125
      ],
      "op": "SWAP4",
      "path": "179"
    },
    "1813": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2803,
        3132
      ],
      "op": "SWAP3",
      "path": "179"
    },
    "1814": {
      "op": "POP"
    },
    "1815": {
      "op": "POP"
    },
    "1816": {
      "op": "POP"
    },
    "1817": {
      "fn": "ERC721.tokenURI",
      "jump": "o",
      "offset": [
        2803,
        3132
      ],
      "op": "JUMP",
      "path": "179"
    },
    "1818": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "1819": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1823": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1825": {
      "op": "SHL"
    },
    "1826": {
      "op": "SUB"
    },
    "1827": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "SWAP2",
      "path": "179",
      "statement": 23
    },
    "1828": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP3",
      "path": "179"
    },
    "1829": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "AND",
      "path": "179"
    },
    "1830": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4584,
        4588
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x0"
    },
    "1832": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "1833": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP2",
      "path": "179"
    },
    "1834": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "MSTORE",
      "path": "179"
    },
    "1835": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4625
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x5"
    },
    "1837": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x20"
    },
    "1839": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "1840": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP2",
      "path": "179"
    },
    "1841": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "MSTORE",
      "path": "179"
    },
    "1842": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x40"
    },
    "1844": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP1",
      "path": "179"
    },
    "1845": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP4",
      "path": "179"
    },
    "1846": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "KECCAK256",
      "path": "179"
    },
    "1847": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP4",
      "path": "179"
    },
    "1848": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "1849": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP5",
      "path": "179"
    },
    "1850": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "AND",
      "path": "179"
    },
    "1851": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "DUP3",
      "path": "179"
    },
    "1852": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "MSTORE",
      "path": "179"
    },
    "1853": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP2",
      "path": "179"
    },
    "1854": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "1855": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP2",
      "path": "179"
    },
    "1856": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "MSTORE",
      "path": "179"
    },
    "1857": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "KECCAK256",
      "path": "179"
    },
    "1858": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SLOAD",
      "path": "179"
    },
    "1859": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0xFF"
    },
    "1861": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "AND",
      "path": "179"
    },
    "1862": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "1863": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "o",
      "offset": [
        4487,
        4649
      ],
      "op": "JUMP",
      "path": "179"
    },
    "1864": {
      "fn": "ERC721._approve",
      "offset": [
        11153,
        11324
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "1865": {
      "fn": "ERC721._approve",
      "offset": [
        11227,
        11251
      ],
      "op": "PUSH1",
      "path": "179",
      "statement": 24,
      "value": "0x0"
    },
    "1867": {
      "fn": "ERC721._approve",
      "offset": [
        11227,
        11251
      ],
      "op": "DUP2",
      "path": "179"
    },
    "1868": {
      "fn": "ERC721._approve",
      "offset": [
        11227,
        11251
      ],
      "op": "DUP2",
      "path": "179"
    },
    "1869": {
      "fn": "ERC721._approve",
      "offset": [
        11227,
        11251
      ],
      "op": "MSTORE",
      "path": "179"
    },
    "1870": {
      "fn": "ERC721._approve",
      "offset": [
        11227,
        11242
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x4"
    },
    "1872": {
      "fn": "ERC721._approve",
      "offset": [
        11227,
        11251
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x20"
    },
    "1874": {
      "fn": "ERC721._approve",
      "offset": [
        11227,
        11251
      ],
      "op": "MSTORE",
      "path": "179"
    },
    "1875": {
      "fn": "ERC721._approve",
      "offset": [
        11227,
        11251
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x40"
    },
    "1877": {
      "fn": "ERC721._approve",
      "offset": [
        11227,
        11251
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "1878": {
      "fn": "ERC721._approve",
      "offset": [
        11227,
        11251
      ],
      "op": "KECCAK256",
      "path": "179"
    },
    "1879": {
      "fn": "ERC721._approve",
      "offset": [
        11227,
        11256
      ],
      "op": "DUP1",
      "path": "179"
    },
    "1880": {
      "fn": "ERC721._approve",
      "offset": [
        11227,
        11256
      ],
      "op": "SLOAD",
      "path": "179"
    },
    "1881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1883": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1885": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1887": {
      "op": "SHL"
    },
    "1888": {
      "op": "SUB"
    },
    "1889": {
      "op": "NOT"
    },
    "1890": {
      "fn": "ERC721._approve",
      "offset": [
        11227,
        11256
      ],
      "op": "AND",
      "path": "179"
    },
    "1891": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1893": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1895": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1897": {
      "op": "SHL"
    },
    "1898": {
      "op": "SUB"
    },
    "1899": {
      "fn": "ERC721._approve",
      "offset": [
        11227,
        11256
      ],
      "op": "DUP5",
      "path": "179"
    },
    "1900": {
      "fn": "ERC721._approve",
      "offset": [
        11227,
        11256
      ],
      "op": "AND",
      "path": "179"
    },
    "1901": {
      "fn": "ERC721._approve",
      "offset": [
        11227,
        11256
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "1902": {
      "fn": "ERC721._approve",
      "offset": [
        11227,
        11256
      ],
      "op": "DUP2",
      "path": "179"
    },
    "1903": {
      "fn": "ERC721._approve",
      "offset": [
        11227,
        11256
      ],
      "op": "OR",
      "path": "179"
    },
    "1904": {
      "fn": "ERC721._approve",
      "offset": [
        11227,
        11256
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "1905": {
      "fn": "ERC721._approve",
      "offset": [
        11227,
        11256
      ],
      "op": "SWAP2",
      "path": "179"
    },
    "1906": {
      "fn": "ERC721._approve",
      "offset": [
        11227,
        11256
      ],
      "op": "SSTORE",
      "path": "179"
    },
    "1907": {
      "fn": "ERC721._approve",
      "offset": [
        11227,
        11251
      ],
      "op": "DUP2",
      "path": "179"
    },
    "1908": {
      "fn": "ERC721._approve",
      "offset": [
        11227,
        11251
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "1909": {
      "fn": "ERC721._approve",
      "offset": [
        11280,
        11303
      ],
      "op": "PUSH2",
      "path": "179",
      "statement": 25,
      "value": "0x77D"
    },
    "1912": {
      "fn": "ERC721._approve",
      "offset": [
        11227,
        11251
      ],
      "op": "DUP3",
      "path": "179"
    },
    "1913": {
      "fn": "ERC721._approve",
      "offset": [
        11280,
        11294
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x4DE"
    },
    "1916": {
      "fn": "ERC721._approve",
      "jump": "i",
      "offset": [
        11280,
        11303
      ],
      "op": "JUMP",
      "path": "179"
    },
    "1917": {
      "fn": "ERC721._approve",
      "offset": [
        11280,
        11303
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "1918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1922": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1924": {
      "op": "SHL"
    },
    "1925": {
      "op": "SUB"
    },
    "1926": {
      "fn": "ERC721._approve",
      "offset": [
        11271,
        11317
      ],
      "op": "AND",
      "path": "179"
    },
    "1927": {
      "fn": "ERC721._approve",
      "offset": [
        11271,
        11317
      ],
      "op": "PUSH32",
      "path": "179",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "1960": {
      "fn": "ERC721._approve",
      "offset": [
        11271,
        11317
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x40"
    },
    "1962": {
      "fn": "ERC721._approve",
      "offset": [
        11271,
        11317
      ],
      "op": "MLOAD",
      "path": "179"
    },
    "1963": {
      "fn": "ERC721._approve",
      "offset": [
        11271,
        11317
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x40"
    },
    "1965": {
      "fn": "ERC721._approve",
      "offset": [
        11271,
        11317
      ],
      "op": "MLOAD",
      "path": "179"
    },
    "1966": {
      "fn": "ERC721._approve",
      "offset": [
        11271,
        11317
      ],
      "op": "DUP1",
      "path": "179"
    },
    "1967": {
      "fn": "ERC721._approve",
      "offset": [
        11271,
        11317
      ],
      "op": "SWAP2",
      "path": "179"
    },
    "1968": {
      "fn": "ERC721._approve",
      "offset": [
        11271,
        11317
      ],
      "op": "SUB",
      "path": "179"
    },
    "1969": {
      "fn": "ERC721._approve",
      "offset": [
        11271,
        11317
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "1970": {
      "fn": "ERC721._approve",
      "offset": [
        11271,
        11317
      ],
      "op": "LOG4",
      "path": "179"
    },
    "1971": {
      "fn": "ERC721._approve",
      "offset": [
        11153,
        11324
      ],
      "op": "POP",
      "path": "179"
    },
    "1972": {
      "fn": "ERC721._approve",
      "offset": [
        11153,
        11324
      ],
      "op": "POP",
      "path": "179"
    },
    "1973": {
      "fn": "ERC721._approve",
      "jump": "o",
      "offset": [
        11153,
        11324
      ],
      "op": "JUMP",
      "path": "179"
    },
    "1974": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7427,
        7771
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "1975": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7520,
        7524
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x0"
    },
    "1977": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "179"
    },
    "1978": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "179"
    },
    "1979": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "179"
    },
    "1980": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7239
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x2"
    },
    "1982": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x20"
    },
    "1984": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "179"
    },
    "1985": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x40"
    },
    "1987": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "179"
    },
    "1988": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "KECCAK256",
      "path": "179"
    },
    "1989": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "SLOAD",
      "path": "179"
    },
    "1990": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1994": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1996": {
      "op": "SHL"
    },
    "1997": {
      "op": "SUB"
    },
    "1998": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "AND",
      "path": "179"
    },
    "1999": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "PUSH2",
      "path": "179",
      "statement": 26,
      "value": "0x82F"
    },
    "2002": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "JUMPI",
      "path": "179"
    },
    "2003": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x40"
    },
    "2005": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "MLOAD",
      "path": "179"
    },
    "2006": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2010": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2012": {
      "op": "SHL"
    },
    "2013": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "DUP2",
      "path": "179"
    },
    "2014": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "MSTORE",
      "path": "179"
    },
    "2015": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2017": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x4"
    },
    "2019": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "DUP3",
      "path": "179"
    },
    "2020": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "ADD",
      "path": "179"
    },
    "2021": {
      "op": "MSTORE"
    },
    "2022": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "2024": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2026": {
      "op": "DUP3"
    },
    "2027": {
      "op": "ADD"
    },
    "2028": {
      "op": "MSTORE"
    },
    "2029": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
    },
    "2062": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2064": {
      "op": "DUP3"
    },
    "2065": {
      "op": "ADD"
    },
    "2066": {
      "op": "MSTORE"
    },
    "2067": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "2080": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "2082": {
      "op": "SHL"
    },
    "2083": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2085": {
      "op": "DUP3"
    },
    "2086": {
      "op": "ADD"
    },
    "2087": {
      "op": "MSTORE"
    },
    "2088": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2090": {
      "op": "ADD"
    },
    "2091": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x358"
    },
    "2094": {
      "op": "JUMP"
    },
    "2095": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "2096": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7619,
        7632
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x0"
    },
    "2098": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7635,
        7658
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x83A"
    },
    "2101": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7650,
        7657
      ],
      "op": "DUP4",
      "path": "179"
    },
    "2102": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7635,
        7649
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x4DE"
    },
    "2105": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7635,
        7658
      ],
      "op": "JUMP",
      "path": "179"
    },
    "2106": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7635,
        7658
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "2107": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7619,
        7658
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "2108": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7619,
        7658
      ],
      "op": "POP",
      "path": "179"
    },
    "2109": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7687,
        7692
      ],
      "op": "DUP1",
      "path": "179",
      "statement": 27
    },
    "2110": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2112": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2114": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2116": {
      "op": "SHL"
    },
    "2117": {
      "op": "SUB"
    },
    "2118": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7692
      ],
      "op": "AND",
      "path": "179"
    },
    "2119": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7683
      ],
      "op": "DUP5",
      "path": "179"
    },
    "2120": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2122": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2124": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2126": {
      "op": "SHL"
    },
    "2127": {
      "op": "SUB"
    },
    "2128": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7692
      ],
      "op": "AND",
      "path": "179"
    },
    "2129": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7692
      ],
      "op": "EQ",
      "path": "179"
    },
    "2130": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7727
      ],
      "op": "DUP1",
      "path": "179"
    },
    "2131": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7727
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x875"
    },
    "2134": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7727
      ],
      "op": "JUMPI",
      "path": "179"
    },
    "2135": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7727
      ],
      "op": "POP",
      "path": "179"
    },
    "2136": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7720,
        7727
      ],
      "op": "DUP4",
      "path": "179"
    },
    "2137": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2141": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2143": {
      "op": "SHL"
    },
    "2144": {
      "op": "SUB"
    },
    "2145": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7696,
        7727
      ],
      "op": "AND",
      "path": "179"
    },
    "2146": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7696,
        7716
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x86A"
    },
    "2149": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7708,
        7715
      ],
      "op": "DUP5",
      "path": "179"
    },
    "2150": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7696,
        7707
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x2E3"
    },
    "2153": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7696,
        7716
      ],
      "op": "JUMP",
      "path": "179"
    },
    "2154": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7696,
        7716
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "2155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2157": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2159": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2161": {
      "op": "SHL"
    },
    "2162": {
      "op": "SUB"
    },
    "2163": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7696,
        7727
      ],
      "op": "AND",
      "path": "179"
    },
    "2164": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7696,
        7727
      ],
      "op": "EQ",
      "path": "179"
    },
    "2165": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7727
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "2166": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7763
      ],
      "op": "DUP1",
      "path": "179"
    },
    "2167": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7763
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x885"
    },
    "2170": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7763
      ],
      "op": "JUMPI",
      "path": "179"
    },
    "2171": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7763
      ],
      "op": "POP",
      "path": "179"
    },
    "2172": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7731,
        7763
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x885"
    },
    "2175": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7748,
        7753
      ],
      "op": "DUP2",
      "path": "179"
    },
    "2176": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7755,
        7762
      ],
      "op": "DUP6",
      "path": "179"
    },
    "2177": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7731,
        7747
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x71A"
    },
    "2180": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7731,
        7763
      ],
      "op": "JUMP",
      "path": "179"
    },
    "2181": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7731,
        7763
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "2182": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7668,
        7764
      ],
      "op": "SWAP5",
      "path": "179"
    },
    "2183": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7427,
        7771
      ],
      "op": "SWAP4",
      "path": "179"
    },
    "2184": {
      "op": "POP"
    },
    "2185": {
      "op": "POP"
    },
    "2186": {
      "op": "POP"
    },
    "2187": {
      "op": "POP"
    },
    "2188": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "o",
      "offset": [
        7427,
        7771
      ],
      "op": "JUMP",
      "path": "179"
    },
    "2189": {
      "fn": "ERC721._transfer",
      "offset": [
        10437,
        11042
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "2190": {
      "fn": "ERC721._transfer",
      "offset": [
        10591,
        10595
      ],
      "op": "DUP3",
      "path": "179",
      "statement": 28
    },
    "2191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2195": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2197": {
      "op": "SHL"
    },
    "2198": {
      "op": "SUB"
    },
    "2199": {
      "fn": "ERC721._transfer",
      "offset": [
        10564,
        10595
      ],
      "op": "AND",
      "path": "179"
    },
    "2200": {
      "fn": "ERC721._transfer",
      "offset": [
        10564,
        10587
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x8A0"
    },
    "2203": {
      "fn": "ERC721._transfer",
      "offset": [
        10579,
        10586
      ],
      "op": "DUP3",
      "path": "179"
    },
    "2204": {
      "fn": "ERC721._transfer",
      "offset": [
        10564,
        10578
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x4DE"
    },
    "2207": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10564,
        10587
      ],
      "op": "JUMP",
      "path": "179"
    },
    "2208": {
      "fn": "ERC721._transfer",
      "offset": [
        10564,
        10587
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "2209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2211": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2213": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2215": {
      "op": "SHL"
    },
    "2216": {
      "op": "SUB"
    },
    "2217": {
      "fn": "ERC721._transfer",
      "offset": [
        10564,
        10595
      ],
      "op": "AND",
      "path": "179"
    },
    "2218": {
      "branch": 57,
      "fn": "ERC721._transfer",
      "offset": [
        10564,
        10595
      ],
      "op": "EQ",
      "path": "179"
    },
    "2219": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10637
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x904"
    },
    "2222": {
      "branch": 57,
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10637
      ],
      "op": "JUMPI",
      "path": "179"
    },
    "2223": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10637
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x40"
    },
    "2225": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10637
      ],
      "op": "MLOAD",
      "path": "179"
    },
    "2226": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2230": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2232": {
      "op": "SHL"
    },
    "2233": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10637
      ],
      "op": "DUP2",
      "path": "179"
    },
    "2234": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10637
      ],
      "op": "MSTORE",
      "path": "179"
    },
    "2235": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2237": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10637
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x4"
    },
    "2239": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10637
      ],
      "op": "DUP3",
      "path": "179"
    },
    "2240": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10637
      ],
      "op": "ADD",
      "path": "179"
    },
    "2241": {
      "op": "MSTORE"
    },
    "2242": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "2244": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2246": {
      "op": "DUP3"
    },
    "2247": {
      "op": "ADD"
    },
    "2248": {
      "op": "MSTORE"
    },
    "2249": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722066726F6D20696E636F727265637420"
    },
    "2282": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2284": {
      "op": "DUP3"
    },
    "2285": {
      "op": "ADD"
    },
    "2286": {
      "op": "MSTORE"
    },
    "2287": {
      "op": "PUSH5",
      "value": "0x37BBB732B9"
    },
    "2293": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "2295": {
      "op": "SHL"
    },
    "2296": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2298": {
      "op": "DUP3"
    },
    "2299": {
      "op": "ADD"
    },
    "2300": {
      "op": "MSTORE"
    },
    "2301": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2303": {
      "op": "ADD"
    },
    "2304": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10637
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x358"
    },
    "2307": {
      "op": "JUMP"
    },
    "2308": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10637
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "2309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2313": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2315": {
      "op": "SHL"
    },
    "2316": {
      "op": "SUB"
    },
    "2317": {
      "fn": "ERC721._transfer",
      "offset": [
        10655,
        10671
      ],
      "op": "DUP3",
      "path": "179",
      "statement": 29
    },
    "2318": {
      "branch": 58,
      "fn": "ERC721._transfer",
      "offset": [
        10655,
        10671
      ],
      "op": "AND",
      "path": "179"
    },
    "2319": {
      "fn": "ERC721._transfer",
      "offset": [
        10647,
        10712
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x966"
    },
    "2322": {
      "branch": 58,
      "fn": "ERC721._transfer",
      "offset": [
        10647,
        10712
      ],
      "op": "JUMPI",
      "path": "179"
    },
    "2323": {
      "fn": "ERC721._transfer",
      "offset": [
        10647,
        10712
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x40"
    },
    "2325": {
      "fn": "ERC721._transfer",
      "offset": [
        10647,
        10712
      ],
      "op": "MLOAD",
      "path": "179"
    },
    "2326": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2330": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2332": {
      "op": "SHL"
    },
    "2333": {
      "fn": "ERC721._transfer",
      "offset": [
        10647,
        10712
      ],
      "op": "DUP2",
      "path": "179"
    },
    "2334": {
      "fn": "ERC721._transfer",
      "offset": [
        10647,
        10712
      ],
      "op": "MSTORE",
      "path": "179"
    },
    "2335": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2337": {
      "fn": "ERC721._transfer",
      "offset": [
        10647,
        10712
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x4"
    },
    "2339": {
      "fn": "ERC721._transfer",
      "offset": [
        10647,
        10712
      ],
      "op": "DUP3",
      "path": "179"
    },
    "2340": {
      "fn": "ERC721._transfer",
      "offset": [
        10647,
        10712
      ],
      "op": "ADD",
      "path": "179"
    },
    "2341": {
      "op": "MSTORE"
    },
    "2342": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2344": {
      "op": "DUP1"
    },
    "2345": {
      "op": "DUP3"
    },
    "2346": {
      "op": "ADD"
    },
    "2347": {
      "op": "MSTORE"
    },
    "2348": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F20746865207A65726F20616464"
    },
    "2381": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2383": {
      "op": "DUP3"
    },
    "2384": {
      "op": "ADD"
    },
    "2385": {
      "op": "MSTORE"
    },
    "2386": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "2391": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2393": {
      "op": "SHL"
    },
    "2394": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2396": {
      "op": "DUP3"
    },
    "2397": {
      "op": "ADD"
    },
    "2398": {
      "op": "MSTORE"
    },
    "2399": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2401": {
      "op": "ADD"
    },
    "2402": {
      "fn": "ERC721._transfer",
      "offset": [
        10647,
        10712
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x358"
    },
    "2405": {
      "op": "JUMP"
    },
    "2406": {
      "fn": "ERC721._transfer",
      "offset": [
        10647,
        10712
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "2407": {
      "fn": "ERC721._transfer",
      "offset": [
        10824,
        10853
      ],
      "op": "PUSH2",
      "path": "179",
      "statement": 30,
      "value": "0x971"
    },
    "2410": {
      "fn": "ERC721._transfer",
      "offset": [
        10841,
        10842
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x0"
    },
    "2412": {
      "fn": "ERC721._transfer",
      "offset": [
        10845,
        10852
      ],
      "op": "DUP3",
      "path": "179"
    },
    "2413": {
      "fn": "ERC721._transfer",
      "offset": [
        10824,
        10832
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x748"
    },
    "2416": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10824,
        10853
      ],
      "op": "JUMP",
      "path": "179"
    },
    "2417": {
      "fn": "ERC721._transfer",
      "offset": [
        10824,
        10853
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "2418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2420": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2422": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2424": {
      "op": "SHL"
    },
    "2425": {
      "op": "SUB"
    },
    "2426": {
      "fn": "ERC721._transfer",
      "offset": [
        10864,
        10879
      ],
      "op": "DUP4",
      "path": "179",
      "statement": 31
    },
    "2427": {
      "fn": "ERC721._transfer",
      "offset": [
        10864,
        10879
      ],
      "op": "AND",
      "path": "179"
    },
    "2428": {
      "fn": "ERC721._transfer",
      "offset": [
        10864,
        10879
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x0"
    },
    "2430": {
      "fn": "ERC721._transfer",
      "offset": [
        10864,
        10879
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "2431": {
      "fn": "ERC721._transfer",
      "offset": [
        10864,
        10879
      ],
      "op": "DUP2",
      "path": "179"
    },
    "2432": {
      "fn": "ERC721._transfer",
      "offset": [
        10864,
        10879
      ],
      "op": "MSTORE",
      "path": "179"
    },
    "2433": {
      "fn": "ERC721._transfer",
      "offset": [
        10864,
        10873
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x3"
    },
    "2435": {
      "fn": "ERC721._transfer",
      "offset": [
        10864,
        10879
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x20"
    },
    "2437": {
      "fn": "ERC721._transfer",
      "offset": [
        10864,
        10879
      ],
      "op": "MSTORE",
      "path": "179"
    },
    "2438": {
      "fn": "ERC721._transfer",
      "offset": [
        10864,
        10879
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x40"
    },
    "2440": {
      "fn": "ERC721._transfer",
      "offset": [
        10864,
        10879
      ],
      "op": "DUP2",
      "path": "179"
    },
    "2441": {
      "fn": "ERC721._transfer",
      "offset": [
        10864,
        10879
      ],
      "op": "KECCAK256",
      "path": "179"
    },
    "2442": {
      "fn": "ERC721._transfer",
      "offset": [
        10864,
        10884
      ],
      "op": "DUP1",
      "path": "179"
    },
    "2443": {
      "fn": "ERC721._transfer",
      "offset": [
        10864,
        10884
      ],
      "op": "SLOAD",
      "path": "179"
    },
    "2444": {
      "fn": "ERC721._transfer",
      "offset": [
        10883,
        10884
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x1"
    },
    "2446": {
      "fn": "ERC721._transfer",
      "offset": [
        10883,
        10884
      ],
      "op": "SWAP3",
      "path": "179"
    },
    "2447": {
      "fn": "ERC721._transfer",
      "offset": [
        10864,
        10879
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "2448": {
      "fn": "ERC721._transfer",
      "offset": [
        10864,
        10884
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x99A"
    },
    "2451": {
      "fn": "ERC721._transfer",
      "offset": [
        10864,
        10884
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "2452": {
      "fn": "ERC721._transfer",
      "offset": [
        10883,
        10884
      ],
      "op": "DUP5",
      "path": "179"
    },
    "2453": {
      "fn": "ERC721._transfer",
      "offset": [
        10883,
        10884
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "2454": {
      "fn": "ERC721._transfer",
      "offset": [
        10864,
        10884
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x10AC"
    },
    "2457": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10864,
        10884
      ],
      "op": "JUMP",
      "path": "179"
    },
    "2458": {
      "fn": "ERC721._transfer",
      "offset": [
        10864,
        10884
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "2459": {
      "fn": "ERC721._transfer",
      "offset": [
        10864,
        10884
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "2460": {
      "fn": "ERC721._transfer",
      "offset": [
        10864,
        10884
      ],
      "op": "SWAP2",
      "path": "179"
    },
    "2461": {
      "fn": "ERC721._transfer",
      "offset": [
        10864,
        10884
      ],
      "op": "SSTORE",
      "path": "179"
    },
    "2462": {
      "op": "POP"
    },
    "2463": {
      "op": "POP"
    },
    "2464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2468": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2470": {
      "op": "SHL"
    },
    "2471": {
      "op": "SUB"
    },
    "2472": {
      "fn": "ERC721._transfer",
      "offset": [
        10894,
        10907
      ],
      "op": "DUP3",
      "path": "179",
      "statement": 32
    },
    "2473": {
      "fn": "ERC721._transfer",
      "offset": [
        10894,
        10907
      ],
      "op": "AND",
      "path": "179"
    },
    "2474": {
      "fn": "ERC721._transfer",
      "offset": [
        10894,
        10907
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x0"
    },
    "2476": {
      "fn": "ERC721._transfer",
      "offset": [
        10894,
        10907
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "2477": {
      "fn": "ERC721._transfer",
      "offset": [
        10894,
        10907
      ],
      "op": "DUP2",
      "path": "179"
    },
    "2478": {
      "fn": "ERC721._transfer",
      "offset": [
        10894,
        10907
      ],
      "op": "MSTORE",
      "path": "179"
    },
    "2479": {
      "fn": "ERC721._transfer",
      "offset": [
        10894,
        10903
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x3"
    },
    "2481": {
      "fn": "ERC721._transfer",
      "offset": [
        10894,
        10907
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x20"
    },
    "2483": {
      "fn": "ERC721._transfer",
      "offset": [
        10894,
        10907
      ],
      "op": "MSTORE",
      "path": "179"
    },
    "2484": {
      "fn": "ERC721._transfer",
      "offset": [
        10894,
        10907
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x40"
    },
    "2486": {
      "fn": "ERC721._transfer",
      "offset": [
        10894,
        10907
      ],
      "op": "DUP2",
      "path": "179"
    },
    "2487": {
      "fn": "ERC721._transfer",
      "offset": [
        10894,
        10907
      ],
      "op": "KECCAK256",
      "path": "179"
    },
    "2488": {
      "fn": "ERC721._transfer",
      "offset": [
        10894,
        10912
      ],
      "op": "DUP1",
      "path": "179"
    },
    "2489": {
      "fn": "ERC721._transfer",
      "offset": [
        10894,
        10912
      ],
      "op": "SLOAD",
      "path": "179"
    },
    "2490": {
      "fn": "ERC721._transfer",
      "offset": [
        10911,
        10912
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x1"
    },
    "2492": {
      "fn": "ERC721._transfer",
      "offset": [
        10911,
        10912
      ],
      "op": "SWAP3",
      "path": "179"
    },
    "2493": {
      "fn": "ERC721._transfer",
      "offset": [
        10894,
        10907
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "2494": {
      "fn": "ERC721._transfer",
      "offset": [
        10894,
        10912
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x9C8"
    },
    "2497": {
      "fn": "ERC721._transfer",
      "offset": [
        10894,
        10912
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "2498": {
      "fn": "ERC721._transfer",
      "offset": [
        10911,
        10912
      ],
      "op": "DUP5",
      "path": "179"
    },
    "2499": {
      "fn": "ERC721._transfer",
      "offset": [
        10911,
        10912
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "2500": {
      "fn": "ERC721._transfer",
      "offset": [
        10894,
        10912
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x10BF"
    },
    "2503": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10894,
        10912
      ],
      "op": "JUMP",
      "path": "179"
    },
    "2504": {
      "fn": "ERC721._transfer",
      "offset": [
        10894,
        10912
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "2505": {
      "fn": "ERC721._transfer",
      "offset": [
        10894,
        10912
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "2506": {
      "fn": "ERC721._transfer",
      "offset": [
        10894,
        10912
      ],
      "op": "SWAP2",
      "path": "179"
    },
    "2507": {
      "fn": "ERC721._transfer",
      "offset": [
        10894,
        10912
      ],
      "op": "SSTORE",
      "path": "179"
    },
    "2508": {
      "op": "POP"
    },
    "2509": {
      "op": "POP"
    },
    "2510": {
      "fn": "ERC721._transfer",
      "offset": [
        10922,
        10938
      ],
      "op": "PUSH1",
      "path": "179",
      "statement": 33,
      "value": "0x0"
    },
    "2512": {
      "fn": "ERC721._transfer",
      "offset": [
        10922,
        10938
      ],
      "op": "DUP2",
      "path": "179"
    },
    "2513": {
      "fn": "ERC721._transfer",
      "offset": [
        10922,
        10938
      ],
      "op": "DUP2",
      "path": "179"
    },
    "2514": {
      "fn": "ERC721._transfer",
      "offset": [
        10922,
        10938
      ],
      "op": "MSTORE",
      "path": "179"
    },
    "2515": {
      "fn": "ERC721._transfer",
      "offset": [
        10922,
        10929
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x2"
    },
    "2517": {
      "fn": "ERC721._transfer",
      "offset": [
        10922,
        10938
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x20"
    },
    "2519": {
      "fn": "ERC721._transfer",
      "offset": [
        10922,
        10938
      ],
      "op": "MSTORE",
      "path": "179"
    },
    "2520": {
      "fn": "ERC721._transfer",
      "offset": [
        10922,
        10938
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x40"
    },
    "2522": {
      "fn": "ERC721._transfer",
      "offset": [
        10922,
        10938
      ],
      "op": "DUP1",
      "path": "179"
    },
    "2523": {
      "fn": "ERC721._transfer",
      "offset": [
        10922,
        10938
      ],
      "op": "DUP3",
      "path": "179"
    },
    "2524": {
      "fn": "ERC721._transfer",
      "offset": [
        10922,
        10938
      ],
      "op": "KECCAK256",
      "path": "179"
    },
    "2525": {
      "fn": "ERC721._transfer",
      "offset": [
        10922,
        10943
      ],
      "op": "DUP1",
      "path": "179"
    },
    "2526": {
      "fn": "ERC721._transfer",
      "offset": [
        10922,
        10943
      ],
      "op": "SLOAD",
      "path": "179"
    },
    "2527": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2531": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2533": {
      "op": "SHL"
    },
    "2534": {
      "op": "SUB"
    },
    "2535": {
      "op": "NOT"
    },
    "2536": {
      "fn": "ERC721._transfer",
      "offset": [
        10922,
        10943
      ],
      "op": "AND",
      "path": "179"
    },
    "2537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2539": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2541": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2543": {
      "op": "SHL"
    },
    "2544": {
      "op": "SUB"
    },
    "2545": {
      "fn": "ERC721._transfer",
      "offset": [
        10922,
        10943
      ],
      "op": "DUP7",
      "path": "179"
    },
    "2546": {
      "fn": "ERC721._transfer",
      "offset": [
        10922,
        10943
      ],
      "op": "DUP2",
      "path": "179"
    },
    "2547": {
      "fn": "ERC721._transfer",
      "offset": [
        10922,
        10943
      ],
      "op": "AND",
      "path": "179"
    },
    "2548": {
      "fn": "ERC721._transfer",
      "offset": [
        10922,
        10943
      ],
      "op": "SWAP2",
      "path": "179"
    },
    "2549": {
      "fn": "ERC721._transfer",
      "offset": [
        10922,
        10943
      ],
      "op": "DUP3",
      "path": "179"
    },
    "2550": {
      "fn": "ERC721._transfer",
      "offset": [
        10922,
        10943
      ],
      "op": "OR",
      "path": "179"
    },
    "2551": {
      "fn": "ERC721._transfer",
      "offset": [
        10922,
        10943
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "2552": {
      "fn": "ERC721._transfer",
      "offset": [
        10922,
        10943
      ],
      "op": "SWAP3",
      "path": "179"
    },
    "2553": {
      "fn": "ERC721._transfer",
      "offset": [
        10922,
        10943
      ],
      "op": "SSTORE",
      "path": "179"
    },
    "2554": {
      "fn": "ERC721._transfer",
      "offset": [
        10959,
        10986
      ],
      "op": "SWAP2",
      "path": "179",
      "statement": 34
    },
    "2555": {
      "fn": "ERC721._transfer",
      "offset": [
        10959,
        10986
      ],
      "op": "MLOAD",
      "path": "179"
    },
    "2556": {
      "fn": "ERC721._transfer",
      "offset": [
        10922,
        10938
      ],
      "op": "DUP5",
      "path": "179"
    },
    "2557": {
      "fn": "ERC721._transfer",
      "offset": [
        10922,
        10938
      ],
      "op": "SWAP4",
      "path": "179"
    },
    "2558": {
      "fn": "ERC721._transfer",
      "offset": [
        10959,
        10986
      ],
      "op": "SWAP2",
      "path": "179"
    },
    "2559": {
      "fn": "ERC721._transfer",
      "offset": [
        10959,
        10986
      ],
      "op": "DUP8",
      "path": "179"
    },
    "2560": {
      "fn": "ERC721._transfer",
      "offset": [
        10959,
        10986
      ],
      "op": "AND",
      "path": "179"
    },
    "2561": {
      "fn": "ERC721._transfer",
      "offset": [
        10959,
        10986
      ],
      "op": "SWAP2",
      "path": "179"
    },
    "2562": {
      "fn": "ERC721._transfer",
      "offset": [
        10959,
        10986
      ],
      "op": "PUSH32",
      "path": "179",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "2595": {
      "fn": "ERC721._transfer",
      "offset": [
        10959,
        10986
      ],
      "op": "SWAP2",
      "path": "179"
    },
    "2596": {
      "fn": "ERC721._transfer",
      "offset": [
        10959,
        10986
      ],
      "op": "LOG4",
      "path": "179"
    },
    "2597": {
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3923
      ],
      "op": "POP",
      "path": "179"
    },
    "2598": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "POP",
      "path": "179"
    },
    "2599": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "POP",
      "path": "179"
    },
    "2600": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMP",
      "path": "179"
    },
    "2601": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11459,
        11766
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "2602": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11609,
        11617
      ],
      "op": "DUP2",
      "path": "179",
      "statement": 35
    },
    "2603": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2607": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2609": {
      "op": "SHL"
    },
    "2610": {
      "op": "SUB"
    },
    "2611": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11600,
        11617
      ],
      "op": "AND",
      "path": "179"
    },
    "2612": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11600,
        11605
      ],
      "op": "DUP4",
      "path": "179"
    },
    "2613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2617": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2619": {
      "op": "SHL"
    },
    "2620": {
      "op": "SUB"
    },
    "2621": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11600,
        11617
      ],
      "op": "AND",
      "path": "179"
    },
    "2622": {
      "branch": 59,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11600,
        11617
      ],
      "op": "SUB",
      "path": "179"
    },
    "2623": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11592,
        11647
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0xA8A"
    },
    "2626": {
      "branch": 59,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11592,
        11647
      ],
      "op": "JUMPI",
      "path": "179"
    },
    "2627": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11592,
        11647
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x40"
    },
    "2629": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11592,
        11647
      ],
      "op": "MLOAD",
      "path": "179"
    },
    "2630": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2634": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2636": {
      "op": "SHL"
    },
    "2637": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11592,
        11647
      ],
      "op": "DUP2",
      "path": "179"
    },
    "2638": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11592,
        11647
      ],
      "op": "MSTORE",
      "path": "179"
    },
    "2639": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2641": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11592,
        11647
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x4"
    },
    "2643": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11592,
        11647
      ],
      "op": "DUP3",
      "path": "179"
    },
    "2644": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11592,
        11647
      ],
      "op": "ADD",
      "path": "179"
    },
    "2645": {
      "op": "MSTORE"
    },
    "2646": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "2648": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2650": {
      "op": "DUP3"
    },
    "2651": {
      "op": "ADD"
    },
    "2652": {
      "op": "MSTORE"
    },
    "2653": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"
    },
    "2686": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2688": {
      "op": "DUP3"
    },
    "2689": {
      "op": "ADD"
    },
    "2690": {
      "op": "MSTORE"
    },
    "2691": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2693": {
      "op": "ADD"
    },
    "2694": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11592,
        11647
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x358"
    },
    "2697": {
      "op": "JUMP"
    },
    "2698": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11592,
        11647
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "2699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2701": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2703": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2705": {
      "op": "SHL"
    },
    "2706": {
      "op": "SUB"
    },
    "2707": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11657,
        11682
      ],
      "op": "DUP4",
      "path": "179",
      "statement": 36
    },
    "2708": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11657,
        11682
      ],
      "op": "DUP2",
      "path": "179"
    },
    "2709": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11657,
        11682
      ],
      "op": "AND",
      "path": "179"
    },
    "2710": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11657,
        11682
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x0"
    },
    "2712": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11657,
        11682
      ],
      "op": "DUP2",
      "path": "179"
    },
    "2713": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11657,
        11682
      ],
      "op": "DUP2",
      "path": "179"
    },
    "2714": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11657,
        11682
      ],
      "op": "MSTORE",
      "path": "179"
    },
    "2715": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11657,
        11675
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x5"
    },
    "2717": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11657,
        11682
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x20"
    },
    "2719": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11657,
        11682
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "2720": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11657,
        11682
      ],
      "op": "DUP2",
      "path": "179"
    },
    "2721": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11657,
        11682
      ],
      "op": "MSTORE",
      "path": "179"
    },
    "2722": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11657,
        11682
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x40"
    },
    "2724": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11657,
        11682
      ],
      "op": "DUP1",
      "path": "179"
    },
    "2725": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11657,
        11682
      ],
      "op": "DUP4",
      "path": "179"
    },
    "2726": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11657,
        11682
      ],
      "op": "KECCAK256",
      "path": "179"
    },
    "2727": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11657,
        11692
      ],
      "op": "SWAP5",
      "path": "179"
    },
    "2728": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11657,
        11692
      ],
      "op": "DUP8",
      "path": "179"
    },
    "2729": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11657,
        11692
      ],
      "op": "AND",
      "path": "179"
    },
    "2730": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11657,
        11692
      ],
      "op": "DUP1",
      "path": "179"
    },
    "2731": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11657,
        11692
      ],
      "op": "DUP5",
      "path": "179"
    },
    "2732": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11657,
        11692
      ],
      "op": "MSTORE",
      "path": "179"
    },
    "2733": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11657,
        11692
      ],
      "op": "SWAP5",
      "path": "179"
    },
    "2734": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11657,
        11692
      ],
      "op": "DUP3",
      "path": "179"
    },
    "2735": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11657,
        11692
      ],
      "op": "MSTORE",
      "path": "179"
    },
    "2736": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11657,
        11692
      ],
      "op": "SWAP2",
      "path": "179"
    },
    "2737": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11657,
        11692
      ],
      "op": "DUP3",
      "path": "179"
    },
    "2738": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11657,
        11692
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "2739": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11657,
        11692
      ],
      "op": "KECCAK256",
      "path": "179"
    },
    "2740": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11657,
        11703
      ],
      "op": "DUP1",
      "path": "179"
    },
    "2741": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11657,
        11703
      ],
      "op": "SLOAD",
      "path": "179"
    },
    "2742": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2744": {
      "op": "NOT"
    },
    "2745": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11657,
        11703
      ],
      "op": "AND",
      "path": "179"
    },
    "2746": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11657,
        11703
      ],
      "op": "DUP7",
      "path": "179"
    },
    "2747": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11657,
        11703
      ],
      "op": "ISZERO",
      "path": "179"
    },
    "2748": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11657,
        11703
      ],
      "op": "ISZERO",
      "path": "179"
    },
    "2749": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11657,
        11703
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "2750": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11657,
        11703
      ],
      "op": "DUP2",
      "path": "179"
    },
    "2751": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11657,
        11703
      ],
      "op": "OR",
      "path": "179"
    },
    "2752": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11657,
        11703
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "2753": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11657,
        11703
      ],
      "op": "SWAP2",
      "path": "179"
    },
    "2754": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11657,
        11703
      ],
      "op": "SSTORE",
      "path": "179"
    },
    "2755": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11718,
        11759
      ],
      "op": "SWAP2",
      "path": "179",
      "statement": 37
    },
    "2756": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11718,
        11759
      ],
      "op": "MLOAD",
      "path": "179"
    },
    "2757": {
      "op": "SWAP2"
    },
    "2758": {
      "op": "DUP3"
    },
    "2759": {
      "op": "MSTORE"
    },
    "2760": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11718,
        11759
      ],
      "op": "PUSH32",
      "path": "179",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "2793": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11718,
        11759
      ],
      "op": "SWAP2",
      "path": "179"
    },
    "2794": {
      "op": "ADD"
    },
    "2795": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11718,
        11759
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x40"
    },
    "2797": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11718,
        11759
      ],
      "op": "MLOAD",
      "path": "179"
    },
    "2798": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11718,
        11759
      ],
      "op": "DUP1",
      "path": "179"
    },
    "2799": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11718,
        11759
      ],
      "op": "SWAP2",
      "path": "179"
    },
    "2800": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11718,
        11759
      ],
      "op": "SUB",
      "path": "179"
    },
    "2801": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11718,
        11759
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "2802": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11718,
        11759
      ],
      "op": "LOG3",
      "path": "179"
    },
    "2803": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11459,
        11766
      ],
      "op": "POP",
      "path": "179"
    },
    "2804": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11459,
        11766
      ],
      "op": "POP",
      "path": "179"
    },
    "2805": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11459,
        11766
      ],
      "op": "POP",
      "path": "179"
    },
    "2806": {
      "fn": "ERC721._setApprovalForAll",
      "jump": "o",
      "offset": [
        11459,
        11766
      ],
      "op": "JUMP",
      "path": "179"
    },
    "2807": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6534,
        6841
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "2808": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6685,
        6713
      ],
      "op": "PUSH2",
      "path": "179",
      "statement": 38,
      "value": "0xB02"
    },
    "2811": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6695,
        6699
      ],
      "op": "DUP5",
      "path": "179"
    },
    "2812": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6701,
        6703
      ],
      "op": "DUP5",
      "path": "179"
    },
    "2813": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6705,
        6712
      ],
      "op": "DUP5",
      "path": "179"
    },
    "2814": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6685,
        6694
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x88D"
    },
    "2817": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6685,
        6713
      ],
      "op": "JUMP",
      "path": "179"
    },
    "2818": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6685,
        6713
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "2819": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6731,
        6779
      ],
      "op": "PUSH2",
      "path": "179",
      "statement": 39,
      "value": "0xB0E"
    },
    "2822": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6754,
        6758
      ],
      "op": "DUP5",
      "path": "179"
    },
    "2823": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6760,
        6762
      ],
      "op": "DUP5",
      "path": "179"
    },
    "2824": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6764,
        6771
      ],
      "op": "DUP5",
      "path": "179"
    },
    "2825": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6773,
        6778
      ],
      "op": "DUP5",
      "path": "179"
    },
    "2826": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6731,
        6753
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0xC2B"
    },
    "2829": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6731,
        6779
      ],
      "op": "JUMP",
      "path": "179"
    },
    "2830": {
      "branch": 60,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6731,
        6779
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "2831": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x62C"
    },
    "2834": {
      "branch": 60,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "JUMPI",
      "path": "179"
    },
    "2835": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x40"
    },
    "2837": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "MLOAD",
      "path": "179"
    },
    "2838": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2842": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2844": {
      "op": "SHL"
    },
    "2845": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "DUP2",
      "path": "179"
    },
    "2846": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "MSTORE",
      "path": "179"
    },
    "2847": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x4"
    },
    "2849": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "ADD",
      "path": "179"
    },
    "2850": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x358"
    },
    "2853": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "2854": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x10D2"
    },
    "2857": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6723,
        6834
      ],
      "op": "JUMP",
      "path": "179"
    },
    "2858": {
      "fn": "Strings.toString",
      "offset": [
        328,
        1031
      ],
      "op": "JUMPDEST",
      "path": "207"
    },
    "2859": {
      "fn": "Strings.toString",
      "offset": [
        384,
        397
      ],
      "op": "PUSH1",
      "path": "207",
      "value": "0x60"
    },
    "2861": {
      "fn": "Strings.toString",
      "offset": [
        601,
        606
      ],
      "op": "DUP2",
      "path": "207"
    },
    "2862": {
      "fn": "Strings.toString",
      "offset": [
        610,
        611
      ],
      "op": "PUSH1",
      "path": "207",
      "value": "0x0"
    },
    "2864": {
      "branch": 62,
      "fn": "Strings.toString",
      "offset": [
        601,
        611
      ],
      "op": "SUB",
      "path": "207"
    },
    "2865": {
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "PUSH2",
      "path": "207",
      "value": "0xB51"
    },
    "2868": {
      "branch": 62,
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "JUMPI",
      "path": "207"
    },
    "2869": {
      "op": "POP"
    },
    "2870": {
      "op": "POP"
    },
    "2871": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "207",
      "statement": 40,
      "value": "0x40"
    },
    "2873": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP1",
      "path": "207"
    },
    "2874": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MLOAD",
      "path": "207"
    },
    "2875": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP1",
      "path": "207"
    },
    "2876": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP3",
      "path": "207"
    },
    "2877": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "ADD",
      "path": "207"
    },
    "2878": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP1",
      "path": "207"
    },
    "2879": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP2",
      "path": "207"
    },
    "2880": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "207"
    },
    "2881": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "207",
      "value": "0x1"
    },
    "2883": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP2",
      "path": "207"
    },
    "2884": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "207"
    },
    "2885": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "2887": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "2889": {
      "op": "SHL"
    },
    "2890": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "207",
      "value": "0x20"
    },
    "2892": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP3",
      "path": "207"
    },
    "2893": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "ADD",
      "path": "207"
    },
    "2894": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "207"
    },
    "2895": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP1",
      "path": "207"
    },
    "2896": {
      "fn": "Strings.toString",
      "jump": "o",
      "offset": [
        328,
        1031
      ],
      "op": "JUMP",
      "path": "207"
    },
    "2897": {
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "JUMPDEST",
      "path": "207"
    },
    "2898": {
      "fn": "Strings.toString",
      "offset": [
        672,
        677
      ],
      "op": "DUP2",
      "path": "207"
    },
    "2899": {
      "fn": "Strings.toString",
      "offset": [
        657,
        669
      ],
      "op": "PUSH1",
      "path": "207",
      "value": "0x0"
    },
    "2901": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPDEST",
      "path": "207"
    },
    "2902": {
      "fn": "Strings.toString",
      "offset": [
        718,
        727
      ],
      "op": "DUP2",
      "path": "207"
    },
    "2903": {
      "fn": "Strings.toString",
      "offset": [
        718,
        727
      ],
      "op": "ISZERO",
      "path": "207"
    },
    "2904": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "PUSH2",
      "path": "207",
      "value": "0xB7B"
    },
    "2907": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPI",
      "path": "207"
    },
    "2908": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "DUP1",
      "path": "207",
      "statement": 41
    },
    "2909": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "PUSH2",
      "path": "207",
      "value": "0xB65"
    },
    "2912": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "DUP2",
      "path": "207"
    },
    "2913": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "PUSH2",
      "path": "207",
      "value": "0x1124"
    },
    "2916": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        743,
        751
      ],
      "op": "JUMP",
      "path": "207"
    },
    "2917": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "JUMPDEST",
      "path": "207"
    },
    "2918": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "SWAP2",
      "path": "207"
    },
    "2919": {
      "op": "POP"
    },
    "2920": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "PUSH2",
      "path": "207",
      "statement": 42,
      "value": "0xB74"
    },
    "2923": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "SWAP1",
      "path": "207"
    },
    "2924": {
      "op": "POP"
    },
    "2925": {
      "fn": "Strings.toString",
      "offset": [
        773,
        775
      ],
      "op": "PUSH1",
      "path": "207",
      "value": "0xA"
    },
    "2927": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "DUP4",
      "path": "207"
    },
    "2928": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "PUSH2",
      "path": "207",
      "value": "0x1153"
    },
    "2931": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        765,
        775
      ],
      "op": "JUMP",
      "path": "207"
    },
    "2932": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "JUMPDEST",
      "path": "207"
    },
    "2933": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "SWAP2",
      "path": "207"
    },
    "2934": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "POP",
      "path": "207"
    },
    "2935": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "PUSH2",
      "path": "207",
      "value": "0xB55"
    },
    "2938": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMP",
      "path": "207"
    },
    "2939": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPDEST",
      "path": "207"
    },
    "2940": {
      "fn": "Strings.toString",
      "offset": [
        795,
        814
      ],
      "op": "PUSH1",
      "path": "207",
      "value": "0x0"
    },
    "2942": {
      "fn": "Strings.toString",
      "offset": [
        827,
        833
      ],
      "op": "DUP2",
      "path": "207"
    },
    "2943": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH8",
      "path": "207",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2952": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP2",
      "path": "207"
    },
    "2953": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "GT",
      "path": "207"
    },
    "2954": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ISZERO",
      "path": "207"
    },
    "2955": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "207",
      "value": "0xB96"
    },
    "2958": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPI",
      "path": "207"
    },
    "2959": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "207",
      "value": "0xB96"
    },
    "2962": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "207",
      "value": "0xEB7"
    },
    "2965": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        817,
        834
      ],
      "op": "JUMP",
      "path": "207"
    },
    "2966": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPDEST",
      "path": "207"
    },
    "2967": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "207",
      "value": "0x40"
    },
    "2969": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MLOAD",
      "path": "207"
    },
    "2970": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "SWAP1",
      "path": "207"
    },
    "2971": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "207"
    },
    "2972": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "207"
    },
    "2973": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MSTORE",
      "path": "207"
    },
    "2974": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "207"
    },
    "2975": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "207",
      "value": "0x1F"
    },
    "2977": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "207"
    },
    "2978": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "207",
      "value": "0x1F"
    },
    "2980": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "NOT",
      "path": "207"
    },
    "2981": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "AND",
      "path": "207"
    },
    "2982": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "207",
      "value": "0x20"
    },
    "2984": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "207"
    },
    "2985": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "207"
    },
    "2986": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "207"
    },
    "2987": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "207",
      "value": "0x40"
    },
    "2989": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MSTORE",
      "path": "207"
    },
    "2990": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "207"
    },
    "2991": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ISZERO",
      "path": "207"
    },
    "2992": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "207",
      "value": "0xBC0"
    },
    "2995": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPI",
      "path": "207"
    },
    "2996": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "207",
      "value": "0x20"
    },
    "2998": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "207"
    },
    "2999": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "207"
    },
    "3000": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP2",
      "path": "207"
    },
    "3001": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "207"
    },
    "3002": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "CALLDATASIZE",
      "path": "207"
    },
    "3003": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP4",
      "path": "207"
    },
    "3004": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "CALLDATACOPY",
      "path": "207"
    },
    "3005": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "207"
    },
    "3006": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "SWAP1",
      "path": "207"
    },
    "3007": {
      "op": "POP"
    },
    "3008": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPDEST",
      "path": "207"
    },
    "3009": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "POP",
      "path": "207"
    },
    "3010": {
      "fn": "Strings.toString",
      "offset": [
        795,
        834
      ],
      "op": "SWAP1",
      "path": "207"
    },
    "3011": {
      "fn": "Strings.toString",
      "offset": [
        795,
        834
      ],
      "op": "POP",
      "path": "207"
    },
    "3012": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMPDEST",
      "path": "207"
    },
    "3013": {
      "fn": "Strings.toString",
      "offset": [
        851,
        861
      ],
      "op": "DUP5",
      "path": "207"
    },
    "3014": {
      "fn": "Strings.toString",
      "offset": [
        851,
        861
      ],
      "op": "ISZERO",
      "path": "207"
    },
    "3015": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "PUSH2",
      "path": "207",
      "value": "0x885"
    },
    "3018": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMPI",
      "path": "207"
    },
    "3019": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "PUSH2",
      "path": "207",
      "statement": 43,
      "value": "0xBD5"
    },
    "3022": {
      "fn": "Strings.toString",
      "offset": [
        887,
        888
      ],
      "op": "PUSH1",
      "path": "207",
      "value": "0x1"
    },
    "3024": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "DUP4",
      "path": "207"
    },
    "3025": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "PUSH2",
      "path": "207",
      "value": "0x10AC"
    },
    "3028": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        877,
        888
      ],
      "op": "JUMP",
      "path": "207"
    },
    "3029": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "JUMPDEST",
      "path": "207"
    },
    "3030": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "SWAP2",
      "path": "207"
    },
    "3031": {
      "op": "POP"
    },
    "3032": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "PUSH2",
      "path": "207",
      "statement": 44,
      "value": "0xBE2"
    },
    "3035": {
      "fn": "Strings.toString",
      "offset": [
        953,
        955
      ],
      "op": "PUSH1",
      "path": "207",
      "value": "0xA"
    },
    "3037": {
      "fn": "Strings.toString",
      "offset": [
        945,
        950
      ],
      "op": "DUP7",
      "path": "207"
    },
    "3038": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "PUSH2",
      "path": "207",
      "value": "0x1167"
    },
    "3041": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        945,
        955
      ],
      "op": "JUMP",
      "path": "207"
    },
    "3042": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "JUMPDEST",
      "path": "207"
    },
    "3043": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "PUSH2",
      "path": "207",
      "value": "0xBED"
    },
    "3046": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "SWAP1",
      "path": "207"
    },
    "3047": {
      "fn": "Strings.toString",
      "offset": [
        932,
        934
      ],
      "op": "PUSH1",
      "path": "207",
      "value": "0x30"
    },
    "3049": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "PUSH2",
      "path": "207",
      "value": "0x10BF"
    },
    "3052": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        932,
        956
      ],
      "op": "JUMP",
      "path": "207"
    },
    "3053": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "JUMPDEST",
      "path": "207"
    },
    "3054": {
      "fn": "Strings.toString",
      "offset": [
        919,
        958
      ],
      "op": "PUSH1",
      "path": "207",
      "value": "0xF8"
    },
    "3056": {
      "fn": "Strings.toString",
      "offset": [
        919,
        958
      ],
      "op": "SHL",
      "path": "207"
    },
    "3057": {
      "fn": "Strings.toString",
      "offset": [
        902,
        908
      ],
      "op": "DUP2",
      "path": "207"
    },
    "3058": {
      "fn": "Strings.toString",
      "offset": [
        909,
        915
      ],
      "op": "DUP4",
      "path": "207"
    },
    "3059": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "DUP2",
      "path": "207"
    },
    "3060": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "MLOAD",
      "path": "207"
    },
    "3061": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "DUP2",
      "path": "207"
    },
    "3062": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "LT",
      "path": "207"
    },
    "3063": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "207",
      "value": "0xC02"
    },
    "3066": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "JUMPI",
      "path": "207"
    },
    "3067": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "207",
      "value": "0xC02"
    },
    "3070": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "207",
      "value": "0x117B"
    },
    "3073": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        902,
        916
      ],
      "op": "JUMP",
      "path": "207"
    },
    "3074": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "JUMPDEST",
      "path": "207"
    },
    "3075": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH1",
      "path": "207",
      "value": "0x20"
    },
    "3077": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "207"
    },
    "3078": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "207"
    },
    "3079": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "207"
    },
    "3080": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3082": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3084": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "3086": {
      "op": "SHL"
    },
    "3087": {
      "op": "SUB"
    },
    "3088": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "NOT",
      "path": "207"
    },
    "3089": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "AND",
      "path": "207"
    },
    "3090": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "207"
    },
    "3091": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "DUP2",
      "path": "207"
    },
    "3092": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "PUSH1",
      "path": "207",
      "value": "0x0"
    },
    "3094": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "BYTE",
      "path": "207"
    },
    "3095": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "207"
    },
    "3096": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "MSTORE8",
      "path": "207"
    },
    "3097": {
      "op": "POP"
    },
    "3098": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "PUSH2",
      "path": "207",
      "statement": 45,
      "value": "0xC24"
    },
    "3101": {
      "fn": "Strings.toString",
      "offset": [
        981,
        983
      ],
      "op": "PUSH1",
      "path": "207",
      "value": "0xA"
    },
    "3103": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "DUP7",
      "path": "207"
    },
    "3104": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "PUSH2",
      "path": "207",
      "value": "0x1153"
    },
    "3107": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        972,
        983
      ],
      "op": "JUMP",
      "path": "207"
    },
    "3108": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "JUMPDEST",
      "path": "207"
    },
    "3109": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "SWAP5",
      "path": "207"
    },
    "3110": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "POP",
      "path": "207"
    },
    "3111": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "PUSH2",
      "path": "207",
      "value": "0xBC4"
    },
    "3114": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMP",
      "path": "207"
    },
    "3115": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12319,
        13097
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "3116": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12469,
        12473
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x0"
    },
    "3118": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3120": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3122": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3124": {
      "op": "SHL"
    },
    "3125": {
      "op": "SUB"
    },
    "3126": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12489,
        12502
      ],
      "op": "DUP5",
      "path": "179"
    },
    "3127": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12489,
        12502
      ],
      "op": "AND",
      "path": "179"
    },
    "3128": {
      "fn": "Address.isContract",
      "offset": [
        1450,
        1469
      ],
      "op": "EXTCODESIZE",
      "path": "198",
      "statement": 46
    },
    "3129": {
      "fn": "Address.isContract",
      "offset": [
        1450,
        1473
      ],
      "op": "ISZERO",
      "path": "198"
    },
    "3130": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12485,
        13091
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0xD21"
    },
    "3133": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12485,
        13091
      ],
      "op": "JUMPI",
      "path": "179"
    },
    "3134": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12524,
        12596
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x40"
    },
    "3136": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12524,
        12596
      ],
      "op": "MLOAD",
      "path": "179"
    },
    "3137": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "3142": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3144": {
      "op": "SHL"
    },
    "3145": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12524,
        12596
      ],
      "op": "DUP2",
      "path": "179"
    },
    "3146": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12524,
        12596
      ],
      "op": "MSTORE",
      "path": "179"
    },
    "3147": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3149": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3151": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3153": {
      "op": "SHL"
    },
    "3154": {
      "op": "SUB"
    },
    "3155": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12524,
        12560
      ],
      "op": "DUP6",
      "path": "179"
    },
    "3156": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12524,
        12560
      ],
      "op": "AND",
      "path": "179"
    },
    "3157": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12524,
        12560
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "3158": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12524,
        12560
      ],
      "op": "PUSH4",
      "path": "179",
      "value": "0x150B7A02"
    },
    "3163": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12524,
        12560
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "3164": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12524,
        12596
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0xC6F"
    },
    "3167": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12524,
        12596
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "3168": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "202"
    },
    "3169": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "202"
    },
    "3170": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12575,
        12579
      ],
      "op": "DUP10",
      "path": "179"
    },
    "3171": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12575,
        12579
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "3172": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12581,
        12588
      ],
      "op": "DUP9",
      "path": "179"
    },
    "3173": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12581,
        12588
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "3174": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12590,
        12595
      ],
      "op": "DUP9",
      "path": "179"
    },
    "3175": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12590,
        12595
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "3176": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12524,
        12596
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x4"
    },
    "3178": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12524,
        12596
      ],
      "op": "ADD",
      "path": "179"
    },
    "3179": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12524,
        12596
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x1191"
    },
    "3182": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12524,
        12596
      ],
      "op": "JUMP",
      "path": "179"
    },
    "3183": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12524,
        12596
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "3184": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12524,
        12596
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x20"
    },
    "3186": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12524,
        12596
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x40"
    },
    "3188": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12524,
        12596
      ],
      "op": "MLOAD",
      "path": "179"
    },
    "3189": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12524,
        12596
      ],
      "op": "DUP1",
      "path": "179"
    },
    "3190": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12524,
        12596
      ],
      "op": "DUP4",
      "path": "179"
    },
    "3191": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12524,
        12596
      ],
      "op": "SUB",
      "path": "179"
    },
    "3192": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12524,
        12596
      ],
      "op": "DUP2",
      "path": "179"
    },
    "3193": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12524,
        12596
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x0"
    },
    "3195": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12524,
        12596
      ],
      "op": "DUP8",
      "path": "179"
    },
    "3196": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12524,
        12596
      ],
      "op": "GAS",
      "path": "179"
    },
    "3197": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12524,
        12596
      ],
      "op": "CALL",
      "path": "179"
    },
    "3198": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12524,
        12596
      ],
      "op": "SWAP3",
      "path": "179"
    },
    "3199": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12524,
        12596
      ],
      "op": "POP",
      "path": "179"
    },
    "3200": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12524,
        12596
      ],
      "op": "POP",
      "path": "179"
    },
    "3201": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12524,
        12596
      ],
      "op": "POP",
      "path": "179"
    },
    "3202": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12524,
        12596
      ],
      "op": "DUP1",
      "path": "179"
    },
    "3203": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12524,
        12596
      ],
      "op": "ISZERO",
      "path": "179"
    },
    "3204": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12524,
        12596
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0xCAA"
    },
    "3207": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12524,
        12596
      ],
      "op": "JUMPI",
      "path": "179"
    },
    "3208": {
      "op": "POP"
    },
    "3209": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12524,
        12596
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x40"
    },
    "3211": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12524,
        12596
      ],
      "op": "DUP1",
      "path": "179"
    },
    "3212": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12524,
        12596
      ],
      "op": "MLOAD",
      "path": "179"
    },
    "3213": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12524,
        12596
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x1F"
    },
    "3215": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12524,
        12596
      ],
      "op": "RETURNDATASIZE",
      "path": "179"
    },
    "3216": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12524,
        12596
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "3217": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12524,
        12596
      ],
      "op": "DUP2",
      "path": "179"
    },
    "3218": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12524,
        12596
      ],
      "op": "ADD",
      "path": "179"
    },
    "3219": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3221": {
      "op": "NOT"
    },
    "3222": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12524,
        12596
      ],
      "op": "AND",
      "path": "179"
    },
    "3223": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12524,
        12596
      ],
      "op": "DUP3",
      "path": "179"
    },
    "3224": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12524,
        12596
      ],
      "op": "ADD",
      "path": "179"
    },
    "3225": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12524,
        12596
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "3226": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12524,
        12596
      ],
      "op": "SWAP3",
      "path": "179"
    },
    "3227": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12524,
        12596
      ],
      "op": "MSTORE",
      "path": "179"
    },
    "3228": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12524,
        12596
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0xCA7"
    },
    "3231": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12524,
        12596
      ],
      "op": "SWAP2",
      "path": "179"
    },
    "3232": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12524,
        12596
      ],
      "op": "DUP2",
      "path": "179"
    },
    "3233": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12524,
        12596
      ],
      "op": "ADD",
      "path": "179"
    },
    "3234": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12524,
        12596
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "3235": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12524,
        12596
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x11CE"
    },
    "3238": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12524,
        12596
      ],
      "op": "JUMP",
      "path": "179"
    },
    "3239": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12524,
        12596
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "3240": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12524,
        12596
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x1"
    },
    "3242": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12524,
        12596
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "3243": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12520,
        13039
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0xD07"
    },
    "3246": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12520,
        13039
      ],
      "op": "JUMPI",
      "path": "179"
    },
    "3247": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12520,
        13039
      ],
      "op": "RETURNDATASIZE",
      "path": "179"
    },
    "3248": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12520,
        13039
      ],
      "op": "DUP1",
      "path": "179"
    },
    "3249": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12520,
        13039
      ],
      "op": "DUP1",
      "path": "179"
    },
    "3250": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12520,
        13039
      ],
      "op": "ISZERO",
      "path": "179"
    },
    "3251": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12520,
        13039
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0xCD8"
    },
    "3254": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12520,
        13039
      ],
      "op": "JUMPI",
      "path": "179"
    },
    "3255": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12520,
        13039
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x40"
    },
    "3257": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12520,
        13039
      ],
      "op": "MLOAD",
      "path": "179"
    },
    "3258": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12520,
        13039
      ],
      "op": "SWAP2",
      "path": "179"
    },
    "3259": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12520,
        13039
      ],
      "op": "POP",
      "path": "179"
    },
    "3260": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12520,
        13039
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x1F"
    },
    "3262": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12520,
        13039
      ],
      "op": "NOT",
      "path": "179"
    },
    "3263": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12520,
        13039
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x3F"
    },
    "3265": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12520,
        13039
      ],
      "op": "RETURNDATASIZE",
      "path": "179"
    },
    "3266": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12520,
        13039
      ],
      "op": "ADD",
      "path": "179"
    },
    "3267": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12520,
        13039
      ],
      "op": "AND",
      "path": "179"
    },
    "3268": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12520,
        13039
      ],
      "op": "DUP3",
      "path": "179"
    },
    "3269": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12520,
        13039
      ],
      "op": "ADD",
      "path": "179"
    },
    "3270": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12520,
        13039
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x40"
    },
    "3272": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12520,
        13039
      ],
      "op": "MSTORE",
      "path": "179"
    },
    "3273": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12520,
        13039
      ],
      "op": "RETURNDATASIZE",
      "path": "179"
    },
    "3274": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12520,
        13039
      ],
      "op": "DUP3",
      "path": "179"
    },
    "3275": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12520,
        13039
      ],
      "op": "MSTORE",
      "path": "179"
    },
    "3276": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12520,
        13039
      ],
      "op": "RETURNDATASIZE",
      "path": "179"
    },
    "3277": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12520,
        13039
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x0"
    },
    "3279": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12520,
        13039
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x20"
    },
    "3281": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12520,
        13039
      ],
      "op": "DUP5",
      "path": "179"
    },
    "3282": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12520,
        13039
      ],
      "op": "ADD",
      "path": "179"
    },
    "3283": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12520,
        13039
      ],
      "op": "RETURNDATACOPY",
      "path": "179"
    },
    "3284": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12520,
        13039
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0xCDD"
    },
    "3287": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12520,
        13039
      ],
      "op": "JUMP",
      "path": "179"
    },
    "3288": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12520,
        13039
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "3289": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12520,
        13039
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x60"
    },
    "3291": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12520,
        13039
      ],
      "op": "SWAP2",
      "path": "179"
    },
    "3292": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12520,
        13039
      ],
      "op": "POP",
      "path": "179"
    },
    "3293": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12520,
        13039
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "3294": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12520,
        13039
      ],
      "op": "POP",
      "path": "179"
    },
    "3295": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12763,
        12769
      ],
      "op": "DUP1",
      "path": "179"
    },
    "3296": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12763,
        12776
      ],
      "op": "MLOAD",
      "path": "179"
    },
    "3297": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12780,
        12781
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x0"
    },
    "3299": {
      "branch": 61,
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12763,
        12781
      ],
      "op": "SUB",
      "path": "179"
    },
    "3300": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12759,
        13025
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0xCFF"
    },
    "3303": {
      "branch": 61,
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12759,
        13025
      ],
      "op": "JUMPI",
      "path": "179"
    },
    "3304": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12805,
        12865
      ],
      "op": "PUSH1",
      "path": "179",
      "statement": 47,
      "value": "0x40"
    },
    "3306": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12805,
        12865
      ],
      "op": "MLOAD",
      "path": "179"
    },
    "3307": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3311": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3313": {
      "op": "SHL"
    },
    "3314": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12805,
        12865
      ],
      "op": "DUP2",
      "path": "179"
    },
    "3315": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12805,
        12865
      ],
      "op": "MSTORE",
      "path": "179"
    },
    "3316": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12805,
        12865
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x4"
    },
    "3318": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12805,
        12865
      ],
      "op": "ADD",
      "path": "179"
    },
    "3319": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12805,
        12865
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x358"
    },
    "3322": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12805,
        12865
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "3323": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12805,
        12865
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x10D2"
    },
    "3326": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12805,
        12865
      ],
      "op": "JUMP",
      "path": "179"
    },
    "3327": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12759,
        13025
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "3328": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12977,
        12983
      ],
      "op": "DUP1",
      "path": "179"
    },
    "3329": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12971,
        12984
      ],
      "op": "MLOAD",
      "path": "179"
    },
    "3330": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12962,
        12968
      ],
      "op": "DUP2",
      "path": "179"
    },
    "3331": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12958,
        12960
      ],
      "op": "PUSH1",
      "path": "179",
      "value": "0x20"
    },
    "3333": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12954,
        12969
      ],
      "op": "ADD",
      "path": "179"
    },
    "3334": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12947,
        12985
      ],
      "op": "REVERT",
      "path": "179"
    },
    "3335": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12520,
        13039
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "3336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3340": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3342": {
      "op": "SHL"
    },
    "3343": {
      "op": "SUB"
    },
    "3344": {
      "op": "NOT"
    },
    "3345": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12646,
        12697
      ],
      "op": "AND",
      "path": "179",
      "statement": 48
    },
    "3346": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "3351": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3353": {
      "op": "SHL"
    },
    "3354": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12646,
        12697
      ],
      "op": "EQ",
      "path": "179"
    },
    "3355": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12646,
        12697
      ],
      "op": "SWAP1",
      "path": "179"
    },
    "3356": {
      "op": "POP"
    },
    "3357": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12639,
        12697
      ],
      "op": "PUSH2",
      "path": "179",
      "value": "0x885"
    },
    "3360": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12639,
        12697
      ],
      "op": "JUMP",
      "path": "179"
    },
    "3361": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12485,
        13091
      ],
      "op": "JUMPDEST",
      "path": "179"
    },
    "3362": {
      "op": "POP"
    },
    "3363": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13076,
        13080
      ],
      "op": "PUSH1",
      "path": "179",
      "statement": 49,
      "value": "0x1"
    },
    "3365": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12319,
        13097
      ],
      "op": "SWAP5",
      "path": "179"
    },
    "3366": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12319,
        13097
      ],
      "op": "SWAP4",
      "path": "179"
    },
    "3367": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12319,
        13097
      ],
      "op": "POP",
      "path": "179"
    },
    "3368": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12319,
        13097
      ],
      "op": "POP",
      "path": "179"
    },
    "3369": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12319,
        13097
      ],
      "op": "POP",
      "path": "179"
    },
    "3370": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12319,
        13097
      ],
      "op": "POP",
      "path": "179"
    },
    "3371": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "o",
      "offset": [
        12319,
        13097
      ],
      "op": "JUMP",
      "path": "179"
    },
    "3372": {
      "op": "JUMPDEST"
    },
    "3373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3377": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3379": {
      "op": "SHL"
    },
    "3380": {
      "op": "SUB"
    },
    "3381": {
      "op": "NOT"
    },
    "3382": {
      "op": "DUP2"
    },
    "3383": {
      "op": "AND"
    },
    "3384": {
      "op": "DUP2"
    },
    "3385": {
      "op": "EQ"
    },
    "3386": {
      "op": "PUSH2",
      "value": "0xD42"
    },
    "3389": {
      "op": "JUMPI"
    },
    "3390": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3392": {
      "op": "DUP1"
    },
    "3393": {
      "op": "REVERT"
    },
    "3394": {
      "op": "JUMPDEST"
    },
    "3395": {
      "op": "POP"
    },
    "3396": {
      "jump": "o",
      "op": "JUMP"
    },
    "3397": {
      "op": "JUMPDEST"
    },
    "3398": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3400": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3402": {
      "op": "DUP3"
    },
    "3403": {
      "op": "DUP5"
    },
    "3404": {
      "op": "SUB"
    },
    "3405": {
      "op": "SLT"
    },
    "3406": {
      "op": "ISZERO"
    },
    "3407": {
      "op": "PUSH2",
      "value": "0xD57"
    },
    "3410": {
      "op": "JUMPI"
    },
    "3411": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3413": {
      "op": "DUP1"
    },
    "3414": {
      "op": "REVERT"
    },
    "3415": {
      "op": "JUMPDEST"
    },
    "3416": {
      "op": "DUP2"
    },
    "3417": {
      "op": "CALLDATALOAD"
    },
    "3418": {
      "op": "PUSH2",
      "value": "0x713"
    },
    "3421": {
      "op": "DUP2"
    },
    "3422": {
      "op": "PUSH2",
      "value": "0xD2C"
    },
    "3425": {
      "jump": "i",
      "op": "JUMP"
    },
    "3426": {
      "op": "JUMPDEST"
    },
    "3427": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3429": {
      "op": "JUMPDEST"
    },
    "3430": {
      "op": "DUP4"
    },
    "3431": {
      "op": "DUP2"
    },
    "3432": {
      "op": "LT"
    },
    "3433": {
      "op": "ISZERO"
    },
    "3434": {
      "op": "PUSH2",
      "value": "0xD7D"
    },
    "3437": {
      "op": "JUMPI"
    },
    "3438": {
      "op": "DUP2"
    },
    "3439": {
      "op": "DUP2"
    },
    "3440": {
      "op": "ADD"
    },
    "3441": {
      "op": "MLOAD"
    },
    "3442": {
      "op": "DUP4"
    },
    "3443": {
      "op": "DUP3"
    },
    "3444": {
      "op": "ADD"
    },
    "3445": {
      "op": "MSTORE"
    },
    "3446": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3448": {
      "op": "ADD"
    },
    "3449": {
      "op": "PUSH2",
      "value": "0xD65"
    },
    "3452": {
      "op": "JUMP"
    },
    "3453": {
      "op": "JUMPDEST"
    },
    "3454": {
      "op": "POP"
    },
    "3455": {
      "op": "POP"
    },
    "3456": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3458": {
      "op": "SWAP2"
    },
    "3459": {
      "op": "ADD"
    },
    "3460": {
      "op": "MSTORE"
    },
    "3461": {
      "jump": "o",
      "op": "JUMP"
    },
    "3462": {
      "op": "JUMPDEST"
    },
    "3463": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3465": {
      "op": "DUP2"
    },
    "3466": {
      "op": "MLOAD"
    },
    "3467": {
      "op": "DUP1"
    },
    "3468": {
      "op": "DUP5"
    },
    "3469": {
      "op": "MSTORE"
    },
    "3470": {
      "op": "PUSH2",
      "value": "0xD9E"
    },
    "3473": {
      "op": "DUP2"
    },
    "3474": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3476": {
      "op": "DUP7"
    },
    "3477": {
      "op": "ADD"
    },
    "3478": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3480": {
      "op": "DUP7"
    },
    "3481": {
      "op": "ADD"
    },
    "3482": {
      "op": "PUSH2",
      "value": "0xD62"
    },
    "3485": {
      "jump": "i",
      "op": "JUMP"
    },
    "3486": {
      "op": "JUMPDEST"
    },
    "3487": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3489": {
      "op": "ADD"
    },
    "3490": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3492": {
      "op": "NOT"
    },
    "3493": {
      "op": "AND"
    },
    "3494": {
      "op": "SWAP3"
    },
    "3495": {
      "op": "SWAP1"
    },
    "3496": {
      "op": "SWAP3"
    },
    "3497": {
      "op": "ADD"
    },
    "3498": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3500": {
      "op": "ADD"
    },
    "3501": {
      "op": "SWAP3"
    },
    "3502": {
      "op": "SWAP2"
    },
    "3503": {
      "op": "POP"
    },
    "3504": {
      "op": "POP"
    },
    "3505": {
      "jump": "o",
      "op": "JUMP"
    },
    "3506": {
      "op": "JUMPDEST"
    },
    "3507": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3509": {
      "op": "DUP2"
    },
    "3510": {
      "op": "MSTORE"
    },
    "3511": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3513": {
      "op": "PUSH2",
      "value": "0x713"
    },
    "3516": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3518": {
      "op": "DUP4"
    },
    "3519": {
      "op": "ADD"
    },
    "3520": {
      "op": "DUP5"
    },
    "3521": {
      "op": "PUSH2",
      "value": "0xD86"
    },
    "3524": {
      "jump": "i",
      "op": "JUMP"
    },
    "3525": {
      "op": "JUMPDEST"
    },
    "3526": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3528": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3530": {
      "op": "DUP3"
    },
    "3531": {
      "op": "DUP5"
    },
    "3532": {
      "op": "SUB"
    },
    "3533": {
      "op": "SLT"
    },
    "3534": {
      "op": "ISZERO"
    },
    "3535": {
      "op": "PUSH2",
      "value": "0xDD7"
    },
    "3538": {
      "op": "JUMPI"
    },
    "3539": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3541": {
      "op": "DUP1"
    },
    "3542": {
      "op": "REVERT"
    },
    "3543": {
      "op": "JUMPDEST"
    },
    "3544": {
      "op": "POP"
    },
    "3545": {
      "op": "CALLDATALOAD"
    },
    "3546": {
      "op": "SWAP2"
    },
    "3547": {
      "op": "SWAP1"
    },
    "3548": {
      "op": "POP"
    },
    "3549": {
      "jump": "o",
      "op": "JUMP"
    },
    "3550": {
      "op": "JUMPDEST"
    },
    "3551": {
      "op": "DUP1"
    },
    "3552": {
      "op": "CALLDATALOAD"
    },
    "3553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3557": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3559": {
      "op": "SHL"
    },
    "3560": {
      "op": "SUB"
    },
    "3561": {
      "op": "DUP2"
    },
    "3562": {
      "op": "AND"
    },
    "3563": {
      "op": "DUP2"
    },
    "3564": {
      "op": "EQ"
    },
    "3565": {
      "op": "PUSH2",
      "value": "0xDF5"
    },
    "3568": {
      "op": "JUMPI"
    },
    "3569": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3571": {
      "op": "DUP1"
    },
    "3572": {
      "op": "REVERT"
    },
    "3573": {
      "op": "JUMPDEST"
    },
    "3574": {
      "op": "SWAP2"
    },
    "3575": {
      "op": "SWAP1"
    },
    "3576": {
      "op": "POP"
    },
    "3577": {
      "jump": "o",
      "op": "JUMP"
    },
    "3578": {
      "op": "JUMPDEST"
    },
    "3579": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3581": {
      "op": "DUP1"
    },
    "3582": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3584": {
      "op": "DUP4"
    },
    "3585": {
      "op": "DUP6"
    },
    "3586": {
      "op": "SUB"
    },
    "3587": {
      "op": "SLT"
    },
    "3588": {
      "op": "ISZERO"
    },
    "3589": {
      "op": "PUSH2",
      "value": "0xE0D"
    },
    "3592": {
      "op": "JUMPI"
    },
    "3593": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3595": {
      "op": "DUP1"
    },
    "3596": {
      "op": "REVERT"
    },
    "3597": {
      "op": "JUMPDEST"
    },
    "3598": {
      "op": "PUSH2",
      "value": "0xE16"
    },
    "3601": {
      "op": "DUP4"
    },
    "3602": {
      "op": "PUSH2",
      "value": "0xDDE"
    },
    "3605": {
      "jump": "i",
      "op": "JUMP"
    },
    "3606": {
      "op": "JUMPDEST"
    },
    "3607": {
      "op": "SWAP5"
    },
    "3608": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3610": {
      "op": "SWAP4"
    },
    "3611": {
      "op": "SWAP1"
    },
    "3612": {
      "op": "SWAP4"
    },
    "3613": {
      "op": "ADD"
    },
    "3614": {
      "op": "CALLDATALOAD"
    },
    "3615": {
      "op": "SWAP4"
    },
    "3616": {
      "op": "POP"
    },
    "3617": {
      "op": "POP"
    },
    "3618": {
      "op": "POP"
    },
    "3619": {
      "jump": "o",
      "op": "JUMP"
    },
    "3620": {
      "op": "JUMPDEST"
    },
    "3621": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3623": {
      "op": "DUP1"
    },
    "3624": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3626": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3628": {
      "op": "DUP5"
    },
    "3629": {
      "op": "DUP7"
    },
    "3630": {
      "op": "SUB"
    },
    "3631": {
      "op": "SLT"
    },
    "3632": {
      "op": "ISZERO"
    },
    "3633": {
      "op": "PUSH2",
      "value": "0xE39"
    },
    "3636": {
      "op": "JUMPI"
    },
    "3637": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3639": {
      "op": "DUP1"
    },
    "3640": {
      "op": "REVERT"
    },
    "3641": {
      "op": "JUMPDEST"
    },
    "3642": {
      "op": "PUSH2",
      "value": "0xE42"
    },
    "3645": {
      "op": "DUP5"
    },
    "3646": {
      "op": "PUSH2",
      "value": "0xDDE"
    },
    "3649": {
      "jump": "i",
      "op": "JUMP"
    },
    "3650": {
      "op": "JUMPDEST"
    },
    "3651": {
      "op": "SWAP3"
    },
    "3652": {
      "op": "POP"
    },
    "3653": {
      "op": "PUSH2",
      "value": "0xE50"
    },
    "3656": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3658": {
      "op": "DUP6"
    },
    "3659": {
      "op": "ADD"
    },
    "3660": {
      "op": "PUSH2",
      "value": "0xDDE"
    },
    "3663": {
      "jump": "i",
      "op": "JUMP"
    },
    "3664": {
      "op": "JUMPDEST"
    },
    "3665": {
      "op": "SWAP2"
    },
    "3666": {
      "op": "POP"
    },
    "3667": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3669": {
      "op": "DUP5"
    },
    "3670": {
      "op": "ADD"
    },
    "3671": {
      "op": "CALLDATALOAD"
    },
    "3672": {
      "op": "SWAP1"
    },
    "3673": {
      "op": "POP"
    },
    "3674": {
      "op": "SWAP3"
    },
    "3675": {
      "op": "POP"
    },
    "3676": {
      "op": "SWAP3"
    },
    "3677": {
      "op": "POP"
    },
    "3678": {
      "op": "SWAP3"
    },
    "3679": {
      "jump": "o",
      "op": "JUMP"
    },
    "3680": {
      "op": "JUMPDEST"
    },
    "3681": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3683": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3685": {
      "op": "DUP3"
    },
    "3686": {
      "op": "DUP5"
    },
    "3687": {
      "op": "SUB"
    },
    "3688": {
      "op": "SLT"
    },
    "3689": {
      "op": "ISZERO"
    },
    "3690": {
      "op": "PUSH2",
      "value": "0xE72"
    },
    "3693": {
      "op": "JUMPI"
    },
    "3694": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3696": {
      "op": "DUP1"
    },
    "3697": {
      "op": "REVERT"
    },
    "3698": {
      "op": "JUMPDEST"
    },
    "3699": {
      "op": "PUSH2",
      "value": "0x713"
    },
    "3702": {
      "op": "DUP3"
    },
    "3703": {
      "op": "PUSH2",
      "value": "0xDDE"
    },
    "3706": {
      "jump": "i",
      "op": "JUMP"
    },
    "3707": {
      "op": "JUMPDEST"
    },
    "3708": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3710": {
      "op": "DUP1"
    },
    "3711": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3713": {
      "op": "DUP4"
    },
    "3714": {
      "op": "DUP6"
    },
    "3715": {
      "op": "SUB"
    },
    "3716": {
      "op": "SLT"
    },
    "3717": {
      "op": "ISZERO"
    },
    "3718": {
      "op": "PUSH2",
      "value": "0xE8E"
    },
    "3721": {
      "op": "JUMPI"
    },
    "3722": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3724": {
      "op": "DUP1"
    },
    "3725": {
      "op": "REVERT"
    },
    "3726": {
      "op": "JUMPDEST"
    },
    "3727": {
      "op": "PUSH2",
      "value": "0xE97"
    },
    "3730": {
      "op": "DUP4"
    },
    "3731": {
      "op": "PUSH2",
      "value": "0xDDE"
    },
    "3734": {
      "jump": "i",
      "op": "JUMP"
    },
    "3735": {
      "op": "JUMPDEST"
    },
    "3736": {
      "op": "SWAP2"
    },
    "3737": {
      "op": "POP"
    },
    "3738": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3740": {
      "op": "DUP4"
    },
    "3741": {
      "op": "ADD"
    },
    "3742": {
      "op": "CALLDATALOAD"
    },
    "3743": {
      "op": "DUP1"
    },
    "3744": {
      "op": "ISZERO"
    },
    "3745": {
      "op": "ISZERO"
    },
    "3746": {
      "op": "DUP2"
    },
    "3747": {
      "op": "EQ"
    },
    "3748": {
      "op": "PUSH2",
      "value": "0xEAC"
    },
    "3751": {
      "op": "JUMPI"
    },
    "3752": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3754": {
      "op": "DUP1"
    },
    "3755": {
      "op": "REVERT"
    },
    "3756": {
      "op": "JUMPDEST"
    },
    "3757": {
      "op": "DUP1"
    },
    "3758": {
      "op": "SWAP2"
    },
    "3759": {
      "op": "POP"
    },
    "3760": {
      "op": "POP"
    },
    "3761": {
      "op": "SWAP3"
    },
    "3762": {
      "op": "POP"
    },
    "3763": {
      "op": "SWAP3"
    },
    "3764": {
      "op": "SWAP1"
    },
    "3765": {
      "op": "POP"
    },
    "3766": {
      "jump": "o",
      "op": "JUMP"
    },
    "3767": {
      "op": "JUMPDEST"
    },
    "3768": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3773": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3775": {
      "op": "SHL"
    },
    "3776": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3778": {
      "op": "MSTORE"
    },
    "3779": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "3781": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3783": {
      "op": "MSTORE"
    },
    "3784": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3786": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3788": {
      "op": "REVERT"
    },
    "3789": {
      "op": "JUMPDEST"
    },
    "3790": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3792": {
      "op": "DUP1"
    },
    "3793": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3795": {
      "op": "DUP1"
    },
    "3796": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3798": {
      "op": "DUP6"
    },
    "3799": {
      "op": "DUP8"
    },
    "3800": {
      "op": "SUB"
    },
    "3801": {
      "op": "SLT"
    },
    "3802": {
      "op": "ISZERO"
    },
    "3803": {
      "op": "PUSH2",
      "value": "0xEE3"
    },
    "3806": {
      "op": "JUMPI"
    },
    "3807": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3809": {
      "op": "DUP1"
    },
    "3810": {
      "op": "REVERT"
    },
    "3811": {
      "op": "JUMPDEST"
    },
    "3812": {
      "op": "PUSH2",
      "value": "0xEEC"
    },
    "3815": {
      "op": "DUP6"
    },
    "3816": {
      "op": "PUSH2",
      "value": "0xDDE"
    },
    "3819": {
      "jump": "i",
      "op": "JUMP"
    },
    "3820": {
      "op": "JUMPDEST"
    },
    "3821": {
      "op": "SWAP4"
    },
    "3822": {
      "op": "POP"
    },
    "3823": {
      "op": "PUSH2",
      "value": "0xEFA"
    },
    "3826": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3828": {
      "op": "DUP7"
    },
    "3829": {
      "op": "ADD"
    },
    "3830": {
      "op": "PUSH2",
      "value": "0xDDE"
    },
    "3833": {
      "jump": "i",
      "op": "JUMP"
    },
    "3834": {
      "op": "JUMPDEST"
    },
    "3835": {
      "op": "SWAP3"
    },
    "3836": {
      "op": "POP"
    },
    "3837": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3839": {
      "op": "DUP6"
    },
    "3840": {
      "op": "ADD"
    },
    "3841": {
      "op": "CALLDATALOAD"
    },
    "3842": {
      "op": "SWAP2"
    },
    "3843": {
      "op": "POP"
    },
    "3844": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3846": {
      "op": "DUP6"
    },
    "3847": {
      "op": "ADD"
    },
    "3848": {
      "op": "CALLDATALOAD"
    },
    "3849": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3858": {
      "op": "DUP1"
    },
    "3859": {
      "op": "DUP3"
    },
    "3860": {
      "op": "GT"
    },
    "3861": {
      "op": "ISZERO"
    },
    "3862": {
      "op": "PUSH2",
      "value": "0xF1E"
    },
    "3865": {
      "op": "JUMPI"
    },
    "3866": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3868": {
      "op": "DUP1"
    },
    "3869": {
      "op": "REVERT"
    },
    "3870": {
      "op": "JUMPDEST"
    },
    "3871": {
      "op": "DUP2"
    },
    "3872": {
      "op": "DUP8"
    },
    "3873": {
      "op": "ADD"
    },
    "3874": {
      "op": "SWAP2"
    },
    "3875": {
      "op": "POP"
    },
    "3876": {
      "op": "DUP8"
    },
    "3877": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3879": {
      "op": "DUP4"
    },
    "3880": {
      "op": "ADD"
    },
    "3881": {
      "op": "SLT"
    },
    "3882": {
      "op": "PUSH2",
      "value": "0xF32"
    },
    "3885": {
      "op": "JUMPI"
    },
    "3886": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3888": {
      "op": "DUP1"
    },
    "3889": {
      "op": "REVERT"
    },
    "3890": {
      "op": "JUMPDEST"
    },
    "3891": {
      "op": "DUP2"
    },
    "3892": {
      "op": "CALLDATALOAD"
    },
    "3893": {
      "op": "DUP2"
    },
    "3894": {
      "op": "DUP2"
    },
    "3895": {
      "op": "GT"
    },
    "3896": {
      "op": "ISZERO"
    },
    "3897": {
      "op": "PUSH2",
      "value": "0xF44"
    },
    "3900": {
      "op": "JUMPI"
    },
    "3901": {
      "op": "PUSH2",
      "value": "0xF44"
    },
    "3904": {
      "op": "PUSH2",
      "value": "0xEB7"
    },
    "3907": {
      "jump": "i",
      "op": "JUMP"
    },
    "3908": {
      "op": "JUMPDEST"
    },
    "3909": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3911": {
      "op": "MLOAD"
    },
    "3912": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3914": {
      "op": "DUP3"
    },
    "3915": {
      "op": "ADD"
    },
    "3916": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3918": {
      "op": "NOT"
    },
    "3919": {
      "op": "SWAP1"
    },
    "3920": {
      "op": "DUP2"
    },
    "3921": {
      "op": "AND"
    },
    "3922": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "3924": {
      "op": "ADD"
    },
    "3925": {
      "op": "AND"
    },
    "3926": {
      "op": "DUP2"
    },
    "3927": {
      "op": "ADD"
    },
    "3928": {
      "op": "SWAP1"
    },
    "3929": {
      "op": "DUP4"
    },
    "3930": {
      "op": "DUP3"
    },
    "3931": {
      "op": "GT"
    },
    "3932": {
      "op": "DUP2"
    },
    "3933": {
      "op": "DUP4"
    },
    "3934": {
      "op": "LT"
    },
    "3935": {
      "op": "OR"
    },
    "3936": {
      "op": "ISZERO"
    },
    "3937": {
      "op": "PUSH2",
      "value": "0xF6C"
    },
    "3940": {
      "op": "JUMPI"
    },
    "3941": {
      "op": "PUSH2",
      "value": "0xF6C"
    },
    "3944": {
      "op": "PUSH2",
      "value": "0xEB7"
    },
    "3947": {
      "jump": "i",
      "op": "JUMP"
    },
    "3948": {
      "op": "JUMPDEST"
    },
    "3949": {
      "op": "DUP2"
    },
    "3950": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3952": {
      "op": "MSTORE"
    },
    "3953": {
      "op": "DUP3"
    },
    "3954": {
      "op": "DUP2"
    },
    "3955": {
      "op": "MSTORE"
    },
    "3956": {
      "op": "DUP11"
    },
    "3957": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3959": {
      "op": "DUP5"
    },
    "3960": {
      "op": "DUP8"
    },
    "3961": {
      "op": "ADD"
    },
    "3962": {
      "op": "ADD"
    },
    "3963": {
      "op": "GT"
    },
    "3964": {
      "op": "ISZERO"
    },
    "3965": {
      "op": "PUSH2",
      "value": "0xF85"
    },
    "3968": {
      "op": "JUMPI"
    },
    "3969": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3971": {
      "op": "DUP1"
    },
    "3972": {
      "op": "REVERT"
    },
    "3973": {
      "op": "JUMPDEST"
    },
    "3974": {
      "op": "DUP3"
    },
    "3975": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3977": {
      "op": "DUP7"
    },
    "3978": {
      "op": "ADD"
    },
    "3979": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3981": {
      "op": "DUP4"
    },
    "3982": {
      "op": "ADD"
    },
    "3983": {
      "op": "CALLDATACOPY"
    },
    "3984": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3986": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3988": {
      "op": "DUP5"
    },
    "3989": {
      "op": "DUP4"
    },
    "3990": {
      "op": "ADD"
    },
    "3991": {
      "op": "ADD"
    },
    "3992": {
      "op": "MSTORE"
    },
    "3993": {
      "op": "DUP1"
    },
    "3994": {
      "op": "SWAP6"
    },
    "3995": {
      "op": "POP"
    },
    "3996": {
      "op": "POP"
    },
    "3997": {
      "op": "POP"
    },
    "3998": {
      "op": "POP"
    },
    "3999": {
      "op": "POP"
    },
    "4000": {
      "op": "POP"
    },
    "4001": {
      "op": "SWAP3"
    },
    "4002": {
      "op": "SWAP6"
    },
    "4003": {
      "op": "SWAP2"
    },
    "4004": {
      "op": "SWAP5"
    },
    "4005": {
      "op": "POP"
    },
    "4006": {
      "op": "SWAP3"
    },
    "4007": {
      "op": "POP"
    },
    "4008": {
      "jump": "o",
      "op": "JUMP"
    },
    "4009": {
      "op": "JUMPDEST"
    },
    "4010": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4012": {
      "op": "DUP1"
    },
    "4013": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4015": {
      "op": "DUP4"
    },
    "4016": {
      "op": "DUP6"
    },
    "4017": {
      "op": "SUB"
    },
    "4018": {
      "op": "SLT"
    },
    "4019": {
      "op": "ISZERO"
    },
    "4020": {
      "op": "PUSH2",
      "value": "0xFBC"
    },
    "4023": {
      "op": "JUMPI"
    },
    "4024": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4026": {
      "op": "DUP1"
    },
    "4027": {
      "op": "REVERT"
    },
    "4028": {
      "op": "JUMPDEST"
    },
    "4029": {
      "op": "PUSH2",
      "value": "0xFC5"
    },
    "4032": {
      "op": "DUP4"
    },
    "4033": {
      "op": "PUSH2",
      "value": "0xDDE"
    },
    "4036": {
      "jump": "i",
      "op": "JUMP"
    },
    "4037": {
      "op": "JUMPDEST"
    },
    "4038": {
      "op": "SWAP2"
    },
    "4039": {
      "op": "POP"
    },
    "4040": {
      "op": "PUSH2",
      "value": "0xFD3"
    },
    "4043": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4045": {
      "op": "DUP5"
    },
    "4046": {
      "op": "ADD"
    },
    "4047": {
      "op": "PUSH2",
      "value": "0xDDE"
    },
    "4050": {
      "jump": "i",
      "op": "JUMP"
    },
    "4051": {
      "op": "JUMPDEST"
    },
    "4052": {
      "op": "SWAP1"
    },
    "4053": {
      "op": "POP"
    },
    "4054": {
      "op": "SWAP3"
    },
    "4055": {
      "op": "POP"
    },
    "4056": {
      "op": "SWAP3"
    },
    "4057": {
      "op": "SWAP1"
    },
    "4058": {
      "op": "POP"
    },
    "4059": {
      "jump": "o",
      "op": "JUMP"
    },
    "4060": {
      "op": "JUMPDEST"
    },
    "4061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4063": {
      "op": "DUP2"
    },
    "4064": {
      "op": "DUP2"
    },
    "4065": {
      "op": "SHR"
    },
    "4066": {
      "op": "SWAP1"
    },
    "4067": {
      "op": "DUP3"
    },
    "4068": {
      "op": "AND"
    },
    "4069": {
      "op": "DUP1"
    },
    "4070": {
      "op": "PUSH2",
      "value": "0xFF0"
    },
    "4073": {
      "op": "JUMPI"
    },
    "4074": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "4076": {
      "op": "DUP3"
    },
    "4077": {
      "op": "AND"
    },
    "4078": {
      "op": "SWAP2"
    },
    "4079": {
      "op": "POP"
    },
    "4080": {
      "op": "JUMPDEST"
    },
    "4081": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4083": {
      "op": "DUP3"
    },
    "4084": {
      "op": "LT"
    },
    "4085": {
      "op": "DUP2"
    },
    "4086": {
      "op": "SUB"
    },
    "4087": {
      "op": "PUSH2",
      "value": "0x1010"
    },
    "4090": {
      "op": "JUMPI"
    },
    "4091": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4096": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4098": {
      "op": "SHL"
    },
    "4099": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4101": {
      "op": "MSTORE"
    },
    "4102": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "4104": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4106": {
      "op": "MSTORE"
    },
    "4107": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4109": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4111": {
      "op": "REVERT"
    },
    "4112": {
      "op": "JUMPDEST"
    },
    "4113": {
      "op": "POP"
    },
    "4114": {
      "op": "SWAP2"
    },
    "4115": {
      "op": "SWAP1"
    },
    "4116": {
      "op": "POP"
    },
    "4117": {
      "jump": "o",
      "op": "JUMP"
    },
    "4118": {
      "op": "JUMPDEST"
    },
    "4119": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4121": {
      "op": "DUP1"
    },
    "4122": {
      "op": "DUP3"
    },
    "4123": {
      "op": "MSTORE"
    },
    "4124": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "4126": {
      "op": "SWAP1"
    },
    "4127": {
      "op": "DUP3"
    },
    "4128": {
      "op": "ADD"
    },
    "4129": {
      "op": "MSTORE"
    },
    "4130": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
    },
    "4163": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4165": {
      "op": "DUP3"
    },
    "4166": {
      "op": "ADD"
    },
    "4167": {
      "op": "MSTORE"
    },
    "4168": {
      "op": "PUSH17",
      "value": "0x1DDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "4186": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "4188": {
      "op": "SHL"
    },
    "4189": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4191": {
      "op": "DUP3"
    },
    "4192": {
      "op": "ADD"
    },
    "4193": {
      "op": "MSTORE"
    },
    "4194": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4196": {
      "op": "ADD"
    },
    "4197": {
      "op": "SWAP1"
    },
    "4198": {
      "jump": "o",
      "op": "JUMP"
    },
    "4199": {
      "op": "JUMPDEST"
    },
    "4200": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4202": {
      "op": "DUP4"
    },
    "4203": {
      "op": "MLOAD"
    },
    "4204": {
      "op": "PUSH2",
      "value": "0x1079"
    },
    "4207": {
      "op": "DUP2"
    },
    "4208": {
      "op": "DUP5"
    },
    "4209": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4211": {
      "op": "DUP9"
    },
    "4212": {
      "op": "ADD"
    },
    "4213": {
      "op": "PUSH2",
      "value": "0xD62"
    },
    "4216": {
      "jump": "i",
      "op": "JUMP"
    },
    "4217": {
      "op": "JUMPDEST"
    },
    "4218": {
      "op": "DUP4"
    },
    "4219": {
      "op": "MLOAD"
    },
    "4220": {
      "op": "SWAP1"
    },
    "4221": {
      "op": "DUP4"
    },
    "4222": {
      "op": "ADD"
    },
    "4223": {
      "op": "SWAP1"
    },
    "4224": {
      "op": "PUSH2",
      "value": "0x108D"
    },
    "4227": {
      "op": "DUP2"
    },
    "4228": {
      "op": "DUP4"
    },
    "4229": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4231": {
      "op": "DUP9"
    },
    "4232": {
      "op": "ADD"
    },
    "4233": {
      "op": "PUSH2",
      "value": "0xD62"
    },
    "4236": {
      "jump": "i",
      "op": "JUMP"
    },
    "4237": {
      "op": "JUMPDEST"
    },
    "4238": {
      "op": "ADD"
    },
    "4239": {
      "op": "SWAP5"
    },
    "4240": {
      "op": "SWAP4"
    },
    "4241": {
      "op": "POP"
    },
    "4242": {
      "op": "POP"
    },
    "4243": {
      "op": "POP"
    },
    "4244": {
      "op": "POP"
    },
    "4245": {
      "jump": "o",
      "op": "JUMP"
    },
    "4246": {
      "op": "JUMPDEST"
    },
    "4247": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4252": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4254": {
      "op": "SHL"
    },
    "4255": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4257": {
      "op": "MSTORE"
    },
    "4258": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4260": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4262": {
      "op": "MSTORE"
    },
    "4263": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4265": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4267": {
      "op": "REVERT"
    },
    "4268": {
      "op": "JUMPDEST"
    },
    "4269": {
      "op": "DUP2"
    },
    "4270": {
      "op": "DUP2"
    },
    "4271": {
      "op": "SUB"
    },
    "4272": {
      "op": "DUP2"
    },
    "4273": {
      "op": "DUP2"
    },
    "4274": {
      "op": "GT"
    },
    "4275": {
      "op": "ISZERO"
    },
    "4276": {
      "op": "PUSH2",
      "value": "0x24B"
    },
    "4279": {
      "op": "JUMPI"
    },
    "4280": {
      "op": "PUSH2",
      "value": "0x24B"
    },
    "4283": {
      "op": "PUSH2",
      "value": "0x1096"
    },
    "4286": {
      "jump": "i",
      "op": "JUMP"
    },
    "4287": {
      "op": "JUMPDEST"
    },
    "4288": {
      "op": "DUP1"
    },
    "4289": {
      "op": "DUP3"
    },
    "4290": {
      "op": "ADD"
    },
    "4291": {
      "op": "DUP1"
    },
    "4292": {
      "op": "DUP3"
    },
    "4293": {
      "op": "GT"
    },
    "4294": {
      "op": "ISZERO"
    },
    "4295": {
      "op": "PUSH2",
      "value": "0x24B"
    },
    "4298": {
      "op": "JUMPI"
    },
    "4299": {
      "op": "PUSH2",
      "value": "0x24B"
    },
    "4302": {
      "op": "PUSH2",
      "value": "0x1096"
    },
    "4305": {
      "jump": "i",
      "op": "JUMP"
    },
    "4306": {
      "op": "JUMPDEST"
    },
    "4307": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4309": {
      "op": "DUP1"
    },
    "4310": {
      "op": "DUP3"
    },
    "4311": {
      "op": "MSTORE"
    },
    "4312": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4314": {
      "op": "SWAP1"
    },
    "4315": {
      "op": "DUP3"
    },
    "4316": {
      "op": "ADD"
    },
    "4317": {
      "op": "MSTORE"
    },
    "4318": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
    },
    "4351": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4353": {
      "op": "DUP3"
    },
    "4354": {
      "op": "ADD"
    },
    "4355": {
      "op": "MSTORE"
    },
    "4356": {
      "op": "PUSH18",
      "value": "0x31B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "4375": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "4377": {
      "op": "SHL"
    },
    "4378": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4380": {
      "op": "DUP3"
    },
    "4381": {
      "op": "ADD"
    },
    "4382": {
      "op": "MSTORE"
    },
    "4383": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4385": {
      "op": "ADD"
    },
    "4386": {
      "op": "SWAP1"
    },
    "4387": {
      "jump": "o",
      "op": "JUMP"
    },
    "4388": {
      "op": "JUMPDEST"
    },
    "4389": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4393": {
      "op": "DUP3"
    },
    "4394": {
      "op": "ADD"
    },
    "4395": {
      "op": "PUSH2",
      "value": "0x1136"
    },
    "4398": {
      "op": "JUMPI"
    },
    "4399": {
      "op": "PUSH2",
      "value": "0x1136"
    },
    "4402": {
      "op": "PUSH2",
      "value": "0x1096"
    },
    "4405": {
      "jump": "i",
      "op": "JUMP"
    },
    "4406": {
      "op": "JUMPDEST"
    },
    "4407": {
      "op": "POP"
    },
    "4408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4410": {
      "op": "ADD"
    },
    "4411": {
      "op": "SWAP1"
    },
    "4412": {
      "jump": "o",
      "op": "JUMP"
    },
    "4413": {
      "op": "JUMPDEST"
    },
    "4414": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4419": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4421": {
      "op": "SHL"
    },
    "4422": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4424": {
      "op": "MSTORE"
    },
    "4425": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4427": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4429": {
      "op": "MSTORE"
    },
    "4430": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4432": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4434": {
      "op": "REVERT"
    },
    "4435": {
      "op": "JUMPDEST"
    },
    "4436": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4438": {
      "op": "DUP3"
    },
    "4439": {
      "op": "PUSH2",
      "value": "0x1162"
    },
    "4442": {
      "op": "JUMPI"
    },
    "4443": {
      "op": "PUSH2",
      "value": "0x1162"
    },
    "4446": {
      "op": "PUSH2",
      "value": "0x113D"
    },
    "4449": {
      "jump": "i",
      "op": "JUMP"
    },
    "4450": {
      "op": "JUMPDEST"
    },
    "4451": {
      "op": "POP"
    },
    "4452": {
      "op": "DIV"
    },
    "4453": {
      "op": "SWAP1"
    },
    "4454": {
      "jump": "o",
      "op": "JUMP"
    },
    "4455": {
      "op": "JUMPDEST"
    },
    "4456": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4458": {
      "op": "DUP3"
    },
    "4459": {
      "op": "PUSH2",
      "value": "0x1176"
    },
    "4462": {
      "op": "JUMPI"
    },
    "4463": {
      "op": "PUSH2",
      "value": "0x1176"
    },
    "4466": {
      "op": "PUSH2",
      "value": "0x113D"
    },
    "4469": {
      "jump": "i",
      "op": "JUMP"
    },
    "4470": {
      "op": "JUMPDEST"
    },
    "4471": {
      "op": "POP"
    },
    "4472": {
      "op": "MOD"
    },
    "4473": {
      "op": "SWAP1"
    },
    "4474": {
      "jump": "o",
      "op": "JUMP"
    },
    "4475": {
      "op": "JUMPDEST"
    },
    "4476": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4481": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4483": {
      "op": "SHL"
    },
    "4484": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4486": {
      "op": "MSTORE"
    },
    "4487": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4489": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4491": {
      "op": "MSTORE"
    },
    "4492": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4494": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4496": {
      "op": "REVERT"
    },
    "4497": {
      "op": "JUMPDEST"
    },
    "4498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4500": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4502": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4504": {
      "op": "SHL"
    },
    "4505": {
      "op": "SUB"
    },
    "4506": {
      "op": "DUP6"
    },
    "4507": {
      "op": "DUP2"
    },
    "4508": {
      "op": "AND"
    },
    "4509": {
      "op": "DUP3"
    },
    "4510": {
      "op": "MSTORE"
    },
    "4511": {
      "op": "DUP5"
    },
    "4512": {
      "op": "AND"
    },
    "4513": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4515": {
      "op": "DUP3"
    },
    "4516": {
      "op": "ADD"
    },
    "4517": {
      "op": "MSTORE"
    },
    "4518": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4520": {
      "op": "DUP2"
    },
    "4521": {
      "op": "ADD"
    },
    "4522": {
      "op": "DUP4"
    },
    "4523": {
      "op": "SWAP1"
    },
    "4524": {
      "op": "MSTORE"
    },
    "4525": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4527": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4529": {
      "op": "DUP3"
    },
    "4530": {
      "op": "ADD"
    },
    "4531": {
      "op": "DUP2"
    },
    "4532": {
      "op": "SWAP1"
    },
    "4533": {
      "op": "MSTORE"
    },
    "4534": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4536": {
      "op": "SWAP1"
    },
    "4537": {
      "op": "PUSH2",
      "value": "0x11C4"
    },
    "4540": {
      "op": "SWAP1"
    },
    "4541": {
      "op": "DUP4"
    },
    "4542": {
      "op": "ADD"
    },
    "4543": {
      "op": "DUP5"
    },
    "4544": {
      "op": "PUSH2",
      "value": "0xD86"
    },
    "4547": {
      "jump": "i",
      "op": "JUMP"
    },
    "4548": {
      "op": "JUMPDEST"
    },
    "4549": {
      "op": "SWAP7"
    },
    "4550": {
      "op": "SWAP6"
    },
    "4551": {
      "op": "POP"
    },
    "4552": {
      "op": "POP"
    },
    "4553": {
      "op": "POP"
    },
    "4554": {
      "op": "POP"
    },
    "4555": {
      "op": "POP"
    },
    "4556": {
      "op": "POP"
    },
    "4557": {
      "jump": "o",
      "op": "JUMP"
    },
    "4558": {
      "op": "JUMPDEST"
    },
    "4559": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4561": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4563": {
      "op": "DUP3"
    },
    "4564": {
      "op": "DUP5"
    },
    "4565": {
      "op": "SUB"
    },
    "4566": {
      "op": "SLT"
    },
    "4567": {
      "op": "ISZERO"
    },
    "4568": {
      "op": "PUSH2",
      "value": "0x11E0"
    },
    "4571": {
      "op": "JUMPI"
    },
    "4572": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4574": {
      "op": "DUP1"
    },
    "4575": {
      "op": "REVERT"
    },
    "4576": {
      "op": "JUMPDEST"
    },
    "4577": {
      "op": "DUP2"
    },
    "4578": {
      "op": "MLOAD"
    },
    "4579": {
      "op": "PUSH2",
      "value": "0x713"
    },
    "4582": {
      "op": "DUP2"
    },
    "4583": {
      "op": "PUSH2",
      "value": "0xD2C"
    },
    "4586": {
      "jump": "i",
      "op": "JUMP"
    }
  },
  "sha1": "be786037de1bf165a497803ce9086a7f1efcfb35",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: balance query for the zero address\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _owners[tokenId];\n        require(owner != address(0), \"ERC721: owner query for nonexistent token\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\");\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overriden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not owner nor approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        require(_exists(tokenId), \"ERC721: approved query for nonexistent token\");\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n        _safeTransfer(from, to, tokenId, _data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _owners[tokenId] != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        require(_exists(tokenId), \"ERC721: operator query for nonexistent token\");\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || getApproved(tokenId) == spender || isApprovedForAll(owner, spender));\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, _data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId);\n\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId);\n\n        // Clear approvals\n        _approve(address(0), tokenId);\n\n        _balances[owner] -= 1;\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId);\n\n        _balances[from] -= 1;\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits a {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits a {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param _data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n}\n",
  "sourceMap": "613:13657:179:-:0;;;1375:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1441:5;:13;1449:5;1441;:13;:::i;:::-;-1:-1:-1;1464:7:179;:17;1474:7;1464;:17;:::i;:::-;;1375:113;;613:13657;;14:127:249;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:249;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:249;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:249:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:249;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:249;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:249;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:249;;;3992:26;3943:89;-1:-1:-1;;2747:1:249;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:249;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:249;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:249;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:249:o;:::-;613:13657:179;;;;;;",
  "sourcePath": "contracts/openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
  "type": "contract"
}