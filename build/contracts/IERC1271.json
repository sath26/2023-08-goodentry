{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "isValidSignature",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "magicValue",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "31": "contracts/openzeppelin-solidity/contracts/interfaces/IERC1271.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin-solidity/contracts/interfaces/IERC1271.sol",
    "exportedSymbols": {
      "IERC1271": [
        10488
      ]
    },
    "id": 10489,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10476,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "92:23:31"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IERC1271",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 10477,
          "nodeType": "StructuredDocumentation",
          "src": "117:189:31",
          "text": " @dev Interface of the ERC1271 standard signature validation method for\n contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271].\n _Available since v4.1._"
        },
        "fullyImplemented": false,
        "id": 10488,
        "linearizedBaseContracts": [
          10488
        ],
        "name": "IERC1271",
        "nameLocation": "317:8:31",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 10478,
              "nodeType": "StructuredDocumentation",
              "src": "332:220:31",
              "text": " @dev Should return whether the signature provided is valid for the provided data\n @param hash      Hash of the data to be signed\n @param signature Signature byte array associated with _data"
            },
            "functionSelector": "1626ba7e",
            "id": 10487,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isValidSignature",
            "nameLocation": "566:16:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10483,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10480,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "591:4:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 10487,
                  "src": "583:12:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 10479,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "583:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10482,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "610:9:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 10487,
                  "src": "597:22:31",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 10481,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "597:5:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "582:38:31"
            },
            "returnParameters": {
              "id": 10486,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10485,
                  "mutability": "mutable",
                  "name": "magicValue",
                  "nameLocation": "651:10:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 10487,
                  "src": "644:17:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 10484,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "644:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "643:19:31"
            },
            "scope": 10488,
            "src": "557:106:31",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 10489,
        "src": "307:358:31",
        "usedErrors": [],
        "usedEvents": []
      }
    ],
    "src": "92:574:31"
  },
  "bytecode": "",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.21+commit.d9974bed"
  },
  "contractName": "IERC1271",
  "coverageMap": {
    "branches": {},
    "statements": {}
  },
  "dependencies": [],
  "deployedBytecode": "",
  "deployedSourceMap": "",
  "language": "Solidity",
  "natspec": {
    "details": "Interface of the ERC1271 standard signature validation method for contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271]. _Available since v4.1._",
    "kind": "dev",
    "methods": {
      "isValidSignature(bytes32,bytes)": {
        "details": "Should return whether the signature provided is valid for the provided data",
        "params": {
          "hash": "Hash of the data to be signed",
          "signature": "Signature byte array associated with _data"
        }
      }
    },
    "version": 1
  },
  "offset": [
    307,
    665
  ],
  "opcodes": "",
  "pcMap": {},
  "sha1": "feb73b8e079e1a31e785142705f2933a4214c609",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC1271.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC1271 standard signature validation method for\n * contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271].\n *\n * _Available since v4.1._\n */\ninterface IERC1271 {\n    /**\n     * @dev Should return whether the signature provided is valid for the provided data\n     * @param hash      Hash of the data to be signed\n     * @param signature Signature byte array associated with _data\n     */\n    function isValidSignature(bytes32 hash, bytes memory signature) external view returns (bytes4 magicValue);\n}\n",
  "sourceMap": "",
  "sourcePath": "contracts/openzeppelin-solidity/contracts/interfaces/IERC1271.sol",
  "type": "interface"
}