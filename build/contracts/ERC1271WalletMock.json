{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "originalOwner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "isValidSignature",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "magicValue",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "11": "contracts/openzeppelin-solidity/contracts/access/Ownable.sol",
    "202": "contracts/openzeppelin-solidity/contracts/utils/Context.sol",
    "207": "contracts/openzeppelin-solidity/contracts/utils/Strings.sol",
    "209": "contracts/openzeppelin-solidity/contracts/utils/cryptography/ECDSA.sol",
    "31": "contracts/openzeppelin-solidity/contracts/interfaces/IERC1271.sol",
    "69": "contracts/openzeppelin-solidity/contracts/mocks/ERC1271WalletMock.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin-solidity/contracts/mocks/ERC1271WalletMock.sol",
    "exportedSymbols": {
      "Context": [
        30190
      ],
      "ECDSA": [
        31314
      ],
      "ERC1271WalletMock": [
        12514
      ],
      "IERC1271": [
        10488
      ],
      "Ownable": [
        4610
      ],
      "Strings": [
        30693
      ]
    },
    "id": 12515,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 12468,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:69"
      },
      {
        "absolutePath": "contracts/openzeppelin-solidity/contracts/access/Ownable.sol",
        "file": "../access/Ownable.sol",
        "id": 12469,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12515,
        "sourceUnit": 4611,
        "src": "58:31:69",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-solidity/contracts/interfaces/IERC1271.sol",
        "file": "../interfaces/IERC1271.sol",
        "id": 12470,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12515,
        "sourceUnit": 10489,
        "src": "90:36:69",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin-solidity/contracts/utils/cryptography/ECDSA.sol",
        "file": "../utils/cryptography/ECDSA.sol",
        "id": 12471,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12515,
        "sourceUnit": 31315,
        "src": "127:41:69",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 12472,
              "name": "Ownable",
              "nameLocations": [
                "200:7:69"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4610,
              "src": "200:7:69"
            },
            "id": 12473,
            "nodeType": "InheritanceSpecifier",
            "src": "200:7:69"
          },
          {
            "baseName": {
              "id": 12474,
              "name": "IERC1271",
              "nameLocations": [
                "209:8:69"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10488,
              "src": "209:8:69"
            },
            "id": 12475,
            "nodeType": "InheritanceSpecifier",
            "src": "209:8:69"
          }
        ],
        "canonicalName": "ERC1271WalletMock",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 12514,
        "linearizedBaseContracts": [
          12514,
          10488,
          4610,
          30190
        ],
        "name": "ERC1271WalletMock",
        "nameLocation": "179:17:69",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 12484,
              "nodeType": "Block",
              "src": "259:49:69",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12481,
                        "name": "originalOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12477,
                        "src": "287:13:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 12480,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4589,
                      "src": "269:17:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 12482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "269:32:69",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12483,
                  "nodeType": "ExpressionStatement",
                  "src": "269:32:69"
                }
              ]
            },
            "id": 12485,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12478,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12477,
                  "mutability": "mutable",
                  "name": "originalOwner",
                  "nameLocation": "244:13:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 12485,
                  "src": "236:21:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12476,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "236:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "235:23:69"
            },
            "returnParameters": {
              "id": 12479,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "259:0:69"
            },
            "scope": 12514,
            "src": "224:84:69",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              10487
            ],
            "body": {
              "id": 12512,
              "nodeType": "Block",
              "src": "427:110:69",
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 12502,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 12497,
                            "name": "hash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12487,
                            "src": "458:4:69",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 12498,
                            "name": "signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12489,
                            "src": "464:9:69",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 12495,
                            "name": "ECDSA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31314,
                            "src": "444:5:69",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ECDSA_$31314_$",
                              "typeString": "type(library ECDSA)"
                            }
                          },
                          "id": 12496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "450:7:69",
                          "memberName": "recover",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31063,
                          "src": "444:13:69",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                            "typeString": "function (bytes32,bytes memory) pure returns (address)"
                          }
                        },
                        "id": 12499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "444:30:69",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 12500,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4538,
                          "src": "478:5:69",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 12501,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "478:7:69",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "444:41:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 12508,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "528:1:69",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 12507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "521:6:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes4_$",
                          "typeString": "type(bytes4)"
                        },
                        "typeName": {
                          "id": 12506,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "521:6:69",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 12509,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "521:9:69",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "id": 12510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "444:86:69",
                    "trueExpression": {
                      "expression": {
                        "expression": {
                          "id": 12503,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "488:4:69",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC1271WalletMock_$12514",
                            "typeString": "contract ERC1271WalletMock"
                          }
                        },
                        "id": 12504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "493:16:69",
                        "memberName": "isValidSignature",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12513,
                        "src": "488:21:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                          "typeString": "function (bytes32,bytes memory) view external returns (bytes4)"
                        }
                      },
                      "id": 12505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "510:8:69",
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "src": "488:30:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 12494,
                  "id": 12511,
                  "nodeType": "Return",
                  "src": "437:93:69"
                }
              ]
            },
            "functionSelector": "1626ba7e",
            "id": 12513,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isValidSignature",
            "nameLocation": "323:16:69",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 12491,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "390:8:69"
            },
            "parameters": {
              "id": 12490,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12487,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "348:4:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 12513,
                  "src": "340:12:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 12486,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "340:7:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12489,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "367:9:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 12513,
                  "src": "354:22:69",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 12488,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "354:5:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "339:38:69"
            },
            "returnParameters": {
              "id": 12494,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12493,
                  "mutability": "mutable",
                  "name": "magicValue",
                  "nameLocation": "415:10:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 12513,
                  "src": "408:17:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 12492,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "408:6:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "407:19:69"
            },
            "scope": 12514,
            "src": "314:223:69",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 12515,
        "src": "170:369:69",
        "usedErrors": [],
        "usedEvents": [
          4519
        ]
      }
    ],
    "src": "33:507:69"
  },
  "bytecode": "608060405234801561001057600080fd5b5060405161090038038061090083398101604081905261002f91610167565b61003833610047565b61004181610097565b50610197565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000546001600160a01b031633146100f65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001600160a01b03811661015b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100ed565b61016481610047565b50565b60006020828403121561017957600080fd5b81516001600160a01b038116811461019057600080fd5b9392505050565b61075a806101a66000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631626ba7e14610051578063715018a6146100825780638da5cb5b1461008c578063f2fde38b146100a7575b600080fd5b61006461005f366004610602565b6100ba565b6040516001600160e01b031990911681526020015b60405180910390f35b61008a6100f8565b005b6000546040516001600160a01b039091168152602001610079565b61008a6100b53660046106bd565b610163565b600080546001600160a01b03166100d1848461022e565b6001600160a01b0316146100e65760006100ef565b630b135d3f60e11b5b90505b92915050565b6000546001600160a01b031633146101575760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6101616000610252565b565b6000546001600160a01b031633146101bd5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161014e565b6001600160a01b0381166102225760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161014e565b61022b81610252565b50565b600080600061023d85856102a2565b9150915061024a81610310565b509392505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008082516041036102d85760208301516040840151606085015160001a6102cc878285856104c6565b94509450505050610309565b825160400361030157602083015160408401516102f68683836105b3565b935093505050610309565b506000905060025b9250929050565b6000816004811115610324576103246106ed565b0361032c5750565b6001816004811115610340576103406106ed565b0361038d5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161014e565b60028160048111156103a1576103a16106ed565b036103ee5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161014e565b6003816004811115610402576104026106ed565b0361045a5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161014e565b600481600481111561046e5761046e6106ed565b0361022b5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b606482015260840161014e565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156104fd57506000905060036105aa565b8460ff16601b1415801561051557508460ff16601c14155b1561052657506000905060046105aa565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561057a573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166105a3576000600192509250506105aa565b9150600090505b94509492505050565b6000806001600160ff1b038316816105d060ff86901c601b610703565b90506105de878288856104c6565b935093505050935093915050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561061557600080fd5b82359150602083013567ffffffffffffffff8082111561063457600080fd5b818501915085601f83011261064857600080fd5b81358181111561065a5761065a6105ec565b604051601f8201601f19908116603f01168101908382118183101715610682576106826105ec565b8160405282815288602084870101111561069b57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6000602082840312156106cf57600080fd5b81356001600160a01b03811681146106e657600080fd5b9392505050565b634e487b7160e01b600052602160045260246000fd5b808201808211156100f257634e487b7160e01b600052601160045260246000fdfea264697066735822122017fa0825a889ec7d24b3670409c85fa8c5883ae325bd08dfb86860447e53e26464736f6c63430008150033",
  "bytecodeSha1": "4c8d3a59cc1e52855b54f4d0be38e3ba1072d1b2",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.21+commit.d9974bed"
  },
  "contractName": "ERC1271WalletMock",
  "coverageMap": {
    "branches": {
      "11": {
        "Ownable.transferOwnership": {
          "34": [
            2006,
            2028,
            true
          ]
        }
      },
      "202": {},
      "207": {},
      "209": {
        "ECDSA._throwError": {
          "25": [
            601,
            630,
            false
          ],
          "26": [
            697,
            735,
            false
          ],
          "27": [
            806,
            850,
            false
          ],
          "28": [
            928,
            967,
            false
          ],
          "29": [
            1048,
            1087,
            false
          ]
        },
        "ECDSA.tryRecover": {
          "23": [
            2539,
            2561,
            false
          ],
          "24": [
            3021,
            3043,
            false
          ],
          "30": [
            6735,
            6814,
            false
          ],
          "31": [
            6905,
            6912,
            false
          ],
          "32": [
            6916,
            6923,
            false
          ],
          "33": [
            7150,
            7170,
            false
          ]
        }
      },
      "31": {},
      "69": {
        "ERC1271WalletMock.isValidSignature": {
          "22": [
            444,
            485,
            true
          ]
        }
      }
    },
    "statements": {
      "11": {
        "Ownable._transferOwnership": {
          "8": [
            2378,
            2395
          ],
          "9": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "0": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "3": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "4": [
            1998,
            2071
          ],
          "5": [
            2081,
            2109
          ]
        }
      },
      "202": {
        "Context._msgSender": {
          "2": [
            712,
            729
          ]
        }
      },
      "207": {},
      "209": {
        "ECDSA._throwError": {
          "13": [
            751,
            785
          ],
          "14": [
            866,
            907
          ],
          "15": [
            983,
            1027
          ],
          "16": [
            1103,
            1147
          ]
        },
        "ECDSA.recover": {
          "6": [
            4469,
            4487
          ],
          "7": [
            4497,
            4513
          ]
        },
        "ECDSA.tryRecover": {
          "10": [
            2968,
            3000
          ],
          "11": [
            3373,
            3403
          ],
          "12": [
            3434,
            3490
          ],
          "17": [
            6830,
            6881
          ],
          "18": [
            6939,
            6990
          ],
          "19": [
            7186,
            7236
          ],
          "20": [
            7257,
            7294
          ],
          "21": [
            5071,
            5103
          ]
        }
      },
      "31": {},
      "69": {
        "ERC1271WalletMock.isValidSignature": {
          "1": [
            437,
            530
          ]
        }
      }
    }
  },
  "dependencies": [
    "Context",
    "ECDSA",
    "IERC1271",
    "Ownable",
    "Strings"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80631626ba7e14610051578063715018a6146100825780638da5cb5b1461008c578063f2fde38b146100a7575b600080fd5b61006461005f366004610602565b6100ba565b6040516001600160e01b031990911681526020015b60405180910390f35b61008a6100f8565b005b6000546040516001600160a01b039091168152602001610079565b61008a6100b53660046106bd565b610163565b600080546001600160a01b03166100d1848461022e565b6001600160a01b0316146100e65760006100ef565b630b135d3f60e11b5b90505b92915050565b6000546001600160a01b031633146101575760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6101616000610252565b565b6000546001600160a01b031633146101bd5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161014e565b6001600160a01b0381166102225760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161014e565b61022b81610252565b50565b600080600061023d85856102a2565b9150915061024a81610310565b509392505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008082516041036102d85760208301516040840151606085015160001a6102cc878285856104c6565b94509450505050610309565b825160400361030157602083015160408401516102f68683836105b3565b935093505050610309565b506000905060025b9250929050565b6000816004811115610324576103246106ed565b0361032c5750565b6001816004811115610340576103406106ed565b0361038d5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161014e565b60028160048111156103a1576103a16106ed565b036103ee5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161014e565b6003816004811115610402576104026106ed565b0361045a5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161014e565b600481600481111561046e5761046e6106ed565b0361022b5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b606482015260840161014e565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156104fd57506000905060036105aa565b8460ff16601b1415801561051557508460ff16601c14155b1561052657506000905060046105aa565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561057a573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166105a3576000600192509250506105aa565b9150600090505b94509492505050565b6000806001600160ff1b038316816105d060ff86901c601b610703565b90506105de878288856104c6565b935093505050935093915050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561061557600080fd5b82359150602083013567ffffffffffffffff8082111561063457600080fd5b818501915085601f83011261064857600080fd5b81358181111561065a5761065a6105ec565b604051601f8201601f19908116603f01168101908382118183101715610682576106826105ec565b8160405282815288602084870101111561069b57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6000602082840312156106cf57600080fd5b81356001600160a01b03811681146106e657600080fd5b9392505050565b634e487b7160e01b600052602160045260246000fd5b808201808211156100f257634e487b7160e01b600052601160045260246000fdfea264697066735822122017fa0825a889ec7d24b3670409c85fa8c5883ae325bd08dfb86860447e53e26464736f6c63430008150033",
  "deployedSourceMap": "170:369:69:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;314:223;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;1302:33:249;;;1284:52;;1272:2;1257:18;314:223:69;;;;;;;;1668:101:11;;;:::i;:::-;;1036:85;1082:7;1108:6;1036:85;;-1:-1:-1;;;;;1108:6:11;;;1493:51:249;;1481:2;1466:18;1036:85:11;1347:203:249;1918:198:11;;;;;;:::i;:::-;;:::i;314:223:69:-;408:17;1108:6:11;;-1:-1:-1;;;;;1108:6:11;444:30:69;458:4;464:9;444:13;:30::i;:::-;-1:-1:-1;;;;;444:41:69;;:86;;528:1;444:86;;;-1:-1:-1;;;444:86:69;437:93;;314:223;;;;;:::o;1668:101:11:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:11;719:10:202;1248:23:11;1240:68;;;;-1:-1:-1;;;1240:68:11;;2048:2:249;1240:68:11;;;2030:21:249;;;2067:18;;;2060:30;2126:34;2106:18;;;2099:62;2178:18;;1240:68:11;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1918:198::-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:11;719:10:202;1248:23:11;1240:68;;;;-1:-1:-1;;;1240:68:11;;2048:2:249;1240:68:11;;;2030:21:249;;;2067:18;;;2060:30;2126:34;2106:18;;;2099:62;2178:18;;1240:68:11;1846:356:249;1240:68:11;-1:-1:-1;;;;;2006:22:11;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:11;;2409:2:249;1998:73:11::1;::::0;::::1;2391:21:249::0;2448:2;2428:18;;;2421:30;2487:34;2467:18;;;2460:62;-1:-1:-1;;;2538:18:249;;;2531:36;2584:19;;1998:73:11::1;2207:402:249::0;1998:73:11::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;4293:227:209:-;4371:7;4391:17;4410:18;4432:27;4443:4;4449:9;4432:10;:27::i;:::-;4390:69;;;;4469:18;4481:5;4469:11;:18::i;:::-;-1:-1:-1;4504:9:209;4293:227;-1:-1:-1;;;4293:227:209:o;2270:187:11:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:11;;;-1:-1:-1;;;;;;2378:17:11;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;2228:1279:209:-;2309:7;2318:12;2539:9;:16;2559:2;2539:22;2535:966;;2828:4;2813:20;;2807:27;2877:4;2862:20;;2856:27;2934:4;2919:20;;2913:27;2577:9;2905:36;2975:25;2986:4;2905:36;2807:27;2856;2975:10;:25::i;:::-;2968:32;;;;;;;;;2535:966;3021:9;:16;3041:2;3021:22;3017:484;;3290:4;3275:20;;3269:27;3340:4;3325:20;;3319:27;3380:23;3391:4;3269:27;3319;3380:10;:23::i;:::-;3373:30;;;;;;;;3017:484;-1:-1:-1;3450:1:209;;-1:-1:-1;3454:35:209;3017:484;2228:1279;;;;;:::o;533:631::-;610:20;601:5;:29;;;;;;;;:::i;:::-;;597:561;;533:631;:::o;597:561::-;706:29;697:5;:38;;;;;;;;:::i;:::-;;693:465;;751:34;;-1:-1:-1;;;751:34:209;;2948:2:249;751:34:209;;;2930:21:249;2987:2;2967:18;;;2960:30;3026:26;3006:18;;;2999:54;3070:18;;751:34:209;2746:348:249;693:465:209;815:35;806:5;:44;;;;;;;;:::i;:::-;;802:356;;866:41;;-1:-1:-1;;;866:41:209;;3301:2:249;866:41:209;;;3283:21:249;3340:2;3320:18;;;3313:30;3379:33;3359:18;;;3352:61;3430:18;;866:41:209;3099:355:249;802:356:209;937:30;928:5;:39;;;;;;;;:::i;:::-;;924:234;;983:44;;-1:-1:-1;;;983:44:209;;3661:2:249;983:44:209;;;3643:21:249;3700:2;3680:18;;;3673:30;3739:34;3719:18;;;3712:62;-1:-1:-1;;;3790:18:249;;;3783:32;3832:19;;983:44:209;3459:398:249;924:234:209;1057:30;1048:5;:39;;;;;;;;:::i;:::-;;1044:114;;1103:44;;-1:-1:-1;;;1103:44:209;;4064:2:249;1103:44:209;;;4046:21:249;4103:2;4083:18;;;4076:30;4142:34;4122:18;;;4115:62;-1:-1:-1;;;4193:18:249;;;4186:32;4235:19;;1103:44:209;3862:398:249;5701:1600:209;5827:7;;6748:66;6735:79;;6731:161;;;-1:-1:-1;6846:1:209;;-1:-1:-1;6850:30:209;6830:51;;6731:161;6905:1;:7;;6910:2;6905:7;;:18;;;;;6916:1;:7;;6921:2;6916:7;;6905:18;6901:100;;;-1:-1:-1;6955:1:209;;-1:-1:-1;6959:30:209;6939:51;;6901:100;7112:24;;;7095:14;7112:24;;;;;;;;;4492:25:249;;;4565:4;4553:17;;4533:18;;;4526:45;;;;4587:18;;;4580:34;;;4630:18;;;4623:34;;;7112:24:209;;4464:19:249;;7112:24:209;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7112:24:209;;-1:-1:-1;;7112:24:209;;;-1:-1:-1;;;;;;;7150:20:209;;7146:101;;7202:1;7206:29;7186:50;;;;;;;7146:101;7265:6;-1:-1:-1;7273:20:209;;-1:-1:-1;5701:1600:209;;;;;;;;:::o;4774:336::-;4884:7;;-1:-1:-1;;;;;4929:80:209;;4884:7;5035:25;5051:3;5036:18;;;5058:2;5035:25;:::i;:::-;5019:42;;5078:25;5089:4;5095:1;5098;5101;5078:10;:25::i;:::-;5071:32;;;;;;4774:336;;;;;;:::o;14:127:249:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:989;223:6;231;284:2;272:9;263:7;259:23;255:32;252:52;;;300:1;297;290:12;252:52;336:9;323:23;313:33;;397:2;386:9;382:18;369:32;420:18;461:2;453:6;450:14;447:34;;;477:1;474;467:12;447:34;515:6;504:9;500:22;490:32;;560:7;553:4;549:2;545:13;541:27;531:55;;582:1;579;572:12;531:55;618:2;605:16;640:2;636;633:10;630:36;;;646:18;;:::i;:::-;721:2;715:9;689:2;775:13;;-1:-1:-1;;771:22:249;;;795:2;767:31;763:40;751:53;;;819:18;;;839:22;;;816:46;813:72;;;865:18;;:::i;:::-;905:10;901:2;894:22;940:2;932:6;925:18;980:7;975:2;970;966;962:11;958:20;955:33;952:53;;;1001:1;998;991:12;952:53;1057:2;1052;1048;1044:11;1039:2;1031:6;1027:15;1014:46;1102:1;1097:2;1092;1084:6;1080:15;1076:24;1069:35;1123:6;1113:16;;;;;;;146:989;;;;;:::o;1555:286::-;1614:6;1667:2;1655:9;1646:7;1642:23;1638:32;1635:52;;;1683:1;1680;1673:12;1635:52;1709:23;;-1:-1:-1;;;;;1761:31:249;;1751:42;;1741:70;;1807:1;1804;1797:12;1741:70;1830:5;1555:286;-1:-1:-1;;;1555:286:249:o;2614:127::-;2675:10;2670:3;2666:20;2663:1;2656:31;2706:4;2703:1;2696:15;2730:4;2727:1;2720:15;4668:222;4733:9;;;4754:10;;;4751:133;;;4806:10;4801:3;4797:20;4794:1;4787:31;4841:4;4838:1;4831:15;4869:4;4866:1;4859:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "isValidSignature(bytes32,bytes)": {
        "details": "Should return whether the signature provided is valid for the provided data",
        "params": {
          "hash": "Hash of the data to be signed",
          "signature": "Signature byte array associated with _data"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    170,
    539
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1626BA7E EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xA7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x5F CALLDATASIZE PUSH1 0x4 PUSH2 0x602 JUMP JUMPDEST PUSH2 0xBA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8A PUSH2 0xF8 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x79 JUMP JUMPDEST PUSH2 0x8A PUSH2 0xB5 CALLDATASIZE PUSH1 0x4 PUSH2 0x6BD JUMP JUMPDEST PUSH2 0x163 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD1 DUP5 DUP5 PUSH2 0x22E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xE6 JUMPI PUSH1 0x0 PUSH2 0xEF JUMP JUMPDEST PUSH4 0xB135D3F PUSH1 0xE1 SHL JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x157 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x161 PUSH1 0x0 PUSH2 0x252 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x14E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x222 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x14E JUMP JUMPDEST PUSH2 0x22B DUP2 PUSH2 0x252 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x23D DUP6 DUP6 PUSH2 0x2A2 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x24A DUP2 PUSH2 0x310 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MLOAD PUSH1 0x41 SUB PUSH2 0x2D8 JUMPI PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0x2CC DUP8 DUP3 DUP6 DUP6 PUSH2 0x4C6 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP POP PUSH2 0x309 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x40 SUB PUSH2 0x301 JUMPI PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x40 DUP5 ADD MLOAD PUSH2 0x2F6 DUP7 DUP4 DUP4 PUSH2 0x5B3 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP POP PUSH2 0x309 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP PUSH1 0x2 JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x324 JUMPI PUSH2 0x324 PUSH2 0x6ED JUMP JUMPDEST SUB PUSH2 0x32C JUMPI POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x340 JUMPI PUSH2 0x340 PUSH2 0x6ED JUMP JUMPDEST SUB PUSH2 0x38D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x14E JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x3A1 JUMPI PUSH2 0x3A1 PUSH2 0x6ED JUMP JUMPDEST SUB PUSH2 0x3EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x14E JUMP JUMPDEST PUSH1 0x3 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x402 JUMPI PUSH2 0x402 PUSH2 0x6ED JUMP JUMPDEST SUB PUSH2 0x45A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7565 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x14E JUMP JUMPDEST PUSH1 0x4 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x46E JUMPI PUSH2 0x46E PUSH2 0x6ED JUMP JUMPDEST SUB PUSH2 0x22B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202776272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7565 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x14E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 GT ISZERO PUSH2 0x4FD JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x3 PUSH2 0x5AA JUMP JUMPDEST DUP5 PUSH1 0xFF AND PUSH1 0x1B EQ ISZERO DUP1 ISZERO PUSH2 0x515 JUMPI POP DUP5 PUSH1 0xFF AND PUSH1 0x1C EQ ISZERO JUMPDEST ISZERO PUSH2 0x526 JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x4 PUSH2 0x5AA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP10 SWAP1 MSTORE PUSH1 0xFF DUP9 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x57A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5A3 JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x5AA JUMP JUMPDEST SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP4 AND DUP2 PUSH2 0x5D0 PUSH1 0xFF DUP7 SWAP1 SHR PUSH1 0x1B PUSH2 0x703 JUMP JUMPDEST SWAP1 POP PUSH2 0x5DE DUP8 DUP3 DUP9 DUP6 PUSH2 0x4C6 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x615 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x634 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x648 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x65A JUMPI PUSH2 0x65A PUSH2 0x5EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x682 JUMPI PUSH2 0x682 PUSH2 0x5EC JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x69B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xF2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR STATICCALL ADDMOD 0x25 0xA8 DUP10 0xEC PUSH30 0x24B3670409C85FA8C5883AE325BD08DFB86860447E53E26464736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        170,
        539
      ],
      "op": "PUSH1",
      "path": "69",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        170,
        539
      ],
      "op": "PUSH1",
      "path": "69",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        170,
        539
      ],
      "op": "MSTORE",
      "path": "69"
    },
    "5": {
      "fn": null,
      "offset": [
        170,
        539
      ],
      "op": "CALLVALUE",
      "path": "69"
    },
    "6": {
      "fn": null,
      "offset": [
        170,
        539
      ],
      "op": "DUP1",
      "path": "69"
    },
    "7": {
      "fn": null,
      "offset": [
        170,
        539
      ],
      "op": "ISZERO",
      "path": "69"
    },
    "8": {
      "fn": null,
      "offset": [
        170,
        539
      ],
      "op": "PUSH2",
      "path": "69",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        170,
        539
      ],
      "op": "JUMPI",
      "path": "69"
    },
    "12": {
      "fn": null,
      "offset": [
        170,
        539
      ],
      "op": "PUSH1",
      "path": "69",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        170,
        539
      ],
      "op": "DUP1",
      "path": "69"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        170,
        539
      ],
      "op": "REVERT",
      "path": "69"
    },
    "16": {
      "fn": null,
      "offset": [
        170,
        539
      ],
      "op": "JUMPDEST",
      "path": "69"
    },
    "17": {
      "fn": null,
      "offset": [
        170,
        539
      ],
      "op": "POP",
      "path": "69"
    },
    "18": {
      "fn": null,
      "offset": [
        170,
        539
      ],
      "op": "PUSH1",
      "path": "69",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        170,
        539
      ],
      "op": "CALLDATASIZE",
      "path": "69"
    },
    "21": {
      "fn": null,
      "offset": [
        170,
        539
      ],
      "op": "LT",
      "path": "69"
    },
    "22": {
      "fn": null,
      "offset": [
        170,
        539
      ],
      "op": "PUSH2",
      "path": "69",
      "value": "0x4C"
    },
    "25": {
      "fn": null,
      "offset": [
        170,
        539
      ],
      "op": "JUMPI",
      "path": "69"
    },
    "26": {
      "fn": null,
      "offset": [
        170,
        539
      ],
      "op": "PUSH1",
      "path": "69",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        170,
        539
      ],
      "op": "CALLDATALOAD",
      "path": "69"
    },
    "29": {
      "fn": null,
      "offset": [
        170,
        539
      ],
      "op": "PUSH1",
      "path": "69",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        170,
        539
      ],
      "op": "SHR",
      "path": "69"
    },
    "32": {
      "fn": null,
      "offset": [
        170,
        539
      ],
      "op": "DUP1",
      "path": "69"
    },
    "33": {
      "fn": null,
      "offset": [
        170,
        539
      ],
      "op": "PUSH4",
      "path": "69",
      "value": "0x1626BA7E"
    },
    "38": {
      "fn": null,
      "offset": [
        170,
        539
      ],
      "op": "EQ",
      "path": "69"
    },
    "39": {
      "fn": null,
      "offset": [
        170,
        539
      ],
      "op": "PUSH2",
      "path": "69",
      "value": "0x51"
    },
    "42": {
      "fn": null,
      "offset": [
        170,
        539
      ],
      "op": "JUMPI",
      "path": "69"
    },
    "43": {
      "fn": null,
      "offset": [
        170,
        539
      ],
      "op": "DUP1",
      "path": "69"
    },
    "44": {
      "fn": null,
      "offset": [
        170,
        539
      ],
      "op": "PUSH4",
      "path": "69",
      "value": "0x715018A6"
    },
    "49": {
      "fn": null,
      "offset": [
        170,
        539
      ],
      "op": "EQ",
      "path": "69"
    },
    "50": {
      "fn": null,
      "offset": [
        170,
        539
      ],
      "op": "PUSH2",
      "path": "69",
      "value": "0x82"
    },
    "53": {
      "fn": null,
      "offset": [
        170,
        539
      ],
      "op": "JUMPI",
      "path": "69"
    },
    "54": {
      "fn": null,
      "offset": [
        170,
        539
      ],
      "op": "DUP1",
      "path": "69"
    },
    "55": {
      "fn": null,
      "offset": [
        170,
        539
      ],
      "op": "PUSH4",
      "path": "69",
      "value": "0x8DA5CB5B"
    },
    "60": {
      "fn": null,
      "offset": [
        170,
        539
      ],
      "op": "EQ",
      "path": "69"
    },
    "61": {
      "fn": null,
      "offset": [
        170,
        539
      ],
      "op": "PUSH2",
      "path": "69",
      "value": "0x8C"
    },
    "64": {
      "fn": null,
      "offset": [
        170,
        539
      ],
      "op": "JUMPI",
      "path": "69"
    },
    "65": {
      "fn": null,
      "offset": [
        170,
        539
      ],
      "op": "DUP1",
      "path": "69"
    },
    "66": {
      "fn": null,
      "offset": [
        170,
        539
      ],
      "op": "PUSH4",
      "path": "69",
      "value": "0xF2FDE38B"
    },
    "71": {
      "fn": null,
      "offset": [
        170,
        539
      ],
      "op": "EQ",
      "path": "69"
    },
    "72": {
      "fn": null,
      "offset": [
        170,
        539
      ],
      "op": "PUSH2",
      "path": "69",
      "value": "0xA7"
    },
    "75": {
      "fn": null,
      "offset": [
        170,
        539
      ],
      "op": "JUMPI",
      "path": "69"
    },
    "76": {
      "fn": null,
      "offset": [
        170,
        539
      ],
      "op": "JUMPDEST",
      "path": "69"
    },
    "77": {
      "fn": null,
      "offset": [
        170,
        539
      ],
      "op": "PUSH1",
      "path": "69",
      "value": "0x0"
    },
    "79": {
      "fn": null,
      "offset": [
        170,
        539
      ],
      "op": "DUP1",
      "path": "69"
    },
    "80": {
      "first_revert": true,
      "fn": null,
      "offset": [
        170,
        539
      ],
      "op": "REVERT",
      "path": "69"
    },
    "81": {
      "fn": "ERC1271WalletMock.isValidSignature",
      "offset": [
        314,
        537
      ],
      "op": "JUMPDEST",
      "path": "69"
    },
    "82": {
      "fn": "ERC1271WalletMock.isValidSignature",
      "offset": [
        314,
        537
      ],
      "op": "PUSH2",
      "path": "69",
      "value": "0x64"
    },
    "85": {
      "fn": "ERC1271WalletMock.isValidSignature",
      "offset": [
        314,
        537
      ],
      "op": "PUSH2",
      "path": "69",
      "value": "0x5F"
    },
    "88": {
      "fn": "ERC1271WalletMock.isValidSignature",
      "offset": [
        314,
        537
      ],
      "op": "CALLDATASIZE",
      "path": "69"
    },
    "89": {
      "fn": "ERC1271WalletMock.isValidSignature",
      "offset": [
        314,
        537
      ],
      "op": "PUSH1",
      "path": "69",
      "value": "0x4"
    },
    "91": {
      "fn": "ERC1271WalletMock.isValidSignature",
      "offset": [
        314,
        537
      ],
      "op": "PUSH2",
      "path": "69",
      "value": "0x602"
    },
    "94": {
      "fn": "ERC1271WalletMock.isValidSignature",
      "jump": "i",
      "offset": [
        314,
        537
      ],
      "op": "JUMP",
      "path": "69"
    },
    "95": {
      "fn": "ERC1271WalletMock.isValidSignature",
      "offset": [
        314,
        537
      ],
      "op": "JUMPDEST",
      "path": "69"
    },
    "96": {
      "fn": "ERC1271WalletMock.isValidSignature",
      "offset": [
        314,
        537
      ],
      "op": "PUSH2",
      "path": "69",
      "value": "0xBA"
    },
    "99": {
      "fn": "ERC1271WalletMock.isValidSignature",
      "jump": "i",
      "offset": [
        314,
        537
      ],
      "op": "JUMP",
      "path": "69"
    },
    "100": {
      "fn": "ERC1271WalletMock.isValidSignature",
      "offset": [
        314,
        537
      ],
      "op": "JUMPDEST",
      "path": "69"
    },
    "101": {
      "fn": "ERC1271WalletMock.isValidSignature",
      "offset": [
        314,
        537
      ],
      "op": "PUSH1",
      "path": "69",
      "value": "0x40"
    },
    "103": {
      "fn": "ERC1271WalletMock.isValidSignature",
      "offset": [
        314,
        537
      ],
      "op": "MLOAD",
      "path": "69"
    },
    "104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "108": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "110": {
      "op": "SHL"
    },
    "111": {
      "op": "SUB"
    },
    "112": {
      "op": "NOT"
    },
    "113": {
      "op": "SWAP1"
    },
    "114": {
      "op": "SWAP2"
    },
    "115": {
      "op": "AND"
    },
    "116": {
      "op": "DUP2"
    },
    "117": {
      "op": "MSTORE"
    },
    "118": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "120": {
      "op": "ADD"
    },
    "121": {
      "fn": "ERC1271WalletMock.isValidSignature",
      "offset": [
        314,
        537
      ],
      "op": "JUMPDEST",
      "path": "69"
    },
    "122": {
      "fn": "ERC1271WalletMock.isValidSignature",
      "offset": [
        314,
        537
      ],
      "op": "PUSH1",
      "path": "69",
      "value": "0x40"
    },
    "124": {
      "fn": "ERC1271WalletMock.isValidSignature",
      "offset": [
        314,
        537
      ],
      "op": "MLOAD",
      "path": "69"
    },
    "125": {
      "fn": "ERC1271WalletMock.isValidSignature",
      "offset": [
        314,
        537
      ],
      "op": "DUP1",
      "path": "69"
    },
    "126": {
      "fn": "ERC1271WalletMock.isValidSignature",
      "offset": [
        314,
        537
      ],
      "op": "SWAP2",
      "path": "69"
    },
    "127": {
      "fn": "ERC1271WalletMock.isValidSignature",
      "offset": [
        314,
        537
      ],
      "op": "SUB",
      "path": "69"
    },
    "128": {
      "fn": "ERC1271WalletMock.isValidSignature",
      "offset": [
        314,
        537
      ],
      "op": "SWAP1",
      "path": "69"
    },
    "129": {
      "fn": "ERC1271WalletMock.isValidSignature",
      "offset": [
        314,
        537
      ],
      "op": "RETURN",
      "path": "69"
    },
    "130": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "131": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x8A"
    },
    "134": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF8"
    },
    "137": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "11"
    },
    "138": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "139": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "STOP",
      "path": "11"
    },
    "140": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "141": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "143": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "11",
      "statement": 0
    },
    "144": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "146": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "147": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "149": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "151": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "153": {
      "op": "SHL"
    },
    "154": {
      "op": "SUB"
    },
    "155": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "156": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "157": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "11"
    },
    "158": {
      "op": "DUP2"
    },
    "159": {
      "op": "MSTORE"
    },
    "160": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "162": {
      "op": "ADD"
    },
    "163": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x79"
    },
    "166": {
      "op": "JUMP"
    },
    "167": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "168": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x8A"
    },
    "171": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xB5"
    },
    "174": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "175": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "177": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x6BD"
    },
    "180": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "11"
    },
    "181": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "182": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x163"
    },
    "185": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "11"
    },
    "186": {
      "fn": "ERC1271WalletMock.isValidSignature",
      "offset": [
        314,
        537
      ],
      "op": "JUMPDEST",
      "path": "69"
    },
    "187": {
      "fn": "ERC1271WalletMock.isValidSignature",
      "offset": [
        408,
        425
      ],
      "op": "PUSH1",
      "path": "69",
      "value": "0x0"
    },
    "189": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DUP1",
      "path": "11"
    },
    "190": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "195": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "197": {
      "op": "SHL"
    },
    "198": {
      "op": "SUB"
    },
    "199": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "11"
    },
    "200": {
      "fn": "ERC1271WalletMock.isValidSignature",
      "offset": [
        444,
        474
      ],
      "op": "PUSH2",
      "path": "69",
      "statement": 1,
      "value": "0xD1"
    },
    "203": {
      "fn": "ERC1271WalletMock.isValidSignature",
      "offset": [
        458,
        462
      ],
      "op": "DUP5",
      "path": "69"
    },
    "204": {
      "fn": "ERC1271WalletMock.isValidSignature",
      "offset": [
        464,
        473
      ],
      "op": "DUP5",
      "path": "69"
    },
    "205": {
      "fn": "ERC1271WalletMock.isValidSignature",
      "offset": [
        444,
        457
      ],
      "op": "PUSH2",
      "path": "69",
      "value": "0x22E"
    },
    "208": {
      "fn": "ERC1271WalletMock.isValidSignature",
      "jump": "i",
      "offset": [
        444,
        474
      ],
      "op": "JUMP",
      "path": "69"
    },
    "209": {
      "fn": "ERC1271WalletMock.isValidSignature",
      "offset": [
        444,
        474
      ],
      "op": "JUMPDEST",
      "path": "69"
    },
    "210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "214": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "216": {
      "op": "SHL"
    },
    "217": {
      "op": "SUB"
    },
    "218": {
      "fn": "ERC1271WalletMock.isValidSignature",
      "offset": [
        444,
        485
      ],
      "op": "AND",
      "path": "69"
    },
    "219": {
      "branch": 22,
      "fn": "ERC1271WalletMock.isValidSignature",
      "offset": [
        444,
        485
      ],
      "op": "EQ",
      "path": "69"
    },
    "220": {
      "fn": "ERC1271WalletMock.isValidSignature",
      "offset": [
        444,
        530
      ],
      "op": "PUSH2",
      "path": "69",
      "value": "0xE6"
    },
    "223": {
      "branch": 22,
      "fn": "ERC1271WalletMock.isValidSignature",
      "offset": [
        444,
        530
      ],
      "op": "JUMPI",
      "path": "69"
    },
    "224": {
      "fn": "ERC1271WalletMock.isValidSignature",
      "offset": [
        528,
        529
      ],
      "op": "PUSH1",
      "path": "69",
      "value": "0x0"
    },
    "226": {
      "fn": "ERC1271WalletMock.isValidSignature",
      "offset": [
        444,
        530
      ],
      "op": "PUSH2",
      "path": "69",
      "value": "0xEF"
    },
    "229": {
      "fn": "ERC1271WalletMock.isValidSignature",
      "offset": [
        444,
        530
      ],
      "op": "JUMP",
      "path": "69"
    },
    "230": {
      "fn": "ERC1271WalletMock.isValidSignature",
      "offset": [
        444,
        530
      ],
      "op": "JUMPDEST",
      "path": "69"
    },
    "231": {
      "op": "PUSH4",
      "value": "0xB135D3F"
    },
    "236": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "238": {
      "op": "SHL"
    },
    "239": {
      "fn": "ERC1271WalletMock.isValidSignature",
      "offset": [
        444,
        530
      ],
      "op": "JUMPDEST",
      "path": "69"
    },
    "240": {
      "fn": "ERC1271WalletMock.isValidSignature",
      "offset": [
        437,
        530
      ],
      "op": "SWAP1",
      "path": "69"
    },
    "241": {
      "fn": "ERC1271WalletMock.isValidSignature",
      "offset": [
        437,
        530
      ],
      "op": "POP",
      "path": "69"
    },
    "242": {
      "fn": "ERC1271WalletMock.isValidSignature",
      "offset": [
        314,
        537
      ],
      "op": "JUMPDEST",
      "path": "69"
    },
    "243": {
      "fn": "ERC1271WalletMock.isValidSignature",
      "offset": [
        314,
        537
      ],
      "op": "SWAP3",
      "path": "69"
    },
    "244": {
      "fn": "ERC1271WalletMock.isValidSignature",
      "offset": [
        314,
        537
      ],
      "op": "SWAP2",
      "path": "69"
    },
    "245": {
      "fn": "ERC1271WalletMock.isValidSignature",
      "offset": [
        314,
        537
      ],
      "op": "POP",
      "path": "69"
    },
    "246": {
      "fn": "ERC1271WalletMock.isValidSignature",
      "offset": [
        314,
        537
      ],
      "op": "POP",
      "path": "69"
    },
    "247": {
      "fn": "ERC1271WalletMock.isValidSignature",
      "jump": "o",
      "offset": [
        314,
        537
      ],
      "op": "JUMP",
      "path": "69"
    },
    "248": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "249": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "251": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "254": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "256": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "258": {
      "op": "SHL"
    },
    "259": {
      "op": "SUB"
    },
    "260": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "11"
    },
    "261": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "202",
      "statement": 2
    },
    "262": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "11"
    },
    "263": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x157"
    },
    "266": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "267": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "269": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "270": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "274": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "276": {
      "op": "SHL"
    },
    "277": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "11"
    },
    "278": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "279": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "281": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "283": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "DUP3",
      "path": "11"
    },
    "284": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "11"
    },
    "285": {
      "op": "DUP2"
    },
    "286": {
      "op": "SWAP1"
    },
    "287": {
      "op": "MSTORE"
    },
    "288": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "290": {
      "op": "DUP3"
    },
    "291": {
      "op": "ADD"
    },
    "292": {
      "op": "MSTORE"
    },
    "293": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "326": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "328": {
      "op": "DUP3"
    },
    "329": {
      "op": "ADD"
    },
    "330": {
      "op": "MSTORE"
    },
    "331": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "333": {
      "op": "ADD"
    },
    "334": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "335": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "337": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "338": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "DUP1",
      "path": "11"
    },
    "339": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "340": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SUB",
      "path": "11"
    },
    "341": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "342": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "11"
    },
    "343": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "344": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 3,
      "value": "0x161"
    },
    "347": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "349": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x252"
    },
    "352": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "11"
    },
    "353": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "354": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "11"
    },
    "355": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "356": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "358": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "363": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "365": {
      "op": "SHL"
    },
    "366": {
      "op": "SUB"
    },
    "367": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "11"
    },
    "368": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "202"
    },
    "369": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "11"
    },
    "370": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1BD"
    },
    "373": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "374": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "376": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "377": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "381": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "383": {
      "op": "SHL"
    },
    "384": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "11"
    },
    "385": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "386": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "388": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "390": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "DUP3",
      "path": "11"
    },
    "391": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "11"
    },
    "392": {
      "op": "DUP2"
    },
    "393": {
      "op": "SWAP1"
    },
    "394": {
      "op": "MSTORE"
    },
    "395": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "397": {
      "op": "DUP3"
    },
    "398": {
      "op": "ADD"
    },
    "399": {
      "op": "MSTORE"
    },
    "400": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "433": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "435": {
      "op": "DUP3"
    },
    "436": {
      "op": "ADD"
    },
    "437": {
      "op": "MSTORE"
    },
    "438": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "440": {
      "op": "ADD"
    },
    "441": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x14E"
    },
    "444": {
      "op": "JUMP"
    },
    "445": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "450": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "452": {
      "op": "SHL"
    },
    "453": {
      "op": "SUB"
    },
    "454": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "11",
      "statement": 4
    },
    "455": {
      "branch": 34,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "11"
    },
    "456": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x222"
    },
    "459": {
      "branch": 34,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "460": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "462": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "463": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "467": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "469": {
      "op": "SHL"
    },
    "470": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "11"
    },
    "471": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "472": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "474": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "476": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "11"
    },
    "477": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "11"
    },
    "478": {
      "op": "MSTORE"
    },
    "479": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "481": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "483": {
      "op": "DUP3"
    },
    "484": {
      "op": "ADD"
    },
    "485": {
      "op": "MSTORE"
    },
    "486": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "519": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "521": {
      "op": "DUP3"
    },
    "522": {
      "op": "ADD"
    },
    "523": {
      "op": "MSTORE"
    },
    "524": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "531": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "533": {
      "op": "SHL"
    },
    "534": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "536": {
      "op": "DUP3"
    },
    "537": {
      "op": "ADD"
    },
    "538": {
      "op": "MSTORE"
    },
    "539": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "541": {
      "op": "ADD"
    },
    "542": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x14E"
    },
    "545": {
      "op": "JUMP"
    },
    "546": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "547": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 5,
      "value": "0x22B"
    },
    "550": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "11"
    },
    "551": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x252"
    },
    "554": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "11"
    },
    "555": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "556": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "POP",
      "path": "11"
    },
    "557": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "11"
    },
    "558": {
      "fn": "ECDSA.recover",
      "offset": [
        4293,
        4520
      ],
      "op": "JUMPDEST",
      "path": "209"
    },
    "559": {
      "fn": "ECDSA.recover",
      "offset": [
        4371,
        4378
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x0"
    },
    "561": {
      "fn": "ECDSA.recover",
      "offset": [
        4391,
        4408
      ],
      "op": "DUP1",
      "path": "209"
    },
    "562": {
      "fn": "ECDSA.recover",
      "offset": [
        4410,
        4428
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x0"
    },
    "564": {
      "fn": "ECDSA.recover",
      "offset": [
        4432,
        4459
      ],
      "op": "PUSH2",
      "path": "209",
      "value": "0x23D"
    },
    "567": {
      "fn": "ECDSA.recover",
      "offset": [
        4443,
        4447
      ],
      "op": "DUP6",
      "path": "209"
    },
    "568": {
      "fn": "ECDSA.recover",
      "offset": [
        4449,
        4458
      ],
      "op": "DUP6",
      "path": "209"
    },
    "569": {
      "fn": "ECDSA.recover",
      "offset": [
        4432,
        4442
      ],
      "op": "PUSH2",
      "path": "209",
      "value": "0x2A2"
    },
    "572": {
      "fn": "ECDSA.recover",
      "jump": "i",
      "offset": [
        4432,
        4459
      ],
      "op": "JUMP",
      "path": "209"
    },
    "573": {
      "fn": "ECDSA.recover",
      "offset": [
        4432,
        4459
      ],
      "op": "JUMPDEST",
      "path": "209"
    },
    "574": {
      "fn": "ECDSA.recover",
      "offset": [
        4390,
        4459
      ],
      "op": "SWAP2",
      "path": "209"
    },
    "575": {
      "fn": "ECDSA.recover",
      "offset": [
        4390,
        4459
      ],
      "op": "POP",
      "path": "209"
    },
    "576": {
      "fn": "ECDSA.recover",
      "offset": [
        4390,
        4459
      ],
      "op": "SWAP2",
      "path": "209"
    },
    "577": {
      "fn": "ECDSA.recover",
      "offset": [
        4390,
        4459
      ],
      "op": "POP",
      "path": "209"
    },
    "578": {
      "fn": "ECDSA.recover",
      "offset": [
        4469,
        4487
      ],
      "op": "PUSH2",
      "path": "209",
      "statement": 6,
      "value": "0x24A"
    },
    "581": {
      "fn": "ECDSA.recover",
      "offset": [
        4481,
        4486
      ],
      "op": "DUP2",
      "path": "209"
    },
    "582": {
      "fn": "ECDSA.recover",
      "offset": [
        4469,
        4480
      ],
      "op": "PUSH2",
      "path": "209",
      "value": "0x310"
    },
    "585": {
      "fn": "ECDSA.recover",
      "jump": "i",
      "offset": [
        4469,
        4487
      ],
      "op": "JUMP",
      "path": "209"
    },
    "586": {
      "fn": "ECDSA.recover",
      "offset": [
        4469,
        4487
      ],
      "op": "JUMPDEST",
      "path": "209"
    },
    "587": {
      "op": "POP"
    },
    "588": {
      "fn": "ECDSA.recover",
      "offset": [
        4504,
        4513
      ],
      "op": "SWAP4",
      "path": "209",
      "statement": 7
    },
    "589": {
      "fn": "ECDSA.recover",
      "offset": [
        4293,
        4520
      ],
      "op": "SWAP3",
      "path": "209"
    },
    "590": {
      "op": "POP"
    },
    "591": {
      "op": "POP"
    },
    "592": {
      "op": "POP"
    },
    "593": {
      "fn": "ECDSA.recover",
      "jump": "o",
      "offset": [
        4293,
        4520
      ],
      "op": "JUMP",
      "path": "209"
    },
    "594": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "595": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "597": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "11"
    },
    "598": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "599": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "601": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "603": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "605": {
      "op": "SHL"
    },
    "606": {
      "op": "SUB"
    },
    "607": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "11",
      "statement": 8
    },
    "608": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "11"
    },
    "609": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "11"
    },
    "610": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "612": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "614": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "616": {
      "op": "SHL"
    },
    "617": {
      "op": "SUB"
    },
    "618": {
      "op": "NOT"
    },
    "619": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "11"
    },
    "620": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "11"
    },
    "621": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "11"
    },
    "622": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "11"
    },
    "623": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP5",
      "path": "11"
    },
    "624": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "625": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 9,
      "value": "0x40"
    },
    "627": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "628": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "629": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "630": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "631": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "11"
    },
    "632": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "633": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP4",
      "path": "11"
    },
    "634": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "635": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "668": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "669": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "670": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "11"
    },
    "671": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "11"
    },
    "672": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "11"
    },
    "673": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "11"
    },
    "674": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2228,
        3507
      ],
      "op": "JUMPDEST",
      "path": "209"
    },
    "675": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2309,
        2316
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x0"
    },
    "677": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2318,
        2330
      ],
      "op": "DUP1",
      "path": "209"
    },
    "678": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2539,
        2548
      ],
      "op": "DUP3",
      "path": "209"
    },
    "679": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2539,
        2555
      ],
      "op": "MLOAD",
      "path": "209"
    },
    "680": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2559,
        2561
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x41"
    },
    "682": {
      "branch": 23,
      "fn": "ECDSA.tryRecover",
      "offset": [
        2539,
        2561
      ],
      "op": "SUB",
      "path": "209"
    },
    "683": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2535,
        3501
      ],
      "op": "PUSH2",
      "path": "209",
      "value": "0x2D8"
    },
    "686": {
      "branch": 23,
      "fn": "ECDSA.tryRecover",
      "offset": [
        2535,
        3501
      ],
      "op": "JUMPI",
      "path": "209"
    },
    "687": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2828,
        2832
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x20"
    },
    "689": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2813,
        2833
      ],
      "op": "DUP4",
      "path": "209"
    },
    "690": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2813,
        2833
      ],
      "op": "ADD",
      "path": "209"
    },
    "691": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2807,
        2834
      ],
      "op": "MLOAD",
      "path": "209"
    },
    "692": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2877,
        2881
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x40"
    },
    "694": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2862,
        2882
      ],
      "op": "DUP5",
      "path": "209"
    },
    "695": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2862,
        2882
      ],
      "op": "ADD",
      "path": "209"
    },
    "696": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2856,
        2883
      ],
      "op": "MLOAD",
      "path": "209"
    },
    "697": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2934,
        2938
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x60"
    },
    "699": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2919,
        2939
      ],
      "op": "DUP6",
      "path": "209"
    },
    "700": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2919,
        2939
      ],
      "op": "ADD",
      "path": "209"
    },
    "701": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2913,
        2940
      ],
      "op": "MLOAD",
      "path": "209"
    },
    "702": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2577,
        2586
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x0"
    },
    "704": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2905,
        2941
      ],
      "op": "BYTE",
      "path": "209"
    },
    "705": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2975,
        3000
      ],
      "op": "PUSH2",
      "path": "209",
      "statement": 10,
      "value": "0x2CC"
    },
    "708": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2986,
        2990
      ],
      "op": "DUP8",
      "path": "209"
    },
    "709": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2905,
        2941
      ],
      "op": "DUP3",
      "path": "209"
    },
    "710": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2807,
        2834
      ],
      "op": "DUP6",
      "path": "209"
    },
    "711": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2856,
        2883
      ],
      "op": "DUP6",
      "path": "209"
    },
    "712": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2975,
        2985
      ],
      "op": "PUSH2",
      "path": "209",
      "value": "0x4C6"
    },
    "715": {
      "fn": "ECDSA.tryRecover",
      "jump": "i",
      "offset": [
        2975,
        3000
      ],
      "op": "JUMP",
      "path": "209"
    },
    "716": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2975,
        3000
      ],
      "op": "JUMPDEST",
      "path": "209"
    },
    "717": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2968,
        3000
      ],
      "op": "SWAP5",
      "path": "209"
    },
    "718": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2968,
        3000
      ],
      "op": "POP",
      "path": "209"
    },
    "719": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2968,
        3000
      ],
      "op": "SWAP5",
      "path": "209"
    },
    "720": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2968,
        3000
      ],
      "op": "POP",
      "path": "209"
    },
    "721": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2968,
        3000
      ],
      "op": "POP",
      "path": "209"
    },
    "722": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2968,
        3000
      ],
      "op": "POP",
      "path": "209"
    },
    "723": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2968,
        3000
      ],
      "op": "POP",
      "path": "209"
    },
    "724": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2968,
        3000
      ],
      "op": "PUSH2",
      "path": "209",
      "value": "0x309"
    },
    "727": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2968,
        3000
      ],
      "op": "JUMP",
      "path": "209"
    },
    "728": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2535,
        3501
      ],
      "op": "JUMPDEST",
      "path": "209"
    },
    "729": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3021,
        3030
      ],
      "op": "DUP3",
      "path": "209"
    },
    "730": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3021,
        3037
      ],
      "op": "MLOAD",
      "path": "209"
    },
    "731": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3041,
        3043
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x40"
    },
    "733": {
      "branch": 24,
      "fn": "ECDSA.tryRecover",
      "offset": [
        3021,
        3043
      ],
      "op": "SUB",
      "path": "209"
    },
    "734": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3017,
        3501
      ],
      "op": "PUSH2",
      "path": "209",
      "value": "0x301"
    },
    "737": {
      "branch": 24,
      "fn": "ECDSA.tryRecover",
      "offset": [
        3017,
        3501
      ],
      "op": "JUMPI",
      "path": "209"
    },
    "738": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3290,
        3294
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x20"
    },
    "740": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3275,
        3295
      ],
      "op": "DUP4",
      "path": "209"
    },
    "741": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3275,
        3295
      ],
      "op": "ADD",
      "path": "209"
    },
    "742": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3269,
        3296
      ],
      "op": "MLOAD",
      "path": "209"
    },
    "743": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3340,
        3344
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x40"
    },
    "745": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3325,
        3345
      ],
      "op": "DUP5",
      "path": "209"
    },
    "746": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3325,
        3345
      ],
      "op": "ADD",
      "path": "209"
    },
    "747": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3319,
        3346
      ],
      "op": "MLOAD",
      "path": "209"
    },
    "748": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3380,
        3403
      ],
      "op": "PUSH2",
      "path": "209",
      "statement": 11,
      "value": "0x2F6"
    },
    "751": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3391,
        3395
      ],
      "op": "DUP7",
      "path": "209"
    },
    "752": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3269,
        3296
      ],
      "op": "DUP4",
      "path": "209"
    },
    "753": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3319,
        3346
      ],
      "op": "DUP4",
      "path": "209"
    },
    "754": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3380,
        3390
      ],
      "op": "PUSH2",
      "path": "209",
      "value": "0x5B3"
    },
    "757": {
      "fn": "ECDSA.tryRecover",
      "jump": "i",
      "offset": [
        3380,
        3403
      ],
      "op": "JUMP",
      "path": "209"
    },
    "758": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3380,
        3403
      ],
      "op": "JUMPDEST",
      "path": "209"
    },
    "759": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3373,
        3403
      ],
      "op": "SWAP4",
      "path": "209"
    },
    "760": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3373,
        3403
      ],
      "op": "POP",
      "path": "209"
    },
    "761": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3373,
        3403
      ],
      "op": "SWAP4",
      "path": "209"
    },
    "762": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3373,
        3403
      ],
      "op": "POP",
      "path": "209"
    },
    "763": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3373,
        3403
      ],
      "op": "POP",
      "path": "209"
    },
    "764": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3373,
        3403
      ],
      "op": "POP",
      "path": "209"
    },
    "765": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3373,
        3403
      ],
      "op": "PUSH2",
      "path": "209",
      "value": "0x309"
    },
    "768": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3373,
        3403
      ],
      "op": "JUMP",
      "path": "209"
    },
    "769": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3017,
        3501
      ],
      "op": "JUMPDEST",
      "path": "209"
    },
    "770": {
      "op": "POP"
    },
    "771": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3450,
        3451
      ],
      "op": "PUSH1",
      "path": "209",
      "statement": 12,
      "value": "0x0"
    },
    "773": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3450,
        3451
      ],
      "op": "SWAP1",
      "path": "209"
    },
    "774": {
      "op": "POP"
    },
    "775": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3454,
        3489
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x2"
    },
    "777": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3017,
        3501
      ],
      "op": "JUMPDEST",
      "path": "209"
    },
    "778": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2228,
        3507
      ],
      "op": "SWAP3",
      "path": "209"
    },
    "779": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2228,
        3507
      ],
      "op": "POP",
      "path": "209"
    },
    "780": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2228,
        3507
      ],
      "op": "SWAP3",
      "path": "209"
    },
    "781": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2228,
        3507
      ],
      "op": "SWAP1",
      "path": "209"
    },
    "782": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2228,
        3507
      ],
      "op": "POP",
      "path": "209"
    },
    "783": {
      "fn": "ECDSA.tryRecover",
      "jump": "o",
      "offset": [
        2228,
        3507
      ],
      "op": "JUMP",
      "path": "209"
    },
    "784": {
      "fn": "ECDSA._throwError",
      "offset": [
        533,
        1164
      ],
      "op": "JUMPDEST",
      "path": "209"
    },
    "785": {
      "fn": "ECDSA._throwError",
      "offset": [
        610,
        630
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x0"
    },
    "787": {
      "fn": "ECDSA._throwError",
      "offset": [
        601,
        606
      ],
      "op": "DUP2",
      "path": "209"
    },
    "788": {
      "fn": "ECDSA._throwError",
      "offset": [
        601,
        630
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x4"
    },
    "790": {
      "fn": "ECDSA._throwError",
      "offset": [
        601,
        630
      ],
      "op": "DUP2",
      "path": "209"
    },
    "791": {
      "fn": "ECDSA._throwError",
      "offset": [
        601,
        630
      ],
      "op": "GT",
      "path": "209"
    },
    "792": {
      "fn": "ECDSA._throwError",
      "offset": [
        601,
        630
      ],
      "op": "ISZERO",
      "path": "209"
    },
    "793": {
      "fn": "ECDSA._throwError",
      "offset": [
        601,
        630
      ],
      "op": "PUSH2",
      "path": "209",
      "value": "0x324"
    },
    "796": {
      "fn": "ECDSA._throwError",
      "offset": [
        601,
        630
      ],
      "op": "JUMPI",
      "path": "209"
    },
    "797": {
      "fn": "ECDSA._throwError",
      "offset": [
        601,
        630
      ],
      "op": "PUSH2",
      "path": "209",
      "value": "0x324"
    },
    "800": {
      "fn": "ECDSA._throwError",
      "offset": [
        601,
        630
      ],
      "op": "PUSH2",
      "path": "209",
      "value": "0x6ED"
    },
    "803": {
      "fn": "ECDSA._throwError",
      "jump": "i",
      "offset": [
        601,
        630
      ],
      "op": "JUMP",
      "path": "209"
    },
    "804": {
      "fn": "ECDSA._throwError",
      "offset": [
        601,
        630
      ],
      "op": "JUMPDEST",
      "path": "209"
    },
    "805": {
      "branch": 25,
      "fn": "ECDSA._throwError",
      "offset": [
        601,
        630
      ],
      "op": "SUB",
      "path": "209"
    },
    "806": {
      "fn": "ECDSA._throwError",
      "offset": [
        597,
        1158
      ],
      "op": "PUSH2",
      "path": "209",
      "value": "0x32C"
    },
    "809": {
      "branch": 25,
      "fn": "ECDSA._throwError",
      "offset": [
        597,
        1158
      ],
      "op": "JUMPI",
      "path": "209"
    },
    "810": {
      "fn": "ECDSA._throwError",
      "offset": [
        533,
        1164
      ],
      "op": "POP",
      "path": "209"
    },
    "811": {
      "fn": "ECDSA._throwError",
      "jump": "o",
      "offset": [
        533,
        1164
      ],
      "op": "JUMP",
      "path": "209"
    },
    "812": {
      "fn": "ECDSA._throwError",
      "offset": [
        597,
        1158
      ],
      "op": "JUMPDEST",
      "path": "209"
    },
    "813": {
      "fn": "ECDSA._throwError",
      "offset": [
        706,
        735
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x1"
    },
    "815": {
      "fn": "ECDSA._throwError",
      "offset": [
        697,
        702
      ],
      "op": "DUP2",
      "path": "209"
    },
    "816": {
      "fn": "ECDSA._throwError",
      "offset": [
        697,
        735
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x4"
    },
    "818": {
      "fn": "ECDSA._throwError",
      "offset": [
        697,
        735
      ],
      "op": "DUP2",
      "path": "209"
    },
    "819": {
      "fn": "ECDSA._throwError",
      "offset": [
        697,
        735
      ],
      "op": "GT",
      "path": "209"
    },
    "820": {
      "fn": "ECDSA._throwError",
      "offset": [
        697,
        735
      ],
      "op": "ISZERO",
      "path": "209"
    },
    "821": {
      "fn": "ECDSA._throwError",
      "offset": [
        697,
        735
      ],
      "op": "PUSH2",
      "path": "209",
      "value": "0x340"
    },
    "824": {
      "fn": "ECDSA._throwError",
      "offset": [
        697,
        735
      ],
      "op": "JUMPI",
      "path": "209"
    },
    "825": {
      "fn": "ECDSA._throwError",
      "offset": [
        697,
        735
      ],
      "op": "PUSH2",
      "path": "209",
      "value": "0x340"
    },
    "828": {
      "fn": "ECDSA._throwError",
      "offset": [
        697,
        735
      ],
      "op": "PUSH2",
      "path": "209",
      "value": "0x6ED"
    },
    "831": {
      "fn": "ECDSA._throwError",
      "jump": "i",
      "offset": [
        697,
        735
      ],
      "op": "JUMP",
      "path": "209"
    },
    "832": {
      "fn": "ECDSA._throwError",
      "offset": [
        697,
        735
      ],
      "op": "JUMPDEST",
      "path": "209"
    },
    "833": {
      "branch": 26,
      "fn": "ECDSA._throwError",
      "offset": [
        697,
        735
      ],
      "op": "SUB",
      "path": "209"
    },
    "834": {
      "fn": "ECDSA._throwError",
      "offset": [
        693,
        1158
      ],
      "op": "PUSH2",
      "path": "209",
      "value": "0x38D"
    },
    "837": {
      "branch": 26,
      "fn": "ECDSA._throwError",
      "offset": [
        693,
        1158
      ],
      "op": "JUMPI",
      "path": "209"
    },
    "838": {
      "fn": "ECDSA._throwError",
      "offset": [
        751,
        785
      ],
      "op": "PUSH1",
      "path": "209",
      "statement": 13,
      "value": "0x40"
    },
    "840": {
      "fn": "ECDSA._throwError",
      "offset": [
        751,
        785
      ],
      "op": "MLOAD",
      "path": "209"
    },
    "841": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "845": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "847": {
      "op": "SHL"
    },
    "848": {
      "fn": "ECDSA._throwError",
      "offset": [
        751,
        785
      ],
      "op": "DUP2",
      "path": "209"
    },
    "849": {
      "fn": "ECDSA._throwError",
      "offset": [
        751,
        785
      ],
      "op": "MSTORE",
      "path": "209"
    },
    "850": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "852": {
      "fn": "ECDSA._throwError",
      "offset": [
        751,
        785
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x4"
    },
    "854": {
      "fn": "ECDSA._throwError",
      "offset": [
        751,
        785
      ],
      "op": "DUP3",
      "path": "209"
    },
    "855": {
      "fn": "ECDSA._throwError",
      "offset": [
        751,
        785
      ],
      "op": "ADD",
      "path": "209"
    },
    "856": {
      "op": "MSTORE"
    },
    "857": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "859": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "861": {
      "op": "DUP3"
    },
    "862": {
      "op": "ADD"
    },
    "863": {
      "op": "MSTORE"
    },
    "864": {
      "op": "PUSH32",
      "value": "0x45434453413A20696E76616C6964207369676E61747572650000000000000000"
    },
    "897": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "899": {
      "op": "DUP3"
    },
    "900": {
      "op": "ADD"
    },
    "901": {
      "op": "MSTORE"
    },
    "902": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "904": {
      "op": "ADD"
    },
    "905": {
      "fn": "ECDSA._throwError",
      "offset": [
        751,
        785
      ],
      "op": "PUSH2",
      "path": "209",
      "value": "0x14E"
    },
    "908": {
      "op": "JUMP"
    },
    "909": {
      "fn": "ECDSA._throwError",
      "offset": [
        693,
        1158
      ],
      "op": "JUMPDEST",
      "path": "209"
    },
    "910": {
      "fn": "ECDSA._throwError",
      "offset": [
        815,
        850
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x2"
    },
    "912": {
      "fn": "ECDSA._throwError",
      "offset": [
        806,
        811
      ],
      "op": "DUP2",
      "path": "209"
    },
    "913": {
      "fn": "ECDSA._throwError",
      "offset": [
        806,
        850
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x4"
    },
    "915": {
      "fn": "ECDSA._throwError",
      "offset": [
        806,
        850
      ],
      "op": "DUP2",
      "path": "209"
    },
    "916": {
      "fn": "ECDSA._throwError",
      "offset": [
        806,
        850
      ],
      "op": "GT",
      "path": "209"
    },
    "917": {
      "fn": "ECDSA._throwError",
      "offset": [
        806,
        850
      ],
      "op": "ISZERO",
      "path": "209"
    },
    "918": {
      "fn": "ECDSA._throwError",
      "offset": [
        806,
        850
      ],
      "op": "PUSH2",
      "path": "209",
      "value": "0x3A1"
    },
    "921": {
      "fn": "ECDSA._throwError",
      "offset": [
        806,
        850
      ],
      "op": "JUMPI",
      "path": "209"
    },
    "922": {
      "fn": "ECDSA._throwError",
      "offset": [
        806,
        850
      ],
      "op": "PUSH2",
      "path": "209",
      "value": "0x3A1"
    },
    "925": {
      "fn": "ECDSA._throwError",
      "offset": [
        806,
        850
      ],
      "op": "PUSH2",
      "path": "209",
      "value": "0x6ED"
    },
    "928": {
      "fn": "ECDSA._throwError",
      "jump": "i",
      "offset": [
        806,
        850
      ],
      "op": "JUMP",
      "path": "209"
    },
    "929": {
      "fn": "ECDSA._throwError",
      "offset": [
        806,
        850
      ],
      "op": "JUMPDEST",
      "path": "209"
    },
    "930": {
      "branch": 27,
      "fn": "ECDSA._throwError",
      "offset": [
        806,
        850
      ],
      "op": "SUB",
      "path": "209"
    },
    "931": {
      "fn": "ECDSA._throwError",
      "offset": [
        802,
        1158
      ],
      "op": "PUSH2",
      "path": "209",
      "value": "0x3EE"
    },
    "934": {
      "branch": 27,
      "fn": "ECDSA._throwError",
      "offset": [
        802,
        1158
      ],
      "op": "JUMPI",
      "path": "209"
    },
    "935": {
      "fn": "ECDSA._throwError",
      "offset": [
        866,
        907
      ],
      "op": "PUSH1",
      "path": "209",
      "statement": 14,
      "value": "0x40"
    },
    "937": {
      "fn": "ECDSA._throwError",
      "offset": [
        866,
        907
      ],
      "op": "MLOAD",
      "path": "209"
    },
    "938": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "942": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "944": {
      "op": "SHL"
    },
    "945": {
      "fn": "ECDSA._throwError",
      "offset": [
        866,
        907
      ],
      "op": "DUP2",
      "path": "209"
    },
    "946": {
      "fn": "ECDSA._throwError",
      "offset": [
        866,
        907
      ],
      "op": "MSTORE",
      "path": "209"
    },
    "947": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "949": {
      "fn": "ECDSA._throwError",
      "offset": [
        866,
        907
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x4"
    },
    "951": {
      "fn": "ECDSA._throwError",
      "offset": [
        866,
        907
      ],
      "op": "DUP3",
      "path": "209"
    },
    "952": {
      "fn": "ECDSA._throwError",
      "offset": [
        866,
        907
      ],
      "op": "ADD",
      "path": "209"
    },
    "953": {
      "op": "MSTORE"
    },
    "954": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "956": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "958": {
      "op": "DUP3"
    },
    "959": {
      "op": "ADD"
    },
    "960": {
      "op": "MSTORE"
    },
    "961": {
      "op": "PUSH32",
      "value": "0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800"
    },
    "994": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "996": {
      "op": "DUP3"
    },
    "997": {
      "op": "ADD"
    },
    "998": {
      "op": "MSTORE"
    },
    "999": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1001": {
      "op": "ADD"
    },
    "1002": {
      "fn": "ECDSA._throwError",
      "offset": [
        866,
        907
      ],
      "op": "PUSH2",
      "path": "209",
      "value": "0x14E"
    },
    "1005": {
      "op": "JUMP"
    },
    "1006": {
      "fn": "ECDSA._throwError",
      "offset": [
        802,
        1158
      ],
      "op": "JUMPDEST",
      "path": "209"
    },
    "1007": {
      "fn": "ECDSA._throwError",
      "offset": [
        937,
        967
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x3"
    },
    "1009": {
      "fn": "ECDSA._throwError",
      "offset": [
        928,
        933
      ],
      "op": "DUP2",
      "path": "209"
    },
    "1010": {
      "fn": "ECDSA._throwError",
      "offset": [
        928,
        967
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x4"
    },
    "1012": {
      "fn": "ECDSA._throwError",
      "offset": [
        928,
        967
      ],
      "op": "DUP2",
      "path": "209"
    },
    "1013": {
      "fn": "ECDSA._throwError",
      "offset": [
        928,
        967
      ],
      "op": "GT",
      "path": "209"
    },
    "1014": {
      "fn": "ECDSA._throwError",
      "offset": [
        928,
        967
      ],
      "op": "ISZERO",
      "path": "209"
    },
    "1015": {
      "fn": "ECDSA._throwError",
      "offset": [
        928,
        967
      ],
      "op": "PUSH2",
      "path": "209",
      "value": "0x402"
    },
    "1018": {
      "fn": "ECDSA._throwError",
      "offset": [
        928,
        967
      ],
      "op": "JUMPI",
      "path": "209"
    },
    "1019": {
      "fn": "ECDSA._throwError",
      "offset": [
        928,
        967
      ],
      "op": "PUSH2",
      "path": "209",
      "value": "0x402"
    },
    "1022": {
      "fn": "ECDSA._throwError",
      "offset": [
        928,
        967
      ],
      "op": "PUSH2",
      "path": "209",
      "value": "0x6ED"
    },
    "1025": {
      "fn": "ECDSA._throwError",
      "jump": "i",
      "offset": [
        928,
        967
      ],
      "op": "JUMP",
      "path": "209"
    },
    "1026": {
      "fn": "ECDSA._throwError",
      "offset": [
        928,
        967
      ],
      "op": "JUMPDEST",
      "path": "209"
    },
    "1027": {
      "branch": 28,
      "fn": "ECDSA._throwError",
      "offset": [
        928,
        967
      ],
      "op": "SUB",
      "path": "209"
    },
    "1028": {
      "fn": "ECDSA._throwError",
      "offset": [
        924,
        1158
      ],
      "op": "PUSH2",
      "path": "209",
      "value": "0x45A"
    },
    "1031": {
      "branch": 28,
      "fn": "ECDSA._throwError",
      "offset": [
        924,
        1158
      ],
      "op": "JUMPI",
      "path": "209"
    },
    "1032": {
      "fn": "ECDSA._throwError",
      "offset": [
        983,
        1027
      ],
      "op": "PUSH1",
      "path": "209",
      "statement": 15,
      "value": "0x40"
    },
    "1034": {
      "fn": "ECDSA._throwError",
      "offset": [
        983,
        1027
      ],
      "op": "MLOAD",
      "path": "209"
    },
    "1035": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1039": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1041": {
      "op": "SHL"
    },
    "1042": {
      "fn": "ECDSA._throwError",
      "offset": [
        983,
        1027
      ],
      "op": "DUP2",
      "path": "209"
    },
    "1043": {
      "fn": "ECDSA._throwError",
      "offset": [
        983,
        1027
      ],
      "op": "MSTORE",
      "path": "209"
    },
    "1044": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1046": {
      "fn": "ECDSA._throwError",
      "offset": [
        983,
        1027
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x4"
    },
    "1048": {
      "fn": "ECDSA._throwError",
      "offset": [
        983,
        1027
      ],
      "op": "DUP3",
      "path": "209"
    },
    "1049": {
      "fn": "ECDSA._throwError",
      "offset": [
        983,
        1027
      ],
      "op": "ADD",
      "path": "209"
    },
    "1050": {
      "op": "MSTORE"
    },
    "1051": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "1053": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1055": {
      "op": "DUP3"
    },
    "1056": {
      "op": "ADD"
    },
    "1057": {
      "op": "MSTORE"
    },
    "1058": {
      "op": "PUSH32",
      "value": "0x45434453413A20696E76616C6964207369676E6174757265202773272076616C"
    },
    "1091": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1093": {
      "op": "DUP3"
    },
    "1094": {
      "op": "ADD"
    },
    "1095": {
      "op": "MSTORE"
    },
    "1096": {
      "op": "PUSH2",
      "value": "0x7565"
    },
    "1099": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "1101": {
      "op": "SHL"
    },
    "1102": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1104": {
      "op": "DUP3"
    },
    "1105": {
      "op": "ADD"
    },
    "1106": {
      "op": "MSTORE"
    },
    "1107": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1109": {
      "op": "ADD"
    },
    "1110": {
      "fn": "ECDSA._throwError",
      "offset": [
        983,
        1027
      ],
      "op": "PUSH2",
      "path": "209",
      "value": "0x14E"
    },
    "1113": {
      "op": "JUMP"
    },
    "1114": {
      "fn": "ECDSA._throwError",
      "offset": [
        924,
        1158
      ],
      "op": "JUMPDEST",
      "path": "209"
    },
    "1115": {
      "fn": "ECDSA._throwError",
      "offset": [
        1057,
        1087
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x4"
    },
    "1117": {
      "fn": "ECDSA._throwError",
      "offset": [
        1048,
        1053
      ],
      "op": "DUP2",
      "path": "209"
    },
    "1118": {
      "fn": "ECDSA._throwError",
      "offset": [
        1048,
        1087
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x4"
    },
    "1120": {
      "fn": "ECDSA._throwError",
      "offset": [
        1048,
        1087
      ],
      "op": "DUP2",
      "path": "209"
    },
    "1121": {
      "fn": "ECDSA._throwError",
      "offset": [
        1048,
        1087
      ],
      "op": "GT",
      "path": "209"
    },
    "1122": {
      "fn": "ECDSA._throwError",
      "offset": [
        1048,
        1087
      ],
      "op": "ISZERO",
      "path": "209"
    },
    "1123": {
      "fn": "ECDSA._throwError",
      "offset": [
        1048,
        1087
      ],
      "op": "PUSH2",
      "path": "209",
      "value": "0x46E"
    },
    "1126": {
      "fn": "ECDSA._throwError",
      "offset": [
        1048,
        1087
      ],
      "op": "JUMPI",
      "path": "209"
    },
    "1127": {
      "fn": "ECDSA._throwError",
      "offset": [
        1048,
        1087
      ],
      "op": "PUSH2",
      "path": "209",
      "value": "0x46E"
    },
    "1130": {
      "fn": "ECDSA._throwError",
      "offset": [
        1048,
        1087
      ],
      "op": "PUSH2",
      "path": "209",
      "value": "0x6ED"
    },
    "1133": {
      "fn": "ECDSA._throwError",
      "jump": "i",
      "offset": [
        1048,
        1087
      ],
      "op": "JUMP",
      "path": "209"
    },
    "1134": {
      "fn": "ECDSA._throwError",
      "offset": [
        1048,
        1087
      ],
      "op": "JUMPDEST",
      "path": "209"
    },
    "1135": {
      "branch": 29,
      "fn": "ECDSA._throwError",
      "offset": [
        1048,
        1087
      ],
      "op": "SUB",
      "path": "209"
    },
    "1136": {
      "fn": "ECDSA._throwError",
      "offset": [
        1044,
        1158
      ],
      "op": "PUSH2",
      "path": "209",
      "value": "0x22B"
    },
    "1139": {
      "branch": 29,
      "fn": "ECDSA._throwError",
      "offset": [
        1044,
        1158
      ],
      "op": "JUMPI",
      "path": "209"
    },
    "1140": {
      "fn": "ECDSA._throwError",
      "offset": [
        1103,
        1147
      ],
      "op": "PUSH1",
      "path": "209",
      "statement": 16,
      "value": "0x40"
    },
    "1142": {
      "fn": "ECDSA._throwError",
      "offset": [
        1103,
        1147
      ],
      "op": "MLOAD",
      "path": "209"
    },
    "1143": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1147": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1149": {
      "op": "SHL"
    },
    "1150": {
      "fn": "ECDSA._throwError",
      "offset": [
        1103,
        1147
      ],
      "op": "DUP2",
      "path": "209"
    },
    "1151": {
      "fn": "ECDSA._throwError",
      "offset": [
        1103,
        1147
      ],
      "op": "MSTORE",
      "path": "209"
    },
    "1152": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1154": {
      "fn": "ECDSA._throwError",
      "offset": [
        1103,
        1147
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x4"
    },
    "1156": {
      "fn": "ECDSA._throwError",
      "offset": [
        1103,
        1147
      ],
      "op": "DUP3",
      "path": "209"
    },
    "1157": {
      "fn": "ECDSA._throwError",
      "offset": [
        1103,
        1147
      ],
      "op": "ADD",
      "path": "209"
    },
    "1158": {
      "op": "MSTORE"
    },
    "1159": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "1161": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1163": {
      "op": "DUP3"
    },
    "1164": {
      "op": "ADD"
    },
    "1165": {
      "op": "MSTORE"
    },
    "1166": {
      "op": "PUSH32",
      "value": "0x45434453413A20696E76616C6964207369676E6174757265202776272076616C"
    },
    "1199": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1201": {
      "op": "DUP3"
    },
    "1202": {
      "op": "ADD"
    },
    "1203": {
      "op": "MSTORE"
    },
    "1204": {
      "op": "PUSH2",
      "value": "0x7565"
    },
    "1207": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "1209": {
      "op": "SHL"
    },
    "1210": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1212": {
      "op": "DUP3"
    },
    "1213": {
      "op": "ADD"
    },
    "1214": {
      "op": "MSTORE"
    },
    "1215": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1217": {
      "op": "ADD"
    },
    "1218": {
      "fn": "ECDSA._throwError",
      "offset": [
        1103,
        1147
      ],
      "op": "PUSH2",
      "path": "209",
      "value": "0x14E"
    },
    "1221": {
      "op": "JUMP"
    },
    "1222": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5701,
        7301
      ],
      "op": "JUMPDEST",
      "path": "209"
    },
    "1223": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5827,
        5834
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x0"
    },
    "1225": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5827,
        5834
      ],
      "op": "DUP1",
      "path": "209"
    },
    "1226": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6748,
        6814
      ],
      "op": "PUSH32",
      "path": "209",
      "value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
    },
    "1259": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6735,
        6814
      ],
      "op": "DUP4",
      "path": "209"
    },
    "1260": {
      "branch": 30,
      "fn": "ECDSA.tryRecover",
      "offset": [
        6735,
        6814
      ],
      "op": "GT",
      "path": "209"
    },
    "1261": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6731,
        6892
      ],
      "op": "ISZERO",
      "path": "209"
    },
    "1262": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6731,
        6892
      ],
      "op": "PUSH2",
      "path": "209",
      "value": "0x4FD"
    },
    "1265": {
      "branch": 30,
      "fn": "ECDSA.tryRecover",
      "offset": [
        6731,
        6892
      ],
      "op": "JUMPI",
      "path": "209"
    },
    "1266": {
      "op": "POP"
    },
    "1267": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6846,
        6847
      ],
      "op": "PUSH1",
      "path": "209",
      "statement": 17,
      "value": "0x0"
    },
    "1269": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6846,
        6847
      ],
      "op": "SWAP1",
      "path": "209"
    },
    "1270": {
      "op": "POP"
    },
    "1271": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6850,
        6880
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x3"
    },
    "1273": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6830,
        6881
      ],
      "op": "PUSH2",
      "path": "209",
      "value": "0x5AA"
    },
    "1276": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6830,
        6881
      ],
      "op": "JUMP",
      "path": "209"
    },
    "1277": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6731,
        6892
      ],
      "op": "JUMPDEST",
      "path": "209"
    },
    "1278": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6905,
        6906
      ],
      "op": "DUP5",
      "path": "209"
    },
    "1279": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6905,
        6912
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0xFF"
    },
    "1281": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6905,
        6912
      ],
      "op": "AND",
      "path": "209"
    },
    "1282": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6910,
        6912
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x1B"
    },
    "1284": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6905,
        6912
      ],
      "op": "EQ",
      "path": "209"
    },
    "1285": {
      "branch": 31,
      "fn": "ECDSA.tryRecover",
      "offset": [
        6905,
        6912
      ],
      "op": "ISZERO",
      "path": "209"
    },
    "1286": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6905,
        6923
      ],
      "op": "DUP1",
      "path": "209"
    },
    "1287": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6905,
        6923
      ],
      "op": "ISZERO",
      "path": "209"
    },
    "1288": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6905,
        6923
      ],
      "op": "PUSH2",
      "path": "209",
      "value": "0x515"
    },
    "1291": {
      "branch": 31,
      "fn": "ECDSA.tryRecover",
      "offset": [
        6905,
        6923
      ],
      "op": "JUMPI",
      "path": "209"
    },
    "1292": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6905,
        6923
      ],
      "op": "POP",
      "path": "209"
    },
    "1293": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6916,
        6917
      ],
      "op": "DUP5",
      "path": "209"
    },
    "1294": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6916,
        6923
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0xFF"
    },
    "1296": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6916,
        6923
      ],
      "op": "AND",
      "path": "209"
    },
    "1297": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6921,
        6923
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x1C"
    },
    "1299": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6916,
        6923
      ],
      "op": "EQ",
      "path": "209"
    },
    "1300": {
      "branch": 32,
      "fn": "ECDSA.tryRecover",
      "offset": [
        6916,
        6923
      ],
      "op": "ISZERO",
      "path": "209"
    },
    "1301": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6905,
        6923
      ],
      "op": "JUMPDEST",
      "path": "209"
    },
    "1302": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6901,
        7001
      ],
      "op": "ISZERO",
      "path": "209"
    },
    "1303": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6901,
        7001
      ],
      "op": "PUSH2",
      "path": "209",
      "value": "0x526"
    },
    "1306": {
      "branch": 32,
      "fn": "ECDSA.tryRecover",
      "offset": [
        6901,
        7001
      ],
      "op": "JUMPI",
      "path": "209"
    },
    "1307": {
      "op": "POP"
    },
    "1308": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6955,
        6956
      ],
      "op": "PUSH1",
      "path": "209",
      "statement": 18,
      "value": "0x0"
    },
    "1310": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6955,
        6956
      ],
      "op": "SWAP1",
      "path": "209"
    },
    "1311": {
      "op": "POP"
    },
    "1312": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6959,
        6989
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x4"
    },
    "1314": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6939,
        6990
      ],
      "op": "PUSH2",
      "path": "209",
      "value": "0x5AA"
    },
    "1317": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6939,
        6990
      ],
      "op": "JUMP",
      "path": "209"
    },
    "1318": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6901,
        7001
      ],
      "op": "JUMPDEST",
      "path": "209"
    },
    "1319": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x40"
    },
    "1321": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "DUP1",
      "path": "209"
    },
    "1322": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "MLOAD",
      "path": "209"
    },
    "1323": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7095,
        7109
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x0"
    },
    "1325": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "DUP1",
      "path": "209"
    },
    "1326": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "DUP3",
      "path": "209"
    },
    "1327": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "MSTORE",
      "path": "209"
    },
    "1328": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x20"
    },
    "1330": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "DUP3",
      "path": "209"
    },
    "1331": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "ADD",
      "path": "209"
    },
    "1332": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "DUP1",
      "path": "209"
    },
    "1333": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "DUP5",
      "path": "209"
    },
    "1334": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "MSTORE",
      "path": "209"
    },
    "1335": {
      "op": "DUP10"
    },
    "1336": {
      "op": "SWAP1"
    },
    "1337": {
      "op": "MSTORE"
    },
    "1338": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1340": {
      "op": "DUP9"
    },
    "1341": {
      "op": "AND"
    },
    "1342": {
      "op": "SWAP3"
    },
    "1343": {
      "op": "DUP3"
    },
    "1344": {
      "op": "ADD"
    },
    "1345": {
      "op": "SWAP3"
    },
    "1346": {
      "op": "SWAP1"
    },
    "1347": {
      "op": "SWAP3"
    },
    "1348": {
      "op": "MSTORE"
    },
    "1349": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1351": {
      "op": "DUP2"
    },
    "1352": {
      "op": "ADD"
    },
    "1353": {
      "op": "DUP7"
    },
    "1354": {
      "op": "SWAP1"
    },
    "1355": {
      "op": "MSTORE"
    },
    "1356": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1358": {
      "op": "DUP2"
    },
    "1359": {
      "op": "ADD"
    },
    "1360": {
      "op": "DUP6"
    },
    "1361": {
      "op": "SWAP1"
    },
    "1362": {
      "op": "MSTORE"
    },
    "1363": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x1"
    },
    "1365": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "SWAP1",
      "path": "209"
    },
    "1366": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1368": {
      "op": "ADD"
    },
    "1369": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x20"
    },
    "1371": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x40"
    },
    "1373": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "MLOAD",
      "path": "209"
    },
    "1374": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x20"
    },
    "1376": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "DUP2",
      "path": "209"
    },
    "1377": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "SUB",
      "path": "209"
    },
    "1378": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "SWAP1",
      "path": "209"
    },
    "1379": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "DUP1",
      "path": "209"
    },
    "1380": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "DUP5",
      "path": "209"
    },
    "1381": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "SUB",
      "path": "209"
    },
    "1382": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "SWAP1",
      "path": "209"
    },
    "1383": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "DUP6",
      "path": "209"
    },
    "1384": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "GAS",
      "path": "209"
    },
    "1385": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "STATICCALL",
      "path": "209"
    },
    "1386": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "ISZERO",
      "path": "209"
    },
    "1387": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "DUP1",
      "path": "209"
    },
    "1388": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "ISZERO",
      "path": "209"
    },
    "1389": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "PUSH2",
      "path": "209",
      "value": "0x57A"
    },
    "1392": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "JUMPI",
      "path": "209"
    },
    "1393": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "RETURNDATASIZE",
      "path": "209"
    },
    "1394": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x0"
    },
    "1396": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "DUP1",
      "path": "209"
    },
    "1397": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "RETURNDATACOPY",
      "path": "209"
    },
    "1398": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "RETURNDATASIZE",
      "path": "209"
    },
    "1399": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x0"
    },
    "1401": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "REVERT",
      "path": "209"
    },
    "1402": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "JUMPDEST",
      "path": "209"
    },
    "1403": {
      "op": "POP"
    },
    "1404": {
      "op": "POP"
    },
    "1405": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x40"
    },
    "1407": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "MLOAD",
      "path": "209"
    },
    "1408": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1410": {
      "op": "NOT"
    },
    "1411": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "ADD",
      "path": "209"
    },
    "1412": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "MLOAD",
      "path": "209"
    },
    "1413": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7112,
        7136
      ],
      "op": "SWAP2",
      "path": "209"
    },
    "1414": {
      "op": "POP"
    },
    "1415": {
      "op": "POP"
    },
    "1416": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1420": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1422": {
      "op": "SHL"
    },
    "1423": {
      "op": "SUB"
    },
    "1424": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7150,
        7170
      ],
      "op": "DUP2",
      "path": "209"
    },
    "1425": {
      "branch": 33,
      "fn": "ECDSA.tryRecover",
      "offset": [
        7150,
        7170
      ],
      "op": "AND",
      "path": "209"
    },
    "1426": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7146,
        7247
      ],
      "op": "PUSH2",
      "path": "209",
      "value": "0x5A3"
    },
    "1429": {
      "branch": 33,
      "fn": "ECDSA.tryRecover",
      "offset": [
        7146,
        7247
      ],
      "op": "JUMPI",
      "path": "209"
    },
    "1430": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7202,
        7203
      ],
      "op": "PUSH1",
      "path": "209",
      "statement": 19,
      "value": "0x0"
    },
    "1432": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7206,
        7235
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x1"
    },
    "1434": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7186,
        7236
      ],
      "op": "SWAP3",
      "path": "209"
    },
    "1435": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7186,
        7236
      ],
      "op": "POP",
      "path": "209"
    },
    "1436": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7186,
        7236
      ],
      "op": "SWAP3",
      "path": "209"
    },
    "1437": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7186,
        7236
      ],
      "op": "POP",
      "path": "209"
    },
    "1438": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7186,
        7236
      ],
      "op": "POP",
      "path": "209"
    },
    "1439": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7186,
        7236
      ],
      "op": "PUSH2",
      "path": "209",
      "value": "0x5AA"
    },
    "1442": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7186,
        7236
      ],
      "op": "JUMP",
      "path": "209"
    },
    "1443": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7146,
        7247
      ],
      "op": "JUMPDEST",
      "path": "209"
    },
    "1444": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7265,
        7271
      ],
      "op": "SWAP2",
      "path": "209",
      "statement": 20
    },
    "1445": {
      "op": "POP"
    },
    "1446": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7273,
        7293
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x0"
    },
    "1448": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7273,
        7293
      ],
      "op": "SWAP1",
      "path": "209"
    },
    "1449": {
      "op": "POP"
    },
    "1450": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5701,
        7301
      ],
      "op": "JUMPDEST",
      "path": "209"
    },
    "1451": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5701,
        7301
      ],
      "op": "SWAP5",
      "path": "209"
    },
    "1452": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5701,
        7301
      ],
      "op": "POP",
      "path": "209"
    },
    "1453": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5701,
        7301
      ],
      "op": "SWAP5",
      "path": "209"
    },
    "1454": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5701,
        7301
      ],
      "op": "SWAP3",
      "path": "209"
    },
    "1455": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5701,
        7301
      ],
      "op": "POP",
      "path": "209"
    },
    "1456": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5701,
        7301
      ],
      "op": "POP",
      "path": "209"
    },
    "1457": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5701,
        7301
      ],
      "op": "POP",
      "path": "209"
    },
    "1458": {
      "fn": "ECDSA.tryRecover",
      "jump": "o",
      "offset": [
        5701,
        7301
      ],
      "op": "JUMP",
      "path": "209"
    },
    "1459": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4774,
        5110
      ],
      "op": "JUMPDEST",
      "path": "209"
    },
    "1460": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4884,
        4891
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x0"
    },
    "1462": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4884,
        4891
      ],
      "op": "DUP1",
      "path": "209"
    },
    "1463": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1467": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1469": {
      "op": "SHL"
    },
    "1470": {
      "op": "SUB"
    },
    "1471": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4929,
        5009
      ],
      "op": "DUP4",
      "path": "209"
    },
    "1472": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4929,
        5009
      ],
      "op": "AND",
      "path": "209"
    },
    "1473": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4884,
        4891
      ],
      "op": "DUP2",
      "path": "209"
    },
    "1474": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5035,
        5060
      ],
      "op": "PUSH2",
      "path": "209",
      "value": "0x5D0"
    },
    "1477": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5051,
        5054
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0xFF"
    },
    "1479": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5036,
        5054
      ],
      "op": "DUP7",
      "path": "209"
    },
    "1480": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5036,
        5054
      ],
      "op": "SWAP1",
      "path": "209"
    },
    "1481": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5036,
        5054
      ],
      "op": "SHR",
      "path": "209"
    },
    "1482": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5058,
        5060
      ],
      "op": "PUSH1",
      "path": "209",
      "value": "0x1B"
    },
    "1484": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5035,
        5060
      ],
      "op": "PUSH2",
      "path": "209",
      "value": "0x703"
    },
    "1487": {
      "fn": "ECDSA.tryRecover",
      "jump": "i",
      "offset": [
        5035,
        5060
      ],
      "op": "JUMP",
      "path": "209"
    },
    "1488": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5035,
        5060
      ],
      "op": "JUMPDEST",
      "path": "209"
    },
    "1489": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5019,
        5061
      ],
      "op": "SWAP1",
      "path": "209"
    },
    "1490": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5019,
        5061
      ],
      "op": "POP",
      "path": "209"
    },
    "1491": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5078,
        5103
      ],
      "op": "PUSH2",
      "path": "209",
      "statement": 21,
      "value": "0x5DE"
    },
    "1494": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5089,
        5093
      ],
      "op": "DUP8",
      "path": "209"
    },
    "1495": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5095,
        5096
      ],
      "op": "DUP3",
      "path": "209"
    },
    "1496": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5098,
        5099
      ],
      "op": "DUP9",
      "path": "209"
    },
    "1497": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5101,
        5102
      ],
      "op": "DUP6",
      "path": "209"
    },
    "1498": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5078,
        5088
      ],
      "op": "PUSH2",
      "path": "209",
      "value": "0x4C6"
    },
    "1501": {
      "fn": "ECDSA.tryRecover",
      "jump": "i",
      "offset": [
        5078,
        5103
      ],
      "op": "JUMP",
      "path": "209"
    },
    "1502": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5078,
        5103
      ],
      "op": "JUMPDEST",
      "path": "209"
    },
    "1503": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5071,
        5103
      ],
      "op": "SWAP4",
      "path": "209"
    },
    "1504": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5071,
        5103
      ],
      "op": "POP",
      "path": "209"
    },
    "1505": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5071,
        5103
      ],
      "op": "SWAP4",
      "path": "209"
    },
    "1506": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5071,
        5103
      ],
      "op": "POP",
      "path": "209"
    },
    "1507": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5071,
        5103
      ],
      "op": "POP",
      "path": "209"
    },
    "1508": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5071,
        5103
      ],
      "op": "POP",
      "path": "209"
    },
    "1509": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4774,
        5110
      ],
      "op": "SWAP4",
      "path": "209"
    },
    "1510": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4774,
        5110
      ],
      "op": "POP",
      "path": "209"
    },
    "1511": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4774,
        5110
      ],
      "op": "SWAP4",
      "path": "209"
    },
    "1512": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4774,
        5110
      ],
      "op": "SWAP2",
      "path": "209"
    },
    "1513": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4774,
        5110
      ],
      "op": "POP",
      "path": "209"
    },
    "1514": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4774,
        5110
      ],
      "op": "POP",
      "path": "209"
    },
    "1515": {
      "fn": "ECDSA.tryRecover",
      "jump": "o",
      "offset": [
        4774,
        5110
      ],
      "op": "JUMP",
      "path": "209"
    },
    "1516": {
      "op": "JUMPDEST"
    },
    "1517": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1522": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1524": {
      "op": "SHL"
    },
    "1525": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1527": {
      "op": "MSTORE"
    },
    "1528": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "1530": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1532": {
      "op": "MSTORE"
    },
    "1533": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1535": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1537": {
      "op": "REVERT"
    },
    "1538": {
      "op": "JUMPDEST"
    },
    "1539": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1541": {
      "op": "DUP1"
    },
    "1542": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1544": {
      "op": "DUP4"
    },
    "1545": {
      "op": "DUP6"
    },
    "1546": {
      "op": "SUB"
    },
    "1547": {
      "op": "SLT"
    },
    "1548": {
      "op": "ISZERO"
    },
    "1549": {
      "op": "PUSH2",
      "value": "0x615"
    },
    "1552": {
      "op": "JUMPI"
    },
    "1553": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1555": {
      "op": "DUP1"
    },
    "1556": {
      "op": "REVERT"
    },
    "1557": {
      "op": "JUMPDEST"
    },
    "1558": {
      "op": "DUP3"
    },
    "1559": {
      "op": "CALLDATALOAD"
    },
    "1560": {
      "op": "SWAP2"
    },
    "1561": {
      "op": "POP"
    },
    "1562": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1564": {
      "op": "DUP4"
    },
    "1565": {
      "op": "ADD"
    },
    "1566": {
      "op": "CALLDATALOAD"
    },
    "1567": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1576": {
      "op": "DUP1"
    },
    "1577": {
      "op": "DUP3"
    },
    "1578": {
      "op": "GT"
    },
    "1579": {
      "op": "ISZERO"
    },
    "1580": {
      "op": "PUSH2",
      "value": "0x634"
    },
    "1583": {
      "op": "JUMPI"
    },
    "1584": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1586": {
      "op": "DUP1"
    },
    "1587": {
      "op": "REVERT"
    },
    "1588": {
      "op": "JUMPDEST"
    },
    "1589": {
      "op": "DUP2"
    },
    "1590": {
      "op": "DUP6"
    },
    "1591": {
      "op": "ADD"
    },
    "1592": {
      "op": "SWAP2"
    },
    "1593": {
      "op": "POP"
    },
    "1594": {
      "op": "DUP6"
    },
    "1595": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1597": {
      "op": "DUP4"
    },
    "1598": {
      "op": "ADD"
    },
    "1599": {
      "op": "SLT"
    },
    "1600": {
      "op": "PUSH2",
      "value": "0x648"
    },
    "1603": {
      "op": "JUMPI"
    },
    "1604": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1606": {
      "op": "DUP1"
    },
    "1607": {
      "op": "REVERT"
    },
    "1608": {
      "op": "JUMPDEST"
    },
    "1609": {
      "op": "DUP2"
    },
    "1610": {
      "op": "CALLDATALOAD"
    },
    "1611": {
      "op": "DUP2"
    },
    "1612": {
      "op": "DUP2"
    },
    "1613": {
      "op": "GT"
    },
    "1614": {
      "op": "ISZERO"
    },
    "1615": {
      "op": "PUSH2",
      "value": "0x65A"
    },
    "1618": {
      "op": "JUMPI"
    },
    "1619": {
      "op": "PUSH2",
      "value": "0x65A"
    },
    "1622": {
      "op": "PUSH2",
      "value": "0x5EC"
    },
    "1625": {
      "jump": "i",
      "op": "JUMP"
    },
    "1626": {
      "op": "JUMPDEST"
    },
    "1627": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1629": {
      "op": "MLOAD"
    },
    "1630": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1632": {
      "op": "DUP3"
    },
    "1633": {
      "op": "ADD"
    },
    "1634": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1636": {
      "op": "NOT"
    },
    "1637": {
      "op": "SWAP1"
    },
    "1638": {
      "op": "DUP2"
    },
    "1639": {
      "op": "AND"
    },
    "1640": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "1642": {
      "op": "ADD"
    },
    "1643": {
      "op": "AND"
    },
    "1644": {
      "op": "DUP2"
    },
    "1645": {
      "op": "ADD"
    },
    "1646": {
      "op": "SWAP1"
    },
    "1647": {
      "op": "DUP4"
    },
    "1648": {
      "op": "DUP3"
    },
    "1649": {
      "op": "GT"
    },
    "1650": {
      "op": "DUP2"
    },
    "1651": {
      "op": "DUP4"
    },
    "1652": {
      "op": "LT"
    },
    "1653": {
      "op": "OR"
    },
    "1654": {
      "op": "ISZERO"
    },
    "1655": {
      "op": "PUSH2",
      "value": "0x682"
    },
    "1658": {
      "op": "JUMPI"
    },
    "1659": {
      "op": "PUSH2",
      "value": "0x682"
    },
    "1662": {
      "op": "PUSH2",
      "value": "0x5EC"
    },
    "1665": {
      "jump": "i",
      "op": "JUMP"
    },
    "1666": {
      "op": "JUMPDEST"
    },
    "1667": {
      "op": "DUP2"
    },
    "1668": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1670": {
      "op": "MSTORE"
    },
    "1671": {
      "op": "DUP3"
    },
    "1672": {
      "op": "DUP2"
    },
    "1673": {
      "op": "MSTORE"
    },
    "1674": {
      "op": "DUP9"
    },
    "1675": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1677": {
      "op": "DUP5"
    },
    "1678": {
      "op": "DUP8"
    },
    "1679": {
      "op": "ADD"
    },
    "1680": {
      "op": "ADD"
    },
    "1681": {
      "op": "GT"
    },
    "1682": {
      "op": "ISZERO"
    },
    "1683": {
      "op": "PUSH2",
      "value": "0x69B"
    },
    "1686": {
      "op": "JUMPI"
    },
    "1687": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1689": {
      "op": "DUP1"
    },
    "1690": {
      "op": "REVERT"
    },
    "1691": {
      "op": "JUMPDEST"
    },
    "1692": {
      "op": "DUP3"
    },
    "1693": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1695": {
      "op": "DUP7"
    },
    "1696": {
      "op": "ADD"
    },
    "1697": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1699": {
      "op": "DUP4"
    },
    "1700": {
      "op": "ADD"
    },
    "1701": {
      "op": "CALLDATACOPY"
    },
    "1702": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1704": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1706": {
      "op": "DUP5"
    },
    "1707": {
      "op": "DUP4"
    },
    "1708": {
      "op": "ADD"
    },
    "1709": {
      "op": "ADD"
    },
    "1710": {
      "op": "MSTORE"
    },
    "1711": {
      "op": "DUP1"
    },
    "1712": {
      "op": "SWAP6"
    },
    "1713": {
      "op": "POP"
    },
    "1714": {
      "op": "POP"
    },
    "1715": {
      "op": "POP"
    },
    "1716": {
      "op": "POP"
    },
    "1717": {
      "op": "POP"
    },
    "1718": {
      "op": "POP"
    },
    "1719": {
      "op": "SWAP3"
    },
    "1720": {
      "op": "POP"
    },
    "1721": {
      "op": "SWAP3"
    },
    "1722": {
      "op": "SWAP1"
    },
    "1723": {
      "op": "POP"
    },
    "1724": {
      "jump": "o",
      "op": "JUMP"
    },
    "1725": {
      "op": "JUMPDEST"
    },
    "1726": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1728": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1730": {
      "op": "DUP3"
    },
    "1731": {
      "op": "DUP5"
    },
    "1732": {
      "op": "SUB"
    },
    "1733": {
      "op": "SLT"
    },
    "1734": {
      "op": "ISZERO"
    },
    "1735": {
      "op": "PUSH2",
      "value": "0x6CF"
    },
    "1738": {
      "op": "JUMPI"
    },
    "1739": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1741": {
      "op": "DUP1"
    },
    "1742": {
      "op": "REVERT"
    },
    "1743": {
      "op": "JUMPDEST"
    },
    "1744": {
      "op": "DUP2"
    },
    "1745": {
      "op": "CALLDATALOAD"
    },
    "1746": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1748": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1750": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1752": {
      "op": "SHL"
    },
    "1753": {
      "op": "SUB"
    },
    "1754": {
      "op": "DUP2"
    },
    "1755": {
      "op": "AND"
    },
    "1756": {
      "op": "DUP2"
    },
    "1757": {
      "op": "EQ"
    },
    "1758": {
      "op": "PUSH2",
      "value": "0x6E6"
    },
    "1761": {
      "op": "JUMPI"
    },
    "1762": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1764": {
      "op": "DUP1"
    },
    "1765": {
      "op": "REVERT"
    },
    "1766": {
      "op": "JUMPDEST"
    },
    "1767": {
      "op": "SWAP4"
    },
    "1768": {
      "op": "SWAP3"
    },
    "1769": {
      "op": "POP"
    },
    "1770": {
      "op": "POP"
    },
    "1771": {
      "op": "POP"
    },
    "1772": {
      "jump": "o",
      "op": "JUMP"
    },
    "1773": {
      "op": "JUMPDEST"
    },
    "1774": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1779": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1781": {
      "op": "SHL"
    },
    "1782": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1784": {
      "op": "MSTORE"
    },
    "1785": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "1787": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1789": {
      "op": "MSTORE"
    },
    "1790": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1792": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1794": {
      "op": "REVERT"
    },
    "1795": {
      "op": "JUMPDEST"
    },
    "1796": {
      "op": "DUP1"
    },
    "1797": {
      "op": "DUP3"
    },
    "1798": {
      "op": "ADD"
    },
    "1799": {
      "op": "DUP1"
    },
    "1800": {
      "op": "DUP3"
    },
    "1801": {
      "op": "GT"
    },
    "1802": {
      "op": "ISZERO"
    },
    "1803": {
      "op": "PUSH2",
      "value": "0xF2"
    },
    "1806": {
      "op": "JUMPI"
    },
    "1807": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1812": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1814": {
      "op": "SHL"
    },
    "1815": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1817": {
      "op": "MSTORE"
    },
    "1818": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1820": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1822": {
      "op": "MSTORE"
    },
    "1823": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1825": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1827": {
      "op": "REVERT"
    }
  },
  "sha1": "9d2a1ce33119146a31d04a06ae05955481a808a3",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../access/Ownable.sol\";\nimport \"../interfaces/IERC1271.sol\";\nimport \"../utils/cryptography/ECDSA.sol\";\n\ncontract ERC1271WalletMock is Ownable, IERC1271 {\n    constructor(address originalOwner) {\n        transferOwnership(originalOwner);\n    }\n\n    function isValidSignature(bytes32 hash, bytes memory signature) public view override returns (bytes4 magicValue) {\n        return ECDSA.recover(hash, signature) == owner() ? this.isValidSignature.selector : bytes4(0);\n    }\n}\n",
  "sourceMap": "170:369:69:-:0;;;224:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:11;719:10:202;921:18:11;:32::i;:::-;269::69;287:13;269:17;:32::i;:::-;224:84;170:369;;2270:187:11;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:11;;;-1:-1:-1;;;;;;2378:17:11;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;1918:198::-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:11;719:10:202;1248:23:11;1240:68;;;;-1:-1:-1;;;1240:68:11;;511:2:249;1240:68:11;;;493:21:249;;;530:18;;;523:30;589:34;569:18;;;562:62;641:18;;1240:68:11;;;;;;;;;-1:-1:-1;;;;;2006:22:11;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:11;;872:2:249;1998:73:11::1;::::0;::::1;854:21:249::0;911:2;891:18;;;884:30;950:34;930:18;;;923:62;-1:-1:-1;;;1001:18:249;;;994:36;1047:19;;1998:73:11::1;670:402:249::0;1998:73:11::1;2081:28;2100:8:::0;2081:18:::1;:28::i;:::-;1918:198:::0;:::o;14:290:249:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:249;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:249:o;670:402::-;170:369:69;;;;;;",
  "sourcePath": "contracts/openzeppelin-solidity/contracts/mocks/ERC1271WalletMock.sol",
  "type": "contract"
}